#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_BalloonDropManager

#include "Basic.hpp"

#include "S_WeightedDropStructure_structs.hpp"
#include "Engine_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "S_BalloonDropTierStruct_structs.hpp"
#include "JP_classes.hpp"
#include "E_TimeOfDay_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_BalloonDropManager.BP_BalloonDropManager_C
// 0x00E0 (0x0378 - 0x0298)
class ABP_BalloonDropManager_C final : public ARandomLootSpawner
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0298(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x02A0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<class ABP_BalloonDropSpawn_C*>         Spawners;                                          // 0x02A8(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, DisableEditOnInstance)
	class ADowntimeManager_C*                     DowntimeManager;                                   // 0x02B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           SpawnTimerHandle;                                  // 0x02C0(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class ABP_BalloonDropSpawn_C*                 LastUsedSpawner;                                   // 0x02C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	TArray<struct FS_WeightedDropStructure>       DEPRECATEDPossibleDrops;                           // 0x02D0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<struct FS_BalloonDropTierStruct>       Drops;                                             // 0x02E0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	int32                                         CurrentTier;                                       // 0x02F0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2F4[0x4];                                      // 0x02F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           TierDurationHandle;                                // 0x02F8(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTagContainer                  LowQualityItemIDs;                                 // 0x0300(0x0020)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FGameplayTagContainer                  MediumQualityItemIDs;                              // 0x0320(0x0020)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FGameplayTagContainer                  HighQualityItemIDs;                                // 0x0340(0x0020)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FGameplayTag                           SuddenDeathItemID;                                 // 0x0360(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	int32                                         CurrentSpawnerIndex;                               // 0x0368(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         TotalSpawners;                                     // 0x036C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        ChanceToSpawnTrapPercent;                          // 0x0370(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ClearAllTimers();
	void Determine_Index(double RandomValue, TArray<double>& Values, int32* FoundIndex);
	void ExecuteUbergraph_BP_BalloonDropManager(int32 EntryPoint);
	void FindAndSaveAllSpawns();
	void FindCrateVariantToUse(const struct FGameplayTag& ItemId, class UClass** CrateToSpawn);
	void FindWeightedIndex(int32* Index_0);
	double GetRandomSpawnDelay();
	void GetSpawnPoint(class ABP_BalloonDropSpawn_C** Spawn);
	void GetTierDuration(double* Duration);
	bool LastTierReached();
	void OnEnded_19361ABD4CBCC5673DC91D95B3265AC2();
	void OnLoaded_CF06CFC34CA7E6F21477C7A8E87C58C3(class UObject* Loaded);
	void OnTimeOfDayChanged(E_TimeOfDay TimeOfDay);
	void ReceiveBeginPlay();
	void SpawnSuddenDeathItem();
	void StartNextTier();
	void StartTimersForCurrentTier();
	void TryRandomiseTrapSpawn(class UClass* OriginalSpawn, class UClass** SpawnOut);
	void TrySpawnBalloonCrate();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_BalloonDropManager_C">();
	}
	static class ABP_BalloonDropManager_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_BalloonDropManager_C>();
	}
};
static_assert(alignof(ABP_BalloonDropManager_C) == 0x000008, "Wrong alignment on ABP_BalloonDropManager_C");
static_assert(sizeof(ABP_BalloonDropManager_C) == 0x000378, "Wrong size on ABP_BalloonDropManager_C");
static_assert(offsetof(ABP_BalloonDropManager_C, UberGraphFrame) == 0x000298, "Member 'ABP_BalloonDropManager_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_BalloonDropManager_C, DefaultSceneRoot) == 0x0002A0, "Member 'ABP_BalloonDropManager_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ABP_BalloonDropManager_C, Spawners) == 0x0002A8, "Member 'ABP_BalloonDropManager_C::Spawners' has a wrong offset!");
static_assert(offsetof(ABP_BalloonDropManager_C, DowntimeManager) == 0x0002B8, "Member 'ABP_BalloonDropManager_C::DowntimeManager' has a wrong offset!");
static_assert(offsetof(ABP_BalloonDropManager_C, SpawnTimerHandle) == 0x0002C0, "Member 'ABP_BalloonDropManager_C::SpawnTimerHandle' has a wrong offset!");
static_assert(offsetof(ABP_BalloonDropManager_C, LastUsedSpawner) == 0x0002C8, "Member 'ABP_BalloonDropManager_C::LastUsedSpawner' has a wrong offset!");
static_assert(offsetof(ABP_BalloonDropManager_C, DEPRECATEDPossibleDrops) == 0x0002D0, "Member 'ABP_BalloonDropManager_C::DEPRECATEDPossibleDrops' has a wrong offset!");
static_assert(offsetof(ABP_BalloonDropManager_C, Drops) == 0x0002E0, "Member 'ABP_BalloonDropManager_C::Drops' has a wrong offset!");
static_assert(offsetof(ABP_BalloonDropManager_C, CurrentTier) == 0x0002F0, "Member 'ABP_BalloonDropManager_C::CurrentTier' has a wrong offset!");
static_assert(offsetof(ABP_BalloonDropManager_C, TierDurationHandle) == 0x0002F8, "Member 'ABP_BalloonDropManager_C::TierDurationHandle' has a wrong offset!");
static_assert(offsetof(ABP_BalloonDropManager_C, LowQualityItemIDs) == 0x000300, "Member 'ABP_BalloonDropManager_C::LowQualityItemIDs' has a wrong offset!");
static_assert(offsetof(ABP_BalloonDropManager_C, MediumQualityItemIDs) == 0x000320, "Member 'ABP_BalloonDropManager_C::MediumQualityItemIDs' has a wrong offset!");
static_assert(offsetof(ABP_BalloonDropManager_C, HighQualityItemIDs) == 0x000340, "Member 'ABP_BalloonDropManager_C::HighQualityItemIDs' has a wrong offset!");
static_assert(offsetof(ABP_BalloonDropManager_C, SuddenDeathItemID) == 0x000360, "Member 'ABP_BalloonDropManager_C::SuddenDeathItemID' has a wrong offset!");
static_assert(offsetof(ABP_BalloonDropManager_C, CurrentSpawnerIndex) == 0x000368, "Member 'ABP_BalloonDropManager_C::CurrentSpawnerIndex' has a wrong offset!");
static_assert(offsetof(ABP_BalloonDropManager_C, TotalSpawners) == 0x00036C, "Member 'ABP_BalloonDropManager_C::TotalSpawners' has a wrong offset!");
static_assert(offsetof(ABP_BalloonDropManager_C, ChanceToSpawnTrapPercent) == 0x000370, "Member 'ABP_BalloonDropManager_C::ChanceToSpawnTrapPercent' has a wrong offset!");

}

