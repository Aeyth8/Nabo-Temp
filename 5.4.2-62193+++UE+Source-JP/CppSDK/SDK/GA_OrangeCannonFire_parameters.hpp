#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GA_OrangeCannonFire

#include "Basic.hpp"

#include "GameplayAbilities_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "GASIW_structs.hpp"


namespace SDK::Params
{

// Function GA_OrangeCannonFire.GA_OrangeCannonFire_C.CancelAim
// 0x0028 (0x0028 - 0x0000)
struct GA_OrangeCannonFire_C_CancelAim final
{
public:
	class UAbilitySystemComponent*                CallFunc_GetAbilitySystemComponentFromActorInfo_ReturnValue; // 0x0000(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwningActorFromActorInfo_ReturnValue;  // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<struct FActiveGameplayEffectHandle>    CallFunc_GetActiveEffectsWithAllTags_ReturnValue;  // 0x0010(0x0010)(ReferenceParm)
	bool                                          CallFunc_Array_IsNotEmpty_ReturnValue;             // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_OrangeCannonFire_C_CancelAim) == 0x000008, "Wrong alignment on GA_OrangeCannonFire_C_CancelAim");
static_assert(sizeof(GA_OrangeCannonFire_C_CancelAim) == 0x000028, "Wrong size on GA_OrangeCannonFire_C_CancelAim");
static_assert(offsetof(GA_OrangeCannonFire_C_CancelAim, CallFunc_GetAbilitySystemComponentFromActorInfo_ReturnValue) == 0x000000, "Member 'GA_OrangeCannonFire_C_CancelAim::CallFunc_GetAbilitySystemComponentFromActorInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_OrangeCannonFire_C_CancelAim, CallFunc_GetOwningActorFromActorInfo_ReturnValue) == 0x000008, "Member 'GA_OrangeCannonFire_C_CancelAim::CallFunc_GetOwningActorFromActorInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_OrangeCannonFire_C_CancelAim, CallFunc_GetActiveEffectsWithAllTags_ReturnValue) == 0x000010, "Member 'GA_OrangeCannonFire_C_CancelAim::CallFunc_GetActiveEffectsWithAllTags_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_OrangeCannonFire_C_CancelAim, CallFunc_Array_IsNotEmpty_ReturnValue) == 0x000020, "Member 'GA_OrangeCannonFire_C_CancelAim::CallFunc_Array_IsNotEmpty_ReturnValue' has a wrong offset!");

// Function GA_OrangeCannonFire.GA_OrangeCannonFire_C.CreateCosmeticProjectile
// 0x0110 (0x0110 - 0x0000)
struct GA_OrangeCannonFire_C_CreateCosmeticProjectile final
{
public:
	class APawn*                                  CallFunc_GetPlayerPawn_ReturnValue;                // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_HasAuthority_ReturnValue;              // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAbilitySystemComponent*                CallFunc_GetAbilitySystemComponent_ReturnValue;    // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UAbilitySystemComponentIW*              K2Node_DynamicCast_AsAbility_System_Component_IW;  // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwningActorFromActorInfo_ReturnValue;  // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayCueParameters                 CallFunc_CreateCosmeticProjectileCueParameters_ReturnValue; // 0x0030(0x00D8)(ContainsInstancedReference)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_OrangeCannonFire_C_CreateCosmeticProjectile) == 0x000008, "Wrong alignment on GA_OrangeCannonFire_C_CreateCosmeticProjectile");
static_assert(sizeof(GA_OrangeCannonFire_C_CreateCosmeticProjectile) == 0x000110, "Wrong size on GA_OrangeCannonFire_C_CreateCosmeticProjectile");
static_assert(offsetof(GA_OrangeCannonFire_C_CreateCosmeticProjectile, CallFunc_GetPlayerPawn_ReturnValue) == 0x000000, "Member 'GA_OrangeCannonFire_C_CreateCosmeticProjectile::CallFunc_GetPlayerPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_OrangeCannonFire_C_CreateCosmeticProjectile, CallFunc_K2_HasAuthority_ReturnValue) == 0x000008, "Member 'GA_OrangeCannonFire_C_CreateCosmeticProjectile::CallFunc_K2_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_OrangeCannonFire_C_CreateCosmeticProjectile, CallFunc_GetAbilitySystemComponent_ReturnValue) == 0x000010, "Member 'GA_OrangeCannonFire_C_CreateCosmeticProjectile::CallFunc_GetAbilitySystemComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_OrangeCannonFire_C_CreateCosmeticProjectile, K2Node_DynamicCast_AsAbility_System_Component_IW) == 0x000018, "Member 'GA_OrangeCannonFire_C_CreateCosmeticProjectile::K2Node_DynamicCast_AsAbility_System_Component_IW' has a wrong offset!");
static_assert(offsetof(GA_OrangeCannonFire_C_CreateCosmeticProjectile, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'GA_OrangeCannonFire_C_CreateCosmeticProjectile::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(GA_OrangeCannonFire_C_CreateCosmeticProjectile, CallFunc_GetOwningActorFromActorInfo_ReturnValue) == 0x000028, "Member 'GA_OrangeCannonFire_C_CreateCosmeticProjectile::CallFunc_GetOwningActorFromActorInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_OrangeCannonFire_C_CreateCosmeticProjectile, CallFunc_CreateCosmeticProjectileCueParameters_ReturnValue) == 0x000030, "Member 'GA_OrangeCannonFire_C_CreateCosmeticProjectile::CallFunc_CreateCosmeticProjectileCueParameters_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_OrangeCannonFire_C_CreateCosmeticProjectile, CallFunc_HasAuthority_ReturnValue) == 0x000108, "Member 'GA_OrangeCannonFire_C_CreateCosmeticProjectile::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");

// Function GA_OrangeCannonFire.GA_OrangeCannonFire_C.CreateCosmeticProjectileCueParameters
// 0x0300 (0x0300 - 0x0000)
struct GA_OrangeCannonFire_C_CreateCosmeticProjectileCueParameters final
{
public:
	struct FGameplayCueParameters                 ReturnValue;                                       // 0x0000(0x00D8)(Parm, OutParm, ReturnParm, ContainsInstancedReference)
	uint8                                         Pad_D8[0x8];                                       // 0x00D8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetProjectileData_ReturnValue;            // 0x00E0(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_GetProjectileData_OwnerAsPawn;            // 0x0140(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetProjectileData_LocalSpaceVelocity;     // 0x0148(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetProjectileData_ChargePercentage;       // 0x0160(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetProjectileData_GravityScale;           // 0x0168(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetProjectileData_MinDamage;              // 0x0170(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetProjectileData_MaxDamage;              // 0x0178(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetProjectileData_MinSpeed;               // 0x0180(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetProjectileData_MaxSpeed;               // 0x0188(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetGravityScale_ReturnValue;              // 0x0190(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue;                         // 0x0198(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x01A0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x01B8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x01D0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UEquipmentInstance*                     CallFunc_GetAssociatedEquipment_ReturnValue;       // 0x01E8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_RotatorToVector_ReturnValue;         // 0x01F0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetAvatarActorFromActorInfo_ReturnValue;  // 0x0208(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_ResidentCharacter_C*                K2Node_DynamicCast_AsBP_Resident_Character;        // 0x0210(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0218(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_219[0x7];                                      // 0x0219(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayCueParameters                 CallFunc_MakeGameplayCueParameters_ReturnValue;    // 0x0220(0x00D8)(ContainsInstancedReference)
	float                                         CallFunc_MakeGameplayCueParameters_RawMagnitude_ImplicitCast; // 0x02F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeGameplayCueParameters_NormalizedMagnitude_ImplicitCast; // 0x02FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_OrangeCannonFire_C_CreateCosmeticProjectileCueParameters) == 0x000010, "Wrong alignment on GA_OrangeCannonFire_C_CreateCosmeticProjectileCueParameters");
static_assert(sizeof(GA_OrangeCannonFire_C_CreateCosmeticProjectileCueParameters) == 0x000300, "Wrong size on GA_OrangeCannonFire_C_CreateCosmeticProjectileCueParameters");
static_assert(offsetof(GA_OrangeCannonFire_C_CreateCosmeticProjectileCueParameters, ReturnValue) == 0x000000, "Member 'GA_OrangeCannonFire_C_CreateCosmeticProjectileCueParameters::ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_OrangeCannonFire_C_CreateCosmeticProjectileCueParameters, CallFunc_GetProjectileData_ReturnValue) == 0x0000E0, "Member 'GA_OrangeCannonFire_C_CreateCosmeticProjectileCueParameters::CallFunc_GetProjectileData_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_OrangeCannonFire_C_CreateCosmeticProjectileCueParameters, CallFunc_GetProjectileData_OwnerAsPawn) == 0x000140, "Member 'GA_OrangeCannonFire_C_CreateCosmeticProjectileCueParameters::CallFunc_GetProjectileData_OwnerAsPawn' has a wrong offset!");
static_assert(offsetof(GA_OrangeCannonFire_C_CreateCosmeticProjectileCueParameters, CallFunc_GetProjectileData_LocalSpaceVelocity) == 0x000148, "Member 'GA_OrangeCannonFire_C_CreateCosmeticProjectileCueParameters::CallFunc_GetProjectileData_LocalSpaceVelocity' has a wrong offset!");
static_assert(offsetof(GA_OrangeCannonFire_C_CreateCosmeticProjectileCueParameters, CallFunc_GetProjectileData_ChargePercentage) == 0x000160, "Member 'GA_OrangeCannonFire_C_CreateCosmeticProjectileCueParameters::CallFunc_GetProjectileData_ChargePercentage' has a wrong offset!");
static_assert(offsetof(GA_OrangeCannonFire_C_CreateCosmeticProjectileCueParameters, CallFunc_GetProjectileData_GravityScale) == 0x000168, "Member 'GA_OrangeCannonFire_C_CreateCosmeticProjectileCueParameters::CallFunc_GetProjectileData_GravityScale' has a wrong offset!");
static_assert(offsetof(GA_OrangeCannonFire_C_CreateCosmeticProjectileCueParameters, CallFunc_GetProjectileData_MinDamage) == 0x000170, "Member 'GA_OrangeCannonFire_C_CreateCosmeticProjectileCueParameters::CallFunc_GetProjectileData_MinDamage' has a wrong offset!");
static_assert(offsetof(GA_OrangeCannonFire_C_CreateCosmeticProjectileCueParameters, CallFunc_GetProjectileData_MaxDamage) == 0x000178, "Member 'GA_OrangeCannonFire_C_CreateCosmeticProjectileCueParameters::CallFunc_GetProjectileData_MaxDamage' has a wrong offset!");
static_assert(offsetof(GA_OrangeCannonFire_C_CreateCosmeticProjectileCueParameters, CallFunc_GetProjectileData_MinSpeed) == 0x000180, "Member 'GA_OrangeCannonFire_C_CreateCosmeticProjectileCueParameters::CallFunc_GetProjectileData_MinSpeed' has a wrong offset!");
static_assert(offsetof(GA_OrangeCannonFire_C_CreateCosmeticProjectileCueParameters, CallFunc_GetProjectileData_MaxSpeed) == 0x000188, "Member 'GA_OrangeCannonFire_C_CreateCosmeticProjectileCueParameters::CallFunc_GetProjectileData_MaxSpeed' has a wrong offset!");
static_assert(offsetof(GA_OrangeCannonFire_C_CreateCosmeticProjectileCueParameters, CallFunc_GetGravityScale_ReturnValue) == 0x000190, "Member 'GA_OrangeCannonFire_C_CreateCosmeticProjectileCueParameters::CallFunc_GetGravityScale_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_OrangeCannonFire_C_CreateCosmeticProjectileCueParameters, CallFunc_Lerp_ReturnValue) == 0x000198, "Member 'GA_OrangeCannonFire_C_CreateCosmeticProjectileCueParameters::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_OrangeCannonFire_C_CreateCosmeticProjectileCueParameters, CallFunc_BreakTransform_Location) == 0x0001A0, "Member 'GA_OrangeCannonFire_C_CreateCosmeticProjectileCueParameters::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(GA_OrangeCannonFire_C_CreateCosmeticProjectileCueParameters, CallFunc_BreakTransform_Rotation) == 0x0001B8, "Member 'GA_OrangeCannonFire_C_CreateCosmeticProjectileCueParameters::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(GA_OrangeCannonFire_C_CreateCosmeticProjectileCueParameters, CallFunc_BreakTransform_Scale) == 0x0001D0, "Member 'GA_OrangeCannonFire_C_CreateCosmeticProjectileCueParameters::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(GA_OrangeCannonFire_C_CreateCosmeticProjectileCueParameters, CallFunc_GetAssociatedEquipment_ReturnValue) == 0x0001E8, "Member 'GA_OrangeCannonFire_C_CreateCosmeticProjectileCueParameters::CallFunc_GetAssociatedEquipment_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_OrangeCannonFire_C_CreateCosmeticProjectileCueParameters, CallFunc_Conv_RotatorToVector_ReturnValue) == 0x0001F0, "Member 'GA_OrangeCannonFire_C_CreateCosmeticProjectileCueParameters::CallFunc_Conv_RotatorToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_OrangeCannonFire_C_CreateCosmeticProjectileCueParameters, CallFunc_GetAvatarActorFromActorInfo_ReturnValue) == 0x000208, "Member 'GA_OrangeCannonFire_C_CreateCosmeticProjectileCueParameters::CallFunc_GetAvatarActorFromActorInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_OrangeCannonFire_C_CreateCosmeticProjectileCueParameters, K2Node_DynamicCast_AsBP_Resident_Character) == 0x000210, "Member 'GA_OrangeCannonFire_C_CreateCosmeticProjectileCueParameters::K2Node_DynamicCast_AsBP_Resident_Character' has a wrong offset!");
static_assert(offsetof(GA_OrangeCannonFire_C_CreateCosmeticProjectileCueParameters, K2Node_DynamicCast_bSuccess) == 0x000218, "Member 'GA_OrangeCannonFire_C_CreateCosmeticProjectileCueParameters::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(GA_OrangeCannonFire_C_CreateCosmeticProjectileCueParameters, CallFunc_MakeGameplayCueParameters_ReturnValue) == 0x000220, "Member 'GA_OrangeCannonFire_C_CreateCosmeticProjectileCueParameters::CallFunc_MakeGameplayCueParameters_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_OrangeCannonFire_C_CreateCosmeticProjectileCueParameters, CallFunc_MakeGameplayCueParameters_RawMagnitude_ImplicitCast) == 0x0002F8, "Member 'GA_OrangeCannonFire_C_CreateCosmeticProjectileCueParameters::CallFunc_MakeGameplayCueParameters_RawMagnitude_ImplicitCast' has a wrong offset!");
static_assert(offsetof(GA_OrangeCannonFire_C_CreateCosmeticProjectileCueParameters, CallFunc_MakeGameplayCueParameters_NormalizedMagnitude_ImplicitCast) == 0x0002FC, "Member 'GA_OrangeCannonFire_C_CreateCosmeticProjectileCueParameters::CallFunc_MakeGameplayCueParameters_NormalizedMagnitude_ImplicitCast' has a wrong offset!");

// Function GA_OrangeCannonFire.GA_OrangeCannonFire_C.CreateRandomDirection
// 0x0078 (0x0078 - 0x0000)
struct GA_OrangeCannonFire_C_CreateRandomDirection final
{
public:
	class AActor*                                 CallFunc_GetAvatarActorFromActorInfo_ReturnValue;  // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetTagStackCount_ReturnValue;             // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharacterJP*                           K2Node_DynamicCast_AsCharacter_JP;                 // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_RotatorToVector_ReturnValue;         // 0x0028(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_RandomUnitVectorInConeInDegreesFromStream_ReturnValue; // 0x0040(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_Conv_VectorToRotator_ReturnValue;         // 0x0058(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_RandomUnitVectorInConeInDegreesFromStream_ConeHalfAngleInDegrees_ImplicitCast; // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_OrangeCannonFire_C_CreateRandomDirection) == 0x000008, "Wrong alignment on GA_OrangeCannonFire_C_CreateRandomDirection");
static_assert(sizeof(GA_OrangeCannonFire_C_CreateRandomDirection) == 0x000078, "Wrong size on GA_OrangeCannonFire_C_CreateRandomDirection");
static_assert(offsetof(GA_OrangeCannonFire_C_CreateRandomDirection, CallFunc_GetAvatarActorFromActorInfo_ReturnValue) == 0x000000, "Member 'GA_OrangeCannonFire_C_CreateRandomDirection::CallFunc_GetAvatarActorFromActorInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_OrangeCannonFire_C_CreateRandomDirection, CallFunc_GetTagStackCount_ReturnValue) == 0x000008, "Member 'GA_OrangeCannonFire_C_CreateRandomDirection::CallFunc_GetTagStackCount_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_OrangeCannonFire_C_CreateRandomDirection, K2Node_DynamicCast_AsCharacter_JP) == 0x000010, "Member 'GA_OrangeCannonFire_C_CreateRandomDirection::K2Node_DynamicCast_AsCharacter_JP' has a wrong offset!");
static_assert(offsetof(GA_OrangeCannonFire_C_CreateRandomDirection, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'GA_OrangeCannonFire_C_CreateRandomDirection::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(GA_OrangeCannonFire_C_CreateRandomDirection, CallFunc_Conv_IntToDouble_ReturnValue) == 0x000020, "Member 'GA_OrangeCannonFire_C_CreateRandomDirection::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_OrangeCannonFire_C_CreateRandomDirection, CallFunc_Conv_RotatorToVector_ReturnValue) == 0x000028, "Member 'GA_OrangeCannonFire_C_CreateRandomDirection::CallFunc_Conv_RotatorToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_OrangeCannonFire_C_CreateRandomDirection, CallFunc_RandomUnitVectorInConeInDegreesFromStream_ReturnValue) == 0x000040, "Member 'GA_OrangeCannonFire_C_CreateRandomDirection::CallFunc_RandomUnitVectorInConeInDegreesFromStream_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_OrangeCannonFire_C_CreateRandomDirection, CallFunc_Conv_VectorToRotator_ReturnValue) == 0x000058, "Member 'GA_OrangeCannonFire_C_CreateRandomDirection::CallFunc_Conv_VectorToRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_OrangeCannonFire_C_CreateRandomDirection, CallFunc_RandomUnitVectorInConeInDegreesFromStream_ConeHalfAngleInDegrees_ImplicitCast) == 0x000070, "Member 'GA_OrangeCannonFire_C_CreateRandomDirection::CallFunc_RandomUnitVectorInConeInDegreesFromStream_ConeHalfAngleInDegrees_ImplicitCast' has a wrong offset!");

// Function GA_OrangeCannonFire.GA_OrangeCannonFire_C.ExecuteUbergraph_GA_OrangeCannonFire
// 0x03F0 (0x03F0 - 0x0000)
struct GA_OrangeCannonFire_C_ExecuteUbergraph_GA_OrangeCannonFire final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UEquipmentInstance*                     CallFunc_GetAssociatedEquipment_ReturnValue;       // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<struct FSpawnedActorData>              CallFunc_GetSpawnedActors_ReturnValue;             // 0x0010(0x0010)(ReferenceParm)
	struct FSpawnedActorData                      CallFunc_Array_Get_Item;                           // 0x0020(0x0100)(NoDestructor)
	bool                                          CallFunc_K2_CommitAbility_ReturnValue;             // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_121[0x7];                                      // 0x0121(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IChargableEquipmentInterface_C> K2Node_DynamicCast_AsChargable_Equipment_Interface; // 0x0128(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0138(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_139[0x7];                                      // 0x0139(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             K2Node_CustomEvent_Spawn_Transform;                // 0x0140(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  K2Node_CustomEvent_Owner;                          // 0x01A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_CustomEvent_LocalVelocity;                  // 0x01A8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_CustomEvent_PercentageCharged;              // 0x01C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_CustomEvent_GravityScale;                   // 0x01C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_CustomEvent_MinDamage;                      // 0x01D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_CustomEvent_MaxDamage;                      // 0x01D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_CustomEvent_MinSpeed;                       // 0x01E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_CustomEvent_MaxSpeed;                       // 0x01E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_CustomEvent_SructureDamageMultiplier;       // 0x01F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue;                         // 0x01F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwningActorFromActorInfo_ReturnValue;  // 0x0200(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_HasAuthority_ReturnValue;              // 0x0208(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_209[0x7];                                      // 0x0209(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  K2Node_DynamicCast_AsPawn;                         // 0x0210(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0218(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_HasAuthority_ReturnValue_1;            // 0x0219(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21A[0x6];                                      // 0x021A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayCueParameters                 CallFunc_GetEquipableTargetCueParameters_ReturnValue; // 0x0220(0x00D8)(ContainsInstancedReference)
	bool                                          CallFunc_IsLocallyControlled_ReturnValue;          // 0x02F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2F9[0x7];                                      // 0x02F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetProjectileData_ReturnValue;            // 0x0300(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_GetProjectileData_OwnerAsPawn;            // 0x0360(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetProjectileData_LocalSpaceVelocity;     // 0x0368(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetProjectileData_ChargePercentage;       // 0x0380(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetProjectileData_GravityScale;           // 0x0388(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetProjectileData_MinDamage;              // 0x0390(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetProjectileData_MaxDamage;              // 0x0398(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetProjectileData_MinSpeed;               // 0x03A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetProjectileData_MaxSpeed;               // 0x03A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAmmo_HasAmmo;                          // 0x03B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3B1[0x7];                                      // 0x03B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimMontage*                           CallFunc_GetMontageFromCount_MontageOutputFPP;     // 0x03B8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           CallFunc_GetMontageFromCount_MontageOutputTPP;     // 0x03C0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Get_Structure_Damage_Multiplier_Damage_Multiplier; // 0x03C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Get_Structure_Damage_Multiplier_MultiplierFound; // 0x03CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLocallyControlled_ReturnValue_1;        // 0x03CD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3CE[0x2];                                      // 0x03CE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwningActorFromActorInfo_ReturnValue_1; // 0x03D0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        CallFunc_K2_GetRootComponent_ReturnValue;          // 0x03D8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UForceFeedbackComponent*                CallFunc_SpawnForceFeedbackAttached_ReturnValue;   // 0x03E0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Server_SpawnProjectiles_SructureDamageMultiplier_ImplicitCast; // 0x03E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_OrangeCannonFire_C_ExecuteUbergraph_GA_OrangeCannonFire) == 0x000010, "Wrong alignment on GA_OrangeCannonFire_C_ExecuteUbergraph_GA_OrangeCannonFire");
static_assert(sizeof(GA_OrangeCannonFire_C_ExecuteUbergraph_GA_OrangeCannonFire) == 0x0003F0, "Wrong size on GA_OrangeCannonFire_C_ExecuteUbergraph_GA_OrangeCannonFire");
static_assert(offsetof(GA_OrangeCannonFire_C_ExecuteUbergraph_GA_OrangeCannonFire, EntryPoint) == 0x000000, "Member 'GA_OrangeCannonFire_C_ExecuteUbergraph_GA_OrangeCannonFire::EntryPoint' has a wrong offset!");
static_assert(offsetof(GA_OrangeCannonFire_C_ExecuteUbergraph_GA_OrangeCannonFire, CallFunc_GetAssociatedEquipment_ReturnValue) == 0x000008, "Member 'GA_OrangeCannonFire_C_ExecuteUbergraph_GA_OrangeCannonFire::CallFunc_GetAssociatedEquipment_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_OrangeCannonFire_C_ExecuteUbergraph_GA_OrangeCannonFire, CallFunc_GetSpawnedActors_ReturnValue) == 0x000010, "Member 'GA_OrangeCannonFire_C_ExecuteUbergraph_GA_OrangeCannonFire::CallFunc_GetSpawnedActors_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_OrangeCannonFire_C_ExecuteUbergraph_GA_OrangeCannonFire, CallFunc_Array_Get_Item) == 0x000020, "Member 'GA_OrangeCannonFire_C_ExecuteUbergraph_GA_OrangeCannonFire::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(GA_OrangeCannonFire_C_ExecuteUbergraph_GA_OrangeCannonFire, CallFunc_K2_CommitAbility_ReturnValue) == 0x000120, "Member 'GA_OrangeCannonFire_C_ExecuteUbergraph_GA_OrangeCannonFire::CallFunc_K2_CommitAbility_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_OrangeCannonFire_C_ExecuteUbergraph_GA_OrangeCannonFire, K2Node_DynamicCast_AsChargable_Equipment_Interface) == 0x000128, "Member 'GA_OrangeCannonFire_C_ExecuteUbergraph_GA_OrangeCannonFire::K2Node_DynamicCast_AsChargable_Equipment_Interface' has a wrong offset!");
static_assert(offsetof(GA_OrangeCannonFire_C_ExecuteUbergraph_GA_OrangeCannonFire, K2Node_DynamicCast_bSuccess) == 0x000138, "Member 'GA_OrangeCannonFire_C_ExecuteUbergraph_GA_OrangeCannonFire::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(GA_OrangeCannonFire_C_ExecuteUbergraph_GA_OrangeCannonFire, K2Node_CustomEvent_Spawn_Transform) == 0x000140, "Member 'GA_OrangeCannonFire_C_ExecuteUbergraph_GA_OrangeCannonFire::K2Node_CustomEvent_Spawn_Transform' has a wrong offset!");
static_assert(offsetof(GA_OrangeCannonFire_C_ExecuteUbergraph_GA_OrangeCannonFire, K2Node_CustomEvent_Owner) == 0x0001A0, "Member 'GA_OrangeCannonFire_C_ExecuteUbergraph_GA_OrangeCannonFire::K2Node_CustomEvent_Owner' has a wrong offset!");
static_assert(offsetof(GA_OrangeCannonFire_C_ExecuteUbergraph_GA_OrangeCannonFire, K2Node_CustomEvent_LocalVelocity) == 0x0001A8, "Member 'GA_OrangeCannonFire_C_ExecuteUbergraph_GA_OrangeCannonFire::K2Node_CustomEvent_LocalVelocity' has a wrong offset!");
static_assert(offsetof(GA_OrangeCannonFire_C_ExecuteUbergraph_GA_OrangeCannonFire, K2Node_CustomEvent_PercentageCharged) == 0x0001C0, "Member 'GA_OrangeCannonFire_C_ExecuteUbergraph_GA_OrangeCannonFire::K2Node_CustomEvent_PercentageCharged' has a wrong offset!");
static_assert(offsetof(GA_OrangeCannonFire_C_ExecuteUbergraph_GA_OrangeCannonFire, K2Node_CustomEvent_GravityScale) == 0x0001C8, "Member 'GA_OrangeCannonFire_C_ExecuteUbergraph_GA_OrangeCannonFire::K2Node_CustomEvent_GravityScale' has a wrong offset!");
static_assert(offsetof(GA_OrangeCannonFire_C_ExecuteUbergraph_GA_OrangeCannonFire, K2Node_CustomEvent_MinDamage) == 0x0001D0, "Member 'GA_OrangeCannonFire_C_ExecuteUbergraph_GA_OrangeCannonFire::K2Node_CustomEvent_MinDamage' has a wrong offset!");
static_assert(offsetof(GA_OrangeCannonFire_C_ExecuteUbergraph_GA_OrangeCannonFire, K2Node_CustomEvent_MaxDamage) == 0x0001D8, "Member 'GA_OrangeCannonFire_C_ExecuteUbergraph_GA_OrangeCannonFire::K2Node_CustomEvent_MaxDamage' has a wrong offset!");
static_assert(offsetof(GA_OrangeCannonFire_C_ExecuteUbergraph_GA_OrangeCannonFire, K2Node_CustomEvent_MinSpeed) == 0x0001E0, "Member 'GA_OrangeCannonFire_C_ExecuteUbergraph_GA_OrangeCannonFire::K2Node_CustomEvent_MinSpeed' has a wrong offset!");
static_assert(offsetof(GA_OrangeCannonFire_C_ExecuteUbergraph_GA_OrangeCannonFire, K2Node_CustomEvent_MaxSpeed) == 0x0001E8, "Member 'GA_OrangeCannonFire_C_ExecuteUbergraph_GA_OrangeCannonFire::K2Node_CustomEvent_MaxSpeed' has a wrong offset!");
static_assert(offsetof(GA_OrangeCannonFire_C_ExecuteUbergraph_GA_OrangeCannonFire, K2Node_CustomEvent_SructureDamageMultiplier) == 0x0001F0, "Member 'GA_OrangeCannonFire_C_ExecuteUbergraph_GA_OrangeCannonFire::K2Node_CustomEvent_SructureDamageMultiplier' has a wrong offset!");
static_assert(offsetof(GA_OrangeCannonFire_C_ExecuteUbergraph_GA_OrangeCannonFire, CallFunc_Lerp_ReturnValue) == 0x0001F8, "Member 'GA_OrangeCannonFire_C_ExecuteUbergraph_GA_OrangeCannonFire::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_OrangeCannonFire_C_ExecuteUbergraph_GA_OrangeCannonFire, CallFunc_GetOwningActorFromActorInfo_ReturnValue) == 0x000200, "Member 'GA_OrangeCannonFire_C_ExecuteUbergraph_GA_OrangeCannonFire::CallFunc_GetOwningActorFromActorInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_OrangeCannonFire_C_ExecuteUbergraph_GA_OrangeCannonFire, CallFunc_K2_HasAuthority_ReturnValue) == 0x000208, "Member 'GA_OrangeCannonFire_C_ExecuteUbergraph_GA_OrangeCannonFire::CallFunc_K2_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_OrangeCannonFire_C_ExecuteUbergraph_GA_OrangeCannonFire, K2Node_DynamicCast_AsPawn) == 0x000210, "Member 'GA_OrangeCannonFire_C_ExecuteUbergraph_GA_OrangeCannonFire::K2Node_DynamicCast_AsPawn' has a wrong offset!");
static_assert(offsetof(GA_OrangeCannonFire_C_ExecuteUbergraph_GA_OrangeCannonFire, K2Node_DynamicCast_bSuccess_1) == 0x000218, "Member 'GA_OrangeCannonFire_C_ExecuteUbergraph_GA_OrangeCannonFire::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(GA_OrangeCannonFire_C_ExecuteUbergraph_GA_OrangeCannonFire, CallFunc_K2_HasAuthority_ReturnValue_1) == 0x000219, "Member 'GA_OrangeCannonFire_C_ExecuteUbergraph_GA_OrangeCannonFire::CallFunc_K2_HasAuthority_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_OrangeCannonFire_C_ExecuteUbergraph_GA_OrangeCannonFire, CallFunc_GetEquipableTargetCueParameters_ReturnValue) == 0x000220, "Member 'GA_OrangeCannonFire_C_ExecuteUbergraph_GA_OrangeCannonFire::CallFunc_GetEquipableTargetCueParameters_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_OrangeCannonFire_C_ExecuteUbergraph_GA_OrangeCannonFire, CallFunc_IsLocallyControlled_ReturnValue) == 0x0002F8, "Member 'GA_OrangeCannonFire_C_ExecuteUbergraph_GA_OrangeCannonFire::CallFunc_IsLocallyControlled_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_OrangeCannonFire_C_ExecuteUbergraph_GA_OrangeCannonFire, CallFunc_GetProjectileData_ReturnValue) == 0x000300, "Member 'GA_OrangeCannonFire_C_ExecuteUbergraph_GA_OrangeCannonFire::CallFunc_GetProjectileData_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_OrangeCannonFire_C_ExecuteUbergraph_GA_OrangeCannonFire, CallFunc_GetProjectileData_OwnerAsPawn) == 0x000360, "Member 'GA_OrangeCannonFire_C_ExecuteUbergraph_GA_OrangeCannonFire::CallFunc_GetProjectileData_OwnerAsPawn' has a wrong offset!");
static_assert(offsetof(GA_OrangeCannonFire_C_ExecuteUbergraph_GA_OrangeCannonFire, CallFunc_GetProjectileData_LocalSpaceVelocity) == 0x000368, "Member 'GA_OrangeCannonFire_C_ExecuteUbergraph_GA_OrangeCannonFire::CallFunc_GetProjectileData_LocalSpaceVelocity' has a wrong offset!");
static_assert(offsetof(GA_OrangeCannonFire_C_ExecuteUbergraph_GA_OrangeCannonFire, CallFunc_GetProjectileData_ChargePercentage) == 0x000380, "Member 'GA_OrangeCannonFire_C_ExecuteUbergraph_GA_OrangeCannonFire::CallFunc_GetProjectileData_ChargePercentage' has a wrong offset!");
static_assert(offsetof(GA_OrangeCannonFire_C_ExecuteUbergraph_GA_OrangeCannonFire, CallFunc_GetProjectileData_GravityScale) == 0x000388, "Member 'GA_OrangeCannonFire_C_ExecuteUbergraph_GA_OrangeCannonFire::CallFunc_GetProjectileData_GravityScale' has a wrong offset!");
static_assert(offsetof(GA_OrangeCannonFire_C_ExecuteUbergraph_GA_OrangeCannonFire, CallFunc_GetProjectileData_MinDamage) == 0x000390, "Member 'GA_OrangeCannonFire_C_ExecuteUbergraph_GA_OrangeCannonFire::CallFunc_GetProjectileData_MinDamage' has a wrong offset!");
static_assert(offsetof(GA_OrangeCannonFire_C_ExecuteUbergraph_GA_OrangeCannonFire, CallFunc_GetProjectileData_MaxDamage) == 0x000398, "Member 'GA_OrangeCannonFire_C_ExecuteUbergraph_GA_OrangeCannonFire::CallFunc_GetProjectileData_MaxDamage' has a wrong offset!");
static_assert(offsetof(GA_OrangeCannonFire_C_ExecuteUbergraph_GA_OrangeCannonFire, CallFunc_GetProjectileData_MinSpeed) == 0x0003A0, "Member 'GA_OrangeCannonFire_C_ExecuteUbergraph_GA_OrangeCannonFire::CallFunc_GetProjectileData_MinSpeed' has a wrong offset!");
static_assert(offsetof(GA_OrangeCannonFire_C_ExecuteUbergraph_GA_OrangeCannonFire, CallFunc_GetProjectileData_MaxSpeed) == 0x0003A8, "Member 'GA_OrangeCannonFire_C_ExecuteUbergraph_GA_OrangeCannonFire::CallFunc_GetProjectileData_MaxSpeed' has a wrong offset!");
static_assert(offsetof(GA_OrangeCannonFire_C_ExecuteUbergraph_GA_OrangeCannonFire, CallFunc_HasAmmo_HasAmmo) == 0x0003B0, "Member 'GA_OrangeCannonFire_C_ExecuteUbergraph_GA_OrangeCannonFire::CallFunc_HasAmmo_HasAmmo' has a wrong offset!");
static_assert(offsetof(GA_OrangeCannonFire_C_ExecuteUbergraph_GA_OrangeCannonFire, CallFunc_GetMontageFromCount_MontageOutputFPP) == 0x0003B8, "Member 'GA_OrangeCannonFire_C_ExecuteUbergraph_GA_OrangeCannonFire::CallFunc_GetMontageFromCount_MontageOutputFPP' has a wrong offset!");
static_assert(offsetof(GA_OrangeCannonFire_C_ExecuteUbergraph_GA_OrangeCannonFire, CallFunc_GetMontageFromCount_MontageOutputTPP) == 0x0003C0, "Member 'GA_OrangeCannonFire_C_ExecuteUbergraph_GA_OrangeCannonFire::CallFunc_GetMontageFromCount_MontageOutputTPP' has a wrong offset!");
static_assert(offsetof(GA_OrangeCannonFire_C_ExecuteUbergraph_GA_OrangeCannonFire, CallFunc_Get_Structure_Damage_Multiplier_Damage_Multiplier) == 0x0003C8, "Member 'GA_OrangeCannonFire_C_ExecuteUbergraph_GA_OrangeCannonFire::CallFunc_Get_Structure_Damage_Multiplier_Damage_Multiplier' has a wrong offset!");
static_assert(offsetof(GA_OrangeCannonFire_C_ExecuteUbergraph_GA_OrangeCannonFire, CallFunc_Get_Structure_Damage_Multiplier_MultiplierFound) == 0x0003CC, "Member 'GA_OrangeCannonFire_C_ExecuteUbergraph_GA_OrangeCannonFire::CallFunc_Get_Structure_Damage_Multiplier_MultiplierFound' has a wrong offset!");
static_assert(offsetof(GA_OrangeCannonFire_C_ExecuteUbergraph_GA_OrangeCannonFire, CallFunc_IsLocallyControlled_ReturnValue_1) == 0x0003CD, "Member 'GA_OrangeCannonFire_C_ExecuteUbergraph_GA_OrangeCannonFire::CallFunc_IsLocallyControlled_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_OrangeCannonFire_C_ExecuteUbergraph_GA_OrangeCannonFire, CallFunc_GetOwningActorFromActorInfo_ReturnValue_1) == 0x0003D0, "Member 'GA_OrangeCannonFire_C_ExecuteUbergraph_GA_OrangeCannonFire::CallFunc_GetOwningActorFromActorInfo_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_OrangeCannonFire_C_ExecuteUbergraph_GA_OrangeCannonFire, CallFunc_K2_GetRootComponent_ReturnValue) == 0x0003D8, "Member 'GA_OrangeCannonFire_C_ExecuteUbergraph_GA_OrangeCannonFire::CallFunc_K2_GetRootComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_OrangeCannonFire_C_ExecuteUbergraph_GA_OrangeCannonFire, CallFunc_SpawnForceFeedbackAttached_ReturnValue) == 0x0003E0, "Member 'GA_OrangeCannonFire_C_ExecuteUbergraph_GA_OrangeCannonFire::CallFunc_SpawnForceFeedbackAttached_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_OrangeCannonFire_C_ExecuteUbergraph_GA_OrangeCannonFire, CallFunc_Server_SpawnProjectiles_SructureDamageMultiplier_ImplicitCast) == 0x0003E8, "Member 'GA_OrangeCannonFire_C_ExecuteUbergraph_GA_OrangeCannonFire::CallFunc_Server_SpawnProjectiles_SructureDamageMultiplier_ImplicitCast' has a wrong offset!");

// Function GA_OrangeCannonFire.GA_OrangeCannonFire_C.GetProjectileData
// 0x0240 (0x0240 - 0x0000)
struct GA_OrangeCannonFire_C_GetProjectileData final
{
public:
	struct FTransform                             ReturnValue;                                       // 0x0000(0x0060)(Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  OwnerAsPawn_0;                                     // 0x0060(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                LocalSpaceVelocity;                                // 0x0068(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        ChargePercentage;                                  // 0x0080(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        GravityScale;                                      // 0x0088(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        MinDamage;                                         // 0x0090(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        MaxDamage;                                         // 0x0098(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        MinSpeed;                                          // 0x00A0(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        MaxSpeed;                                          // 0x00A8(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B1[0x7];                                       // 0x00B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GetMaxSpeed_ReturnValue;                  // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetMinSpeed_MinSpeed;                     // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsHipFire_ReturnValue;                    // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C9[0x3];                                       // 0x00C9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetTagStackCount_ReturnValue;             // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetTagStackCount_ReturnValue_1;           // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_DC[0x4];                                       // 0x00DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GetGravityScale_ReturnValue;              // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue_1;           // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Get_Percentage_Charged_ReturnValue;       // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F8[0x8];                                       // 0x00F8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetProjectileTransform_ReturnValue;       // 0x0100(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetLocalVelocity_LocalSpaceVelocity;      // 0x0160(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_178[0x8];                                      // 0x0178(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetRandomizedSpawnTransform_ReturnValue;  // 0x0180(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             K2Node_Select_Default;                             // 0x01E0(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_OrangeCannonFire_C_GetProjectileData) == 0x000010, "Wrong alignment on GA_OrangeCannonFire_C_GetProjectileData");
static_assert(sizeof(GA_OrangeCannonFire_C_GetProjectileData) == 0x000240, "Wrong size on GA_OrangeCannonFire_C_GetProjectileData");
static_assert(offsetof(GA_OrangeCannonFire_C_GetProjectileData, ReturnValue) == 0x000000, "Member 'GA_OrangeCannonFire_C_GetProjectileData::ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_OrangeCannonFire_C_GetProjectileData, OwnerAsPawn_0) == 0x000060, "Member 'GA_OrangeCannonFire_C_GetProjectileData::OwnerAsPawn_0' has a wrong offset!");
static_assert(offsetof(GA_OrangeCannonFire_C_GetProjectileData, LocalSpaceVelocity) == 0x000068, "Member 'GA_OrangeCannonFire_C_GetProjectileData::LocalSpaceVelocity' has a wrong offset!");
static_assert(offsetof(GA_OrangeCannonFire_C_GetProjectileData, ChargePercentage) == 0x000080, "Member 'GA_OrangeCannonFire_C_GetProjectileData::ChargePercentage' has a wrong offset!");
static_assert(offsetof(GA_OrangeCannonFire_C_GetProjectileData, GravityScale) == 0x000088, "Member 'GA_OrangeCannonFire_C_GetProjectileData::GravityScale' has a wrong offset!");
static_assert(offsetof(GA_OrangeCannonFire_C_GetProjectileData, MinDamage) == 0x000090, "Member 'GA_OrangeCannonFire_C_GetProjectileData::MinDamage' has a wrong offset!");
static_assert(offsetof(GA_OrangeCannonFire_C_GetProjectileData, MaxDamage) == 0x000098, "Member 'GA_OrangeCannonFire_C_GetProjectileData::MaxDamage' has a wrong offset!");
static_assert(offsetof(GA_OrangeCannonFire_C_GetProjectileData, MinSpeed) == 0x0000A0, "Member 'GA_OrangeCannonFire_C_GetProjectileData::MinSpeed' has a wrong offset!");
static_assert(offsetof(GA_OrangeCannonFire_C_GetProjectileData, MaxSpeed) == 0x0000A8, "Member 'GA_OrangeCannonFire_C_GetProjectileData::MaxSpeed' has a wrong offset!");
static_assert(offsetof(GA_OrangeCannonFire_C_GetProjectileData, Temp_bool_Variable) == 0x0000B0, "Member 'GA_OrangeCannonFire_C_GetProjectileData::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(GA_OrangeCannonFire_C_GetProjectileData, CallFunc_GetMaxSpeed_ReturnValue) == 0x0000B8, "Member 'GA_OrangeCannonFire_C_GetProjectileData::CallFunc_GetMaxSpeed_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_OrangeCannonFire_C_GetProjectileData, CallFunc_GetMinSpeed_MinSpeed) == 0x0000C0, "Member 'GA_OrangeCannonFire_C_GetProjectileData::CallFunc_GetMinSpeed_MinSpeed' has a wrong offset!");
static_assert(offsetof(GA_OrangeCannonFire_C_GetProjectileData, CallFunc_IsHipFire_ReturnValue) == 0x0000C8, "Member 'GA_OrangeCannonFire_C_GetProjectileData::CallFunc_IsHipFire_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_OrangeCannonFire_C_GetProjectileData, CallFunc_GetTagStackCount_ReturnValue) == 0x0000CC, "Member 'GA_OrangeCannonFire_C_GetProjectileData::CallFunc_GetTagStackCount_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_OrangeCannonFire_C_GetProjectileData, CallFunc_Conv_IntToDouble_ReturnValue) == 0x0000D0, "Member 'GA_OrangeCannonFire_C_GetProjectileData::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_OrangeCannonFire_C_GetProjectileData, CallFunc_GetTagStackCount_ReturnValue_1) == 0x0000D8, "Member 'GA_OrangeCannonFire_C_GetProjectileData::CallFunc_GetTagStackCount_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_OrangeCannonFire_C_GetProjectileData, CallFunc_GetGravityScale_ReturnValue) == 0x0000E0, "Member 'GA_OrangeCannonFire_C_GetProjectileData::CallFunc_GetGravityScale_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_OrangeCannonFire_C_GetProjectileData, CallFunc_Conv_IntToDouble_ReturnValue_1) == 0x0000E8, "Member 'GA_OrangeCannonFire_C_GetProjectileData::CallFunc_Conv_IntToDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_OrangeCannonFire_C_GetProjectileData, CallFunc_Get_Percentage_Charged_ReturnValue) == 0x0000F0, "Member 'GA_OrangeCannonFire_C_GetProjectileData::CallFunc_Get_Percentage_Charged_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_OrangeCannonFire_C_GetProjectileData, CallFunc_GetProjectileTransform_ReturnValue) == 0x000100, "Member 'GA_OrangeCannonFire_C_GetProjectileData::CallFunc_GetProjectileTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_OrangeCannonFire_C_GetProjectileData, CallFunc_GetLocalVelocity_LocalSpaceVelocity) == 0x000160, "Member 'GA_OrangeCannonFire_C_GetProjectileData::CallFunc_GetLocalVelocity_LocalSpaceVelocity' has a wrong offset!");
static_assert(offsetof(GA_OrangeCannonFire_C_GetProjectileData, CallFunc_GetRandomizedSpawnTransform_ReturnValue) == 0x000180, "Member 'GA_OrangeCannonFire_C_GetProjectileData::CallFunc_GetRandomizedSpawnTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_OrangeCannonFire_C_GetProjectileData, K2Node_Select_Default) == 0x0001E0, "Member 'GA_OrangeCannonFire_C_GetProjectileData::K2Node_Select_Default' has a wrong offset!");

// Function GA_OrangeCannonFire.GA_OrangeCannonFire_C.GetRandomizedSpawnTransform
// 0x0170 (0x0170 - 0x0000)
struct GA_OrangeCannonFire_C_GetRandomizedSpawnTransform final
{
public:
	struct FTransform                             SpawnTransform;                                    // 0x0000(0x0060)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             ReturnValue;                                       // 0x0060(0x0060)(Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x00C0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x00D8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x00F0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_108[0x8];                                      // 0x0108(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0110(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_OrangeCannonFire_C_GetRandomizedSpawnTransform) == 0x000010, "Wrong alignment on GA_OrangeCannonFire_C_GetRandomizedSpawnTransform");
static_assert(sizeof(GA_OrangeCannonFire_C_GetRandomizedSpawnTransform) == 0x000170, "Wrong size on GA_OrangeCannonFire_C_GetRandomizedSpawnTransform");
static_assert(offsetof(GA_OrangeCannonFire_C_GetRandomizedSpawnTransform, SpawnTransform) == 0x000000, "Member 'GA_OrangeCannonFire_C_GetRandomizedSpawnTransform::SpawnTransform' has a wrong offset!");
static_assert(offsetof(GA_OrangeCannonFire_C_GetRandomizedSpawnTransform, ReturnValue) == 0x000060, "Member 'GA_OrangeCannonFire_C_GetRandomizedSpawnTransform::ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_OrangeCannonFire_C_GetRandomizedSpawnTransform, CallFunc_BreakTransform_Location) == 0x0000C0, "Member 'GA_OrangeCannonFire_C_GetRandomizedSpawnTransform::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(GA_OrangeCannonFire_C_GetRandomizedSpawnTransform, CallFunc_BreakTransform_Rotation) == 0x0000D8, "Member 'GA_OrangeCannonFire_C_GetRandomizedSpawnTransform::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(GA_OrangeCannonFire_C_GetRandomizedSpawnTransform, CallFunc_BreakTransform_Scale) == 0x0000F0, "Member 'GA_OrangeCannonFire_C_GetRandomizedSpawnTransform::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(GA_OrangeCannonFire_C_GetRandomizedSpawnTransform, CallFunc_MakeTransform_ReturnValue) == 0x000110, "Member 'GA_OrangeCannonFire_C_GetRandomizedSpawnTransform::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");

// Function GA_OrangeCannonFire.GA_OrangeCannonFire_C.Server_SpawnProjectiles
// 0x00C0 (0x00C0 - 0x0000)
struct GA_OrangeCannonFire_C_Server_SpawnProjectiles final
{
public:
	struct FTransform                             Spawn_Transform;                                   // 0x0000(0x0060)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  Owner;                                             // 0x0060(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                LocalVelocity;                                     // 0x0068(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        PercentageCharged;                                 // 0x0080(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        GravityScale;                                      // 0x0088(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        MinDamage;                                         // 0x0090(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        MaxDamage;                                         // 0x0098(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        MinSpeed;                                          // 0x00A0(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        MaxSpeed;                                          // 0x00A8(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        SructureDamageMultiplier;                          // 0x00B0(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_OrangeCannonFire_C_Server_SpawnProjectiles) == 0x000010, "Wrong alignment on GA_OrangeCannonFire_C_Server_SpawnProjectiles");
static_assert(sizeof(GA_OrangeCannonFire_C_Server_SpawnProjectiles) == 0x0000C0, "Wrong size on GA_OrangeCannonFire_C_Server_SpawnProjectiles");
static_assert(offsetof(GA_OrangeCannonFire_C_Server_SpawnProjectiles, Spawn_Transform) == 0x000000, "Member 'GA_OrangeCannonFire_C_Server_SpawnProjectiles::Spawn_Transform' has a wrong offset!");
static_assert(offsetof(GA_OrangeCannonFire_C_Server_SpawnProjectiles, Owner) == 0x000060, "Member 'GA_OrangeCannonFire_C_Server_SpawnProjectiles::Owner' has a wrong offset!");
static_assert(offsetof(GA_OrangeCannonFire_C_Server_SpawnProjectiles, LocalVelocity) == 0x000068, "Member 'GA_OrangeCannonFire_C_Server_SpawnProjectiles::LocalVelocity' has a wrong offset!");
static_assert(offsetof(GA_OrangeCannonFire_C_Server_SpawnProjectiles, PercentageCharged) == 0x000080, "Member 'GA_OrangeCannonFire_C_Server_SpawnProjectiles::PercentageCharged' has a wrong offset!");
static_assert(offsetof(GA_OrangeCannonFire_C_Server_SpawnProjectiles, GravityScale) == 0x000088, "Member 'GA_OrangeCannonFire_C_Server_SpawnProjectiles::GravityScale' has a wrong offset!");
static_assert(offsetof(GA_OrangeCannonFire_C_Server_SpawnProjectiles, MinDamage) == 0x000090, "Member 'GA_OrangeCannonFire_C_Server_SpawnProjectiles::MinDamage' has a wrong offset!");
static_assert(offsetof(GA_OrangeCannonFire_C_Server_SpawnProjectiles, MaxDamage) == 0x000098, "Member 'GA_OrangeCannonFire_C_Server_SpawnProjectiles::MaxDamage' has a wrong offset!");
static_assert(offsetof(GA_OrangeCannonFire_C_Server_SpawnProjectiles, MinSpeed) == 0x0000A0, "Member 'GA_OrangeCannonFire_C_Server_SpawnProjectiles::MinSpeed' has a wrong offset!");
static_assert(offsetof(GA_OrangeCannonFire_C_Server_SpawnProjectiles, MaxSpeed) == 0x0000A8, "Member 'GA_OrangeCannonFire_C_Server_SpawnProjectiles::MaxSpeed' has a wrong offset!");
static_assert(offsetof(GA_OrangeCannonFire_C_Server_SpawnProjectiles, SructureDamageMultiplier) == 0x0000B0, "Member 'GA_OrangeCannonFire_C_Server_SpawnProjectiles::SructureDamageMultiplier' has a wrong offset!");

// Function GA_OrangeCannonFire.GA_OrangeCannonFire_C.SetCountFromGameplayTag
// 0x0020 (0x0020 - 0x0000)
struct GA_OrangeCannonFire_C_SetCountFromGameplayTag final
{
public:
	class UAbilitySystemComponent*                CallFunc_GetAbilitySystemComponentFromActorInfo_ReturnValue; // 0x0000(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TArray<struct FActiveGameplayEffectHandle>    CallFunc_GetActiveEffectsWithAllTags_ReturnValue;  // 0x0008(0x0010)(ReferenceParm)
	bool                                          CallFunc_Array_IsEmpty_ReturnValue;                // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_OrangeCannonFire_C_SetCountFromGameplayTag) == 0x000008, "Wrong alignment on GA_OrangeCannonFire_C_SetCountFromGameplayTag");
static_assert(sizeof(GA_OrangeCannonFire_C_SetCountFromGameplayTag) == 0x000020, "Wrong size on GA_OrangeCannonFire_C_SetCountFromGameplayTag");
static_assert(offsetof(GA_OrangeCannonFire_C_SetCountFromGameplayTag, CallFunc_GetAbilitySystemComponentFromActorInfo_ReturnValue) == 0x000000, "Member 'GA_OrangeCannonFire_C_SetCountFromGameplayTag::CallFunc_GetAbilitySystemComponentFromActorInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_OrangeCannonFire_C_SetCountFromGameplayTag, CallFunc_GetActiveEffectsWithAllTags_ReturnValue) == 0x000008, "Member 'GA_OrangeCannonFire_C_SetCountFromGameplayTag::CallFunc_GetActiveEffectsWithAllTags_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_OrangeCannonFire_C_SetCountFromGameplayTag, CallFunc_Array_IsEmpty_ReturnValue) == 0x000018, "Member 'GA_OrangeCannonFire_C_SetCountFromGameplayTag::CallFunc_Array_IsEmpty_ReturnValue' has a wrong offset!");

// Function GA_OrangeCannonFire.GA_OrangeCannonFire_C.Get Percentage Charged
// 0x01B0 (0x01B0 - 0x0000)
struct GA_OrangeCannonFire_C_Get_Percentage_Charged final
{
public:
	double                                        ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsHipFire_ReturnValue;                    // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GetServerWorldTimeSafe_ReturnValue;       // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UEquipmentInstance*                     CallFunc_GetAssociatedEquipment_ReturnValue;       // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetTagStackCount_ReturnValue;             // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FSpawnedActorData>              CallFunc_GetSpawnedActors_ReturnValue;             // 0x0030(0x0010)(ReferenceParm)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_48[0x8];                                       // 0x0048(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSpawnedActorData                      CallFunc_Array_Get_Item;                           // 0x0050(0x0100)(NoDestructor)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0150(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0154(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_155[0x3];                                      // 0x0155(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_OrangeCannonEquipable_C*            K2Node_DynamicCast_AsBP_Orange_Cannon_Equipable;   // 0x0158(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0160(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_161[0x3];                                      // 0x0161(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetTagStackCount_ReturnValue_1;           // 0x0164(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0168(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue_1;           // 0x0170(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetTagStackCount_ReturnValue_2;           // 0x0178(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_17C[0x4];                                      // 0x017C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0180(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue_2;           // 0x0188(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0190(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0198(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FMin_ReturnValue;                         // 0x01A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_OrangeCannonFire_C_Get_Percentage_Charged) == 0x000010, "Wrong alignment on GA_OrangeCannonFire_C_Get_Percentage_Charged");
static_assert(sizeof(GA_OrangeCannonFire_C_Get_Percentage_Charged) == 0x0001B0, "Wrong size on GA_OrangeCannonFire_C_Get_Percentage_Charged");
static_assert(offsetof(GA_OrangeCannonFire_C_Get_Percentage_Charged, ReturnValue) == 0x000000, "Member 'GA_OrangeCannonFire_C_Get_Percentage_Charged::ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_OrangeCannonFire_C_Get_Percentage_Charged, Temp_int_Array_Index_Variable) == 0x000008, "Member 'GA_OrangeCannonFire_C_Get_Percentage_Charged::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(GA_OrangeCannonFire_C_Get_Percentage_Charged, Temp_int_Loop_Counter_Variable) == 0x00000C, "Member 'GA_OrangeCannonFire_C_Get_Percentage_Charged::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(GA_OrangeCannonFire_C_Get_Percentage_Charged, CallFunc_Add_IntInt_ReturnValue) == 0x000010, "Member 'GA_OrangeCannonFire_C_Get_Percentage_Charged::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_OrangeCannonFire_C_Get_Percentage_Charged, CallFunc_IsHipFire_ReturnValue) == 0x000014, "Member 'GA_OrangeCannonFire_C_Get_Percentage_Charged::CallFunc_IsHipFire_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_OrangeCannonFire_C_Get_Percentage_Charged, CallFunc_GetServerWorldTimeSafe_ReturnValue) == 0x000018, "Member 'GA_OrangeCannonFire_C_Get_Percentage_Charged::CallFunc_GetServerWorldTimeSafe_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_OrangeCannonFire_C_Get_Percentage_Charged, CallFunc_GetAssociatedEquipment_ReturnValue) == 0x000020, "Member 'GA_OrangeCannonFire_C_Get_Percentage_Charged::CallFunc_GetAssociatedEquipment_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_OrangeCannonFire_C_Get_Percentage_Charged, CallFunc_GetTagStackCount_ReturnValue) == 0x000028, "Member 'GA_OrangeCannonFire_C_Get_Percentage_Charged::CallFunc_GetTagStackCount_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_OrangeCannonFire_C_Get_Percentage_Charged, CallFunc_GetSpawnedActors_ReturnValue) == 0x000030, "Member 'GA_OrangeCannonFire_C_Get_Percentage_Charged::CallFunc_GetSpawnedActors_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_OrangeCannonFire_C_Get_Percentage_Charged, CallFunc_Conv_IntToDouble_ReturnValue) == 0x000040, "Member 'GA_OrangeCannonFire_C_Get_Percentage_Charged::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_OrangeCannonFire_C_Get_Percentage_Charged, CallFunc_Array_Get_Item) == 0x000050, "Member 'GA_OrangeCannonFire_C_Get_Percentage_Charged::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(GA_OrangeCannonFire_C_Get_Percentage_Charged, CallFunc_Array_Length_ReturnValue) == 0x000150, "Member 'GA_OrangeCannonFire_C_Get_Percentage_Charged::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_OrangeCannonFire_C_Get_Percentage_Charged, CallFunc_Less_IntInt_ReturnValue) == 0x000154, "Member 'GA_OrangeCannonFire_C_Get_Percentage_Charged::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_OrangeCannonFire_C_Get_Percentage_Charged, K2Node_DynamicCast_AsBP_Orange_Cannon_Equipable) == 0x000158, "Member 'GA_OrangeCannonFire_C_Get_Percentage_Charged::K2Node_DynamicCast_AsBP_Orange_Cannon_Equipable' has a wrong offset!");
static_assert(offsetof(GA_OrangeCannonFire_C_Get_Percentage_Charged, K2Node_DynamicCast_bSuccess) == 0x000160, "Member 'GA_OrangeCannonFire_C_Get_Percentage_Charged::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(GA_OrangeCannonFire_C_Get_Percentage_Charged, CallFunc_GetTagStackCount_ReturnValue_1) == 0x000164, "Member 'GA_OrangeCannonFire_C_Get_Percentage_Charged::CallFunc_GetTagStackCount_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_OrangeCannonFire_C_Get_Percentage_Charged, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000168, "Member 'GA_OrangeCannonFire_C_Get_Percentage_Charged::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_OrangeCannonFire_C_Get_Percentage_Charged, CallFunc_Conv_IntToDouble_ReturnValue_1) == 0x000170, "Member 'GA_OrangeCannonFire_C_Get_Percentage_Charged::CallFunc_Conv_IntToDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_OrangeCannonFire_C_Get_Percentage_Charged, CallFunc_GetTagStackCount_ReturnValue_2) == 0x000178, "Member 'GA_OrangeCannonFire_C_Get_Percentage_Charged::CallFunc_GetTagStackCount_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GA_OrangeCannonFire_C_Get_Percentage_Charged, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000180, "Member 'GA_OrangeCannonFire_C_Get_Percentage_Charged::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_OrangeCannonFire_C_Get_Percentage_Charged, CallFunc_Conv_IntToDouble_ReturnValue_2) == 0x000188, "Member 'GA_OrangeCannonFire_C_Get_Percentage_Charged::CallFunc_Conv_IntToDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GA_OrangeCannonFire_C_Get_Percentage_Charged, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000190, "Member 'GA_OrangeCannonFire_C_Get_Percentage_Charged::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_OrangeCannonFire_C_Get_Percentage_Charged, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000198, "Member 'GA_OrangeCannonFire_C_Get_Percentage_Charged::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_OrangeCannonFire_C_Get_Percentage_Charged, CallFunc_FMin_ReturnValue) == 0x0001A0, "Member 'GA_OrangeCannonFire_C_Get_Percentage_Charged::CallFunc_FMin_ReturnValue' has a wrong offset!");

// Function GA_OrangeCannonFire.GA_OrangeCannonFire_C.GetGravityScale
// 0x0040 (0x0040 - 0x0000)
struct GA_OrangeCannonFire_C_GetGravityScale final
{
public:
	double                                        ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UItemInstance*                          CallFunc_GetAssociatedItem_ReturnValue;            // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Get_Percentage_Charged_ReturnValue;       // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetTagStackCount_ReturnValue;             // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetTagStackCount_ReturnValue_1;           // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue_1;           // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue;                         // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_OrangeCannonFire_C_GetGravityScale) == 0x000008, "Wrong alignment on GA_OrangeCannonFire_C_GetGravityScale");
static_assert(sizeof(GA_OrangeCannonFire_C_GetGravityScale) == 0x000040, "Wrong size on GA_OrangeCannonFire_C_GetGravityScale");
static_assert(offsetof(GA_OrangeCannonFire_C_GetGravityScale, ReturnValue) == 0x000000, "Member 'GA_OrangeCannonFire_C_GetGravityScale::ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_OrangeCannonFire_C_GetGravityScale, CallFunc_GetAssociatedItem_ReturnValue) == 0x000008, "Member 'GA_OrangeCannonFire_C_GetGravityScale::CallFunc_GetAssociatedItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_OrangeCannonFire_C_GetGravityScale, CallFunc_Get_Percentage_Charged_ReturnValue) == 0x000010, "Member 'GA_OrangeCannonFire_C_GetGravityScale::CallFunc_Get_Percentage_Charged_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_OrangeCannonFire_C_GetGravityScale, CallFunc_GetTagStackCount_ReturnValue) == 0x000018, "Member 'GA_OrangeCannonFire_C_GetGravityScale::CallFunc_GetTagStackCount_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_OrangeCannonFire_C_GetGravityScale, CallFunc_GetTagStackCount_ReturnValue_1) == 0x00001C, "Member 'GA_OrangeCannonFire_C_GetGravityScale::CallFunc_GetTagStackCount_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_OrangeCannonFire_C_GetGravityScale, CallFunc_Conv_IntToDouble_ReturnValue) == 0x000020, "Member 'GA_OrangeCannonFire_C_GetGravityScale::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_OrangeCannonFire_C_GetGravityScale, CallFunc_Conv_IntToDouble_ReturnValue_1) == 0x000028, "Member 'GA_OrangeCannonFire_C_GetGravityScale::CallFunc_Conv_IntToDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_OrangeCannonFire_C_GetGravityScale, CallFunc_Lerp_ReturnValue) == 0x000030, "Member 'GA_OrangeCannonFire_C_GetGravityScale::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_OrangeCannonFire_C_GetGravityScale, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000038, "Member 'GA_OrangeCannonFire_C_GetGravityScale::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");

// Function GA_OrangeCannonFire.GA_OrangeCannonFire_C.GetProjectileTransform
// 0x0100 (0x0100 - 0x0000)
struct GA_OrangeCannonFire_C_GetProjectileTransform final
{
public:
	struct FTransform                             ReturnValue;                                       // 0x0000(0x0060)(Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetAvatarActorFromActorInfo_ReturnValue;  // 0x0060(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ACharacterJP*                           K2Node_DynamicCast_AsCharacter_JP;                 // 0x0068(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_71[0x7];                                       // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_ResidentCharacter_C*                K2Node_DynamicCast_AsBP_Resident_Character;        // 0x0078(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_81[0x7];                                       // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0088(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x00A0(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_OrangeCannonFire_C_GetProjectileTransform) == 0x000010, "Wrong alignment on GA_OrangeCannonFire_C_GetProjectileTransform");
static_assert(sizeof(GA_OrangeCannonFire_C_GetProjectileTransform) == 0x000100, "Wrong size on GA_OrangeCannonFire_C_GetProjectileTransform");
static_assert(offsetof(GA_OrangeCannonFire_C_GetProjectileTransform, ReturnValue) == 0x000000, "Member 'GA_OrangeCannonFire_C_GetProjectileTransform::ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_OrangeCannonFire_C_GetProjectileTransform, CallFunc_GetAvatarActorFromActorInfo_ReturnValue) == 0x000060, "Member 'GA_OrangeCannonFire_C_GetProjectileTransform::CallFunc_GetAvatarActorFromActorInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_OrangeCannonFire_C_GetProjectileTransform, K2Node_DynamicCast_AsCharacter_JP) == 0x000068, "Member 'GA_OrangeCannonFire_C_GetProjectileTransform::K2Node_DynamicCast_AsCharacter_JP' has a wrong offset!");
static_assert(offsetof(GA_OrangeCannonFire_C_GetProjectileTransform, K2Node_DynamicCast_bSuccess) == 0x000070, "Member 'GA_OrangeCannonFire_C_GetProjectileTransform::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(GA_OrangeCannonFire_C_GetProjectileTransform, K2Node_DynamicCast_AsBP_Resident_Character) == 0x000078, "Member 'GA_OrangeCannonFire_C_GetProjectileTransform::K2Node_DynamicCast_AsBP_Resident_Character' has a wrong offset!");
static_assert(offsetof(GA_OrangeCannonFire_C_GetProjectileTransform, K2Node_DynamicCast_bSuccess_1) == 0x000080, "Member 'GA_OrangeCannonFire_C_GetProjectileTransform::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(GA_OrangeCannonFire_C_GetProjectileTransform, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000088, "Member 'GA_OrangeCannonFire_C_GetProjectileTransform::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_OrangeCannonFire_C_GetProjectileTransform, CallFunc_MakeTransform_ReturnValue) == 0x0000A0, "Member 'GA_OrangeCannonFire_C_GetProjectileTransform::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");

// Function GA_OrangeCannonFire.GA_OrangeCannonFire_C.IsHipFire
// 0x0068 (0x0068 - 0x0000)
struct GA_OrangeCannonFire_C_IsHipFire final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           Temp_struct_Variable;                              // 0x0004(0x0008)(ConstParm, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwningActorFromActorInfo_ReturnValue;  // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAbilitySystemComponent*                CallFunc_GetAbilitySystemComponent_ReturnValue;    // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IGameplayTagAssetInterface> CallFunc_GetOwnedGameplayTags_self_CastInput;      // 0x0020(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTagContainer                  CallFunc_GetOwnedGameplayTags_TagContainer;        // 0x0030(0x0020)()
	TArray<struct FGameplayTag>                   CallFunc_BreakGameplayTagContainer_GameplayTags;   // 0x0050(0x0010)(ReferenceParm)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_OrangeCannonFire_C_IsHipFire) == 0x000008, "Wrong alignment on GA_OrangeCannonFire_C_IsHipFire");
static_assert(sizeof(GA_OrangeCannonFire_C_IsHipFire) == 0x000068, "Wrong size on GA_OrangeCannonFire_C_IsHipFire");
static_assert(offsetof(GA_OrangeCannonFire_C_IsHipFire, ReturnValue) == 0x000000, "Member 'GA_OrangeCannonFire_C_IsHipFire::ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_OrangeCannonFire_C_IsHipFire, Temp_struct_Variable) == 0x000004, "Member 'GA_OrangeCannonFire_C_IsHipFire::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(GA_OrangeCannonFire_C_IsHipFire, CallFunc_GetOwningActorFromActorInfo_ReturnValue) == 0x000010, "Member 'GA_OrangeCannonFire_C_IsHipFire::CallFunc_GetOwningActorFromActorInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_OrangeCannonFire_C_IsHipFire, CallFunc_GetAbilitySystemComponent_ReturnValue) == 0x000018, "Member 'GA_OrangeCannonFire_C_IsHipFire::CallFunc_GetAbilitySystemComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_OrangeCannonFire_C_IsHipFire, CallFunc_GetOwnedGameplayTags_self_CastInput) == 0x000020, "Member 'GA_OrangeCannonFire_C_IsHipFire::CallFunc_GetOwnedGameplayTags_self_CastInput' has a wrong offset!");
static_assert(offsetof(GA_OrangeCannonFire_C_IsHipFire, CallFunc_GetOwnedGameplayTags_TagContainer) == 0x000030, "Member 'GA_OrangeCannonFire_C_IsHipFire::CallFunc_GetOwnedGameplayTags_TagContainer' has a wrong offset!");
static_assert(offsetof(GA_OrangeCannonFire_C_IsHipFire, CallFunc_BreakGameplayTagContainer_GameplayTags) == 0x000050, "Member 'GA_OrangeCannonFire_C_IsHipFire::CallFunc_BreakGameplayTagContainer_GameplayTags' has a wrong offset!");
static_assert(offsetof(GA_OrangeCannonFire_C_IsHipFire, CallFunc_Array_Contains_ReturnValue) == 0x000060, "Member 'GA_OrangeCannonFire_C_IsHipFire::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_OrangeCannonFire_C_IsHipFire, CallFunc_Not_PreBool_ReturnValue) == 0x000061, "Member 'GA_OrangeCannonFire_C_IsHipFire::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

}

