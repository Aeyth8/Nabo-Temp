#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_HouseActor_Destroyed

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_HouseActor_Destroyed.BP_HouseActor_Destroyed_C
// 0x00A0 (0x0330 - 0x0290)
class ABP_HouseActor_Destroyed_C : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0290(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class USceneComponent*                        Scene;                                             // 0x0298(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class URandomVector*                          RandomVector;                                      // 0x02A0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UNiagaraComponent*                      Niagara;                                           // 0x02A8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UUniformVector*                         UniformVector;                                     // 0x02B0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UCullingField*                          CullingField;                                      // 0x02B8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class URadialVector*                          RadialVector;                                      // 0x02C0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class URadialFalloff*                         RadialFalloff;                                     // 0x02C8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UFieldSystemComponent*                  FieldSystem;                                       // 0x02D0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UGeometryCollectionComponent*           GeometryCollection;                                // 0x02D8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x02E0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RadialVectorMagitude;                              // 0x02E8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	float                                         ForwardVectorMagnitude;                            // 0x02EC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	float                                         UpVectorMagnitude;                                 // 0x02F0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	float                                         Radius;                                            // 0x02F4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	struct FVector                                LastDamageCauserLocation;                          // 0x02F8(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	bool                                          NeverDestroy;                                      // 0x0310(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_311[0x3];                                      // 0x0311(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         DestroyDelay;                                      // 0x0314(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             DestroyedSound;                                    // 0x0318(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                          UseRandomVector;                                   // 0x0320(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_321[0x3];                                      // 0x0321(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         RandomFieldMagnitude;                              // 0x0324(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        ForcedSleepDelay;                                  // 0x0328(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_HouseActor_Destroyed(int32 EntryPoint);
	void ReceiveBeginPlay();
	void UserConstructionScript();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_HouseActor_Destroyed_C">();
	}
	static class ABP_HouseActor_Destroyed_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_HouseActor_Destroyed_C>();
	}
};
static_assert(alignof(ABP_HouseActor_Destroyed_C) == 0x000008, "Wrong alignment on ABP_HouseActor_Destroyed_C");
static_assert(sizeof(ABP_HouseActor_Destroyed_C) == 0x000330, "Wrong size on ABP_HouseActor_Destroyed_C");
static_assert(offsetof(ABP_HouseActor_Destroyed_C, UberGraphFrame) == 0x000290, "Member 'ABP_HouseActor_Destroyed_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_HouseActor_Destroyed_C, Scene) == 0x000298, "Member 'ABP_HouseActor_Destroyed_C::Scene' has a wrong offset!");
static_assert(offsetof(ABP_HouseActor_Destroyed_C, RandomVector) == 0x0002A0, "Member 'ABP_HouseActor_Destroyed_C::RandomVector' has a wrong offset!");
static_assert(offsetof(ABP_HouseActor_Destroyed_C, Niagara) == 0x0002A8, "Member 'ABP_HouseActor_Destroyed_C::Niagara' has a wrong offset!");
static_assert(offsetof(ABP_HouseActor_Destroyed_C, UniformVector) == 0x0002B0, "Member 'ABP_HouseActor_Destroyed_C::UniformVector' has a wrong offset!");
static_assert(offsetof(ABP_HouseActor_Destroyed_C, CullingField) == 0x0002B8, "Member 'ABP_HouseActor_Destroyed_C::CullingField' has a wrong offset!");
static_assert(offsetof(ABP_HouseActor_Destroyed_C, RadialVector) == 0x0002C0, "Member 'ABP_HouseActor_Destroyed_C::RadialVector' has a wrong offset!");
static_assert(offsetof(ABP_HouseActor_Destroyed_C, RadialFalloff) == 0x0002C8, "Member 'ABP_HouseActor_Destroyed_C::RadialFalloff' has a wrong offset!");
static_assert(offsetof(ABP_HouseActor_Destroyed_C, FieldSystem) == 0x0002D0, "Member 'ABP_HouseActor_Destroyed_C::FieldSystem' has a wrong offset!");
static_assert(offsetof(ABP_HouseActor_Destroyed_C, GeometryCollection) == 0x0002D8, "Member 'ABP_HouseActor_Destroyed_C::GeometryCollection' has a wrong offset!");
static_assert(offsetof(ABP_HouseActor_Destroyed_C, DefaultSceneRoot) == 0x0002E0, "Member 'ABP_HouseActor_Destroyed_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ABP_HouseActor_Destroyed_C, RadialVectorMagitude) == 0x0002E8, "Member 'ABP_HouseActor_Destroyed_C::RadialVectorMagitude' has a wrong offset!");
static_assert(offsetof(ABP_HouseActor_Destroyed_C, ForwardVectorMagnitude) == 0x0002EC, "Member 'ABP_HouseActor_Destroyed_C::ForwardVectorMagnitude' has a wrong offset!");
static_assert(offsetof(ABP_HouseActor_Destroyed_C, UpVectorMagnitude) == 0x0002F0, "Member 'ABP_HouseActor_Destroyed_C::UpVectorMagnitude' has a wrong offset!");
static_assert(offsetof(ABP_HouseActor_Destroyed_C, Radius) == 0x0002F4, "Member 'ABP_HouseActor_Destroyed_C::Radius' has a wrong offset!");
static_assert(offsetof(ABP_HouseActor_Destroyed_C, LastDamageCauserLocation) == 0x0002F8, "Member 'ABP_HouseActor_Destroyed_C::LastDamageCauserLocation' has a wrong offset!");
static_assert(offsetof(ABP_HouseActor_Destroyed_C, NeverDestroy) == 0x000310, "Member 'ABP_HouseActor_Destroyed_C::NeverDestroy' has a wrong offset!");
static_assert(offsetof(ABP_HouseActor_Destroyed_C, DestroyDelay) == 0x000314, "Member 'ABP_HouseActor_Destroyed_C::DestroyDelay' has a wrong offset!");
static_assert(offsetof(ABP_HouseActor_Destroyed_C, DestroyedSound) == 0x000318, "Member 'ABP_HouseActor_Destroyed_C::DestroyedSound' has a wrong offset!");
static_assert(offsetof(ABP_HouseActor_Destroyed_C, UseRandomVector) == 0x000320, "Member 'ABP_HouseActor_Destroyed_C::UseRandomVector' has a wrong offset!");
static_assert(offsetof(ABP_HouseActor_Destroyed_C, RandomFieldMagnitude) == 0x000324, "Member 'ABP_HouseActor_Destroyed_C::RandomFieldMagnitude' has a wrong offset!");
static_assert(offsetof(ABP_HouseActor_Destroyed_C, ForcedSleepDelay) == 0x000328, "Member 'ABP_HouseActor_Destroyed_C::ForcedSleepDelay' has a wrong offset!");

}

