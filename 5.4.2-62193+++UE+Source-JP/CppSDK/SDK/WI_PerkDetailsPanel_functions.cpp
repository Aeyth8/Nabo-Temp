#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WI_PerkDetailsPanel

#include "Basic.hpp"

#include "WI_PerkDetailsPanel_classes.hpp"
#include "WI_PerkDetailsPanel_parameters.hpp"


namespace SDK
{

// Function WI_PerkDetailsPanel.WI_PerkDetailsPanel_C.BndEvt__WI_PerkDetailsPanel_PerkIcon_K2Node_ComponentBoundEvent_0_CommonButtonBaseClicked__DelegateSignature
// (BlueprintEvent)
// Parameters:
// class UCommonButtonBase*                Button                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UWI_PerkDetailsPanel_C::BndEvt__WI_PerkDetailsPanel_PerkIcon_K2Node_ComponentBoundEvent_0_CommonButtonBaseClicked__DelegateSignature(class UCommonButtonBase* Button)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WI_PerkDetailsPanel_C", "BndEvt__WI_PerkDetailsPanel_PerkIcon_K2Node_ComponentBoundEvent_0_CommonButtonBaseClicked__DelegateSignature");

	Params::WI_PerkDetailsPanel_C_BndEvt__WI_PerkDetailsPanel_PerkIcon_K2Node_ComponentBoundEvent_0_CommonButtonBaseClicked__DelegateSignature Parms{};

	Parms.Button = Button;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WI_PerkDetailsPanel.WI_PerkDetailsPanel_C.ExecuteUbergraph_WI_PerkDetailsPanel
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWI_PerkDetailsPanel_C::ExecuteUbergraph_WI_PerkDetailsPanel(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WI_PerkDetailsPanel_C", "ExecuteUbergraph_WI_PerkDetailsPanel");

	Params::WI_PerkDetailsPanel_C_ExecuteUbergraph_WI_PerkDetailsPanel Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WI_PerkDetailsPanel.WI_PerkDetailsPanel_C.LockPerkSlot
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FText                             LockDescription                                        (BlueprintVisible, BlueprintReadOnly, Parm)

void UWI_PerkDetailsPanel_C::LockPerkSlot(const class FText& LockDescription)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WI_PerkDetailsPanel_C", "LockPerkSlot");

	Params::WI_PerkDetailsPanel_C_LockPerkSlot Parms{};

	Parms.LockDescription = std::move(LockDescription);

	UObject::ProcessEvent(Func, &Parms);
}


// Function WI_PerkDetailsPanel.WI_PerkDetailsPanel_C.OnClick__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)

void UWI_PerkDetailsPanel_C::OnClick__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WI_PerkDetailsPanel_C", "OnClick__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WI_PerkDetailsPanel.WI_PerkDetailsPanel_C.OnLoaded_F8838F6E47B85CB8DCCD899F75BF8FA7
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          Loaded                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UWI_PerkDetailsPanel_C::OnLoaded_F8838F6E47B85CB8DCCD899F75BF8FA7(class UObject* Loaded)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WI_PerkDetailsPanel_C", "OnLoaded_F8838F6E47B85CB8DCCD899F75BF8FA7");

	Params::WI_PerkDetailsPanel_C_OnLoaded_F8838F6E47B85CB8DCCD899F75BF8FA7 Parms{};

	Parms.Loaded = Loaded;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WI_PerkDetailsPanel.WI_PerkDetailsPanel_C.PreConstruct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// bool                                    IsDesignTime                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWI_PerkDetailsPanel_C::PreConstruct(bool IsDesignTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WI_PerkDetailsPanel_C", "PreConstruct");

	Params::WI_PerkDetailsPanel_C_PreConstruct Parms{};

	Parms.IsDesignTime = IsDesignTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WI_PerkDetailsPanel.WI_PerkDetailsPanel_C.Set Button and Icon Diameter
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  ButtonDiameter_0                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  IconDiameter_0                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWI_PerkDetailsPanel_C::Set_Button_and_Icon_Diameter(double ButtonDiameter_0, double IconDiameter_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WI_PerkDetailsPanel_C", "Set Button and Icon Diameter");

	Params::WI_PerkDetailsPanel_C_Set_Button_and_Icon_Diameter Parms{};

	Parms.ButtonDiameter_0 = ButtonDiameter_0;
	Parms.IconDiameter_0 = IconDiameter_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WI_PerkDetailsPanel.WI_PerkDetailsPanel_C.SetDescription
// (Protected, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FText                             Description_0                                          (BlueprintVisible, BlueprintReadOnly, Parm)

void UWI_PerkDetailsPanel_C::SetDescription(const class FText& Description_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WI_PerkDetailsPanel_C", "SetDescription");

	Params::WI_PerkDetailsPanel_C_SetDescription Parms{};

	Parms.Description_0 = std::move(Description_0);

	UObject::ProcessEvent(Func, &Parms);
}


// Function WI_PerkDetailsPanel.WI_PerkDetailsPanel_C.SetName
// (Protected, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FText                             Name_0                                                 (BlueprintVisible, BlueprintReadOnly, Parm)

void UWI_PerkDetailsPanel_C::SetName(const class FText& Name_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WI_PerkDetailsPanel_C", "SetName");

	Params::WI_PerkDetailsPanel_C_SetName Parms{};

	Parms.Name_0 = std::move(Name_0);

	UObject::ProcessEvent(Func, &Parms);
}


// Function WI_PerkDetailsPanel.WI_PerkDetailsPanel_C.SetPerk
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGameplayTag                     PerkID                                                 (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)

void UWI_PerkDetailsPanel_C::SetPerk(const struct FGameplayTag& PerkID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WI_PerkDetailsPanel_C", "SetPerk");

	Params::WI_PerkDetailsPanel_C_SetPerk Parms{};

	Parms.PerkID = std::move(PerkID);

	UObject::ProcessEvent(Func, &Parms);
}


// Function WI_PerkDetailsPanel.WI_PerkDetailsPanel_C.SetPerkType
// (Protected, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGameplayTag                     PerkTypeTag                                            (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)

void UWI_PerkDetailsPanel_C::SetPerkType(const struct FGameplayTag& PerkTypeTag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WI_PerkDetailsPanel_C", "SetPerkType");

	Params::WI_PerkDetailsPanel_C_SetPerkType Parms{};

	Parms.PerkTypeTag = std::move(PerkTypeTag);

	UObject::ProcessEvent(Func, &Parms);
}


// Function WI_PerkDetailsPanel.WI_PerkDetailsPanel_C.SetType
// (Protected, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FText                             Type_0                                                 (BlueprintVisible, BlueprintReadOnly, Parm)

void UWI_PerkDetailsPanel_C::SetType(const class FText& Type_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WI_PerkDetailsPanel_C", "SetType");

	Params::WI_PerkDetailsPanel_C_SetType Parms{};

	Parms.Type_0 = std::move(Type_0);

	UObject::ProcessEvent(Func, &Parms);
}


// Function WI_PerkDetailsPanel.WI_PerkDetailsPanel_C.ShouldLockPerkSlot
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGameplayTag                     NeighborID                                             (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
// int32                                   NeighborLevel                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    IsLocked_0                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FText                             Lock_Description_0                                     (Parm, OutParm)

void UWI_PerkDetailsPanel_C::ShouldLockPerkSlot(const struct FGameplayTag& NeighborID, int32 NeighborLevel, bool* IsLocked_0, class FText* Lock_Description_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WI_PerkDetailsPanel_C", "ShouldLockPerkSlot");

	Params::WI_PerkDetailsPanel_C_ShouldLockPerkSlot Parms{};

	Parms.NeighborID = std::move(NeighborID);
	Parms.NeighborLevel = NeighborLevel;

	UObject::ProcessEvent(Func, &Parms);

	if (IsLocked_0 != nullptr)
		*IsLocked_0 = Parms.IsLocked_0;

	if (Lock_Description_0 != nullptr)
		*Lock_Description_0 = std::move(Parms.Lock_Description_0);
}


// Function WI_PerkDetailsPanel.WI_PerkDetailsPanel_C.UnlockPerkSlot
// (Public, BlueprintCallable, BlueprintEvent)

void UWI_PerkDetailsPanel_C::UnlockPerkSlot()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WI_PerkDetailsPanel_C", "UnlockPerkSlot");

	UObject::ProcessEvent(Func, nullptr);
}

}

