#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: TT_SameTeam

#include "Basic.hpp"


namespace SDK::Params
{

// Function TT_SameTeam.TT_SameTeam_C.ShouldFilterTargetBP
// 0x0048 (0x0048 - 0x0000)
struct TT_SameTeam_C_ShouldFilterTargetBP final
{
public:
	const class AActor*                           HitActor;                                          // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	const class AActor*                           Source;                                            // 0x0008(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Temp_byte_Variable;                                // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12[0x6];                                       // 0x0012(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class ITeamableInterface>    K2Node_DynamicCast_AsTeamable_Interface;           // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetTeamID_ReturnValue;                    // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2A[0x6];                                       // 0x002A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class ITeamableInterface>    K2Node_DynamicCast_AsTeamable_Interface_1;         // 0x0030(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetTeamID_ReturnValue_1;                  // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Temp_byte_Variable_1;                              // 0x0042(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0043(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TT_SameTeam_C_ShouldFilterTargetBP) == 0x000008, "Wrong alignment on TT_SameTeam_C_ShouldFilterTargetBP");
static_assert(sizeof(TT_SameTeam_C_ShouldFilterTargetBP) == 0x000048, "Wrong size on TT_SameTeam_C_ShouldFilterTargetBP");
static_assert(offsetof(TT_SameTeam_C_ShouldFilterTargetBP, HitActor) == 0x000000, "Member 'TT_SameTeam_C_ShouldFilterTargetBP::HitActor' has a wrong offset!");
static_assert(offsetof(TT_SameTeam_C_ShouldFilterTargetBP, Source) == 0x000008, "Member 'TT_SameTeam_C_ShouldFilterTargetBP::Source' has a wrong offset!");
static_assert(offsetof(TT_SameTeam_C_ShouldFilterTargetBP, ReturnValue) == 0x000010, "Member 'TT_SameTeam_C_ShouldFilterTargetBP::ReturnValue' has a wrong offset!");
static_assert(offsetof(TT_SameTeam_C_ShouldFilterTargetBP, Temp_byte_Variable) == 0x000011, "Member 'TT_SameTeam_C_ShouldFilterTargetBP::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(TT_SameTeam_C_ShouldFilterTargetBP, K2Node_DynamicCast_AsTeamable_Interface) == 0x000018, "Member 'TT_SameTeam_C_ShouldFilterTargetBP::K2Node_DynamicCast_AsTeamable_Interface' has a wrong offset!");
static_assert(offsetof(TT_SameTeam_C_ShouldFilterTargetBP, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'TT_SameTeam_C_ShouldFilterTargetBP::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(TT_SameTeam_C_ShouldFilterTargetBP, CallFunc_GetTeamID_ReturnValue) == 0x000029, "Member 'TT_SameTeam_C_ShouldFilterTargetBP::CallFunc_GetTeamID_ReturnValue' has a wrong offset!");
static_assert(offsetof(TT_SameTeam_C_ShouldFilterTargetBP, K2Node_DynamicCast_AsTeamable_Interface_1) == 0x000030, "Member 'TT_SameTeam_C_ShouldFilterTargetBP::K2Node_DynamicCast_AsTeamable_Interface_1' has a wrong offset!");
static_assert(offsetof(TT_SameTeam_C_ShouldFilterTargetBP, K2Node_DynamicCast_bSuccess_1) == 0x000040, "Member 'TT_SameTeam_C_ShouldFilterTargetBP::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(TT_SameTeam_C_ShouldFilterTargetBP, CallFunc_GetTeamID_ReturnValue_1) == 0x000041, "Member 'TT_SameTeam_C_ShouldFilterTargetBP::CallFunc_GetTeamID_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(TT_SameTeam_C_ShouldFilterTargetBP, Temp_byte_Variable_1) == 0x000042, "Member 'TT_SameTeam_C_ShouldFilterTargetBP::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(TT_SameTeam_C_ShouldFilterTargetBP, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000043, "Member 'TT_SameTeam_C_ShouldFilterTargetBP::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");

}

