#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PA_ApplyEffectToCharacterWithLowHealth

#include "Basic.hpp"

#include "GameplayAbilities_structs.hpp"


namespace SDK::Params
{

// Function PA_ApplyEffectToCharacterWithLowHealth.PA_ApplyEffectToCharacterWithLowHealth_C.ApplyGameplayEffectIfHealthLow
// 0x0030 (0x0030 - 0x0000)
struct PA_ApplyEffectToCharacterWithLowHealth_C_ApplyGameplayEffectIfHealthLow final
{
public:
	class UAbilitySystemComponentIW*              TargetASC;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	double                                        CurrentHealthPercentage;                           // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          EffectApplied;                                     // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_InRange_FloatFloat_ReturnValue;           // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12[0x6];                                       // 0x0012(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayEffectSpecHandle              CallFunc_MakeOutgoingSpec_ReturnValue;             // 0x0018(0x0010)()
	struct FActiveGameplayEffectHandle            CallFunc_BP_ApplyGameplayEffectSpecToSelf_ReturnValue; // 0x0028(0x0008)(NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PA_ApplyEffectToCharacterWithLowHealth_C_ApplyGameplayEffectIfHealthLow) == 0x000008, "Wrong alignment on PA_ApplyEffectToCharacterWithLowHealth_C_ApplyGameplayEffectIfHealthLow");
static_assert(sizeof(PA_ApplyEffectToCharacterWithLowHealth_C_ApplyGameplayEffectIfHealthLow) == 0x000030, "Wrong size on PA_ApplyEffectToCharacterWithLowHealth_C_ApplyGameplayEffectIfHealthLow");
static_assert(offsetof(PA_ApplyEffectToCharacterWithLowHealth_C_ApplyGameplayEffectIfHealthLow, TargetASC) == 0x000000, "Member 'PA_ApplyEffectToCharacterWithLowHealth_C_ApplyGameplayEffectIfHealthLow::TargetASC' has a wrong offset!");
static_assert(offsetof(PA_ApplyEffectToCharacterWithLowHealth_C_ApplyGameplayEffectIfHealthLow, CurrentHealthPercentage) == 0x000008, "Member 'PA_ApplyEffectToCharacterWithLowHealth_C_ApplyGameplayEffectIfHealthLow::CurrentHealthPercentage' has a wrong offset!");
static_assert(offsetof(PA_ApplyEffectToCharacterWithLowHealth_C_ApplyGameplayEffectIfHealthLow, EffectApplied) == 0x000010, "Member 'PA_ApplyEffectToCharacterWithLowHealth_C_ApplyGameplayEffectIfHealthLow::EffectApplied' has a wrong offset!");
static_assert(offsetof(PA_ApplyEffectToCharacterWithLowHealth_C_ApplyGameplayEffectIfHealthLow, CallFunc_InRange_FloatFloat_ReturnValue) == 0x000011, "Member 'PA_ApplyEffectToCharacterWithLowHealth_C_ApplyGameplayEffectIfHealthLow::CallFunc_InRange_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(PA_ApplyEffectToCharacterWithLowHealth_C_ApplyGameplayEffectIfHealthLow, CallFunc_MakeOutgoingSpec_ReturnValue) == 0x000018, "Member 'PA_ApplyEffectToCharacterWithLowHealth_C_ApplyGameplayEffectIfHealthLow::CallFunc_MakeOutgoingSpec_ReturnValue' has a wrong offset!");
static_assert(offsetof(PA_ApplyEffectToCharacterWithLowHealth_C_ApplyGameplayEffectIfHealthLow, CallFunc_BP_ApplyGameplayEffectSpecToSelf_ReturnValue) == 0x000028, "Member 'PA_ApplyEffectToCharacterWithLowHealth_C_ApplyGameplayEffectIfHealthLow::CallFunc_BP_ApplyGameplayEffectSpecToSelf_ReturnValue' has a wrong offset!");

// Function PA_ApplyEffectToCharacterWithLowHealth.PA_ApplyEffectToCharacterWithLowHealth_C.ExecuteUbergraph_PA_ApplyEffectToCharacterWithLowHealth
// 0x0004 (0x0004 - 0x0000)
struct PA_ApplyEffectToCharacterWithLowHealth_C_ExecuteUbergraph_PA_ApplyEffectToCharacterWithLowHealth final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PA_ApplyEffectToCharacterWithLowHealth_C_ExecuteUbergraph_PA_ApplyEffectToCharacterWithLowHealth) == 0x000004, "Wrong alignment on PA_ApplyEffectToCharacterWithLowHealth_C_ExecuteUbergraph_PA_ApplyEffectToCharacterWithLowHealth");
static_assert(sizeof(PA_ApplyEffectToCharacterWithLowHealth_C_ExecuteUbergraph_PA_ApplyEffectToCharacterWithLowHealth) == 0x000004, "Wrong size on PA_ApplyEffectToCharacterWithLowHealth_C_ExecuteUbergraph_PA_ApplyEffectToCharacterWithLowHealth");
static_assert(offsetof(PA_ApplyEffectToCharacterWithLowHealth_C_ExecuteUbergraph_PA_ApplyEffectToCharacterWithLowHealth, EntryPoint) == 0x000000, "Member 'PA_ApplyEffectToCharacterWithLowHealth_C_ExecuteUbergraph_PA_ApplyEffectToCharacterWithLowHealth::EntryPoint' has a wrong offset!");

}

