#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: AC_ElectricFenceZapper

#include "Basic.hpp"

#include "GameplayAbilities_structs.hpp"
#include "JP_structs.hpp"
#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function AC_ElectricFenceZapper.AC_ElectricFenceZapper_C.ApplyDamage
// 0x02E0 (0x02E0 - 0x0000)
struct AC_ElectricFenceZapper_C_ApplyDamage final
{
public:
	class AActor*                                 DamagedActor;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class II_Team_BP_C>          K2Node_DynamicCast_AsI_Team_BP;                    // 0x0008(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAbilitySystemComponent*                CallFunc_GetAbilitySystemComponent_ReturnValue;    // 0x0020(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetTeamID_Return;                         // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAbilitySystemComponentIW*              K2Node_DynamicCast_AsAbility_System_Component_IW;  // 0x0030(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class II_ActorWithName_C>    K2Node_DynamicCast_AsI_Actor_with_Name;            // 0x0040(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetName_Name;                             // 0x0058(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class UAbilitySystemComponent*                CallFunc_GetAbilitySystemComponent_ReturnValue_1;  // 0x0068(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FGameplayEffectSpecHandle              CallFunc_MakeOutgoingSpec_ReturnValue;             // 0x0070(0x0010)()
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0080(0x0010)()
	struct FGameplayEffectSpecHandle              CallFunc_AssignTagSetByCallerMagnitude_ReturnValue; // 0x0090(0x0010)()
	struct FKillData                              K2Node_MakeStruct_KillData;                        // 0x00A0(0x00C0)()
	bool                                          CallFunc_ApplyGameplayEffectSpecToTargetWithChange_Changed; // 0x0160(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_161[0x3];                                      // 0x0161(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FActiveGameplayEffectHandle            CallFunc_ApplyGameplayEffectSpecToTargetWithChange_ReturnValue; // 0x0164(0x0008)(NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_16C[0x4];                                      // 0x016C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayEffectContextHandle           CallFunc_GetEffectContext_ReturnValue;             // 0x0170(0x0018)()
	struct FCombatParticipant                     K2Node_MakeStruct_CombatParticipant;               // 0x0188(0x0060)()
	struct FHitResult                             CallFunc_MakeHitResult_ReturnValue;                // 0x01E8(0x00F8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(AC_ElectricFenceZapper_C_ApplyDamage) == 0x000008, "Wrong alignment on AC_ElectricFenceZapper_C_ApplyDamage");
static_assert(sizeof(AC_ElectricFenceZapper_C_ApplyDamage) == 0x0002E0, "Wrong size on AC_ElectricFenceZapper_C_ApplyDamage");
static_assert(offsetof(AC_ElectricFenceZapper_C_ApplyDamage, DamagedActor) == 0x000000, "Member 'AC_ElectricFenceZapper_C_ApplyDamage::DamagedActor' has a wrong offset!");
static_assert(offsetof(AC_ElectricFenceZapper_C_ApplyDamage, K2Node_DynamicCast_AsI_Team_BP) == 0x000008, "Member 'AC_ElectricFenceZapper_C_ApplyDamage::K2Node_DynamicCast_AsI_Team_BP' has a wrong offset!");
static_assert(offsetof(AC_ElectricFenceZapper_C_ApplyDamage, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'AC_ElectricFenceZapper_C_ApplyDamage::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(AC_ElectricFenceZapper_C_ApplyDamage, CallFunc_GetAbilitySystemComponent_ReturnValue) == 0x000020, "Member 'AC_ElectricFenceZapper_C_ApplyDamage::CallFunc_GetAbilitySystemComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_ElectricFenceZapper_C_ApplyDamage, CallFunc_GetTeamID_Return) == 0x000028, "Member 'AC_ElectricFenceZapper_C_ApplyDamage::CallFunc_GetTeamID_Return' has a wrong offset!");
static_assert(offsetof(AC_ElectricFenceZapper_C_ApplyDamage, K2Node_DynamicCast_AsAbility_System_Component_IW) == 0x000030, "Member 'AC_ElectricFenceZapper_C_ApplyDamage::K2Node_DynamicCast_AsAbility_System_Component_IW' has a wrong offset!");
static_assert(offsetof(AC_ElectricFenceZapper_C_ApplyDamage, K2Node_DynamicCast_bSuccess_1) == 0x000038, "Member 'AC_ElectricFenceZapper_C_ApplyDamage::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(AC_ElectricFenceZapper_C_ApplyDamage, K2Node_DynamicCast_AsI_Actor_with_Name) == 0x000040, "Member 'AC_ElectricFenceZapper_C_ApplyDamage::K2Node_DynamicCast_AsI_Actor_with_Name' has a wrong offset!");
static_assert(offsetof(AC_ElectricFenceZapper_C_ApplyDamage, K2Node_DynamicCast_bSuccess_2) == 0x000050, "Member 'AC_ElectricFenceZapper_C_ApplyDamage::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(AC_ElectricFenceZapper_C_ApplyDamage, CallFunc_GetName_Name) == 0x000058, "Member 'AC_ElectricFenceZapper_C_ApplyDamage::CallFunc_GetName_Name' has a wrong offset!");
static_assert(offsetof(AC_ElectricFenceZapper_C_ApplyDamage, CallFunc_GetAbilitySystemComponent_ReturnValue_1) == 0x000068, "Member 'AC_ElectricFenceZapper_C_ApplyDamage::CallFunc_GetAbilitySystemComponent_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_ElectricFenceZapper_C_ApplyDamage, CallFunc_MakeOutgoingSpec_ReturnValue) == 0x000070, "Member 'AC_ElectricFenceZapper_C_ApplyDamage::CallFunc_MakeOutgoingSpec_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_ElectricFenceZapper_C_ApplyDamage, CallFunc_Conv_StringToText_ReturnValue) == 0x000080, "Member 'AC_ElectricFenceZapper_C_ApplyDamage::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_ElectricFenceZapper_C_ApplyDamage, CallFunc_AssignTagSetByCallerMagnitude_ReturnValue) == 0x000090, "Member 'AC_ElectricFenceZapper_C_ApplyDamage::CallFunc_AssignTagSetByCallerMagnitude_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_ElectricFenceZapper_C_ApplyDamage, K2Node_MakeStruct_KillData) == 0x0000A0, "Member 'AC_ElectricFenceZapper_C_ApplyDamage::K2Node_MakeStruct_KillData' has a wrong offset!");
static_assert(offsetof(AC_ElectricFenceZapper_C_ApplyDamage, CallFunc_ApplyGameplayEffectSpecToTargetWithChange_Changed) == 0x000160, "Member 'AC_ElectricFenceZapper_C_ApplyDamage::CallFunc_ApplyGameplayEffectSpecToTargetWithChange_Changed' has a wrong offset!");
static_assert(offsetof(AC_ElectricFenceZapper_C_ApplyDamage, CallFunc_ApplyGameplayEffectSpecToTargetWithChange_ReturnValue) == 0x000164, "Member 'AC_ElectricFenceZapper_C_ApplyDamage::CallFunc_ApplyGameplayEffectSpecToTargetWithChange_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_ElectricFenceZapper_C_ApplyDamage, CallFunc_GetEffectContext_ReturnValue) == 0x000170, "Member 'AC_ElectricFenceZapper_C_ApplyDamage::CallFunc_GetEffectContext_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_ElectricFenceZapper_C_ApplyDamage, K2Node_MakeStruct_CombatParticipant) == 0x000188, "Member 'AC_ElectricFenceZapper_C_ApplyDamage::K2Node_MakeStruct_CombatParticipant' has a wrong offset!");
static_assert(offsetof(AC_ElectricFenceZapper_C_ApplyDamage, CallFunc_MakeHitResult_ReturnValue) == 0x0001E8, "Member 'AC_ElectricFenceZapper_C_ApplyDamage::CallFunc_MakeHitResult_ReturnValue' has a wrong offset!");

// Function AC_ElectricFenceZapper.AC_ElectricFenceZapper_C.ExecuteUbergraph_AC_ElectricFenceZapper
// 0x0340 (0x0340 - 0x0000)
struct AC_ElectricFenceZapper_C_ExecuteUbergraph_AC_ElectricFenceZapper final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<EObjectTypeQuery>                      K2Node_MakeArray_Array;                            // 0x0008(0x0010)(ConstParm, ReferenceParm)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    K2Node_CustomEvent_OverlappedComponent;            // 0x0028(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_CustomEvent_OtherActor;                     // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_CustomEvent_OtherComp;                      // 0x0038(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_OtherBodyIndex;                 // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bFromSweep;                     // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_45[0x3];                                       // 0x0045(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_CustomEvent_SweepResult;                    // 0x0048(0x00F8)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class AActor*                                 CallFunc_GetOwner_ReturnValue_1;                   // 0x0140(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class II_Knockbackable_C>    K2Node_DynamicCast_AsI_Knockbackable;              // 0x0148(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0158(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_159[0x7];                                      // 0x0159(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0160(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsSameTeam_ReturnValue;                   // 0x0178(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_179[0x7];                                      // 0x0179(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayCueParameters                 CallFunc_MakeGameplayCueParameters_ReturnValue;    // 0x0180(0x00D8)(ContainsInstancedReference)
	struct FVector                                CallFunc_GetActorForwardVector_ReturnValue;        // 0x0258(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         Temp_object_Variable;                              // 0x0270(0x0010)(ConstParm, ReferenceParm)
	TDelegate<void(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, struct FHitResult& SweepResult)> K2Node_CreateDelegate_OutputDelegate;              // 0x0280(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_DoubleToVector_ReturnValue;          // 0x0290(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue;        // 0x02A8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Knockback_Void;                           // 0x02C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C1[0x7];                                      // 0x02C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Get_ClassLog_Name_name;                   // 0x02C8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue_2;                   // 0x02D8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x02E0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Get_ClassLog_Name_name_1;                 // 0x02F8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	TArray<class AActor*>                         CallFunc_SphereOverlapActors_OutActors;            // 0x0308(0x0010)(ReferenceParm)
	bool                                          CallFunc_SphereOverlapActors_ReturnValue;          // 0x0318(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_319[0x7];                                      // 0x0319(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_Array_Get_Item;                           // 0x0320(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class II_Team_BP_C>          K2Node_DynamicCast_AsI_Team_BP;                    // 0x0328(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0338(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetTeamID_Return;                         // 0x0339(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AC_ElectricFenceZapper_C_ExecuteUbergraph_AC_ElectricFenceZapper) == 0x000008, "Wrong alignment on AC_ElectricFenceZapper_C_ExecuteUbergraph_AC_ElectricFenceZapper");
static_assert(sizeof(AC_ElectricFenceZapper_C_ExecuteUbergraph_AC_ElectricFenceZapper) == 0x000340, "Wrong size on AC_ElectricFenceZapper_C_ExecuteUbergraph_AC_ElectricFenceZapper");
static_assert(offsetof(AC_ElectricFenceZapper_C_ExecuteUbergraph_AC_ElectricFenceZapper, EntryPoint) == 0x000000, "Member 'AC_ElectricFenceZapper_C_ExecuteUbergraph_AC_ElectricFenceZapper::EntryPoint' has a wrong offset!");
static_assert(offsetof(AC_ElectricFenceZapper_C_ExecuteUbergraph_AC_ElectricFenceZapper, K2Node_MakeArray_Array) == 0x000008, "Member 'AC_ElectricFenceZapper_C_ExecuteUbergraph_AC_ElectricFenceZapper::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(AC_ElectricFenceZapper_C_ExecuteUbergraph_AC_ElectricFenceZapper, CallFunc_GetOwner_ReturnValue) == 0x000018, "Member 'AC_ElectricFenceZapper_C_ExecuteUbergraph_AC_ElectricFenceZapper::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_ElectricFenceZapper_C_ExecuteUbergraph_AC_ElectricFenceZapper, CallFunc_HasAuthority_ReturnValue) == 0x000020, "Member 'AC_ElectricFenceZapper_C_ExecuteUbergraph_AC_ElectricFenceZapper::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_ElectricFenceZapper_C_ExecuteUbergraph_AC_ElectricFenceZapper, K2Node_CustomEvent_OverlappedComponent) == 0x000028, "Member 'AC_ElectricFenceZapper_C_ExecuteUbergraph_AC_ElectricFenceZapper::K2Node_CustomEvent_OverlappedComponent' has a wrong offset!");
static_assert(offsetof(AC_ElectricFenceZapper_C_ExecuteUbergraph_AC_ElectricFenceZapper, K2Node_CustomEvent_OtherActor) == 0x000030, "Member 'AC_ElectricFenceZapper_C_ExecuteUbergraph_AC_ElectricFenceZapper::K2Node_CustomEvent_OtherActor' has a wrong offset!");
static_assert(offsetof(AC_ElectricFenceZapper_C_ExecuteUbergraph_AC_ElectricFenceZapper, K2Node_CustomEvent_OtherComp) == 0x000038, "Member 'AC_ElectricFenceZapper_C_ExecuteUbergraph_AC_ElectricFenceZapper::K2Node_CustomEvent_OtherComp' has a wrong offset!");
static_assert(offsetof(AC_ElectricFenceZapper_C_ExecuteUbergraph_AC_ElectricFenceZapper, K2Node_CustomEvent_OtherBodyIndex) == 0x000040, "Member 'AC_ElectricFenceZapper_C_ExecuteUbergraph_AC_ElectricFenceZapper::K2Node_CustomEvent_OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(AC_ElectricFenceZapper_C_ExecuteUbergraph_AC_ElectricFenceZapper, K2Node_CustomEvent_bFromSweep) == 0x000044, "Member 'AC_ElectricFenceZapper_C_ExecuteUbergraph_AC_ElectricFenceZapper::K2Node_CustomEvent_bFromSweep' has a wrong offset!");
static_assert(offsetof(AC_ElectricFenceZapper_C_ExecuteUbergraph_AC_ElectricFenceZapper, K2Node_CustomEvent_SweepResult) == 0x000048, "Member 'AC_ElectricFenceZapper_C_ExecuteUbergraph_AC_ElectricFenceZapper::K2Node_CustomEvent_SweepResult' has a wrong offset!");
static_assert(offsetof(AC_ElectricFenceZapper_C_ExecuteUbergraph_AC_ElectricFenceZapper, CallFunc_GetOwner_ReturnValue_1) == 0x000140, "Member 'AC_ElectricFenceZapper_C_ExecuteUbergraph_AC_ElectricFenceZapper::CallFunc_GetOwner_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_ElectricFenceZapper_C_ExecuteUbergraph_AC_ElectricFenceZapper, K2Node_DynamicCast_AsI_Knockbackable) == 0x000148, "Member 'AC_ElectricFenceZapper_C_ExecuteUbergraph_AC_ElectricFenceZapper::K2Node_DynamicCast_AsI_Knockbackable' has a wrong offset!");
static_assert(offsetof(AC_ElectricFenceZapper_C_ExecuteUbergraph_AC_ElectricFenceZapper, K2Node_DynamicCast_bSuccess) == 0x000158, "Member 'AC_ElectricFenceZapper_C_ExecuteUbergraph_AC_ElectricFenceZapper::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(AC_ElectricFenceZapper_C_ExecuteUbergraph_AC_ElectricFenceZapper, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000160, "Member 'AC_ElectricFenceZapper_C_ExecuteUbergraph_AC_ElectricFenceZapper::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_ElectricFenceZapper_C_ExecuteUbergraph_AC_ElectricFenceZapper, CallFunc_IsSameTeam_ReturnValue) == 0x000178, "Member 'AC_ElectricFenceZapper_C_ExecuteUbergraph_AC_ElectricFenceZapper::CallFunc_IsSameTeam_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_ElectricFenceZapper_C_ExecuteUbergraph_AC_ElectricFenceZapper, CallFunc_MakeGameplayCueParameters_ReturnValue) == 0x000180, "Member 'AC_ElectricFenceZapper_C_ExecuteUbergraph_AC_ElectricFenceZapper::CallFunc_MakeGameplayCueParameters_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_ElectricFenceZapper_C_ExecuteUbergraph_AC_ElectricFenceZapper, CallFunc_GetActorForwardVector_ReturnValue) == 0x000258, "Member 'AC_ElectricFenceZapper_C_ExecuteUbergraph_AC_ElectricFenceZapper::CallFunc_GetActorForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_ElectricFenceZapper_C_ExecuteUbergraph_AC_ElectricFenceZapper, Temp_object_Variable) == 0x000270, "Member 'AC_ElectricFenceZapper_C_ExecuteUbergraph_AC_ElectricFenceZapper::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(AC_ElectricFenceZapper_C_ExecuteUbergraph_AC_ElectricFenceZapper, K2Node_CreateDelegate_OutputDelegate) == 0x000280, "Member 'AC_ElectricFenceZapper_C_ExecuteUbergraph_AC_ElectricFenceZapper::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(AC_ElectricFenceZapper_C_ExecuteUbergraph_AC_ElectricFenceZapper, CallFunc_Conv_DoubleToVector_ReturnValue) == 0x000290, "Member 'AC_ElectricFenceZapper_C_ExecuteUbergraph_AC_ElectricFenceZapper::CallFunc_Conv_DoubleToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_ElectricFenceZapper_C_ExecuteUbergraph_AC_ElectricFenceZapper, CallFunc_Multiply_VectorVector_ReturnValue) == 0x0002A8, "Member 'AC_ElectricFenceZapper_C_ExecuteUbergraph_AC_ElectricFenceZapper::CallFunc_Multiply_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_ElectricFenceZapper_C_ExecuteUbergraph_AC_ElectricFenceZapper, CallFunc_Knockback_Void) == 0x0002C0, "Member 'AC_ElectricFenceZapper_C_ExecuteUbergraph_AC_ElectricFenceZapper::CallFunc_Knockback_Void' has a wrong offset!");
static_assert(offsetof(AC_ElectricFenceZapper_C_ExecuteUbergraph_AC_ElectricFenceZapper, CallFunc_Get_ClassLog_Name_name) == 0x0002C8, "Member 'AC_ElectricFenceZapper_C_ExecuteUbergraph_AC_ElectricFenceZapper::CallFunc_Get_ClassLog_Name_name' has a wrong offset!");
static_assert(offsetof(AC_ElectricFenceZapper_C_ExecuteUbergraph_AC_ElectricFenceZapper, CallFunc_GetOwner_ReturnValue_2) == 0x0002D8, "Member 'AC_ElectricFenceZapper_C_ExecuteUbergraph_AC_ElectricFenceZapper::CallFunc_GetOwner_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AC_ElectricFenceZapper_C_ExecuteUbergraph_AC_ElectricFenceZapper, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x0002E0, "Member 'AC_ElectricFenceZapper_C_ExecuteUbergraph_AC_ElectricFenceZapper::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_ElectricFenceZapper_C_ExecuteUbergraph_AC_ElectricFenceZapper, CallFunc_Get_ClassLog_Name_name_1) == 0x0002F8, "Member 'AC_ElectricFenceZapper_C_ExecuteUbergraph_AC_ElectricFenceZapper::CallFunc_Get_ClassLog_Name_name_1' has a wrong offset!");
static_assert(offsetof(AC_ElectricFenceZapper_C_ExecuteUbergraph_AC_ElectricFenceZapper, CallFunc_SphereOverlapActors_OutActors) == 0x000308, "Member 'AC_ElectricFenceZapper_C_ExecuteUbergraph_AC_ElectricFenceZapper::CallFunc_SphereOverlapActors_OutActors' has a wrong offset!");
static_assert(offsetof(AC_ElectricFenceZapper_C_ExecuteUbergraph_AC_ElectricFenceZapper, CallFunc_SphereOverlapActors_ReturnValue) == 0x000318, "Member 'AC_ElectricFenceZapper_C_ExecuteUbergraph_AC_ElectricFenceZapper::CallFunc_SphereOverlapActors_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_ElectricFenceZapper_C_ExecuteUbergraph_AC_ElectricFenceZapper, CallFunc_Array_Get_Item) == 0x000320, "Member 'AC_ElectricFenceZapper_C_ExecuteUbergraph_AC_ElectricFenceZapper::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(AC_ElectricFenceZapper_C_ExecuteUbergraph_AC_ElectricFenceZapper, K2Node_DynamicCast_AsI_Team_BP) == 0x000328, "Member 'AC_ElectricFenceZapper_C_ExecuteUbergraph_AC_ElectricFenceZapper::K2Node_DynamicCast_AsI_Team_BP' has a wrong offset!");
static_assert(offsetof(AC_ElectricFenceZapper_C_ExecuteUbergraph_AC_ElectricFenceZapper, K2Node_DynamicCast_bSuccess_1) == 0x000338, "Member 'AC_ElectricFenceZapper_C_ExecuteUbergraph_AC_ElectricFenceZapper::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(AC_ElectricFenceZapper_C_ExecuteUbergraph_AC_ElectricFenceZapper, CallFunc_GetTeamID_Return) == 0x000339, "Member 'AC_ElectricFenceZapper_C_ExecuteUbergraph_AC_ElectricFenceZapper::CallFunc_GetTeamID_Return' has a wrong offset!");

// Function AC_ElectricFenceZapper.AC_ElectricFenceZapper_C.IsSameTeam
// 0x0028 (0x0028 - 0x0000)
struct AC_ElectricFenceZapper_C_IsSameTeam final
{
public:
	class UObject*                                OverlappingActor;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Temp_byte_Variable;                                // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A[0x6];                                        // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class ITeamableInterface>    K2Node_DynamicCast_AsTeamable_Interface;           // 0x0010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetTeamID_ReturnValue;                    // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AC_ElectricFenceZapper_C_IsSameTeam) == 0x000008, "Wrong alignment on AC_ElectricFenceZapper_C_IsSameTeam");
static_assert(sizeof(AC_ElectricFenceZapper_C_IsSameTeam) == 0x000028, "Wrong size on AC_ElectricFenceZapper_C_IsSameTeam");
static_assert(offsetof(AC_ElectricFenceZapper_C_IsSameTeam, OverlappingActor) == 0x000000, "Member 'AC_ElectricFenceZapper_C_IsSameTeam::OverlappingActor' has a wrong offset!");
static_assert(offsetof(AC_ElectricFenceZapper_C_IsSameTeam, ReturnValue) == 0x000008, "Member 'AC_ElectricFenceZapper_C_IsSameTeam::ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_ElectricFenceZapper_C_IsSameTeam, Temp_byte_Variable) == 0x000009, "Member 'AC_ElectricFenceZapper_C_IsSameTeam::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(AC_ElectricFenceZapper_C_IsSameTeam, K2Node_DynamicCast_AsTeamable_Interface) == 0x000010, "Member 'AC_ElectricFenceZapper_C_IsSameTeam::K2Node_DynamicCast_AsTeamable_Interface' has a wrong offset!");
static_assert(offsetof(AC_ElectricFenceZapper_C_IsSameTeam, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'AC_ElectricFenceZapper_C_IsSameTeam::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(AC_ElectricFenceZapper_C_IsSameTeam, CallFunc_GetTeamID_ReturnValue) == 0x000021, "Member 'AC_ElectricFenceZapper_C_IsSameTeam::CallFunc_GetTeamID_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_ElectricFenceZapper_C_IsSameTeam, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000022, "Member 'AC_ElectricFenceZapper_C_IsSameTeam::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function AC_ElectricFenceZapper.AC_ElectricFenceZapper_C.On_ZappedActor__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct AC_ElectricFenceZapper_C_On_ZappedActor__DelegateSignature final
{
public:
	class AActor*                                 Actor;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AC_ElectricFenceZapper_C_On_ZappedActor__DelegateSignature) == 0x000008, "Wrong alignment on AC_ElectricFenceZapper_C_On_ZappedActor__DelegateSignature");
static_assert(sizeof(AC_ElectricFenceZapper_C_On_ZappedActor__DelegateSignature) == 0x000008, "Wrong size on AC_ElectricFenceZapper_C_On_ZappedActor__DelegateSignature");
static_assert(offsetof(AC_ElectricFenceZapper_C_On_ZappedActor__DelegateSignature, Actor) == 0x000000, "Member 'AC_ElectricFenceZapper_C_On_ZappedActor__DelegateSignature::Actor' has a wrong offset!");

// Function AC_ElectricFenceZapper.AC_ElectricFenceZapper_C.OnComponentBeginOverlap_Event
// 0x0118 (0x0118 - 0x0000)
struct AC_ElectricFenceZapper_C_OnComponentBeginOverlap_Event final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bFromSweep;                                        // 0x001C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             SweepResult;                                       // 0x0020(0x00F8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(AC_ElectricFenceZapper_C_OnComponentBeginOverlap_Event) == 0x000008, "Wrong alignment on AC_ElectricFenceZapper_C_OnComponentBeginOverlap_Event");
static_assert(sizeof(AC_ElectricFenceZapper_C_OnComponentBeginOverlap_Event) == 0x000118, "Wrong size on AC_ElectricFenceZapper_C_OnComponentBeginOverlap_Event");
static_assert(offsetof(AC_ElectricFenceZapper_C_OnComponentBeginOverlap_Event, OverlappedComponent) == 0x000000, "Member 'AC_ElectricFenceZapper_C_OnComponentBeginOverlap_Event::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(AC_ElectricFenceZapper_C_OnComponentBeginOverlap_Event, OtherActor) == 0x000008, "Member 'AC_ElectricFenceZapper_C_OnComponentBeginOverlap_Event::OtherActor' has a wrong offset!");
static_assert(offsetof(AC_ElectricFenceZapper_C_OnComponentBeginOverlap_Event, OtherComp) == 0x000010, "Member 'AC_ElectricFenceZapper_C_OnComponentBeginOverlap_Event::OtherComp' has a wrong offset!");
static_assert(offsetof(AC_ElectricFenceZapper_C_OnComponentBeginOverlap_Event, OtherBodyIndex) == 0x000018, "Member 'AC_ElectricFenceZapper_C_OnComponentBeginOverlap_Event::OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(AC_ElectricFenceZapper_C_OnComponentBeginOverlap_Event, bFromSweep) == 0x00001C, "Member 'AC_ElectricFenceZapper_C_OnComponentBeginOverlap_Event::bFromSweep' has a wrong offset!");
static_assert(offsetof(AC_ElectricFenceZapper_C_OnComponentBeginOverlap_Event, SweepResult) == 0x000020, "Member 'AC_ElectricFenceZapper_C_OnComponentBeginOverlap_Event::SweepResult' has a wrong offset!");

}

