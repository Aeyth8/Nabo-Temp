#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WI_PortraitFrame

#include "Basic.hpp"

#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function WI_PortraitFrame.WI_PortraitFrame_C.ExecuteUbergraph_WI_PortraitFrame
// 0x0028 (0x0028 - 0x0000)
struct WI_PortraitFrame_C_ExecuteUbergraph_WI_PortraitFrame final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UOverlaySlot*                           CallFunc_SlotAsOverlaySlot_ReturnValue;            // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FMargin                                CallFunc_GetScaledPadding_ScaledPadding;           // 0x0010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_SetUserSpecifiedScale_InUserSpecifiedScale_ImplicitCast; // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WI_PortraitFrame_C_ExecuteUbergraph_WI_PortraitFrame) == 0x000008, "Wrong alignment on WI_PortraitFrame_C_ExecuteUbergraph_WI_PortraitFrame");
static_assert(sizeof(WI_PortraitFrame_C_ExecuteUbergraph_WI_PortraitFrame) == 0x000028, "Wrong size on WI_PortraitFrame_C_ExecuteUbergraph_WI_PortraitFrame");
static_assert(offsetof(WI_PortraitFrame_C_ExecuteUbergraph_WI_PortraitFrame, EntryPoint) == 0x000000, "Member 'WI_PortraitFrame_C_ExecuteUbergraph_WI_PortraitFrame::EntryPoint' has a wrong offset!");
static_assert(offsetof(WI_PortraitFrame_C_ExecuteUbergraph_WI_PortraitFrame, K2Node_Event_IsDesignTime) == 0x000004, "Member 'WI_PortraitFrame_C_ExecuteUbergraph_WI_PortraitFrame::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(WI_PortraitFrame_C_ExecuteUbergraph_WI_PortraitFrame, CallFunc_SlotAsOverlaySlot_ReturnValue) == 0x000008, "Member 'WI_PortraitFrame_C_ExecuteUbergraph_WI_PortraitFrame::CallFunc_SlotAsOverlaySlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(WI_PortraitFrame_C_ExecuteUbergraph_WI_PortraitFrame, CallFunc_GetScaledPadding_ScaledPadding) == 0x000010, "Member 'WI_PortraitFrame_C_ExecuteUbergraph_WI_PortraitFrame::CallFunc_GetScaledPadding_ScaledPadding' has a wrong offset!");
static_assert(offsetof(WI_PortraitFrame_C_ExecuteUbergraph_WI_PortraitFrame, CallFunc_SetUserSpecifiedScale_InUserSpecifiedScale_ImplicitCast) == 0x000020, "Member 'WI_PortraitFrame_C_ExecuteUbergraph_WI_PortraitFrame::CallFunc_SetUserSpecifiedScale_InUserSpecifiedScale_ImplicitCast' has a wrong offset!");

// Function WI_PortraitFrame.WI_PortraitFrame_C.GetScaledPadding
// 0x0088 (0x0088 - 0x0000)
struct WI_PortraitFrame_C_GetScaledPadding final
{
public:
	struct FMargin                                Padding_0;                                         // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
	double                                        Scale;                                             // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FMargin                                ScaledPadding;                                     // 0x0018(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_2;      // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_3;      // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FMargin                                K2Node_MakeStruct_Margin;                          // 0x0048(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	double                                        CallFunc_Multiply_DoubleDouble_A_ImplicitCast;     // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_A_ImplicitCast_1;   // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_A_ImplicitCast_2;   // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_A_ImplicitCast_3;   // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_MakeStruct_Left_ImplicitCast;               // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_MakeStruct_Bottom_ImplicitCast;             // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_MakeStruct_Right_ImplicitCast;              // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_MakeStruct_Top_ImplicitCast;                // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WI_PortraitFrame_C_GetScaledPadding) == 0x000008, "Wrong alignment on WI_PortraitFrame_C_GetScaledPadding");
static_assert(sizeof(WI_PortraitFrame_C_GetScaledPadding) == 0x000088, "Wrong size on WI_PortraitFrame_C_GetScaledPadding");
static_assert(offsetof(WI_PortraitFrame_C_GetScaledPadding, Padding_0) == 0x000000, "Member 'WI_PortraitFrame_C_GetScaledPadding::Padding_0' has a wrong offset!");
static_assert(offsetof(WI_PortraitFrame_C_GetScaledPadding, Scale) == 0x000010, "Member 'WI_PortraitFrame_C_GetScaledPadding::Scale' has a wrong offset!");
static_assert(offsetof(WI_PortraitFrame_C_GetScaledPadding, ScaledPadding) == 0x000018, "Member 'WI_PortraitFrame_C_GetScaledPadding::ScaledPadding' has a wrong offset!");
static_assert(offsetof(WI_PortraitFrame_C_GetScaledPadding, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000028, "Member 'WI_PortraitFrame_C_GetScaledPadding::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WI_PortraitFrame_C_GetScaledPadding, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000030, "Member 'WI_PortraitFrame_C_GetScaledPadding::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WI_PortraitFrame_C_GetScaledPadding, CallFunc_Multiply_DoubleDouble_ReturnValue_2) == 0x000038, "Member 'WI_PortraitFrame_C_GetScaledPadding::CallFunc_Multiply_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WI_PortraitFrame_C_GetScaledPadding, CallFunc_Multiply_DoubleDouble_ReturnValue_3) == 0x000040, "Member 'WI_PortraitFrame_C_GetScaledPadding::CallFunc_Multiply_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WI_PortraitFrame_C_GetScaledPadding, K2Node_MakeStruct_Margin) == 0x000048, "Member 'WI_PortraitFrame_C_GetScaledPadding::K2Node_MakeStruct_Margin' has a wrong offset!");
static_assert(offsetof(WI_PortraitFrame_C_GetScaledPadding, CallFunc_Multiply_DoubleDouble_A_ImplicitCast) == 0x000058, "Member 'WI_PortraitFrame_C_GetScaledPadding::CallFunc_Multiply_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WI_PortraitFrame_C_GetScaledPadding, CallFunc_Multiply_DoubleDouble_A_ImplicitCast_1) == 0x000060, "Member 'WI_PortraitFrame_C_GetScaledPadding::CallFunc_Multiply_DoubleDouble_A_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(WI_PortraitFrame_C_GetScaledPadding, CallFunc_Multiply_DoubleDouble_A_ImplicitCast_2) == 0x000068, "Member 'WI_PortraitFrame_C_GetScaledPadding::CallFunc_Multiply_DoubleDouble_A_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(WI_PortraitFrame_C_GetScaledPadding, CallFunc_Multiply_DoubleDouble_A_ImplicitCast_3) == 0x000070, "Member 'WI_PortraitFrame_C_GetScaledPadding::CallFunc_Multiply_DoubleDouble_A_ImplicitCast_3' has a wrong offset!");
static_assert(offsetof(WI_PortraitFrame_C_GetScaledPadding, K2Node_MakeStruct_Left_ImplicitCast) == 0x000078, "Member 'WI_PortraitFrame_C_GetScaledPadding::K2Node_MakeStruct_Left_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WI_PortraitFrame_C_GetScaledPadding, K2Node_MakeStruct_Bottom_ImplicitCast) == 0x00007C, "Member 'WI_PortraitFrame_C_GetScaledPadding::K2Node_MakeStruct_Bottom_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WI_PortraitFrame_C_GetScaledPadding, K2Node_MakeStruct_Right_ImplicitCast) == 0x000080, "Member 'WI_PortraitFrame_C_GetScaledPadding::K2Node_MakeStruct_Right_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WI_PortraitFrame_C_GetScaledPadding, K2Node_MakeStruct_Top_ImplicitCast) == 0x000084, "Member 'WI_PortraitFrame_C_GetScaledPadding::K2Node_MakeStruct_Top_ImplicitCast' has a wrong offset!");

// Function WI_PortraitFrame.WI_PortraitFrame_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct WI_PortraitFrame_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WI_PortraitFrame_C_PreConstruct) == 0x000001, "Wrong alignment on WI_PortraitFrame_C_PreConstruct");
static_assert(sizeof(WI_PortraitFrame_C_PreConstruct) == 0x000001, "Wrong size on WI_PortraitFrame_C_PreConstruct");
static_assert(offsetof(WI_PortraitFrame_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'WI_PortraitFrame_C_PreConstruct::IsDesignTime' has a wrong offset!");

}

