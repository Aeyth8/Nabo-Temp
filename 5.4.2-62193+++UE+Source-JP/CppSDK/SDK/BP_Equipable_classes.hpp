#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Equipable

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "GASIW_structs.hpp"
#include "GASIW_classes.hpp"
#include "PhysicsCore_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_Equipable.BP_Equipable_C
// 0x0030 (0x02C0 - 0x0290)
class ABP_Equipable_C : public AEquipable
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0290(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UAudioComponent*                        Audio_Impact;                                      // 0x0298(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        Audio;                                             // 0x02A0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x02A8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         MaterielLayerVolumeMultiplier;                     // 0x02B0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EEquipmentViewMode                            View_Mode;                                         // 0x02B4(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2B5[0x3];                                      // 0x02B5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimMontage*                           UseMontage;                                        // 0x02B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)

public:
	void CastNoShadow();
	void DisableShadowsOnLocalEquipables();
	void ExecuteUbergraph_BP_Equipable(int32 EntryPoint);
	void GetAudioComponent(TArray<class UAudioComponent*>* AudioComponents);
	void GetRenderMeshes(TArray<class UMeshComponent*>* Meshes);
	void GetViewMode(EEquipmentViewMode* ViewMode);
	void HighConstrastModeChanged(bool IsEnabled);
	void MakeVisible();
	void OnHandleViewMode(EEquipmentViewMode ViewMode);
	void OnOwnerDead(class ACharacter* Character);
	void PlayEquipableMontage(class UAnimMontage* MontageToPlay, class UAnimInstance* FollowerAnimInstance, class UAnimMontage* MontageLeader, class UAnimMontage* CurrentActiveMontage, class UAnimInstance* OtherAnimInstance, double InPlayRate, bool bBlocking, bool bItemReady);
	void PlayMaterialLayerSound(class UPhysicalMaterial* PhysicalMaterial);
	void PlaySound(class USoundCue* Sound);
	void ReceiveBeginPlay();
	void SetHighContrastMode(bool Enabled);
	void UserConstructionScript();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_Equipable_C">();
	}
	static class ABP_Equipable_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_Equipable_C>();
	}
};
static_assert(alignof(ABP_Equipable_C) == 0x000008, "Wrong alignment on ABP_Equipable_C");
static_assert(sizeof(ABP_Equipable_C) == 0x0002C0, "Wrong size on ABP_Equipable_C");
static_assert(offsetof(ABP_Equipable_C, UberGraphFrame) == 0x000290, "Member 'ABP_Equipable_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_Equipable_C, Audio_Impact) == 0x000298, "Member 'ABP_Equipable_C::Audio_Impact' has a wrong offset!");
static_assert(offsetof(ABP_Equipable_C, Audio) == 0x0002A0, "Member 'ABP_Equipable_C::Audio' has a wrong offset!");
static_assert(offsetof(ABP_Equipable_C, DefaultSceneRoot) == 0x0002A8, "Member 'ABP_Equipable_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ABP_Equipable_C, MaterielLayerVolumeMultiplier) == 0x0002B0, "Member 'ABP_Equipable_C::MaterielLayerVolumeMultiplier' has a wrong offset!");
static_assert(offsetof(ABP_Equipable_C, View_Mode) == 0x0002B4, "Member 'ABP_Equipable_C::View_Mode' has a wrong offset!");
static_assert(offsetof(ABP_Equipable_C, UseMontage) == 0x0002B8, "Member 'ABP_Equipable_C::UseMontage' has a wrong offset!");

}

