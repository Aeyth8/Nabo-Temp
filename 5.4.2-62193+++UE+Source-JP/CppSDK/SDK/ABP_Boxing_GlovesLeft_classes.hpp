#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ABP_Boxing_GlovesLeft

#include "Basic.hpp"

#include "AnimGraphRuntime_structs.hpp"
#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "ABP_Boxing_GlovesLeft_structs.hpp"
#include "GASIW_structs.hpp"


namespace SDK
{

// AnimBlueprintGeneratedClass ABP_Boxing_GlovesLeft.ABP_Boxing_GlovesLeft_C
// 0x01A0 (0x0510 - 0x0370)
class UABP_Boxing_GlovesLeft_C final : public UAnimInstance
{
public:
	uint8                                         Pad_368[0x8];                                      // 0x0368(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0370(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct ABP_Boxing_GlovesLeft::FAnimBlueprintGeneratedMutableData __AnimBlueprintMutables;                           // 0x0378(0x0010)(HasGetValueTypeHash)
	struct FAnimSubsystemInstance                 AnimBlueprintExtension_PropertyAccess;             // 0x0388(0x0008)()
	struct FAnimSubsystemInstance                 AnimBlueprintExtension_Base;                       // 0x0390(0x0008)()
	struct FAnimNode_Root                         AnimGraphNode_Root;                                // 0x0398(0x0020)()
	struct FAnimNode_LinkedInputPose              AnimGraphNode_LinkedInputPose;                     // 0x03B8(0x00B8)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot;                                // 0x0470(0x0048)()
	struct FAnimNode_SequenceEvaluator            AnimGraphNode_SequenceEvaluator;                   // 0x04B8(0x0040)()
	bool                                          Thirdperson;                                       // 0x04F8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4F9[0x7];                                      // 0x04F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimSequenceBase*                      Sequence;                                          // 0x0500(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash)

public:
	void AnimGraph(const struct FPoseLink& InPose, struct FPoseLink* AnimGraph_0);
	void BlueprintInitializeAnimation();
	void ExecuteUbergraph_ABP_Boxing_GlovesLeft(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"ABP_Boxing_GlovesLeft_C">();
	}
	static class UABP_Boxing_GlovesLeft_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UABP_Boxing_GlovesLeft_C>();
	}
};
static_assert(alignof(UABP_Boxing_GlovesLeft_C) == 0x000010, "Wrong alignment on UABP_Boxing_GlovesLeft_C");
static_assert(sizeof(UABP_Boxing_GlovesLeft_C) == 0x000510, "Wrong size on UABP_Boxing_GlovesLeft_C");
static_assert(offsetof(UABP_Boxing_GlovesLeft_C, UberGraphFrame) == 0x000370, "Member 'UABP_Boxing_GlovesLeft_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UABP_Boxing_GlovesLeft_C, __AnimBlueprintMutables) == 0x000378, "Member 'UABP_Boxing_GlovesLeft_C::__AnimBlueprintMutables' has a wrong offset!");
static_assert(offsetof(UABP_Boxing_GlovesLeft_C, AnimBlueprintExtension_PropertyAccess) == 0x000388, "Member 'UABP_Boxing_GlovesLeft_C::AnimBlueprintExtension_PropertyAccess' has a wrong offset!");
static_assert(offsetof(UABP_Boxing_GlovesLeft_C, AnimBlueprintExtension_Base) == 0x000390, "Member 'UABP_Boxing_GlovesLeft_C::AnimBlueprintExtension_Base' has a wrong offset!");
static_assert(offsetof(UABP_Boxing_GlovesLeft_C, AnimGraphNode_Root) == 0x000398, "Member 'UABP_Boxing_GlovesLeft_C::AnimGraphNode_Root' has a wrong offset!");
static_assert(offsetof(UABP_Boxing_GlovesLeft_C, AnimGraphNode_LinkedInputPose) == 0x0003B8, "Member 'UABP_Boxing_GlovesLeft_C::AnimGraphNode_LinkedInputPose' has a wrong offset!");
static_assert(offsetof(UABP_Boxing_GlovesLeft_C, AnimGraphNode_Slot) == 0x000470, "Member 'UABP_Boxing_GlovesLeft_C::AnimGraphNode_Slot' has a wrong offset!");
static_assert(offsetof(UABP_Boxing_GlovesLeft_C, AnimGraphNode_SequenceEvaluator) == 0x0004B8, "Member 'UABP_Boxing_GlovesLeft_C::AnimGraphNode_SequenceEvaluator' has a wrong offset!");
static_assert(offsetof(UABP_Boxing_GlovesLeft_C, Thirdperson) == 0x0004F8, "Member 'UABP_Boxing_GlovesLeft_C::Thirdperson' has a wrong offset!");
static_assert(offsetof(UABP_Boxing_GlovesLeft_C, Sequence) == 0x000500, "Member 'UABP_Boxing_GlovesLeft_C::Sequence' has a wrong offset!");

}

