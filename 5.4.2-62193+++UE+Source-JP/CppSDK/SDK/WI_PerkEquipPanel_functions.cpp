#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WI_PerkEquipPanel

#include "Basic.hpp"

#include "WI_PerkEquipPanel_classes.hpp"
#include "WI_PerkEquipPanel_parameters.hpp"


namespace SDK
{

// Function WI_PerkEquipPanel.WI_PerkEquipPanel_C.BndEvt__WI_PerkEquipPanel_NextNeighborSelector_K2Node_ComponentBoundEvent_1_CommonButtonBaseClicked__DelegateSignature
// (BlueprintEvent)
// Parameters:
// class UCommonButtonBase*                Button                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UWI_PerkEquipPanel_C::BndEvt__WI_PerkEquipPanel_NextNeighborSelector_K2Node_ComponentBoundEvent_1_CommonButtonBaseClicked__DelegateSignature(class UCommonButtonBase* Button)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WI_PerkEquipPanel_C", "BndEvt__WI_PerkEquipPanel_NextNeighborSelector_K2Node_ComponentBoundEvent_1_CommonButtonBaseClicked__DelegateSignature");

	Params::WI_PerkEquipPanel_C_BndEvt__WI_PerkEquipPanel_NextNeighborSelector_K2Node_ComponentBoundEvent_1_CommonButtonBaseClicked__DelegateSignature Parms{};

	Parms.Button = Button;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WI_PerkEquipPanel.WI_PerkEquipPanel_C.BndEvt__WI_PerkEquipPanel_PrevNeighborSelector_K2Node_ComponentBoundEvent_2_CommonButtonBaseClicked__DelegateSignature
// (BlueprintEvent)
// Parameters:
// class UCommonButtonBase*                Button                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UWI_PerkEquipPanel_C::BndEvt__WI_PerkEquipPanel_PrevNeighborSelector_K2Node_ComponentBoundEvent_2_CommonButtonBaseClicked__DelegateSignature(class UCommonButtonBase* Button)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WI_PerkEquipPanel_C", "BndEvt__WI_PerkEquipPanel_PrevNeighborSelector_K2Node_ComponentBoundEvent_2_CommonButtonBaseClicked__DelegateSignature");

	Params::WI_PerkEquipPanel_C_BndEvt__WI_PerkEquipPanel_PrevNeighborSelector_K2Node_ComponentBoundEvent_2_CommonButtonBaseClicked__DelegateSignature Parms{};

	Parms.Button = Button;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WI_PerkEquipPanel.WI_PerkEquipPanel_C.BndEvt__WI_PerkEquipPanel_ToggleEquipButton_K2Node_ComponentBoundEvent_0_CommonButtonBaseClicked__DelegateSignature
// (BlueprintEvent)
// Parameters:
// class UCommonButtonBase*                Button                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UWI_PerkEquipPanel_C::BndEvt__WI_PerkEquipPanel_ToggleEquipButton_K2Node_ComponentBoundEvent_0_CommonButtonBaseClicked__DelegateSignature(class UCommonButtonBase* Button)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WI_PerkEquipPanel_C", "BndEvt__WI_PerkEquipPanel_ToggleEquipButton_K2Node_ComponentBoundEvent_0_CommonButtonBaseClicked__DelegateSignature");

	Params::WI_PerkEquipPanel_C_BndEvt__WI_PerkEquipPanel_ToggleEquipButton_K2Node_ComponentBoundEvent_0_CommonButtonBaseClicked__DelegateSignature Parms{};

	Parms.Button = Button;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WI_PerkEquipPanel.WI_PerkEquipPanel_C.ExecuteUbergraph_WI_PerkEquipPanel
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWI_PerkEquipPanel_C::ExecuteUbergraph_WI_PerkEquipPanel(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WI_PerkEquipPanel_C", "ExecuteUbergraph_WI_PerkEquipPanel");

	Params::WI_PerkEquipPanel_C_ExecuteUbergraph_WI_PerkEquipPanel Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WI_PerkEquipPanel.WI_PerkEquipPanel_C.GetParentWidgetAndChildIndex
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UWrapBox*                         ParentWidget                                           (Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// int32                                   ChildIndex                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWI_PerkEquipPanel_C::GetParentWidgetAndChildIndex(class UWrapBox** ParentWidget, int32* ChildIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WI_PerkEquipPanel_C", "GetParentWidgetAndChildIndex");

	Params::WI_PerkEquipPanel_C_GetParentWidgetAndChildIndex Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (ParentWidget != nullptr)
		*ParentWidget = Parms.ParentWidget;

	if (ChildIndex != nullptr)
		*ChildIndex = Parms.ChildIndex;
}


// Function WI_PerkEquipPanel.WI_PerkEquipPanel_C.OnLoaded_3E7516644B33167501BE548EA195C154
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          Loaded                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UWI_PerkEquipPanel_C::OnLoaded_3E7516644B33167501BE548EA195C154(class UObject* Loaded)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WI_PerkEquipPanel_C", "OnLoaded_3E7516644B33167501BE548EA195C154");

	Params::WI_PerkEquipPanel_C_OnLoaded_3E7516644B33167501BE548EA195C154 Parms{};

	Parms.Loaded = Loaded;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WI_PerkEquipPanel.WI_PerkEquipPanel_C.OnLoadoutUpdated__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)

void UWI_PerkEquipPanel_C::OnLoadoutUpdated__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WI_PerkEquipPanel_C", "OnLoadoutUpdated__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WI_PerkEquipPanel.WI_PerkEquipPanel_C.SetIsPerkEquipped
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsEquipped                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWI_PerkEquipPanel_C::SetIsPerkEquipped(bool IsEquipped)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WI_PerkEquipPanel_C", "SetIsPerkEquipped");

	Params::WI_PerkEquipPanel_C_SetIsPerkEquipped Parms{};

	Parms.IsEquipped = IsEquipped;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WI_PerkEquipPanel.WI_PerkEquipPanel_C.SetLevelRequirement
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   RequiredLevel_0                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   NeighborLevel                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWI_PerkEquipPanel_C::SetLevelRequirement(int32 RequiredLevel_0, int32 NeighborLevel)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WI_PerkEquipPanel_C", "SetLevelRequirement");

	Params::WI_PerkEquipPanel_C_SetLevelRequirement Parms{};

	Parms.RequiredLevel_0 = RequiredLevel_0;
	Parms.NeighborLevel = NeighborLevel;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WI_PerkEquipPanel.WI_PerkEquipPanel_C.SetNeighborID
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGameplayTag                     NeighborID_0                                           (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)

void UWI_PerkEquipPanel_C::SetNeighborID(const struct FGameplayTag& NeighborID_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WI_PerkEquipPanel_C", "SetNeighborID");

	Params::WI_PerkEquipPanel_C_SetNeighborID Parms{};

	Parms.NeighborID_0 = std::move(NeighborID_0);

	UObject::ProcessEvent(Func, &Parms);
}


// Function WI_PerkEquipPanel.WI_PerkEquipPanel_C.SetPerkDescription
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FText                             PerkDescription_0                                      (BlueprintVisible, BlueprintReadOnly, Parm)

void UWI_PerkEquipPanel_C::SetPerkDescription(const class FText& PerkDescription_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WI_PerkEquipPanel_C", "SetPerkDescription");

	Params::WI_PerkEquipPanel_C_SetPerkDescription Parms{};

	Parms.PerkDescription_0 = std::move(PerkDescription_0);

	UObject::ProcessEvent(Func, &Parms);
}


// Function WI_PerkEquipPanel.WI_PerkEquipPanel_C.SetPerkID
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGameplayTag                     PerkID_0                                               (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
// TSoftObjectPtr<class UPerkDefinition>   SoftPerkDefinition                                     (Parm, OutParm, HasGetValueTypeHash)
// bool                                    HasPerkDefinition                                      (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWI_PerkEquipPanel_C::SetPerkID(const struct FGameplayTag& PerkID_0, TSoftObjectPtr<class UPerkDefinition>* SoftPerkDefinition, bool* HasPerkDefinition)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WI_PerkEquipPanel_C", "SetPerkID");

	Params::WI_PerkEquipPanel_C_SetPerkID Parms{};

	Parms.PerkID_0 = std::move(PerkID_0);

	UObject::ProcessEvent(Func, &Parms);

	if (SoftPerkDefinition != nullptr)
		*SoftPerkDefinition = Parms.SoftPerkDefinition;

	if (HasPerkDefinition != nullptr)
		*HasPerkDefinition = Parms.HasPerkDefinition;
}


// Function WI_PerkEquipPanel.WI_PerkEquipPanel_C.SetPerkInfo
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UWI_NeighborDetailsPerkSelectElement_C*PerkSelectElement_0                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UWI_PerkEquipPanel_C::SetPerkInfo(class UWI_NeighborDetailsPerkSelectElement_C* PerkSelectElement_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WI_PerkEquipPanel_C", "SetPerkInfo");

	Params::WI_PerkEquipPanel_C_SetPerkInfo Parms{};

	Parms.PerkSelectElement_0 = PerkSelectElement_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WI_PerkEquipPanel.WI_PerkEquipPanel_C.SetPerkName
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FText                             PerkName_0                                             (BlueprintVisible, BlueprintReadOnly, Parm)

void UWI_PerkEquipPanel_C::SetPerkName(const class FText& PerkName_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WI_PerkEquipPanel_C", "SetPerkName");

	Params::WI_PerkEquipPanel_C_SetPerkName Parms{};

	Parms.PerkName_0 = std::move(PerkName_0);

	UObject::ProcessEvent(Func, &Parms);
}


// Function WI_PerkEquipPanel.WI_PerkEquipPanel_C.SetPerkType
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGameplayTag                     PerkID_0                                               (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)

void UWI_PerkEquipPanel_C::SetPerkType(const struct FGameplayTag& PerkID_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WI_PerkEquipPanel_C", "SetPerkType");

	Params::WI_PerkEquipPanel_C_SetPerkType Parms{};

	Parms.PerkID_0 = std::move(PerkID_0);

	UObject::ProcessEvent(Func, &Parms);
}


// Function WI_PerkEquipPanel.WI_PerkEquipPanel_C.SetRequiredLevelTextAndVisibility
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   RequiredLevel_0                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    IsVisible_0                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWI_PerkEquipPanel_C::SetRequiredLevelTextAndVisibility(int32 RequiredLevel_0, bool IsVisible_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WI_PerkEquipPanel_C", "SetRequiredLevelTextAndVisibility");

	Params::WI_PerkEquipPanel_C_SetRequiredLevelTextAndVisibility Parms{};

	Parms.RequiredLevel_0 = RequiredLevel_0;
	Parms.IsVisible_0 = IsVisible_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WI_PerkEquipPanel.WI_PerkEquipPanel_C.ToggleEquipPerk
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UWI_PerkEquipPanel_C::ToggleEquipPerk()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WI_PerkEquipPanel_C", "ToggleEquipPerk");

	UObject::ProcessEvent(Func, nullptr);
}

}

