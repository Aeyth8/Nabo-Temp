#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_PreviewPawn

#include "Basic.hpp"

#include "JP_structs.hpp"


namespace SDK::Params
{

// Function BP_PreviewPawn.BP_PreviewPawn_C.ExecuteUbergraph_BP_PreviewPawn
// 0x0168 (0x0168 - 0x0000)
struct BP_PreviewPawn_C_ExecuteUbergraph_BP_PreviewPawn final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_7;                   // 0x0004(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate;              // 0x000C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_6;                   // 0x001C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_1;            // 0x0024(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_5;                   // 0x0034(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_2;            // 0x003C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable;                                // 0x004C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_3;            // 0x0054(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_4;                   // 0x0064(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_3;                   // 0x006C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_4;            // 0x0074(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_2;                   // 0x0084(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_5;            // 0x008C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_1;                   // 0x009C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_6;            // 0x00A4(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName;                     // 0x00B4(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_7;            // 0x00BC(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_1;                              // 0x00CC(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D4[0x4];                                       // 0x00D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USkeletalMesh*                          K2Node_CustomEvent_NewMesh;                        // 0x00D8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	ECharacterName                                K2Node_CustomEvent_CharacterName;                  // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x00E1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E2[0x6];                                       // 0x00E2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue;              // 0x00E8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UABP_JP_TPP_Preview_C*                  K2Node_DynamicCast_AsABP_JP_TPP_Preview;           // 0x00F0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECharacterName                                CallFunc_GetBaseAnimationValues_Character;         // 0x00F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_FA[0x6];                                       // 0x00FA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimMontage*                           CallFunc_GetBaseAnimationValues_MontageToPlay;     // 0x0100(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_109[0x7];                                      // 0x0109(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPlayMontageCallbackProxy*              CallFunc_CreateProxyObjectForPlayMontage_ReturnValue; // 0x0110(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_119[0x3];                                      // 0x0119(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_8;            // 0x011C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12C[0x4];                                      // 0x012C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimMontage*                           K2Node_CustomEvent_MontageToPlay;                  // 0x0130(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_8;                   // 0x0138(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPlayMontageCallbackProxy*              CallFunc_CreateProxyObjectForPlayMontage_ReturnValue_1; // 0x0140(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0148(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_149[0x3];                                      // 0x0149(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_9;            // 0x014C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_9;                   // 0x015C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PreviewPawn_C_ExecuteUbergraph_BP_PreviewPawn) == 0x000008, "Wrong alignment on BP_PreviewPawn_C_ExecuteUbergraph_BP_PreviewPawn");
static_assert(sizeof(BP_PreviewPawn_C_ExecuteUbergraph_BP_PreviewPawn) == 0x000168, "Wrong size on BP_PreviewPawn_C_ExecuteUbergraph_BP_PreviewPawn");
static_assert(offsetof(BP_PreviewPawn_C_ExecuteUbergraph_BP_PreviewPawn, EntryPoint) == 0x000000, "Member 'BP_PreviewPawn_C_ExecuteUbergraph_BP_PreviewPawn::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_PreviewPawn_C_ExecuteUbergraph_BP_PreviewPawn, K2Node_CustomEvent_NotifyName_7) == 0x000004, "Member 'BP_PreviewPawn_C_ExecuteUbergraph_BP_PreviewPawn::K2Node_CustomEvent_NotifyName_7' has a wrong offset!");
static_assert(offsetof(BP_PreviewPawn_C_ExecuteUbergraph_BP_PreviewPawn, K2Node_CreateDelegate_OutputDelegate) == 0x00000C, "Member 'BP_PreviewPawn_C_ExecuteUbergraph_BP_PreviewPawn::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_PreviewPawn_C_ExecuteUbergraph_BP_PreviewPawn, K2Node_CustomEvent_NotifyName_6) == 0x00001C, "Member 'BP_PreviewPawn_C_ExecuteUbergraph_BP_PreviewPawn::K2Node_CustomEvent_NotifyName_6' has a wrong offset!");
static_assert(offsetof(BP_PreviewPawn_C_ExecuteUbergraph_BP_PreviewPawn, K2Node_CreateDelegate_OutputDelegate_1) == 0x000024, "Member 'BP_PreviewPawn_C_ExecuteUbergraph_BP_PreviewPawn::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(BP_PreviewPawn_C_ExecuteUbergraph_BP_PreviewPawn, K2Node_CustomEvent_NotifyName_5) == 0x000034, "Member 'BP_PreviewPawn_C_ExecuteUbergraph_BP_PreviewPawn::K2Node_CustomEvent_NotifyName_5' has a wrong offset!");
static_assert(offsetof(BP_PreviewPawn_C_ExecuteUbergraph_BP_PreviewPawn, K2Node_CreateDelegate_OutputDelegate_2) == 0x00003C, "Member 'BP_PreviewPawn_C_ExecuteUbergraph_BP_PreviewPawn::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(BP_PreviewPawn_C_ExecuteUbergraph_BP_PreviewPawn, Temp_name_Variable) == 0x00004C, "Member 'BP_PreviewPawn_C_ExecuteUbergraph_BP_PreviewPawn::Temp_name_Variable' has a wrong offset!");
static_assert(offsetof(BP_PreviewPawn_C_ExecuteUbergraph_BP_PreviewPawn, K2Node_CreateDelegate_OutputDelegate_3) == 0x000054, "Member 'BP_PreviewPawn_C_ExecuteUbergraph_BP_PreviewPawn::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(BP_PreviewPawn_C_ExecuteUbergraph_BP_PreviewPawn, K2Node_CustomEvent_NotifyName_4) == 0x000064, "Member 'BP_PreviewPawn_C_ExecuteUbergraph_BP_PreviewPawn::K2Node_CustomEvent_NotifyName_4' has a wrong offset!");
static_assert(offsetof(BP_PreviewPawn_C_ExecuteUbergraph_BP_PreviewPawn, K2Node_CustomEvent_NotifyName_3) == 0x00006C, "Member 'BP_PreviewPawn_C_ExecuteUbergraph_BP_PreviewPawn::K2Node_CustomEvent_NotifyName_3' has a wrong offset!");
static_assert(offsetof(BP_PreviewPawn_C_ExecuteUbergraph_BP_PreviewPawn, K2Node_CreateDelegate_OutputDelegate_4) == 0x000074, "Member 'BP_PreviewPawn_C_ExecuteUbergraph_BP_PreviewPawn::K2Node_CreateDelegate_OutputDelegate_4' has a wrong offset!");
static_assert(offsetof(BP_PreviewPawn_C_ExecuteUbergraph_BP_PreviewPawn, K2Node_CustomEvent_NotifyName_2) == 0x000084, "Member 'BP_PreviewPawn_C_ExecuteUbergraph_BP_PreviewPawn::K2Node_CustomEvent_NotifyName_2' has a wrong offset!");
static_assert(offsetof(BP_PreviewPawn_C_ExecuteUbergraph_BP_PreviewPawn, K2Node_CreateDelegate_OutputDelegate_5) == 0x00008C, "Member 'BP_PreviewPawn_C_ExecuteUbergraph_BP_PreviewPawn::K2Node_CreateDelegate_OutputDelegate_5' has a wrong offset!");
static_assert(offsetof(BP_PreviewPawn_C_ExecuteUbergraph_BP_PreviewPawn, K2Node_CustomEvent_NotifyName_1) == 0x00009C, "Member 'BP_PreviewPawn_C_ExecuteUbergraph_BP_PreviewPawn::K2Node_CustomEvent_NotifyName_1' has a wrong offset!");
static_assert(offsetof(BP_PreviewPawn_C_ExecuteUbergraph_BP_PreviewPawn, K2Node_CreateDelegate_OutputDelegate_6) == 0x0000A4, "Member 'BP_PreviewPawn_C_ExecuteUbergraph_BP_PreviewPawn::K2Node_CreateDelegate_OutputDelegate_6' has a wrong offset!");
static_assert(offsetof(BP_PreviewPawn_C_ExecuteUbergraph_BP_PreviewPawn, K2Node_CustomEvent_NotifyName) == 0x0000B4, "Member 'BP_PreviewPawn_C_ExecuteUbergraph_BP_PreviewPawn::K2Node_CustomEvent_NotifyName' has a wrong offset!");
static_assert(offsetof(BP_PreviewPawn_C_ExecuteUbergraph_BP_PreviewPawn, K2Node_CreateDelegate_OutputDelegate_7) == 0x0000BC, "Member 'BP_PreviewPawn_C_ExecuteUbergraph_BP_PreviewPawn::K2Node_CreateDelegate_OutputDelegate_7' has a wrong offset!");
static_assert(offsetof(BP_PreviewPawn_C_ExecuteUbergraph_BP_PreviewPawn, Temp_name_Variable_1) == 0x0000CC, "Member 'BP_PreviewPawn_C_ExecuteUbergraph_BP_PreviewPawn::Temp_name_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_PreviewPawn_C_ExecuteUbergraph_BP_PreviewPawn, K2Node_CustomEvent_NewMesh) == 0x0000D8, "Member 'BP_PreviewPawn_C_ExecuteUbergraph_BP_PreviewPawn::K2Node_CustomEvent_NewMesh' has a wrong offset!");
static_assert(offsetof(BP_PreviewPawn_C_ExecuteUbergraph_BP_PreviewPawn, K2Node_CustomEvent_CharacterName) == 0x0000E0, "Member 'BP_PreviewPawn_C_ExecuteUbergraph_BP_PreviewPawn::K2Node_CustomEvent_CharacterName' has a wrong offset!");
static_assert(offsetof(BP_PreviewPawn_C_ExecuteUbergraph_BP_PreviewPawn, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x0000E1, "Member 'BP_PreviewPawn_C_ExecuteUbergraph_BP_PreviewPawn::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PreviewPawn_C_ExecuteUbergraph_BP_PreviewPawn, CallFunc_GetAnimInstance_ReturnValue) == 0x0000E8, "Member 'BP_PreviewPawn_C_ExecuteUbergraph_BP_PreviewPawn::CallFunc_GetAnimInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PreviewPawn_C_ExecuteUbergraph_BP_PreviewPawn, K2Node_DynamicCast_AsABP_JP_TPP_Preview) == 0x0000F0, "Member 'BP_PreviewPawn_C_ExecuteUbergraph_BP_PreviewPawn::K2Node_DynamicCast_AsABP_JP_TPP_Preview' has a wrong offset!");
static_assert(offsetof(BP_PreviewPawn_C_ExecuteUbergraph_BP_PreviewPawn, K2Node_DynamicCast_bSuccess) == 0x0000F8, "Member 'BP_PreviewPawn_C_ExecuteUbergraph_BP_PreviewPawn::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_PreviewPawn_C_ExecuteUbergraph_BP_PreviewPawn, CallFunc_GetBaseAnimationValues_Character) == 0x0000F9, "Member 'BP_PreviewPawn_C_ExecuteUbergraph_BP_PreviewPawn::CallFunc_GetBaseAnimationValues_Character' has a wrong offset!");
static_assert(offsetof(BP_PreviewPawn_C_ExecuteUbergraph_BP_PreviewPawn, CallFunc_GetBaseAnimationValues_MontageToPlay) == 0x000100, "Member 'BP_PreviewPawn_C_ExecuteUbergraph_BP_PreviewPawn::CallFunc_GetBaseAnimationValues_MontageToPlay' has a wrong offset!");
static_assert(offsetof(BP_PreviewPawn_C_ExecuteUbergraph_BP_PreviewPawn, CallFunc_IsValid_ReturnValue) == 0x000108, "Member 'BP_PreviewPawn_C_ExecuteUbergraph_BP_PreviewPawn::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PreviewPawn_C_ExecuteUbergraph_BP_PreviewPawn, CallFunc_CreateProxyObjectForPlayMontage_ReturnValue) == 0x000110, "Member 'BP_PreviewPawn_C_ExecuteUbergraph_BP_PreviewPawn::CallFunc_CreateProxyObjectForPlayMontage_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PreviewPawn_C_ExecuteUbergraph_BP_PreviewPawn, CallFunc_IsValid_ReturnValue_1) == 0x000118, "Member 'BP_PreviewPawn_C_ExecuteUbergraph_BP_PreviewPawn::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PreviewPawn_C_ExecuteUbergraph_BP_PreviewPawn, K2Node_CreateDelegate_OutputDelegate_8) == 0x00011C, "Member 'BP_PreviewPawn_C_ExecuteUbergraph_BP_PreviewPawn::K2Node_CreateDelegate_OutputDelegate_8' has a wrong offset!");
static_assert(offsetof(BP_PreviewPawn_C_ExecuteUbergraph_BP_PreviewPawn, K2Node_CustomEvent_MontageToPlay) == 0x000130, "Member 'BP_PreviewPawn_C_ExecuteUbergraph_BP_PreviewPawn::K2Node_CustomEvent_MontageToPlay' has a wrong offset!");
static_assert(offsetof(BP_PreviewPawn_C_ExecuteUbergraph_BP_PreviewPawn, K2Node_CustomEvent_NotifyName_8) == 0x000138, "Member 'BP_PreviewPawn_C_ExecuteUbergraph_BP_PreviewPawn::K2Node_CustomEvent_NotifyName_8' has a wrong offset!");
static_assert(offsetof(BP_PreviewPawn_C_ExecuteUbergraph_BP_PreviewPawn, CallFunc_CreateProxyObjectForPlayMontage_ReturnValue_1) == 0x000140, "Member 'BP_PreviewPawn_C_ExecuteUbergraph_BP_PreviewPawn::CallFunc_CreateProxyObjectForPlayMontage_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PreviewPawn_C_ExecuteUbergraph_BP_PreviewPawn, CallFunc_IsValid_ReturnValue_2) == 0x000148, "Member 'BP_PreviewPawn_C_ExecuteUbergraph_BP_PreviewPawn::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PreviewPawn_C_ExecuteUbergraph_BP_PreviewPawn, K2Node_CreateDelegate_OutputDelegate_9) == 0x00014C, "Member 'BP_PreviewPawn_C_ExecuteUbergraph_BP_PreviewPawn::K2Node_CreateDelegate_OutputDelegate_9' has a wrong offset!");
static_assert(offsetof(BP_PreviewPawn_C_ExecuteUbergraph_BP_PreviewPawn, K2Node_CustomEvent_NotifyName_9) == 0x00015C, "Member 'BP_PreviewPawn_C_ExecuteUbergraph_BP_PreviewPawn::K2Node_CustomEvent_NotifyName_9' has a wrong offset!");

// Function BP_PreviewPawn.BP_PreviewPawn_C.GetBaseAnimationValues
// 0x0078 (0x0078 - 0x0000)
struct BP_PreviewPawn_C_GetBaseAnimationValues final
{
public:
	ECharacterName                                CharacterName;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECharacterName                                Character;                                         // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimMontage*                           MontageToPlay;                                     // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	ECharacterName                                Temp_byte_Variable;                                // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimMontage*                           Temp_object_Variable;                              // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           Temp_object_Variable_1;                            // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           Temp_object_Variable_2;                            // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           Temp_object_Variable_3;                            // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           Temp_object_Variable_4;                            // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           Temp_object_Variable_5;                            // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           Temp_object_Variable_6;                            // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           Temp_object_Variable_7;                            // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           Temp_object_Variable_8;                            // 0x0058(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           Temp_object_Variable_9;                            // 0x0060(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           Temp_object_Variable_10;                           // 0x0068(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           K2Node_Select_Default;                             // 0x0070(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PreviewPawn_C_GetBaseAnimationValues) == 0x000008, "Wrong alignment on BP_PreviewPawn_C_GetBaseAnimationValues");
static_assert(sizeof(BP_PreviewPawn_C_GetBaseAnimationValues) == 0x000078, "Wrong size on BP_PreviewPawn_C_GetBaseAnimationValues");
static_assert(offsetof(BP_PreviewPawn_C_GetBaseAnimationValues, CharacterName) == 0x000000, "Member 'BP_PreviewPawn_C_GetBaseAnimationValues::CharacterName' has a wrong offset!");
static_assert(offsetof(BP_PreviewPawn_C_GetBaseAnimationValues, Character) == 0x000001, "Member 'BP_PreviewPawn_C_GetBaseAnimationValues::Character' has a wrong offset!");
static_assert(offsetof(BP_PreviewPawn_C_GetBaseAnimationValues, MontageToPlay) == 0x000008, "Member 'BP_PreviewPawn_C_GetBaseAnimationValues::MontageToPlay' has a wrong offset!");
static_assert(offsetof(BP_PreviewPawn_C_GetBaseAnimationValues, Temp_byte_Variable) == 0x000010, "Member 'BP_PreviewPawn_C_GetBaseAnimationValues::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_PreviewPawn_C_GetBaseAnimationValues, Temp_object_Variable) == 0x000018, "Member 'BP_PreviewPawn_C_GetBaseAnimationValues::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BP_PreviewPawn_C_GetBaseAnimationValues, Temp_object_Variable_1) == 0x000020, "Member 'BP_PreviewPawn_C_GetBaseAnimationValues::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_PreviewPawn_C_GetBaseAnimationValues, Temp_object_Variable_2) == 0x000028, "Member 'BP_PreviewPawn_C_GetBaseAnimationValues::Temp_object_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_PreviewPawn_C_GetBaseAnimationValues, Temp_object_Variable_3) == 0x000030, "Member 'BP_PreviewPawn_C_GetBaseAnimationValues::Temp_object_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_PreviewPawn_C_GetBaseAnimationValues, Temp_object_Variable_4) == 0x000038, "Member 'BP_PreviewPawn_C_GetBaseAnimationValues::Temp_object_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_PreviewPawn_C_GetBaseAnimationValues, Temp_object_Variable_5) == 0x000040, "Member 'BP_PreviewPawn_C_GetBaseAnimationValues::Temp_object_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_PreviewPawn_C_GetBaseAnimationValues, Temp_object_Variable_6) == 0x000048, "Member 'BP_PreviewPawn_C_GetBaseAnimationValues::Temp_object_Variable_6' has a wrong offset!");
static_assert(offsetof(BP_PreviewPawn_C_GetBaseAnimationValues, Temp_object_Variable_7) == 0x000050, "Member 'BP_PreviewPawn_C_GetBaseAnimationValues::Temp_object_Variable_7' has a wrong offset!");
static_assert(offsetof(BP_PreviewPawn_C_GetBaseAnimationValues, Temp_object_Variable_8) == 0x000058, "Member 'BP_PreviewPawn_C_GetBaseAnimationValues::Temp_object_Variable_8' has a wrong offset!");
static_assert(offsetof(BP_PreviewPawn_C_GetBaseAnimationValues, Temp_object_Variable_9) == 0x000060, "Member 'BP_PreviewPawn_C_GetBaseAnimationValues::Temp_object_Variable_9' has a wrong offset!");
static_assert(offsetof(BP_PreviewPawn_C_GetBaseAnimationValues, Temp_object_Variable_10) == 0x000068, "Member 'BP_PreviewPawn_C_GetBaseAnimationValues::Temp_object_Variable_10' has a wrong offset!");
static_assert(offsetof(BP_PreviewPawn_C_GetBaseAnimationValues, K2Node_Select_Default) == 0x000070, "Member 'BP_PreviewPawn_C_GetBaseAnimationValues::K2Node_Select_Default' has a wrong offset!");

// Function BP_PreviewPawn.BP_PreviewPawn_C.OnBlendOut_4AD4CE67401BD37B6FF5109F83AD4D26
// 0x0008 (0x0008 - 0x0000)
struct BP_PreviewPawn_C_OnBlendOut_4AD4CE67401BD37B6FF5109F83AD4D26 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PreviewPawn_C_OnBlendOut_4AD4CE67401BD37B6FF5109F83AD4D26) == 0x000004, "Wrong alignment on BP_PreviewPawn_C_OnBlendOut_4AD4CE67401BD37B6FF5109F83AD4D26");
static_assert(sizeof(BP_PreviewPawn_C_OnBlendOut_4AD4CE67401BD37B6FF5109F83AD4D26) == 0x000008, "Wrong size on BP_PreviewPawn_C_OnBlendOut_4AD4CE67401BD37B6FF5109F83AD4D26");
static_assert(offsetof(BP_PreviewPawn_C_OnBlendOut_4AD4CE67401BD37B6FF5109F83AD4D26, NotifyName) == 0x000000, "Member 'BP_PreviewPawn_C_OnBlendOut_4AD4CE67401BD37B6FF5109F83AD4D26::NotifyName' has a wrong offset!");

// Function BP_PreviewPawn.BP_PreviewPawn_C.OnBlendOut_5DB600FE40A05D4C0F2D79A50EE9506D
// 0x0008 (0x0008 - 0x0000)
struct BP_PreviewPawn_C_OnBlendOut_5DB600FE40A05D4C0F2D79A50EE9506D final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PreviewPawn_C_OnBlendOut_5DB600FE40A05D4C0F2D79A50EE9506D) == 0x000004, "Wrong alignment on BP_PreviewPawn_C_OnBlendOut_5DB600FE40A05D4C0F2D79A50EE9506D");
static_assert(sizeof(BP_PreviewPawn_C_OnBlendOut_5DB600FE40A05D4C0F2D79A50EE9506D) == 0x000008, "Wrong size on BP_PreviewPawn_C_OnBlendOut_5DB600FE40A05D4C0F2D79A50EE9506D");
static_assert(offsetof(BP_PreviewPawn_C_OnBlendOut_5DB600FE40A05D4C0F2D79A50EE9506D, NotifyName) == 0x000000, "Member 'BP_PreviewPawn_C_OnBlendOut_5DB600FE40A05D4C0F2D79A50EE9506D::NotifyName' has a wrong offset!");

// Function BP_PreviewPawn.BP_PreviewPawn_C.OnCompleted_4AD4CE67401BD37B6FF5109F83AD4D26
// 0x0008 (0x0008 - 0x0000)
struct BP_PreviewPawn_C_OnCompleted_4AD4CE67401BD37B6FF5109F83AD4D26 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PreviewPawn_C_OnCompleted_4AD4CE67401BD37B6FF5109F83AD4D26) == 0x000004, "Wrong alignment on BP_PreviewPawn_C_OnCompleted_4AD4CE67401BD37B6FF5109F83AD4D26");
static_assert(sizeof(BP_PreviewPawn_C_OnCompleted_4AD4CE67401BD37B6FF5109F83AD4D26) == 0x000008, "Wrong size on BP_PreviewPawn_C_OnCompleted_4AD4CE67401BD37B6FF5109F83AD4D26");
static_assert(offsetof(BP_PreviewPawn_C_OnCompleted_4AD4CE67401BD37B6FF5109F83AD4D26, NotifyName) == 0x000000, "Member 'BP_PreviewPawn_C_OnCompleted_4AD4CE67401BD37B6FF5109F83AD4D26::NotifyName' has a wrong offset!");

// Function BP_PreviewPawn.BP_PreviewPawn_C.OnCompleted_5DB600FE40A05D4C0F2D79A50EE9506D
// 0x0008 (0x0008 - 0x0000)
struct BP_PreviewPawn_C_OnCompleted_5DB600FE40A05D4C0F2D79A50EE9506D final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PreviewPawn_C_OnCompleted_5DB600FE40A05D4C0F2D79A50EE9506D) == 0x000004, "Wrong alignment on BP_PreviewPawn_C_OnCompleted_5DB600FE40A05D4C0F2D79A50EE9506D");
static_assert(sizeof(BP_PreviewPawn_C_OnCompleted_5DB600FE40A05D4C0F2D79A50EE9506D) == 0x000008, "Wrong size on BP_PreviewPawn_C_OnCompleted_5DB600FE40A05D4C0F2D79A50EE9506D");
static_assert(offsetof(BP_PreviewPawn_C_OnCompleted_5DB600FE40A05D4C0F2D79A50EE9506D, NotifyName) == 0x000000, "Member 'BP_PreviewPawn_C_OnCompleted_5DB600FE40A05D4C0F2D79A50EE9506D::NotifyName' has a wrong offset!");

// Function BP_PreviewPawn.BP_PreviewPawn_C.OnInterrupted_4AD4CE67401BD37B6FF5109F83AD4D26
// 0x0008 (0x0008 - 0x0000)
struct BP_PreviewPawn_C_OnInterrupted_4AD4CE67401BD37B6FF5109F83AD4D26 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PreviewPawn_C_OnInterrupted_4AD4CE67401BD37B6FF5109F83AD4D26) == 0x000004, "Wrong alignment on BP_PreviewPawn_C_OnInterrupted_4AD4CE67401BD37B6FF5109F83AD4D26");
static_assert(sizeof(BP_PreviewPawn_C_OnInterrupted_4AD4CE67401BD37B6FF5109F83AD4D26) == 0x000008, "Wrong size on BP_PreviewPawn_C_OnInterrupted_4AD4CE67401BD37B6FF5109F83AD4D26");
static_assert(offsetof(BP_PreviewPawn_C_OnInterrupted_4AD4CE67401BD37B6FF5109F83AD4D26, NotifyName) == 0x000000, "Member 'BP_PreviewPawn_C_OnInterrupted_4AD4CE67401BD37B6FF5109F83AD4D26::NotifyName' has a wrong offset!");

// Function BP_PreviewPawn.BP_PreviewPawn_C.OnInterrupted_5DB600FE40A05D4C0F2D79A50EE9506D
// 0x0008 (0x0008 - 0x0000)
struct BP_PreviewPawn_C_OnInterrupted_5DB600FE40A05D4C0F2D79A50EE9506D final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PreviewPawn_C_OnInterrupted_5DB600FE40A05D4C0F2D79A50EE9506D) == 0x000004, "Wrong alignment on BP_PreviewPawn_C_OnInterrupted_5DB600FE40A05D4C0F2D79A50EE9506D");
static_assert(sizeof(BP_PreviewPawn_C_OnInterrupted_5DB600FE40A05D4C0F2D79A50EE9506D) == 0x000008, "Wrong size on BP_PreviewPawn_C_OnInterrupted_5DB600FE40A05D4C0F2D79A50EE9506D");
static_assert(offsetof(BP_PreviewPawn_C_OnInterrupted_5DB600FE40A05D4C0F2D79A50EE9506D, NotifyName) == 0x000000, "Member 'BP_PreviewPawn_C_OnInterrupted_5DB600FE40A05D4C0F2D79A50EE9506D::NotifyName' has a wrong offset!");

// Function BP_PreviewPawn.BP_PreviewPawn_C.OnNotifyBegin_4AD4CE67401BD37B6FF5109F83AD4D26
// 0x0008 (0x0008 - 0x0000)
struct BP_PreviewPawn_C_OnNotifyBegin_4AD4CE67401BD37B6FF5109F83AD4D26 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PreviewPawn_C_OnNotifyBegin_4AD4CE67401BD37B6FF5109F83AD4D26) == 0x000004, "Wrong alignment on BP_PreviewPawn_C_OnNotifyBegin_4AD4CE67401BD37B6FF5109F83AD4D26");
static_assert(sizeof(BP_PreviewPawn_C_OnNotifyBegin_4AD4CE67401BD37B6FF5109F83AD4D26) == 0x000008, "Wrong size on BP_PreviewPawn_C_OnNotifyBegin_4AD4CE67401BD37B6FF5109F83AD4D26");
static_assert(offsetof(BP_PreviewPawn_C_OnNotifyBegin_4AD4CE67401BD37B6FF5109F83AD4D26, NotifyName) == 0x000000, "Member 'BP_PreviewPawn_C_OnNotifyBegin_4AD4CE67401BD37B6FF5109F83AD4D26::NotifyName' has a wrong offset!");

// Function BP_PreviewPawn.BP_PreviewPawn_C.OnNotifyBegin_5DB600FE40A05D4C0F2D79A50EE9506D
// 0x0008 (0x0008 - 0x0000)
struct BP_PreviewPawn_C_OnNotifyBegin_5DB600FE40A05D4C0F2D79A50EE9506D final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PreviewPawn_C_OnNotifyBegin_5DB600FE40A05D4C0F2D79A50EE9506D) == 0x000004, "Wrong alignment on BP_PreviewPawn_C_OnNotifyBegin_5DB600FE40A05D4C0F2D79A50EE9506D");
static_assert(sizeof(BP_PreviewPawn_C_OnNotifyBegin_5DB600FE40A05D4C0F2D79A50EE9506D) == 0x000008, "Wrong size on BP_PreviewPawn_C_OnNotifyBegin_5DB600FE40A05D4C0F2D79A50EE9506D");
static_assert(offsetof(BP_PreviewPawn_C_OnNotifyBegin_5DB600FE40A05D4C0F2D79A50EE9506D, NotifyName) == 0x000000, "Member 'BP_PreviewPawn_C_OnNotifyBegin_5DB600FE40A05D4C0F2D79A50EE9506D::NotifyName' has a wrong offset!");

// Function BP_PreviewPawn.BP_PreviewPawn_C.OnNotifyEnd_4AD4CE67401BD37B6FF5109F83AD4D26
// 0x0008 (0x0008 - 0x0000)
struct BP_PreviewPawn_C_OnNotifyEnd_4AD4CE67401BD37B6FF5109F83AD4D26 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PreviewPawn_C_OnNotifyEnd_4AD4CE67401BD37B6FF5109F83AD4D26) == 0x000004, "Wrong alignment on BP_PreviewPawn_C_OnNotifyEnd_4AD4CE67401BD37B6FF5109F83AD4D26");
static_assert(sizeof(BP_PreviewPawn_C_OnNotifyEnd_4AD4CE67401BD37B6FF5109F83AD4D26) == 0x000008, "Wrong size on BP_PreviewPawn_C_OnNotifyEnd_4AD4CE67401BD37B6FF5109F83AD4D26");
static_assert(offsetof(BP_PreviewPawn_C_OnNotifyEnd_4AD4CE67401BD37B6FF5109F83AD4D26, NotifyName) == 0x000000, "Member 'BP_PreviewPawn_C_OnNotifyEnd_4AD4CE67401BD37B6FF5109F83AD4D26::NotifyName' has a wrong offset!");

// Function BP_PreviewPawn.BP_PreviewPawn_C.OnNotifyEnd_5DB600FE40A05D4C0F2D79A50EE9506D
// 0x0008 (0x0008 - 0x0000)
struct BP_PreviewPawn_C_OnNotifyEnd_5DB600FE40A05D4C0F2D79A50EE9506D final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PreviewPawn_C_OnNotifyEnd_5DB600FE40A05D4C0F2D79A50EE9506D) == 0x000004, "Wrong alignment on BP_PreviewPawn_C_OnNotifyEnd_5DB600FE40A05D4C0F2D79A50EE9506D");
static_assert(sizeof(BP_PreviewPawn_C_OnNotifyEnd_5DB600FE40A05D4C0F2D79A50EE9506D) == 0x000008, "Wrong size on BP_PreviewPawn_C_OnNotifyEnd_5DB600FE40A05D4C0F2D79A50EE9506D");
static_assert(offsetof(BP_PreviewPawn_C_OnNotifyEnd_5DB600FE40A05D4C0F2D79A50EE9506D, NotifyName) == 0x000000, "Member 'BP_PreviewPawn_C_OnNotifyEnd_5DB600FE40A05D4C0F2D79A50EE9506D::NotifyName' has a wrong offset!");

// Function BP_PreviewPawn.BP_PreviewPawn_C.Play Player Input Montage
// 0x0008 (0x0008 - 0x0000)
struct BP_PreviewPawn_C_Play_Player_Input_Montage final
{
public:
	class UAnimMontage*                           MontageToPlay;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PreviewPawn_C_Play_Player_Input_Montage) == 0x000008, "Wrong alignment on BP_PreviewPawn_C_Play_Player_Input_Montage");
static_assert(sizeof(BP_PreviewPawn_C_Play_Player_Input_Montage) == 0x000008, "Wrong size on BP_PreviewPawn_C_Play_Player_Input_Montage");
static_assert(offsetof(BP_PreviewPawn_C_Play_Player_Input_Montage, MontageToPlay) == 0x000000, "Member 'BP_PreviewPawn_C_Play_Player_Input_Montage::MontageToPlay' has a wrong offset!");

// Function BP_PreviewPawn.BP_PreviewPawn_C.Set Mesh
// 0x0010 (0x0010 - 0x0000)
struct BP_PreviewPawn_C_Set_Mesh final
{
public:
	class USkeletalMesh*                          NewMesh;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	ECharacterName                                CharacterName;                                     // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PreviewPawn_C_Set_Mesh) == 0x000008, "Wrong alignment on BP_PreviewPawn_C_Set_Mesh");
static_assert(sizeof(BP_PreviewPawn_C_Set_Mesh) == 0x000010, "Wrong size on BP_PreviewPawn_C_Set_Mesh");
static_assert(offsetof(BP_PreviewPawn_C_Set_Mesh, NewMesh) == 0x000000, "Member 'BP_PreviewPawn_C_Set_Mesh::NewMesh' has a wrong offset!");
static_assert(offsetof(BP_PreviewPawn_C_Set_Mesh, CharacterName) == 0x000008, "Member 'BP_PreviewPawn_C_Set_Mesh::CharacterName' has a wrong offset!");

}

