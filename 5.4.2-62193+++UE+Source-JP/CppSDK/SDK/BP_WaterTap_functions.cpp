#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_WaterTap

#include "Basic.hpp"

#include "BP_WaterTap_classes.hpp"
#include "BP_WaterTap_parameters.hpp"


namespace SDK
{

// Function BP_WaterTap.BP_WaterTap_C.Audio Start Spilling
// (BlueprintCallable, BlueprintEvent)

void ABP_WaterTap_C::Audio_Start_Spilling()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_WaterTap_C", "Audio Start Spilling");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_WaterTap.BP_WaterTap_C.Audio Stop Spilling
// (BlueprintCallable, BlueprintEvent)

void ABP_WaterTap_C::Audio_Stop_Spilling()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_WaterTap_C", "Audio Stop Spilling");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_WaterTap.BP_WaterTap_C.ExecuteUbergraph_BP_WaterTap
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_WaterTap_C::ExecuteUbergraph_BP_WaterTap(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_WaterTap_C", "ExecuteUbergraph_BP_WaterTap");

	Params::BP_WaterTap_C_ExecuteUbergraph_BP_WaterTap Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_WaterTap.BP_WaterTap_C.GetDurabilityCostWhenHit
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  Amount                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_WaterTap_C::GetDurabilityCostWhenHit(double* Amount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_WaterTap_C", "GetDurabilityCostWhenHit");

	Params::BP_WaterTap_C_GetDurabilityCostWhenHit Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Amount != nullptr)
		*Amount = Parms.Amount;
}


// Function BP_WaterTap.BP_WaterTap_C.GetMaterialType
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// E_MaterialTypes                         MaterialType                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_WaterTap_C::GetMaterialType(E_MaterialTypes* MaterialType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_WaterTap_C", "GetMaterialType");

	Params::BP_WaterTap_C_GetMaterialType Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (MaterialType != nullptr)
		*MaterialType = Parms.MaterialType;
}


// Function BP_WaterTap.BP_WaterTap_C.HitInterface
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          Direction                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_WaterTap_C::HitInterface(const struct FVector& Direction)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_WaterTap_C", "HitInterface");

	Params::BP_WaterTap_C_HitInterface Parms{};

	Parms.Direction = std::move(Direction);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_WaterTap.BP_WaterTap_C.ImpactCosmetics
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class APawn*                            ImpactCauser                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// struct FVector                          Location                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          HitImpulse                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// E_ImpactEffect                          ImpactEffect                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FName                             BoneName                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ChangedAttributes                                      (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_WaterTap_C::ImpactCosmetics(class APawn* ImpactCauser, const struct FVector& Location, const struct FVector& HitImpulse, E_ImpactEffect ImpactEffect, class FName BoneName, bool* ChangedAttributes)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_WaterTap_C", "ImpactCosmetics");

	Params::BP_WaterTap_C_ImpactCosmetics Parms{};

	Parms.ImpactCauser = ImpactCauser;
	Parms.Location = std::move(Location);
	Parms.HitImpulse = std::move(HitImpulse);
	Parms.ImpactEffect = ImpactEffect;
	Parms.BoneName = BoneName;

	UObject::ProcessEvent(Func, &Parms);

	if (ChangedAttributes != nullptr)
		*ChangedAttributes = Parms.ChangedAttributes;
}


// Function BP_WaterTap.BP_WaterTap_C.MeleeHit
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           AttackingActor                                         (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash)

void ABP_WaterTap_C::MeleeHit(const class AActor*& AttackingActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_WaterTap_C", "MeleeHit");

	Params::BP_WaterTap_C_MeleeHit Parms{};

	Parms.AttackingActor = AttackingActor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_WaterTap.BP_WaterTap_C.OnRep_Activated
// (BlueprintCallable, BlueprintEvent)

void ABP_WaterTap_C::OnRep_Activated()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_WaterTap_C", "OnRep_Activated");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_WaterTap.BP_WaterTap_C.ReceiveActorBeginOverlap
// (Event, Public, BlueprintEvent)
// Parameters:
// class AActor*                           OtherActor                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_WaterTap_C::ReceiveActorBeginOverlap(class AActor* OtherActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_WaterTap_C", "ReceiveActorBeginOverlap");

	Params::BP_WaterTap_C_ReceiveActorBeginOverlap Parms{};

	Parms.OtherActor = OtherActor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_WaterTap.BP_WaterTap_C.ReceiveActorEndOverlap
// (Event, Public, BlueprintEvent)
// Parameters:
// class AActor*                           OtherActor                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_WaterTap_C::ReceiveActorEndOverlap(class AActor* OtherActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_WaterTap_C", "ReceiveActorEndOverlap");

	Params::BP_WaterTap_C_ReceiveActorEndOverlap Parms{};

	Parms.OtherActor = OtherActor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_WaterTap.BP_WaterTap_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ABP_WaterTap_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_WaterTap_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_WaterTap.BP_WaterTap_C.Set Seethrough Params
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_WaterTap_C::Set_Seethrough_Params()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_WaterTap_C", "Set Seethrough Params");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_WaterTap.BP_WaterTap_C.TakeDamage
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_WaterTap_C::TakeDamage()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_WaterTap_C", "TakeDamage");

	UObject::ProcessEvent(Func, nullptr);
}

}

