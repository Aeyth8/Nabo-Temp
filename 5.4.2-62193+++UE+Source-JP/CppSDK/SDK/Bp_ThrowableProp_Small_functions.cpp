#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Bp_ThrowableProp_Small

#include "Basic.hpp"

#include "Bp_ThrowableProp_Small_classes.hpp"
#include "Bp_ThrowableProp_Small_parameters.hpp"


namespace SDK
{

// Function Bp_ThrowableProp_Small.Bp_ThrowableProp_Small_C.BndEvt__Bp_ThrowableProp_Small_StaticMeshComponent_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature
// (HasOutParams, BlueprintEvent)
// Parameters:
// class UPrimitiveComponent*              OverlappedComponent                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class AActor*                           OtherActor                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*              OtherComp                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// int32                                   OtherBodyIndex                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bFromSweep                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FHitResult                       SweepResult                                            (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)

void ABp_ThrowableProp_Small_C::BndEvt__Bp_ThrowableProp_Small_StaticMeshComponent_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Bp_ThrowableProp_Small_C", "BndEvt__Bp_ThrowableProp_Small_StaticMeshComponent_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature");

	Params::Bp_ThrowableProp_Small_C_BndEvt__Bp_ThrowableProp_Small_StaticMeshComponent_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature Parms{};

	Parms.OverlappedComponent = OverlappedComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.OtherBodyIndex = OtherBodyIndex;
	Parms.bFromSweep = bFromSweep;
	Parms.SweepResult = std::move(SweepResult);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Bp_ThrowableProp_Small.Bp_ThrowableProp_Small_C.BndEvt__Bp_ThrowableProp_Small_StaticMeshComponent_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature
// (BlueprintEvent)
// Parameters:
// class UPrimitiveComponent*              OverlappedComponent                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class AActor*                           OtherActor                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*              OtherComp                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// int32                                   OtherBodyIndex                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABp_ThrowableProp_Small_C::BndEvt__Bp_ThrowableProp_Small_StaticMeshComponent_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Bp_ThrowableProp_Small_C", "BndEvt__Bp_ThrowableProp_Small_StaticMeshComponent_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature");

	Params::Bp_ThrowableProp_Small_C_BndEvt__Bp_ThrowableProp_Small_StaticMeshComponent_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature Parms{};

	Parms.OverlappedComponent = OverlappedComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.OtherBodyIndex = OtherBodyIndex;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Bp_ThrowableProp_Small.Bp_ThrowableProp_Small_C.CanActivateTrap
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool ABp_ThrowableProp_Small_C::CanActivateTrap()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Bp_ThrowableProp_Small_C", "CanActivateTrap");

	Params::Bp_ThrowableProp_Small_C_CanActivateTrap Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function Bp_ThrowableProp_Small.Bp_ThrowableProp_Small_C.CheckPlayerCollision
// (BlueprintCallable, BlueprintEvent)

void ABp_ThrowableProp_Small_C::CheckPlayerCollision()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Bp_ThrowableProp_Small_C", "CheckPlayerCollision");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Bp_ThrowableProp_Small.Bp_ThrowableProp_Small_C.ClearForgetReleaser
// (BlueprintCallable, BlueprintEvent)

void ABp_ThrowableProp_Small_C::ClearForgetReleaser()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Bp_ThrowableProp_Small_C", "ClearForgetReleaser");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Bp_ThrowableProp_Small.Bp_ThrowableProp_Small_C.ClearWakeCollisionTimer
// (BlueprintCallable, BlueprintEvent)

void ABp_ThrowableProp_Small_C::ClearWakeCollisionTimer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Bp_ThrowableProp_Small_C", "ClearWakeCollisionTimer");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Bp_ThrowableProp_Small.Bp_ThrowableProp_Small_C.Drop Object
// (Public, BlueprintCallable, BlueprintEvent)

void ABp_ThrowableProp_Small_C::Drop_Object()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Bp_ThrowableProp_Small_C", "Drop Object");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Bp_ThrowableProp_Small.Bp_ThrowableProp_Small_C.ExecuteUbergraph_Bp_ThrowableProp_Small
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABp_ThrowableProp_Small_C::ExecuteUbergraph_Bp_ThrowableProp_Small(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Bp_ThrowableProp_Small_C", "ExecuteUbergraph_Bp_ThrowableProp_Small");

	Params::Bp_ThrowableProp_Small_C_ExecuteUbergraph_Bp_ThrowableProp_Small Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Bp_ThrowableProp_Small.Bp_ThrowableProp_Small_C.ForgetReleaser
// (BlueprintCallable, BlueprintEvent)

void ABp_ThrowableProp_Small_C::ForgetReleaser()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Bp_ThrowableProp_Small_C", "ForgetReleaser");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Bp_ThrowableProp_Small.Bp_ThrowableProp_Small_C.GetLocalExtent
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UStaticMeshComponent*             InputValue                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// struct FVector                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

struct FVector ABp_ThrowableProp_Small_C::GetLocalExtent(class UStaticMeshComponent* InputValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Bp_ThrowableProp_Small_C", "GetLocalExtent");

	Params::Bp_ThrowableProp_Small_C_GetLocalExtent Parms{};

	Parms.InputValue = InputValue;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function Bp_ThrowableProp_Small.Bp_ThrowableProp_Small_C.IsOverlappingPlayer
// (Private, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool ABp_ThrowableProp_Small_C::IsOverlappingPlayer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Bp_ThrowableProp_Small_C", "IsOverlappingPlayer");

	Params::Bp_ThrowableProp_Small_C_IsOverlappingPlayer Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function Bp_ThrowableProp_Small.Bp_ThrowableProp_Small_C.Multi_Push Audio
// (Net, NetMulticast, BlueprintCallable, BlueprintEvent)

void ABp_ThrowableProp_Small_C::Multi_Push_Audio()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Bp_ThrowableProp_Small_C", "Multi_Push Audio");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Bp_ThrowableProp_Small.Bp_ThrowableProp_Small_C.PlayerCollision
// (Private, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Enabled                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABp_ThrowableProp_Small_C::PlayerCollision(bool Enabled)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Bp_ThrowableProp_Small_C", "PlayerCollision");

	Params::Bp_ThrowableProp_Small_C_PlayerCollision Parms{};

	Parms.Enabled = Enabled;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Bp_ThrowableProp_Small.Bp_ThrowableProp_Small_C.ResetCollisionDoOnce
// (BlueprintCallable, BlueprintEvent)

void ABp_ThrowableProp_Small_C::ResetCollisionDoOnce()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Bp_ThrowableProp_Small_C", "ResetCollisionDoOnce");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Bp_ThrowableProp_Small.Bp_ThrowableProp_Small_C.ServerPush
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           TargetActor                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// struct FVector                          LaunchVelocity                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABp_ThrowableProp_Small_C::ServerPush(class AActor* TargetActor, const struct FVector& LaunchVelocity)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Bp_ThrowableProp_Small_C", "ServerPush");

	Params::Bp_ThrowableProp_Small_C_ServerPush Parms{};

	Parms.TargetActor = TargetActor;
	Parms.LaunchVelocity = std::move(LaunchVelocity);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Bp_ThrowableProp_Small.Bp_ThrowableProp_Small_C.SetDefaultCenterOfMass
// (Public, BlueprintCallable, BlueprintEvent)

void ABp_ThrowableProp_Small_C::SetDefaultCenterOfMass()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Bp_ThrowableProp_Small_C", "SetDefaultCenterOfMass");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Bp_ThrowableProp_Small.Bp_ThrowableProp_Small_C.SetReleaserTemp
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          Character                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABp_ThrowableProp_Small_C::SetReleaserTemp(class UObject* Character)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Bp_ThrowableProp_Small_C", "SetReleaserTemp");

	Params::Bp_ThrowableProp_Small_C_SetReleaserTemp Parms{};

	Parms.Character = Character;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Bp_ThrowableProp_Small.Bp_ThrowableProp_Small_C.Sleep
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UPrimitiveComponent*              SleepingComponent                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class FName                             BoneName                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABp_ThrowableProp_Small_C::Sleep(class UPrimitiveComponent* SleepingComponent, class FName BoneName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Bp_ThrowableProp_Small_C", "Sleep");

	Params::Bp_ThrowableProp_Small_C_Sleep Parms{};

	Parms.SleepingComponent = SleepingComponent;
	Parms.BoneName = BoneName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Bp_ThrowableProp_Small.Bp_ThrowableProp_Small_C.Try Drop Object
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ACharacter*                       Character                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABp_ThrowableProp_Small_C::Try_Drop_Object(class ACharacter* Character)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Bp_ThrowableProp_Small_C", "Try Drop Object");

	Params::Bp_ThrowableProp_Small_C_Try_Drop_Object Parms{};

	Parms.Character = Character;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Bp_ThrowableProp_Small.Bp_ThrowableProp_Small_C.UserConstructionScript
// (Event, Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABp_ThrowableProp_Small_C::UserConstructionScript()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Bp_ThrowableProp_Small_C", "UserConstructionScript");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Bp_ThrowableProp_Small.Bp_ThrowableProp_Small_C.Wake
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UPrimitiveComponent*              WakingComponent                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class FName                             BoneName                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABp_ThrowableProp_Small_C::Wake(class UPrimitiveComponent* WakingComponent, class FName BoneName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Bp_ThrowableProp_Small_C", "Wake");

	Params::Bp_ThrowableProp_Small_C_Wake Parms{};

	Parms.WakingComponent = WakingComponent;
	Parms.BoneName = BoneName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Bp_ThrowableProp_Small.Bp_ThrowableProp_Small_C.GrippedLocal
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ACharacter*                       GrippingCharacter                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABp_ThrowableProp_Small_C::GrippedLocal(class ACharacter* GrippingCharacter)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Bp_ThrowableProp_Small_C", "GrippedLocal");

	Params::Bp_ThrowableProp_Small_C_GrippedLocal Parms{};

	Parms.GrippingCharacter = GrippingCharacter;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Bp_ThrowableProp_Small.Bp_ThrowableProp_Small_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ABp_ThrowableProp_Small_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Bp_ThrowableProp_Small_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Bp_ThrowableProp_Small.Bp_ThrowableProp_Small_C.Released Local
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ACharacter*                       ReleasingCharacter                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABp_ThrowableProp_Small_C::Released_Local(class ACharacter* ReleasingCharacter)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Bp_ThrowableProp_Small_C", "Released Local");

	Params::Bp_ThrowableProp_Small_C_Released_Local Parms{};

	Parms.ReleasingCharacter = ReleasingCharacter;

	UObject::ProcessEvent(Func, &Parms);
}

}

