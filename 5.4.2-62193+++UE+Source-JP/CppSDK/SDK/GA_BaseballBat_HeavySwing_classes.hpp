#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GA_BaseballBat_HeavySwing

#include "Basic.hpp"

#include "GameplayAbilities_structs.hpp"
#include "Engine_structs.hpp"
#include "GA_ThrowProjectile_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass GA_BaseballBat_HeavySwing.GA_BaseballBat_HeavySwing_C
// 0x0020 (0x0600 - 0x05E0)
class UGA_BaseballBat_HeavySwing_C final : public UGA_ThrowProjectile_C
{
public:
	uint8                                         Pad_5D1[0x7];                                      // 0x05D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPointerToUberGraphFrame               UberGraphFrame_GA_BaseballBat_HeavySwing_C;        // 0x05D8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UClass*                                 ProjectileClassToSpawn;                            // 0x05E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAbilityTask_WaitDelay*                 Async_Task;                                        // 0x05E8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FActiveGameplayEffectHandle            StaminaHandle;                                     // 0x05F0(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)

public:
	void CreateCombatParticipants(class APawn* ResidentCharacterPawn, struct FCombatParticipant* NewParam);
	void CreateCosmeticProjectile();
	void CreateCosmeticProjectileCueParameters(struct FGameplayCueParameters* Params_0);
	void CreateSpawnTransform(struct FTransform* SpawnTransform);
	void ExecuteUbergraph_GA_BaseballBat_HeavySwing(int32 EntryPoint);
	void Get_Min_Max_Damage_Speed(double* MinDamageSpeed, double* MaxDamageSpeed);
	void GetMinMaxDamage(bool UseMinMaxDamage, double* MinDamage, double* MaxDamage);
	void GetProjectileSpawnData(bool UseMinMaxDamage, class APawn* ResidentCharacterPawn, class APawn* ProjectileInstigator, ESpawnActorCollisionHandlingMethod CollisionHandlingOverride, class UClass** ProjectileToSpawn, struct FTransform* SpawnTransform, ESpawnActorCollisionHandlingMethod* SpawnCollisionHandlingOverride, double* ProjectileSpeed, double* MinDamage, double* MaxDamage, double* MinDamageSpeed, double* MaxDamageSpeed, struct FCombatParticipant* CombatParticipants, class APawn** Instigator);
	void GetProjectileSpeed(double Speed, double* ProjectileSpeed);
	void GetProjectileToSpawn(class UClass** ProjectileClass);
	void K2_ActivateAbility();
	void K2_OnAbilityFailed(const struct FGameplayTagContainer& FailureReason);
	void K2_OnEndAbility(bool bWasCancelled);
	void OnFinish_4FE550FF4BA1B0A443969BA1CD2A3A3B();
	void Server_ProjectileSpawn(class UClass* ProjectileToSpawn, const struct FTransform& SpawnTransform, ESpawnActorCollisionHandlingMethod SpawnCollisionHandlingOverride, double ProjectileSpeed, double MinDamage, double MaxDamage, double MinDamageSpeed, double MaxDamageSpeed, const struct FCombatParticipant& CombatParticipants, class APawn* Instigator, double DamageMultiplerToStructures);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"GA_BaseballBat_HeavySwing_C">();
	}
	static class UGA_BaseballBat_HeavySwing_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGA_BaseballBat_HeavySwing_C>();
	}
};
static_assert(alignof(UGA_BaseballBat_HeavySwing_C) == 0x000010, "Wrong alignment on UGA_BaseballBat_HeavySwing_C");
static_assert(sizeof(UGA_BaseballBat_HeavySwing_C) == 0x000600, "Wrong size on UGA_BaseballBat_HeavySwing_C");
static_assert(offsetof(UGA_BaseballBat_HeavySwing_C, UberGraphFrame_GA_BaseballBat_HeavySwing_C) == 0x0005D8, "Member 'UGA_BaseballBat_HeavySwing_C::UberGraphFrame_GA_BaseballBat_HeavySwing_C' has a wrong offset!");
static_assert(offsetof(UGA_BaseballBat_HeavySwing_C, ProjectileClassToSpawn) == 0x0005E0, "Member 'UGA_BaseballBat_HeavySwing_C::ProjectileClassToSpawn' has a wrong offset!");
static_assert(offsetof(UGA_BaseballBat_HeavySwing_C, Async_Task) == 0x0005E8, "Member 'UGA_BaseballBat_HeavySwing_C::Async_Task' has a wrong offset!");
static_assert(offsetof(UGA_BaseballBat_HeavySwing_C, StaminaHandle) == 0x0005F0, "Member 'UGA_BaseballBat_HeavySwing_C::StaminaHandle' has a wrong offset!");

}

