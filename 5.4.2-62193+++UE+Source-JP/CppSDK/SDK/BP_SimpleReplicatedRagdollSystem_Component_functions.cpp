#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_SimpleReplicatedRagdollSystem_Component

#include "Basic.hpp"

#include "BP_SimpleReplicatedRagdollSystem_Component_classes.hpp"
#include "BP_SimpleReplicatedRagdollSystem_Component_parameters.hpp"


namespace SDK
{

// Function BP_SimpleReplicatedRagdollSystem_Component.BP_SimpleReplicatedRagdollSystem_Component_C.EnableRagdoll
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          Impulse_0                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    AddNewImpulse                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_SimpleReplicatedRagdollSystem_Component_C::EnableRagdoll(const struct FVector& Impulse_0, bool AddNewImpulse)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SimpleReplicatedRagdollSystem_Component_C", "EnableRagdoll");

	Params::BP_SimpleReplicatedRagdollSystem_Component_C_EnableRagdoll Parms{};

	Parms.Impulse_0 = std::move(Impulse_0);
	Parms.AddNewImpulse = AddNewImpulse;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SimpleReplicatedRagdollSystem_Component.BP_SimpleReplicatedRagdollSystem_Component_C.ExecuteUbergraph_BP_SimpleReplicatedRagdollSystem_Component
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_SimpleReplicatedRagdollSystem_Component_C::ExecuteUbergraph_BP_SimpleReplicatedRagdollSystem_Component(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SimpleReplicatedRagdollSystem_Component_C", "ExecuteUbergraph_BP_SimpleReplicatedRagdollSystem_Component");

	Params::BP_SimpleReplicatedRagdollSystem_Component_C_ExecuteUbergraph_BP_SimpleReplicatedRagdollSystem_Component Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SimpleReplicatedRagdollSystem_Component.BP_SimpleReplicatedRagdollSystem_Component_C.GetGetUpAnimation
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    FacingUp_                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UAnimMontage*                     AnimMontage                                            (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UBP_SimpleReplicatedRagdollSystem_Component_C::GetGetUpAnimation(bool FacingUp_, class UAnimMontage** AnimMontage)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SimpleReplicatedRagdollSystem_Component_C", "GetGetUpAnimation");

	Params::BP_SimpleReplicatedRagdollSystem_Component_C_GetGetUpAnimation Parms{};

	Parms.FacingUp_ = FacingUp_;

	UObject::ProcessEvent(Func, &Parms);

	if (AnimMontage != nullptr)
		*AnimMontage = Parms.AnimMontage;
}


// Function BP_SimpleReplicatedRagdollSystem_Component.BP_SimpleReplicatedRagdollSystem_Component_C.Impulse
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    RunOnServerOnly                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          Impulse_0                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FName                             bone                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_SimpleReplicatedRagdollSystem_Component_C::Impulse(bool RunOnServerOnly, const struct FVector& Impulse_0, class FName bone)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SimpleReplicatedRagdollSystem_Component_C", "Impulse");

	Params::BP_SimpleReplicatedRagdollSystem_Component_C_Impulse Parms{};

	Parms.RunOnServerOnly = RunOnServerOnly;
	Parms.Impulse_0 = std::move(Impulse_0);
	Parms.bone = bone;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SimpleReplicatedRagdollSystem_Component.BP_SimpleReplicatedRagdollSystem_Component_C.ImpulseMulticast
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          Vector                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FName                             bone                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_SimpleReplicatedRagdollSystem_Component_C::ImpulseMulticast(const struct FVector& Vector, class FName bone)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SimpleReplicatedRagdollSystem_Component_C", "ImpulseMulticast");

	Params::BP_SimpleReplicatedRagdollSystem_Component_C_ImpulseMulticast Parms{};

	Parms.Vector = std::move(Vector);
	Parms.bone = bone;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SimpleReplicatedRagdollSystem_Component.BP_SimpleReplicatedRagdollSystem_Component_C.LimitRagdollSpeed
// (Net, NetServer, BlueprintCallable, BlueprintEvent)

void UBP_SimpleReplicatedRagdollSystem_Component_C::LimitRagdollSpeed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SimpleReplicatedRagdollSystem_Component_C", "LimitRagdollSpeed");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SimpleReplicatedRagdollSystem_Component.BP_SimpleReplicatedRagdollSystem_Component_C.PauseLocationInterpolation
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  Duration                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_SimpleReplicatedRagdollSystem_Component_C::PauseLocationInterpolation(double Duration)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SimpleReplicatedRagdollSystem_Component_C", "PauseLocationInterpolation");

	Params::BP_SimpleReplicatedRagdollSystem_Component_C_PauseLocationInterpolation Parms{};

	Parms.Duration = Duration;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SimpleReplicatedRagdollSystem_Component.BP_SimpleReplicatedRagdollSystem_Component_C.PauseVelocityInterpolation
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  Duration                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_SimpleReplicatedRagdollSystem_Component_C::PauseVelocityInterpolation(double Duration)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SimpleReplicatedRagdollSystem_Component_C", "PauseVelocityInterpolation");

	Params::BP_SimpleReplicatedRagdollSystem_Component_C_PauseVelocityInterpolation Parms{};

	Parms.Duration = Duration;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SimpleReplicatedRagdollSystem_Component.BP_SimpleReplicatedRagdollSystem_Component_C.RagdollEndMulticast
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          ActorLocation                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FRotator                         ActorRotation                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_SimpleReplicatedRagdollSystem_Component_C::RagdollEndMulticast(const struct FVector& ActorLocation, const struct FRotator& ActorRotation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SimpleReplicatedRagdollSystem_Component_C", "RagdollEndMulticast");

	Params::BP_SimpleReplicatedRagdollSystem_Component_C_RagdollEndMulticast Parms{};

	Parms.ActorLocation = std::move(ActorLocation);
	Parms.ActorRotation = std::move(ActorRotation);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SimpleReplicatedRagdollSystem_Component.BP_SimpleReplicatedRagdollSystem_Component_C.ReceiveBeginPlay
// (Event, Public, BlueprintEvent)

void UBP_SimpleReplicatedRagdollSystem_Component_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SimpleReplicatedRagdollSystem_Component_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SimpleReplicatedRagdollSystem_Component.BP_SimpleReplicatedRagdollSystem_Component_C.ReceiveTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_SimpleReplicatedRagdollSystem_Component_C::ReceiveTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SimpleReplicatedRagdollSystem_Component_C", "ReceiveTick");

	Params::BP_SimpleReplicatedRagdollSystem_Component_C_ReceiveTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SimpleReplicatedRagdollSystem_Component.BP_SimpleReplicatedRagdollSystem_Component_C.RecoverEvent
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)

void UBP_SimpleReplicatedRagdollSystem_Component_C::RecoverEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SimpleReplicatedRagdollSystem_Component_C", "RecoverEvent");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SimpleReplicatedRagdollSystem_Component.BP_SimpleReplicatedRagdollSystem_Component_C.SetLocationVelocityAndRotationEventMulticast
// (Net, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          Location                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          MeshVelocity                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FRotator                         Rotation                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_SimpleReplicatedRagdollSystem_Component_C::SetLocationVelocityAndRotationEventMulticast(const struct FVector& Location, const struct FVector& MeshVelocity, const struct FRotator& Rotation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SimpleReplicatedRagdollSystem_Component_C", "SetLocationVelocityAndRotationEventMulticast");

	Params::BP_SimpleReplicatedRagdollSystem_Component_C_SetLocationVelocityAndRotationEventMulticast Parms{};

	Parms.Location = std::move(Location);
	Parms.MeshVelocity = std::move(MeshVelocity);
	Parms.Rotation = std::move(Rotation);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SimpleReplicatedRagdollSystem_Component.BP_SimpleReplicatedRagdollSystem_Component_C.SmoothlySynchronizeMeshDuringRecovery
// (BlueprintCallable, BlueprintEvent)

void UBP_SimpleReplicatedRagdollSystem_Component_C::SmoothlySynchronizeMeshDuringRecovery()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SimpleReplicatedRagdollSystem_Component_C", "SmoothlySynchronizeMeshDuringRecovery");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SimpleReplicatedRagdollSystem_Component.BP_SimpleReplicatedRagdollSystem_Component_C.StartSimulatingPhysicsMulticast
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          Velocity                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    AddNewImpulse                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_SimpleReplicatedRagdollSystem_Component_C::StartSimulatingPhysicsMulticast(const struct FVector& Velocity, bool AddNewImpulse)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SimpleReplicatedRagdollSystem_Component_C", "StartSimulatingPhysicsMulticast");

	Params::BP_SimpleReplicatedRagdollSystem_Component_C_StartSimulatingPhysicsMulticast Parms{};

	Parms.Velocity = std::move(Velocity);
	Parms.AddNewImpulse = AddNewImpulse;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SimpleReplicatedRagdollSystem_Component.BP_SimpleReplicatedRagdollSystem_Component_C.StartSimulatingPhysicsServer
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          Velocity                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    AddNewImpulse                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_SimpleReplicatedRagdollSystem_Component_C::StartSimulatingPhysicsServer(const struct FVector& Velocity, bool AddNewImpulse)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SimpleReplicatedRagdollSystem_Component_C", "StartSimulatingPhysicsServer");

	Params::BP_SimpleReplicatedRagdollSystem_Component_C_StartSimulatingPhysicsServer Parms{};

	Parms.Velocity = std::move(Velocity);
	Parms.AddNewImpulse = AddNewImpulse;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SimpleReplicatedRagdollSystem_Component.BP_SimpleReplicatedRagdollSystem_Component_C.StopRecovery
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)

void UBP_SimpleReplicatedRagdollSystem_Component_C::StopRecovery()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SimpleReplicatedRagdollSystem_Component_C", "StopRecovery");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SimpleReplicatedRagdollSystem_Component.BP_SimpleReplicatedRagdollSystem_Component_C.StopRecoveryServer
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)

void UBP_SimpleReplicatedRagdollSystem_Component_C::StopRecoveryServer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SimpleReplicatedRagdollSystem_Component_C", "StopRecoveryServer");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SimpleReplicatedRagdollSystem_Component.BP_SimpleReplicatedRagdollSystem_Component_C.ToggleInput
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    On                                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_SimpleReplicatedRagdollSystem_Component_C::ToggleInput(bool On)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SimpleReplicatedRagdollSystem_Component_C", "ToggleInput");

	Params::BP_SimpleReplicatedRagdollSystem_Component_C_ToggleInput Parms{};

	Parms.On = On;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SimpleReplicatedRagdollSystem_Component.BP_SimpleReplicatedRagdollSystem_Component_C.ToggleMeshAdjustment
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    On                                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_SimpleReplicatedRagdollSystem_Component_C::ToggleMeshAdjustment(bool On)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SimpleReplicatedRagdollSystem_Component_C", "ToggleMeshAdjustment");

	Params::BP_SimpleReplicatedRagdollSystem_Component_C_ToggleMeshAdjustment Parms{};

	Parms.On = On;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SimpleReplicatedRagdollSystem_Component.BP_SimpleReplicatedRagdollSystem_Component_C.TraceForOtherCharacters
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          TraceStart                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          TraceEnd                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  ImpulseStrength                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_SimpleReplicatedRagdollSystem_Component_C::TraceForOtherCharacters(const struct FVector& TraceStart, const struct FVector& TraceEnd, double ImpulseStrength)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SimpleReplicatedRagdollSystem_Component_C", "TraceForOtherCharacters");

	Params::BP_SimpleReplicatedRagdollSystem_Component_C_TraceForOtherCharacters Parms{};

	Parms.TraceStart = std::move(TraceStart);
	Parms.TraceEnd = std::move(TraceEnd);
	Parms.ImpulseStrength = ImpulseStrength;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SimpleReplicatedRagdollSystem_Component.BP_SimpleReplicatedRagdollSystem_Component_C.TryToInterpolateMeshLocation
// (BlueprintCallable, BlueprintEvent)

void UBP_SimpleReplicatedRagdollSystem_Component_C::TryToInterpolateMeshLocation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SimpleReplicatedRagdollSystem_Component_C", "TryToInterpolateMeshLocation");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SimpleReplicatedRagdollSystem_Component.BP_SimpleReplicatedRagdollSystem_Component_C.UpdateRagdollServer
// (Net, NetServer, BlueprintCallable, BlueprintEvent)

void UBP_SimpleReplicatedRagdollSystem_Component_C::UpdateRagdollServer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SimpleReplicatedRagdollSystem_Component_C", "UpdateRagdollServer");

	UObject::ProcessEvent(Func, nullptr);
}

}

