#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: AC_AchievementTracker

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass AC_AchievementTracker.AC_AchievementTracker_C
// 0x0090 (0x0130 - 0x00A0)
class UAC_AchievementTracker_C final : public UActorComponent
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x00A0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	TSoftObjectPtr<class UItemDefinition>         BigBerthaID;                                       // 0x00A8(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	int32                                         BigBerthaKillCount;                                // 0x00D0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D4[0x4];                                       // 0x00D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           BigBerthaKillTimer;                                // 0x00D8(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	TSoftClassPtr<class UClass>                   KimWrenchThrowAbility;                             // 0x00E0(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	TSoftObjectPtr<class UItemDefinition>         KimWrenchDefiniition;                              // 0x0108(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)

public:
	void AddAssistData();
	void AddKillData(const struct FKillInfo& KillInfo, const struct FVector& Location);
	void CheckFeedTheAnimalAchievement();
	void CheckHouseEssentialsDestruction(bool* NoEssentialsDestroyed);
	void CheckTakeMeHigherAchievement();
	void CheckTrickshotAchievement(const struct FVector& Location);
	void ExecuteUbergraph_AC_AchievementTracker(int32 EntryPoint);
	void Owner_CheckJustPerfectAchievement();
	void Owner_CheckSalmonellaAchievements();
	void Owner_CheckWhiteHawkDown();
	void Owner_SetKillData(const struct FKillInfo& KillInfo, const struct FVector& Location);
	void ResetBigBerthaCounter();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"AC_AchievementTracker_C">();
	}
	static class UAC_AchievementTracker_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAC_AchievementTracker_C>();
	}
};
static_assert(alignof(UAC_AchievementTracker_C) == 0x000008, "Wrong alignment on UAC_AchievementTracker_C");
static_assert(sizeof(UAC_AchievementTracker_C) == 0x000130, "Wrong size on UAC_AchievementTracker_C");
static_assert(offsetof(UAC_AchievementTracker_C, UberGraphFrame) == 0x0000A0, "Member 'UAC_AchievementTracker_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UAC_AchievementTracker_C, BigBerthaID) == 0x0000A8, "Member 'UAC_AchievementTracker_C::BigBerthaID' has a wrong offset!");
static_assert(offsetof(UAC_AchievementTracker_C, BigBerthaKillCount) == 0x0000D0, "Member 'UAC_AchievementTracker_C::BigBerthaKillCount' has a wrong offset!");
static_assert(offsetof(UAC_AchievementTracker_C, BigBerthaKillTimer) == 0x0000D8, "Member 'UAC_AchievementTracker_C::BigBerthaKillTimer' has a wrong offset!");
static_assert(offsetof(UAC_AchievementTracker_C, KimWrenchThrowAbility) == 0x0000E0, "Member 'UAC_AchievementTracker_C::KimWrenchThrowAbility' has a wrong offset!");
static_assert(offsetof(UAC_AchievementTracker_C, KimWrenchDefiniition) == 0x000108, "Member 'UAC_AchievementTracker_C::KimWrenchDefiniition' has a wrong offset!");

}

