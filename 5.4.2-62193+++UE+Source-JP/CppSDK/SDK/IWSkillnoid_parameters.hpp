#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: IWSkillnoid

#include "Basic.hpp"


namespace SDK::Params
{

// Function IWSkillnoid.SkillnoidAuthTokenAsyncDelegate.GetConnectedSkillnoidAccount
// 0x0028 (0x0028 - 0x0000)
struct SkillnoidAuthTokenAsyncDelegate_GetConnectedSkillnoidAccount final
{
public:
	class UObject*                                WorldContextObject;                                // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 ConnectionToken;                                   // 0x0008(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         PollInterval;                                      // 0x0018(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         TokenTLL;                                          // 0x001C(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USkillnoidAuthTokenAsyncDelegate*       ReturnValue;                                       // 0x0020(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SkillnoidAuthTokenAsyncDelegate_GetConnectedSkillnoidAccount) == 0x000008, "Wrong alignment on SkillnoidAuthTokenAsyncDelegate_GetConnectedSkillnoidAccount");
static_assert(sizeof(SkillnoidAuthTokenAsyncDelegate_GetConnectedSkillnoidAccount) == 0x000028, "Wrong size on SkillnoidAuthTokenAsyncDelegate_GetConnectedSkillnoidAccount");
static_assert(offsetof(SkillnoidAuthTokenAsyncDelegate_GetConnectedSkillnoidAccount, WorldContextObject) == 0x000000, "Member 'SkillnoidAuthTokenAsyncDelegate_GetConnectedSkillnoidAccount::WorldContextObject' has a wrong offset!");
static_assert(offsetof(SkillnoidAuthTokenAsyncDelegate_GetConnectedSkillnoidAccount, ConnectionToken) == 0x000008, "Member 'SkillnoidAuthTokenAsyncDelegate_GetConnectedSkillnoidAccount::ConnectionToken' has a wrong offset!");
static_assert(offsetof(SkillnoidAuthTokenAsyncDelegate_GetConnectedSkillnoidAccount, PollInterval) == 0x000018, "Member 'SkillnoidAuthTokenAsyncDelegate_GetConnectedSkillnoidAccount::PollInterval' has a wrong offset!");
static_assert(offsetof(SkillnoidAuthTokenAsyncDelegate_GetConnectedSkillnoidAccount, TokenTLL) == 0x00001C, "Member 'SkillnoidAuthTokenAsyncDelegate_GetConnectedSkillnoidAccount::TokenTLL' has a wrong offset!");
static_assert(offsetof(SkillnoidAuthTokenAsyncDelegate_GetConnectedSkillnoidAccount, ReturnValue) == 0x000020, "Member 'SkillnoidAuthTokenAsyncDelegate_GetConnectedSkillnoidAccount::ReturnValue' has a wrong offset!");

// Function IWSkillnoid.SkillnoidGetAchievementsDelegate.GetSkillnoidAchievements
// 0x0020 (0x0020 - 0x0000)
struct SkillnoidGetAchievementsDelegate_GetSkillnoidAchievements final
{
public:
	class UObject*                                WorldContextObject;                                // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 UserToken;                                         // 0x0008(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USkillnoidGetAchievementsDelegate*      ReturnValue;                                       // 0x0018(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SkillnoidGetAchievementsDelegate_GetSkillnoidAchievements) == 0x000008, "Wrong alignment on SkillnoidGetAchievementsDelegate_GetSkillnoidAchievements");
static_assert(sizeof(SkillnoidGetAchievementsDelegate_GetSkillnoidAchievements) == 0x000020, "Wrong size on SkillnoidGetAchievementsDelegate_GetSkillnoidAchievements");
static_assert(offsetof(SkillnoidGetAchievementsDelegate_GetSkillnoidAchievements, WorldContextObject) == 0x000000, "Member 'SkillnoidGetAchievementsDelegate_GetSkillnoidAchievements::WorldContextObject' has a wrong offset!");
static_assert(offsetof(SkillnoidGetAchievementsDelegate_GetSkillnoidAchievements, UserToken) == 0x000008, "Member 'SkillnoidGetAchievementsDelegate_GetSkillnoidAchievements::UserToken' has a wrong offset!");
static_assert(offsetof(SkillnoidGetAchievementsDelegate_GetSkillnoidAchievements, ReturnValue) == 0x000018, "Member 'SkillnoidGetAchievementsDelegate_GetSkillnoidAchievements::ReturnValue' has a wrong offset!");

// Function IWSkillnoid.SkillnoidCollectAchievementsDelegate.CollectSkillnoidAchievement
// 0x0030 (0x0030 - 0x0000)
struct SkillnoidCollectAchievementsDelegate_CollectSkillnoidAchievement final
{
public:
	class UObject*                                WorldContextObject;                                // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 UserToken;                                         // 0x0008(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 AchievementID;                                     // 0x0018(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USkillnoidCollectAchievementsDelegate*  ReturnValue;                                       // 0x0028(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SkillnoidCollectAchievementsDelegate_CollectSkillnoidAchievement) == 0x000008, "Wrong alignment on SkillnoidCollectAchievementsDelegate_CollectSkillnoidAchievement");
static_assert(sizeof(SkillnoidCollectAchievementsDelegate_CollectSkillnoidAchievement) == 0x000030, "Wrong size on SkillnoidCollectAchievementsDelegate_CollectSkillnoidAchievement");
static_assert(offsetof(SkillnoidCollectAchievementsDelegate_CollectSkillnoidAchievement, WorldContextObject) == 0x000000, "Member 'SkillnoidCollectAchievementsDelegate_CollectSkillnoidAchievement::WorldContextObject' has a wrong offset!");
static_assert(offsetof(SkillnoidCollectAchievementsDelegate_CollectSkillnoidAchievement, UserToken) == 0x000008, "Member 'SkillnoidCollectAchievementsDelegate_CollectSkillnoidAchievement::UserToken' has a wrong offset!");
static_assert(offsetof(SkillnoidCollectAchievementsDelegate_CollectSkillnoidAchievement, AchievementID) == 0x000018, "Member 'SkillnoidCollectAchievementsDelegate_CollectSkillnoidAchievement::AchievementID' has a wrong offset!");
static_assert(offsetof(SkillnoidCollectAchievementsDelegate_CollectSkillnoidAchievement, ReturnValue) == 0x000028, "Member 'SkillnoidCollectAchievementsDelegate_CollectSkillnoidAchievement::ReturnValue' has a wrong offset!");

// Function IWSkillnoid.SkillnoidQrDownloader.DownloadSkillNoidQrCode
// 0x0018 (0x0018 - 0x0000)
struct SkillnoidQrDownloader_DownloadSkillNoidQrCode final
{
public:
	class FString                                 CurrentDirectToken;                                // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USkillnoidQrDownloader*                 ReturnValue;                                       // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SkillnoidQrDownloader_DownloadSkillNoidQrCode) == 0x000008, "Wrong alignment on SkillnoidQrDownloader_DownloadSkillNoidQrCode");
static_assert(sizeof(SkillnoidQrDownloader_DownloadSkillNoidQrCode) == 0x000018, "Wrong size on SkillnoidQrDownloader_DownloadSkillNoidQrCode");
static_assert(offsetof(SkillnoidQrDownloader_DownloadSkillNoidQrCode, CurrentDirectToken) == 0x000000, "Member 'SkillnoidQrDownloader_DownloadSkillNoidQrCode::CurrentDirectToken' has a wrong offset!");
static_assert(offsetof(SkillnoidQrDownloader_DownloadSkillNoidQrCode, ReturnValue) == 0x000010, "Member 'SkillnoidQrDownloader_DownloadSkillNoidQrCode::ReturnValue' has a wrong offset!");

}

