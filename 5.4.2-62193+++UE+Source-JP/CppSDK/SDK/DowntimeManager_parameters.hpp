#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: DowntimeManager

#include "Basic.hpp"

#include "JP_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "E_TimeOfDay_structs.hpp"
#include "GameplayAbilities_structs.hpp"


namespace SDK::Params
{

// Function DowntimeManager.DowntimeManager_C.BindToSuddenDeathActive
// 0x0020 (0x0020 - 0x0000)
struct DowntimeManager_C_BindToSuddenDeathActive final
{
public:
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0000(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ASuddenDeathEndCondition_C*             CallFunc_GetActorOfClass_ReturnValue;              // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(DowntimeManager_C_BindToSuddenDeathActive) == 0x000008, "Wrong alignment on DowntimeManager_C_BindToSuddenDeathActive");
static_assert(sizeof(DowntimeManager_C_BindToSuddenDeathActive) == 0x000020, "Wrong size on DowntimeManager_C_BindToSuddenDeathActive");
static_assert(offsetof(DowntimeManager_C_BindToSuddenDeathActive, K2Node_CreateDelegate_OutputDelegate) == 0x000000, "Member 'DowntimeManager_C_BindToSuddenDeathActive::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(DowntimeManager_C_BindToSuddenDeathActive, CallFunc_GetActorOfClass_ReturnValue) == 0x000010, "Member 'DowntimeManager_C_BindToSuddenDeathActive::CallFunc_GetActorOfClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(DowntimeManager_C_BindToSuddenDeathActive, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'DowntimeManager_C_BindToSuddenDeathActive::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function DowntimeManager.DowntimeManager_C.DoesTODWidgetExist
// 0x0020 (0x0020 - 0x0000)
struct DowntimeManager_C_DoesTODWidgetExist final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UWI_TimeOfDay_C*>                CallFunc_GetAllWidgetsOfClass_FoundWidgets;        // 0x0008(0x0010)(ReferenceParm, ContainsInstancedReference)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(DowntimeManager_C_DoesTODWidgetExist) == 0x000008, "Wrong alignment on DowntimeManager_C_DoesTODWidgetExist");
static_assert(sizeof(DowntimeManager_C_DoesTODWidgetExist) == 0x000020, "Wrong size on DowntimeManager_C_DoesTODWidgetExist");
static_assert(offsetof(DowntimeManager_C_DoesTODWidgetExist, ReturnValue) == 0x000000, "Member 'DowntimeManager_C_DoesTODWidgetExist::ReturnValue' has a wrong offset!");
static_assert(offsetof(DowntimeManager_C_DoesTODWidgetExist, CallFunc_GetAllWidgetsOfClass_FoundWidgets) == 0x000008, "Member 'DowntimeManager_C_DoesTODWidgetExist::CallFunc_GetAllWidgetsOfClass_FoundWidgets' has a wrong offset!");
static_assert(offsetof(DowntimeManager_C_DoesTODWidgetExist, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000018, "Member 'DowntimeManager_C_DoesTODWidgetExist::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");

// Function DowntimeManager.DowntimeManager_C.Enable Construction Yard Cosmetics
// 0x0078 (0x0078 - 0x0000)
struct DowntimeManager_C_Enable_Construction_Yard_Cosmetics final
{
public:
	bool                                          Enable;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_ResourceCrane_C*                    CallFunc_GetActorOfClass_ReturnValue;              // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0020(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class ABP_ConstructionSiteFloodLightRay_C*> CallFunc_GetAllActorsOfClass_OutActors;            // 0x0038(0x0010)(ReferenceParm)
	TArray<class ABP_ConstructionSiteFloodLightRay_C*> CallFunc_GetAllActorsOfClass_OutActors_1;          // 0x0048(0x0010)(ReferenceParm)
	class ABP_ConstructionSiteFloodLightRay_C*    CallFunc_Array_Get_Item;                           // 0x0058(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_ConstructionSiteFloodLightRay_C*    CallFunc_Array_Get_Item_1;                         // 0x0060(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(DowntimeManager_C_Enable_Construction_Yard_Cosmetics) == 0x000008, "Wrong alignment on DowntimeManager_C_Enable_Construction_Yard_Cosmetics");
static_assert(sizeof(DowntimeManager_C_Enable_Construction_Yard_Cosmetics) == 0x000078, "Wrong size on DowntimeManager_C_Enable_Construction_Yard_Cosmetics");
static_assert(offsetof(DowntimeManager_C_Enable_Construction_Yard_Cosmetics, Enable) == 0x000000, "Member 'DowntimeManager_C_Enable_Construction_Yard_Cosmetics::Enable' has a wrong offset!");
static_assert(offsetof(DowntimeManager_C_Enable_Construction_Yard_Cosmetics, Temp_int_Variable) == 0x000004, "Member 'DowntimeManager_C_Enable_Construction_Yard_Cosmetics::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(DowntimeManager_C_Enable_Construction_Yard_Cosmetics, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'DowntimeManager_C_Enable_Construction_Yard_Cosmetics::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(DowntimeManager_C_Enable_Construction_Yard_Cosmetics, Temp_int_Variable_1) == 0x00000C, "Member 'DowntimeManager_C_Enable_Construction_Yard_Cosmetics::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(DowntimeManager_C_Enable_Construction_Yard_Cosmetics, CallFunc_GetActorOfClass_ReturnValue) == 0x000010, "Member 'DowntimeManager_C_Enable_Construction_Yard_Cosmetics::CallFunc_GetActorOfClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(DowntimeManager_C_Enable_Construction_Yard_Cosmetics, CallFunc_Add_IntInt_ReturnValue_1) == 0x000018, "Member 'DowntimeManager_C_Enable_Construction_Yard_Cosmetics::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(DowntimeManager_C_Enable_Construction_Yard_Cosmetics, CallFunc_IsValid_ReturnValue) == 0x00001C, "Member 'DowntimeManager_C_Enable_Construction_Yard_Cosmetics::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(DowntimeManager_C_Enable_Construction_Yard_Cosmetics, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000020, "Member 'DowntimeManager_C_Enable_Construction_Yard_Cosmetics::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(DowntimeManager_C_Enable_Construction_Yard_Cosmetics, CallFunc_GetAllActorsOfClass_OutActors) == 0x000038, "Member 'DowntimeManager_C_Enable_Construction_Yard_Cosmetics::CallFunc_GetAllActorsOfClass_OutActors' has a wrong offset!");
static_assert(offsetof(DowntimeManager_C_Enable_Construction_Yard_Cosmetics, CallFunc_GetAllActorsOfClass_OutActors_1) == 0x000048, "Member 'DowntimeManager_C_Enable_Construction_Yard_Cosmetics::CallFunc_GetAllActorsOfClass_OutActors_1' has a wrong offset!");
static_assert(offsetof(DowntimeManager_C_Enable_Construction_Yard_Cosmetics, CallFunc_Array_Get_Item) == 0x000058, "Member 'DowntimeManager_C_Enable_Construction_Yard_Cosmetics::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(DowntimeManager_C_Enable_Construction_Yard_Cosmetics, CallFunc_Array_Get_Item_1) == 0x000060, "Member 'DowntimeManager_C_Enable_Construction_Yard_Cosmetics::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(DowntimeManager_C_Enable_Construction_Yard_Cosmetics, CallFunc_Array_Length_ReturnValue) == 0x000068, "Member 'DowntimeManager_C_Enable_Construction_Yard_Cosmetics::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(DowntimeManager_C_Enable_Construction_Yard_Cosmetics, CallFunc_Array_Length_ReturnValue_1) == 0x00006C, "Member 'DowntimeManager_C_Enable_Construction_Yard_Cosmetics::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(DowntimeManager_C_Enable_Construction_Yard_Cosmetics, CallFunc_Less_IntInt_ReturnValue) == 0x000070, "Member 'DowntimeManager_C_Enable_Construction_Yard_Cosmetics::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(DowntimeManager_C_Enable_Construction_Yard_Cosmetics, CallFunc_Less_IntInt_ReturnValue_1) == 0x000071, "Member 'DowntimeManager_C_Enable_Construction_Yard_Cosmetics::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");

// Function DowntimeManager.DowntimeManager_C.ExecuteUbergraph_DowntimeManager
// 0x01B0 (0x01B0 - 0x0000)
struct DowntimeManager_C_ExecuteUbergraph_DowntimeManager final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0004(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x0014(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	E_TimeOfDay                                   Temp_byte_Variable;                                // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_25[0x3];                                       // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0028(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           Temp_struct_Variable;                              // 0x0030(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           Temp_struct_Variable_1;                            // 0x0038(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           Temp_struct_Variable_2;                            // 0x0040(0x0008)(NoDestructor, HasGetValueTypeHash)
	E_TimeOfDay                                   Temp_byte_Variable_1;                              // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_TimeOfDay                                   Temp_byte_Variable_2;                              // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_TimeOfDay                                   Temp_byte_Variable_3;                              // 0x004A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_TimeOfDay                                   Temp_byte_Variable_4;                              // 0x004B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_TimeOfDay                                   Temp_byte_Variable_5;                              // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_TimeOfDay                                   Temp_byte_Variable_6;                              // 0x004D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FObjectiveGameplayMessage              K2Node_MakeStruct_ObjectiveGameplayMessage;        // 0x004E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4F[0x1];                                       // 0x004F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateJP*                           CallFunc_GetGameStateJP_ReturnValue;               // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	E_TimeOfDay                                   K2Node_CustomEvent_TOD;                            // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5A[0x6];                                       // 0x005A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_WarmupBlockerManager_C*             CallFunc_GetActorOfClass_ReturnValue;              // 0x0060(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Conv_IntToBool_ReturnValue;               // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_69[0x7];                                       // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0070(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_2;            // 0x0078(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AGameStateJP_MatchBP_C*                 K2Node_DynamicCast_AsGame_State_JP_Match_BP;       // 0x0088(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x0091(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0092(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_93[0x5];                                       // 0x0093(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_LightingAndPostProcessController_C* CallFunc_GetActorOfClass_ReturnValue_1;            // 0x0098(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UGameplayMessageSubsystem*              CallFunc_GetGameInstanceSubsystem_ReturnValue;     // 0x00A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           K2Node_Select_Default;                             // 0x00A8(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_IsValidTimerHandle_ReturnValue;        // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B1[0x3];                                       // 0x00B1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_K2_GetTimerRemainingTimeHandle_ReturnValue; // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue;       // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B9[0x7];                                       // 0x00B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateJP*                           CallFunc_GetGameStateJP_ReturnValue_1;             // 0x00C0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasMatchEnded_ReturnValue;                // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_TimeOfDay                                   K2Node_Select_Default_1;                           // 0x00C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x00CA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_CB[0x5];                                       // 0x00CB(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMatchConfiguration                    CallFunc_GetMatchConfiguration_ReturnValue;        // 0x00D0(0x0058)(ConstParm)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0128(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetDayTimeLength_ReturnValue;             // 0x0130(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0138(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_3;            // 0x013C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14C[0x4];                                      // 0x014C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue_1;        // 0x0150(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_IsValidTimerHandle_ReturnValue_1;      // 0x0158(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_IsValidTimerHandle_ReturnValue_2;      // 0x0159(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_15A[0x2];                                      // 0x015A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_4;            // 0x015C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_16C[0x4];                                      // 0x016C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue_2;        // 0x0170(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_1;                    // 0x0178(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_179[0x7];                                      // 0x0179(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Get_ClassLog_Name_name;                   // 0x0180(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	double                                        CallFunc_LessEqual_DoubleDouble_A_ImplicitCast;    // 0x0190(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetDayTimeLength_A_ImplicitCast;          // 0x0198(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_A_ImplicitCast;     // 0x01A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_K2_SetTimerDelegate_Time_ImplicitCast;    // 0x01A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_K2_SetTimerDelegate_Time_ImplicitCast_1;  // 0x01AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(DowntimeManager_C_ExecuteUbergraph_DowntimeManager) == 0x000008, "Wrong alignment on DowntimeManager_C_ExecuteUbergraph_DowntimeManager");
static_assert(sizeof(DowntimeManager_C_ExecuteUbergraph_DowntimeManager) == 0x0001B0, "Wrong size on DowntimeManager_C_ExecuteUbergraph_DowntimeManager");
static_assert(offsetof(DowntimeManager_C_ExecuteUbergraph_DowntimeManager, EntryPoint) == 0x000000, "Member 'DowntimeManager_C_ExecuteUbergraph_DowntimeManager::EntryPoint' has a wrong offset!");
static_assert(offsetof(DowntimeManager_C_ExecuteUbergraph_DowntimeManager, K2Node_CreateDelegate_OutputDelegate) == 0x000004, "Member 'DowntimeManager_C_ExecuteUbergraph_DowntimeManager::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(DowntimeManager_C_ExecuteUbergraph_DowntimeManager, K2Node_CreateDelegate_OutputDelegate_1) == 0x000014, "Member 'DowntimeManager_C_ExecuteUbergraph_DowntimeManager::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(DowntimeManager_C_ExecuteUbergraph_DowntimeManager, Temp_byte_Variable) == 0x000024, "Member 'DowntimeManager_C_ExecuteUbergraph_DowntimeManager::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(DowntimeManager_C_ExecuteUbergraph_DowntimeManager, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000028, "Member 'DowntimeManager_C_ExecuteUbergraph_DowntimeManager::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(DowntimeManager_C_ExecuteUbergraph_DowntimeManager, Temp_struct_Variable) == 0x000030, "Member 'DowntimeManager_C_ExecuteUbergraph_DowntimeManager::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(DowntimeManager_C_ExecuteUbergraph_DowntimeManager, Temp_struct_Variable_1) == 0x000038, "Member 'DowntimeManager_C_ExecuteUbergraph_DowntimeManager::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(DowntimeManager_C_ExecuteUbergraph_DowntimeManager, Temp_struct_Variable_2) == 0x000040, "Member 'DowntimeManager_C_ExecuteUbergraph_DowntimeManager::Temp_struct_Variable_2' has a wrong offset!");
static_assert(offsetof(DowntimeManager_C_ExecuteUbergraph_DowntimeManager, Temp_byte_Variable_1) == 0x000048, "Member 'DowntimeManager_C_ExecuteUbergraph_DowntimeManager::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(DowntimeManager_C_ExecuteUbergraph_DowntimeManager, Temp_byte_Variable_2) == 0x000049, "Member 'DowntimeManager_C_ExecuteUbergraph_DowntimeManager::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(DowntimeManager_C_ExecuteUbergraph_DowntimeManager, Temp_byte_Variable_3) == 0x00004A, "Member 'DowntimeManager_C_ExecuteUbergraph_DowntimeManager::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(DowntimeManager_C_ExecuteUbergraph_DowntimeManager, Temp_byte_Variable_4) == 0x00004B, "Member 'DowntimeManager_C_ExecuteUbergraph_DowntimeManager::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(DowntimeManager_C_ExecuteUbergraph_DowntimeManager, Temp_byte_Variable_5) == 0x00004C, "Member 'DowntimeManager_C_ExecuteUbergraph_DowntimeManager::Temp_byte_Variable_5' has a wrong offset!");
static_assert(offsetof(DowntimeManager_C_ExecuteUbergraph_DowntimeManager, Temp_byte_Variable_6) == 0x00004D, "Member 'DowntimeManager_C_ExecuteUbergraph_DowntimeManager::Temp_byte_Variable_6' has a wrong offset!");
static_assert(offsetof(DowntimeManager_C_ExecuteUbergraph_DowntimeManager, K2Node_MakeStruct_ObjectiveGameplayMessage) == 0x00004E, "Member 'DowntimeManager_C_ExecuteUbergraph_DowntimeManager::K2Node_MakeStruct_ObjectiveGameplayMessage' has a wrong offset!");
static_assert(offsetof(DowntimeManager_C_ExecuteUbergraph_DowntimeManager, CallFunc_GetGameStateJP_ReturnValue) == 0x000050, "Member 'DowntimeManager_C_ExecuteUbergraph_DowntimeManager::CallFunc_GetGameStateJP_ReturnValue' has a wrong offset!");
static_assert(offsetof(DowntimeManager_C_ExecuteUbergraph_DowntimeManager, K2Node_CustomEvent_TOD) == 0x000058, "Member 'DowntimeManager_C_ExecuteUbergraph_DowntimeManager::K2Node_CustomEvent_TOD' has a wrong offset!");
static_assert(offsetof(DowntimeManager_C_ExecuteUbergraph_DowntimeManager, K2Node_SwitchEnum_CmpSuccess) == 0x000059, "Member 'DowntimeManager_C_ExecuteUbergraph_DowntimeManager::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(DowntimeManager_C_ExecuteUbergraph_DowntimeManager, CallFunc_GetActorOfClass_ReturnValue) == 0x000060, "Member 'DowntimeManager_C_ExecuteUbergraph_DowntimeManager::CallFunc_GetActorOfClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(DowntimeManager_C_ExecuteUbergraph_DowntimeManager, CallFunc_Conv_IntToBool_ReturnValue) == 0x000068, "Member 'DowntimeManager_C_ExecuteUbergraph_DowntimeManager::CallFunc_Conv_IntToBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(DowntimeManager_C_ExecuteUbergraph_DowntimeManager, CallFunc_GetGameState_ReturnValue) == 0x000070, "Member 'DowntimeManager_C_ExecuteUbergraph_DowntimeManager::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(DowntimeManager_C_ExecuteUbergraph_DowntimeManager, K2Node_CreateDelegate_OutputDelegate_2) == 0x000078, "Member 'DowntimeManager_C_ExecuteUbergraph_DowntimeManager::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(DowntimeManager_C_ExecuteUbergraph_DowntimeManager, K2Node_DynamicCast_AsGame_State_JP_Match_BP) == 0x000088, "Member 'DowntimeManager_C_ExecuteUbergraph_DowntimeManager::K2Node_DynamicCast_AsGame_State_JP_Match_BP' has a wrong offset!");
static_assert(offsetof(DowntimeManager_C_ExecuteUbergraph_DowntimeManager, K2Node_DynamicCast_bSuccess) == 0x000090, "Member 'DowntimeManager_C_ExecuteUbergraph_DowntimeManager::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(DowntimeManager_C_ExecuteUbergraph_DowntimeManager, CallFunc_IsDedicatedServer_ReturnValue) == 0x000091, "Member 'DowntimeManager_C_ExecuteUbergraph_DowntimeManager::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(DowntimeManager_C_ExecuteUbergraph_DowntimeManager, CallFunc_HasAuthority_ReturnValue) == 0x000092, "Member 'DowntimeManager_C_ExecuteUbergraph_DowntimeManager::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(DowntimeManager_C_ExecuteUbergraph_DowntimeManager, CallFunc_GetActorOfClass_ReturnValue_1) == 0x000098, "Member 'DowntimeManager_C_ExecuteUbergraph_DowntimeManager::CallFunc_GetActorOfClass_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(DowntimeManager_C_ExecuteUbergraph_DowntimeManager, CallFunc_GetGameInstanceSubsystem_ReturnValue) == 0x0000A0, "Member 'DowntimeManager_C_ExecuteUbergraph_DowntimeManager::CallFunc_GetGameInstanceSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(DowntimeManager_C_ExecuteUbergraph_DowntimeManager, K2Node_Select_Default) == 0x0000A8, "Member 'DowntimeManager_C_ExecuteUbergraph_DowntimeManager::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(DowntimeManager_C_ExecuteUbergraph_DowntimeManager, CallFunc_K2_IsValidTimerHandle_ReturnValue) == 0x0000B0, "Member 'DowntimeManager_C_ExecuteUbergraph_DowntimeManager::CallFunc_K2_IsValidTimerHandle_ReturnValue' has a wrong offset!");
static_assert(offsetof(DowntimeManager_C_ExecuteUbergraph_DowntimeManager, CallFunc_K2_GetTimerRemainingTimeHandle_ReturnValue) == 0x0000B4, "Member 'DowntimeManager_C_ExecuteUbergraph_DowntimeManager::CallFunc_K2_GetTimerRemainingTimeHandle_ReturnValue' has a wrong offset!");
static_assert(offsetof(DowntimeManager_C_ExecuteUbergraph_DowntimeManager, CallFunc_LessEqual_DoubleDouble_ReturnValue) == 0x0000B8, "Member 'DowntimeManager_C_ExecuteUbergraph_DowntimeManager::CallFunc_LessEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(DowntimeManager_C_ExecuteUbergraph_DowntimeManager, CallFunc_GetGameStateJP_ReturnValue_1) == 0x0000C0, "Member 'DowntimeManager_C_ExecuteUbergraph_DowntimeManager::CallFunc_GetGameStateJP_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(DowntimeManager_C_ExecuteUbergraph_DowntimeManager, CallFunc_HasMatchEnded_ReturnValue) == 0x0000C8, "Member 'DowntimeManager_C_ExecuteUbergraph_DowntimeManager::CallFunc_HasMatchEnded_ReturnValue' has a wrong offset!");
static_assert(offsetof(DowntimeManager_C_ExecuteUbergraph_DowntimeManager, K2Node_Select_Default_1) == 0x0000C9, "Member 'DowntimeManager_C_ExecuteUbergraph_DowntimeManager::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(DowntimeManager_C_ExecuteUbergraph_DowntimeManager, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x0000CA, "Member 'DowntimeManager_C_ExecuteUbergraph_DowntimeManager::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(DowntimeManager_C_ExecuteUbergraph_DowntimeManager, CallFunc_GetMatchConfiguration_ReturnValue) == 0x0000D0, "Member 'DowntimeManager_C_ExecuteUbergraph_DowntimeManager::CallFunc_GetMatchConfiguration_ReturnValue' has a wrong offset!");
static_assert(offsetof(DowntimeManager_C_ExecuteUbergraph_DowntimeManager, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000128, "Member 'DowntimeManager_C_ExecuteUbergraph_DowntimeManager::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(DowntimeManager_C_ExecuteUbergraph_DowntimeManager, CallFunc_GetDayTimeLength_ReturnValue) == 0x000130, "Member 'DowntimeManager_C_ExecuteUbergraph_DowntimeManager::CallFunc_GetDayTimeLength_ReturnValue' has a wrong offset!");
static_assert(offsetof(DowntimeManager_C_ExecuteUbergraph_DowntimeManager, CallFunc_Add_IntInt_ReturnValue) == 0x000138, "Member 'DowntimeManager_C_ExecuteUbergraph_DowntimeManager::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(DowntimeManager_C_ExecuteUbergraph_DowntimeManager, K2Node_CreateDelegate_OutputDelegate_3) == 0x00013C, "Member 'DowntimeManager_C_ExecuteUbergraph_DowntimeManager::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(DowntimeManager_C_ExecuteUbergraph_DowntimeManager, CallFunc_K2_SetTimerDelegate_ReturnValue_1) == 0x000150, "Member 'DowntimeManager_C_ExecuteUbergraph_DowntimeManager::CallFunc_K2_SetTimerDelegate_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(DowntimeManager_C_ExecuteUbergraph_DowntimeManager, CallFunc_K2_IsValidTimerHandle_ReturnValue_1) == 0x000158, "Member 'DowntimeManager_C_ExecuteUbergraph_DowntimeManager::CallFunc_K2_IsValidTimerHandle_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(DowntimeManager_C_ExecuteUbergraph_DowntimeManager, CallFunc_K2_IsValidTimerHandle_ReturnValue_2) == 0x000159, "Member 'DowntimeManager_C_ExecuteUbergraph_DowntimeManager::CallFunc_K2_IsValidTimerHandle_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(DowntimeManager_C_ExecuteUbergraph_DowntimeManager, K2Node_CreateDelegate_OutputDelegate_4) == 0x00015C, "Member 'DowntimeManager_C_ExecuteUbergraph_DowntimeManager::K2Node_CreateDelegate_OutputDelegate_4' has a wrong offset!");
static_assert(offsetof(DowntimeManager_C_ExecuteUbergraph_DowntimeManager, CallFunc_K2_SetTimerDelegate_ReturnValue_2) == 0x000170, "Member 'DowntimeManager_C_ExecuteUbergraph_DowntimeManager::CallFunc_K2_SetTimerDelegate_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(DowntimeManager_C_ExecuteUbergraph_DowntimeManager, K2Node_SwitchEnum_CmpSuccess_1) == 0x000178, "Member 'DowntimeManager_C_ExecuteUbergraph_DowntimeManager::K2Node_SwitchEnum_CmpSuccess_1' has a wrong offset!");
static_assert(offsetof(DowntimeManager_C_ExecuteUbergraph_DowntimeManager, CallFunc_Get_ClassLog_Name_name) == 0x000180, "Member 'DowntimeManager_C_ExecuteUbergraph_DowntimeManager::CallFunc_Get_ClassLog_Name_name' has a wrong offset!");
static_assert(offsetof(DowntimeManager_C_ExecuteUbergraph_DowntimeManager, CallFunc_LessEqual_DoubleDouble_A_ImplicitCast) == 0x000190, "Member 'DowntimeManager_C_ExecuteUbergraph_DowntimeManager::CallFunc_LessEqual_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(DowntimeManager_C_ExecuteUbergraph_DowntimeManager, CallFunc_GetDayTimeLength_A_ImplicitCast) == 0x000198, "Member 'DowntimeManager_C_ExecuteUbergraph_DowntimeManager::CallFunc_GetDayTimeLength_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(DowntimeManager_C_ExecuteUbergraph_DowntimeManager, CallFunc_Multiply_DoubleDouble_A_ImplicitCast) == 0x0001A0, "Member 'DowntimeManager_C_ExecuteUbergraph_DowntimeManager::CallFunc_Multiply_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(DowntimeManager_C_ExecuteUbergraph_DowntimeManager, CallFunc_K2_SetTimerDelegate_Time_ImplicitCast) == 0x0001A8, "Member 'DowntimeManager_C_ExecuteUbergraph_DowntimeManager::CallFunc_K2_SetTimerDelegate_Time_ImplicitCast' has a wrong offset!");
static_assert(offsetof(DowntimeManager_C_ExecuteUbergraph_DowntimeManager, CallFunc_K2_SetTimerDelegate_Time_ImplicitCast_1) == 0x0001AC, "Member 'DowntimeManager_C_ExecuteUbergraph_DowntimeManager::CallFunc_K2_SetTimerDelegate_Time_ImplicitCast_1' has a wrong offset!");

// Function DowntimeManager.DowntimeManager_C.GetDayTimeLength
// 0x0038 (0x0038 - 0x0000)
struct DowntimeManager_C_GetDayTimeLength final
{
public:
	double                                        A;                                                 // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(DowntimeManager_C_GetDayTimeLength) == 0x000008, "Wrong alignment on DowntimeManager_C_GetDayTimeLength");
static_assert(sizeof(DowntimeManager_C_GetDayTimeLength) == 0x000038, "Wrong size on DowntimeManager_C_GetDayTimeLength");
static_assert(offsetof(DowntimeManager_C_GetDayTimeLength, A) == 0x000000, "Member 'DowntimeManager_C_GetDayTimeLength::A' has a wrong offset!");
static_assert(offsetof(DowntimeManager_C_GetDayTimeLength, ReturnValue) == 0x000008, "Member 'DowntimeManager_C_GetDayTimeLength::ReturnValue' has a wrong offset!");
static_assert(offsetof(DowntimeManager_C_GetDayTimeLength, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000010, "Member 'DowntimeManager_C_GetDayTimeLength::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(DowntimeManager_C_GetDayTimeLength, CallFunc_Subtract_IntInt_ReturnValue) == 0x000018, "Member 'DowntimeManager_C_GetDayTimeLength::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(DowntimeManager_C_GetDayTimeLength, CallFunc_Conv_IntToDouble_ReturnValue) == 0x000020, "Member 'DowntimeManager_C_GetDayTimeLength::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(DowntimeManager_C_GetDayTimeLength, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000028, "Member 'DowntimeManager_C_GetDayTimeLength::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(DowntimeManager_C_GetDayTimeLength, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000030, "Member 'DowntimeManager_C_GetDayTimeLength::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");

// Function DowntimeManager.DowntimeManager_C.GetTimeOfDayEffect
// 0x0040 (0x0040 - 0x0000)
struct DowntimeManager_C_GetTimeOfDayEffect final
{
public:
	class UClass*                                 EffectType;                                        // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	E_TimeOfDay                                   Temp_byte_Variable;                                // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 Temp_class_Variable;                               // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 Temp_class_Variable_1;                             // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 Temp_class_Variable_2;                             // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 Temp_class_Variable_3;                             // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 Temp_class_Variable_4;                             // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 K2Node_Select_Default;                             // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(DowntimeManager_C_GetTimeOfDayEffect) == 0x000008, "Wrong alignment on DowntimeManager_C_GetTimeOfDayEffect");
static_assert(sizeof(DowntimeManager_C_GetTimeOfDayEffect) == 0x000040, "Wrong size on DowntimeManager_C_GetTimeOfDayEffect");
static_assert(offsetof(DowntimeManager_C_GetTimeOfDayEffect, EffectType) == 0x000000, "Member 'DowntimeManager_C_GetTimeOfDayEffect::EffectType' has a wrong offset!");
static_assert(offsetof(DowntimeManager_C_GetTimeOfDayEffect, Temp_byte_Variable) == 0x000008, "Member 'DowntimeManager_C_GetTimeOfDayEffect::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(DowntimeManager_C_GetTimeOfDayEffect, Temp_class_Variable) == 0x000010, "Member 'DowntimeManager_C_GetTimeOfDayEffect::Temp_class_Variable' has a wrong offset!");
static_assert(offsetof(DowntimeManager_C_GetTimeOfDayEffect, Temp_class_Variable_1) == 0x000018, "Member 'DowntimeManager_C_GetTimeOfDayEffect::Temp_class_Variable_1' has a wrong offset!");
static_assert(offsetof(DowntimeManager_C_GetTimeOfDayEffect, Temp_class_Variable_2) == 0x000020, "Member 'DowntimeManager_C_GetTimeOfDayEffect::Temp_class_Variable_2' has a wrong offset!");
static_assert(offsetof(DowntimeManager_C_GetTimeOfDayEffect, Temp_class_Variable_3) == 0x000028, "Member 'DowntimeManager_C_GetTimeOfDayEffect::Temp_class_Variable_3' has a wrong offset!");
static_assert(offsetof(DowntimeManager_C_GetTimeOfDayEffect, Temp_class_Variable_4) == 0x000030, "Member 'DowntimeManager_C_GetTimeOfDayEffect::Temp_class_Variable_4' has a wrong offset!");
static_assert(offsetof(DowntimeManager_C_GetTimeOfDayEffect, K2Node_Select_Default) == 0x000038, "Member 'DowntimeManager_C_GetTimeOfDayEffect::K2Node_Select_Default' has a wrong offset!");

// Function DowntimeManager.DowntimeManager_C.GrantNightMoney
// 0x0070 (0x0070 - 0x0000)
struct DowntimeManager_C_GrantNightMoney final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FTeam>                          CallFunc_GetTeams_ReturnValue;                     // 0x0010(0x0010)(ReferenceParm)
	class UEconomySubsystem*                      CallFunc_GetWorldSubsystem_ReturnValue;            // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FTeam                                  CallFunc_Array_Get_Item;                           // 0x0028(0x0038)(NoDestructor)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_65[0x3];                                       // 0x0065(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(DowntimeManager_C_GrantNightMoney) == 0x000008, "Wrong alignment on DowntimeManager_C_GrantNightMoney");
static_assert(sizeof(DowntimeManager_C_GrantNightMoney) == 0x000070, "Wrong size on DowntimeManager_C_GrantNightMoney");
static_assert(offsetof(DowntimeManager_C_GrantNightMoney, Temp_int_Array_Index_Variable) == 0x000000, "Member 'DowntimeManager_C_GrantNightMoney::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(DowntimeManager_C_GrantNightMoney, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'DowntimeManager_C_GrantNightMoney::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(DowntimeManager_C_GrantNightMoney, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'DowntimeManager_C_GrantNightMoney::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(DowntimeManager_C_GrantNightMoney, CallFunc_GetTeams_ReturnValue) == 0x000010, "Member 'DowntimeManager_C_GrantNightMoney::CallFunc_GetTeams_ReturnValue' has a wrong offset!");
static_assert(offsetof(DowntimeManager_C_GrantNightMoney, CallFunc_GetWorldSubsystem_ReturnValue) == 0x000020, "Member 'DowntimeManager_C_GrantNightMoney::CallFunc_GetWorldSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(DowntimeManager_C_GrantNightMoney, CallFunc_Array_Get_Item) == 0x000028, "Member 'DowntimeManager_C_GrantNightMoney::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(DowntimeManager_C_GrantNightMoney, CallFunc_Array_Length_ReturnValue) == 0x000060, "Member 'DowntimeManager_C_GrantNightMoney::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(DowntimeManager_C_GrantNightMoney, CallFunc_Less_IntInt_ReturnValue) == 0x000064, "Member 'DowntimeManager_C_GrantNightMoney::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(DowntimeManager_C_GrantNightMoney, CallFunc_Conv_ByteToInt_ReturnValue) == 0x000068, "Member 'DowntimeManager_C_GrantNightMoney::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");

// Function DowntimeManager.DowntimeManager_C.IsDay
// 0x0002 (0x0002 - 0x0000)
struct DowntimeManager_C_IsDay final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(DowntimeManager_C_IsDay) == 0x000001, "Wrong alignment on DowntimeManager_C_IsDay");
static_assert(sizeof(DowntimeManager_C_IsDay) == 0x000002, "Wrong size on DowntimeManager_C_IsDay");
static_assert(offsetof(DowntimeManager_C_IsDay, ReturnValue) == 0x000000, "Member 'DowntimeManager_C_IsDay::ReturnValue' has a wrong offset!");
static_assert(offsetof(DowntimeManager_C_IsDay, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000001, "Member 'DowntimeManager_C_IsDay::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function DowntimeManager.DowntimeManager_C.IsNight
// 0x0002 (0x0002 - 0x0000)
struct DowntimeManager_C_IsNight final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(DowntimeManager_C_IsNight) == 0x000001, "Wrong alignment on DowntimeManager_C_IsNight");
static_assert(sizeof(DowntimeManager_C_IsNight) == 0x000002, "Wrong size on DowntimeManager_C_IsNight");
static_assert(offsetof(DowntimeManager_C_IsNight, ReturnValue) == 0x000000, "Member 'DowntimeManager_C_IsNight::ReturnValue' has a wrong offset!");
static_assert(offsetof(DowntimeManager_C_IsNight, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000001, "Member 'DowntimeManager_C_IsNight::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function DowntimeManager.DowntimeManager_C.Multi_Play Lighting Transition
// 0x0001 (0x0001 - 0x0000)
struct DowntimeManager_C_Multi_Play_Lighting_Transition final
{
public:
	E_TimeOfDay                                   TOD;                                               // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(DowntimeManager_C_Multi_Play_Lighting_Transition) == 0x000001, "Wrong alignment on DowntimeManager_C_Multi_Play_Lighting_Transition");
static_assert(sizeof(DowntimeManager_C_Multi_Play_Lighting_Transition) == 0x000001, "Wrong size on DowntimeManager_C_Multi_Play_Lighting_Transition");
static_assert(offsetof(DowntimeManager_C_Multi_Play_Lighting_Transition, TOD) == 0x000000, "Member 'DowntimeManager_C_Multi_Play_Lighting_Transition::TOD' has a wrong offset!");

// Function DowntimeManager.DowntimeManager_C.On_Client_TimeOfDayChange__DelegateSignature
// 0x0002 (0x0002 - 0x0000)
struct DowntimeManager_C_On_Client_TimeOfDayChange__DelegateSignature final
{
public:
	bool                                          InitialState_0;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_TimeOfDay                                   TimeOfDay_0;                                       // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(DowntimeManager_C_On_Client_TimeOfDayChange__DelegateSignature) == 0x000001, "Wrong alignment on DowntimeManager_C_On_Client_TimeOfDayChange__DelegateSignature");
static_assert(sizeof(DowntimeManager_C_On_Client_TimeOfDayChange__DelegateSignature) == 0x000002, "Wrong size on DowntimeManager_C_On_Client_TimeOfDayChange__DelegateSignature");
static_assert(offsetof(DowntimeManager_C_On_Client_TimeOfDayChange__DelegateSignature, InitialState_0) == 0x000000, "Member 'DowntimeManager_C_On_Client_TimeOfDayChange__DelegateSignature::InitialState_0' has a wrong offset!");
static_assert(offsetof(DowntimeManager_C_On_Client_TimeOfDayChange__DelegateSignature, TimeOfDay_0) == 0x000001, "Member 'DowntimeManager_C_On_Client_TimeOfDayChange__DelegateSignature::TimeOfDay_0' has a wrong offset!");

// Function DowntimeManager.DowntimeManager_C.On_TimeOfDayChange__DelegateSignature
// 0x0001 (0x0001 - 0x0000)
struct DowntimeManager_C_On_TimeOfDayChange__DelegateSignature final
{
public:
	E_TimeOfDay                                   TimeOfDay_0;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(DowntimeManager_C_On_TimeOfDayChange__DelegateSignature) == 0x000001, "Wrong alignment on DowntimeManager_C_On_TimeOfDayChange__DelegateSignature");
static_assert(sizeof(DowntimeManager_C_On_TimeOfDayChange__DelegateSignature) == 0x000001, "Wrong size on DowntimeManager_C_On_TimeOfDayChange__DelegateSignature");
static_assert(offsetof(DowntimeManager_C_On_TimeOfDayChange__DelegateSignature, TimeOfDay_0) == 0x000000, "Member 'DowntimeManager_C_On_TimeOfDayChange__DelegateSignature::TimeOfDay_0' has a wrong offset!");

// Function DowntimeManager.DowntimeManager_C.OnRep_SuddenDeathActive
// 0x0010 (0x0010 - 0x0000)
struct DowntimeManager_C_OnRep_SuddenDeathActive final
{
public:
	class ABP_LightingAndPostProcessController_C* CallFunc_GetActorOfClass_ReturnValue;              // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(DowntimeManager_C_OnRep_SuddenDeathActive) == 0x000008, "Wrong alignment on DowntimeManager_C_OnRep_SuddenDeathActive");
static_assert(sizeof(DowntimeManager_C_OnRep_SuddenDeathActive) == 0x000010, "Wrong size on DowntimeManager_C_OnRep_SuddenDeathActive");
static_assert(offsetof(DowntimeManager_C_OnRep_SuddenDeathActive, CallFunc_GetActorOfClass_ReturnValue) == 0x000000, "Member 'DowntimeManager_C_OnRep_SuddenDeathActive::CallFunc_GetActorOfClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(DowntimeManager_C_OnRep_SuddenDeathActive, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'DowntimeManager_C_OnRep_SuddenDeathActive::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function DowntimeManager.DowntimeManager_C.OnRep_TimeOfDay
// 0x0080 (0x0080 - 0x0000)
struct DowntimeManager_C_OnRep_TimeOfDay final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UWI_TimeOfDay_C*>                CallFunc_GetAllWidgetsOfClass_FoundWidgets;        // 0x0010(0x0010)(ReferenceParm, ContainsInstancedReference)
	class UWI_TimeOfDay_C*                        CallFunc_Array_Get_Item;                           // 0x0020(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2D[0x3];                                       // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_LightingAndPostProcessController_C* CallFunc_GetActorOfClass_ReturnValue;              // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_BoolToString_ReturnValue;            // 0x0048(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0058(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue; // 0x0068(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(DowntimeManager_C_OnRep_TimeOfDay) == 0x000008, "Wrong alignment on DowntimeManager_C_OnRep_TimeOfDay");
static_assert(sizeof(DowntimeManager_C_OnRep_TimeOfDay) == 0x000080, "Wrong size on DowntimeManager_C_OnRep_TimeOfDay");
static_assert(offsetof(DowntimeManager_C_OnRep_TimeOfDay, Temp_int_Array_Index_Variable) == 0x000000, "Member 'DowntimeManager_C_OnRep_TimeOfDay::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(DowntimeManager_C_OnRep_TimeOfDay, CallFunc_HasAuthority_ReturnValue) == 0x000004, "Member 'DowntimeManager_C_OnRep_TimeOfDay::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(DowntimeManager_C_OnRep_TimeOfDay, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'DowntimeManager_C_OnRep_TimeOfDay::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(DowntimeManager_C_OnRep_TimeOfDay, CallFunc_GetAllWidgetsOfClass_FoundWidgets) == 0x000010, "Member 'DowntimeManager_C_OnRep_TimeOfDay::CallFunc_GetAllWidgetsOfClass_FoundWidgets' has a wrong offset!");
static_assert(offsetof(DowntimeManager_C_OnRep_TimeOfDay, CallFunc_Array_Get_Item) == 0x000020, "Member 'DowntimeManager_C_OnRep_TimeOfDay::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(DowntimeManager_C_OnRep_TimeOfDay, CallFunc_Array_Length_ReturnValue) == 0x000028, "Member 'DowntimeManager_C_OnRep_TimeOfDay::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(DowntimeManager_C_OnRep_TimeOfDay, CallFunc_Less_IntInt_ReturnValue) == 0x00002C, "Member 'DowntimeManager_C_OnRep_TimeOfDay::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(DowntimeManager_C_OnRep_TimeOfDay, CallFunc_Add_IntInt_ReturnValue) == 0x000030, "Member 'DowntimeManager_C_OnRep_TimeOfDay::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(DowntimeManager_C_OnRep_TimeOfDay, CallFunc_GetActorOfClass_ReturnValue) == 0x000038, "Member 'DowntimeManager_C_OnRep_TimeOfDay::CallFunc_GetActorOfClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(DowntimeManager_C_OnRep_TimeOfDay, CallFunc_IsValid_ReturnValue) == 0x000040, "Member 'DowntimeManager_C_OnRep_TimeOfDay::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(DowntimeManager_C_OnRep_TimeOfDay, CallFunc_Conv_BoolToString_ReturnValue) == 0x000048, "Member 'DowntimeManager_C_OnRep_TimeOfDay::CallFunc_Conv_BoolToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(DowntimeManager_C_OnRep_TimeOfDay, CallFunc_Concat_StrStr_ReturnValue) == 0x000058, "Member 'DowntimeManager_C_OnRep_TimeOfDay::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(DowntimeManager_C_OnRep_TimeOfDay, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue) == 0x000068, "Member 'DowntimeManager_C_OnRep_TimeOfDay::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue' has a wrong offset!");
static_assert(offsetof(DowntimeManager_C_OnRep_TimeOfDay, K2Node_SwitchEnum_CmpSuccess) == 0x000078, "Member 'DowntimeManager_C_OnRep_TimeOfDay::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function DowntimeManager.DowntimeManager_C.PlayLightingTransitionBasedOnTransition
// 0x0010 (0x0010 - 0x0000)
struct DowntimeManager_C_PlayLightingTransitionBasedOnTransition final
{
public:
	class ABP_LightingAndPostProcessController_C* CallFunc_GetActorOfClass_ReturnValue;              // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(DowntimeManager_C_PlayLightingTransitionBasedOnTransition) == 0x000008, "Wrong alignment on DowntimeManager_C_PlayLightingTransitionBasedOnTransition");
static_assert(sizeof(DowntimeManager_C_PlayLightingTransitionBasedOnTransition) == 0x000010, "Wrong size on DowntimeManager_C_PlayLightingTransitionBasedOnTransition");
static_assert(offsetof(DowntimeManager_C_PlayLightingTransitionBasedOnTransition, CallFunc_GetActorOfClass_ReturnValue) == 0x000000, "Member 'DowntimeManager_C_PlayLightingTransitionBasedOnTransition::CallFunc_GetActorOfClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(DowntimeManager_C_PlayLightingTransitionBasedOnTransition, K2Node_SwitchEnum_CmpSuccess) == 0x000008, "Member 'DowntimeManager_C_PlayLightingTransitionBasedOnTransition::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function DowntimeManager.DowntimeManager_C.PlaySoundAtPlayer
// 0x0020 (0x0020 - 0x0000)
struct DowntimeManager_C_PlaySoundAtPlayer final
{
public:
	class USoundBase*                             Sound;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_GetPlayerPawn_ReturnValue;                // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        CallFunc_K2_GetRootComponent_ReturnValue;          // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        CallFunc_SpawnSoundAttached_ReturnValue;           // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(DowntimeManager_C_PlaySoundAtPlayer) == 0x000008, "Wrong alignment on DowntimeManager_C_PlaySoundAtPlayer");
static_assert(sizeof(DowntimeManager_C_PlaySoundAtPlayer) == 0x000020, "Wrong size on DowntimeManager_C_PlaySoundAtPlayer");
static_assert(offsetof(DowntimeManager_C_PlaySoundAtPlayer, Sound) == 0x000000, "Member 'DowntimeManager_C_PlaySoundAtPlayer::Sound' has a wrong offset!");
static_assert(offsetof(DowntimeManager_C_PlaySoundAtPlayer, CallFunc_GetPlayerPawn_ReturnValue) == 0x000008, "Member 'DowntimeManager_C_PlaySoundAtPlayer::CallFunc_GetPlayerPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(DowntimeManager_C_PlaySoundAtPlayer, CallFunc_K2_GetRootComponent_ReturnValue) == 0x000010, "Member 'DowntimeManager_C_PlaySoundAtPlayer::CallFunc_K2_GetRootComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(DowntimeManager_C_PlaySoundAtPlayer, CallFunc_SpawnSoundAttached_ReturnValue) == 0x000018, "Member 'DowntimeManager_C_PlaySoundAtPlayer::CallFunc_SpawnSoundAttached_ReturnValue' has a wrong offset!");

// Function DowntimeManager.DowntimeManager_C.PlaySoundBasedOnTransition
// 0x0001 (0x0001 - 0x0000)
struct DowntimeManager_C_PlaySoundBasedOnTransition final
{
public:
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(DowntimeManager_C_PlaySoundBasedOnTransition) == 0x000001, "Wrong alignment on DowntimeManager_C_PlaySoundBasedOnTransition");
static_assert(sizeof(DowntimeManager_C_PlaySoundBasedOnTransition) == 0x000001, "Wrong size on DowntimeManager_C_PlaySoundBasedOnTransition");
static_assert(offsetof(DowntimeManager_C_PlaySoundBasedOnTransition, K2Node_SwitchEnum_CmpSuccess) == 0x000000, "Member 'DowntimeManager_C_PlaySoundBasedOnTransition::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function DowntimeManager.DowntimeManager_C.SendNightTimePlayerTip
// 0x0078 (0x0078 - 0x0000)
struct DowntimeManager_C_SendNightTimePlayerTip final
{
public:
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FPlayerMessage                         K2Node_MakeStruct_PlayerMessage;                   // 0x0010(0x0058)()
	class APlayerControllerJP_MatchBP_C*          K2Node_DynamicCast_AsPlayer_Controller_JP_Match_BP; // 0x0068(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(DowntimeManager_C_SendNightTimePlayerTip) == 0x000008, "Wrong alignment on DowntimeManager_C_SendNightTimePlayerTip");
static_assert(sizeof(DowntimeManager_C_SendNightTimePlayerTip) == 0x000078, "Wrong size on DowntimeManager_C_SendNightTimePlayerTip");
static_assert(offsetof(DowntimeManager_C_SendNightTimePlayerTip, CallFunc_IsDedicatedServer_ReturnValue) == 0x000000, "Member 'DowntimeManager_C_SendNightTimePlayerTip::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(DowntimeManager_C_SendNightTimePlayerTip, CallFunc_GetPlayerController_ReturnValue) == 0x000008, "Member 'DowntimeManager_C_SendNightTimePlayerTip::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(DowntimeManager_C_SendNightTimePlayerTip, K2Node_MakeStruct_PlayerMessage) == 0x000010, "Member 'DowntimeManager_C_SendNightTimePlayerTip::K2Node_MakeStruct_PlayerMessage' has a wrong offset!");
static_assert(offsetof(DowntimeManager_C_SendNightTimePlayerTip, K2Node_DynamicCast_AsPlayer_Controller_JP_Match_BP) == 0x000068, "Member 'DowntimeManager_C_SendNightTimePlayerTip::K2Node_DynamicCast_AsPlayer_Controller_JP_Match_BP' has a wrong offset!");
static_assert(offsetof(DowntimeManager_C_SendNightTimePlayerTip, K2Node_DynamicCast_bSuccess) == 0x000070, "Member 'DowntimeManager_C_SendNightTimePlayerTip::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function DowntimeManager.DowntimeManager_C.SetTimeRemainingForTOD
// 0x0010 (0x0010 - 0x0000)
struct DowntimeManager_C_SetTimeRemainingForTOD final
{
public:
	struct FTimerHandle                           Handle;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_K2_GetTimerRemainingTimeHandle_ReturnValue; // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(DowntimeManager_C_SetTimeRemainingForTOD) == 0x000008, "Wrong alignment on DowntimeManager_C_SetTimeRemainingForTOD");
static_assert(sizeof(DowntimeManager_C_SetTimeRemainingForTOD) == 0x000010, "Wrong size on DowntimeManager_C_SetTimeRemainingForTOD");
static_assert(offsetof(DowntimeManager_C_SetTimeRemainingForTOD, Handle) == 0x000000, "Member 'DowntimeManager_C_SetTimeRemainingForTOD::Handle' has a wrong offset!");
static_assert(offsetof(DowntimeManager_C_SetTimeRemainingForTOD, CallFunc_K2_GetTimerRemainingTimeHandle_ReturnValue) == 0x000008, "Member 'DowntimeManager_C_SetTimeRemainingForTOD::CallFunc_K2_GetTimerRemainingTimeHandle_ReturnValue' has a wrong offset!");

// Function DowntimeManager.DowntimeManager_C.UpdateEffectsOfPlayers
// 0x0050 (0x0050 - 0x0000)
struct DowntimeManager_C_UpdateEffectsOfPlayers final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_GetTimeOfDayEffect_EffectType;            // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<class ABP_ResidentCharacter_C*>        CallFunc_GetAllActorsOfClass_OutActors;            // 0x0018(0x0010)(ReferenceParm)
	bool                                          CallFunc_IsValidClass_ReturnValue;                 // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_ResidentCharacter_C*                CallFunc_Array_Get_Item;                           // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAbilitySystemComponent*                CallFunc_GetAbilitySystemComponent_ReturnValue;    // 0x0038(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FActiveGameplayEffectHandle            CallFunc_BP_ApplyGameplayEffectToSelf_ReturnValue; // 0x0044(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(DowntimeManager_C_UpdateEffectsOfPlayers) == 0x000008, "Wrong alignment on DowntimeManager_C_UpdateEffectsOfPlayers");
static_assert(sizeof(DowntimeManager_C_UpdateEffectsOfPlayers) == 0x000050, "Wrong size on DowntimeManager_C_UpdateEffectsOfPlayers");
static_assert(offsetof(DowntimeManager_C_UpdateEffectsOfPlayers, Temp_int_Array_Index_Variable) == 0x000000, "Member 'DowntimeManager_C_UpdateEffectsOfPlayers::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(DowntimeManager_C_UpdateEffectsOfPlayers, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'DowntimeManager_C_UpdateEffectsOfPlayers::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(DowntimeManager_C_UpdateEffectsOfPlayers, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'DowntimeManager_C_UpdateEffectsOfPlayers::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(DowntimeManager_C_UpdateEffectsOfPlayers, CallFunc_GetTimeOfDayEffect_EffectType) == 0x000010, "Member 'DowntimeManager_C_UpdateEffectsOfPlayers::CallFunc_GetTimeOfDayEffect_EffectType' has a wrong offset!");
static_assert(offsetof(DowntimeManager_C_UpdateEffectsOfPlayers, CallFunc_GetAllActorsOfClass_OutActors) == 0x000018, "Member 'DowntimeManager_C_UpdateEffectsOfPlayers::CallFunc_GetAllActorsOfClass_OutActors' has a wrong offset!");
static_assert(offsetof(DowntimeManager_C_UpdateEffectsOfPlayers, CallFunc_IsValidClass_ReturnValue) == 0x000028, "Member 'DowntimeManager_C_UpdateEffectsOfPlayers::CallFunc_IsValidClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(DowntimeManager_C_UpdateEffectsOfPlayers, CallFunc_Array_Get_Item) == 0x000030, "Member 'DowntimeManager_C_UpdateEffectsOfPlayers::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(DowntimeManager_C_UpdateEffectsOfPlayers, CallFunc_GetAbilitySystemComponent_ReturnValue) == 0x000038, "Member 'DowntimeManager_C_UpdateEffectsOfPlayers::CallFunc_GetAbilitySystemComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(DowntimeManager_C_UpdateEffectsOfPlayers, CallFunc_Array_Length_ReturnValue) == 0x000040, "Member 'DowntimeManager_C_UpdateEffectsOfPlayers::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(DowntimeManager_C_UpdateEffectsOfPlayers, CallFunc_BP_ApplyGameplayEffectToSelf_ReturnValue) == 0x000044, "Member 'DowntimeManager_C_UpdateEffectsOfPlayers::CallFunc_BP_ApplyGameplayEffectToSelf_ReturnValue' has a wrong offset!");
static_assert(offsetof(DowntimeManager_C_UpdateEffectsOfPlayers, CallFunc_Less_IntInt_ReturnValue) == 0x00004C, "Member 'DowntimeManager_C_UpdateEffectsOfPlayers::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function DowntimeManager.DowntimeManager_C.UpdateObjectsInTimeOfDayWidget
// 0x0040 (0x0040 - 0x0000)
struct DowntimeManager_C_UpdateObjectsInTimeOfDayWidget final
{
public:
	class UWI_TimeOfDay_C*                        WI_TimeOfDay;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	E_TimeOfDay                                   Temp_byte_Variable;                                // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Temp_real_Variable;                                // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_1;                              // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_2;                              // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_Select_Default;                             // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_Select_NewEnumerator1_ImplicitCast;         // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_Select_NewEnumerator0_ImplicitCast;         // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(DowntimeManager_C_UpdateObjectsInTimeOfDayWidget) == 0x000008, "Wrong alignment on DowntimeManager_C_UpdateObjectsInTimeOfDayWidget");
static_assert(sizeof(DowntimeManager_C_UpdateObjectsInTimeOfDayWidget) == 0x000040, "Wrong size on DowntimeManager_C_UpdateObjectsInTimeOfDayWidget");
static_assert(offsetof(DowntimeManager_C_UpdateObjectsInTimeOfDayWidget, WI_TimeOfDay) == 0x000000, "Member 'DowntimeManager_C_UpdateObjectsInTimeOfDayWidget::WI_TimeOfDay' has a wrong offset!");
static_assert(offsetof(DowntimeManager_C_UpdateObjectsInTimeOfDayWidget, Temp_byte_Variable) == 0x000008, "Member 'DowntimeManager_C_UpdateObjectsInTimeOfDayWidget::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(DowntimeManager_C_UpdateObjectsInTimeOfDayWidget, Temp_real_Variable) == 0x000010, "Member 'DowntimeManager_C_UpdateObjectsInTimeOfDayWidget::Temp_real_Variable' has a wrong offset!");
static_assert(offsetof(DowntimeManager_C_UpdateObjectsInTimeOfDayWidget, Temp_real_Variable_1) == 0x000018, "Member 'DowntimeManager_C_UpdateObjectsInTimeOfDayWidget::Temp_real_Variable_1' has a wrong offset!");
static_assert(offsetof(DowntimeManager_C_UpdateObjectsInTimeOfDayWidget, Temp_real_Variable_2) == 0x000020, "Member 'DowntimeManager_C_UpdateObjectsInTimeOfDayWidget::Temp_real_Variable_2' has a wrong offset!");
static_assert(offsetof(DowntimeManager_C_UpdateObjectsInTimeOfDayWidget, K2Node_Select_Default) == 0x000028, "Member 'DowntimeManager_C_UpdateObjectsInTimeOfDayWidget::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(DowntimeManager_C_UpdateObjectsInTimeOfDayWidget, K2Node_Select_NewEnumerator1_ImplicitCast) == 0x000030, "Member 'DowntimeManager_C_UpdateObjectsInTimeOfDayWidget::K2Node_Select_NewEnumerator1_ImplicitCast' has a wrong offset!");
static_assert(offsetof(DowntimeManager_C_UpdateObjectsInTimeOfDayWidget, K2Node_Select_NewEnumerator0_ImplicitCast) == 0x000038, "Member 'DowntimeManager_C_UpdateObjectsInTimeOfDayWidget::K2Node_Select_NewEnumerator0_ImplicitCast' has a wrong offset!");

}

