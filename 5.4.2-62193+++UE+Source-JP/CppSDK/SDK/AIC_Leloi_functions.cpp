#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: AIC_Leloi

#include "Basic.hpp"

#include "AIC_Leloi_classes.hpp"
#include "AIC_Leloi_parameters.hpp"


namespace SDK
{

// Function AIC_Leloi.AIC_Leloi_C.BndEvt__AIC_Leloi_AIPerception_K2Node_ComponentBoundEvent_0_PerceptionUpdatedDelegate__DelegateSignature
// (HasOutParams, BlueprintEvent)
// Parameters:
// TArray<class AActor*>                   UpdatedActors                                          (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void AAIC_Leloi_C::BndEvt__AIC_Leloi_AIPerception_K2Node_ComponentBoundEvent_0_PerceptionUpdatedDelegate__DelegateSignature(const TArray<class AActor*>& UpdatedActors)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AIC_Leloi_C", "BndEvt__AIC_Leloi_AIPerception_K2Node_ComponentBoundEvent_0_PerceptionUpdatedDelegate__DelegateSignature");

	Params::AIC_Leloi_C_BndEvt__AIC_Leloi_AIPerception_K2Node_ComponentBoundEvent_0_PerceptionUpdatedDelegate__DelegateSignature Parms{};

	Parms.UpdatedActors = std::move(UpdatedActors);

	UObject::ProcessEvent(Func, &Parms);
}


// Function AIC_Leloi.AIC_Leloi_C.BndEvt__AIC_Leloi_AIPerception_K2Node_ComponentBoundEvent_1_ActorPerceptionForgetUpdatedDelegate__DelegateSignature
// (BlueprintEvent)
// Parameters:
// class AActor*                           Actor                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void AAIC_Leloi_C::BndEvt__AIC_Leloi_AIPerception_K2Node_ComponentBoundEvent_1_ActorPerceptionForgetUpdatedDelegate__DelegateSignature(class AActor* Actor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AIC_Leloi_C", "BndEvt__AIC_Leloi_AIPerception_K2Node_ComponentBoundEvent_1_ActorPerceptionForgetUpdatedDelegate__DelegateSignature");

	Params::AIC_Leloi_C_BndEvt__AIC_Leloi_AIPerception_K2Node_ComponentBoundEvent_1_ActorPerceptionForgetUpdatedDelegate__DelegateSignature Parms{};

	Parms.Actor = Actor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function AIC_Leloi.AIC_Leloi_C.CacheEnemyCharacters
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void AAIC_Leloi_C::CacheEnemyCharacters()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AIC_Leloi_C", "CacheEnemyCharacters");

	UObject::ProcessEvent(Func, nullptr);
}


// Function AIC_Leloi.AIC_Leloi_C.CanSenseActor
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Actor                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// E_LeloiSenses                           Sense                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Sensed                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FAIStimulus                      Stimulus                                               (Parm, OutParm, NoDestructor)
// class AActor*                           SensedActor                                            (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void AAIC_Leloi_C::CanSenseActor(class AActor* Actor, E_LeloiSenses Sense, bool* Sensed, struct FAIStimulus* Stimulus, class AActor** SensedActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AIC_Leloi_C", "CanSenseActor");

	Params::AIC_Leloi_C_CanSenseActor Parms{};

	Parms.Actor = Actor;
	Parms.Sense = Sense;

	UObject::ProcessEvent(Func, &Parms);

	if (Sensed != nullptr)
		*Sensed = Parms.Sensed;

	if (Stimulus != nullptr)
		*Stimulus = std::move(Parms.Stimulus);

	if (SensedActor != nullptr)
		*SensedActor = Parms.SensedActor;
}


// Function AIC_Leloi.AIC_Leloi_C.Check For Trespassers
// (BlueprintCallable, BlueprintEvent)

void AAIC_Leloi_C::Check_For_Trespassers()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AIC_Leloi_C", "Check For Trespassers");

	UObject::ProcessEvent(Func, nullptr);
}


// Function AIC_Leloi.AIC_Leloi_C.ExecuteUbergraph_AIC_Leloi
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AAIC_Leloi_C::ExecuteUbergraph_AIC_Leloi(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AIC_Leloi_C", "ExecuteUbergraph_AIC_Leloi");

	Params::AIC_Leloi_C_ExecuteUbergraph_AIC_Leloi Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function AIC_Leloi.AIC_Leloi_C.GetClosestMarkedForDeathEnemy
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// TMap<class ACharacter*, double>         DistanceToMarkedEnemies                                (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// class ACharacter*                       Output                                                 (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void AAIC_Leloi_C::GetClosestMarkedForDeathEnemy(const TMap<class ACharacter*, double>& DistanceToMarkedEnemies, class ACharacter** Output)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AIC_Leloi_C", "GetClosestMarkedForDeathEnemy");

	Params::AIC_Leloi_C_GetClosestMarkedForDeathEnemy Parms{};

	Parms.DistanceToMarkedEnemies = std::move(DistanceToMarkedEnemies);

	UObject::ProcessEvent(Func, &Parms);

	if (Output != nullptr)
		*Output = Parms.Output;
}


// Function AIC_Leloi.AIC_Leloi_C.GetClosestTrespassingCharacter
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ACharacter*                       Return                                                 (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void AAIC_Leloi_C::GetClosestTrespassingCharacter(class ACharacter** Return)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AIC_Leloi_C", "GetClosestTrespassingCharacter");

	Params::AIC_Leloi_C_GetClosestTrespassingCharacter Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Return != nullptr)
		*Return = Parms.Return;
}


// Function AIC_Leloi.AIC_Leloi_C.IsDistracted
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool AAIC_Leloi_C::IsDistracted()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AIC_Leloi_C", "IsDistracted");

	Params::AIC_Leloi_C_IsDistracted Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function AIC_Leloi.AIC_Leloi_C.IsHunting
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool AAIC_Leloi_C::IsHunting()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AIC_Leloi_C", "IsHunting");

	Params::AIC_Leloi_C_IsHunting Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function AIC_Leloi.AIC_Leloi_C.IsSensedActorOnProperty
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           SensedActor                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool AAIC_Leloi_C::IsSensedActorOnProperty(class AActor* SensedActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AIC_Leloi_C", "IsSensedActorOnProperty");

	Params::AIC_Leloi_C_IsSensedActorOnProperty Parms{};

	Parms.SensedActor = SensedActor;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function AIC_Leloi.AIC_Leloi_C.IsSleeping
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool AAIC_Leloi_C::IsSleeping()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AIC_Leloi_C", "IsSleeping");

	Params::AIC_Leloi_C_IsSleeping Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function AIC_Leloi.AIC_Leloi_C.On_TimeOfDayChange_Event
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// E_TimeOfDay                             TimeOfDay                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AAIC_Leloi_C::On_TimeOfDayChange_Event(E_TimeOfDay TimeOfDay)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AIC_Leloi_C", "On_TimeOfDayChange_Event");

	Params::AIC_Leloi_C_On_TimeOfDayChange_Event Parms{};

	Parms.TimeOfDay = TimeOfDay;

	UObject::ProcessEvent(Func, &Parms);
}


// Function AIC_Leloi.AIC_Leloi_C.ReceivePossess
// (Event, Protected, BlueprintEvent)
// Parameters:
// class APawn*                            PossessedPawn                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void AAIC_Leloi_C::ReceivePossess(class APawn* PossessedPawn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AIC_Leloi_C", "ReceivePossess");

	Params::AIC_Leloi_C_ReceivePossess Parms{};

	Parms.PossessedPawn = PossessedPawn;

	UObject::ProcessEvent(Func, &Parms);
}


// Function AIC_Leloi.AIC_Leloi_C.Set State as Distracted
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          ActorOfInterest                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void AAIC_Leloi_C::Set_State_as_Distracted(class UObject* ActorOfInterest)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AIC_Leloi_C", "Set State as Distracted");

	Params::AIC_Leloi_C_Set_State_as_Distracted Parms{};

	Parms.ActorOfInterest = ActorOfInterest;

	UObject::ProcessEvent(Func, &Parms);
}


// Function AIC_Leloi.AIC_Leloi_C.SetAndRefreshBehaviourBasedOnTimeOfDay
// (BlueprintCallable, BlueprintEvent)

void AAIC_Leloi_C::SetAndRefreshBehaviourBasedOnTimeOfDay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AIC_Leloi_C", "SetAndRefreshBehaviourBasedOnTimeOfDay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function AIC_Leloi.AIC_Leloi_C.SetStateAsHunting
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          HuntedTarget                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void AAIC_Leloi_C::SetStateAsHunting(class UObject* HuntedTarget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AIC_Leloi_C", "SetStateAsHunting");

	Params::AIC_Leloi_C_SetStateAsHunting Parms{};

	Parms.HuntedTarget = HuntedTarget;

	UObject::ProcessEvent(Func, &Parms);
}


// Function AIC_Leloi.AIC_Leloi_C.SetStateAsPatrolling
// (Public, BlueprintCallable, BlueprintEvent)

void AAIC_Leloi_C::SetStateAsPatrolling()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AIC_Leloi_C", "SetStateAsPatrolling");

	UObject::ProcessEvent(Func, nullptr);
}


// Function AIC_Leloi.AIC_Leloi_C.SetStateAsSleeping
// (Public, BlueprintCallable, BlueprintEvent)

void AAIC_Leloi_C::SetStateAsSleeping()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AIC_Leloi_C", "SetStateAsSleeping");

	UObject::ProcessEvent(Func, nullptr);
}


// Function AIC_Leloi.AIC_Leloi_C.TeleportLeloiToDogHouseIfNotOnProperty
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void AAIC_Leloi_C::TeleportLeloiToDogHouseIfNotOnProperty()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AIC_Leloi_C", "TeleportLeloiToDogHouseIfNotOnProperty");

	UObject::ProcessEvent(Func, nullptr);
}


// Function AIC_Leloi.AIC_Leloi_C.UpdateEnemiesMarkedForDeath
// (Public, BlueprintCallable, BlueprintEvent)

void AAIC_Leloi_C::UpdateEnemiesMarkedForDeath()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AIC_Leloi_C", "UpdateEnemiesMarkedForDeath");

	UObject::ProcessEvent(Func, nullptr);
}

}

