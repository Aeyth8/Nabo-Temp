#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: MessengerManager

#include "Basic.hpp"

#include "JP_structs.hpp"
#include "S_EventMessageParams_structs.hpp"


namespace SDK::Params
{

// Function MessengerManager.MessengerManager_C.GetAllPlayerControllersOnOpposingTeams
// 0x00F0 (0x00F0 - 0x0000)
struct MessengerManager_C_GetAllPlayerControllersOnOpposingTeams final
{
public:
	const class UObject*                          WorldContextObject;                                // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Team;                                              // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<class APlayerControllerJP_MatchBP_C*>  OutputPin;                                         // 0x0018(0x0010)(Parm, OutParm)
	TArray<class APlayerControllerJP_MatchBP_C*>  PlayerControllersOnTeam;                           // 0x0028(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	TArray<class APlayerControllerJP_MatchBP_C*>  CallFunc_GetAllActorsOfClass_OutActors;            // 0x0038(0x0010)(ReferenceParm)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerControllerJP_MatchBP_C*          CallFunc_Array_Get_Item;                           // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class ITeamableInterface>    K2Node_DynamicCast_AsTeamable_Interface;           // 0x0058(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_69[0x3];                                       // 0x0069(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTeam                                  CallFunc_GetTeam_ReturnValue;                      // 0x0070(0x0038)(NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A9[0x3];                                       // 0x00A9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTeam                                  Temp_struct_Variable;                              // 0x00B0(0x0038)(NoDestructor)
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x00EC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MessengerManager_C_GetAllPlayerControllersOnOpposingTeams) == 0x000008, "Wrong alignment on MessengerManager_C_GetAllPlayerControllersOnOpposingTeams");
static_assert(sizeof(MessengerManager_C_GetAllPlayerControllersOnOpposingTeams) == 0x0000F0, "Wrong size on MessengerManager_C_GetAllPlayerControllersOnOpposingTeams");
static_assert(offsetof(MessengerManager_C_GetAllPlayerControllersOnOpposingTeams, WorldContextObject) == 0x000000, "Member 'MessengerManager_C_GetAllPlayerControllersOnOpposingTeams::WorldContextObject' has a wrong offset!");
static_assert(offsetof(MessengerManager_C_GetAllPlayerControllersOnOpposingTeams, Team) == 0x000008, "Member 'MessengerManager_C_GetAllPlayerControllersOnOpposingTeams::Team' has a wrong offset!");
static_assert(offsetof(MessengerManager_C_GetAllPlayerControllersOnOpposingTeams, __WorldContext) == 0x000010, "Member 'MessengerManager_C_GetAllPlayerControllersOnOpposingTeams::__WorldContext' has a wrong offset!");
static_assert(offsetof(MessengerManager_C_GetAllPlayerControllersOnOpposingTeams, OutputPin) == 0x000018, "Member 'MessengerManager_C_GetAllPlayerControllersOnOpposingTeams::OutputPin' has a wrong offset!");
static_assert(offsetof(MessengerManager_C_GetAllPlayerControllersOnOpposingTeams, PlayerControllersOnTeam) == 0x000028, "Member 'MessengerManager_C_GetAllPlayerControllersOnOpposingTeams::PlayerControllersOnTeam' has a wrong offset!");
static_assert(offsetof(MessengerManager_C_GetAllPlayerControllersOnOpposingTeams, CallFunc_GetAllActorsOfClass_OutActors) == 0x000038, "Member 'MessengerManager_C_GetAllPlayerControllersOnOpposingTeams::CallFunc_GetAllActorsOfClass_OutActors' has a wrong offset!");
static_assert(offsetof(MessengerManager_C_GetAllPlayerControllersOnOpposingTeams, Temp_int_Array_Index_Variable) == 0x000048, "Member 'MessengerManager_C_GetAllPlayerControllersOnOpposingTeams::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(MessengerManager_C_GetAllPlayerControllersOnOpposingTeams, CallFunc_Array_Length_ReturnValue) == 0x00004C, "Member 'MessengerManager_C_GetAllPlayerControllersOnOpposingTeams::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(MessengerManager_C_GetAllPlayerControllersOnOpposingTeams, CallFunc_Array_Get_Item) == 0x000050, "Member 'MessengerManager_C_GetAllPlayerControllersOnOpposingTeams::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(MessengerManager_C_GetAllPlayerControllersOnOpposingTeams, K2Node_DynamicCast_AsTeamable_Interface) == 0x000058, "Member 'MessengerManager_C_GetAllPlayerControllersOnOpposingTeams::K2Node_DynamicCast_AsTeamable_Interface' has a wrong offset!");
static_assert(offsetof(MessengerManager_C_GetAllPlayerControllersOnOpposingTeams, K2Node_DynamicCast_bSuccess) == 0x000068, "Member 'MessengerManager_C_GetAllPlayerControllersOnOpposingTeams::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(MessengerManager_C_GetAllPlayerControllersOnOpposingTeams, Temp_int_Loop_Counter_Variable) == 0x00006C, "Member 'MessengerManager_C_GetAllPlayerControllersOnOpposingTeams::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(MessengerManager_C_GetAllPlayerControllersOnOpposingTeams, CallFunc_GetTeam_ReturnValue) == 0x000070, "Member 'MessengerManager_C_GetAllPlayerControllersOnOpposingTeams::CallFunc_GetTeam_ReturnValue' has a wrong offset!");
static_assert(offsetof(MessengerManager_C_GetAllPlayerControllersOnOpposingTeams, CallFunc_Less_IntInt_ReturnValue) == 0x0000A8, "Member 'MessengerManager_C_GetAllPlayerControllersOnOpposingTeams::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MessengerManager_C_GetAllPlayerControllersOnOpposingTeams, CallFunc_Add_IntInt_ReturnValue) == 0x0000AC, "Member 'MessengerManager_C_GetAllPlayerControllersOnOpposingTeams::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MessengerManager_C_GetAllPlayerControllersOnOpposingTeams, Temp_struct_Variable) == 0x0000B0, "Member 'MessengerManager_C_GetAllPlayerControllersOnOpposingTeams::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(MessengerManager_C_GetAllPlayerControllersOnOpposingTeams, CallFunc_Array_AddUnique_ReturnValue) == 0x0000E8, "Member 'MessengerManager_C_GetAllPlayerControllersOnOpposingTeams::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");
static_assert(offsetof(MessengerManager_C_GetAllPlayerControllersOnOpposingTeams, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x0000EC, "Member 'MessengerManager_C_GetAllPlayerControllersOnOpposingTeams::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function MessengerManager.MessengerManager_C.GetAllPlayerControllersOnSameTeams
// 0x00F0 (0x00F0 - 0x0000)
struct MessengerManager_C_GetAllPlayerControllersOnSameTeams final
{
public:
	const class UObject*                          WorldContextObject;                                // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Team;                                              // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<class APlayerControllerJP_MatchBP_C*>  PlayerControllers;                                 // 0x0018(0x0010)(Parm, OutParm)
	TArray<class APlayerControllerJP_MatchBP_C*>  Playercontrollers_on_team;                         // 0x0028(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	TArray<class APlayerControllerJP_MatchBP_C*>  CallFunc_GetAllActorsOfClass_OutActors;            // 0x0038(0x0010)(ReferenceParm)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerControllerJP_MatchBP_C*          CallFunc_Array_Get_Item;                           // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class ITeamableInterface>    K2Node_DynamicCast_AsTeamable_Interface;           // 0x0058(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_69[0x3];                                       // 0x0069(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTeam                                  CallFunc_GetTeam_ReturnValue;                      // 0x0070(0x0038)(NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A9[0x3];                                       // 0x00A9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTeam                                  Temp_struct_Variable;                              // 0x00B0(0x0038)(NoDestructor)
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x00EC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MessengerManager_C_GetAllPlayerControllersOnSameTeams) == 0x000008, "Wrong alignment on MessengerManager_C_GetAllPlayerControllersOnSameTeams");
static_assert(sizeof(MessengerManager_C_GetAllPlayerControllersOnSameTeams) == 0x0000F0, "Wrong size on MessengerManager_C_GetAllPlayerControllersOnSameTeams");
static_assert(offsetof(MessengerManager_C_GetAllPlayerControllersOnSameTeams, WorldContextObject) == 0x000000, "Member 'MessengerManager_C_GetAllPlayerControllersOnSameTeams::WorldContextObject' has a wrong offset!");
static_assert(offsetof(MessengerManager_C_GetAllPlayerControllersOnSameTeams, Team) == 0x000008, "Member 'MessengerManager_C_GetAllPlayerControllersOnSameTeams::Team' has a wrong offset!");
static_assert(offsetof(MessengerManager_C_GetAllPlayerControllersOnSameTeams, __WorldContext) == 0x000010, "Member 'MessengerManager_C_GetAllPlayerControllersOnSameTeams::__WorldContext' has a wrong offset!");
static_assert(offsetof(MessengerManager_C_GetAllPlayerControllersOnSameTeams, PlayerControllers) == 0x000018, "Member 'MessengerManager_C_GetAllPlayerControllersOnSameTeams::PlayerControllers' has a wrong offset!");
static_assert(offsetof(MessengerManager_C_GetAllPlayerControllersOnSameTeams, Playercontrollers_on_team) == 0x000028, "Member 'MessengerManager_C_GetAllPlayerControllersOnSameTeams::Playercontrollers_on_team' has a wrong offset!");
static_assert(offsetof(MessengerManager_C_GetAllPlayerControllersOnSameTeams, CallFunc_GetAllActorsOfClass_OutActors) == 0x000038, "Member 'MessengerManager_C_GetAllPlayerControllersOnSameTeams::CallFunc_GetAllActorsOfClass_OutActors' has a wrong offset!");
static_assert(offsetof(MessengerManager_C_GetAllPlayerControllersOnSameTeams, Temp_int_Array_Index_Variable) == 0x000048, "Member 'MessengerManager_C_GetAllPlayerControllersOnSameTeams::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(MessengerManager_C_GetAllPlayerControllersOnSameTeams, CallFunc_Array_Length_ReturnValue) == 0x00004C, "Member 'MessengerManager_C_GetAllPlayerControllersOnSameTeams::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(MessengerManager_C_GetAllPlayerControllersOnSameTeams, CallFunc_Array_Get_Item) == 0x000050, "Member 'MessengerManager_C_GetAllPlayerControllersOnSameTeams::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(MessengerManager_C_GetAllPlayerControllersOnSameTeams, K2Node_DynamicCast_AsTeamable_Interface) == 0x000058, "Member 'MessengerManager_C_GetAllPlayerControllersOnSameTeams::K2Node_DynamicCast_AsTeamable_Interface' has a wrong offset!");
static_assert(offsetof(MessengerManager_C_GetAllPlayerControllersOnSameTeams, K2Node_DynamicCast_bSuccess) == 0x000068, "Member 'MessengerManager_C_GetAllPlayerControllersOnSameTeams::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(MessengerManager_C_GetAllPlayerControllersOnSameTeams, Temp_int_Loop_Counter_Variable) == 0x00006C, "Member 'MessengerManager_C_GetAllPlayerControllersOnSameTeams::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(MessengerManager_C_GetAllPlayerControllersOnSameTeams, CallFunc_GetTeam_ReturnValue) == 0x000070, "Member 'MessengerManager_C_GetAllPlayerControllersOnSameTeams::CallFunc_GetTeam_ReturnValue' has a wrong offset!");
static_assert(offsetof(MessengerManager_C_GetAllPlayerControllersOnSameTeams, CallFunc_Less_IntInt_ReturnValue) == 0x0000A8, "Member 'MessengerManager_C_GetAllPlayerControllersOnSameTeams::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MessengerManager_C_GetAllPlayerControllersOnSameTeams, CallFunc_Add_IntInt_ReturnValue) == 0x0000AC, "Member 'MessengerManager_C_GetAllPlayerControllersOnSameTeams::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MessengerManager_C_GetAllPlayerControllersOnSameTeams, Temp_struct_Variable) == 0x0000B0, "Member 'MessengerManager_C_GetAllPlayerControllersOnSameTeams::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(MessengerManager_C_GetAllPlayerControllersOnSameTeams, CallFunc_Array_AddUnique_ReturnValue) == 0x0000E8, "Member 'MessengerManager_C_GetAllPlayerControllersOnSameTeams::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");
static_assert(offsetof(MessengerManager_C_GetAllPlayerControllersOnSameTeams, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x0000EC, "Member 'MessengerManager_C_GetAllPlayerControllersOnSameTeams::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function MessengerManager.MessengerManager_C.SendEventMessage
// 0x01F0 (0x01F0 - 0x0000)
struct MessengerManager_C_SendEventMessage final
{
public:
	struct FS_EventMessageParams                  PlayerMessage;                                     // 0x0000(0x0028)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	class APlayerControllerJP_MatchBP_C*          LPlayerController;                                 // 0x0028(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerStateJP*                         K2Node_DynamicCast_AsPlayer_State_JP;              // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerControllerJP_MatchBP_C*          K2Node_DynamicCast_AsPlayer_Controller_JP_Match_BP; // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTeam                                  CallFunc_GetTeam_ReturnValue;                      // 0x0058(0x0038)(ConstParm, NoDestructor)
	TArray<class APlayerControllerJP*>            CallFunc_GetPlayerControllersOfTeam_ReturnValue;   // 0x0090(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A9[0x7];                                       // 0x00A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerControllerJP*                    CallFunc_Array_Get_Item;                           // 0x00B0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APlayerControllerJP_MatchBP_C*          K2Node_DynamicCast_AsPlayer_Controller_JP_Match_BP_1; // 0x00B8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C1[0x3];                                       // 0x00C1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D4[0x4];                                       // 0x00D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTeam                                  Temp_struct_Variable;                              // 0x00D8(0x0038)(NoDestructor)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_111[0x7];                                      // 0x0111(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class APlayerControllerJP_MatchBP_C*>  CallFunc_GetAllActorsOfClass_OutActors;            // 0x0118(0x0010)(ReferenceParm)
	class APlayerControllerJP*                    CallFunc_Array_Get_Item_1;                         // 0x0128(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0130(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_134[0x4];                                      // 0x0134(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class ITeamableInterface>    K2Node_DynamicCast_AsTeamable_Interface;           // 0x0138(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0148(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_149[0x7];                                      // 0x0149(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerControllerJP_MatchBP_C*          K2Node_DynamicCast_AsPlayer_Controller_JP_Match_BP_2; // 0x0150(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x0158(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_159[0x7];                                      // 0x0159(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTeam                                  CallFunc_GetTeam_ReturnValue_1;                    // 0x0160(0x0038)(NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0198(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_199[0x7];                                      // 0x0199(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Get_ClassLog_Name_name;                   // 0x01A0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Get_ClassLog_Name_name_1;                 // 0x01B0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x01C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C4[0x4];                                      // 0x01C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class APlayerControllerJP_MatchBP_C*>  CallFunc_GetAllActorsOfClass_OutActors_1;          // 0x01C8(0x0010)(ReferenceParm)
	class APlayerControllerJP_MatchBP_C*          CallFunc_Array_Get_Item_2;                         // 0x01D8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x01E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x01E4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x01E5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E6[0x2];                                      // 0x01E6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x01E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MessengerManager_C_SendEventMessage) == 0x000008, "Wrong alignment on MessengerManager_C_SendEventMessage");
static_assert(sizeof(MessengerManager_C_SendEventMessage) == 0x0001F0, "Wrong size on MessengerManager_C_SendEventMessage");
static_assert(offsetof(MessengerManager_C_SendEventMessage, PlayerMessage) == 0x000000, "Member 'MessengerManager_C_SendEventMessage::PlayerMessage' has a wrong offset!");
static_assert(offsetof(MessengerManager_C_SendEventMessage, LPlayerController) == 0x000028, "Member 'MessengerManager_C_SendEventMessage::LPlayerController' has a wrong offset!");
static_assert(offsetof(MessengerManager_C_SendEventMessage, Temp_int_Loop_Counter_Variable) == 0x000030, "Member 'MessengerManager_C_SendEventMessage::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(MessengerManager_C_SendEventMessage, CallFunc_Add_IntInt_ReturnValue) == 0x000034, "Member 'MessengerManager_C_SendEventMessage::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MessengerManager_C_SendEventMessage, K2Node_DynamicCast_AsPlayer_State_JP) == 0x000038, "Member 'MessengerManager_C_SendEventMessage::K2Node_DynamicCast_AsPlayer_State_JP' has a wrong offset!");
static_assert(offsetof(MessengerManager_C_SendEventMessage, K2Node_DynamicCast_bSuccess) == 0x000040, "Member 'MessengerManager_C_SendEventMessage::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(MessengerManager_C_SendEventMessage, K2Node_DynamicCast_AsPlayer_Controller_JP_Match_BP) == 0x000048, "Member 'MessengerManager_C_SendEventMessage::K2Node_DynamicCast_AsPlayer_Controller_JP_Match_BP' has a wrong offset!");
static_assert(offsetof(MessengerManager_C_SendEventMessage, K2Node_DynamicCast_bSuccess_1) == 0x000050, "Member 'MessengerManager_C_SendEventMessage::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(MessengerManager_C_SendEventMessage, CallFunc_GetTeam_ReturnValue) == 0x000058, "Member 'MessengerManager_C_SendEventMessage::CallFunc_GetTeam_ReturnValue' has a wrong offset!");
static_assert(offsetof(MessengerManager_C_SendEventMessage, CallFunc_GetPlayerControllersOfTeam_ReturnValue) == 0x000090, "Member 'MessengerManager_C_SendEventMessage::CallFunc_GetPlayerControllersOfTeam_ReturnValue' has a wrong offset!");
static_assert(offsetof(MessengerManager_C_SendEventMessage, CallFunc_Array_Length_ReturnValue) == 0x0000A0, "Member 'MessengerManager_C_SendEventMessage::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(MessengerManager_C_SendEventMessage, Temp_int_Array_Index_Variable) == 0x0000A4, "Member 'MessengerManager_C_SendEventMessage::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(MessengerManager_C_SendEventMessage, CallFunc_Less_IntInt_ReturnValue) == 0x0000A8, "Member 'MessengerManager_C_SendEventMessage::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MessengerManager_C_SendEventMessage, CallFunc_Array_Get_Item) == 0x0000B0, "Member 'MessengerManager_C_SendEventMessage::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(MessengerManager_C_SendEventMessage, K2Node_DynamicCast_AsPlayer_Controller_JP_Match_BP_1) == 0x0000B8, "Member 'MessengerManager_C_SendEventMessage::K2Node_DynamicCast_AsPlayer_Controller_JP_Match_BP_1' has a wrong offset!");
static_assert(offsetof(MessengerManager_C_SendEventMessage, K2Node_DynamicCast_bSuccess_2) == 0x0000C0, "Member 'MessengerManager_C_SendEventMessage::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(MessengerManager_C_SendEventMessage, Temp_int_Array_Index_Variable_1) == 0x0000C4, "Member 'MessengerManager_C_SendEventMessage::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(MessengerManager_C_SendEventMessage, Temp_int_Loop_Counter_Variable_1) == 0x0000C8, "Member 'MessengerManager_C_SendEventMessage::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(MessengerManager_C_SendEventMessage, CallFunc_Add_IntInt_ReturnValue_1) == 0x0000CC, "Member 'MessengerManager_C_SendEventMessage::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MessengerManager_C_SendEventMessage, Temp_int_Array_Index_Variable_2) == 0x0000D0, "Member 'MessengerManager_C_SendEventMessage::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(MessengerManager_C_SendEventMessage, Temp_struct_Variable) == 0x0000D8, "Member 'MessengerManager_C_SendEventMessage::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(MessengerManager_C_SendEventMessage, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000110, "Member 'MessengerManager_C_SendEventMessage::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(MessengerManager_C_SendEventMessage, CallFunc_GetAllActorsOfClass_OutActors) == 0x000118, "Member 'MessengerManager_C_SendEventMessage::CallFunc_GetAllActorsOfClass_OutActors' has a wrong offset!");
static_assert(offsetof(MessengerManager_C_SendEventMessage, CallFunc_Array_Get_Item_1) == 0x000128, "Member 'MessengerManager_C_SendEventMessage::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(MessengerManager_C_SendEventMessage, CallFunc_Array_Length_ReturnValue_1) == 0x000130, "Member 'MessengerManager_C_SendEventMessage::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MessengerManager_C_SendEventMessage, K2Node_DynamicCast_AsTeamable_Interface) == 0x000138, "Member 'MessengerManager_C_SendEventMessage::K2Node_DynamicCast_AsTeamable_Interface' has a wrong offset!");
static_assert(offsetof(MessengerManager_C_SendEventMessage, K2Node_DynamicCast_bSuccess_3) == 0x000148, "Member 'MessengerManager_C_SendEventMessage::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(MessengerManager_C_SendEventMessage, K2Node_DynamicCast_AsPlayer_Controller_JP_Match_BP_2) == 0x000150, "Member 'MessengerManager_C_SendEventMessage::K2Node_DynamicCast_AsPlayer_Controller_JP_Match_BP_2' has a wrong offset!");
static_assert(offsetof(MessengerManager_C_SendEventMessage, K2Node_DynamicCast_bSuccess_4) == 0x000158, "Member 'MessengerManager_C_SendEventMessage::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(MessengerManager_C_SendEventMessage, CallFunc_GetTeam_ReturnValue_1) == 0x000160, "Member 'MessengerManager_C_SendEventMessage::CallFunc_GetTeam_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MessengerManager_C_SendEventMessage, K2Node_SwitchEnum_CmpSuccess) == 0x000198, "Member 'MessengerManager_C_SendEventMessage::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(MessengerManager_C_SendEventMessage, CallFunc_Get_ClassLog_Name_name) == 0x0001A0, "Member 'MessengerManager_C_SendEventMessage::CallFunc_Get_ClassLog_Name_name' has a wrong offset!");
static_assert(offsetof(MessengerManager_C_SendEventMessage, CallFunc_Get_ClassLog_Name_name_1) == 0x0001B0, "Member 'MessengerManager_C_SendEventMessage::CallFunc_Get_ClassLog_Name_name_1' has a wrong offset!");
static_assert(offsetof(MessengerManager_C_SendEventMessage, Temp_int_Loop_Counter_Variable_2) == 0x0001C0, "Member 'MessengerManager_C_SendEventMessage::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(MessengerManager_C_SendEventMessage, CallFunc_GetAllActorsOfClass_OutActors_1) == 0x0001C8, "Member 'MessengerManager_C_SendEventMessage::CallFunc_GetAllActorsOfClass_OutActors_1' has a wrong offset!");
static_assert(offsetof(MessengerManager_C_SendEventMessage, CallFunc_Array_Get_Item_2) == 0x0001D8, "Member 'MessengerManager_C_SendEventMessage::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(MessengerManager_C_SendEventMessage, CallFunc_Array_Length_ReturnValue_2) == 0x0001E0, "Member 'MessengerManager_C_SendEventMessage::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MessengerManager_C_SendEventMessage, CallFunc_Less_IntInt_ReturnValue_1) == 0x0001E4, "Member 'MessengerManager_C_SendEventMessage::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MessengerManager_C_SendEventMessage, CallFunc_Less_IntInt_ReturnValue_2) == 0x0001E5, "Member 'MessengerManager_C_SendEventMessage::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MessengerManager_C_SendEventMessage, CallFunc_Add_IntInt_ReturnValue_2) == 0x0001E8, "Member 'MessengerManager_C_SendEventMessage::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");

// Function MessengerManager.MessengerManager_C.SendMessage
// 0x0198 (0x0198 - 0x0000)
struct MessengerManager_C_SendMessage final
{
public:
	struct FPlayerMessage                         PlayerMessage;                                     // 0x0000(0x0058)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class APlayerControllerJP_MatchBP_C*          L_PlayerController;                                // 0x0058(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_Conv_IntToByte_ReturnValue;               // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_65[0x3];                                       // 0x0065(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerControllerJP_MatchBP_C*          K2Node_DynamicCast_AsPlayer_Controller_JP_Match_BP; // 0x0068(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_71[0x7];                                       // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerStateJP*                         K2Node_DynamicCast_AsPlayer_State_JP;              // 0x0078(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_81[0x7];                                       // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTeam                                  CallFunc_GetTeam_ReturnValue;                      // 0x0088(0x0038)(ConstParm, NoDestructor)
	uint8                                         CallFunc_Conv_IntToByte_ReturnValue_1;             // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C1[0x7];                                       // 0x00C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class APlayerControllerJP*>            CallFunc_GetPlayerControllersOfTeam_ReturnValue;   // 0x00C8(0x0010)(ReferenceParm)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D9[0x3];                                       // 0x00D9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class APlayerControllerJP*>            CallFunc_GetPlayerControllersOfTeam_ReturnValue_1; // 0x00E0(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x00F4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F5[0x3];                                       // 0x00F5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x00FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0104(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0105(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_106[0x2];                                      // 0x0106(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x010C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0114(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerControllerJP*                    CallFunc_Array_Get_Item;                           // 0x0118(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APlayerControllerJP*                    CallFunc_Array_Get_Item_1;                         // 0x0120(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APlayerControllerJP_MatchBP_C*          K2Node_DynamicCast_AsPlayer_Controller_JP_Match_BP_1; // 0x0128(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_131[0x7];                                      // 0x0131(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerControllerJP_MatchBP_C*          K2Node_DynamicCast_AsPlayer_Controller_JP_Match_BP_2; // 0x0138(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0140(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_141[0x3];                                      // 0x0141(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x0144(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x0148(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x014C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Get_ClassLog_Name_name;                   // 0x0150(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Get_ClassLog_Name_name_1;                 // 0x0160(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0170(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_171[0x7];                                      // 0x0171(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class APlayerControllerJP_MatchBP_C*>  CallFunc_GetAllActorsOfClass_OutActors;            // 0x0178(0x0010)(ReferenceParm)
	class APlayerControllerJP_MatchBP_C*          CallFunc_Array_Get_Item_2;                         // 0x0188(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x0190(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x0194(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MessengerManager_C_SendMessage) == 0x000008, "Wrong alignment on MessengerManager_C_SendMessage");
static_assert(sizeof(MessengerManager_C_SendMessage) == 0x000198, "Wrong size on MessengerManager_C_SendMessage");
static_assert(offsetof(MessengerManager_C_SendMessage, PlayerMessage) == 0x000000, "Member 'MessengerManager_C_SendMessage::PlayerMessage' has a wrong offset!");
static_assert(offsetof(MessengerManager_C_SendMessage, L_PlayerController) == 0x000058, "Member 'MessengerManager_C_SendMessage::L_PlayerController' has a wrong offset!");
static_assert(offsetof(MessengerManager_C_SendMessage, Temp_int_Variable) == 0x000060, "Member 'MessengerManager_C_SendMessage::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(MessengerManager_C_SendMessage, CallFunc_Conv_IntToByte_ReturnValue) == 0x000064, "Member 'MessengerManager_C_SendMessage::CallFunc_Conv_IntToByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(MessengerManager_C_SendMessage, K2Node_DynamicCast_AsPlayer_Controller_JP_Match_BP) == 0x000068, "Member 'MessengerManager_C_SendMessage::K2Node_DynamicCast_AsPlayer_Controller_JP_Match_BP' has a wrong offset!");
static_assert(offsetof(MessengerManager_C_SendMessage, K2Node_DynamicCast_bSuccess) == 0x000070, "Member 'MessengerManager_C_SendMessage::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(MessengerManager_C_SendMessage, K2Node_DynamicCast_AsPlayer_State_JP) == 0x000078, "Member 'MessengerManager_C_SendMessage::K2Node_DynamicCast_AsPlayer_State_JP' has a wrong offset!");
static_assert(offsetof(MessengerManager_C_SendMessage, K2Node_DynamicCast_bSuccess_1) == 0x000080, "Member 'MessengerManager_C_SendMessage::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(MessengerManager_C_SendMessage, CallFunc_GetTeam_ReturnValue) == 0x000088, "Member 'MessengerManager_C_SendMessage::CallFunc_GetTeam_ReturnValue' has a wrong offset!");
static_assert(offsetof(MessengerManager_C_SendMessage, CallFunc_Conv_IntToByte_ReturnValue_1) == 0x0000C0, "Member 'MessengerManager_C_SendMessage::CallFunc_Conv_IntToByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MessengerManager_C_SendMessage, CallFunc_GetPlayerControllersOfTeam_ReturnValue) == 0x0000C8, "Member 'MessengerManager_C_SendMessage::CallFunc_GetPlayerControllersOfTeam_ReturnValue' has a wrong offset!");
static_assert(offsetof(MessengerManager_C_SendMessage, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x0000D8, "Member 'MessengerManager_C_SendMessage::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(MessengerManager_C_SendMessage, CallFunc_Array_Length_ReturnValue) == 0x0000DC, "Member 'MessengerManager_C_SendMessage::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(MessengerManager_C_SendMessage, CallFunc_GetPlayerControllersOfTeam_ReturnValue_1) == 0x0000E0, "Member 'MessengerManager_C_SendMessage::CallFunc_GetPlayerControllersOfTeam_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MessengerManager_C_SendMessage, CallFunc_Array_Length_ReturnValue_1) == 0x0000F0, "Member 'MessengerManager_C_SendMessage::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MessengerManager_C_SendMessage, CallFunc_LessEqual_IntInt_ReturnValue) == 0x0000F4, "Member 'MessengerManager_C_SendMessage::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MessengerManager_C_SendMessage, CallFunc_Add_IntInt_ReturnValue) == 0x0000F8, "Member 'MessengerManager_C_SendMessage::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MessengerManager_C_SendMessage, Temp_int_Loop_Counter_Variable) == 0x0000FC, "Member 'MessengerManager_C_SendMessage::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(MessengerManager_C_SendMessage, Temp_int_Loop_Counter_Variable_1) == 0x000100, "Member 'MessengerManager_C_SendMessage::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(MessengerManager_C_SendMessage, CallFunc_Less_IntInt_ReturnValue) == 0x000104, "Member 'MessengerManager_C_SendMessage::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MessengerManager_C_SendMessage, CallFunc_Less_IntInt_ReturnValue_1) == 0x000105, "Member 'MessengerManager_C_SendMessage::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MessengerManager_C_SendMessage, CallFunc_Add_IntInt_ReturnValue_1) == 0x000108, "Member 'MessengerManager_C_SendMessage::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MessengerManager_C_SendMessage, CallFunc_Add_IntInt_ReturnValue_2) == 0x00010C, "Member 'MessengerManager_C_SendMessage::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MessengerManager_C_SendMessage, Temp_int_Array_Index_Variable) == 0x000110, "Member 'MessengerManager_C_SendMessage::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(MessengerManager_C_SendMessage, Temp_int_Array_Index_Variable_1) == 0x000114, "Member 'MessengerManager_C_SendMessage::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(MessengerManager_C_SendMessage, CallFunc_Array_Get_Item) == 0x000118, "Member 'MessengerManager_C_SendMessage::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(MessengerManager_C_SendMessage, CallFunc_Array_Get_Item_1) == 0x000120, "Member 'MessengerManager_C_SendMessage::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(MessengerManager_C_SendMessage, K2Node_DynamicCast_AsPlayer_Controller_JP_Match_BP_1) == 0x000128, "Member 'MessengerManager_C_SendMessage::K2Node_DynamicCast_AsPlayer_Controller_JP_Match_BP_1' has a wrong offset!");
static_assert(offsetof(MessengerManager_C_SendMessage, K2Node_DynamicCast_bSuccess_2) == 0x000130, "Member 'MessengerManager_C_SendMessage::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(MessengerManager_C_SendMessage, K2Node_DynamicCast_AsPlayer_Controller_JP_Match_BP_2) == 0x000138, "Member 'MessengerManager_C_SendMessage::K2Node_DynamicCast_AsPlayer_Controller_JP_Match_BP_2' has a wrong offset!");
static_assert(offsetof(MessengerManager_C_SendMessage, K2Node_DynamicCast_bSuccess_3) == 0x000140, "Member 'MessengerManager_C_SendMessage::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(MessengerManager_C_SendMessage, Temp_int_Loop_Counter_Variable_2) == 0x000144, "Member 'MessengerManager_C_SendMessage::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(MessengerManager_C_SendMessage, CallFunc_Add_IntInt_ReturnValue_3) == 0x000148, "Member 'MessengerManager_C_SendMessage::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(MessengerManager_C_SendMessage, Temp_int_Array_Index_Variable_2) == 0x00014C, "Member 'MessengerManager_C_SendMessage::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(MessengerManager_C_SendMessage, CallFunc_Get_ClassLog_Name_name) == 0x000150, "Member 'MessengerManager_C_SendMessage::CallFunc_Get_ClassLog_Name_name' has a wrong offset!");
static_assert(offsetof(MessengerManager_C_SendMessage, CallFunc_Get_ClassLog_Name_name_1) == 0x000160, "Member 'MessengerManager_C_SendMessage::CallFunc_Get_ClassLog_Name_name_1' has a wrong offset!");
static_assert(offsetof(MessengerManager_C_SendMessage, K2Node_SwitchEnum_CmpSuccess) == 0x000170, "Member 'MessengerManager_C_SendMessage::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(MessengerManager_C_SendMessage, CallFunc_GetAllActorsOfClass_OutActors) == 0x000178, "Member 'MessengerManager_C_SendMessage::CallFunc_GetAllActorsOfClass_OutActors' has a wrong offset!");
static_assert(offsetof(MessengerManager_C_SendMessage, CallFunc_Array_Get_Item_2) == 0x000188, "Member 'MessengerManager_C_SendMessage::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(MessengerManager_C_SendMessage, CallFunc_Array_Length_ReturnValue_2) == 0x000190, "Member 'MessengerManager_C_SendMessage::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MessengerManager_C_SendMessage, CallFunc_Less_IntInt_ReturnValue_2) == 0x000194, "Member 'MessengerManager_C_SendMessage::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");

}

