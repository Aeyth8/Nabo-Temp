#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WI_PerkButton

#include "Basic.hpp"

#include "UMG_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "SlateCore_structs.hpp"
#include "JP_structs.hpp"


namespace SDK::Params
{

// Function WI_PerkButton.WI_PerkButton_C.ExecuteUbergraph_WI_PerkButton
// 0x00D0 (0x00D0 - 0x0000)
struct WI_PerkButton_C_ExecuteUbergraph_WI_PerkButton final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPerkCategories                               Temp_byte_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                K2Node_CustomEvent_Loaded;                         // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                Temp_object_Variable;                              // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPerkDefinition*                        K2Node_DynamicCast_AsPerk_Definition;              // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPerkCategories                               CallFunc_GetCategory_ReturnValue;                  // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_22[0x6];                                       // 0x0022(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UTexture2D>              CallFunc_GetIcon_ReturnValue;                      // 0x0028(0x0028)(UObjectWrapper, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51[0x3];                                       // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_real_Variable;                                // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_real_Variable_1;                              // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5D[0x3];                                       // 0x005D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           K2Node_CustomEvent_PerkID;                         // 0x0060(0x0008)(NoDestructor, HasGetValueTypeHash)
	TSoftObjectPtr<class UPerkDefinition>         CallFunc_TryGetPerkDefinition_OutSoftPerkDefinition; // 0x0068(0x0028)(UObjectWrapper, HasGetValueTypeHash)
	bool                                          CallFunc_TryGetPerkDefinition_ReturnValue;         // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_91[0x3];                                       // 0x0091(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           K2Node_Select_Default;                             // 0x0094(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A4[0x4];                                       // 0x00A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationForward_ReturnValue;         // 0x00A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationReverse_ReturnValue;         // 0x00B0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default_1;                           // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UObject* Loaded)>        K2Node_CreateDelegate_OutputDelegate;              // 0x00BC(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WI_PerkButton_C_ExecuteUbergraph_WI_PerkButton) == 0x000008, "Wrong alignment on WI_PerkButton_C_ExecuteUbergraph_WI_PerkButton");
static_assert(sizeof(WI_PerkButton_C_ExecuteUbergraph_WI_PerkButton) == 0x0000D0, "Wrong size on WI_PerkButton_C_ExecuteUbergraph_WI_PerkButton");
static_assert(offsetof(WI_PerkButton_C_ExecuteUbergraph_WI_PerkButton, EntryPoint) == 0x000000, "Member 'WI_PerkButton_C_ExecuteUbergraph_WI_PerkButton::EntryPoint' has a wrong offset!");
static_assert(offsetof(WI_PerkButton_C_ExecuteUbergraph_WI_PerkButton, Temp_byte_Variable) == 0x000004, "Member 'WI_PerkButton_C_ExecuteUbergraph_WI_PerkButton::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WI_PerkButton_C_ExecuteUbergraph_WI_PerkButton, K2Node_CustomEvent_Loaded) == 0x000008, "Member 'WI_PerkButton_C_ExecuteUbergraph_WI_PerkButton::K2Node_CustomEvent_Loaded' has a wrong offset!");
static_assert(offsetof(WI_PerkButton_C_ExecuteUbergraph_WI_PerkButton, Temp_object_Variable) == 0x000010, "Member 'WI_PerkButton_C_ExecuteUbergraph_WI_PerkButton::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(WI_PerkButton_C_ExecuteUbergraph_WI_PerkButton, K2Node_DynamicCast_AsPerk_Definition) == 0x000018, "Member 'WI_PerkButton_C_ExecuteUbergraph_WI_PerkButton::K2Node_DynamicCast_AsPerk_Definition' has a wrong offset!");
static_assert(offsetof(WI_PerkButton_C_ExecuteUbergraph_WI_PerkButton, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'WI_PerkButton_C_ExecuteUbergraph_WI_PerkButton::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WI_PerkButton_C_ExecuteUbergraph_WI_PerkButton, CallFunc_GetCategory_ReturnValue) == 0x000021, "Member 'WI_PerkButton_C_ExecuteUbergraph_WI_PerkButton::CallFunc_GetCategory_ReturnValue' has a wrong offset!");
static_assert(offsetof(WI_PerkButton_C_ExecuteUbergraph_WI_PerkButton, CallFunc_GetIcon_ReturnValue) == 0x000028, "Member 'WI_PerkButton_C_ExecuteUbergraph_WI_PerkButton::CallFunc_GetIcon_ReturnValue' has a wrong offset!");
static_assert(offsetof(WI_PerkButton_C_ExecuteUbergraph_WI_PerkButton, Temp_bool_Variable) == 0x000050, "Member 'WI_PerkButton_C_ExecuteUbergraph_WI_PerkButton::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WI_PerkButton_C_ExecuteUbergraph_WI_PerkButton, Temp_real_Variable) == 0x000054, "Member 'WI_PerkButton_C_ExecuteUbergraph_WI_PerkButton::Temp_real_Variable' has a wrong offset!");
static_assert(offsetof(WI_PerkButton_C_ExecuteUbergraph_WI_PerkButton, Temp_real_Variable_1) == 0x000058, "Member 'WI_PerkButton_C_ExecuteUbergraph_WI_PerkButton::Temp_real_Variable_1' has a wrong offset!");
static_assert(offsetof(WI_PerkButton_C_ExecuteUbergraph_WI_PerkButton, K2Node_Event_IsDesignTime) == 0x00005C, "Member 'WI_PerkButton_C_ExecuteUbergraph_WI_PerkButton::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(WI_PerkButton_C_ExecuteUbergraph_WI_PerkButton, K2Node_CustomEvent_PerkID) == 0x000060, "Member 'WI_PerkButton_C_ExecuteUbergraph_WI_PerkButton::K2Node_CustomEvent_PerkID' has a wrong offset!");
static_assert(offsetof(WI_PerkButton_C_ExecuteUbergraph_WI_PerkButton, CallFunc_TryGetPerkDefinition_OutSoftPerkDefinition) == 0x000068, "Member 'WI_PerkButton_C_ExecuteUbergraph_WI_PerkButton::CallFunc_TryGetPerkDefinition_OutSoftPerkDefinition' has a wrong offset!");
static_assert(offsetof(WI_PerkButton_C_ExecuteUbergraph_WI_PerkButton, CallFunc_TryGetPerkDefinition_ReturnValue) == 0x000090, "Member 'WI_PerkButton_C_ExecuteUbergraph_WI_PerkButton::CallFunc_TryGetPerkDefinition_ReturnValue' has a wrong offset!");
static_assert(offsetof(WI_PerkButton_C_ExecuteUbergraph_WI_PerkButton, K2Node_Select_Default) == 0x000094, "Member 'WI_PerkButton_C_ExecuteUbergraph_WI_PerkButton::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WI_PerkButton_C_ExecuteUbergraph_WI_PerkButton, CallFunc_PlayAnimationForward_ReturnValue) == 0x0000A8, "Member 'WI_PerkButton_C_ExecuteUbergraph_WI_PerkButton::CallFunc_PlayAnimationForward_ReturnValue' has a wrong offset!");
static_assert(offsetof(WI_PerkButton_C_ExecuteUbergraph_WI_PerkButton, CallFunc_PlayAnimationReverse_ReturnValue) == 0x0000B0, "Member 'WI_PerkButton_C_ExecuteUbergraph_WI_PerkButton::CallFunc_PlayAnimationReverse_ReturnValue' has a wrong offset!");
static_assert(offsetof(WI_PerkButton_C_ExecuteUbergraph_WI_PerkButton, K2Node_Select_Default_1) == 0x0000B8, "Member 'WI_PerkButton_C_ExecuteUbergraph_WI_PerkButton::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(WI_PerkButton_C_ExecuteUbergraph_WI_PerkButton, K2Node_CreateDelegate_OutputDelegate) == 0x0000BC, "Member 'WI_PerkButton_C_ExecuteUbergraph_WI_PerkButton::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");

// Function WI_PerkButton.WI_PerkButton_C.GetIsActive
// 0x0001 (0x0001 - 0x0000)
struct WI_PerkButton_C_GetIsActive final
{
public:
	bool                                          IsActive_0;                                        // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WI_PerkButton_C_GetIsActive) == 0x000001, "Wrong alignment on WI_PerkButton_C_GetIsActive");
static_assert(sizeof(WI_PerkButton_C_GetIsActive) == 0x000001, "Wrong size on WI_PerkButton_C_GetIsActive");
static_assert(offsetof(WI_PerkButton_C_GetIsActive, IsActive_0) == 0x000000, "Member 'WI_PerkButton_C_GetIsActive::IsActive_0' has a wrong offset!");

// Function WI_PerkButton.WI_PerkButton_C.GetIsEquipped
// 0x0001 (0x0001 - 0x0000)
struct WI_PerkButton_C_GetIsEquipped final
{
public:
	bool                                          IsEquipped_0;                                      // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WI_PerkButton_C_GetIsEquipped) == 0x000001, "Wrong alignment on WI_PerkButton_C_GetIsEquipped");
static_assert(sizeof(WI_PerkButton_C_GetIsEquipped) == 0x000001, "Wrong size on WI_PerkButton_C_GetIsEquipped");
static_assert(offsetof(WI_PerkButton_C_GetIsEquipped, IsEquipped_0) == 0x000000, "Member 'WI_PerkButton_C_GetIsEquipped::IsEquipped_0' has a wrong offset!");

// Function WI_PerkButton.WI_PerkButton_C.LockPerkButton
// 0x0014 (0x0014 - 0x0000)
struct WI_PerkButton_C_LockPerkButton final
{
public:
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x0000(0x0014)()
};
static_assert(alignof(WI_PerkButton_C_LockPerkButton) == 0x000004, "Wrong alignment on WI_PerkButton_C_LockPerkButton");
static_assert(sizeof(WI_PerkButton_C_LockPerkButton) == 0x000014, "Wrong size on WI_PerkButton_C_LockPerkButton");
static_assert(offsetof(WI_PerkButton_C_LockPerkButton, K2Node_MakeStruct_SlateColor) == 0x000000, "Member 'WI_PerkButton_C_LockPerkButton::K2Node_MakeStruct_SlateColor' has a wrong offset!");

// Function WI_PerkButton.WI_PerkButton_C.OnLoaded_6E0DF22B4C0294CC70389FBF5B7ADD0F
// 0x0008 (0x0008 - 0x0000)
struct WI_PerkButton_C_OnLoaded_6E0DF22B4C0294CC70389FBF5B7ADD0F final
{
public:
	class UObject*                                Loaded;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WI_PerkButton_C_OnLoaded_6E0DF22B4C0294CC70389FBF5B7ADD0F) == 0x000008, "Wrong alignment on WI_PerkButton_C_OnLoaded_6E0DF22B4C0294CC70389FBF5B7ADD0F");
static_assert(sizeof(WI_PerkButton_C_OnLoaded_6E0DF22B4C0294CC70389FBF5B7ADD0F) == 0x000008, "Wrong size on WI_PerkButton_C_OnLoaded_6E0DF22B4C0294CC70389FBF5B7ADD0F");
static_assert(offsetof(WI_PerkButton_C_OnLoaded_6E0DF22B4C0294CC70389FBF5B7ADD0F, Loaded) == 0x000000, "Member 'WI_PerkButton_C_OnLoaded_6E0DF22B4C0294CC70389FBF5B7ADD0F::Loaded' has a wrong offset!");

// Function WI_PerkButton.WI_PerkButton_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct WI_PerkButton_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WI_PerkButton_C_PreConstruct) == 0x000001, "Wrong alignment on WI_PerkButton_C_PreConstruct");
static_assert(sizeof(WI_PerkButton_C_PreConstruct) == 0x000001, "Wrong size on WI_PerkButton_C_PreConstruct");
static_assert(offsetof(WI_PerkButton_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'WI_PerkButton_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function WI_PerkButton.WI_PerkButton_C.SetBackdrop
// 0x0010 (0x0010 - 0x0000)
struct WI_PerkButton_C_SetBackdrop final
{
public:
	struct FLinearColor                           InColorAndOpacity;                                 // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WI_PerkButton_C_SetBackdrop) == 0x000004, "Wrong alignment on WI_PerkButton_C_SetBackdrop");
static_assert(sizeof(WI_PerkButton_C_SetBackdrop) == 0x000010, "Wrong size on WI_PerkButton_C_SetBackdrop");
static_assert(offsetof(WI_PerkButton_C_SetBackdrop, InColorAndOpacity) == 0x000000, "Member 'WI_PerkButton_C_SetBackdrop::InColorAndOpacity' has a wrong offset!");

// Function WI_PerkButton.WI_PerkButton_C.SetButtonDiameter
// 0x0010 (0x0010 - 0x0000)
struct WI_PerkButton_C_SetButtonDiameter final
{
public:
	double                                        Diameter;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetWidthOverride_InWidthOverride_ImplicitCast; // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetHeightOverride_InHeightOverride_ImplicitCast; // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WI_PerkButton_C_SetButtonDiameter) == 0x000008, "Wrong alignment on WI_PerkButton_C_SetButtonDiameter");
static_assert(sizeof(WI_PerkButton_C_SetButtonDiameter) == 0x000010, "Wrong size on WI_PerkButton_C_SetButtonDiameter");
static_assert(offsetof(WI_PerkButton_C_SetButtonDiameter, Diameter) == 0x000000, "Member 'WI_PerkButton_C_SetButtonDiameter::Diameter' has a wrong offset!");
static_assert(offsetof(WI_PerkButton_C_SetButtonDiameter, CallFunc_SetWidthOverride_InWidthOverride_ImplicitCast) == 0x000008, "Member 'WI_PerkButton_C_SetButtonDiameter::CallFunc_SetWidthOverride_InWidthOverride_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WI_PerkButton_C_SetButtonDiameter, CallFunc_SetHeightOverride_InHeightOverride_ImplicitCast) == 0x00000C, "Member 'WI_PerkButton_C_SetButtonDiameter::CallFunc_SetHeightOverride_InHeightOverride_ImplicitCast' has a wrong offset!");

// Function WI_PerkButton.WI_PerkButton_C.SetIcon
// 0x0038 (0x0038 - 0x0000)
struct WI_PerkButton_C_SetIcon final
{
public:
	TSoftObjectPtr<class UTexture2D>              SoftTexture;                                       // 0x0000(0x0028)(BlueprintVisible, BlueprintReadOnly, Parm, UObjectWrapper, HasGetValueTypeHash)
	struct FMargin                                NewLocalVar;                                       // 0x0028(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WI_PerkButton_C_SetIcon) == 0x000008, "Wrong alignment on WI_PerkButton_C_SetIcon");
static_assert(sizeof(WI_PerkButton_C_SetIcon) == 0x000038, "Wrong size on WI_PerkButton_C_SetIcon");
static_assert(offsetof(WI_PerkButton_C_SetIcon, SoftTexture) == 0x000000, "Member 'WI_PerkButton_C_SetIcon::SoftTexture' has a wrong offset!");
static_assert(offsetof(WI_PerkButton_C_SetIcon, NewLocalVar) == 0x000028, "Member 'WI_PerkButton_C_SetIcon::NewLocalVar' has a wrong offset!");

// Function WI_PerkButton.WI_PerkButton_C.SetIconDiameter
// 0x0020 (0x0020 - 0x0000)
struct WI_PerkButton_C_SetIconDiameter final
{
public:
	double                                        IconDiameter_0;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A[0x6];                                        // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_Select_Default;                             // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetWidthOverride_InWidthOverride_ImplicitCast; // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetHeightOverride_InHeightOverride_ImplicitCast; // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WI_PerkButton_C_SetIconDiameter) == 0x000008, "Wrong alignment on WI_PerkButton_C_SetIconDiameter");
static_assert(sizeof(WI_PerkButton_C_SetIconDiameter) == 0x000020, "Wrong size on WI_PerkButton_C_SetIconDiameter");
static_assert(offsetof(WI_PerkButton_C_SetIconDiameter, IconDiameter_0) == 0x000000, "Member 'WI_PerkButton_C_SetIconDiameter::IconDiameter_0' has a wrong offset!");
static_assert(offsetof(WI_PerkButton_C_SetIconDiameter, Temp_bool_Variable) == 0x000008, "Member 'WI_PerkButton_C_SetIconDiameter::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WI_PerkButton_C_SetIconDiameter, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000009, "Member 'WI_PerkButton_C_SetIconDiameter::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WI_PerkButton_C_SetIconDiameter, K2Node_Select_Default) == 0x000010, "Member 'WI_PerkButton_C_SetIconDiameter::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WI_PerkButton_C_SetIconDiameter, CallFunc_SetWidthOverride_InWidthOverride_ImplicitCast) == 0x000018, "Member 'WI_PerkButton_C_SetIconDiameter::CallFunc_SetWidthOverride_InWidthOverride_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WI_PerkButton_C_SetIconDiameter, CallFunc_SetHeightOverride_InHeightOverride_ImplicitCast) == 0x00001C, "Member 'WI_PerkButton_C_SetIconDiameter::CallFunc_SetHeightOverride_InHeightOverride_ImplicitCast' has a wrong offset!");

// Function WI_PerkButton.WI_PerkButton_C.SetIsActive
// 0x0005 (0x0005 - 0x0000)
struct WI_PerkButton_C_SetIsActive final
{
public:
	bool                                          IsActive_0;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WI_PerkButton_C_SetIsActive) == 0x000001, "Wrong alignment on WI_PerkButton_C_SetIsActive");
static_assert(sizeof(WI_PerkButton_C_SetIsActive) == 0x000005, "Wrong size on WI_PerkButton_C_SetIsActive");
static_assert(offsetof(WI_PerkButton_C_SetIsActive, IsActive_0) == 0x000000, "Member 'WI_PerkButton_C_SetIsActive::IsActive_0' has a wrong offset!");
static_assert(offsetof(WI_PerkButton_C_SetIsActive, Temp_bool_Variable) == 0x000001, "Member 'WI_PerkButton_C_SetIsActive::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WI_PerkButton_C_SetIsActive, Temp_byte_Variable) == 0x000002, "Member 'WI_PerkButton_C_SetIsActive::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WI_PerkButton_C_SetIsActive, Temp_byte_Variable_1) == 0x000003, "Member 'WI_PerkButton_C_SetIsActive::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WI_PerkButton_C_SetIsActive, K2Node_Select_Default) == 0x000004, "Member 'WI_PerkButton_C_SetIsActive::K2Node_Select_Default' has a wrong offset!");

// Function WI_PerkButton.WI_PerkButton_C.SetIsEquipped
// 0x0005 (0x0005 - 0x0000)
struct WI_PerkButton_C_SetIsEquipped final
{
public:
	bool                                          IsEquipped_0;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WI_PerkButton_C_SetIsEquipped) == 0x000001, "Wrong alignment on WI_PerkButton_C_SetIsEquipped");
static_assert(sizeof(WI_PerkButton_C_SetIsEquipped) == 0x000005, "Wrong size on WI_PerkButton_C_SetIsEquipped");
static_assert(offsetof(WI_PerkButton_C_SetIsEquipped, IsEquipped_0) == 0x000000, "Member 'WI_PerkButton_C_SetIsEquipped::IsEquipped_0' has a wrong offset!");
static_assert(offsetof(WI_PerkButton_C_SetIsEquipped, Temp_bool_Variable) == 0x000001, "Member 'WI_PerkButton_C_SetIsEquipped::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WI_PerkButton_C_SetIsEquipped, Temp_byte_Variable) == 0x000002, "Member 'WI_PerkButton_C_SetIsEquipped::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WI_PerkButton_C_SetIsEquipped, Temp_byte_Variable_1) == 0x000003, "Member 'WI_PerkButton_C_SetIsEquipped::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WI_PerkButton_C_SetIsEquipped, K2Node_Select_Default) == 0x000004, "Member 'WI_PerkButton_C_SetIsEquipped::K2Node_Select_Default' has a wrong offset!");

// Function WI_PerkButton.WI_PerkButton_C.SetPerk
// 0x0008 (0x0008 - 0x0000)
struct WI_PerkButton_C_SetPerk final
{
public:
	struct FGameplayTag                           PerkID;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WI_PerkButton_C_SetPerk) == 0x000004, "Wrong alignment on WI_PerkButton_C_SetPerk");
static_assert(sizeof(WI_PerkButton_C_SetPerk) == 0x000008, "Wrong size on WI_PerkButton_C_SetPerk");
static_assert(offsetof(WI_PerkButton_C_SetPerk, PerkID) == 0x000000, "Member 'WI_PerkButton_C_SetPerk::PerkID' has a wrong offset!");

// Function WI_PerkButton.WI_PerkButton_C.UnlockPerkButton
// 0x0014 (0x0014 - 0x0000)
struct WI_PerkButton_C_UnlockPerkButton final
{
public:
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x0000(0x0014)()
};
static_assert(alignof(WI_PerkButton_C_UnlockPerkButton) == 0x000004, "Wrong alignment on WI_PerkButton_C_UnlockPerkButton");
static_assert(sizeof(WI_PerkButton_C_UnlockPerkButton) == 0x000014, "Wrong size on WI_PerkButton_C_UnlockPerkButton");
static_assert(offsetof(WI_PerkButton_C_UnlockPerkButton, K2Node_MakeStruct_SlateColor) == 0x000000, "Member 'WI_PerkButton_C_UnlockPerkButton::K2Node_MakeStruct_SlateColor' has a wrong offset!");

}

