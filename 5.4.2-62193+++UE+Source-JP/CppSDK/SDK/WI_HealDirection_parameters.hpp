#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WI_HealDirection

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function WI_HealDirection.WI_HealDirection_C.DrawLocationOnAvatarPlane
// 0x0018 (0x0018 - 0x0000)
struct WI_HealDirection_C_DrawLocationOnAvatarPlane final
{
public:
	struct FVector                                CallFunc_GetLocationOnProjectedAvatarPlane_ReturnValue; // 0x0000(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WI_HealDirection_C_DrawLocationOnAvatarPlane) == 0x000008, "Wrong alignment on WI_HealDirection_C_DrawLocationOnAvatarPlane");
static_assert(sizeof(WI_HealDirection_C_DrawLocationOnAvatarPlane) == 0x000018, "Wrong size on WI_HealDirection_C_DrawLocationOnAvatarPlane");
static_assert(offsetof(WI_HealDirection_C_DrawLocationOnAvatarPlane, CallFunc_GetLocationOnProjectedAvatarPlane_ReturnValue) == 0x000000, "Member 'WI_HealDirection_C_DrawLocationOnAvatarPlane::CallFunc_GetLocationOnProjectedAvatarPlane_ReturnValue' has a wrong offset!");

// Function WI_HealDirection.WI_HealDirection_C.ExecuteUbergraph_WI_HealDirection
// 0x0080 (0x0080 - 0x0000)
struct WI_HealDirection_C_ExecuteUbergraph_WI_HealDirection final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0004(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x0014(0x0038)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_InDeltaTime;                          // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationForward_ReturnValue;         // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetNormalizedScreenSpacePosition_Return_Value; // 0x0058(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetNormalizedScreenSpacePosition_Angle;   // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCanvasPanelSlot*                       CallFunc_SlotAsCanvasSlot_ReturnValue;             // 0x0070(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetRenderTransformAngle_Angle_ImplicitCast; // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WI_HealDirection_C_ExecuteUbergraph_WI_HealDirection) == 0x000008, "Wrong alignment on WI_HealDirection_C_ExecuteUbergraph_WI_HealDirection");
static_assert(sizeof(WI_HealDirection_C_ExecuteUbergraph_WI_HealDirection) == 0x000080, "Wrong size on WI_HealDirection_C_ExecuteUbergraph_WI_HealDirection");
static_assert(offsetof(WI_HealDirection_C_ExecuteUbergraph_WI_HealDirection, EntryPoint) == 0x000000, "Member 'WI_HealDirection_C_ExecuteUbergraph_WI_HealDirection::EntryPoint' has a wrong offset!");
static_assert(offsetof(WI_HealDirection_C_ExecuteUbergraph_WI_HealDirection, K2Node_CreateDelegate_OutputDelegate) == 0x000004, "Member 'WI_HealDirection_C_ExecuteUbergraph_WI_HealDirection::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WI_HealDirection_C_ExecuteUbergraph_WI_HealDirection, K2Node_Event_MyGeometry) == 0x000014, "Member 'WI_HealDirection_C_ExecuteUbergraph_WI_HealDirection::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(WI_HealDirection_C_ExecuteUbergraph_WI_HealDirection, K2Node_Event_InDeltaTime) == 0x00004C, "Member 'WI_HealDirection_C_ExecuteUbergraph_WI_HealDirection::K2Node_Event_InDeltaTime' has a wrong offset!");
static_assert(offsetof(WI_HealDirection_C_ExecuteUbergraph_WI_HealDirection, CallFunc_PlayAnimationForward_ReturnValue) == 0x000050, "Member 'WI_HealDirection_C_ExecuteUbergraph_WI_HealDirection::CallFunc_PlayAnimationForward_ReturnValue' has a wrong offset!");
static_assert(offsetof(WI_HealDirection_C_ExecuteUbergraph_WI_HealDirection, CallFunc_GetNormalizedScreenSpacePosition_Return_Value) == 0x000058, "Member 'WI_HealDirection_C_ExecuteUbergraph_WI_HealDirection::CallFunc_GetNormalizedScreenSpacePosition_Return_Value' has a wrong offset!");
static_assert(offsetof(WI_HealDirection_C_ExecuteUbergraph_WI_HealDirection, CallFunc_GetNormalizedScreenSpacePosition_Angle) == 0x000068, "Member 'WI_HealDirection_C_ExecuteUbergraph_WI_HealDirection::CallFunc_GetNormalizedScreenSpacePosition_Angle' has a wrong offset!");
static_assert(offsetof(WI_HealDirection_C_ExecuteUbergraph_WI_HealDirection, CallFunc_SlotAsCanvasSlot_ReturnValue) == 0x000070, "Member 'WI_HealDirection_C_ExecuteUbergraph_WI_HealDirection::CallFunc_SlotAsCanvasSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(WI_HealDirection_C_ExecuteUbergraph_WI_HealDirection, CallFunc_SetRenderTransformAngle_Angle_ImplicitCast) == 0x000078, "Member 'WI_HealDirection_C_ExecuteUbergraph_WI_HealDirection::CallFunc_SetRenderTransformAngle_Angle_ImplicitCast' has a wrong offset!");

// Function WI_HealDirection.WI_HealDirection_C.GetLocationOnProjectedAvatarPlane
// 0x0080 (0x0080 - 0x0000)
struct WI_HealDirection_C_GetLocationOnProjectedAvatarPlane final
{
public:
	struct FVector                                ReturnValue;                                       // 0x0000(0x0018)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetOwnerLocation_ReturnValue;             // 0x0018(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FPlane                                 CallFunc_GetPlaneData_OutPlane;                    // 0x0030(0x0020)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0050(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_ProjectPointOnToPlane_ReturnValue;        // 0x0068(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WI_HealDirection_C_GetLocationOnProjectedAvatarPlane) == 0x000010, "Wrong alignment on WI_HealDirection_C_GetLocationOnProjectedAvatarPlane");
static_assert(sizeof(WI_HealDirection_C_GetLocationOnProjectedAvatarPlane) == 0x000080, "Wrong size on WI_HealDirection_C_GetLocationOnProjectedAvatarPlane");
static_assert(offsetof(WI_HealDirection_C_GetLocationOnProjectedAvatarPlane, ReturnValue) == 0x000000, "Member 'WI_HealDirection_C_GetLocationOnProjectedAvatarPlane::ReturnValue' has a wrong offset!");
static_assert(offsetof(WI_HealDirection_C_GetLocationOnProjectedAvatarPlane, CallFunc_GetOwnerLocation_ReturnValue) == 0x000018, "Member 'WI_HealDirection_C_GetLocationOnProjectedAvatarPlane::CallFunc_GetOwnerLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(WI_HealDirection_C_GetLocationOnProjectedAvatarPlane, CallFunc_GetPlaneData_OutPlane) == 0x000030, "Member 'WI_HealDirection_C_GetLocationOnProjectedAvatarPlane::CallFunc_GetPlaneData_OutPlane' has a wrong offset!");
static_assert(offsetof(WI_HealDirection_C_GetLocationOnProjectedAvatarPlane, CallFunc_MakeVector_ReturnValue) == 0x000050, "Member 'WI_HealDirection_C_GetLocationOnProjectedAvatarPlane::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(WI_HealDirection_C_GetLocationOnProjectedAvatarPlane, CallFunc_ProjectPointOnToPlane_ReturnValue) == 0x000068, "Member 'WI_HealDirection_C_GetLocationOnProjectedAvatarPlane::CallFunc_ProjectPointOnToPlane_ReturnValue' has a wrong offset!");

// Function WI_HealDirection.WI_HealDirection_C.GetNormalizedScreenSpacePosition
// 0x0240 (0x0240 - 0x0000)
struct WI_HealDirection_C_GetNormalizedScreenSpacePosition final
{
public:
	struct FVector2D                              Return_Value;                                      // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Angle;                                             // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                ScreenSpaceVector;                                 // 0x0018(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable;                                // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetOwnerLocation_ReturnValue;             // 0x0038(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetLocationOnProjectedAvatarPlane_ReturnValue; // 0x0050(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetViewportScale_ReturnValue;             // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6C[0x4];                                       // 0x006C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0070(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MultiplyMultiply_FloatFloat_ReturnValue;  // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x0090(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x00A8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetViewportSize_ReturnValue;              // 0x00B8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C8[0x8];                                       // 0x00C8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetOwnerTransform_ReturnValue;            // 0x00D0(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Multiply_Vector2DVector2D_ReturnValue;    // 0x0130(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_InverseTransformDirection_ReturnValue;    // 0x0140(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X;                          // 0x0158(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y;                          // 0x0160(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x0168(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0170(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0178(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FMin_ReturnValue;                         // 0x0180(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0188(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue_1;               // 0x01A0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Divide_Vector2DVector2D_ReturnValue;      // 0x01B0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X_1;                        // 0x01C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y_1;                        // 0x01C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x01D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_1;                 // 0x01D8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue;        // 0x01F0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X_1;                          // 0x0208(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_1;                          // 0x0210(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_1;                          // 0x0218(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_DegAtan2_ReturnValue;                     // 0x0220(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue_2;               // 0x0228(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MultiplyMultiply_FloatFloat_Base_ImplicitCast; // 0x0238(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WI_HealDirection_C_GetNormalizedScreenSpacePosition) == 0x000010, "Wrong alignment on WI_HealDirection_C_GetNormalizedScreenSpacePosition");
static_assert(sizeof(WI_HealDirection_C_GetNormalizedScreenSpacePosition) == 0x000240, "Wrong size on WI_HealDirection_C_GetNormalizedScreenSpacePosition");
static_assert(offsetof(WI_HealDirection_C_GetNormalizedScreenSpacePosition, Return_Value) == 0x000000, "Member 'WI_HealDirection_C_GetNormalizedScreenSpacePosition::Return_Value' has a wrong offset!");
static_assert(offsetof(WI_HealDirection_C_GetNormalizedScreenSpacePosition, Angle) == 0x000010, "Member 'WI_HealDirection_C_GetNormalizedScreenSpacePosition::Angle' has a wrong offset!");
static_assert(offsetof(WI_HealDirection_C_GetNormalizedScreenSpacePosition, ScreenSpaceVector) == 0x000018, "Member 'WI_HealDirection_C_GetNormalizedScreenSpacePosition::ScreenSpaceVector' has a wrong offset!");
static_assert(offsetof(WI_HealDirection_C_GetNormalizedScreenSpacePosition, Temp_real_Variable) == 0x000030, "Member 'WI_HealDirection_C_GetNormalizedScreenSpacePosition::Temp_real_Variable' has a wrong offset!");
static_assert(offsetof(WI_HealDirection_C_GetNormalizedScreenSpacePosition, CallFunc_GetOwnerLocation_ReturnValue) == 0x000038, "Member 'WI_HealDirection_C_GetNormalizedScreenSpacePosition::CallFunc_GetOwnerLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(WI_HealDirection_C_GetNormalizedScreenSpacePosition, CallFunc_GetLocationOnProjectedAvatarPlane_ReturnValue) == 0x000050, "Member 'WI_HealDirection_C_GetNormalizedScreenSpacePosition::CallFunc_GetLocationOnProjectedAvatarPlane_ReturnValue' has a wrong offset!");
static_assert(offsetof(WI_HealDirection_C_GetNormalizedScreenSpacePosition, CallFunc_GetViewportScale_ReturnValue) == 0x000068, "Member 'WI_HealDirection_C_GetNormalizedScreenSpacePosition::CallFunc_GetViewportScale_ReturnValue' has a wrong offset!");
static_assert(offsetof(WI_HealDirection_C_GetNormalizedScreenSpacePosition, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000070, "Member 'WI_HealDirection_C_GetNormalizedScreenSpacePosition::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(WI_HealDirection_C_GetNormalizedScreenSpacePosition, CallFunc_MultiplyMultiply_FloatFloat_ReturnValue) == 0x000088, "Member 'WI_HealDirection_C_GetNormalizedScreenSpacePosition::CallFunc_MultiplyMultiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WI_HealDirection_C_GetNormalizedScreenSpacePosition, CallFunc_Normal_ReturnValue) == 0x000090, "Member 'WI_HealDirection_C_GetNormalizedScreenSpacePosition::CallFunc_Normal_ReturnValue' has a wrong offset!");
static_assert(offsetof(WI_HealDirection_C_GetNormalizedScreenSpacePosition, CallFunc_MakeVector2D_ReturnValue) == 0x0000A8, "Member 'WI_HealDirection_C_GetNormalizedScreenSpacePosition::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(WI_HealDirection_C_GetNormalizedScreenSpacePosition, CallFunc_GetViewportSize_ReturnValue) == 0x0000B8, "Member 'WI_HealDirection_C_GetNormalizedScreenSpacePosition::CallFunc_GetViewportSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(WI_HealDirection_C_GetNormalizedScreenSpacePosition, CallFunc_GetOwnerTransform_ReturnValue) == 0x0000D0, "Member 'WI_HealDirection_C_GetNormalizedScreenSpacePosition::CallFunc_GetOwnerTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(WI_HealDirection_C_GetNormalizedScreenSpacePosition, CallFunc_Multiply_Vector2DVector2D_ReturnValue) == 0x000130, "Member 'WI_HealDirection_C_GetNormalizedScreenSpacePosition::CallFunc_Multiply_Vector2DVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(WI_HealDirection_C_GetNormalizedScreenSpacePosition, CallFunc_InverseTransformDirection_ReturnValue) == 0x000140, "Member 'WI_HealDirection_C_GetNormalizedScreenSpacePosition::CallFunc_InverseTransformDirection_ReturnValue' has a wrong offset!");
static_assert(offsetof(WI_HealDirection_C_GetNormalizedScreenSpacePosition, CallFunc_BreakVector2D_X) == 0x000158, "Member 'WI_HealDirection_C_GetNormalizedScreenSpacePosition::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(WI_HealDirection_C_GetNormalizedScreenSpacePosition, CallFunc_BreakVector2D_Y) == 0x000160, "Member 'WI_HealDirection_C_GetNormalizedScreenSpacePosition::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(WI_HealDirection_C_GetNormalizedScreenSpacePosition, CallFunc_BreakVector_X) == 0x000168, "Member 'WI_HealDirection_C_GetNormalizedScreenSpacePosition::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(WI_HealDirection_C_GetNormalizedScreenSpacePosition, CallFunc_BreakVector_Y) == 0x000170, "Member 'WI_HealDirection_C_GetNormalizedScreenSpacePosition::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(WI_HealDirection_C_GetNormalizedScreenSpacePosition, CallFunc_BreakVector_Z) == 0x000178, "Member 'WI_HealDirection_C_GetNormalizedScreenSpacePosition::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(WI_HealDirection_C_GetNormalizedScreenSpacePosition, CallFunc_FMin_ReturnValue) == 0x000180, "Member 'WI_HealDirection_C_GetNormalizedScreenSpacePosition::CallFunc_FMin_ReturnValue' has a wrong offset!");
static_assert(offsetof(WI_HealDirection_C_GetNormalizedScreenSpacePosition, CallFunc_MakeVector_ReturnValue) == 0x000188, "Member 'WI_HealDirection_C_GetNormalizedScreenSpacePosition::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(WI_HealDirection_C_GetNormalizedScreenSpacePosition, CallFunc_MakeVector2D_ReturnValue_1) == 0x0001A0, "Member 'WI_HealDirection_C_GetNormalizedScreenSpacePosition::CallFunc_MakeVector2D_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WI_HealDirection_C_GetNormalizedScreenSpacePosition, CallFunc_Divide_Vector2DVector2D_ReturnValue) == 0x0001B0, "Member 'WI_HealDirection_C_GetNormalizedScreenSpacePosition::CallFunc_Divide_Vector2DVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(WI_HealDirection_C_GetNormalizedScreenSpacePosition, CallFunc_BreakVector2D_X_1) == 0x0001C0, "Member 'WI_HealDirection_C_GetNormalizedScreenSpacePosition::CallFunc_BreakVector2D_X_1' has a wrong offset!");
static_assert(offsetof(WI_HealDirection_C_GetNormalizedScreenSpacePosition, CallFunc_BreakVector2D_Y_1) == 0x0001C8, "Member 'WI_HealDirection_C_GetNormalizedScreenSpacePosition::CallFunc_BreakVector2D_Y_1' has a wrong offset!");
static_assert(offsetof(WI_HealDirection_C_GetNormalizedScreenSpacePosition, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x0001D0, "Member 'WI_HealDirection_C_GetNormalizedScreenSpacePosition::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WI_HealDirection_C_GetNormalizedScreenSpacePosition, CallFunc_MakeVector_ReturnValue_1) == 0x0001D8, "Member 'WI_HealDirection_C_GetNormalizedScreenSpacePosition::CallFunc_MakeVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WI_HealDirection_C_GetNormalizedScreenSpacePosition, CallFunc_Multiply_VectorVector_ReturnValue) == 0x0001F0, "Member 'WI_HealDirection_C_GetNormalizedScreenSpacePosition::CallFunc_Multiply_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(WI_HealDirection_C_GetNormalizedScreenSpacePosition, CallFunc_BreakVector_X_1) == 0x000208, "Member 'WI_HealDirection_C_GetNormalizedScreenSpacePosition::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(WI_HealDirection_C_GetNormalizedScreenSpacePosition, CallFunc_BreakVector_Y_1) == 0x000210, "Member 'WI_HealDirection_C_GetNormalizedScreenSpacePosition::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(WI_HealDirection_C_GetNormalizedScreenSpacePosition, CallFunc_BreakVector_Z_1) == 0x000218, "Member 'WI_HealDirection_C_GetNormalizedScreenSpacePosition::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(WI_HealDirection_C_GetNormalizedScreenSpacePosition, CallFunc_DegAtan2_ReturnValue) == 0x000220, "Member 'WI_HealDirection_C_GetNormalizedScreenSpacePosition::CallFunc_DegAtan2_ReturnValue' has a wrong offset!");
static_assert(offsetof(WI_HealDirection_C_GetNormalizedScreenSpacePosition, CallFunc_MakeVector2D_ReturnValue_2) == 0x000228, "Member 'WI_HealDirection_C_GetNormalizedScreenSpacePosition::CallFunc_MakeVector2D_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WI_HealDirection_C_GetNormalizedScreenSpacePosition, CallFunc_MultiplyMultiply_FloatFloat_Base_ImplicitCast) == 0x000238, "Member 'WI_HealDirection_C_GetNormalizedScreenSpacePosition::CallFunc_MultiplyMultiply_FloatFloat_Base_ImplicitCast' has a wrong offset!");

// Function WI_HealDirection.WI_HealDirection_C.GetOwnerLocation
// 0x0040 (0x0040 - 0x0000)
struct WI_HealDirection_C_GetOwnerLocation final
{
public:
	struct FVector                                ReturnValue;                                       // 0x0000(0x0018)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue;                   // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0028(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WI_HealDirection_C_GetOwnerLocation) == 0x000008, "Wrong alignment on WI_HealDirection_C_GetOwnerLocation");
static_assert(sizeof(WI_HealDirection_C_GetOwnerLocation) == 0x000040, "Wrong size on WI_HealDirection_C_GetOwnerLocation");
static_assert(offsetof(WI_HealDirection_C_GetOwnerLocation, ReturnValue) == 0x000000, "Member 'WI_HealDirection_C_GetOwnerLocation::ReturnValue' has a wrong offset!");
static_assert(offsetof(WI_HealDirection_C_GetOwnerLocation, CallFunc_GetPlayerController_ReturnValue) == 0x000018, "Member 'WI_HealDirection_C_GetOwnerLocation::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(WI_HealDirection_C_GetOwnerLocation, CallFunc_K2_GetPawn_ReturnValue) == 0x000020, "Member 'WI_HealDirection_C_GetOwnerLocation::CallFunc_K2_GetPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(WI_HealDirection_C_GetOwnerLocation, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000028, "Member 'WI_HealDirection_C_GetOwnerLocation::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");

// Function WI_HealDirection.WI_HealDirection_C.GetOwnerTransform
// 0x00D0 (0x00D0 - 0x0000)
struct WI_HealDirection_C_GetOwnerTransform final
{
public:
	struct FTransform                             ReturnValue;                                       // 0x0000(0x0060)(ConstParm, Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0060(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue;                   // 0x0068(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x0070(0x0060)(ConstParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WI_HealDirection_C_GetOwnerTransform) == 0x000010, "Wrong alignment on WI_HealDirection_C_GetOwnerTransform");
static_assert(sizeof(WI_HealDirection_C_GetOwnerTransform) == 0x0000D0, "Wrong size on WI_HealDirection_C_GetOwnerTransform");
static_assert(offsetof(WI_HealDirection_C_GetOwnerTransform, ReturnValue) == 0x000000, "Member 'WI_HealDirection_C_GetOwnerTransform::ReturnValue' has a wrong offset!");
static_assert(offsetof(WI_HealDirection_C_GetOwnerTransform, CallFunc_GetPlayerController_ReturnValue) == 0x000060, "Member 'WI_HealDirection_C_GetOwnerTransform::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(WI_HealDirection_C_GetOwnerTransform, CallFunc_K2_GetPawn_ReturnValue) == 0x000068, "Member 'WI_HealDirection_C_GetOwnerTransform::CallFunc_K2_GetPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(WI_HealDirection_C_GetOwnerTransform, CallFunc_GetTransform_ReturnValue) == 0x000070, "Member 'WI_HealDirection_C_GetOwnerTransform::CallFunc_GetTransform_ReturnValue' has a wrong offset!");

// Function WI_HealDirection.WI_HealDirection_C.GetPlaneData
// 0x0060 (0x0060 - 0x0000)
struct WI_HealDirection_C_GetPlaneData final
{
public:
	struct FPlane                                 OutPlane;                                          // 0x0000(0x0020)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetOwnerLocation_ReturnValue;             // 0x0020(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_38[0x8];                                       // 0x0038(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPlane                                 CallFunc_MakePlaneFromPointAndNormal_ReturnValue;  // 0x0040(0x0020)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WI_HealDirection_C_GetPlaneData) == 0x000010, "Wrong alignment on WI_HealDirection_C_GetPlaneData");
static_assert(sizeof(WI_HealDirection_C_GetPlaneData) == 0x000060, "Wrong size on WI_HealDirection_C_GetPlaneData");
static_assert(offsetof(WI_HealDirection_C_GetPlaneData, OutPlane) == 0x000000, "Member 'WI_HealDirection_C_GetPlaneData::OutPlane' has a wrong offset!");
static_assert(offsetof(WI_HealDirection_C_GetPlaneData, CallFunc_GetOwnerLocation_ReturnValue) == 0x000020, "Member 'WI_HealDirection_C_GetPlaneData::CallFunc_GetOwnerLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(WI_HealDirection_C_GetPlaneData, CallFunc_MakePlaneFromPointAndNormal_ReturnValue) == 0x000040, "Member 'WI_HealDirection_C_GetPlaneData::CallFunc_MakePlaneFromPointAndNormal_ReturnValue' has a wrong offset!");

// Function WI_HealDirection.WI_HealDirection_C.Tick
// 0x003C (0x003C - 0x0000)
struct WI_HealDirection_C_Tick final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         InDeltaTime;                                       // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WI_HealDirection_C_Tick) == 0x000004, "Wrong alignment on WI_HealDirection_C_Tick");
static_assert(sizeof(WI_HealDirection_C_Tick) == 0x00003C, "Wrong size on WI_HealDirection_C_Tick");
static_assert(offsetof(WI_HealDirection_C_Tick, MyGeometry) == 0x000000, "Member 'WI_HealDirection_C_Tick::MyGeometry' has a wrong offset!");
static_assert(offsetof(WI_HealDirection_C_Tick, InDeltaTime) == 0x000038, "Member 'WI_HealDirection_C_Tick::InDeltaTime' has a wrong offset!");

}

