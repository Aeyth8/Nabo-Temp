#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Mole

#include "Basic.hpp"

#include "E_MaterialTypes_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "E_ImpactEffect_structs.hpp"
#include "JP_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BP_Mole.BP_Mole_C.Enable Active Collision
// 0x0001 (0x0001 - 0x0000)
struct BP_Mole_C_Enable_Active_Collision final
{
public:
	bool                                          Enable;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Mole_C_Enable_Active_Collision) == 0x000001, "Wrong alignment on BP_Mole_C_Enable_Active_Collision");
static_assert(sizeof(BP_Mole_C_Enable_Active_Collision) == 0x000001, "Wrong size on BP_Mole_C_Enable_Active_Collision");
static_assert(offsetof(BP_Mole_C_Enable_Active_Collision, Enable) == 0x000000, "Member 'BP_Mole_C_Enable_Active_Collision::Enable' has a wrong offset!");

// Function BP_Mole.BP_Mole_C.ExecuteUbergraph_BP_Mole
// 0x0680 (0x0680 - 0x0000)
struct BP_Mole_C_ExecuteUbergraph_BP_Mole final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Lerp_ReturnValue;                         // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0010(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0028(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UNiagaraSystem*                         Temp_object_Variable;                              // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UNiagaraSystem*                         Temp_object_Variable_1;                            // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            Temp_byte_Variable;                                // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x0052(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_53[0x5];                                       // 0x0053(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_MakeVector_ReturnValue_1;                 // 0x0058(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Select_Default;                             // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_71[0x3];                                       // 0x0071(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x0074(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_84[0x4];                                       // 0x0084(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Conv_DoubleToVector_ReturnValue;          // 0x0088(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_2;                 // 0x00A0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable;                       // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x00B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_BA[0x6];                                       // 0x00BA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	const class AActor*                           K2Node_Event_AttackingActor;                       // 0x00C0(0x0008)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Event_Direction;                            // 0x00C8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_Delta;                                // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E4[0x4];                                       // 0x00E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_Event_Causer;                               // 0x00E8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FCombatParticipant                     K2Node_Event_CombatParticipant;                    // 0x00F0(0x0060)(ConstParm)
	struct FKillMethod                            K2Node_Event_KillMethod;                           // 0x0150(0x02E8)(ConstParm)
	struct FVector_NetQuantize                    K2Node_Event_Location;                             // 0x0438(0x0018)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue_1;               // 0x0450(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_451[0x7];                                      // 0x0451(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_K2_SetRelativeLocation_SweepHitResult;    // 0x0458(0x00F8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          Temp_bool_Has_Been_Initd_Variable;                 // 0x0550(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_Show;                           // 0x0551(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_552[0x6];                                      // 0x0552(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0558(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UNiagaraSystem*                         K2Node_Select_Default_1;                           // 0x0570(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UNiagaraComponent*                      CallFunc_SpawnSystemAtLocation_ReturnValue;        // 0x0578(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_RandomUnitVector_ReturnValue;             // 0x0580(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue;        // 0x0598(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x05B0(0x0060)(ConstParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x0610(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_Mole_Explosion_C*                   CallFunc_FinishSpawningActor_ReturnValue;          // 0x0618(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_RandomFloatInRange_ReturnValue;           // 0x0620(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0628(0x0008)(NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_RandomFloatInRange_ReturnValue_1;         // 0x0630(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue_1;        // 0x0638(0x0008)(NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_Health;                               // 0x0640(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_MaxHealth;                            // 0x0644(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x0648(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_Enable;                         // 0x0649(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_64A[0x6];                                      // 0x064A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Lerp_Alpha_ImplicitCast;                  // 0x0650(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MakeVector_X_ImplicitCast;                // 0x0658(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MakeVector_Y_ImplicitCast;                // 0x0660(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MakeVector_Z_ImplicitCast;                // 0x0668(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_K2_SetTimerDelegate_Time_ImplicitCast;    // 0x0670(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_K2_SetTimerDelegate_Time_ImplicitCast_1;  // 0x0674(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Less_DoubleDouble_A_ImplicitCast;         // 0x0678(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Mole_C_ExecuteUbergraph_BP_Mole) == 0x000010, "Wrong alignment on BP_Mole_C_ExecuteUbergraph_BP_Mole");
static_assert(sizeof(BP_Mole_C_ExecuteUbergraph_BP_Mole) == 0x000680, "Wrong size on BP_Mole_C_ExecuteUbergraph_BP_Mole");
static_assert(offsetof(BP_Mole_C_ExecuteUbergraph_BP_Mole, EntryPoint) == 0x000000, "Member 'BP_Mole_C_ExecuteUbergraph_BP_Mole::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_Mole_C_ExecuteUbergraph_BP_Mole, CallFunc_Lerp_ReturnValue) == 0x000008, "Member 'BP_Mole_C_ExecuteUbergraph_BP_Mole::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Mole_C_ExecuteUbergraph_BP_Mole, CallFunc_MakeVector_ReturnValue) == 0x000010, "Member 'BP_Mole_C_ExecuteUbergraph_BP_Mole::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Mole_C_ExecuteUbergraph_BP_Mole, K2Node_CreateDelegate_OutputDelegate) == 0x000028, "Member 'BP_Mole_C_ExecuteUbergraph_BP_Mole::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_Mole_C_ExecuteUbergraph_BP_Mole, Temp_bool_Variable) == 0x000038, "Member 'BP_Mole_C_ExecuteUbergraph_BP_Mole::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_Mole_C_ExecuteUbergraph_BP_Mole, Temp_object_Variable) == 0x000040, "Member 'BP_Mole_C_ExecuteUbergraph_BP_Mole::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BP_Mole_C_ExecuteUbergraph_BP_Mole, Temp_object_Variable_1) == 0x000048, "Member 'BP_Mole_C_ExecuteUbergraph_BP_Mole::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_Mole_C_ExecuteUbergraph_BP_Mole, Temp_byte_Variable) == 0x000050, "Member 'BP_Mole_C_ExecuteUbergraph_BP_Mole::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_Mole_C_ExecuteUbergraph_BP_Mole, Temp_bool_Variable_1) == 0x000051, "Member 'BP_Mole_C_ExecuteUbergraph_BP_Mole::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_Mole_C_ExecuteUbergraph_BP_Mole, Temp_bool_Variable_2) == 0x000052, "Member 'BP_Mole_C_ExecuteUbergraph_BP_Mole::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_Mole_C_ExecuteUbergraph_BP_Mole, CallFunc_MakeVector_ReturnValue_1) == 0x000058, "Member 'BP_Mole_C_ExecuteUbergraph_BP_Mole::CallFunc_MakeVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Mole_C_ExecuteUbergraph_BP_Mole, K2Node_Select_Default) == 0x000070, "Member 'BP_Mole_C_ExecuteUbergraph_BP_Mole::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_Mole_C_ExecuteUbergraph_BP_Mole, K2Node_CreateDelegate_OutputDelegate_1) == 0x000074, "Member 'BP_Mole_C_ExecuteUbergraph_BP_Mole::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(BP_Mole_C_ExecuteUbergraph_BP_Mole, CallFunc_Conv_DoubleToVector_ReturnValue) == 0x000088, "Member 'BP_Mole_C_ExecuteUbergraph_BP_Mole::CallFunc_Conv_DoubleToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Mole_C_ExecuteUbergraph_BP_Mole, CallFunc_MakeVector_ReturnValue_2) == 0x0000A0, "Member 'BP_Mole_C_ExecuteUbergraph_BP_Mole::CallFunc_MakeVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Mole_C_ExecuteUbergraph_BP_Mole, Temp_bool_IsClosed_Variable) == 0x0000B8, "Member 'BP_Mole_C_ExecuteUbergraph_BP_Mole::Temp_bool_IsClosed_Variable' has a wrong offset!");
static_assert(offsetof(BP_Mole_C_ExecuteUbergraph_BP_Mole, CallFunc_HasAuthority_ReturnValue) == 0x0000B9, "Member 'BP_Mole_C_ExecuteUbergraph_BP_Mole::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Mole_C_ExecuteUbergraph_BP_Mole, K2Node_Event_AttackingActor) == 0x0000C0, "Member 'BP_Mole_C_ExecuteUbergraph_BP_Mole::K2Node_Event_AttackingActor' has a wrong offset!");
static_assert(offsetof(BP_Mole_C_ExecuteUbergraph_BP_Mole, K2Node_Event_Direction) == 0x0000C8, "Member 'BP_Mole_C_ExecuteUbergraph_BP_Mole::K2Node_Event_Direction' has a wrong offset!");
static_assert(offsetof(BP_Mole_C_ExecuteUbergraph_BP_Mole, K2Node_Event_Delta) == 0x0000E0, "Member 'BP_Mole_C_ExecuteUbergraph_BP_Mole::K2Node_Event_Delta' has a wrong offset!");
static_assert(offsetof(BP_Mole_C_ExecuteUbergraph_BP_Mole, K2Node_Event_Causer) == 0x0000E8, "Member 'BP_Mole_C_ExecuteUbergraph_BP_Mole::K2Node_Event_Causer' has a wrong offset!");
static_assert(offsetof(BP_Mole_C_ExecuteUbergraph_BP_Mole, K2Node_Event_CombatParticipant) == 0x0000F0, "Member 'BP_Mole_C_ExecuteUbergraph_BP_Mole::K2Node_Event_CombatParticipant' has a wrong offset!");
static_assert(offsetof(BP_Mole_C_ExecuteUbergraph_BP_Mole, K2Node_Event_KillMethod) == 0x000150, "Member 'BP_Mole_C_ExecuteUbergraph_BP_Mole::K2Node_Event_KillMethod' has a wrong offset!");
static_assert(offsetof(BP_Mole_C_ExecuteUbergraph_BP_Mole, K2Node_Event_Location) == 0x000438, "Member 'BP_Mole_C_ExecuteUbergraph_BP_Mole::K2Node_Event_Location' has a wrong offset!");
static_assert(offsetof(BP_Mole_C_ExecuteUbergraph_BP_Mole, CallFunc_HasAuthority_ReturnValue_1) == 0x000450, "Member 'BP_Mole_C_ExecuteUbergraph_BP_Mole::CallFunc_HasAuthority_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Mole_C_ExecuteUbergraph_BP_Mole, CallFunc_K2_SetRelativeLocation_SweepHitResult) == 0x000458, "Member 'BP_Mole_C_ExecuteUbergraph_BP_Mole::CallFunc_K2_SetRelativeLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_Mole_C_ExecuteUbergraph_BP_Mole, Temp_bool_Has_Been_Initd_Variable) == 0x000550, "Member 'BP_Mole_C_ExecuteUbergraph_BP_Mole::Temp_bool_Has_Been_Initd_Variable' has a wrong offset!");
static_assert(offsetof(BP_Mole_C_ExecuteUbergraph_BP_Mole, K2Node_CustomEvent_Show) == 0x000551, "Member 'BP_Mole_C_ExecuteUbergraph_BP_Mole::K2Node_CustomEvent_Show' has a wrong offset!");
static_assert(offsetof(BP_Mole_C_ExecuteUbergraph_BP_Mole, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000558, "Member 'BP_Mole_C_ExecuteUbergraph_BP_Mole::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Mole_C_ExecuteUbergraph_BP_Mole, K2Node_Select_Default_1) == 0x000570, "Member 'BP_Mole_C_ExecuteUbergraph_BP_Mole::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BP_Mole_C_ExecuteUbergraph_BP_Mole, CallFunc_SpawnSystemAtLocation_ReturnValue) == 0x000578, "Member 'BP_Mole_C_ExecuteUbergraph_BP_Mole::CallFunc_SpawnSystemAtLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Mole_C_ExecuteUbergraph_BP_Mole, CallFunc_RandomUnitVector_ReturnValue) == 0x000580, "Member 'BP_Mole_C_ExecuteUbergraph_BP_Mole::CallFunc_RandomUnitVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Mole_C_ExecuteUbergraph_BP_Mole, CallFunc_Multiply_VectorVector_ReturnValue) == 0x000598, "Member 'BP_Mole_C_ExecuteUbergraph_BP_Mole::CallFunc_Multiply_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Mole_C_ExecuteUbergraph_BP_Mole, CallFunc_GetTransform_ReturnValue) == 0x0005B0, "Member 'BP_Mole_C_ExecuteUbergraph_BP_Mole::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Mole_C_ExecuteUbergraph_BP_Mole, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x000610, "Member 'BP_Mole_C_ExecuteUbergraph_BP_Mole::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Mole_C_ExecuteUbergraph_BP_Mole, CallFunc_FinishSpawningActor_ReturnValue) == 0x000618, "Member 'BP_Mole_C_ExecuteUbergraph_BP_Mole::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Mole_C_ExecuteUbergraph_BP_Mole, CallFunc_RandomFloatInRange_ReturnValue) == 0x000620, "Member 'BP_Mole_C_ExecuteUbergraph_BP_Mole::CallFunc_RandomFloatInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Mole_C_ExecuteUbergraph_BP_Mole, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000628, "Member 'BP_Mole_C_ExecuteUbergraph_BP_Mole::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Mole_C_ExecuteUbergraph_BP_Mole, CallFunc_RandomFloatInRange_ReturnValue_1) == 0x000630, "Member 'BP_Mole_C_ExecuteUbergraph_BP_Mole::CallFunc_RandomFloatInRange_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Mole_C_ExecuteUbergraph_BP_Mole, CallFunc_K2_SetTimerDelegate_ReturnValue_1) == 0x000638, "Member 'BP_Mole_C_ExecuteUbergraph_BP_Mole::CallFunc_K2_SetTimerDelegate_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Mole_C_ExecuteUbergraph_BP_Mole, K2Node_Event_Health) == 0x000640, "Member 'BP_Mole_C_ExecuteUbergraph_BP_Mole::K2Node_Event_Health' has a wrong offset!");
static_assert(offsetof(BP_Mole_C_ExecuteUbergraph_BP_Mole, K2Node_Event_MaxHealth) == 0x000644, "Member 'BP_Mole_C_ExecuteUbergraph_BP_Mole::K2Node_Event_MaxHealth' has a wrong offset!");
static_assert(offsetof(BP_Mole_C_ExecuteUbergraph_BP_Mole, CallFunc_Less_DoubleDouble_ReturnValue) == 0x000648, "Member 'BP_Mole_C_ExecuteUbergraph_BP_Mole::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Mole_C_ExecuteUbergraph_BP_Mole, K2Node_CustomEvent_Enable) == 0x000649, "Member 'BP_Mole_C_ExecuteUbergraph_BP_Mole::K2Node_CustomEvent_Enable' has a wrong offset!");
static_assert(offsetof(BP_Mole_C_ExecuteUbergraph_BP_Mole, CallFunc_Lerp_Alpha_ImplicitCast) == 0x000650, "Member 'BP_Mole_C_ExecuteUbergraph_BP_Mole::CallFunc_Lerp_Alpha_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_Mole_C_ExecuteUbergraph_BP_Mole, CallFunc_MakeVector_X_ImplicitCast) == 0x000658, "Member 'BP_Mole_C_ExecuteUbergraph_BP_Mole::CallFunc_MakeVector_X_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_Mole_C_ExecuteUbergraph_BP_Mole, CallFunc_MakeVector_Y_ImplicitCast) == 0x000660, "Member 'BP_Mole_C_ExecuteUbergraph_BP_Mole::CallFunc_MakeVector_Y_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_Mole_C_ExecuteUbergraph_BP_Mole, CallFunc_MakeVector_Z_ImplicitCast) == 0x000668, "Member 'BP_Mole_C_ExecuteUbergraph_BP_Mole::CallFunc_MakeVector_Z_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_Mole_C_ExecuteUbergraph_BP_Mole, CallFunc_K2_SetTimerDelegate_Time_ImplicitCast) == 0x000670, "Member 'BP_Mole_C_ExecuteUbergraph_BP_Mole::CallFunc_K2_SetTimerDelegate_Time_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_Mole_C_ExecuteUbergraph_BP_Mole, CallFunc_K2_SetTimerDelegate_Time_ImplicitCast_1) == 0x000674, "Member 'BP_Mole_C_ExecuteUbergraph_BP_Mole::CallFunc_K2_SetTimerDelegate_Time_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(BP_Mole_C_ExecuteUbergraph_BP_Mole, CallFunc_Less_DoubleDouble_A_ImplicitCast) == 0x000678, "Member 'BP_Mole_C_ExecuteUbergraph_BP_Mole::CallFunc_Less_DoubleDouble_A_ImplicitCast' has a wrong offset!");

// Function BP_Mole.BP_Mole_C.GetDurabilityCostWhenHit
// 0x0008 (0x0008 - 0x0000)
struct BP_Mole_C_GetDurabilityCostWhenHit final
{
public:
	double                                        Amount;                                            // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Mole_C_GetDurabilityCostWhenHit) == 0x000008, "Wrong alignment on BP_Mole_C_GetDurabilityCostWhenHit");
static_assert(sizeof(BP_Mole_C_GetDurabilityCostWhenHit) == 0x000008, "Wrong size on BP_Mole_C_GetDurabilityCostWhenHit");
static_assert(offsetof(BP_Mole_C_GetDurabilityCostWhenHit, Amount) == 0x000000, "Member 'BP_Mole_C_GetDurabilityCostWhenHit::Amount' has a wrong offset!");

// Function BP_Mole.BP_Mole_C.GetMaterialType
// 0x0001 (0x0001 - 0x0000)
struct BP_Mole_C_GetMaterialType final
{
public:
	E_MaterialTypes                               MaterialType;                                      // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Mole_C_GetMaterialType) == 0x000001, "Wrong alignment on BP_Mole_C_GetMaterialType");
static_assert(sizeof(BP_Mole_C_GetMaterialType) == 0x000001, "Wrong size on BP_Mole_C_GetMaterialType");
static_assert(offsetof(BP_Mole_C_GetMaterialType, MaterialType) == 0x000000, "Member 'BP_Mole_C_GetMaterialType::MaterialType' has a wrong offset!");

// Function BP_Mole.BP_Mole_C.HitInterface
// 0x0018 (0x0018 - 0x0000)
struct BP_Mole_C_HitInterface final
{
public:
	struct FVector                                Direction;                                         // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Mole_C_HitInterface) == 0x000008, "Wrong alignment on BP_Mole_C_HitInterface");
static_assert(sizeof(BP_Mole_C_HitInterface) == 0x000018, "Wrong size on BP_Mole_C_HitInterface");
static_assert(offsetof(BP_Mole_C_HitInterface, Direction) == 0x000000, "Member 'BP_Mole_C_HitInterface::Direction' has a wrong offset!");

// Function BP_Mole.BP_Mole_C.ImpactCosmetics
// 0x0048 (0x0048 - 0x0000)
struct BP_Mole_C_ImpactCosmetics final
{
public:
	class APawn*                                  ImpactCauser;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Location;                                          // 0x0008(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                HitImpulse;                                        // 0x0020(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_ImpactEffect                                ImpactEffect;                                      // 0x0038(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x3];                                       // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   BoneName;                                          // 0x003C(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ChangedAttributes;                                 // 0x0044(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Mole_C_ImpactCosmetics) == 0x000008, "Wrong alignment on BP_Mole_C_ImpactCosmetics");
static_assert(sizeof(BP_Mole_C_ImpactCosmetics) == 0x000048, "Wrong size on BP_Mole_C_ImpactCosmetics");
static_assert(offsetof(BP_Mole_C_ImpactCosmetics, ImpactCauser) == 0x000000, "Member 'BP_Mole_C_ImpactCosmetics::ImpactCauser' has a wrong offset!");
static_assert(offsetof(BP_Mole_C_ImpactCosmetics, Location) == 0x000008, "Member 'BP_Mole_C_ImpactCosmetics::Location' has a wrong offset!");
static_assert(offsetof(BP_Mole_C_ImpactCosmetics, HitImpulse) == 0x000020, "Member 'BP_Mole_C_ImpactCosmetics::HitImpulse' has a wrong offset!");
static_assert(offsetof(BP_Mole_C_ImpactCosmetics, ImpactEffect) == 0x000038, "Member 'BP_Mole_C_ImpactCosmetics::ImpactEffect' has a wrong offset!");
static_assert(offsetof(BP_Mole_C_ImpactCosmetics, BoneName) == 0x00003C, "Member 'BP_Mole_C_ImpactCosmetics::BoneName' has a wrong offset!");
static_assert(offsetof(BP_Mole_C_ImpactCosmetics, ChangedAttributes) == 0x000044, "Member 'BP_Mole_C_ImpactCosmetics::ChangedAttributes' has a wrong offset!");

// Function BP_Mole.BP_Mole_C.MeleeHit
// 0x0008 (0x0008 - 0x0000)
struct BP_Mole_C_MeleeHit final
{
public:
	const class AActor*                           AttackingActor;                                    // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Mole_C_MeleeHit) == 0x000008, "Wrong alignment on BP_Mole_C_MeleeHit");
static_assert(sizeof(BP_Mole_C_MeleeHit) == 0x000008, "Wrong size on BP_Mole_C_MeleeHit");
static_assert(offsetof(BP_Mole_C_MeleeHit, AttackingActor) == 0x000000, "Member 'BP_Mole_C_MeleeHit::AttackingActor' has a wrong offset!");

// Function BP_Mole.BP_Mole_C.OnDamaged
// 0x0370 (0x0370 - 0x0000)
struct BP_Mole_C_OnDamaged final
{
public:
	float                                         Delta;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 Causer;                                            // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FCombatParticipant                     CombatParticipant;                                 // 0x0010(0x0060)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm)
	struct FKillMethod                            KillMethod;                                        // 0x0070(0x02E8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm)
	struct FVector_NetQuantize                    Location;                                          // 0x0358(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Mole_C_OnDamaged) == 0x000008, "Wrong alignment on BP_Mole_C_OnDamaged");
static_assert(sizeof(BP_Mole_C_OnDamaged) == 0x000370, "Wrong size on BP_Mole_C_OnDamaged");
static_assert(offsetof(BP_Mole_C_OnDamaged, Delta) == 0x000000, "Member 'BP_Mole_C_OnDamaged::Delta' has a wrong offset!");
static_assert(offsetof(BP_Mole_C_OnDamaged, Causer) == 0x000008, "Member 'BP_Mole_C_OnDamaged::Causer' has a wrong offset!");
static_assert(offsetof(BP_Mole_C_OnDamaged, CombatParticipant) == 0x000010, "Member 'BP_Mole_C_OnDamaged::CombatParticipant' has a wrong offset!");
static_assert(offsetof(BP_Mole_C_OnDamaged, KillMethod) == 0x000070, "Member 'BP_Mole_C_OnDamaged::KillMethod' has a wrong offset!");
static_assert(offsetof(BP_Mole_C_OnDamaged, Location) == 0x000358, "Member 'BP_Mole_C_OnDamaged::Location' has a wrong offset!");

// Function BP_Mole.BP_Mole_C.OnHealthChanged
// 0x0008 (0x0008 - 0x0000)
struct BP_Mole_C_OnHealthChanged final
{
public:
	float                                         Health;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MaxHealth;                                         // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Mole_C_OnHealthChanged) == 0x000004, "Wrong alignment on BP_Mole_C_OnHealthChanged");
static_assert(sizeof(BP_Mole_C_OnHealthChanged) == 0x000008, "Wrong size on BP_Mole_C_OnHealthChanged");
static_assert(offsetof(BP_Mole_C_OnHealthChanged, Health) == 0x000000, "Member 'BP_Mole_C_OnHealthChanged::Health' has a wrong offset!");
static_assert(offsetof(BP_Mole_C_OnHealthChanged, MaxHealth) == 0x000004, "Member 'BP_Mole_C_OnHealthChanged::MaxHealth' has a wrong offset!");

// Function BP_Mole.BP_Mole_C.Play Show Particles
// 0x0001 (0x0001 - 0x0000)
struct BP_Mole_C_Play_Show_Particles final
{
public:
	bool                                          Show;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Mole_C_Play_Show_Particles) == 0x000001, "Wrong alignment on BP_Mole_C_Play_Show_Particles");
static_assert(sizeof(BP_Mole_C_Play_Show_Particles) == 0x000001, "Wrong size on BP_Mole_C_Play_Show_Particles");
static_assert(offsetof(BP_Mole_C_Play_Show_Particles, Show) == 0x000000, "Member 'BP_Mole_C_Play_Show_Particles::Show' has a wrong offset!");

// Function BP_Mole.BP_Mole_C.PlayMoleSound
// 0x0008 (0x0008 - 0x0000)
struct BP_Mole_C_PlayMoleSound final
{
public:
	class USoundBase*                             In;                                                // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Mole_C_PlayMoleSound) == 0x000008, "Wrong alignment on BP_Mole_C_PlayMoleSound");
static_assert(sizeof(BP_Mole_C_PlayMoleSound) == 0x000008, "Wrong size on BP_Mole_C_PlayMoleSound");
static_assert(offsetof(BP_Mole_C_PlayMoleSound, In) == 0x000000, "Member 'BP_Mole_C_PlayMoleSound::In' has a wrong offset!");

// Function BP_Mole.BP_Mole_C.PlayRandomIdleAnimation
// 0x0030 (0x0030 - 0x0000)
struct BP_Mole_C_PlayRandomIdleAnimation final
{
public:
	int32                                         Temp_int_Variable;                                 // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimationAsset*                        Temp_object_Variable;                              // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAnimationAsset*                        Temp_object_Variable_1;                            // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAnimationAsset*                        Temp_object_Variable_2;                            // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_RandomIntegerInRange_ReturnValue;         // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimationAsset*                        K2Node_Select_Default;                             // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Mole_C_PlayRandomIdleAnimation) == 0x000008, "Wrong alignment on BP_Mole_C_PlayRandomIdleAnimation");
static_assert(sizeof(BP_Mole_C_PlayRandomIdleAnimation) == 0x000030, "Wrong size on BP_Mole_C_PlayRandomIdleAnimation");
static_assert(offsetof(BP_Mole_C_PlayRandomIdleAnimation, Temp_int_Variable) == 0x000000, "Member 'BP_Mole_C_PlayRandomIdleAnimation::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_Mole_C_PlayRandomIdleAnimation, Temp_object_Variable) == 0x000008, "Member 'BP_Mole_C_PlayRandomIdleAnimation::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BP_Mole_C_PlayRandomIdleAnimation, Temp_object_Variable_1) == 0x000010, "Member 'BP_Mole_C_PlayRandomIdleAnimation::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_Mole_C_PlayRandomIdleAnimation, Temp_object_Variable_2) == 0x000018, "Member 'BP_Mole_C_PlayRandomIdleAnimation::Temp_object_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_Mole_C_PlayRandomIdleAnimation, CallFunc_RandomIntegerInRange_ReturnValue) == 0x000020, "Member 'BP_Mole_C_PlayRandomIdleAnimation::CallFunc_RandomIntegerInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Mole_C_PlayRandomIdleAnimation, K2Node_Select_Default) == 0x000028, "Member 'BP_Mole_C_PlayRandomIdleAnimation::K2Node_Select_Default' has a wrong offset!");

// Function BP_Mole.BP_Mole_C.UserConstructionScript
// 0x0018 (0x0018 - 0x0000)
struct BP_Mole_C_UserConstructionScript final
{
public:
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_B_ImplicitCast;       // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetPlayRate_NewRate_ImplicitCast;         // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Mole_C_UserConstructionScript) == 0x000008, "Wrong alignment on BP_Mole_C_UserConstructionScript");
static_assert(sizeof(BP_Mole_C_UserConstructionScript) == 0x000018, "Wrong size on BP_Mole_C_UserConstructionScript");
static_assert(offsetof(BP_Mole_C_UserConstructionScript, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000000, "Member 'BP_Mole_C_UserConstructionScript::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Mole_C_UserConstructionScript, CallFunc_Divide_DoubleDouble_B_ImplicitCast) == 0x000008, "Member 'BP_Mole_C_UserConstructionScript::CallFunc_Divide_DoubleDouble_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_Mole_C_UserConstructionScript, CallFunc_SetPlayRate_NewRate_ImplicitCast) == 0x000010, "Member 'BP_Mole_C_UserConstructionScript::CallFunc_SetPlayRate_NewRate_ImplicitCast' has a wrong offset!");

}

