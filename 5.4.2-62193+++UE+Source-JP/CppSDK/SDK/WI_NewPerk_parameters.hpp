#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WI_NewPerk

#include "Basic.hpp"


namespace SDK::Params
{

// Function WI_NewPerk.WI_NewPerk_C.ExecuteUbergraph_WI_NewPerk
// 0x0070 (0x0070 - 0x0000)
struct WI_NewPerk_C_ExecuteUbergraph_WI_NewPerk final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_CustomEvent_InText_3;                       // 0x0008(0x0010)()
	class FText                                   K2Node_CustomEvent_InText_2;                       // 0x0018(0x0010)()
	class FText                                   K2Node_CustomEvent_InText_1;                       // 0x0028(0x0010)()
	class FText                                   K2Node_CustomEvent_InText;                         // 0x0038(0x0010)()
	TSoftObjectPtr<class UTexture2D>              K2Node_CustomEvent_Image;                          // 0x0048(0x0028)(HasGetValueTypeHash)
};
static_assert(alignof(WI_NewPerk_C_ExecuteUbergraph_WI_NewPerk) == 0x000008, "Wrong alignment on WI_NewPerk_C_ExecuteUbergraph_WI_NewPerk");
static_assert(sizeof(WI_NewPerk_C_ExecuteUbergraph_WI_NewPerk) == 0x000070, "Wrong size on WI_NewPerk_C_ExecuteUbergraph_WI_NewPerk");
static_assert(offsetof(WI_NewPerk_C_ExecuteUbergraph_WI_NewPerk, EntryPoint) == 0x000000, "Member 'WI_NewPerk_C_ExecuteUbergraph_WI_NewPerk::EntryPoint' has a wrong offset!");
static_assert(offsetof(WI_NewPerk_C_ExecuteUbergraph_WI_NewPerk, K2Node_CustomEvent_InText_3) == 0x000008, "Member 'WI_NewPerk_C_ExecuteUbergraph_WI_NewPerk::K2Node_CustomEvent_InText_3' has a wrong offset!");
static_assert(offsetof(WI_NewPerk_C_ExecuteUbergraph_WI_NewPerk, K2Node_CustomEvent_InText_2) == 0x000018, "Member 'WI_NewPerk_C_ExecuteUbergraph_WI_NewPerk::K2Node_CustomEvent_InText_2' has a wrong offset!");
static_assert(offsetof(WI_NewPerk_C_ExecuteUbergraph_WI_NewPerk, K2Node_CustomEvent_InText_1) == 0x000028, "Member 'WI_NewPerk_C_ExecuteUbergraph_WI_NewPerk::K2Node_CustomEvent_InText_1' has a wrong offset!");
static_assert(offsetof(WI_NewPerk_C_ExecuteUbergraph_WI_NewPerk, K2Node_CustomEvent_InText) == 0x000038, "Member 'WI_NewPerk_C_ExecuteUbergraph_WI_NewPerk::K2Node_CustomEvent_InText' has a wrong offset!");
static_assert(offsetof(WI_NewPerk_C_ExecuteUbergraph_WI_NewPerk, K2Node_CustomEvent_Image) == 0x000048, "Member 'WI_NewPerk_C_ExecuteUbergraph_WI_NewPerk::K2Node_CustomEvent_Image' has a wrong offset!");

// Function WI_NewPerk.WI_NewPerk_C.SetCost
// 0x0010 (0x0010 - 0x0000)
struct WI_NewPerk_C_SetCost final
{
public:
	class FText                                   InText;                                            // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(WI_NewPerk_C_SetCost) == 0x000008, "Wrong alignment on WI_NewPerk_C_SetCost");
static_assert(sizeof(WI_NewPerk_C_SetCost) == 0x000010, "Wrong size on WI_NewPerk_C_SetCost");
static_assert(offsetof(WI_NewPerk_C_SetCost, InText) == 0x000000, "Member 'WI_NewPerk_C_SetCost::InText' has a wrong offset!");

// Function WI_NewPerk.WI_NewPerk_C.SetDescription
// 0x0010 (0x0010 - 0x0000)
struct WI_NewPerk_C_SetDescription final
{
public:
	class FText                                   InText;                                            // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(WI_NewPerk_C_SetDescription) == 0x000008, "Wrong alignment on WI_NewPerk_C_SetDescription");
static_assert(sizeof(WI_NewPerk_C_SetDescription) == 0x000010, "Wrong size on WI_NewPerk_C_SetDescription");
static_assert(offsetof(WI_NewPerk_C_SetDescription, InText) == 0x000000, "Member 'WI_NewPerk_C_SetDescription::InText' has a wrong offset!");

// Function WI_NewPerk.WI_NewPerk_C.SetDescriptionHeader
// 0x0010 (0x0010 - 0x0000)
struct WI_NewPerk_C_SetDescriptionHeader final
{
public:
	class FText                                   InText;                                            // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(WI_NewPerk_C_SetDescriptionHeader) == 0x000008, "Wrong alignment on WI_NewPerk_C_SetDescriptionHeader");
static_assert(sizeof(WI_NewPerk_C_SetDescriptionHeader) == 0x000010, "Wrong size on WI_NewPerk_C_SetDescriptionHeader");
static_assert(offsetof(WI_NewPerk_C_SetDescriptionHeader, InText) == 0x000000, "Member 'WI_NewPerk_C_SetDescriptionHeader::InText' has a wrong offset!");

// Function WI_NewPerk.WI_NewPerk_C.SetImage
// 0x0028 (0x0028 - 0x0000)
struct WI_NewPerk_C_SetImage final
{
public:
	TSoftObjectPtr<class UTexture2D>              Image_0;                                           // 0x0000(0x0028)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(WI_NewPerk_C_SetImage) == 0x000008, "Wrong alignment on WI_NewPerk_C_SetImage");
static_assert(sizeof(WI_NewPerk_C_SetImage) == 0x000028, "Wrong size on WI_NewPerk_C_SetImage");
static_assert(offsetof(WI_NewPerk_C_SetImage, Image_0) == 0x000000, "Member 'WI_NewPerk_C_SetImage::Image_0' has a wrong offset!");

// Function WI_NewPerk.WI_NewPerk_C.SetName
// 0x0010 (0x0010 - 0x0000)
struct WI_NewPerk_C_SetName final
{
public:
	class FText                                   InText;                                            // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(WI_NewPerk_C_SetName) == 0x000008, "Wrong alignment on WI_NewPerk_C_SetName");
static_assert(sizeof(WI_NewPerk_C_SetName) == 0x000010, "Wrong size on WI_NewPerk_C_SetName");
static_assert(offsetof(WI_NewPerk_C_SetName, InText) == 0x000000, "Member 'WI_NewPerk_C_SetName::InText' has a wrong offset!");

}

