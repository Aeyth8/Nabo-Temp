#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WI_LocationState

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "UMG_structs.hpp"


namespace SDK::Params
{

// Function WI_LocationState.WI_LocationState_C.ExecuteUbergraph_WI_LocationState
// 0x00D0 (0x00D0 - 0x0000)
struct WI_LocationState_C_ExecuteUbergraph_WI_LocationState final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerControllerFromID_ReturnValue;    // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0013(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_3;                              // 0x0016(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_17[0x1];                                       // 0x0017(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class APawn* OldPawn, class APawn* NewPawn)> K2Node_CreateDelegate_OutputDelegate;              // 0x0020(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Select_Default_1;                           // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x0034(0x0038)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_InDeltaTime;                          // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_GetOwningPlayerPawn_ReturnValue;          // 0x0070(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_ResidentCharacter_C*                K2Node_DynamicCast_AsBP_Resident_Character;        // 0x0078(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0081(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_82[0x6];                                       // 0x0082(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IGameplayTagAssetInterface> K2Node_DynamicCast_AsGameplay_Tag_Asset_Interface; // 0x0088(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasMatchingGameplayTag_ReturnValue;       // 0x0099(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9A[0x6];                                       // 0x009A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IGameplayTagAssetInterface> K2Node_DynamicCast_AsGameplay_Tag_Asset_Interface_1; // 0x00A0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasMatchingGameplayTag_ReturnValue_1;     // 0x00B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              CallFunc_GetVisibility_ReturnValue;                // 0x00B2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B3[0x5];                                       // 0x00B3(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  K2Node_CustomEvent_OldPawn;                        // 0x00B8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  K2Node_CustomEvent_NewPawn;                        // 0x00C0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WI_LocationState_C_ExecuteUbergraph_WI_LocationState) == 0x000008, "Wrong alignment on WI_LocationState_C_ExecuteUbergraph_WI_LocationState");
static_assert(sizeof(WI_LocationState_C_ExecuteUbergraph_WI_LocationState) == 0x0000D0, "Wrong size on WI_LocationState_C_ExecuteUbergraph_WI_LocationState");
static_assert(offsetof(WI_LocationState_C_ExecuteUbergraph_WI_LocationState, EntryPoint) == 0x000000, "Member 'WI_LocationState_C_ExecuteUbergraph_WI_LocationState::EntryPoint' has a wrong offset!");
static_assert(offsetof(WI_LocationState_C_ExecuteUbergraph_WI_LocationState, CallFunc_GetPlayerControllerFromID_ReturnValue) == 0x000008, "Member 'WI_LocationState_C_ExecuteUbergraph_WI_LocationState::CallFunc_GetPlayerControllerFromID_ReturnValue' has a wrong offset!");
static_assert(offsetof(WI_LocationState_C_ExecuteUbergraph_WI_LocationState, Temp_bool_Variable) == 0x000010, "Member 'WI_LocationState_C_ExecuteUbergraph_WI_LocationState::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WI_LocationState_C_ExecuteUbergraph_WI_LocationState, Temp_bool_Variable_1) == 0x000011, "Member 'WI_LocationState_C_ExecuteUbergraph_WI_LocationState::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(WI_LocationState_C_ExecuteUbergraph_WI_LocationState, Temp_byte_Variable) == 0x000012, "Member 'WI_LocationState_C_ExecuteUbergraph_WI_LocationState::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WI_LocationState_C_ExecuteUbergraph_WI_LocationState, Temp_byte_Variable_1) == 0x000013, "Member 'WI_LocationState_C_ExecuteUbergraph_WI_LocationState::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WI_LocationState_C_ExecuteUbergraph_WI_LocationState, Temp_bool_Variable_2) == 0x000014, "Member 'WI_LocationState_C_ExecuteUbergraph_WI_LocationState::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(WI_LocationState_C_ExecuteUbergraph_WI_LocationState, K2Node_Select_Default) == 0x000015, "Member 'WI_LocationState_C_ExecuteUbergraph_WI_LocationState::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WI_LocationState_C_ExecuteUbergraph_WI_LocationState, Temp_bool_Variable_3) == 0x000016, "Member 'WI_LocationState_C_ExecuteUbergraph_WI_LocationState::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(WI_LocationState_C_ExecuteUbergraph_WI_LocationState, Temp_int_Variable) == 0x000018, "Member 'WI_LocationState_C_ExecuteUbergraph_WI_LocationState::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(WI_LocationState_C_ExecuteUbergraph_WI_LocationState, Temp_int_Variable_1) == 0x00001C, "Member 'WI_LocationState_C_ExecuteUbergraph_WI_LocationState::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(WI_LocationState_C_ExecuteUbergraph_WI_LocationState, K2Node_CreateDelegate_OutputDelegate) == 0x000020, "Member 'WI_LocationState_C_ExecuteUbergraph_WI_LocationState::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WI_LocationState_C_ExecuteUbergraph_WI_LocationState, K2Node_Select_Default_1) == 0x000030, "Member 'WI_LocationState_C_ExecuteUbergraph_WI_LocationState::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(WI_LocationState_C_ExecuteUbergraph_WI_LocationState, K2Node_Event_MyGeometry) == 0x000034, "Member 'WI_LocationState_C_ExecuteUbergraph_WI_LocationState::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(WI_LocationState_C_ExecuteUbergraph_WI_LocationState, K2Node_Event_InDeltaTime) == 0x00006C, "Member 'WI_LocationState_C_ExecuteUbergraph_WI_LocationState::K2Node_Event_InDeltaTime' has a wrong offset!");
static_assert(offsetof(WI_LocationState_C_ExecuteUbergraph_WI_LocationState, CallFunc_GetOwningPlayerPawn_ReturnValue) == 0x000070, "Member 'WI_LocationState_C_ExecuteUbergraph_WI_LocationState::CallFunc_GetOwningPlayerPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(WI_LocationState_C_ExecuteUbergraph_WI_LocationState, K2Node_DynamicCast_AsBP_Resident_Character) == 0x000078, "Member 'WI_LocationState_C_ExecuteUbergraph_WI_LocationState::K2Node_DynamicCast_AsBP_Resident_Character' has a wrong offset!");
static_assert(offsetof(WI_LocationState_C_ExecuteUbergraph_WI_LocationState, K2Node_DynamicCast_bSuccess) == 0x000080, "Member 'WI_LocationState_C_ExecuteUbergraph_WI_LocationState::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WI_LocationState_C_ExecuteUbergraph_WI_LocationState, CallFunc_IsValid_ReturnValue) == 0x000081, "Member 'WI_LocationState_C_ExecuteUbergraph_WI_LocationState::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WI_LocationState_C_ExecuteUbergraph_WI_LocationState, K2Node_DynamicCast_AsGameplay_Tag_Asset_Interface) == 0x000088, "Member 'WI_LocationState_C_ExecuteUbergraph_WI_LocationState::K2Node_DynamicCast_AsGameplay_Tag_Asset_Interface' has a wrong offset!");
static_assert(offsetof(WI_LocationState_C_ExecuteUbergraph_WI_LocationState, K2Node_DynamicCast_bSuccess_1) == 0x000098, "Member 'WI_LocationState_C_ExecuteUbergraph_WI_LocationState::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(WI_LocationState_C_ExecuteUbergraph_WI_LocationState, CallFunc_HasMatchingGameplayTag_ReturnValue) == 0x000099, "Member 'WI_LocationState_C_ExecuteUbergraph_WI_LocationState::CallFunc_HasMatchingGameplayTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(WI_LocationState_C_ExecuteUbergraph_WI_LocationState, K2Node_DynamicCast_AsGameplay_Tag_Asset_Interface_1) == 0x0000A0, "Member 'WI_LocationState_C_ExecuteUbergraph_WI_LocationState::K2Node_DynamicCast_AsGameplay_Tag_Asset_Interface_1' has a wrong offset!");
static_assert(offsetof(WI_LocationState_C_ExecuteUbergraph_WI_LocationState, K2Node_DynamicCast_bSuccess_2) == 0x0000B0, "Member 'WI_LocationState_C_ExecuteUbergraph_WI_LocationState::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(WI_LocationState_C_ExecuteUbergraph_WI_LocationState, CallFunc_HasMatchingGameplayTag_ReturnValue_1) == 0x0000B1, "Member 'WI_LocationState_C_ExecuteUbergraph_WI_LocationState::CallFunc_HasMatchingGameplayTag_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WI_LocationState_C_ExecuteUbergraph_WI_LocationState, CallFunc_GetVisibility_ReturnValue) == 0x0000B2, "Member 'WI_LocationState_C_ExecuteUbergraph_WI_LocationState::CallFunc_GetVisibility_ReturnValue' has a wrong offset!");
static_assert(offsetof(WI_LocationState_C_ExecuteUbergraph_WI_LocationState, K2Node_CustomEvent_OldPawn) == 0x0000B8, "Member 'WI_LocationState_C_ExecuteUbergraph_WI_LocationState::K2Node_CustomEvent_OldPawn' has a wrong offset!");
static_assert(offsetof(WI_LocationState_C_ExecuteUbergraph_WI_LocationState, K2Node_CustomEvent_NewPawn) == 0x0000C0, "Member 'WI_LocationState_C_ExecuteUbergraph_WI_LocationState::K2Node_CustomEvent_NewPawn' has a wrong offset!");
static_assert(offsetof(WI_LocationState_C_ExecuteUbergraph_WI_LocationState, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x0000C8, "Member 'WI_LocationState_C_ExecuteUbergraph_WI_LocationState::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function WI_LocationState.WI_LocationState_C.Reconstruct
// 0x0010 (0x0010 - 0x0000)
struct WI_LocationState_C_Reconstruct final
{
public:
	class APawn*                                  OldPawn;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  NewPawn;                                           // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WI_LocationState_C_Reconstruct) == 0x000008, "Wrong alignment on WI_LocationState_C_Reconstruct");
static_assert(sizeof(WI_LocationState_C_Reconstruct) == 0x000010, "Wrong size on WI_LocationState_C_Reconstruct");
static_assert(offsetof(WI_LocationState_C_Reconstruct, OldPawn) == 0x000000, "Member 'WI_LocationState_C_Reconstruct::OldPawn' has a wrong offset!");
static_assert(offsetof(WI_LocationState_C_Reconstruct, NewPawn) == 0x000008, "Member 'WI_LocationState_C_Reconstruct::NewPawn' has a wrong offset!");

// Function WI_LocationState.WI_LocationState_C.Tick
// 0x003C (0x003C - 0x0000)
struct WI_LocationState_C_Tick final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         InDeltaTime;                                       // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WI_LocationState_C_Tick) == 0x000004, "Wrong alignment on WI_LocationState_C_Tick");
static_assert(sizeof(WI_LocationState_C_Tick) == 0x00003C, "Wrong size on WI_LocationState_C_Tick");
static_assert(offsetof(WI_LocationState_C_Tick, MyGeometry) == 0x000000, "Member 'WI_LocationState_C_Tick::MyGeometry' has a wrong offset!");
static_assert(offsetof(WI_LocationState_C_Tick, InDeltaTime) == 0x000038, "Member 'WI_LocationState_C_Tick::InDeltaTime' has a wrong offset!");

}

