#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_3rdPersonCamera

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_3rdPersonCamera.BP_3rdPersonCamera_C
// 0x0028 (0x02B8 - 0x0290)
class ABP_3rdPersonCamera_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0290(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class USpringArmComponent*                    SpringArm;                                         // 0x0298(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        RotationPivot;                                     // 0x02A0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UCameraComponent*                       Camera;                                            // 0x02A8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x02B0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_3rdPersonCamera(int32 EntryPoint);
	void InpAxisKeyEvt_MouseX_K2Node_InputAxisKeyEvent_2(float AxisValue);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_3rdPersonCamera_C">();
	}
	static class ABP_3rdPersonCamera_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_3rdPersonCamera_C>();
	}
};
static_assert(alignof(ABP_3rdPersonCamera_C) == 0x000008, "Wrong alignment on ABP_3rdPersonCamera_C");
static_assert(sizeof(ABP_3rdPersonCamera_C) == 0x0002B8, "Wrong size on ABP_3rdPersonCamera_C");
static_assert(offsetof(ABP_3rdPersonCamera_C, UberGraphFrame) == 0x000290, "Member 'ABP_3rdPersonCamera_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_3rdPersonCamera_C, SpringArm) == 0x000298, "Member 'ABP_3rdPersonCamera_C::SpringArm' has a wrong offset!");
static_assert(offsetof(ABP_3rdPersonCamera_C, RotationPivot) == 0x0002A0, "Member 'ABP_3rdPersonCamera_C::RotationPivot' has a wrong offset!");
static_assert(offsetof(ABP_3rdPersonCamera_C, Camera) == 0x0002A8, "Member 'ABP_3rdPersonCamera_C::Camera' has a wrong offset!");
static_assert(offsetof(ABP_3rdPersonCamera_C, DefaultSceneRoot) == 0x0002B0, "Member 'ABP_3rdPersonCamera_C::DefaultSceneRoot' has a wrong offset!");

}

