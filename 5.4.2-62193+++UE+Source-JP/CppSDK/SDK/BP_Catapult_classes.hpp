#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Catapult

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "BP_HouseAdditionBase_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_Catapult.BP_Catapult_C
// 0x0088 (0x04C0 - 0x0438)
class ABP_Catapult_C final : public ABP_HouseAdditionBase_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_BP_Catapult_C;                      // 0x0438(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class USceneComponent*                        DestroyDirection;                                  // 0x0440(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UNiagaraComponent*                      Niagara_Dust;                                      // 0x0448(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UInteractionComponent_C*                TurnLeftInteraction;                               // 0x0450(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UInteractionComponent_C*                TurnRightInteraction;                              // 0x0458(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UInteractionComponent_C*                InteractionComponentPrimary;                       // 0x0460(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        AudioLaunch;                                       // 0x0468(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          BoxHit;                                            // 0x0470(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Cylinder;                                          // 0x0478(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          BoxDetection;                                      // 0x0480(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          BoxBase;                                           // 0x0488(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         TL_Place_Alpha_E21E14674F4CA93A8FDE5691214C1E17;   // 0x0490(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            TL_Place__Direction_E21E14674F4CA93A8FDE5691214C1E17; // 0x0494(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_495[0x3];                                      // 0x0495(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     TL_Place;                                          // 0x0498(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          Cooldown;                                          // 0x04A0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A1[0x7];                                      // 0x04A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        ForwardLaunchForce;                                // 0x04A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        UpLaunchForce;                                     // 0x04B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        RotationDegrees;                                   // 0x04B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void DetectCharactersToLaunch(TArray<class AActor*>* Actors);
	void DetectThrowablesToLaunch(TArray<class AActor*>* Actors);
	void ExecuteUbergraph_BP_Catapult(int32 EntryPoint);
	void GetCenterLocation(struct FVector* Location);
	void LaunchCharacters(TArray<class AActor*>& Actors);
	void LaunchThrowables(TArray<class AActor*>& Actors);
	void Multi_Launch_Cosmetics();
	void Multi_Launch_Throwables();
	void ReceiveDestroyed();
	void TL_Place__FinishedFunc();
	void TL_Place__UpdateFunc();
	void GetInteractSound();
	void GetOptionalText(class FText* Return, class FText* Optional_Second_Line);
	void GetPriority(int32* Priority);
	void GetWidgetLocation(struct FVector* Location);
	void HideInteractionWidget(bool* Return);
	void IsInteractable(bool* Interactable);
	void PostInteract(class AActor* InteractingActor, class UPrimitiveComponent* InteractionComponent);
	void ReceiveBeginPlay();
	void SetInteractable(bool Interactable);

	bool IsAvailableForEnemyTeam(class UPrimitiveComponent* InteractionComponent) const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_Catapult_C">();
	}
	static class ABP_Catapult_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_Catapult_C>();
	}
};
static_assert(alignof(ABP_Catapult_C) == 0x000008, "Wrong alignment on ABP_Catapult_C");
static_assert(sizeof(ABP_Catapult_C) == 0x0004C0, "Wrong size on ABP_Catapult_C");
static_assert(offsetof(ABP_Catapult_C, UberGraphFrame_BP_Catapult_C) == 0x000438, "Member 'ABP_Catapult_C::UberGraphFrame_BP_Catapult_C' has a wrong offset!");
static_assert(offsetof(ABP_Catapult_C, DestroyDirection) == 0x000440, "Member 'ABP_Catapult_C::DestroyDirection' has a wrong offset!");
static_assert(offsetof(ABP_Catapult_C, Niagara_Dust) == 0x000448, "Member 'ABP_Catapult_C::Niagara_Dust' has a wrong offset!");
static_assert(offsetof(ABP_Catapult_C, TurnLeftInteraction) == 0x000450, "Member 'ABP_Catapult_C::TurnLeftInteraction' has a wrong offset!");
static_assert(offsetof(ABP_Catapult_C, TurnRightInteraction) == 0x000458, "Member 'ABP_Catapult_C::TurnRightInteraction' has a wrong offset!");
static_assert(offsetof(ABP_Catapult_C, InteractionComponentPrimary) == 0x000460, "Member 'ABP_Catapult_C::InteractionComponentPrimary' has a wrong offset!");
static_assert(offsetof(ABP_Catapult_C, AudioLaunch) == 0x000468, "Member 'ABP_Catapult_C::AudioLaunch' has a wrong offset!");
static_assert(offsetof(ABP_Catapult_C, BoxHit) == 0x000470, "Member 'ABP_Catapult_C::BoxHit' has a wrong offset!");
static_assert(offsetof(ABP_Catapult_C, Cylinder) == 0x000478, "Member 'ABP_Catapult_C::Cylinder' has a wrong offset!");
static_assert(offsetof(ABP_Catapult_C, BoxDetection) == 0x000480, "Member 'ABP_Catapult_C::BoxDetection' has a wrong offset!");
static_assert(offsetof(ABP_Catapult_C, BoxBase) == 0x000488, "Member 'ABP_Catapult_C::BoxBase' has a wrong offset!");
static_assert(offsetof(ABP_Catapult_C, TL_Place_Alpha_E21E14674F4CA93A8FDE5691214C1E17) == 0x000490, "Member 'ABP_Catapult_C::TL_Place_Alpha_E21E14674F4CA93A8FDE5691214C1E17' has a wrong offset!");
static_assert(offsetof(ABP_Catapult_C, TL_Place__Direction_E21E14674F4CA93A8FDE5691214C1E17) == 0x000494, "Member 'ABP_Catapult_C::TL_Place__Direction_E21E14674F4CA93A8FDE5691214C1E17' has a wrong offset!");
static_assert(offsetof(ABP_Catapult_C, TL_Place) == 0x000498, "Member 'ABP_Catapult_C::TL_Place' has a wrong offset!");
static_assert(offsetof(ABP_Catapult_C, Cooldown) == 0x0004A0, "Member 'ABP_Catapult_C::Cooldown' has a wrong offset!");
static_assert(offsetof(ABP_Catapult_C, ForwardLaunchForce) == 0x0004A8, "Member 'ABP_Catapult_C::ForwardLaunchForce' has a wrong offset!");
static_assert(offsetof(ABP_Catapult_C, UpLaunchForce) == 0x0004B0, "Member 'ABP_Catapult_C::UpLaunchForce' has a wrong offset!");
static_assert(offsetof(ABP_Catapult_C, RotationDegrees) == 0x0004B8, "Member 'ABP_Catapult_C::RotationDegrees' has a wrong offset!");

}

