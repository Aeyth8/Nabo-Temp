#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Chicken_AnimBP

#include "Basic.hpp"

#include "EChickenStates_structs.hpp"
#include "Engine_structs.hpp"
#include "EChickenRunStates_structs.hpp"
#include "EChickenIdleStates_structs.hpp"


namespace SDK::Params
{

// Function Chicken_AnimBP.Chicken_AnimBP_C.AnimGraph
// 0x0010 (0x0010 - 0x0000)
struct Chicken_AnimBP_C_AnimGraph final
{
public:
	struct FPoseLink                              AnimGraph_0;                                       // 0x0000(0x0010)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(Chicken_AnimBP_C_AnimGraph) == 0x000008, "Wrong alignment on Chicken_AnimBP_C_AnimGraph");
static_assert(sizeof(Chicken_AnimBP_C_AnimGraph) == 0x000010, "Wrong size on Chicken_AnimBP_C_AnimGraph");
static_assert(offsetof(Chicken_AnimBP_C_AnimGraph, AnimGraph_0) == 0x000000, "Member 'Chicken_AnimBP_C_AnimGraph::AnimGraph_0' has a wrong offset!");

// Function Chicken_AnimBP.Chicken_AnimBP_C.base
// 0x0010 (0x0010 - 0x0000)
struct Chicken_AnimBP_C_base final
{
public:
	struct FPoseLink                              base_0;                                            // 0x0000(0x0010)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(Chicken_AnimBP_C_base) == 0x000008, "Wrong alignment on Chicken_AnimBP_C_base");
static_assert(sizeof(Chicken_AnimBP_C_base) == 0x000010, "Wrong size on Chicken_AnimBP_C_base");
static_assert(offsetof(Chicken_AnimBP_C_base, base_0) == 0x000000, "Member 'Chicken_AnimBP_C_base::base_0' has a wrong offset!");

// Function Chicken_AnimBP.Chicken_AnimBP_C.BasePose
// 0x0010 (0x0010 - 0x0000)
struct Chicken_AnimBP_C_BasePose final
{
public:
	struct FPoseLink                              BasePose_0;                                        // 0x0000(0x0010)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(Chicken_AnimBP_C_BasePose) == 0x000008, "Wrong alignment on Chicken_AnimBP_C_BasePose");
static_assert(sizeof(Chicken_AnimBP_C_BasePose) == 0x000010, "Wrong size on Chicken_AnimBP_C_BasePose");
static_assert(offsetof(Chicken_AnimBP_C_BasePose, BasePose_0) == 0x000000, "Member 'Chicken_AnimBP_C_BasePose::BasePose_0' has a wrong offset!");

// Function Chicken_AnimBP.Chicken_AnimBP_C.BlendLayers
// 0x0040 (0x0040 - 0x0000)
struct Chicken_AnimBP_C_BlendLayers final
{
public:
	struct FPoseLink                              BaseLayer;                                         // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	struct FPoseLink                              OverlayLayer;                                      // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	struct FPoseLink                              BasePoseLayer;                                     // 0x0020(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	struct FPoseLink                              BlendLayers_0;                                     // 0x0030(0x0010)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(Chicken_AnimBP_C_BlendLayers) == 0x000008, "Wrong alignment on Chicken_AnimBP_C_BlendLayers");
static_assert(sizeof(Chicken_AnimBP_C_BlendLayers) == 0x000040, "Wrong size on Chicken_AnimBP_C_BlendLayers");
static_assert(offsetof(Chicken_AnimBP_C_BlendLayers, BaseLayer) == 0x000000, "Member 'Chicken_AnimBP_C_BlendLayers::BaseLayer' has a wrong offset!");
static_assert(offsetof(Chicken_AnimBP_C_BlendLayers, OverlayLayer) == 0x000010, "Member 'Chicken_AnimBP_C_BlendLayers::OverlayLayer' has a wrong offset!");
static_assert(offsetof(Chicken_AnimBP_C_BlendLayers, BasePoseLayer) == 0x000020, "Member 'Chicken_AnimBP_C_BlendLayers::BasePoseLayer' has a wrong offset!");
static_assert(offsetof(Chicken_AnimBP_C_BlendLayers, BlendLayers_0) == 0x000030, "Member 'Chicken_AnimBP_C_BlendLayers::BlendLayers_0' has a wrong offset!");

// Function Chicken_AnimBP.Chicken_AnimBP_C.BlueprintThreadSafeUpdateAnimation
// 0x0004 (0x0004 - 0x0000)
struct Chicken_AnimBP_C_BlueprintThreadSafeUpdateAnimation final
{
public:
	float                                         DeltaTime;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Chicken_AnimBP_C_BlueprintThreadSafeUpdateAnimation) == 0x000004, "Wrong alignment on Chicken_AnimBP_C_BlueprintThreadSafeUpdateAnimation");
static_assert(sizeof(Chicken_AnimBP_C_BlueprintThreadSafeUpdateAnimation) == 0x000004, "Wrong size on Chicken_AnimBP_C_BlueprintThreadSafeUpdateAnimation");
static_assert(offsetof(Chicken_AnimBP_C_BlueprintThreadSafeUpdateAnimation, DeltaTime) == 0x000000, "Member 'Chicken_AnimBP_C_BlueprintThreadSafeUpdateAnimation::DeltaTime' has a wrong offset!");

// Function Chicken_AnimBP.Chicken_AnimBP_C.ChangeAnimationState
// 0x0001 (0x0001 - 0x0000)
struct Chicken_AnimBP_C_ChangeAnimationState final
{
public:
	EChickenStates                                State_0;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Chicken_AnimBP_C_ChangeAnimationState) == 0x000001, "Wrong alignment on Chicken_AnimBP_C_ChangeAnimationState");
static_assert(sizeof(Chicken_AnimBP_C_ChangeAnimationState) == 0x000001, "Wrong size on Chicken_AnimBP_C_ChangeAnimationState");
static_assert(offsetof(Chicken_AnimBP_C_ChangeAnimationState, State_0) == 0x000000, "Member 'Chicken_AnimBP_C_ChangeAnimationState::State_0' has a wrong offset!");

// Function Chicken_AnimBP.Chicken_AnimBP_C.ChangeRunState
// 0x0001 (0x0001 - 0x0000)
struct Chicken_AnimBP_C_ChangeRunState final
{
public:
	EChickenRunStates                             RunState_0;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Chicken_AnimBP_C_ChangeRunState) == 0x000001, "Wrong alignment on Chicken_AnimBP_C_ChangeRunState");
static_assert(sizeof(Chicken_AnimBP_C_ChangeRunState) == 0x000001, "Wrong size on Chicken_AnimBP_C_ChangeRunState");
static_assert(offsetof(Chicken_AnimBP_C_ChangeRunState, RunState_0) == 0x000000, "Member 'Chicken_AnimBP_C_ChangeRunState::RunState_0' has a wrong offset!");

// Function Chicken_AnimBP.Chicken_AnimBP_C.ExecuteUbergraph_Chicken_AnimBP
// 0x00A8 (0x00A8 - 0x0000)
struct Chicken_AnimBP_C_ExecuteUbergraph_Chicken_AnimBP final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EChickenIdleStates                            Temp_byte_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetInstanceAssetPlayerTimeFromEndFraction_ReturnValue; // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue_1;          // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NearlyEqual_FloatFloat_ReturnValue;       // 0x000E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F[0x1];                                        // 0x000F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetInstanceAssetPlayerTimeFromEndFraction_ReturnValue_1; // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NearlyEqual_FloatFloat_ReturnValue_1;     // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EChickenIdleStates                            Temp_byte_Variable_1;                              // 0x0016(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue_2;          // 0x0017(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EChickenIdleStates                            Temp_byte_Variable_2;                              // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x001B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue_3;          // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_2;        // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_3;        // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_4;        // 0x0023(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue_4;          // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_5;        // 0x0025(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_26[0x2];                                       // 0x0026(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetInstanceAssetPlayerTimeFromEndFraction_ReturnValue_2; // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NearlyEqual_FloatFloat_ReturnValue_2;     // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_6;        // 0x002D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue_5;          // 0x002E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x002F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EChickenIdleStates                            Temp_byte_Variable_3;                              // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue_6;          // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_7;        // 0x0032(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_8;        // 0x0033(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue_7;          // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_9;        // 0x0035(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_10;       // 0x0036(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_3;                 // 0x0037(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue_8;          // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_11;       // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue_9;          // 0x003A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_12;       // 0x003B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_4;                 // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue_10;         // 0x003D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_13;       // 0x003E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_14;       // 0x003F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_15;       // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_42[0x6];                                       // 0x0042(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_RandomFloatInRange_ReturnValue;           // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_RandomFloatInRange_ReturnValue_1;         // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_16;       // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_17;       // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5A[0x2];                                       // 0x005A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetInstanceAssetPlayerTimeFromEndFraction_ReturnValue_3; // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NearlyEqual_FloatFloat_ReturnValue_3;     // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EChickenStates                                K2Node_Event_State;                                // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EChickenRunStates                             K2Node_Event_RunState;                             // 0x0062(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_63[0x5];                                       // 0x0063(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_TryGetPawnOwner_ReturnValue;              // 0x0068(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_Goose_C*                            K2Node_DynamicCast_AsBP_Goose;                     // 0x0070(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_18;       // 0x0079(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_5;                 // 0x007A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_19;       // 0x007B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_RandomIntegerInRange_ReturnValue;         // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_6;                 // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EChickenIdleStates                            K2Node_Select_Default;                             // 0x0081(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_20;       // 0x0082(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_21;       // 0x0083(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0084(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0085(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0086(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_87[0x1];                                       // 0x0087(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_NearlyEqual_FloatFloat_A_ImplicitCast;    // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_NearlyEqual_FloatFloat_A_ImplicitCast_1;  // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_NearlyEqual_FloatFloat_A_ImplicitCast_2;  // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_NearlyEqual_FloatFloat_A_ImplicitCast_3;  // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Chicken_AnimBP_C_ExecuteUbergraph_Chicken_AnimBP) == 0x000008, "Wrong alignment on Chicken_AnimBP_C_ExecuteUbergraph_Chicken_AnimBP");
static_assert(sizeof(Chicken_AnimBP_C_ExecuteUbergraph_Chicken_AnimBP) == 0x0000A8, "Wrong size on Chicken_AnimBP_C_ExecuteUbergraph_Chicken_AnimBP");
static_assert(offsetof(Chicken_AnimBP_C_ExecuteUbergraph_Chicken_AnimBP, EntryPoint) == 0x000000, "Member 'Chicken_AnimBP_C_ExecuteUbergraph_Chicken_AnimBP::EntryPoint' has a wrong offset!");
static_assert(offsetof(Chicken_AnimBP_C_ExecuteUbergraph_Chicken_AnimBP, Temp_byte_Variable) == 0x000004, "Member 'Chicken_AnimBP_C_ExecuteUbergraph_Chicken_AnimBP::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(Chicken_AnimBP_C_ExecuteUbergraph_Chicken_AnimBP, CallFunc_GetInstanceAssetPlayerTimeFromEndFraction_ReturnValue) == 0x000008, "Member 'Chicken_AnimBP_C_ExecuteUbergraph_Chicken_AnimBP::CallFunc_GetInstanceAssetPlayerTimeFromEndFraction_ReturnValue' has a wrong offset!");
static_assert(offsetof(Chicken_AnimBP_C_ExecuteUbergraph_Chicken_AnimBP, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x00000C, "Member 'Chicken_AnimBP_C_ExecuteUbergraph_Chicken_AnimBP::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(Chicken_AnimBP_C_ExecuteUbergraph_Chicken_AnimBP, CallFunc_NotEqual_ByteByte_ReturnValue_1) == 0x00000D, "Member 'Chicken_AnimBP_C_ExecuteUbergraph_Chicken_AnimBP::CallFunc_NotEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Chicken_AnimBP_C_ExecuteUbergraph_Chicken_AnimBP, CallFunc_NearlyEqual_FloatFloat_ReturnValue) == 0x00000E, "Member 'Chicken_AnimBP_C_ExecuteUbergraph_Chicken_AnimBP::CallFunc_NearlyEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Chicken_AnimBP_C_ExecuteUbergraph_Chicken_AnimBP, CallFunc_GetInstanceAssetPlayerTimeFromEndFraction_ReturnValue_1) == 0x000010, "Member 'Chicken_AnimBP_C_ExecuteUbergraph_Chicken_AnimBP::CallFunc_GetInstanceAssetPlayerTimeFromEndFraction_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Chicken_AnimBP_C_ExecuteUbergraph_Chicken_AnimBP, CallFunc_BooleanAND_ReturnValue) == 0x000014, "Member 'Chicken_AnimBP_C_ExecuteUbergraph_Chicken_AnimBP::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(Chicken_AnimBP_C_ExecuteUbergraph_Chicken_AnimBP, CallFunc_NearlyEqual_FloatFloat_ReturnValue_1) == 0x000015, "Member 'Chicken_AnimBP_C_ExecuteUbergraph_Chicken_AnimBP::CallFunc_NearlyEqual_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Chicken_AnimBP_C_ExecuteUbergraph_Chicken_AnimBP, Temp_byte_Variable_1) == 0x000016, "Member 'Chicken_AnimBP_C_ExecuteUbergraph_Chicken_AnimBP::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(Chicken_AnimBP_C_ExecuteUbergraph_Chicken_AnimBP, CallFunc_NotEqual_ByteByte_ReturnValue_2) == 0x000017, "Member 'Chicken_AnimBP_C_ExecuteUbergraph_Chicken_AnimBP::CallFunc_NotEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Chicken_AnimBP_C_ExecuteUbergraph_Chicken_AnimBP, CallFunc_BooleanAND_ReturnValue_1) == 0x000018, "Member 'Chicken_AnimBP_C_ExecuteUbergraph_Chicken_AnimBP::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Chicken_AnimBP_C_ExecuteUbergraph_Chicken_AnimBP, Temp_byte_Variable_2) == 0x000019, "Member 'Chicken_AnimBP_C_ExecuteUbergraph_Chicken_AnimBP::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(Chicken_AnimBP_C_ExecuteUbergraph_Chicken_AnimBP, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x00001A, "Member 'Chicken_AnimBP_C_ExecuteUbergraph_Chicken_AnimBP::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(Chicken_AnimBP_C_ExecuteUbergraph_Chicken_AnimBP, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x00001B, "Member 'Chicken_AnimBP_C_ExecuteUbergraph_Chicken_AnimBP::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Chicken_AnimBP_C_ExecuteUbergraph_Chicken_AnimBP, Temp_int_Variable) == 0x00001C, "Member 'Chicken_AnimBP_C_ExecuteUbergraph_Chicken_AnimBP::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(Chicken_AnimBP_C_ExecuteUbergraph_Chicken_AnimBP, CallFunc_NotEqual_ByteByte_ReturnValue_3) == 0x000020, "Member 'Chicken_AnimBP_C_ExecuteUbergraph_Chicken_AnimBP::CallFunc_NotEqual_ByteByte_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Chicken_AnimBP_C_ExecuteUbergraph_Chicken_AnimBP, CallFunc_EqualEqual_ByteByte_ReturnValue_2) == 0x000021, "Member 'Chicken_AnimBP_C_ExecuteUbergraph_Chicken_AnimBP::CallFunc_EqualEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Chicken_AnimBP_C_ExecuteUbergraph_Chicken_AnimBP, CallFunc_EqualEqual_ByteByte_ReturnValue_3) == 0x000022, "Member 'Chicken_AnimBP_C_ExecuteUbergraph_Chicken_AnimBP::CallFunc_EqualEqual_ByteByte_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Chicken_AnimBP_C_ExecuteUbergraph_Chicken_AnimBP, CallFunc_EqualEqual_ByteByte_ReturnValue_4) == 0x000023, "Member 'Chicken_AnimBP_C_ExecuteUbergraph_Chicken_AnimBP::CallFunc_EqualEqual_ByteByte_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Chicken_AnimBP_C_ExecuteUbergraph_Chicken_AnimBP, CallFunc_NotEqual_ByteByte_ReturnValue_4) == 0x000024, "Member 'Chicken_AnimBP_C_ExecuteUbergraph_Chicken_AnimBP::CallFunc_NotEqual_ByteByte_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Chicken_AnimBP_C_ExecuteUbergraph_Chicken_AnimBP, CallFunc_EqualEqual_ByteByte_ReturnValue_5) == 0x000025, "Member 'Chicken_AnimBP_C_ExecuteUbergraph_Chicken_AnimBP::CallFunc_EqualEqual_ByteByte_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Chicken_AnimBP_C_ExecuteUbergraph_Chicken_AnimBP, CallFunc_GetInstanceAssetPlayerTimeFromEndFraction_ReturnValue_2) == 0x000028, "Member 'Chicken_AnimBP_C_ExecuteUbergraph_Chicken_AnimBP::CallFunc_GetInstanceAssetPlayerTimeFromEndFraction_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Chicken_AnimBP_C_ExecuteUbergraph_Chicken_AnimBP, CallFunc_NearlyEqual_FloatFloat_ReturnValue_2) == 0x00002C, "Member 'Chicken_AnimBP_C_ExecuteUbergraph_Chicken_AnimBP::CallFunc_NearlyEqual_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Chicken_AnimBP_C_ExecuteUbergraph_Chicken_AnimBP, CallFunc_EqualEqual_ByteByte_ReturnValue_6) == 0x00002D, "Member 'Chicken_AnimBP_C_ExecuteUbergraph_Chicken_AnimBP::CallFunc_EqualEqual_ByteByte_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(Chicken_AnimBP_C_ExecuteUbergraph_Chicken_AnimBP, CallFunc_NotEqual_ByteByte_ReturnValue_5) == 0x00002E, "Member 'Chicken_AnimBP_C_ExecuteUbergraph_Chicken_AnimBP::CallFunc_NotEqual_ByteByte_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Chicken_AnimBP_C_ExecuteUbergraph_Chicken_AnimBP, CallFunc_BooleanAND_ReturnValue_2) == 0x00002F, "Member 'Chicken_AnimBP_C_ExecuteUbergraph_Chicken_AnimBP::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Chicken_AnimBP_C_ExecuteUbergraph_Chicken_AnimBP, Temp_byte_Variable_3) == 0x000030, "Member 'Chicken_AnimBP_C_ExecuteUbergraph_Chicken_AnimBP::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(Chicken_AnimBP_C_ExecuteUbergraph_Chicken_AnimBP, CallFunc_NotEqual_ByteByte_ReturnValue_6) == 0x000031, "Member 'Chicken_AnimBP_C_ExecuteUbergraph_Chicken_AnimBP::CallFunc_NotEqual_ByteByte_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(Chicken_AnimBP_C_ExecuteUbergraph_Chicken_AnimBP, CallFunc_EqualEqual_ByteByte_ReturnValue_7) == 0x000032, "Member 'Chicken_AnimBP_C_ExecuteUbergraph_Chicken_AnimBP::CallFunc_EqualEqual_ByteByte_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(Chicken_AnimBP_C_ExecuteUbergraph_Chicken_AnimBP, CallFunc_EqualEqual_ByteByte_ReturnValue_8) == 0x000033, "Member 'Chicken_AnimBP_C_ExecuteUbergraph_Chicken_AnimBP::CallFunc_EqualEqual_ByteByte_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(Chicken_AnimBP_C_ExecuteUbergraph_Chicken_AnimBP, CallFunc_NotEqual_ByteByte_ReturnValue_7) == 0x000034, "Member 'Chicken_AnimBP_C_ExecuteUbergraph_Chicken_AnimBP::CallFunc_NotEqual_ByteByte_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(Chicken_AnimBP_C_ExecuteUbergraph_Chicken_AnimBP, CallFunc_EqualEqual_ByteByte_ReturnValue_9) == 0x000035, "Member 'Chicken_AnimBP_C_ExecuteUbergraph_Chicken_AnimBP::CallFunc_EqualEqual_ByteByte_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(Chicken_AnimBP_C_ExecuteUbergraph_Chicken_AnimBP, CallFunc_EqualEqual_ByteByte_ReturnValue_10) == 0x000036, "Member 'Chicken_AnimBP_C_ExecuteUbergraph_Chicken_AnimBP::CallFunc_EqualEqual_ByteByte_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(Chicken_AnimBP_C_ExecuteUbergraph_Chicken_AnimBP, CallFunc_BooleanAND_ReturnValue_3) == 0x000037, "Member 'Chicken_AnimBP_C_ExecuteUbergraph_Chicken_AnimBP::CallFunc_BooleanAND_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Chicken_AnimBP_C_ExecuteUbergraph_Chicken_AnimBP, CallFunc_NotEqual_ByteByte_ReturnValue_8) == 0x000038, "Member 'Chicken_AnimBP_C_ExecuteUbergraph_Chicken_AnimBP::CallFunc_NotEqual_ByteByte_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(Chicken_AnimBP_C_ExecuteUbergraph_Chicken_AnimBP, CallFunc_EqualEqual_ByteByte_ReturnValue_11) == 0x000039, "Member 'Chicken_AnimBP_C_ExecuteUbergraph_Chicken_AnimBP::CallFunc_EqualEqual_ByteByte_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(Chicken_AnimBP_C_ExecuteUbergraph_Chicken_AnimBP, CallFunc_NotEqual_ByteByte_ReturnValue_9) == 0x00003A, "Member 'Chicken_AnimBP_C_ExecuteUbergraph_Chicken_AnimBP::CallFunc_NotEqual_ByteByte_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(Chicken_AnimBP_C_ExecuteUbergraph_Chicken_AnimBP, CallFunc_EqualEqual_ByteByte_ReturnValue_12) == 0x00003B, "Member 'Chicken_AnimBP_C_ExecuteUbergraph_Chicken_AnimBP::CallFunc_EqualEqual_ByteByte_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(Chicken_AnimBP_C_ExecuteUbergraph_Chicken_AnimBP, CallFunc_BooleanAND_ReturnValue_4) == 0x00003C, "Member 'Chicken_AnimBP_C_ExecuteUbergraph_Chicken_AnimBP::CallFunc_BooleanAND_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Chicken_AnimBP_C_ExecuteUbergraph_Chicken_AnimBP, CallFunc_NotEqual_ByteByte_ReturnValue_10) == 0x00003D, "Member 'Chicken_AnimBP_C_ExecuteUbergraph_Chicken_AnimBP::CallFunc_NotEqual_ByteByte_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(Chicken_AnimBP_C_ExecuteUbergraph_Chicken_AnimBP, CallFunc_EqualEqual_ByteByte_ReturnValue_13) == 0x00003E, "Member 'Chicken_AnimBP_C_ExecuteUbergraph_Chicken_AnimBP::CallFunc_EqualEqual_ByteByte_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(Chicken_AnimBP_C_ExecuteUbergraph_Chicken_AnimBP, CallFunc_EqualEqual_ByteByte_ReturnValue_14) == 0x00003F, "Member 'Chicken_AnimBP_C_ExecuteUbergraph_Chicken_AnimBP::CallFunc_EqualEqual_ByteByte_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(Chicken_AnimBP_C_ExecuteUbergraph_Chicken_AnimBP, CallFunc_BooleanOR_ReturnValue) == 0x000040, "Member 'Chicken_AnimBP_C_ExecuteUbergraph_Chicken_AnimBP::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(Chicken_AnimBP_C_ExecuteUbergraph_Chicken_AnimBP, CallFunc_EqualEqual_ByteByte_ReturnValue_15) == 0x000041, "Member 'Chicken_AnimBP_C_ExecuteUbergraph_Chicken_AnimBP::CallFunc_EqualEqual_ByteByte_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(Chicken_AnimBP_C_ExecuteUbergraph_Chicken_AnimBP, CallFunc_RandomFloatInRange_ReturnValue) == 0x000048, "Member 'Chicken_AnimBP_C_ExecuteUbergraph_Chicken_AnimBP::CallFunc_RandomFloatInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(Chicken_AnimBP_C_ExecuteUbergraph_Chicken_AnimBP, CallFunc_RandomFloatInRange_ReturnValue_1) == 0x000050, "Member 'Chicken_AnimBP_C_ExecuteUbergraph_Chicken_AnimBP::CallFunc_RandomFloatInRange_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Chicken_AnimBP_C_ExecuteUbergraph_Chicken_AnimBP, CallFunc_EqualEqual_ByteByte_ReturnValue_16) == 0x000058, "Member 'Chicken_AnimBP_C_ExecuteUbergraph_Chicken_AnimBP::CallFunc_EqualEqual_ByteByte_ReturnValue_16' has a wrong offset!");
static_assert(offsetof(Chicken_AnimBP_C_ExecuteUbergraph_Chicken_AnimBP, CallFunc_EqualEqual_ByteByte_ReturnValue_17) == 0x000059, "Member 'Chicken_AnimBP_C_ExecuteUbergraph_Chicken_AnimBP::CallFunc_EqualEqual_ByteByte_ReturnValue_17' has a wrong offset!");
static_assert(offsetof(Chicken_AnimBP_C_ExecuteUbergraph_Chicken_AnimBP, CallFunc_GetInstanceAssetPlayerTimeFromEndFraction_ReturnValue_3) == 0x00005C, "Member 'Chicken_AnimBP_C_ExecuteUbergraph_Chicken_AnimBP::CallFunc_GetInstanceAssetPlayerTimeFromEndFraction_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Chicken_AnimBP_C_ExecuteUbergraph_Chicken_AnimBP, CallFunc_NearlyEqual_FloatFloat_ReturnValue_3) == 0x000060, "Member 'Chicken_AnimBP_C_ExecuteUbergraph_Chicken_AnimBP::CallFunc_NearlyEqual_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Chicken_AnimBP_C_ExecuteUbergraph_Chicken_AnimBP, K2Node_Event_State) == 0x000061, "Member 'Chicken_AnimBP_C_ExecuteUbergraph_Chicken_AnimBP::K2Node_Event_State' has a wrong offset!");
static_assert(offsetof(Chicken_AnimBP_C_ExecuteUbergraph_Chicken_AnimBP, K2Node_Event_RunState) == 0x000062, "Member 'Chicken_AnimBP_C_ExecuteUbergraph_Chicken_AnimBP::K2Node_Event_RunState' has a wrong offset!");
static_assert(offsetof(Chicken_AnimBP_C_ExecuteUbergraph_Chicken_AnimBP, CallFunc_TryGetPawnOwner_ReturnValue) == 0x000068, "Member 'Chicken_AnimBP_C_ExecuteUbergraph_Chicken_AnimBP::CallFunc_TryGetPawnOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(Chicken_AnimBP_C_ExecuteUbergraph_Chicken_AnimBP, K2Node_DynamicCast_AsBP_Goose) == 0x000070, "Member 'Chicken_AnimBP_C_ExecuteUbergraph_Chicken_AnimBP::K2Node_DynamicCast_AsBP_Goose' has a wrong offset!");
static_assert(offsetof(Chicken_AnimBP_C_ExecuteUbergraph_Chicken_AnimBP, K2Node_DynamicCast_bSuccess) == 0x000078, "Member 'Chicken_AnimBP_C_ExecuteUbergraph_Chicken_AnimBP::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Chicken_AnimBP_C_ExecuteUbergraph_Chicken_AnimBP, CallFunc_EqualEqual_ByteByte_ReturnValue_18) == 0x000079, "Member 'Chicken_AnimBP_C_ExecuteUbergraph_Chicken_AnimBP::CallFunc_EqualEqual_ByteByte_ReturnValue_18' has a wrong offset!");
static_assert(offsetof(Chicken_AnimBP_C_ExecuteUbergraph_Chicken_AnimBP, CallFunc_BooleanAND_ReturnValue_5) == 0x00007A, "Member 'Chicken_AnimBP_C_ExecuteUbergraph_Chicken_AnimBP::CallFunc_BooleanAND_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Chicken_AnimBP_C_ExecuteUbergraph_Chicken_AnimBP, CallFunc_EqualEqual_ByteByte_ReturnValue_19) == 0x00007B, "Member 'Chicken_AnimBP_C_ExecuteUbergraph_Chicken_AnimBP::CallFunc_EqualEqual_ByteByte_ReturnValue_19' has a wrong offset!");
static_assert(offsetof(Chicken_AnimBP_C_ExecuteUbergraph_Chicken_AnimBP, CallFunc_RandomIntegerInRange_ReturnValue) == 0x00007C, "Member 'Chicken_AnimBP_C_ExecuteUbergraph_Chicken_AnimBP::CallFunc_RandomIntegerInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(Chicken_AnimBP_C_ExecuteUbergraph_Chicken_AnimBP, CallFunc_BooleanAND_ReturnValue_6) == 0x000080, "Member 'Chicken_AnimBP_C_ExecuteUbergraph_Chicken_AnimBP::CallFunc_BooleanAND_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(Chicken_AnimBP_C_ExecuteUbergraph_Chicken_AnimBP, K2Node_Select_Default) == 0x000081, "Member 'Chicken_AnimBP_C_ExecuteUbergraph_Chicken_AnimBP::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(Chicken_AnimBP_C_ExecuteUbergraph_Chicken_AnimBP, CallFunc_EqualEqual_ByteByte_ReturnValue_20) == 0x000082, "Member 'Chicken_AnimBP_C_ExecuteUbergraph_Chicken_AnimBP::CallFunc_EqualEqual_ByteByte_ReturnValue_20' has a wrong offset!");
static_assert(offsetof(Chicken_AnimBP_C_ExecuteUbergraph_Chicken_AnimBP, CallFunc_EqualEqual_ByteByte_ReturnValue_21) == 0x000083, "Member 'Chicken_AnimBP_C_ExecuteUbergraph_Chicken_AnimBP::CallFunc_EqualEqual_ByteByte_ReturnValue_21' has a wrong offset!");
static_assert(offsetof(Chicken_AnimBP_C_ExecuteUbergraph_Chicken_AnimBP, CallFunc_Not_PreBool_ReturnValue) == 0x000084, "Member 'Chicken_AnimBP_C_ExecuteUbergraph_Chicken_AnimBP::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(Chicken_AnimBP_C_ExecuteUbergraph_Chicken_AnimBP, CallFunc_Not_PreBool_ReturnValue_1) == 0x000085, "Member 'Chicken_AnimBP_C_ExecuteUbergraph_Chicken_AnimBP::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Chicken_AnimBP_C_ExecuteUbergraph_Chicken_AnimBP, CallFunc_BooleanOR_ReturnValue_1) == 0x000086, "Member 'Chicken_AnimBP_C_ExecuteUbergraph_Chicken_AnimBP::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Chicken_AnimBP_C_ExecuteUbergraph_Chicken_AnimBP, CallFunc_NearlyEqual_FloatFloat_A_ImplicitCast) == 0x000088, "Member 'Chicken_AnimBP_C_ExecuteUbergraph_Chicken_AnimBP::CallFunc_NearlyEqual_FloatFloat_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Chicken_AnimBP_C_ExecuteUbergraph_Chicken_AnimBP, CallFunc_NearlyEqual_FloatFloat_A_ImplicitCast_1) == 0x000090, "Member 'Chicken_AnimBP_C_ExecuteUbergraph_Chicken_AnimBP::CallFunc_NearlyEqual_FloatFloat_A_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(Chicken_AnimBP_C_ExecuteUbergraph_Chicken_AnimBP, CallFunc_NearlyEqual_FloatFloat_A_ImplicitCast_2) == 0x000098, "Member 'Chicken_AnimBP_C_ExecuteUbergraph_Chicken_AnimBP::CallFunc_NearlyEqual_FloatFloat_A_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(Chicken_AnimBP_C_ExecuteUbergraph_Chicken_AnimBP, CallFunc_NearlyEqual_FloatFloat_A_ImplicitCast_3) == 0x0000A0, "Member 'Chicken_AnimBP_C_ExecuteUbergraph_Chicken_AnimBP::CallFunc_NearlyEqual_FloatFloat_A_ImplicitCast_3' has a wrong offset!");

// Function Chicken_AnimBP.Chicken_AnimBP_C.GetMovementComponent
// 0x0018 (0x0018 - 0x0000)
struct Chicken_AnimBP_C_GetMovementComponent final
{
public:
	class UCharacterMovementComponent*            ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UCharacterMovementComponent*            K2Node_DynamicCast_AsCharacter_Movement_Component; // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Chicken_AnimBP_C_GetMovementComponent) == 0x000008, "Wrong alignment on Chicken_AnimBP_C_GetMovementComponent");
static_assert(sizeof(Chicken_AnimBP_C_GetMovementComponent) == 0x000018, "Wrong size on Chicken_AnimBP_C_GetMovementComponent");
static_assert(offsetof(Chicken_AnimBP_C_GetMovementComponent, ReturnValue) == 0x000000, "Member 'Chicken_AnimBP_C_GetMovementComponent::ReturnValue' has a wrong offset!");
static_assert(offsetof(Chicken_AnimBP_C_GetMovementComponent, K2Node_DynamicCast_AsCharacter_Movement_Component) == 0x000008, "Member 'Chicken_AnimBP_C_GetMovementComponent::K2Node_DynamicCast_AsCharacter_Movement_Component' has a wrong offset!");
static_assert(offsetof(Chicken_AnimBP_C_GetMovementComponent, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'Chicken_AnimBP_C_GetMovementComponent::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function Chicken_AnimBP.Chicken_AnimBP_C.Overlay
// 0x0010 (0x0010 - 0x0000)
struct Chicken_AnimBP_C_Overlay final
{
public:
	struct FPoseLink                              Overlay_0;                                         // 0x0000(0x0010)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(Chicken_AnimBP_C_Overlay) == 0x000008, "Wrong alignment on Chicken_AnimBP_C_Overlay");
static_assert(sizeof(Chicken_AnimBP_C_Overlay) == 0x000010, "Wrong size on Chicken_AnimBP_C_Overlay");
static_assert(offsetof(Chicken_AnimBP_C_Overlay, Overlay_0) == 0x000000, "Member 'Chicken_AnimBP_C_Overlay::Overlay_0' has a wrong offset!");

// Function Chicken_AnimBP.Chicken_AnimBP_C.ResetIdleState
// 0x0020 (0x0020 - 0x0000)
struct Chicken_AnimBP_C_ResetIdleState final
{
public:
	struct FAnimUpdateContext                     Context;                                           // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FAnimNodeReference                     Node;                                              // 0x0010(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)
};
static_assert(alignof(Chicken_AnimBP_C_ResetIdleState) == 0x000008, "Wrong alignment on Chicken_AnimBP_C_ResetIdleState");
static_assert(sizeof(Chicken_AnimBP_C_ResetIdleState) == 0x000020, "Wrong size on Chicken_AnimBP_C_ResetIdleState");
static_assert(offsetof(Chicken_AnimBP_C_ResetIdleState, Context) == 0x000000, "Member 'Chicken_AnimBP_C_ResetIdleState::Context' has a wrong offset!");
static_assert(offsetof(Chicken_AnimBP_C_ResetIdleState, Node) == 0x000010, "Member 'Chicken_AnimBP_C_ResetIdleState::Node' has a wrong offset!");

// Function Chicken_AnimBP.Chicken_AnimBP_C.Update Pawn Info
// 0x0010 (0x0010 - 0x0000)
struct Chicken_AnimBP_C_Update_Pawn_Info final
{
public:
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue;       // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_VSize_ReturnValue;                        // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Chicken_AnimBP_C_Update_Pawn_Info) == 0x000008, "Wrong alignment on Chicken_AnimBP_C_Update_Pawn_Info");
static_assert(sizeof(Chicken_AnimBP_C_Update_Pawn_Info) == 0x000010, "Wrong size on Chicken_AnimBP_C_Update_Pawn_Info");
static_assert(offsetof(Chicken_AnimBP_C_Update_Pawn_Info, CallFunc_LessEqual_DoubleDouble_ReturnValue) == 0x000000, "Member 'Chicken_AnimBP_C_Update_Pawn_Info::CallFunc_LessEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Chicken_AnimBP_C_Update_Pawn_Info, CallFunc_VSize_ReturnValue) == 0x000008, "Member 'Chicken_AnimBP_C_Update_Pawn_Info::CallFunc_VSize_ReturnValue' has a wrong offset!");

// Function Chicken_AnimBP.Chicken_AnimBP_C.UpdateLayerData
// 0x00D0 (0x00D0 - 0x0000)
struct Chicken_AnimBP_C_UpdateLayerData final
{
public:
	float                                         CallFunc_GetCurveValue_ReturnValue;                // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetCurveValue_ReturnValue_1;              // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetCurveValue_ReturnValue_2;              // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetCurveValue_ReturnValue_3;              // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetCurveValue_ReturnValue_4;              // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetCurveValue_ReturnValue_5;              // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetCurveValue_ReturnValue_6;              // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetCurveValue_ReturnValue_7;              // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetCurveValue_ReturnValue_8;              // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FFloor_ReturnValue;                       // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetCurveValue_ReturnValue_9;              // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue;                         // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetCurveValue_ReturnValue_10;             // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetCurveValue_ReturnValue_11;             // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetCurveValue_ReturnValue_12;             // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Lerp_ReturnValue_1;                       // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FFloor_ReturnValue_1;                     // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue_1;           // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_VariableSet_Leg_R_Add_ImplicitCast;         // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_VariableSet_Leg_L_Add_ImplicitCast;         // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_VariableSet_Head_Add_ImplicitCast;          // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_VariableSet_Spine_Add_ImplicitCast;         // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_VariableSet_Equipping_Layer_ImplicitCast;   // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_VariableSet_Hand_L_ImplicitCast;            // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_VariableSet_Hand_R_ImplicitCast;            // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_VariableSet_Leg_R_LS_ImplicitCast;          // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_B_ImplicitCast;                      // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_Alpha_ImplicitCast;                  // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_B_ImplicitCast_1;                    // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_Alpha_ImplicitCast_1;                // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_VariableSet_Leg_L_LS_ImplicitCast;          // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Chicken_AnimBP_C_UpdateLayerData) == 0x000008, "Wrong alignment on Chicken_AnimBP_C_UpdateLayerData");
static_assert(sizeof(Chicken_AnimBP_C_UpdateLayerData) == 0x0000D0, "Wrong size on Chicken_AnimBP_C_UpdateLayerData");
static_assert(offsetof(Chicken_AnimBP_C_UpdateLayerData, CallFunc_GetCurveValue_ReturnValue) == 0x000000, "Member 'Chicken_AnimBP_C_UpdateLayerData::CallFunc_GetCurveValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(Chicken_AnimBP_C_UpdateLayerData, CallFunc_GetCurveValue_ReturnValue_1) == 0x000004, "Member 'Chicken_AnimBP_C_UpdateLayerData::CallFunc_GetCurveValue_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Chicken_AnimBP_C_UpdateLayerData, CallFunc_GetCurveValue_ReturnValue_2) == 0x000008, "Member 'Chicken_AnimBP_C_UpdateLayerData::CallFunc_GetCurveValue_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Chicken_AnimBP_C_UpdateLayerData, CallFunc_GetCurveValue_ReturnValue_3) == 0x00000C, "Member 'Chicken_AnimBP_C_UpdateLayerData::CallFunc_GetCurveValue_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Chicken_AnimBP_C_UpdateLayerData, CallFunc_GetCurveValue_ReturnValue_4) == 0x000010, "Member 'Chicken_AnimBP_C_UpdateLayerData::CallFunc_GetCurveValue_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Chicken_AnimBP_C_UpdateLayerData, CallFunc_GetCurveValue_ReturnValue_5) == 0x000014, "Member 'Chicken_AnimBP_C_UpdateLayerData::CallFunc_GetCurveValue_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Chicken_AnimBP_C_UpdateLayerData, CallFunc_GetCurveValue_ReturnValue_6) == 0x000018, "Member 'Chicken_AnimBP_C_UpdateLayerData::CallFunc_GetCurveValue_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(Chicken_AnimBP_C_UpdateLayerData, CallFunc_GetCurveValue_ReturnValue_7) == 0x00001C, "Member 'Chicken_AnimBP_C_UpdateLayerData::CallFunc_GetCurveValue_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(Chicken_AnimBP_C_UpdateLayerData, CallFunc_GetCurveValue_ReturnValue_8) == 0x000020, "Member 'Chicken_AnimBP_C_UpdateLayerData::CallFunc_GetCurveValue_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(Chicken_AnimBP_C_UpdateLayerData, CallFunc_FFloor_ReturnValue) == 0x000024, "Member 'Chicken_AnimBP_C_UpdateLayerData::CallFunc_FFloor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Chicken_AnimBP_C_UpdateLayerData, CallFunc_GetCurveValue_ReturnValue_9) == 0x000028, "Member 'Chicken_AnimBP_C_UpdateLayerData::CallFunc_GetCurveValue_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(Chicken_AnimBP_C_UpdateLayerData, CallFunc_Subtract_IntInt_ReturnValue) == 0x00002C, "Member 'Chicken_AnimBP_C_UpdateLayerData::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Chicken_AnimBP_C_UpdateLayerData, CallFunc_Lerp_ReturnValue) == 0x000030, "Member 'Chicken_AnimBP_C_UpdateLayerData::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Chicken_AnimBP_C_UpdateLayerData, CallFunc_Conv_IntToDouble_ReturnValue) == 0x000038, "Member 'Chicken_AnimBP_C_UpdateLayerData::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Chicken_AnimBP_C_UpdateLayerData, CallFunc_GetCurveValue_ReturnValue_10) == 0x000040, "Member 'Chicken_AnimBP_C_UpdateLayerData::CallFunc_GetCurveValue_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(Chicken_AnimBP_C_UpdateLayerData, CallFunc_GetCurveValue_ReturnValue_11) == 0x000044, "Member 'Chicken_AnimBP_C_UpdateLayerData::CallFunc_GetCurveValue_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(Chicken_AnimBP_C_UpdateLayerData, CallFunc_GetCurveValue_ReturnValue_12) == 0x000048, "Member 'Chicken_AnimBP_C_UpdateLayerData::CallFunc_GetCurveValue_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(Chicken_AnimBP_C_UpdateLayerData, CallFunc_Lerp_ReturnValue_1) == 0x000050, "Member 'Chicken_AnimBP_C_UpdateLayerData::CallFunc_Lerp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Chicken_AnimBP_C_UpdateLayerData, CallFunc_FFloor_ReturnValue_1) == 0x000058, "Member 'Chicken_AnimBP_C_UpdateLayerData::CallFunc_FFloor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Chicken_AnimBP_C_UpdateLayerData, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x00005C, "Member 'Chicken_AnimBP_C_UpdateLayerData::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Chicken_AnimBP_C_UpdateLayerData, CallFunc_Conv_IntToDouble_ReturnValue_1) == 0x000060, "Member 'Chicken_AnimBP_C_UpdateLayerData::CallFunc_Conv_IntToDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Chicken_AnimBP_C_UpdateLayerData, K2Node_VariableSet_Leg_R_Add_ImplicitCast) == 0x000068, "Member 'Chicken_AnimBP_C_UpdateLayerData::K2Node_VariableSet_Leg_R_Add_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Chicken_AnimBP_C_UpdateLayerData, K2Node_VariableSet_Leg_L_Add_ImplicitCast) == 0x000070, "Member 'Chicken_AnimBP_C_UpdateLayerData::K2Node_VariableSet_Leg_L_Add_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Chicken_AnimBP_C_UpdateLayerData, K2Node_VariableSet_Head_Add_ImplicitCast) == 0x000078, "Member 'Chicken_AnimBP_C_UpdateLayerData::K2Node_VariableSet_Head_Add_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Chicken_AnimBP_C_UpdateLayerData, K2Node_VariableSet_Spine_Add_ImplicitCast) == 0x000080, "Member 'Chicken_AnimBP_C_UpdateLayerData::K2Node_VariableSet_Spine_Add_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Chicken_AnimBP_C_UpdateLayerData, K2Node_VariableSet_Equipping_Layer_ImplicitCast) == 0x000088, "Member 'Chicken_AnimBP_C_UpdateLayerData::K2Node_VariableSet_Equipping_Layer_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Chicken_AnimBP_C_UpdateLayerData, K2Node_VariableSet_Hand_L_ImplicitCast) == 0x000090, "Member 'Chicken_AnimBP_C_UpdateLayerData::K2Node_VariableSet_Hand_L_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Chicken_AnimBP_C_UpdateLayerData, K2Node_VariableSet_Hand_R_ImplicitCast) == 0x000098, "Member 'Chicken_AnimBP_C_UpdateLayerData::K2Node_VariableSet_Hand_R_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Chicken_AnimBP_C_UpdateLayerData, K2Node_VariableSet_Leg_R_LS_ImplicitCast) == 0x0000A0, "Member 'Chicken_AnimBP_C_UpdateLayerData::K2Node_VariableSet_Leg_R_LS_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Chicken_AnimBP_C_UpdateLayerData, CallFunc_Lerp_B_ImplicitCast) == 0x0000A8, "Member 'Chicken_AnimBP_C_UpdateLayerData::CallFunc_Lerp_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Chicken_AnimBP_C_UpdateLayerData, CallFunc_Lerp_Alpha_ImplicitCast) == 0x0000B0, "Member 'Chicken_AnimBP_C_UpdateLayerData::CallFunc_Lerp_Alpha_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Chicken_AnimBP_C_UpdateLayerData, CallFunc_Lerp_B_ImplicitCast_1) == 0x0000B8, "Member 'Chicken_AnimBP_C_UpdateLayerData::CallFunc_Lerp_B_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(Chicken_AnimBP_C_UpdateLayerData, CallFunc_Lerp_Alpha_ImplicitCast_1) == 0x0000C0, "Member 'Chicken_AnimBP_C_UpdateLayerData::CallFunc_Lerp_Alpha_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(Chicken_AnimBP_C_UpdateLayerData, K2Node_VariableSet_Leg_L_LS_ImplicitCast) == 0x0000C8, "Member 'Chicken_AnimBP_C_UpdateLayerData::K2Node_VariableSet_Leg_L_LS_ImplicitCast' has a wrong offset!");

// Function Chicken_AnimBP.Chicken_AnimBP_C.UpdatePlayerStateData
// 0x0028 (0x0028 - 0x0000)
struct Chicken_AnimBP_C_UpdatePlayerStateData final
{
public:
	class UCharacterMovementComponent*            CallFunc_GetMovementComponent_ReturnValue;         // 0x0000(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Chicken_AnimBP_C_UpdatePlayerStateData) == 0x000008, "Wrong alignment on Chicken_AnimBP_C_UpdatePlayerStateData");
static_assert(sizeof(Chicken_AnimBP_C_UpdatePlayerStateData) == 0x000028, "Wrong size on Chicken_AnimBP_C_UpdatePlayerStateData");
static_assert(offsetof(Chicken_AnimBP_C_UpdatePlayerStateData, CallFunc_GetMovementComponent_ReturnValue) == 0x000000, "Member 'Chicken_AnimBP_C_UpdatePlayerStateData::CallFunc_GetMovementComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(Chicken_AnimBP_C_UpdatePlayerStateData, CallFunc_BreakVector_X) == 0x000008, "Member 'Chicken_AnimBP_C_UpdatePlayerStateData::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(Chicken_AnimBP_C_UpdatePlayerStateData, CallFunc_BreakVector_Y) == 0x000010, "Member 'Chicken_AnimBP_C_UpdatePlayerStateData::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(Chicken_AnimBP_C_UpdatePlayerStateData, CallFunc_BreakVector_Z) == 0x000018, "Member 'Chicken_AnimBP_C_UpdatePlayerStateData::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(Chicken_AnimBP_C_UpdatePlayerStateData, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000020, "Member 'Chicken_AnimBP_C_UpdatePlayerStateData::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(Chicken_AnimBP_C_UpdatePlayerStateData, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000021, "Member 'Chicken_AnimBP_C_UpdatePlayerStateData::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");

}

