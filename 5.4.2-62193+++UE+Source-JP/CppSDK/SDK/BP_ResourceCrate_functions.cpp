#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_ResourceCrate

#include "Basic.hpp"

#include "BP_ResourceCrate_classes.hpp"
#include "BP_ResourceCrate_parameters.hpp"


namespace SDK
{

// Function BP_ResourceCrate.BP_ResourceCrate_C.Destroy Incoming Resource Crate
// (BlueprintCallable, BlueprintEvent)

void ABP_ResourceCrate_C::Destroy_Incoming_Resource_Crate()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ResourceCrate_C", "Destroy Incoming Resource Crate");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ResourceCrate.BP_ResourceCrate_C.DisableCollisionAndHide
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_ResourceCrate_C::DisableCollisionAndHide()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ResourceCrate_C", "DisableCollisionAndHide");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ResourceCrate.BP_ResourceCrate_C.EnableCollisionAndShow
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_ResourceCrate_C::EnableCollisionAndShow()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ResourceCrate_C", "EnableCollisionAndShow");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ResourceCrate.BP_ResourceCrate_C.EnableTrail
// (BlueprintCallable, BlueprintEvent)

void ABP_ResourceCrate_C::EnableTrail()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ResourceCrate_C", "EnableTrail");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ResourceCrate.BP_ResourceCrate_C.ExecuteUbergraph_BP_ResourceCrate
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_ResourceCrate_C::ExecuteUbergraph_BP_ResourceCrate(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ResourceCrate_C", "ExecuteUbergraph_BP_ResourceCrate");

	Params::BP_ResourceCrate_C_ExecuteUbergraph_BP_ResourceCrate Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ResourceCrate.BP_ResourceCrate_C.ForceOffscreenIndicatorOn
// (BlueprintCallable, BlueprintEvent)

void ABP_ResourceCrate_C::ForceOffscreenIndicatorOn()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ResourceCrate_C", "ForceOffscreenIndicatorOn");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ResourceCrate.BP_ResourceCrate_C.LaunchCrate
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_ResourceCrate_C::LaunchCrate()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ResourceCrate_C", "LaunchCrate");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ResourceCrate.BP_ResourceCrate_C.Multi_Spawn Hand In Cosmetics
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)

void ABP_ResourceCrate_C::Multi_Spawn_Hand_In_Cosmetics()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ResourceCrate_C", "Multi_Spawn Hand In Cosmetics");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ResourceCrate.BP_ResourceCrate_C.Multi_Throw
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          Velocity                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_ResourceCrate_C::Multi_Throw(const struct FVector& Velocity)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ResourceCrate_C", "Multi_Throw");

	Params::BP_ResourceCrate_C_Multi_Throw Parms{};

	Parms.Velocity = std::move(Velocity);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ResourceCrate.BP_ResourceCrate_C.OnDropped
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_ResourceCrate_C::OnDropped()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ResourceCrate_C", "OnDropped");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ResourceCrate.BP_ResourceCrate_C.OnGrabbed
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_ResourceCrate_C::OnGrabbed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ResourceCrate_C", "OnGrabbed");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ResourceCrate.BP_ResourceCrate_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ABP_ResourceCrate_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ResourceCrate_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ResourceCrate.BP_ResourceCrate_C.StopTrailParticle
// (BlueprintCallable, BlueprintEvent)

void ABP_ResourceCrate_C::StopTrailParticle()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ResourceCrate_C", "StopTrailParticle");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ResourceCrate.BP_ResourceCrate_C.ToggleReceptacleVisual
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Visible                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class ACharacter*                       Character                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_ResourceCrate_C::ToggleReceptacleVisual(bool Visible, class ACharacter* Character)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ResourceCrate_C", "ToggleReceptacleVisual");

	Params::BP_ResourceCrate_C_ToggleReceptacleVisual Parms{};

	Parms.Visible = Visible;
	Parms.Character = Character;

	UObject::ProcessEvent(Func, &Parms);
}

}

