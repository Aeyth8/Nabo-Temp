#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Winscreen_CharacterWorldSlot

#include "Basic.hpp"

#include "GameplayTags_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "JP_structs.hpp"


namespace SDK::Params
{

// Function BP_Winscreen_CharacterWorldSlot.BP_Winscreen_CharacterWorldSlot_C.EquipUniqueItem
// 0x0028 (0x0028 - 0x0000)
struct BP_Winscreen_CharacterWorldSlot_C_EquipUniqueItem final
{
public:
	TSoftObjectPtr<class UItemSkinDefinition>     CallFunc_GetUniqueItemSkinDefinitionForNeighbor_ReturnValue; // 0x0000(0x0028)(UObjectWrapper, HasGetValueTypeHash)
};
static_assert(alignof(BP_Winscreen_CharacterWorldSlot_C_EquipUniqueItem) == 0x000008, "Wrong alignment on BP_Winscreen_CharacterWorldSlot_C_EquipUniqueItem");
static_assert(sizeof(BP_Winscreen_CharacterWorldSlot_C_EquipUniqueItem) == 0x000028, "Wrong size on BP_Winscreen_CharacterWorldSlot_C_EquipUniqueItem");
static_assert(offsetof(BP_Winscreen_CharacterWorldSlot_C_EquipUniqueItem, CallFunc_GetUniqueItemSkinDefinitionForNeighbor_ReturnValue) == 0x000000, "Member 'BP_Winscreen_CharacterWorldSlot_C_EquipUniqueItem::CallFunc_GetUniqueItemSkinDefinitionForNeighbor_ReturnValue' has a wrong offset!");

// Function BP_Winscreen_CharacterWorldSlot.BP_Winscreen_CharacterWorldSlot_C.ExecuteUbergraph_BP_Winscreen_CharacterWorldSlot
// 0x0120 (0x0120 - 0x0000)
struct BP_Winscreen_CharacterWorldSlot_C_ExecuteUbergraph_BP_Winscreen_CharacterWorldSlot final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_IsMicrophoneOn;                 // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(bool IsMicrophoneOn)>          K2Node_CreateDelegate_OutputDelegate;              // 0x0008(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APlayerStateJP*                         K2Node_CustomEvent_PlayerState;                    // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           K2Node_CustomEvent_NeighborIdentifier;             // 0x0020(0x0008)(NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_28[0x8];                                       // 0x0028(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x0030(0x0060)(ConstParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TSoftObjectPtr<class UNeighborSkinDefinition> CallFunc_GetSkinDefinitionForNeighbor_ReturnValue; // 0x0090(0x0028)(UObjectWrapper, HasGetValueTypeHash)
	class UObject*                                CallFunc_LoadAsset_Blocking_ReturnValue;           // 0x00B8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APlayerStateJP_MatchBP_C*               K2Node_DynamicCast_AsPlayer_State_JP_Match_BP;     // 0x00C0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C9[0x7];                                       // 0x00C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UNeighborSkinDefinition*                K2Node_DynamicCast_AsNeighbor_Skin_Definition;     // 0x00D0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D9[0x7];                                       // 0x00D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_LoadClassAsset_Blocking_ReturnValue;      // 0x00E0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 K2Node_ClassDynamicCast_AsActor;                   // 0x00E8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ClassDynamicCast_bSuccess;                  // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F1[0x7];                                       // 0x00F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x00F8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_FinishSpawningActor_ReturnValue;          // 0x0100(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_NeighborPreviewActor_C*             K2Node_DynamicCast_AsBP_Neighbor_Preview_Actor;    // 0x0108(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Winscreen_CharacterWorldSlot_C_ExecuteUbergraph_BP_Winscreen_CharacterWorldSlot) == 0x000010, "Wrong alignment on BP_Winscreen_CharacterWorldSlot_C_ExecuteUbergraph_BP_Winscreen_CharacterWorldSlot");
static_assert(sizeof(BP_Winscreen_CharacterWorldSlot_C_ExecuteUbergraph_BP_Winscreen_CharacterWorldSlot) == 0x000120, "Wrong size on BP_Winscreen_CharacterWorldSlot_C_ExecuteUbergraph_BP_Winscreen_CharacterWorldSlot");
static_assert(offsetof(BP_Winscreen_CharacterWorldSlot_C_ExecuteUbergraph_BP_Winscreen_CharacterWorldSlot, EntryPoint) == 0x000000, "Member 'BP_Winscreen_CharacterWorldSlot_C_ExecuteUbergraph_BP_Winscreen_CharacterWorldSlot::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_Winscreen_CharacterWorldSlot_C_ExecuteUbergraph_BP_Winscreen_CharacterWorldSlot, K2Node_CustomEvent_IsMicrophoneOn) == 0x000004, "Member 'BP_Winscreen_CharacterWorldSlot_C_ExecuteUbergraph_BP_Winscreen_CharacterWorldSlot::K2Node_CustomEvent_IsMicrophoneOn' has a wrong offset!");
static_assert(offsetof(BP_Winscreen_CharacterWorldSlot_C_ExecuteUbergraph_BP_Winscreen_CharacterWorldSlot, K2Node_CreateDelegate_OutputDelegate) == 0x000008, "Member 'BP_Winscreen_CharacterWorldSlot_C_ExecuteUbergraph_BP_Winscreen_CharacterWorldSlot::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_Winscreen_CharacterWorldSlot_C_ExecuteUbergraph_BP_Winscreen_CharacterWorldSlot, K2Node_CustomEvent_PlayerState) == 0x000018, "Member 'BP_Winscreen_CharacterWorldSlot_C_ExecuteUbergraph_BP_Winscreen_CharacterWorldSlot::K2Node_CustomEvent_PlayerState' has a wrong offset!");
static_assert(offsetof(BP_Winscreen_CharacterWorldSlot_C_ExecuteUbergraph_BP_Winscreen_CharacterWorldSlot, K2Node_CustomEvent_NeighborIdentifier) == 0x000020, "Member 'BP_Winscreen_CharacterWorldSlot_C_ExecuteUbergraph_BP_Winscreen_CharacterWorldSlot::K2Node_CustomEvent_NeighborIdentifier' has a wrong offset!");
static_assert(offsetof(BP_Winscreen_CharacterWorldSlot_C_ExecuteUbergraph_BP_Winscreen_CharacterWorldSlot, CallFunc_GetTransform_ReturnValue) == 0x000030, "Member 'BP_Winscreen_CharacterWorldSlot_C_ExecuteUbergraph_BP_Winscreen_CharacterWorldSlot::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Winscreen_CharacterWorldSlot_C_ExecuteUbergraph_BP_Winscreen_CharacterWorldSlot, CallFunc_GetSkinDefinitionForNeighbor_ReturnValue) == 0x000090, "Member 'BP_Winscreen_CharacterWorldSlot_C_ExecuteUbergraph_BP_Winscreen_CharacterWorldSlot::CallFunc_GetSkinDefinitionForNeighbor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Winscreen_CharacterWorldSlot_C_ExecuteUbergraph_BP_Winscreen_CharacterWorldSlot, CallFunc_LoadAsset_Blocking_ReturnValue) == 0x0000B8, "Member 'BP_Winscreen_CharacterWorldSlot_C_ExecuteUbergraph_BP_Winscreen_CharacterWorldSlot::CallFunc_LoadAsset_Blocking_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Winscreen_CharacterWorldSlot_C_ExecuteUbergraph_BP_Winscreen_CharacterWorldSlot, K2Node_DynamicCast_AsPlayer_State_JP_Match_BP) == 0x0000C0, "Member 'BP_Winscreen_CharacterWorldSlot_C_ExecuteUbergraph_BP_Winscreen_CharacterWorldSlot::K2Node_DynamicCast_AsPlayer_State_JP_Match_BP' has a wrong offset!");
static_assert(offsetof(BP_Winscreen_CharacterWorldSlot_C_ExecuteUbergraph_BP_Winscreen_CharacterWorldSlot, K2Node_DynamicCast_bSuccess) == 0x0000C8, "Member 'BP_Winscreen_CharacterWorldSlot_C_ExecuteUbergraph_BP_Winscreen_CharacterWorldSlot::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_Winscreen_CharacterWorldSlot_C_ExecuteUbergraph_BP_Winscreen_CharacterWorldSlot, K2Node_DynamicCast_AsNeighbor_Skin_Definition) == 0x0000D0, "Member 'BP_Winscreen_CharacterWorldSlot_C_ExecuteUbergraph_BP_Winscreen_CharacterWorldSlot::K2Node_DynamicCast_AsNeighbor_Skin_Definition' has a wrong offset!");
static_assert(offsetof(BP_Winscreen_CharacterWorldSlot_C_ExecuteUbergraph_BP_Winscreen_CharacterWorldSlot, K2Node_DynamicCast_bSuccess_1) == 0x0000D8, "Member 'BP_Winscreen_CharacterWorldSlot_C_ExecuteUbergraph_BP_Winscreen_CharacterWorldSlot::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_Winscreen_CharacterWorldSlot_C_ExecuteUbergraph_BP_Winscreen_CharacterWorldSlot, CallFunc_LoadClassAsset_Blocking_ReturnValue) == 0x0000E0, "Member 'BP_Winscreen_CharacterWorldSlot_C_ExecuteUbergraph_BP_Winscreen_CharacterWorldSlot::CallFunc_LoadClassAsset_Blocking_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Winscreen_CharacterWorldSlot_C_ExecuteUbergraph_BP_Winscreen_CharacterWorldSlot, K2Node_ClassDynamicCast_AsActor) == 0x0000E8, "Member 'BP_Winscreen_CharacterWorldSlot_C_ExecuteUbergraph_BP_Winscreen_CharacterWorldSlot::K2Node_ClassDynamicCast_AsActor' has a wrong offset!");
static_assert(offsetof(BP_Winscreen_CharacterWorldSlot_C_ExecuteUbergraph_BP_Winscreen_CharacterWorldSlot, K2Node_ClassDynamicCast_bSuccess) == 0x0000F0, "Member 'BP_Winscreen_CharacterWorldSlot_C_ExecuteUbergraph_BP_Winscreen_CharacterWorldSlot::K2Node_ClassDynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_Winscreen_CharacterWorldSlot_C_ExecuteUbergraph_BP_Winscreen_CharacterWorldSlot, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x0000F8, "Member 'BP_Winscreen_CharacterWorldSlot_C_ExecuteUbergraph_BP_Winscreen_CharacterWorldSlot::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Winscreen_CharacterWorldSlot_C_ExecuteUbergraph_BP_Winscreen_CharacterWorldSlot, CallFunc_FinishSpawningActor_ReturnValue) == 0x000100, "Member 'BP_Winscreen_CharacterWorldSlot_C_ExecuteUbergraph_BP_Winscreen_CharacterWorldSlot::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Winscreen_CharacterWorldSlot_C_ExecuteUbergraph_BP_Winscreen_CharacterWorldSlot, K2Node_DynamicCast_AsBP_Neighbor_Preview_Actor) == 0x000108, "Member 'BP_Winscreen_CharacterWorldSlot_C_ExecuteUbergraph_BP_Winscreen_CharacterWorldSlot::K2Node_DynamicCast_AsBP_Neighbor_Preview_Actor' has a wrong offset!");
static_assert(offsetof(BP_Winscreen_CharacterWorldSlot_C_ExecuteUbergraph_BP_Winscreen_CharacterWorldSlot, K2Node_DynamicCast_bSuccess_2) == 0x000110, "Member 'BP_Winscreen_CharacterWorldSlot_C_ExecuteUbergraph_BP_Winscreen_CharacterWorldSlot::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");

// Function BP_Winscreen_CharacterWorldSlot.BP_Winscreen_CharacterWorldSlot_C.GetNeighborIcon
// 0x0070 (0x0070 - 0x0000)
struct BP_Winscreen_CharacterWorldSlot_C_GetNeighborIcon final
{
public:
	TSoftObjectPtr<class UTexture2D>              Icon;                                              // 0x0000(0x0028)(Parm, OutParm, UObjectWrapper, HasGetValueTypeHash)
	bool                                          CallFunc_TryGetNeighborDefinition_Succeeded;       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UNeighborDefinition>     CallFunc_TryGetNeighborDefinition_ReturnValue;     // 0x0030(0x0028)(UObjectWrapper, HasGetValueTypeHash)
	class UObject*                                CallFunc_LoadAsset_Blocking_ReturnValue;           // 0x0058(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UNeighborDefinition*                    K2Node_DynamicCast_AsNeighbor_Definition;          // 0x0060(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Winscreen_CharacterWorldSlot_C_GetNeighborIcon) == 0x000008, "Wrong alignment on BP_Winscreen_CharacterWorldSlot_C_GetNeighborIcon");
static_assert(sizeof(BP_Winscreen_CharacterWorldSlot_C_GetNeighborIcon) == 0x000070, "Wrong size on BP_Winscreen_CharacterWorldSlot_C_GetNeighborIcon");
static_assert(offsetof(BP_Winscreen_CharacterWorldSlot_C_GetNeighborIcon, Icon) == 0x000000, "Member 'BP_Winscreen_CharacterWorldSlot_C_GetNeighborIcon::Icon' has a wrong offset!");
static_assert(offsetof(BP_Winscreen_CharacterWorldSlot_C_GetNeighborIcon, CallFunc_TryGetNeighborDefinition_Succeeded) == 0x000028, "Member 'BP_Winscreen_CharacterWorldSlot_C_GetNeighborIcon::CallFunc_TryGetNeighborDefinition_Succeeded' has a wrong offset!");
static_assert(offsetof(BP_Winscreen_CharacterWorldSlot_C_GetNeighborIcon, CallFunc_TryGetNeighborDefinition_ReturnValue) == 0x000030, "Member 'BP_Winscreen_CharacterWorldSlot_C_GetNeighborIcon::CallFunc_TryGetNeighborDefinition_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Winscreen_CharacterWorldSlot_C_GetNeighborIcon, CallFunc_LoadAsset_Blocking_ReturnValue) == 0x000058, "Member 'BP_Winscreen_CharacterWorldSlot_C_GetNeighborIcon::CallFunc_LoadAsset_Blocking_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Winscreen_CharacterWorldSlot_C_GetNeighborIcon, K2Node_DynamicCast_AsNeighbor_Definition) == 0x000060, "Member 'BP_Winscreen_CharacterWorldSlot_C_GetNeighborIcon::K2Node_DynamicCast_AsNeighbor_Definition' has a wrong offset!");
static_assert(offsetof(BP_Winscreen_CharacterWorldSlot_C_GetNeighborIcon, K2Node_DynamicCast_bSuccess) == 0x000068, "Member 'BP_Winscreen_CharacterWorldSlot_C_GetNeighborIcon::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BP_Winscreen_CharacterWorldSlot.BP_Winscreen_CharacterWorldSlot_C.MicrophoneOnStateChanged
// 0x0001 (0x0001 - 0x0000)
struct BP_Winscreen_CharacterWorldSlot_C_MicrophoneOnStateChanged final
{
public:
	bool                                          IsMicrophoneOn;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Winscreen_CharacterWorldSlot_C_MicrophoneOnStateChanged) == 0x000001, "Wrong alignment on BP_Winscreen_CharacterWorldSlot_C_MicrophoneOnStateChanged");
static_assert(sizeof(BP_Winscreen_CharacterWorldSlot_C_MicrophoneOnStateChanged) == 0x000001, "Wrong size on BP_Winscreen_CharacterWorldSlot_C_MicrophoneOnStateChanged");
static_assert(offsetof(BP_Winscreen_CharacterWorldSlot_C_MicrophoneOnStateChanged, IsMicrophoneOn) == 0x000000, "Member 'BP_Winscreen_CharacterWorldSlot_C_MicrophoneOnStateChanged::IsMicrophoneOn' has a wrong offset!");

// Function BP_Winscreen_CharacterWorldSlot.BP_Winscreen_CharacterWorldSlot_C.PlayAnimation
// 0x0038 (0x0038 - 0x0000)
struct BP_Winscreen_CharacterWorldSlot_C_PlayAnimation final
{
public:
	struct FGameplayTag                           AnimationContext;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	struct FNeighborLoadout                       CallFunc_GetSelectedNeighborLoadout_ReturnValue;   // 0x0008(0x0030)()
};
static_assert(alignof(BP_Winscreen_CharacterWorldSlot_C_PlayAnimation) == 0x000008, "Wrong alignment on BP_Winscreen_CharacterWorldSlot_C_PlayAnimation");
static_assert(sizeof(BP_Winscreen_CharacterWorldSlot_C_PlayAnimation) == 0x000038, "Wrong size on BP_Winscreen_CharacterWorldSlot_C_PlayAnimation");
static_assert(offsetof(BP_Winscreen_CharacterWorldSlot_C_PlayAnimation, AnimationContext) == 0x000000, "Member 'BP_Winscreen_CharacterWorldSlot_C_PlayAnimation::AnimationContext' has a wrong offset!");
static_assert(offsetof(BP_Winscreen_CharacterWorldSlot_C_PlayAnimation, CallFunc_GetSelectedNeighborLoadout_ReturnValue) == 0x000008, "Member 'BP_Winscreen_CharacterWorldSlot_C_PlayAnimation::CallFunc_GetSelectedNeighborLoadout_ReturnValue' has a wrong offset!");

// Function BP_Winscreen_CharacterWorldSlot.BP_Winscreen_CharacterWorldSlot_C.SetNameplateText
// 0x0048 (0x0048 - 0x0000)
struct BP_Winscreen_CharacterWorldSlot_C_SetNameplateText final
{
public:
	TSoftObjectPtr<class UTexture2D>              CallFunc_GetNeighborIcon_Icon;                     // 0x0000(0x0028)(UObjectWrapper, HasGetValueTypeHash)
	class FString                                 CallFunc_GetPlayerDisplayName_ReturnValue;         // 0x0028(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0038(0x0010)()
};
static_assert(alignof(BP_Winscreen_CharacterWorldSlot_C_SetNameplateText) == 0x000008, "Wrong alignment on BP_Winscreen_CharacterWorldSlot_C_SetNameplateText");
static_assert(sizeof(BP_Winscreen_CharacterWorldSlot_C_SetNameplateText) == 0x000048, "Wrong size on BP_Winscreen_CharacterWorldSlot_C_SetNameplateText");
static_assert(offsetof(BP_Winscreen_CharacterWorldSlot_C_SetNameplateText, CallFunc_GetNeighborIcon_Icon) == 0x000000, "Member 'BP_Winscreen_CharacterWorldSlot_C_SetNameplateText::CallFunc_GetNeighborIcon_Icon' has a wrong offset!");
static_assert(offsetof(BP_Winscreen_CharacterWorldSlot_C_SetNameplateText, CallFunc_GetPlayerDisplayName_ReturnValue) == 0x000028, "Member 'BP_Winscreen_CharacterWorldSlot_C_SetNameplateText::CallFunc_GetPlayerDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Winscreen_CharacterWorldSlot_C_SetNameplateText, CallFunc_Conv_StringToText_ReturnValue) == 0x000038, "Member 'BP_Winscreen_CharacterWorldSlot_C_SetNameplateText::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");

// Function BP_Winscreen_CharacterWorldSlot.BP_Winscreen_CharacterWorldSlot_C.SpawnNeighborPreview
// 0x0010 (0x0010 - 0x0000)
struct BP_Winscreen_CharacterWorldSlot_C_SpawnNeighborPreview final
{
public:
	class APlayerStateJP*                         PlayerState;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           NeighborIdentifier;                                // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Winscreen_CharacterWorldSlot_C_SpawnNeighborPreview) == 0x000008, "Wrong alignment on BP_Winscreen_CharacterWorldSlot_C_SpawnNeighborPreview");
static_assert(sizeof(BP_Winscreen_CharacterWorldSlot_C_SpawnNeighborPreview) == 0x000010, "Wrong size on BP_Winscreen_CharacterWorldSlot_C_SpawnNeighborPreview");
static_assert(offsetof(BP_Winscreen_CharacterWorldSlot_C_SpawnNeighborPreview, PlayerState) == 0x000000, "Member 'BP_Winscreen_CharacterWorldSlot_C_SpawnNeighborPreview::PlayerState' has a wrong offset!");
static_assert(offsetof(BP_Winscreen_CharacterWorldSlot_C_SpawnNeighborPreview, NeighborIdentifier) == 0x000008, "Member 'BP_Winscreen_CharacterWorldSlot_C_SpawnNeighborPreview::NeighborIdentifier' has a wrong offset!");

// Function BP_Winscreen_CharacterWorldSlot.BP_Winscreen_CharacterWorldSlot_C.UpdateFocusPointHeight
// 0x0170 (0x0170 - 0x0000)
struct BP_Winscreen_CharacterWorldSlot_C_UpdateFocusPointHeight final
{
public:
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0000(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetSocketLocation_ReturnValue;            // 0x0030(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X_1;                          // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_1;                          // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_1;                          // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0060(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetWorldLocation_SweepHitResult;       // 0x0078(0x00F8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_Winscreen_CharacterWorldSlot_C_UpdateFocusPointHeight) == 0x000008, "Wrong alignment on BP_Winscreen_CharacterWorldSlot_C_UpdateFocusPointHeight");
static_assert(sizeof(BP_Winscreen_CharacterWorldSlot_C_UpdateFocusPointHeight) == 0x000170, "Wrong size on BP_Winscreen_CharacterWorldSlot_C_UpdateFocusPointHeight");
static_assert(offsetof(BP_Winscreen_CharacterWorldSlot_C_UpdateFocusPointHeight, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000000, "Member 'BP_Winscreen_CharacterWorldSlot_C_UpdateFocusPointHeight::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Winscreen_CharacterWorldSlot_C_UpdateFocusPointHeight, CallFunc_BreakVector_X) == 0x000018, "Member 'BP_Winscreen_CharacterWorldSlot_C_UpdateFocusPointHeight::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_Winscreen_CharacterWorldSlot_C_UpdateFocusPointHeight, CallFunc_BreakVector_Y) == 0x000020, "Member 'BP_Winscreen_CharacterWorldSlot_C_UpdateFocusPointHeight::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_Winscreen_CharacterWorldSlot_C_UpdateFocusPointHeight, CallFunc_BreakVector_Z) == 0x000028, "Member 'BP_Winscreen_CharacterWorldSlot_C_UpdateFocusPointHeight::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_Winscreen_CharacterWorldSlot_C_UpdateFocusPointHeight, CallFunc_GetSocketLocation_ReturnValue) == 0x000030, "Member 'BP_Winscreen_CharacterWorldSlot_C_UpdateFocusPointHeight::CallFunc_GetSocketLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Winscreen_CharacterWorldSlot_C_UpdateFocusPointHeight, CallFunc_BreakVector_X_1) == 0x000048, "Member 'BP_Winscreen_CharacterWorldSlot_C_UpdateFocusPointHeight::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(BP_Winscreen_CharacterWorldSlot_C_UpdateFocusPointHeight, CallFunc_BreakVector_Y_1) == 0x000050, "Member 'BP_Winscreen_CharacterWorldSlot_C_UpdateFocusPointHeight::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(BP_Winscreen_CharacterWorldSlot_C_UpdateFocusPointHeight, CallFunc_BreakVector_Z_1) == 0x000058, "Member 'BP_Winscreen_CharacterWorldSlot_C_UpdateFocusPointHeight::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(BP_Winscreen_CharacterWorldSlot_C_UpdateFocusPointHeight, CallFunc_MakeVector_ReturnValue) == 0x000060, "Member 'BP_Winscreen_CharacterWorldSlot_C_UpdateFocusPointHeight::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Winscreen_CharacterWorldSlot_C_UpdateFocusPointHeight, CallFunc_K2_SetWorldLocation_SweepHitResult) == 0x000078, "Member 'BP_Winscreen_CharacterWorldSlot_C_UpdateFocusPointHeight::CallFunc_K2_SetWorldLocation_SweepHitResult' has a wrong offset!");

}

