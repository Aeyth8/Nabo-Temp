#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: MyFunctionLibrary

#include "Basic.hpp"

#include "MyFunctionLibrary_classes.hpp"
#include "MyFunctionLibrary_parameters.hpp"


namespace SDK
{

// Function MyFunctionLibrary.MyFunctionLibrary_C.DisableCharacterInput
// (Static, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          WorldContextObject                                     (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UMyFunctionLibrary_C::DisableCharacterInput(const class UObject* WorldContextObject, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MyFunctionLibrary_C", "DisableCharacterInput");

	Params::MyFunctionLibrary_C_DisableCharacterInput Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);
}


// Function MyFunctionLibrary.MyFunctionLibrary_C.GetAliveCharacters
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UObject*                          WorldContextObject                                     (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// int32                                   Return                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TArray<class APlayerState*>             AlivePlayers                                           (Parm, OutParm)

void UMyFunctionLibrary_C::GetAliveCharacters(const class UObject* WorldContextObject, class UObject* __WorldContext, int32* Return, TArray<class APlayerState*>* AlivePlayers)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MyFunctionLibrary_C", "GetAliveCharacters");

	Params::MyFunctionLibrary_C_GetAliveCharacters Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Return != nullptr)
		*Return = Parms.Return;

	if (AlivePlayers != nullptr)
		*AlivePlayers = std::move(Parms.AlivePlayers);
}


// Function MyFunctionLibrary.MyFunctionLibrary_C.ReEnableCharacterInput
// (Static, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          WorldContextObject                                     (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UMyFunctionLibrary_C::ReEnableCharacterInput(const class UObject* WorldContextObject, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MyFunctionLibrary_C", "ReEnableCharacterInput");

	Params::MyFunctionLibrary_C_ReEnableCharacterInput Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);
}


// Function MyFunctionLibrary.MyFunctionLibrary_C.ShowEventForController
// (Static, Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class APlayerController*                Controller                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// struct FS_EventMessageParams            Message                                                (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UMyFunctionLibrary_C::ShowEventForController(class APlayerController* Controller, const struct FS_EventMessageParams& Message, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MyFunctionLibrary_C", "ShowEventForController");

	Params::MyFunctionLibrary_C_ShowEventForController Parms{};

	Parms.Controller = Controller;
	Parms.Message = std::move(Message);
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);
}


// Function MyFunctionLibrary.MyFunctionLibrary_C.ShowMessageForController
// (Static, Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class APlayerController*                OwningPlayer                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
// struct FPlayerMessage                   Message                                                (BlueprintVisible, BlueprintReadOnly, Parm)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UMyFunctionLibrary_C::ShowMessageForController(class APlayerController* OwningPlayer, const struct FPlayerMessage& Message, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MyFunctionLibrary_C", "ShowMessageForController");

	Params::MyFunctionLibrary_C_ShowMessageForController Parms{};

	Parms.OwningPlayer = OwningPlayer;
	Parms.Message = std::move(Message);
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);
}

}

