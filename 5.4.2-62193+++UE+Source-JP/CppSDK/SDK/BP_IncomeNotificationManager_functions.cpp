#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_IncomeNotificationManager

#include "Basic.hpp"

#include "BP_IncomeNotificationManager_classes.hpp"
#include "BP_IncomeNotificationManager_parameters.hpp"


namespace SDK
{

// Function BP_IncomeNotificationManager.BP_IncomeNotificationManager_C.AllowedToShow
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  Score                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// uint8                                   TeamId                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          Location                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ShowNotification                                       (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_IncomeNotificationManager_C::AllowedToShow(double Score, uint8 TeamId, const struct FVector& Location, bool* ShowNotification)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_IncomeNotificationManager_C", "AllowedToShow");

	Params::BP_IncomeNotificationManager_C_AllowedToShow Parms{};

	Parms.Score = Score;
	Parms.TeamId = TeamId;
	Parms.Location = std::move(Location);

	UObject::ProcessEvent(Func, &Parms);

	if (ShowNotification != nullptr)
		*ShowNotification = Parms.ShowNotification;
}


// Function BP_IncomeNotificationManager.BP_IncomeNotificationManager_C.ExecuteUbergraph_BP_IncomeNotificationManager
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_IncomeNotificationManager_C::ExecuteUbergraph_BP_IncomeNotificationManager(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_IncomeNotificationManager_C", "ExecuteUbergraph_BP_IncomeNotificationManager");

	Params::BP_IncomeNotificationManager_C_ExecuteUbergraph_BP_IncomeNotificationManager Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_IncomeNotificationManager.BP_IncomeNotificationManager_C.IsLocationSameTeamAsLocalPlayer
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FVector                          Point                                                  (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// uint8                                   OptionalTeamID                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool ABP_IncomeNotificationManager_C::IsLocationSameTeamAsLocalPlayer(const struct FVector& Point, uint8 OptionalTeamID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_IncomeNotificationManager_C", "IsLocationSameTeamAsLocalPlayer");

	Params::BP_IncomeNotificationManager_C_IsLocationSameTeamAsLocalPlayer Parms{};

	Parms.Point = std::move(Point);
	Parms.OptionalTeamID = OptionalTeamID;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_IncomeNotificationManager.BP_IncomeNotificationManager_C.Play Income Notification
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          Location                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  Score                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// uint8                                   TeamId                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_IncomeNotificationManager_C::Play_Income_Notification(const struct FVector& Location, double Score, uint8 TeamId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_IncomeNotificationManager_C", "Play Income Notification");

	Params::BP_IncomeNotificationManager_C_Play_Income_Notification Parms{};

	Parms.Location = std::move(Location);
	Parms.Score = Score;
	Parms.TeamId = TeamId;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_IncomeNotificationManager.BP_IncomeNotificationManager_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ABP_IncomeNotificationManager_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_IncomeNotificationManager_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}

}

