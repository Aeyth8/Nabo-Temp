#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_GarbageItem

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "GameplayAbilities_structs.hpp"
#include "JP_structs.hpp"
#include "E_MaterialTypes_structs.hpp"
#include "E_ImpactEffect_structs.hpp"


namespace SDK::Params
{

// Function BP_GarbageItem.BP_GarbageItem_C.AddToHighlight
// 0x0010 (0x0010 - 0x0000)
struct BP_GarbageItem_C_AddToHighlight final
{
public:
	class ABP_HighlightManager_C*                 CallFunc_GetActorOfClass_ReturnValue;              // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GarbageItem_C_AddToHighlight) == 0x000008, "Wrong alignment on BP_GarbageItem_C_AddToHighlight");
static_assert(sizeof(BP_GarbageItem_C_AddToHighlight) == 0x000010, "Wrong size on BP_GarbageItem_C_AddToHighlight");
static_assert(offsetof(BP_GarbageItem_C_AddToHighlight, CallFunc_GetActorOfClass_ReturnValue) == 0x000000, "Member 'BP_GarbageItem_C_AddToHighlight::CallFunc_GetActorOfClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GarbageItem_C_AddToHighlight, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'BP_GarbageItem_C_AddToHighlight::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_GarbageItem.BP_GarbageItem_C.Apply Perfectness Team
// 0x0028 (0x0028 - 0x0000)
struct BP_GarbageItem_C_Apply_Perfectness_Team final
{
public:
	bool                                          Withdraw_Perfectness;                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsTeamIDValid_ReturnValue;                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UEconomySubsystem*                      CallFunc_GetWorldSubsystem_ReturnValue;            // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UEconomySubsystem*                      CallFunc_GetWorldSubsystem_ReturnValue_1;          // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_WithdrawEconomyFromTeam_ReturnValue;      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue_1;             // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GarbageItem_C_Apply_Perfectness_Team) == 0x000008, "Wrong alignment on BP_GarbageItem_C_Apply_Perfectness_Team");
static_assert(sizeof(BP_GarbageItem_C_Apply_Perfectness_Team) == 0x000028, "Wrong size on BP_GarbageItem_C_Apply_Perfectness_Team");
static_assert(offsetof(BP_GarbageItem_C_Apply_Perfectness_Team, Withdraw_Perfectness) == 0x000000, "Member 'BP_GarbageItem_C_Apply_Perfectness_Team::Withdraw_Perfectness' has a wrong offset!");
static_assert(offsetof(BP_GarbageItem_C_Apply_Perfectness_Team, CallFunc_IsTeamIDValid_ReturnValue) == 0x000001, "Member 'BP_GarbageItem_C_Apply_Perfectness_Team::CallFunc_IsTeamIDValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GarbageItem_C_Apply_Perfectness_Team, CallFunc_GetWorldSubsystem_ReturnValue) == 0x000008, "Member 'BP_GarbageItem_C_Apply_Perfectness_Team::CallFunc_GetWorldSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GarbageItem_C_Apply_Perfectness_Team, CallFunc_Conv_ByteToInt_ReturnValue) == 0x000010, "Member 'BP_GarbageItem_C_Apply_Perfectness_Team::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GarbageItem_C_Apply_Perfectness_Team, CallFunc_GetWorldSubsystem_ReturnValue_1) == 0x000018, "Member 'BP_GarbageItem_C_Apply_Perfectness_Team::CallFunc_GetWorldSubsystem_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GarbageItem_C_Apply_Perfectness_Team, CallFunc_WithdrawEconomyFromTeam_ReturnValue) == 0x000020, "Member 'BP_GarbageItem_C_Apply_Perfectness_Team::CallFunc_WithdrawEconomyFromTeam_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GarbageItem_C_Apply_Perfectness_Team, CallFunc_Conv_ByteToInt_ReturnValue_1) == 0x000024, "Member 'BP_GarbageItem_C_Apply_Perfectness_Team::CallFunc_Conv_ByteToInt_ReturnValue_1' has a wrong offset!");

// Function BP_GarbageItem.BP_GarbageItem_C.BndEvt__BP_GarbageItem_StaticMeshComponent_K2Node_ComponentBoundEvent_0_ComponentSleepSignature__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct BP_GarbageItem_C_BndEvt__BP_GarbageItem_StaticMeshComponent_K2Node_ComponentBoundEvent_0_ComponentSleepSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    SleepingComponent;                                 // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   BoneName;                                          // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GarbageItem_C_BndEvt__BP_GarbageItem_StaticMeshComponent_K2Node_ComponentBoundEvent_0_ComponentSleepSignature__DelegateSignature) == 0x000008, "Wrong alignment on BP_GarbageItem_C_BndEvt__BP_GarbageItem_StaticMeshComponent_K2Node_ComponentBoundEvent_0_ComponentSleepSignature__DelegateSignature");
static_assert(sizeof(BP_GarbageItem_C_BndEvt__BP_GarbageItem_StaticMeshComponent_K2Node_ComponentBoundEvent_0_ComponentSleepSignature__DelegateSignature) == 0x000010, "Wrong size on BP_GarbageItem_C_BndEvt__BP_GarbageItem_StaticMeshComponent_K2Node_ComponentBoundEvent_0_ComponentSleepSignature__DelegateSignature");
static_assert(offsetof(BP_GarbageItem_C_BndEvt__BP_GarbageItem_StaticMeshComponent_K2Node_ComponentBoundEvent_0_ComponentSleepSignature__DelegateSignature, SleepingComponent) == 0x000000, "Member 'BP_GarbageItem_C_BndEvt__BP_GarbageItem_StaticMeshComponent_K2Node_ComponentBoundEvent_0_ComponentSleepSignature__DelegateSignature::SleepingComponent' has a wrong offset!");
static_assert(offsetof(BP_GarbageItem_C_BndEvt__BP_GarbageItem_StaticMeshComponent_K2Node_ComponentBoundEvent_0_ComponentSleepSignature__DelegateSignature, BoneName) == 0x000008, "Member 'BP_GarbageItem_C_BndEvt__BP_GarbageItem_StaticMeshComponent_K2Node_ComponentBoundEvent_0_ComponentSleepSignature__DelegateSignature::BoneName' has a wrong offset!");

// Function BP_GarbageItem.BP_GarbageItem_C.CheckHandDistance
// 0x0060 (0x0060 - 0x0000)
struct BP_GarbageItem_C_CheckHandDistance final
{
public:
	bool                                          InRange;                                           // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0008(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetSocketLocation_ReturnValue;            // 0x0020(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0038(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_VSize_ReturnValue;                        // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue;       // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GarbageItem_C_CheckHandDistance) == 0x000008, "Wrong alignment on BP_GarbageItem_C_CheckHandDistance");
static_assert(sizeof(BP_GarbageItem_C_CheckHandDistance) == 0x000060, "Wrong size on BP_GarbageItem_C_CheckHandDistance");
static_assert(offsetof(BP_GarbageItem_C_CheckHandDistance, InRange) == 0x000000, "Member 'BP_GarbageItem_C_CheckHandDistance::InRange' has a wrong offset!");
static_assert(offsetof(BP_GarbageItem_C_CheckHandDistance, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000008, "Member 'BP_GarbageItem_C_CheckHandDistance::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GarbageItem_C_CheckHandDistance, CallFunc_GetSocketLocation_ReturnValue) == 0x000020, "Member 'BP_GarbageItem_C_CheckHandDistance::CallFunc_GetSocketLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GarbageItem_C_CheckHandDistance, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000038, "Member 'BP_GarbageItem_C_CheckHandDistance::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GarbageItem_C_CheckHandDistance, CallFunc_VSize_ReturnValue) == 0x000050, "Member 'BP_GarbageItem_C_CheckHandDistance::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GarbageItem_C_CheckHandDistance, CallFunc_LessEqual_DoubleDouble_ReturnValue) == 0x000058, "Member 'BP_GarbageItem_C_CheckHandDistance::CallFunc_LessEqual_DoubleDouble_ReturnValue' has a wrong offset!");

// Function BP_GarbageItem.BP_GarbageItem_C.Collect
// 0x0010 (0x0010 - 0x0000)
struct BP_GarbageItem_C_Collect final
{
public:
	bool                                          DestroyAfterCollect_0;                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        LerpSpeedScale;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GarbageItem_C_Collect) == 0x000008, "Wrong alignment on BP_GarbageItem_C_Collect");
static_assert(sizeof(BP_GarbageItem_C_Collect) == 0x000010, "Wrong size on BP_GarbageItem_C_Collect");
static_assert(offsetof(BP_GarbageItem_C_Collect, DestroyAfterCollect_0) == 0x000000, "Member 'BP_GarbageItem_C_Collect::DestroyAfterCollect_0' has a wrong offset!");
static_assert(offsetof(BP_GarbageItem_C_Collect, LerpSpeedScale) == 0x000008, "Member 'BP_GarbageItem_C_Collect::LerpSpeedScale' has a wrong offset!");

// Function BP_GarbageItem.BP_GarbageItem_C.ExecuteUbergraph_BP_GarbageItem
// 0x05D8 (0x05D8 - 0x0000)
struct BP_GarbageItem_C_ExecuteUbergraph_BP_GarbageItem final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_Event_OtherActor;                           // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class Abp_groundskeeper_C*                    K2Node_DynamicCast_AsBp_Groundskeeper;             // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetTeamID_ReturnValue;                    // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A[0x6];                                       // 0x001A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_K2_AddActorWorldRotation_SweepHitResult;  // 0x0020(0x00F8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0118(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UNiagaraComponent*                      CallFunc_SpawnSystemAtLocation_ReturnValue;        // 0x0130(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_Seed;                           // 0x0138(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_13C[0x4];                                      // 0x013C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_Event_OtherActor_1;                         // 0x0140(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class Abp_groundskeeper_C*                    K2Node_DynamicCast_AsBp_Groundskeeper_1;           // 0x0148(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0150(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetTeamID_ReturnValue_1;                  // 0x0151(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsTeamIDValid_ReturnValue;                // 0x0152(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_153[0x5];                                      // 0x0153(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UStaticMesh*                            CallFunc_Array_Get_Item;                           // 0x0158(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x0160(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetStaticMesh_ReturnValue;                // 0x0178(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetGroundsKeeperAtPoint_bFoundTeam;       // 0x0179(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_17A[0x6];                                      // 0x017A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ATeamVolume*>                    CallFunc_GetGroundsKeeperAtPoint_OverlappingTeamVolumes; // 0x0180(0x0010)(ReferenceParm)
	class AGroundsKeeper*                         CallFunc_GetGroundsKeeperAtPoint_ReturnValue;      // 0x0190(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ACharacter*                             K2Node_Event_GrippingCharacter;                    // 0x0198(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x01A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A1[0x7];                                      // 0x01A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_2;        // 0x01A8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACharacter*                             K2Node_Event_ReleasingCharacter;                   // 0x01C0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetGroundsKeeperAtPoint_bFoundTeam_1;     // 0x01C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C9[0x7];                                      // 0x01C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ATeamVolume*>                    CallFunc_GetGroundsKeeperAtPoint_OverlappingTeamVolumes_1; // 0x01D0(0x0010)(ReferenceParm)
	class AGroundsKeeper*                         CallFunc_GetGroundsKeeperAtPoint_ReturnValue_1;    // 0x01E0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_DestroyAfterCollect;            // 0x01E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E9[0x7];                                      // 0x01E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_CustomEvent_LerpSpeedScale;                 // 0x01F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x01F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1F9[0x7];                                      // 0x01F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_SleepingComponent;      // 0x0200(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_ComponentBoundEvent_BoneName;               // 0x0208(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_Event_Focusing_Actor;                       // 0x0210(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_CustomEvent_Impulse_1;                      // 0x0218(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUserWidget*                            CallFunc_GetUserWidgetObject_ReturnValue;          // 0x0230(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWI_ObjectContext_C*                    K2Node_DynamicCast_AsWI_Object_Context;            // 0x0238(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0240(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_241[0x3];                                      // 0x0241(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0244(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_RandomInteger_ReturnValue;                // 0x0248(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24C[0x4];                                      // 0x024C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                K2Node_CustomEvent_Impulse;                        // 0x0250(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_CustomEvent_EndLocation;                    // 0x0268(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_Trashbag_Equipable_C*               K2Node_CustomEvent_TrashBag;                       // 0x0280(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_Event_TargetActor;                          // 0x0288(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Event_LaunchVelocity;                       // 0x0290(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class II_ShieldBlock_C>      K2Node_DynamicCast_AsI_Shield_Block;               // 0x02A8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x02B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2B9[0x7];                                      // 0x02B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAbilitySystemComponent*                CallFunc_GetValidASC_ASC;                          // 0x02C0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetValidASC_Valid;                        // 0x02C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C9[0x7];                                      // 0x02C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_3;        // 0x02D0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetStaticMesh_ReturnValue_1;              // 0x02E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2E9[0x7];                                      // 0x02E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x02F0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0308(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0309(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x030A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_30B[0x5];                                      // 0x030B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_VLerp_ReturnValue;                        // 0x0310(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_VLerp_ReturnValue_1;                      // 0x0328(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAbilitySystemComponent*                CallFunc_GetAbilitySystemComponent_ReturnValue;    // 0x0340(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetActorLocation_SweepHitResult;       // 0x0348(0x00F8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_SetActorLocation_ReturnValue;          // 0x0440(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_441[0x7];                                      // 0x0441(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAbilitySystemComponent*                CallFunc_GetAbilitySystemComponent_ReturnValue_1;  // 0x0448(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_4;        // 0x0450(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayEffectSpecHandle              CallFunc_MakeOutgoingSpec_ReturnValue;             // 0x0468(0x0010)()
	struct FHitResult                             CallFunc_MakeHitResult_ReturnValue;                // 0x0478(0x00F8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FGameplayEffectSpecHandle              CallFunc_AssignTagSetByCallerMagnitude_ReturnValue; // 0x0570(0x0010)()
	struct FVector                                CallFunc_Conv_DoubleToVector_ReturnValue;          // 0x0580(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayEffectContextHandle           CallFunc_GetEffectContext_ReturnValue;             // 0x0598(0x0018)()
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue;        // 0x05B0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FActiveGameplayEffectHandle            CallFunc_BP_ApplyGameplayEffectSpecToTarget_ReturnValue; // 0x05C8(0x0008)(NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue;                       // 0x05D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_AssignTagSetByCallerMagnitude_Magnitude_ImplicitCast; // 0x05D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GarbageItem_C_ExecuteUbergraph_BP_GarbageItem) == 0x000008, "Wrong alignment on BP_GarbageItem_C_ExecuteUbergraph_BP_GarbageItem");
static_assert(sizeof(BP_GarbageItem_C_ExecuteUbergraph_BP_GarbageItem) == 0x0005D8, "Wrong size on BP_GarbageItem_C_ExecuteUbergraph_BP_GarbageItem");
static_assert(offsetof(BP_GarbageItem_C_ExecuteUbergraph_BP_GarbageItem, EntryPoint) == 0x000000, "Member 'BP_GarbageItem_C_ExecuteUbergraph_BP_GarbageItem::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_GarbageItem_C_ExecuteUbergraph_BP_GarbageItem, K2Node_Event_OtherActor) == 0x000008, "Member 'BP_GarbageItem_C_ExecuteUbergraph_BP_GarbageItem::K2Node_Event_OtherActor' has a wrong offset!");
static_assert(offsetof(BP_GarbageItem_C_ExecuteUbergraph_BP_GarbageItem, K2Node_DynamicCast_AsBp_Groundskeeper) == 0x000010, "Member 'BP_GarbageItem_C_ExecuteUbergraph_BP_GarbageItem::K2Node_DynamicCast_AsBp_Groundskeeper' has a wrong offset!");
static_assert(offsetof(BP_GarbageItem_C_ExecuteUbergraph_BP_GarbageItem, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_GarbageItem_C_ExecuteUbergraph_BP_GarbageItem::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_GarbageItem_C_ExecuteUbergraph_BP_GarbageItem, CallFunc_GetTeamID_ReturnValue) == 0x000019, "Member 'BP_GarbageItem_C_ExecuteUbergraph_BP_GarbageItem::CallFunc_GetTeamID_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GarbageItem_C_ExecuteUbergraph_BP_GarbageItem, CallFunc_K2_AddActorWorldRotation_SweepHitResult) == 0x000020, "Member 'BP_GarbageItem_C_ExecuteUbergraph_BP_GarbageItem::CallFunc_K2_AddActorWorldRotation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_GarbageItem_C_ExecuteUbergraph_BP_GarbageItem, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000118, "Member 'BP_GarbageItem_C_ExecuteUbergraph_BP_GarbageItem::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GarbageItem_C_ExecuteUbergraph_BP_GarbageItem, CallFunc_SpawnSystemAtLocation_ReturnValue) == 0x000130, "Member 'BP_GarbageItem_C_ExecuteUbergraph_BP_GarbageItem::CallFunc_SpawnSystemAtLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GarbageItem_C_ExecuteUbergraph_BP_GarbageItem, K2Node_CustomEvent_Seed) == 0x000138, "Member 'BP_GarbageItem_C_ExecuteUbergraph_BP_GarbageItem::K2Node_CustomEvent_Seed' has a wrong offset!");
static_assert(offsetof(BP_GarbageItem_C_ExecuteUbergraph_BP_GarbageItem, K2Node_Event_OtherActor_1) == 0x000140, "Member 'BP_GarbageItem_C_ExecuteUbergraph_BP_GarbageItem::K2Node_Event_OtherActor_1' has a wrong offset!");
static_assert(offsetof(BP_GarbageItem_C_ExecuteUbergraph_BP_GarbageItem, K2Node_DynamicCast_AsBp_Groundskeeper_1) == 0x000148, "Member 'BP_GarbageItem_C_ExecuteUbergraph_BP_GarbageItem::K2Node_DynamicCast_AsBp_Groundskeeper_1' has a wrong offset!");
static_assert(offsetof(BP_GarbageItem_C_ExecuteUbergraph_BP_GarbageItem, K2Node_DynamicCast_bSuccess_1) == 0x000150, "Member 'BP_GarbageItem_C_ExecuteUbergraph_BP_GarbageItem::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_GarbageItem_C_ExecuteUbergraph_BP_GarbageItem, CallFunc_GetTeamID_ReturnValue_1) == 0x000151, "Member 'BP_GarbageItem_C_ExecuteUbergraph_BP_GarbageItem::CallFunc_GetTeamID_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GarbageItem_C_ExecuteUbergraph_BP_GarbageItem, CallFunc_IsTeamIDValid_ReturnValue) == 0x000152, "Member 'BP_GarbageItem_C_ExecuteUbergraph_BP_GarbageItem::CallFunc_IsTeamIDValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GarbageItem_C_ExecuteUbergraph_BP_GarbageItem, CallFunc_Array_Get_Item) == 0x000158, "Member 'BP_GarbageItem_C_ExecuteUbergraph_BP_GarbageItem::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_GarbageItem_C_ExecuteUbergraph_BP_GarbageItem, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x000160, "Member 'BP_GarbageItem_C_ExecuteUbergraph_BP_GarbageItem::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GarbageItem_C_ExecuteUbergraph_BP_GarbageItem, CallFunc_SetStaticMesh_ReturnValue) == 0x000178, "Member 'BP_GarbageItem_C_ExecuteUbergraph_BP_GarbageItem::CallFunc_SetStaticMesh_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GarbageItem_C_ExecuteUbergraph_BP_GarbageItem, CallFunc_GetGroundsKeeperAtPoint_bFoundTeam) == 0x000179, "Member 'BP_GarbageItem_C_ExecuteUbergraph_BP_GarbageItem::CallFunc_GetGroundsKeeperAtPoint_bFoundTeam' has a wrong offset!");
static_assert(offsetof(BP_GarbageItem_C_ExecuteUbergraph_BP_GarbageItem, CallFunc_GetGroundsKeeperAtPoint_OverlappingTeamVolumes) == 0x000180, "Member 'BP_GarbageItem_C_ExecuteUbergraph_BP_GarbageItem::CallFunc_GetGroundsKeeperAtPoint_OverlappingTeamVolumes' has a wrong offset!");
static_assert(offsetof(BP_GarbageItem_C_ExecuteUbergraph_BP_GarbageItem, CallFunc_GetGroundsKeeperAtPoint_ReturnValue) == 0x000190, "Member 'BP_GarbageItem_C_ExecuteUbergraph_BP_GarbageItem::CallFunc_GetGroundsKeeperAtPoint_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GarbageItem_C_ExecuteUbergraph_BP_GarbageItem, K2Node_Event_GrippingCharacter) == 0x000198, "Member 'BP_GarbageItem_C_ExecuteUbergraph_BP_GarbageItem::K2Node_Event_GrippingCharacter' has a wrong offset!");
static_assert(offsetof(BP_GarbageItem_C_ExecuteUbergraph_BP_GarbageItem, CallFunc_Not_PreBool_ReturnValue) == 0x0001A0, "Member 'BP_GarbageItem_C_ExecuteUbergraph_BP_GarbageItem::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GarbageItem_C_ExecuteUbergraph_BP_GarbageItem, CallFunc_K2_GetActorLocation_ReturnValue_2) == 0x0001A8, "Member 'BP_GarbageItem_C_ExecuteUbergraph_BP_GarbageItem::CallFunc_K2_GetActorLocation_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_GarbageItem_C_ExecuteUbergraph_BP_GarbageItem, K2Node_Event_ReleasingCharacter) == 0x0001C0, "Member 'BP_GarbageItem_C_ExecuteUbergraph_BP_GarbageItem::K2Node_Event_ReleasingCharacter' has a wrong offset!");
static_assert(offsetof(BP_GarbageItem_C_ExecuteUbergraph_BP_GarbageItem, CallFunc_GetGroundsKeeperAtPoint_bFoundTeam_1) == 0x0001C8, "Member 'BP_GarbageItem_C_ExecuteUbergraph_BP_GarbageItem::CallFunc_GetGroundsKeeperAtPoint_bFoundTeam_1' has a wrong offset!");
static_assert(offsetof(BP_GarbageItem_C_ExecuteUbergraph_BP_GarbageItem, CallFunc_GetGroundsKeeperAtPoint_OverlappingTeamVolumes_1) == 0x0001D0, "Member 'BP_GarbageItem_C_ExecuteUbergraph_BP_GarbageItem::CallFunc_GetGroundsKeeperAtPoint_OverlappingTeamVolumes_1' has a wrong offset!");
static_assert(offsetof(BP_GarbageItem_C_ExecuteUbergraph_BP_GarbageItem, CallFunc_GetGroundsKeeperAtPoint_ReturnValue_1) == 0x0001E0, "Member 'BP_GarbageItem_C_ExecuteUbergraph_BP_GarbageItem::CallFunc_GetGroundsKeeperAtPoint_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GarbageItem_C_ExecuteUbergraph_BP_GarbageItem, K2Node_CustomEvent_DestroyAfterCollect) == 0x0001E8, "Member 'BP_GarbageItem_C_ExecuteUbergraph_BP_GarbageItem::K2Node_CustomEvent_DestroyAfterCollect' has a wrong offset!");
static_assert(offsetof(BP_GarbageItem_C_ExecuteUbergraph_BP_GarbageItem, K2Node_CustomEvent_LerpSpeedScale) == 0x0001F0, "Member 'BP_GarbageItem_C_ExecuteUbergraph_BP_GarbageItem::K2Node_CustomEvent_LerpSpeedScale' has a wrong offset!");
static_assert(offsetof(BP_GarbageItem_C_ExecuteUbergraph_BP_GarbageItem, CallFunc_Not_PreBool_ReturnValue_1) == 0x0001F8, "Member 'BP_GarbageItem_C_ExecuteUbergraph_BP_GarbageItem::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GarbageItem_C_ExecuteUbergraph_BP_GarbageItem, K2Node_ComponentBoundEvent_SleepingComponent) == 0x000200, "Member 'BP_GarbageItem_C_ExecuteUbergraph_BP_GarbageItem::K2Node_ComponentBoundEvent_SleepingComponent' has a wrong offset!");
static_assert(offsetof(BP_GarbageItem_C_ExecuteUbergraph_BP_GarbageItem, K2Node_ComponentBoundEvent_BoneName) == 0x000208, "Member 'BP_GarbageItem_C_ExecuteUbergraph_BP_GarbageItem::K2Node_ComponentBoundEvent_BoneName' has a wrong offset!");
static_assert(offsetof(BP_GarbageItem_C_ExecuteUbergraph_BP_GarbageItem, K2Node_Event_Focusing_Actor) == 0x000210, "Member 'BP_GarbageItem_C_ExecuteUbergraph_BP_GarbageItem::K2Node_Event_Focusing_Actor' has a wrong offset!");
static_assert(offsetof(BP_GarbageItem_C_ExecuteUbergraph_BP_GarbageItem, K2Node_CustomEvent_Impulse_1) == 0x000218, "Member 'BP_GarbageItem_C_ExecuteUbergraph_BP_GarbageItem::K2Node_CustomEvent_Impulse_1' has a wrong offset!");
static_assert(offsetof(BP_GarbageItem_C_ExecuteUbergraph_BP_GarbageItem, CallFunc_GetUserWidgetObject_ReturnValue) == 0x000230, "Member 'BP_GarbageItem_C_ExecuteUbergraph_BP_GarbageItem::CallFunc_GetUserWidgetObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GarbageItem_C_ExecuteUbergraph_BP_GarbageItem, K2Node_DynamicCast_AsWI_Object_Context) == 0x000238, "Member 'BP_GarbageItem_C_ExecuteUbergraph_BP_GarbageItem::K2Node_DynamicCast_AsWI_Object_Context' has a wrong offset!");
static_assert(offsetof(BP_GarbageItem_C_ExecuteUbergraph_BP_GarbageItem, K2Node_DynamicCast_bSuccess_2) == 0x000240, "Member 'BP_GarbageItem_C_ExecuteUbergraph_BP_GarbageItem::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_GarbageItem_C_ExecuteUbergraph_BP_GarbageItem, CallFunc_Array_Length_ReturnValue) == 0x000244, "Member 'BP_GarbageItem_C_ExecuteUbergraph_BP_GarbageItem::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GarbageItem_C_ExecuteUbergraph_BP_GarbageItem, CallFunc_RandomInteger_ReturnValue) == 0x000248, "Member 'BP_GarbageItem_C_ExecuteUbergraph_BP_GarbageItem::CallFunc_RandomInteger_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GarbageItem_C_ExecuteUbergraph_BP_GarbageItem, K2Node_CustomEvent_Impulse) == 0x000250, "Member 'BP_GarbageItem_C_ExecuteUbergraph_BP_GarbageItem::K2Node_CustomEvent_Impulse' has a wrong offset!");
static_assert(offsetof(BP_GarbageItem_C_ExecuteUbergraph_BP_GarbageItem, K2Node_CustomEvent_EndLocation) == 0x000268, "Member 'BP_GarbageItem_C_ExecuteUbergraph_BP_GarbageItem::K2Node_CustomEvent_EndLocation' has a wrong offset!");
static_assert(offsetof(BP_GarbageItem_C_ExecuteUbergraph_BP_GarbageItem, K2Node_CustomEvent_TrashBag) == 0x000280, "Member 'BP_GarbageItem_C_ExecuteUbergraph_BP_GarbageItem::K2Node_CustomEvent_TrashBag' has a wrong offset!");
static_assert(offsetof(BP_GarbageItem_C_ExecuteUbergraph_BP_GarbageItem, K2Node_Event_TargetActor) == 0x000288, "Member 'BP_GarbageItem_C_ExecuteUbergraph_BP_GarbageItem::K2Node_Event_TargetActor' has a wrong offset!");
static_assert(offsetof(BP_GarbageItem_C_ExecuteUbergraph_BP_GarbageItem, K2Node_Event_LaunchVelocity) == 0x000290, "Member 'BP_GarbageItem_C_ExecuteUbergraph_BP_GarbageItem::K2Node_Event_LaunchVelocity' has a wrong offset!");
static_assert(offsetof(BP_GarbageItem_C_ExecuteUbergraph_BP_GarbageItem, K2Node_DynamicCast_AsI_Shield_Block) == 0x0002A8, "Member 'BP_GarbageItem_C_ExecuteUbergraph_BP_GarbageItem::K2Node_DynamicCast_AsI_Shield_Block' has a wrong offset!");
static_assert(offsetof(BP_GarbageItem_C_ExecuteUbergraph_BP_GarbageItem, K2Node_DynamicCast_bSuccess_3) == 0x0002B8, "Member 'BP_GarbageItem_C_ExecuteUbergraph_BP_GarbageItem::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(BP_GarbageItem_C_ExecuteUbergraph_BP_GarbageItem, CallFunc_GetValidASC_ASC) == 0x0002C0, "Member 'BP_GarbageItem_C_ExecuteUbergraph_BP_GarbageItem::CallFunc_GetValidASC_ASC' has a wrong offset!");
static_assert(offsetof(BP_GarbageItem_C_ExecuteUbergraph_BP_GarbageItem, CallFunc_GetValidASC_Valid) == 0x0002C8, "Member 'BP_GarbageItem_C_ExecuteUbergraph_BP_GarbageItem::CallFunc_GetValidASC_Valid' has a wrong offset!");
static_assert(offsetof(BP_GarbageItem_C_ExecuteUbergraph_BP_GarbageItem, CallFunc_K2_GetActorLocation_ReturnValue_3) == 0x0002D0, "Member 'BP_GarbageItem_C_ExecuteUbergraph_BP_GarbageItem::CallFunc_K2_GetActorLocation_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_GarbageItem_C_ExecuteUbergraph_BP_GarbageItem, CallFunc_SetStaticMesh_ReturnValue_1) == 0x0002E8, "Member 'BP_GarbageItem_C_ExecuteUbergraph_BP_GarbageItem::CallFunc_SetStaticMesh_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GarbageItem_C_ExecuteUbergraph_BP_GarbageItem, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x0002F0, "Member 'BP_GarbageItem_C_ExecuteUbergraph_BP_GarbageItem::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GarbageItem_C_ExecuteUbergraph_BP_GarbageItem, CallFunc_IsValid_ReturnValue) == 0x000308, "Member 'BP_GarbageItem_C_ExecuteUbergraph_BP_GarbageItem::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GarbageItem_C_ExecuteUbergraph_BP_GarbageItem, CallFunc_HasAuthority_ReturnValue) == 0x000309, "Member 'BP_GarbageItem_C_ExecuteUbergraph_BP_GarbageItem::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GarbageItem_C_ExecuteUbergraph_BP_GarbageItem, CallFunc_IsValid_ReturnValue_1) == 0x00030A, "Member 'BP_GarbageItem_C_ExecuteUbergraph_BP_GarbageItem::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GarbageItem_C_ExecuteUbergraph_BP_GarbageItem, CallFunc_VLerp_ReturnValue) == 0x000310, "Member 'BP_GarbageItem_C_ExecuteUbergraph_BP_GarbageItem::CallFunc_VLerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GarbageItem_C_ExecuteUbergraph_BP_GarbageItem, CallFunc_VLerp_ReturnValue_1) == 0x000328, "Member 'BP_GarbageItem_C_ExecuteUbergraph_BP_GarbageItem::CallFunc_VLerp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GarbageItem_C_ExecuteUbergraph_BP_GarbageItem, CallFunc_GetAbilitySystemComponent_ReturnValue) == 0x000340, "Member 'BP_GarbageItem_C_ExecuteUbergraph_BP_GarbageItem::CallFunc_GetAbilitySystemComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GarbageItem_C_ExecuteUbergraph_BP_GarbageItem, CallFunc_K2_SetActorLocation_SweepHitResult) == 0x000348, "Member 'BP_GarbageItem_C_ExecuteUbergraph_BP_GarbageItem::CallFunc_K2_SetActorLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_GarbageItem_C_ExecuteUbergraph_BP_GarbageItem, CallFunc_K2_SetActorLocation_ReturnValue) == 0x000440, "Member 'BP_GarbageItem_C_ExecuteUbergraph_BP_GarbageItem::CallFunc_K2_SetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GarbageItem_C_ExecuteUbergraph_BP_GarbageItem, CallFunc_GetAbilitySystemComponent_ReturnValue_1) == 0x000448, "Member 'BP_GarbageItem_C_ExecuteUbergraph_BP_GarbageItem::CallFunc_GetAbilitySystemComponent_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GarbageItem_C_ExecuteUbergraph_BP_GarbageItem, CallFunc_K2_GetActorLocation_ReturnValue_4) == 0x000450, "Member 'BP_GarbageItem_C_ExecuteUbergraph_BP_GarbageItem::CallFunc_K2_GetActorLocation_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_GarbageItem_C_ExecuteUbergraph_BP_GarbageItem, CallFunc_MakeOutgoingSpec_ReturnValue) == 0x000468, "Member 'BP_GarbageItem_C_ExecuteUbergraph_BP_GarbageItem::CallFunc_MakeOutgoingSpec_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GarbageItem_C_ExecuteUbergraph_BP_GarbageItem, CallFunc_MakeHitResult_ReturnValue) == 0x000478, "Member 'BP_GarbageItem_C_ExecuteUbergraph_BP_GarbageItem::CallFunc_MakeHitResult_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GarbageItem_C_ExecuteUbergraph_BP_GarbageItem, CallFunc_AssignTagSetByCallerMagnitude_ReturnValue) == 0x000570, "Member 'BP_GarbageItem_C_ExecuteUbergraph_BP_GarbageItem::CallFunc_AssignTagSetByCallerMagnitude_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GarbageItem_C_ExecuteUbergraph_BP_GarbageItem, CallFunc_Conv_DoubleToVector_ReturnValue) == 0x000580, "Member 'BP_GarbageItem_C_ExecuteUbergraph_BP_GarbageItem::CallFunc_Conv_DoubleToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GarbageItem_C_ExecuteUbergraph_BP_GarbageItem, CallFunc_GetEffectContext_ReturnValue) == 0x000598, "Member 'BP_GarbageItem_C_ExecuteUbergraph_BP_GarbageItem::CallFunc_GetEffectContext_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GarbageItem_C_ExecuteUbergraph_BP_GarbageItem, CallFunc_Multiply_VectorVector_ReturnValue) == 0x0005B0, "Member 'BP_GarbageItem_C_ExecuteUbergraph_BP_GarbageItem::CallFunc_Multiply_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GarbageItem_C_ExecuteUbergraph_BP_GarbageItem, CallFunc_BP_ApplyGameplayEffectSpecToTarget_ReturnValue) == 0x0005C8, "Member 'BP_GarbageItem_C_ExecuteUbergraph_BP_GarbageItem::CallFunc_BP_ApplyGameplayEffectSpecToTarget_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GarbageItem_C_ExecuteUbergraph_BP_GarbageItem, CallFunc_FTrunc_ReturnValue) == 0x0005D0, "Member 'BP_GarbageItem_C_ExecuteUbergraph_BP_GarbageItem::CallFunc_FTrunc_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GarbageItem_C_ExecuteUbergraph_BP_GarbageItem, CallFunc_AssignTagSetByCallerMagnitude_Magnitude_ImplicitCast) == 0x0005D4, "Member 'BP_GarbageItem_C_ExecuteUbergraph_BP_GarbageItem::CallFunc_AssignTagSetByCallerMagnitude_Magnitude_ImplicitCast' has a wrong offset!");

// Function BP_GarbageItem.BP_GarbageItem_C.FindTeamIndoorTrashcan
// 0x0080 (0x0080 - 0x0000)
struct BP_GarbageItem_C_FindTeamIndoorTrashcan final
{
public:
	class ABP_IndoorTrashcan_C*                   IndoorTrashcan;                                    // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ABP_IndoorTrashcan_C*>           CallFunc_GetAllActorsOfClass_OutActors;            // 0x0018(0x0010)(ReferenceParm)
	class ABP_ResidentCharacter_C*                K2Node_DynamicCast_AsBP_Resident_Character;        // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_IndoorTrashcan_C*                   CallFunc_Array_Get_Item;                           // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FTeam                                  CallFunc_GetTeam_ReturnValue;                      // 0x0040(0x0038)(NoDestructor)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x007C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x007D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLocallyControlled_ReturnValue;          // 0x007E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GarbageItem_C_FindTeamIndoorTrashcan) == 0x000008, "Wrong alignment on BP_GarbageItem_C_FindTeamIndoorTrashcan");
static_assert(sizeof(BP_GarbageItem_C_FindTeamIndoorTrashcan) == 0x000080, "Wrong size on BP_GarbageItem_C_FindTeamIndoorTrashcan");
static_assert(offsetof(BP_GarbageItem_C_FindTeamIndoorTrashcan, IndoorTrashcan) == 0x000000, "Member 'BP_GarbageItem_C_FindTeamIndoorTrashcan::IndoorTrashcan' has a wrong offset!");
static_assert(offsetof(BP_GarbageItem_C_FindTeamIndoorTrashcan, Temp_int_Array_Index_Variable) == 0x000008, "Member 'BP_GarbageItem_C_FindTeamIndoorTrashcan::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_GarbageItem_C_FindTeamIndoorTrashcan, Temp_int_Loop_Counter_Variable) == 0x00000C, "Member 'BP_GarbageItem_C_FindTeamIndoorTrashcan::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_GarbageItem_C_FindTeamIndoorTrashcan, CallFunc_Add_IntInt_ReturnValue) == 0x000010, "Member 'BP_GarbageItem_C_FindTeamIndoorTrashcan::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GarbageItem_C_FindTeamIndoorTrashcan, CallFunc_GetAllActorsOfClass_OutActors) == 0x000018, "Member 'BP_GarbageItem_C_FindTeamIndoorTrashcan::CallFunc_GetAllActorsOfClass_OutActors' has a wrong offset!");
static_assert(offsetof(BP_GarbageItem_C_FindTeamIndoorTrashcan, K2Node_DynamicCast_AsBP_Resident_Character) == 0x000028, "Member 'BP_GarbageItem_C_FindTeamIndoorTrashcan::K2Node_DynamicCast_AsBP_Resident_Character' has a wrong offset!");
static_assert(offsetof(BP_GarbageItem_C_FindTeamIndoorTrashcan, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'BP_GarbageItem_C_FindTeamIndoorTrashcan::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_GarbageItem_C_FindTeamIndoorTrashcan, CallFunc_Array_Get_Item) == 0x000038, "Member 'BP_GarbageItem_C_FindTeamIndoorTrashcan::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_GarbageItem_C_FindTeamIndoorTrashcan, CallFunc_GetTeam_ReturnValue) == 0x000040, "Member 'BP_GarbageItem_C_FindTeamIndoorTrashcan::CallFunc_GetTeam_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GarbageItem_C_FindTeamIndoorTrashcan, CallFunc_Array_Length_ReturnValue) == 0x000078, "Member 'BP_GarbageItem_C_FindTeamIndoorTrashcan::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GarbageItem_C_FindTeamIndoorTrashcan, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x00007C, "Member 'BP_GarbageItem_C_FindTeamIndoorTrashcan::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GarbageItem_C_FindTeamIndoorTrashcan, CallFunc_Less_IntInt_ReturnValue) == 0x00007D, "Member 'BP_GarbageItem_C_FindTeamIndoorTrashcan::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GarbageItem_C_FindTeamIndoorTrashcan, CallFunc_IsLocallyControlled_ReturnValue) == 0x00007E, "Member 'BP_GarbageItem_C_FindTeamIndoorTrashcan::CallFunc_IsLocallyControlled_ReturnValue' has a wrong offset!");

// Function BP_GarbageItem.BP_GarbageItem_C.FindTeamTrashCan
// 0x00A0 (0x00A0 - 0x0000)
struct BP_GarbageItem_C_FindTeamTrashCan final
{
public:
	TArray<class ABP_Trashcan_C*>                 TrashCan;                                          // 0x0000(0x0010)(Parm, OutParm)
	TArray<class ABP_Trashcan_C*>                 FoundTrashCans;                                    // 0x0010(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ABP_Trashcan_C*>                 CallFunc_GetAllActorsOfClass_OutActors;            // 0x0030(0x0010)(ReferenceParm)
	class ABP_ResidentCharacter_C*                K2Node_DynamicCast_AsBP_Resident_Character;        // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_Trashcan_C*                         CallFunc_Array_Get_Item;                           // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FTeam                                  CallFunc_GetTeam_ReturnValue;                      // 0x0058(0x0038)(NoDestructor)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0099(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLocallyControlled_ReturnValue;          // 0x009A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GarbageItem_C_FindTeamTrashCan) == 0x000008, "Wrong alignment on BP_GarbageItem_C_FindTeamTrashCan");
static_assert(sizeof(BP_GarbageItem_C_FindTeamTrashCan) == 0x0000A0, "Wrong size on BP_GarbageItem_C_FindTeamTrashCan");
static_assert(offsetof(BP_GarbageItem_C_FindTeamTrashCan, TrashCan) == 0x000000, "Member 'BP_GarbageItem_C_FindTeamTrashCan::TrashCan' has a wrong offset!");
static_assert(offsetof(BP_GarbageItem_C_FindTeamTrashCan, FoundTrashCans) == 0x000010, "Member 'BP_GarbageItem_C_FindTeamTrashCan::FoundTrashCans' has a wrong offset!");
static_assert(offsetof(BP_GarbageItem_C_FindTeamTrashCan, Temp_int_Array_Index_Variable) == 0x000020, "Member 'BP_GarbageItem_C_FindTeamTrashCan::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_GarbageItem_C_FindTeamTrashCan, Temp_int_Loop_Counter_Variable) == 0x000024, "Member 'BP_GarbageItem_C_FindTeamTrashCan::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_GarbageItem_C_FindTeamTrashCan, CallFunc_Add_IntInt_ReturnValue) == 0x000028, "Member 'BP_GarbageItem_C_FindTeamTrashCan::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GarbageItem_C_FindTeamTrashCan, CallFunc_GetAllActorsOfClass_OutActors) == 0x000030, "Member 'BP_GarbageItem_C_FindTeamTrashCan::CallFunc_GetAllActorsOfClass_OutActors' has a wrong offset!");
static_assert(offsetof(BP_GarbageItem_C_FindTeamTrashCan, K2Node_DynamicCast_AsBP_Resident_Character) == 0x000040, "Member 'BP_GarbageItem_C_FindTeamTrashCan::K2Node_DynamicCast_AsBP_Resident_Character' has a wrong offset!");
static_assert(offsetof(BP_GarbageItem_C_FindTeamTrashCan, K2Node_DynamicCast_bSuccess) == 0x000048, "Member 'BP_GarbageItem_C_FindTeamTrashCan::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_GarbageItem_C_FindTeamTrashCan, CallFunc_Array_Get_Item) == 0x000050, "Member 'BP_GarbageItem_C_FindTeamTrashCan::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_GarbageItem_C_FindTeamTrashCan, CallFunc_GetTeam_ReturnValue) == 0x000058, "Member 'BP_GarbageItem_C_FindTeamTrashCan::CallFunc_GetTeam_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GarbageItem_C_FindTeamTrashCan, CallFunc_Array_Add_ReturnValue) == 0x000090, "Member 'BP_GarbageItem_C_FindTeamTrashCan::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GarbageItem_C_FindTeamTrashCan, CallFunc_Array_Length_ReturnValue) == 0x000094, "Member 'BP_GarbageItem_C_FindTeamTrashCan::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GarbageItem_C_FindTeamTrashCan, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000098, "Member 'BP_GarbageItem_C_FindTeamTrashCan::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GarbageItem_C_FindTeamTrashCan, CallFunc_Less_IntInt_ReturnValue) == 0x000099, "Member 'BP_GarbageItem_C_FindTeamTrashCan::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GarbageItem_C_FindTeamTrashCan, CallFunc_IsLocallyControlled_ReturnValue) == 0x00009A, "Member 'BP_GarbageItem_C_FindTeamTrashCan::CallFunc_IsLocallyControlled_ReturnValue' has a wrong offset!");

// Function BP_GarbageItem.BP_GarbageItem_C.GetValidASC
// 0x0038 (0x0038 - 0x0000)
struct BP_GarbageItem_C_GetValidASC final
{
public:
	class AActor*                                 Actor;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAbilitySystemComponent*                ASC;                                               // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          Valid;                                             // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_GetInstigator_ReturnValue;                // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAbilitySystemComponent*                CallFunc_GetAbilitySystemComponent_ReturnValue;    // 0x0020(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UAbilitySystemComponent*                CallFunc_GetAbilitySystemComponent_ReturnValue_1;  // 0x0028(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GarbageItem_C_GetValidASC) == 0x000008, "Wrong alignment on BP_GarbageItem_C_GetValidASC");
static_assert(sizeof(BP_GarbageItem_C_GetValidASC) == 0x000038, "Wrong size on BP_GarbageItem_C_GetValidASC");
static_assert(offsetof(BP_GarbageItem_C_GetValidASC, Actor) == 0x000000, "Member 'BP_GarbageItem_C_GetValidASC::Actor' has a wrong offset!");
static_assert(offsetof(BP_GarbageItem_C_GetValidASC, ASC) == 0x000008, "Member 'BP_GarbageItem_C_GetValidASC::ASC' has a wrong offset!");
static_assert(offsetof(BP_GarbageItem_C_GetValidASC, Valid) == 0x000010, "Member 'BP_GarbageItem_C_GetValidASC::Valid' has a wrong offset!");
static_assert(offsetof(BP_GarbageItem_C_GetValidASC, CallFunc_GetInstigator_ReturnValue) == 0x000018, "Member 'BP_GarbageItem_C_GetValidASC::CallFunc_GetInstigator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GarbageItem_C_GetValidASC, CallFunc_GetAbilitySystemComponent_ReturnValue) == 0x000020, "Member 'BP_GarbageItem_C_GetValidASC::CallFunc_GetAbilitySystemComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GarbageItem_C_GetValidASC, CallFunc_GetAbilitySystemComponent_ReturnValue_1) == 0x000028, "Member 'BP_GarbageItem_C_GetValidASC::CallFunc_GetAbilitySystemComponent_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GarbageItem_C_GetValidASC, CallFunc_IsValid_ReturnValue) == 0x000030, "Member 'BP_GarbageItem_C_GetValidASC::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GarbageItem_C_GetValidASC, CallFunc_IsValid_ReturnValue_1) == 0x000031, "Member 'BP_GarbageItem_C_GetValidASC::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function BP_GarbageItem.BP_GarbageItem_C.HandleDamageEvent
// 0x01A0 (0x01A0 - 0x0000)
struct BP_GarbageItem_C_HandleDamageEvent final
{
public:
	class AActor*                                 Actor;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class II_ShieldBlock_C>      K2Node_DynamicCast_AsI_Shield_Block;               // 0x0008(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_FTrunc_ReturnValue;                       // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAbilitySystemComponent*                CallFunc_GetValidASC_ASC;                          // 0x0020(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetValidASC_Valid;                        // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0030(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_MakeHitResult_ReturnValue;                // 0x0048(0x00F8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0140(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_141[0x7];                                      // 0x0141(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAbilitySystemComponent*                CallFunc_GetAbilitySystemComponent_ReturnValue;    // 0x0148(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UAbilitySystemComponent*                CallFunc_GetAbilitySystemComponent_ReturnValue_1;  // 0x0150(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FGameplayEffectSpecHandle              CallFunc_MakeOutgoingSpec_ReturnValue;             // 0x0158(0x0010)()
	struct FGameplayEffectSpecHandle              CallFunc_AssignTagSetByCallerMagnitude_ReturnValue; // 0x0168(0x0010)()
	struct FActiveGameplayEffectHandle            CallFunc_BP_ApplyGameplayEffectSpecToTarget_ReturnValue; // 0x0178(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FGameplayEffectContextHandle           CallFunc_GetEffectContext_ReturnValue;             // 0x0180(0x0018)()
	float                                         CallFunc_AssignTagSetByCallerMagnitude_Magnitude_ImplicitCast; // 0x0198(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GarbageItem_C_HandleDamageEvent) == 0x000008, "Wrong alignment on BP_GarbageItem_C_HandleDamageEvent");
static_assert(sizeof(BP_GarbageItem_C_HandleDamageEvent) == 0x0001A0, "Wrong size on BP_GarbageItem_C_HandleDamageEvent");
static_assert(offsetof(BP_GarbageItem_C_HandleDamageEvent, Actor) == 0x000000, "Member 'BP_GarbageItem_C_HandleDamageEvent::Actor' has a wrong offset!");
static_assert(offsetof(BP_GarbageItem_C_HandleDamageEvent, K2Node_DynamicCast_AsI_Shield_Block) == 0x000008, "Member 'BP_GarbageItem_C_HandleDamageEvent::K2Node_DynamicCast_AsI_Shield_Block' has a wrong offset!");
static_assert(offsetof(BP_GarbageItem_C_HandleDamageEvent, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_GarbageItem_C_HandleDamageEvent::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_GarbageItem_C_HandleDamageEvent, CallFunc_FTrunc_ReturnValue) == 0x00001C, "Member 'BP_GarbageItem_C_HandleDamageEvent::CallFunc_FTrunc_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GarbageItem_C_HandleDamageEvent, CallFunc_GetValidASC_ASC) == 0x000020, "Member 'BP_GarbageItem_C_HandleDamageEvent::CallFunc_GetValidASC_ASC' has a wrong offset!");
static_assert(offsetof(BP_GarbageItem_C_HandleDamageEvent, CallFunc_GetValidASC_Valid) == 0x000028, "Member 'BP_GarbageItem_C_HandleDamageEvent::CallFunc_GetValidASC_Valid' has a wrong offset!");
static_assert(offsetof(BP_GarbageItem_C_HandleDamageEvent, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000030, "Member 'BP_GarbageItem_C_HandleDamageEvent::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GarbageItem_C_HandleDamageEvent, CallFunc_MakeHitResult_ReturnValue) == 0x000048, "Member 'BP_GarbageItem_C_HandleDamageEvent::CallFunc_MakeHitResult_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GarbageItem_C_HandleDamageEvent, CallFunc_IsValid_ReturnValue) == 0x000140, "Member 'BP_GarbageItem_C_HandleDamageEvent::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GarbageItem_C_HandleDamageEvent, CallFunc_GetAbilitySystemComponent_ReturnValue) == 0x000148, "Member 'BP_GarbageItem_C_HandleDamageEvent::CallFunc_GetAbilitySystemComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GarbageItem_C_HandleDamageEvent, CallFunc_GetAbilitySystemComponent_ReturnValue_1) == 0x000150, "Member 'BP_GarbageItem_C_HandleDamageEvent::CallFunc_GetAbilitySystemComponent_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GarbageItem_C_HandleDamageEvent, CallFunc_MakeOutgoingSpec_ReturnValue) == 0x000158, "Member 'BP_GarbageItem_C_HandleDamageEvent::CallFunc_MakeOutgoingSpec_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GarbageItem_C_HandleDamageEvent, CallFunc_AssignTagSetByCallerMagnitude_ReturnValue) == 0x000168, "Member 'BP_GarbageItem_C_HandleDamageEvent::CallFunc_AssignTagSetByCallerMagnitude_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GarbageItem_C_HandleDamageEvent, CallFunc_BP_ApplyGameplayEffectSpecToTarget_ReturnValue) == 0x000178, "Member 'BP_GarbageItem_C_HandleDamageEvent::CallFunc_BP_ApplyGameplayEffectSpecToTarget_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GarbageItem_C_HandleDamageEvent, CallFunc_GetEffectContext_ReturnValue) == 0x000180, "Member 'BP_GarbageItem_C_HandleDamageEvent::CallFunc_GetEffectContext_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GarbageItem_C_HandleDamageEvent, CallFunc_AssignTagSetByCallerMagnitude_Magnitude_ImplicitCast) == 0x000198, "Member 'BP_GarbageItem_C_HandleDamageEvent::CallFunc_AssignTagSetByCallerMagnitude_Magnitude_ImplicitCast' has a wrong offset!");

// Function BP_GarbageItem.BP_GarbageItem_C.Multi_GenerateRandomMesh
// 0x0004 (0x0004 - 0x0000)
struct BP_GarbageItem_C_Multi_GenerateRandomMesh final
{
public:
	int32                                         Seed;                                              // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GarbageItem_C_Multi_GenerateRandomMesh) == 0x000004, "Wrong alignment on BP_GarbageItem_C_Multi_GenerateRandomMesh");
static_assert(sizeof(BP_GarbageItem_C_Multi_GenerateRandomMesh) == 0x000004, "Wrong size on BP_GarbageItem_C_Multi_GenerateRandomMesh");
static_assert(offsetof(BP_GarbageItem_C_Multi_GenerateRandomMesh, Seed) == 0x000000, "Member 'BP_GarbageItem_C_Multi_GenerateRandomMesh::Seed' has a wrong offset!");

// Function BP_GarbageItem.BP_GarbageItem_C.MulticastLaunch
// 0x0018 (0x0018 - 0x0000)
struct BP_GarbageItem_C_MulticastLaunch final
{
public:
	struct FVector                                Impulse;                                           // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GarbageItem_C_MulticastLaunch) == 0x000008, "Wrong alignment on BP_GarbageItem_C_MulticastLaunch");
static_assert(sizeof(BP_GarbageItem_C_MulticastLaunch) == 0x000018, "Wrong size on BP_GarbageItem_C_MulticastLaunch");
static_assert(offsetof(BP_GarbageItem_C_MulticastLaunch, Impulse) == 0x000000, "Member 'BP_GarbageItem_C_MulticastLaunch::Impulse' has a wrong offset!");

// Function BP_GarbageItem.BP_GarbageItem_C.On Pickup
// 0x0020 (0x0020 - 0x0000)
struct BP_GarbageItem_C_On_Pickup final
{
public:
	struct FVector                                EndLocation_0;                                     // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_Trashbag_Equipable_C*               Trashbag;                                          // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GarbageItem_C_On_Pickup) == 0x000008, "Wrong alignment on BP_GarbageItem_C_On_Pickup");
static_assert(sizeof(BP_GarbageItem_C_On_Pickup) == 0x000020, "Wrong size on BP_GarbageItem_C_On_Pickup");
static_assert(offsetof(BP_GarbageItem_C_On_Pickup, EndLocation_0) == 0x000000, "Member 'BP_GarbageItem_C_On_Pickup::EndLocation_0' has a wrong offset!");
static_assert(offsetof(BP_GarbageItem_C_On_Pickup, Trashbag) == 0x000018, "Member 'BP_GarbageItem_C_On_Pickup::Trashbag' has a wrong offset!");

// Function BP_GarbageItem.BP_GarbageItem_C.PlayLerp
// 0x0060 (0x0060 - 0x0000)
struct BP_GarbageItem_C_PlayLerp final
{
public:
	double                                        PlayRate;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRandomStream                          CallFunc_MakeRandomStream_ReturnValue;             // 0x0008(0x0008)(ZeroConstructor, NoDestructor)
	struct FVector                                CallFunc_RandomUnitVectorFromStream_ReturnValue;   // 0x0010(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_Conv_VectorToRotator_ReturnValue;         // 0x0028(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_Multiply_RotatorFloat_ReturnValue;        // 0x0040(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_SetPlayRate_NewRate_ImplicitCast;         // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GarbageItem_C_PlayLerp) == 0x000008, "Wrong alignment on BP_GarbageItem_C_PlayLerp");
static_assert(sizeof(BP_GarbageItem_C_PlayLerp) == 0x000060, "Wrong size on BP_GarbageItem_C_PlayLerp");
static_assert(offsetof(BP_GarbageItem_C_PlayLerp, PlayRate) == 0x000000, "Member 'BP_GarbageItem_C_PlayLerp::PlayRate' has a wrong offset!");
static_assert(offsetof(BP_GarbageItem_C_PlayLerp, CallFunc_MakeRandomStream_ReturnValue) == 0x000008, "Member 'BP_GarbageItem_C_PlayLerp::CallFunc_MakeRandomStream_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GarbageItem_C_PlayLerp, CallFunc_RandomUnitVectorFromStream_ReturnValue) == 0x000010, "Member 'BP_GarbageItem_C_PlayLerp::CallFunc_RandomUnitVectorFromStream_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GarbageItem_C_PlayLerp, CallFunc_Conv_VectorToRotator_ReturnValue) == 0x000028, "Member 'BP_GarbageItem_C_PlayLerp::CallFunc_Conv_VectorToRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GarbageItem_C_PlayLerp, CallFunc_Multiply_RotatorFloat_ReturnValue) == 0x000040, "Member 'BP_GarbageItem_C_PlayLerp::CallFunc_Multiply_RotatorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GarbageItem_C_PlayLerp, CallFunc_SetPlayRate_NewRate_ImplicitCast) == 0x000058, "Member 'BP_GarbageItem_C_PlayLerp::CallFunc_SetPlayRate_NewRate_ImplicitCast' has a wrong offset!");

// Function BP_GarbageItem.BP_GarbageItem_C.ReceiveActorBeginOverlap
// 0x0008 (0x0008 - 0x0000)
struct BP_GarbageItem_C_ReceiveActorBeginOverlap final
{
public:
	class AActor*                                 OtherActor;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GarbageItem_C_ReceiveActorBeginOverlap) == 0x000008, "Wrong alignment on BP_GarbageItem_C_ReceiveActorBeginOverlap");
static_assert(sizeof(BP_GarbageItem_C_ReceiveActorBeginOverlap) == 0x000008, "Wrong size on BP_GarbageItem_C_ReceiveActorBeginOverlap");
static_assert(offsetof(BP_GarbageItem_C_ReceiveActorBeginOverlap, OtherActor) == 0x000000, "Member 'BP_GarbageItem_C_ReceiveActorBeginOverlap::OtherActor' has a wrong offset!");

// Function BP_GarbageItem.BP_GarbageItem_C.ReceiveActorEndOverlap
// 0x0008 (0x0008 - 0x0000)
struct BP_GarbageItem_C_ReceiveActorEndOverlap final
{
public:
	class AActor*                                 OtherActor;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GarbageItem_C_ReceiveActorEndOverlap) == 0x000008, "Wrong alignment on BP_GarbageItem_C_ReceiveActorEndOverlap");
static_assert(sizeof(BP_GarbageItem_C_ReceiveActorEndOverlap) == 0x000008, "Wrong size on BP_GarbageItem_C_ReceiveActorEndOverlap");
static_assert(offsetof(BP_GarbageItem_C_ReceiveActorEndOverlap, OtherActor) == 0x000000, "Member 'BP_GarbageItem_C_ReceiveActorEndOverlap::OtherActor' has a wrong offset!");

// Function BP_GarbageItem.BP_GarbageItem_C.SetContextName
// 0x0018 (0x0018 - 0x0000)
struct BP_GarbageItem_C_SetContextName final
{
public:
	class UUserWidget*                            CallFunc_GetUserWidgetObject_ReturnValue;          // 0x0000(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWI_ObjectContext_C*                    K2Node_DynamicCast_AsWI_Object_Context;            // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GarbageItem_C_SetContextName) == 0x000008, "Wrong alignment on BP_GarbageItem_C_SetContextName");
static_assert(sizeof(BP_GarbageItem_C_SetContextName) == 0x000018, "Wrong size on BP_GarbageItem_C_SetContextName");
static_assert(offsetof(BP_GarbageItem_C_SetContextName, CallFunc_GetUserWidgetObject_ReturnValue) == 0x000000, "Member 'BP_GarbageItem_C_SetContextName::CallFunc_GetUserWidgetObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GarbageItem_C_SetContextName, K2Node_DynamicCast_AsWI_Object_Context) == 0x000008, "Member 'BP_GarbageItem_C_SetContextName::K2Node_DynamicCast_AsWI_Object_Context' has a wrong offset!");
static_assert(offsetof(BP_GarbageItem_C_SetContextName, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'BP_GarbageItem_C_SetContextName::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BP_GarbageItem.BP_GarbageItem_C.SetLerpValues
// 0x0048 (0x0048 - 0x0000)
struct BP_GarbageItem_C_SetLerpValues final
{
public:
	struct FVector                                EndLocation_0;                                     // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorScale3D_ReturnValue;              // 0x0018(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0030(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GarbageItem_C_SetLerpValues) == 0x000008, "Wrong alignment on BP_GarbageItem_C_SetLerpValues");
static_assert(sizeof(BP_GarbageItem_C_SetLerpValues) == 0x000048, "Wrong size on BP_GarbageItem_C_SetLerpValues");
static_assert(offsetof(BP_GarbageItem_C_SetLerpValues, EndLocation_0) == 0x000000, "Member 'BP_GarbageItem_C_SetLerpValues::EndLocation_0' has a wrong offset!");
static_assert(offsetof(BP_GarbageItem_C_SetLerpValues, CallFunc_GetActorScale3D_ReturnValue) == 0x000018, "Member 'BP_GarbageItem_C_SetLerpValues::CallFunc_GetActorScale3D_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GarbageItem_C_SetLerpValues, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000030, "Member 'BP_GarbageItem_C_SetLerpValues::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");

// Function BP_GarbageItem.BP_GarbageItem_C.SetSeethroughMeshParams
// 0x0008 (0x0008 - 0x0000)
struct BP_GarbageItem_C_SetSeethroughMeshParams final
{
public:
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GarbageItem_C_SetSeethroughMeshParams) == 0x000008, "Wrong alignment on BP_GarbageItem_C_SetSeethroughMeshParams");
static_assert(sizeof(BP_GarbageItem_C_SetSeethroughMeshParams) == 0x000008, "Wrong size on BP_GarbageItem_C_SetSeethroughMeshParams");
static_assert(offsetof(BP_GarbageItem_C_SetSeethroughMeshParams, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x000000, "Member 'BP_GarbageItem_C_SetSeethroughMeshParams::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");

// Function BP_GarbageItem.BP_GarbageItem_C.ShootTrash
// 0x0018 (0x0018 - 0x0000)
struct BP_GarbageItem_C_ShootTrash final
{
public:
	struct FVector                                Impulse;                                           // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GarbageItem_C_ShootTrash) == 0x000008, "Wrong alignment on BP_GarbageItem_C_ShootTrash");
static_assert(sizeof(BP_GarbageItem_C_ShootTrash) == 0x000018, "Wrong size on BP_GarbageItem_C_ShootTrash");
static_assert(offsetof(BP_GarbageItem_C_ShootTrash, Impulse) == 0x000000, "Member 'BP_GarbageItem_C_ShootTrash::Impulse' has a wrong offset!");

// Function BP_GarbageItem.BP_GarbageItem_C.ToggleMeshOverlay
// 0x0040 (0x0040 - 0x0000)
struct BP_GarbageItem_C_ToggleMeshOverlay final
{
public:
	bool                                          Visible;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x2];                                        // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_IndoorTrashcan_C*                   CallFunc_FindTeamIndoorTrashcan_IndoorTrashcan;    // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ABP_Trashcan_C*>                 CallFunc_FindTeamTrashCan_TrashCan;                // 0x0020(0x0010)(ReferenceParm)
	class ABP_Trashcan_C*                         CallFunc_Array_Get_Item;                           // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x003D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GarbageItem_C_ToggleMeshOverlay) == 0x000008, "Wrong alignment on BP_GarbageItem_C_ToggleMeshOverlay");
static_assert(sizeof(BP_GarbageItem_C_ToggleMeshOverlay) == 0x000040, "Wrong size on BP_GarbageItem_C_ToggleMeshOverlay");
static_assert(offsetof(BP_GarbageItem_C_ToggleMeshOverlay, Visible) == 0x000000, "Member 'BP_GarbageItem_C_ToggleMeshOverlay::Visible' has a wrong offset!");
static_assert(offsetof(BP_GarbageItem_C_ToggleMeshOverlay, CallFunc_Not_PreBool_ReturnValue) == 0x000001, "Member 'BP_GarbageItem_C_ToggleMeshOverlay::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GarbageItem_C_ToggleMeshOverlay, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'BP_GarbageItem_C_ToggleMeshOverlay::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_GarbageItem_C_ToggleMeshOverlay, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'BP_GarbageItem_C_ToggleMeshOverlay::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GarbageItem_C_ToggleMeshOverlay, CallFunc_FindTeamIndoorTrashcan_IndoorTrashcan) == 0x000010, "Member 'BP_GarbageItem_C_ToggleMeshOverlay::CallFunc_FindTeamIndoorTrashcan_IndoorTrashcan' has a wrong offset!");
static_assert(offsetof(BP_GarbageItem_C_ToggleMeshOverlay, Temp_int_Array_Index_Variable) == 0x000018, "Member 'BP_GarbageItem_C_ToggleMeshOverlay::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_GarbageItem_C_ToggleMeshOverlay, CallFunc_IsValid_ReturnValue) == 0x00001C, "Member 'BP_GarbageItem_C_ToggleMeshOverlay::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GarbageItem_C_ToggleMeshOverlay, CallFunc_FindTeamTrashCan_TrashCan) == 0x000020, "Member 'BP_GarbageItem_C_ToggleMeshOverlay::CallFunc_FindTeamTrashCan_TrashCan' has a wrong offset!");
static_assert(offsetof(BP_GarbageItem_C_ToggleMeshOverlay, CallFunc_Array_Get_Item) == 0x000030, "Member 'BP_GarbageItem_C_ToggleMeshOverlay::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_GarbageItem_C_ToggleMeshOverlay, CallFunc_Array_Length_ReturnValue) == 0x000038, "Member 'BP_GarbageItem_C_ToggleMeshOverlay::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GarbageItem_C_ToggleMeshOverlay, CallFunc_IsValid_ReturnValue_1) == 0x00003C, "Member 'BP_GarbageItem_C_ToggleMeshOverlay::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GarbageItem_C_ToggleMeshOverlay, CallFunc_Less_IntInt_ReturnValue) == 0x00003D, "Member 'BP_GarbageItem_C_ToggleMeshOverlay::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function BP_GarbageItem.BP_GarbageItem_C.TogglePhysicsOnTrash
// 0x0001 (0x0001 - 0x0000)
struct BP_GarbageItem_C_TogglePhysicsOnTrash final
{
public:
	bool                                          Active;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GarbageItem_C_TogglePhysicsOnTrash) == 0x000001, "Wrong alignment on BP_GarbageItem_C_TogglePhysicsOnTrash");
static_assert(sizeof(BP_GarbageItem_C_TogglePhysicsOnTrash) == 0x000001, "Wrong size on BP_GarbageItem_C_TogglePhysicsOnTrash");
static_assert(offsetof(BP_GarbageItem_C_TogglePhysicsOnTrash, Active) == 0x000000, "Member 'BP_GarbageItem_C_TogglePhysicsOnTrash::Active' has a wrong offset!");

// Function BP_GarbageItem.BP_GarbageItem_C.ServerPush
// 0x0020 (0x0020 - 0x0000)
struct BP_GarbageItem_C_ServerPush final
{
public:
	class AActor*                                 TargetActor;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                LaunchVelocity_0;                                  // 0x0008(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GarbageItem_C_ServerPush) == 0x000008, "Wrong alignment on BP_GarbageItem_C_ServerPush");
static_assert(sizeof(BP_GarbageItem_C_ServerPush) == 0x000020, "Wrong size on BP_GarbageItem_C_ServerPush");
static_assert(offsetof(BP_GarbageItem_C_ServerPush, TargetActor) == 0x000000, "Member 'BP_GarbageItem_C_ServerPush::TargetActor' has a wrong offset!");
static_assert(offsetof(BP_GarbageItem_C_ServerPush, LaunchVelocity_0) == 0x000008, "Member 'BP_GarbageItem_C_ServerPush::LaunchVelocity_0' has a wrong offset!");

// Function BP_GarbageItem.BP_GarbageItem_C.GetDurabilityCostWhenHit
// 0x0008 (0x0008 - 0x0000)
struct BP_GarbageItem_C_GetDurabilityCostWhenHit final
{
public:
	double                                        Amount;                                            // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GarbageItem_C_GetDurabilityCostWhenHit) == 0x000008, "Wrong alignment on BP_GarbageItem_C_GetDurabilityCostWhenHit");
static_assert(sizeof(BP_GarbageItem_C_GetDurabilityCostWhenHit) == 0x000008, "Wrong size on BP_GarbageItem_C_GetDurabilityCostWhenHit");
static_assert(offsetof(BP_GarbageItem_C_GetDurabilityCostWhenHit, Amount) == 0x000000, "Member 'BP_GarbageItem_C_GetDurabilityCostWhenHit::Amount' has a wrong offset!");

// Function BP_GarbageItem.BP_GarbageItem_C.GetMaterialType
// 0x0001 (0x0001 - 0x0000)
struct BP_GarbageItem_C_GetMaterialType final
{
public:
	E_MaterialTypes                               MaterialType;                                      // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GarbageItem_C_GetMaterialType) == 0x000001, "Wrong alignment on BP_GarbageItem_C_GetMaterialType");
static_assert(sizeof(BP_GarbageItem_C_GetMaterialType) == 0x000001, "Wrong size on BP_GarbageItem_C_GetMaterialType");
static_assert(offsetof(BP_GarbageItem_C_GetMaterialType, MaterialType) == 0x000000, "Member 'BP_GarbageItem_C_GetMaterialType::MaterialType' has a wrong offset!");

// Function BP_GarbageItem.BP_GarbageItem_C.GrippedLocal
// 0x0008 (0x0008 - 0x0000)
struct BP_GarbageItem_C_GrippedLocal final
{
public:
	class ACharacter*                             GrippingCharacter;                                 // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GarbageItem_C_GrippedLocal) == 0x000008, "Wrong alignment on BP_GarbageItem_C_GrippedLocal");
static_assert(sizeof(BP_GarbageItem_C_GrippedLocal) == 0x000008, "Wrong size on BP_GarbageItem_C_GrippedLocal");
static_assert(offsetof(BP_GarbageItem_C_GrippedLocal, GrippingCharacter) == 0x000000, "Member 'BP_GarbageItem_C_GrippedLocal::GrippingCharacter' has a wrong offset!");

// Function BP_GarbageItem.BP_GarbageItem_C.ImpactCosmetics
// 0x0048 (0x0048 - 0x0000)
struct BP_GarbageItem_C_ImpactCosmetics final
{
public:
	class APawn*                                  ImpactCauser;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Location;                                          // 0x0008(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                HitImpulse;                                        // 0x0020(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_ImpactEffect                                ImpactEffect;                                      // 0x0038(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x3];                                       // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   BoneName;                                          // 0x003C(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ChangedAttributes;                                 // 0x0044(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GarbageItem_C_ImpactCosmetics) == 0x000008, "Wrong alignment on BP_GarbageItem_C_ImpactCosmetics");
static_assert(sizeof(BP_GarbageItem_C_ImpactCosmetics) == 0x000048, "Wrong size on BP_GarbageItem_C_ImpactCosmetics");
static_assert(offsetof(BP_GarbageItem_C_ImpactCosmetics, ImpactCauser) == 0x000000, "Member 'BP_GarbageItem_C_ImpactCosmetics::ImpactCauser' has a wrong offset!");
static_assert(offsetof(BP_GarbageItem_C_ImpactCosmetics, Location) == 0x000008, "Member 'BP_GarbageItem_C_ImpactCosmetics::Location' has a wrong offset!");
static_assert(offsetof(BP_GarbageItem_C_ImpactCosmetics, HitImpulse) == 0x000020, "Member 'BP_GarbageItem_C_ImpactCosmetics::HitImpulse' has a wrong offset!");
static_assert(offsetof(BP_GarbageItem_C_ImpactCosmetics, ImpactEffect) == 0x000038, "Member 'BP_GarbageItem_C_ImpactCosmetics::ImpactEffect' has a wrong offset!");
static_assert(offsetof(BP_GarbageItem_C_ImpactCosmetics, BoneName) == 0x00003C, "Member 'BP_GarbageItem_C_ImpactCosmetics::BoneName' has a wrong offset!");
static_assert(offsetof(BP_GarbageItem_C_ImpactCosmetics, ChangedAttributes) == 0x000044, "Member 'BP_GarbageItem_C_ImpactCosmetics::ChangedAttributes' has a wrong offset!");

// Function BP_GarbageItem.BP_GarbageItem_C.IsInFocus
// 0x0008 (0x0008 - 0x0000)
struct BP_GarbageItem_C_IsInFocus final
{
public:
	class AActor*                                 Focusing_Actor;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GarbageItem_C_IsInFocus) == 0x000008, "Wrong alignment on BP_GarbageItem_C_IsInFocus");
static_assert(sizeof(BP_GarbageItem_C_IsInFocus) == 0x000008, "Wrong size on BP_GarbageItem_C_IsInFocus");
static_assert(offsetof(BP_GarbageItem_C_IsInFocus, Focusing_Actor) == 0x000000, "Member 'BP_GarbageItem_C_IsInFocus::Focusing_Actor' has a wrong offset!");

// Function BP_GarbageItem.BP_GarbageItem_C.Knockback
// 0x0030 (0x0030 - 0x0000)
struct BP_GarbageItem_C_Knockback final
{
public:
	struct FVector                                Velocity;                                          // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          XYOverride;                                        // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ZOverride;                                         // 0x0019(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A[0x6];                                       // 0x001A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        AirControlMultiplier;                              // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Void;                                              // 0x0028(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GarbageItem_C_Knockback) == 0x000008, "Wrong alignment on BP_GarbageItem_C_Knockback");
static_assert(sizeof(BP_GarbageItem_C_Knockback) == 0x000030, "Wrong size on BP_GarbageItem_C_Knockback");
static_assert(offsetof(BP_GarbageItem_C_Knockback, Velocity) == 0x000000, "Member 'BP_GarbageItem_C_Knockback::Velocity' has a wrong offset!");
static_assert(offsetof(BP_GarbageItem_C_Knockback, XYOverride) == 0x000018, "Member 'BP_GarbageItem_C_Knockback::XYOverride' has a wrong offset!");
static_assert(offsetof(BP_GarbageItem_C_Knockback, ZOverride) == 0x000019, "Member 'BP_GarbageItem_C_Knockback::ZOverride' has a wrong offset!");
static_assert(offsetof(BP_GarbageItem_C_Knockback, AirControlMultiplier) == 0x000020, "Member 'BP_GarbageItem_C_Knockback::AirControlMultiplier' has a wrong offset!");
static_assert(offsetof(BP_GarbageItem_C_Knockback, Void) == 0x000028, "Member 'BP_GarbageItem_C_Knockback::Void' has a wrong offset!");
static_assert(offsetof(BP_GarbageItem_C_Knockback, CallFunc_HasAuthority_ReturnValue) == 0x000029, "Member 'BP_GarbageItem_C_Knockback::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");

// Function BP_GarbageItem.BP_GarbageItem_C.Released Local
// 0x0008 (0x0008 - 0x0000)
struct BP_GarbageItem_C_Released_Local final
{
public:
	class ACharacter*                             ReleasingCharacter;                                // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GarbageItem_C_Released_Local) == 0x000008, "Wrong alignment on BP_GarbageItem_C_Released_Local");
static_assert(sizeof(BP_GarbageItem_C_Released_Local) == 0x000008, "Wrong size on BP_GarbageItem_C_Released_Local");
static_assert(offsetof(BP_GarbageItem_C_Released_Local, ReleasingCharacter) == 0x000000, "Member 'BP_GarbageItem_C_Released_Local::ReleasingCharacter' has a wrong offset!");

}

