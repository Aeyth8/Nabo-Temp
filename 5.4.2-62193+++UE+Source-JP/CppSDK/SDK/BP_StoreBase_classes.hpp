#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_StoreBase

#include "Basic.hpp"

#include "JP_structs.hpp"
#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "CoreUObject_structs.hpp"
#include "E_ShopType_structs.hpp"
#include "E_MaterialTypes_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_StoreBase.BP_StoreBase_C
// 0x01E8 (0x0478 - 0x0290)
class ABP_StoreBase_C : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0290(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UAC_Indicator_C*                        AC_Indicator_HandIn;                               // 0x0298(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   HandInCube;                                        // 0x02A0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          HandInCollider;                                    // 0x02A8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        Scene_HandIn;                                      // 0x02B0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UAC_Indicator_C*                        AC_Indicator;                                      // 0x02B8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBP_PingableComponent_C*                BP_PingableComponent;                              // 0x02C0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UArrowComponent*                        Arrow;                                             // 0x02C8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        Audio_UpgradeLoop;                                 // 0x02D0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UNiagaraComponent*                      UpgradeParticles;                                  // 0x02D8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        SceneMesh;                                         // 0x02E0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        InteractLocation;                                  // 0x02E8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        Root;                                              // 0x02F0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 SkeletalMesh;                                      // 0x02F8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         TL_Upgrade_Alpha_5B98DBEB41F5DA983D9A7ABA67B1404D; // 0x0300(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            TL_Upgrade__Direction_5B98DBEB41F5DA983D9A7ABA67B1404D; // 0x0304(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_305[0x3];                                      // 0x0305(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     TL_Upgrade;                                        // 0x0308(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class APlayerControllerJP_MatchBP_C*          Latest_Damaging_Controller;                        // 0x0310(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class ABP_ShopInteraction_C*                  ShopInteraction;                                   // 0x0318(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               PickupBuildRotation;                               // 0x0320(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	E_ShopType                                    StoreType;                                         // 0x0338(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_339[0x7];                                      // 0x0339(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_RoomManager_C*                      AssociatedRoomManager;                             // 0x0340(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	ERooms                                        RoomToUpgrade;                                     // 0x0348(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_349[0x3];                                      // 0x0349(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ShopTier;                                          // 0x034C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Radial;                                            // 0x0350(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_351[0x7];                                      // 0x0351(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class USkeletalMesh>           Level2SkeletalMesh;                                // 0x0358(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	TSoftObjectPtr<class USkeletalMesh>           Level3SkeletalMesh;                                // 0x0380(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	class UClass*                                 StoreLvl1AnimInstance;                             // 0x03A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 StoreLvl2AnimInstance;                             // 0x03B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 StoreLvl3AnimInstance;                             // 0x03B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           StoreLvl2MontageUpgrading;                         // 0x03C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           StoreLvl1MontageUpgrading;                         // 0x03C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           StoreLvl2MontageUpgradeComplete;                   // 0x03D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           StoreLvl3MontageUpgradeComplete;                   // 0x03D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class USkeletalMesh*                          Lvl2SkeletalMesh;                                  // 0x03E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class USkeletalMesh*                          Lvl3SkeletalMesh;                                  // 0x03E8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     MaterialRed_Level1;                                // 0x03F0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     MaterialRed_Level2;                                // 0x03F8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     MaterialRed_Level3;                                // 0x0400(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     MaterialBlue_Level1;                               // 0x0408(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     MaterialBlue_Level2;                               // 0x0410(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     MaterialBlue_Level3;                               // 0x0418(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	uint8                                         TeamId;                                            // 0x0420(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_421[0x7];                                      // 0x0421(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_ResourceCrate_C*                    CurrentObjectInRange;                              // 0x0428(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	FMulticastInlineDelegateProperty_             On_ResourceCrateDelivered;                         // 0x0430(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	TArray<bool>                                  ResourcesUnlockSteps;                              // 0x0440(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<bool>                                  ResourcesFenceUpgradeSteps;                        // 0x0450(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	bool                                          Upgrading;                                         // 0x0460(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          UpgradedToLevel2;                                  // 0x0461(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          UpgradedToLevel3;                                  // 0x0462(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_463[0x5];                                      // 0x0463(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class APlayerStateJP*>                 PlayersOfTeam;                                     // 0x0468(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, DisableEditOnInstance)

public:
	void ActivatePointOfInterest();
	void BndEvt__BP_StoreBase_HandInCollider_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
	void Cosmetic_Collect(class AActor* Target);
	void DeactivatePointOfInterest();
	bool DoesTeamAtPointHavePlayers();
	void ExecuteUbergraph_BP_StoreBase(int32 EntryPoint);
	int32 GetAmountOfResourcesForTeam(TArray<class APlayerStateJP*>& PlayerStatesForTeam);
	void GetMaterialType(E_MaterialTypes* MaterialType);
	void GetRoomManagerToUpgrade(class ABP_RoomManager_C** RoomManager);
	void GetStartingResources(int32* StartingResources);
	void GiveMoneyRewardForResourceDelivery();
	void Hack_Timer_1_Elapsed();
	void Hack_Timer_2_Elapsed();
	bool IsInRange(int32 Amount, int32 MinIncluding, int32 MaxExcluding);
	void Multi_Show_New_Unlocks(const TArray<class APlayerStateJP*>& PlayerStatesOfOwningTeam);
	void NotifyResourceAmountUpdated();
	void On_ResourceCrateDelivered__DelegateSignature(class ACharacter* DeliveringCharacter);
	void OnEnded_65F9256C495E85B9A6DB85A8C042D49B();
	void OnEnded_C690637147A5FED41E92FF828F922BD1();
	void OnLoaded_D9A1D29A462837D65CF7E6B60EDB0070(class UObject* Loaded);
	void OnLoaded_D9A1D29A462837D65CF7E6B68E7C3A2D(class UObject* Loaded);
	void OnRep_TeamID();
	void Re_Check_Resource_Amount();
	void ReceiveBeginPlay();
	void ReloadAfterHousesLoaded(bool* Return);
	void RemoveItemMarkers();
	void SetMaterialBasedOnTeam(int32 Level);
	void SetTeamMaterial(bool SameTeam, class UMaterialInterface* Red, class UMaterialInterface* Blue);
	void Start_Upgrading_Cosmetics(float Time, int32 NewLevel);
	void Store_Upgrade_Complete(int32 Level);
	void StoreUpgradeCompleteCosmetics(int32 Level);
	void StoreUpgradingCosmetics(int32 Level);
	void TL_Upgrade__FinishedFunc();
	void TL_Upgrade__TriggerParticles__EventFunc();
	void TL_Upgrade__UpdateFunc();
	void ToggleReceptacleVisibility(bool Visible);
	void Update_Team_Color();
	void Upgrade();
	void Upgrade_Time();
	void WorkaroundInitialUpgrade(int32 ResourceAmountToCheckFor);

	bool IsAvailableForEnemyTeam(class UPrimitiveComponent* InteractionComponent) const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_StoreBase_C">();
	}
	static class ABP_StoreBase_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_StoreBase_C>();
	}
};
static_assert(alignof(ABP_StoreBase_C) == 0x000008, "Wrong alignment on ABP_StoreBase_C");
static_assert(sizeof(ABP_StoreBase_C) == 0x000478, "Wrong size on ABP_StoreBase_C");
static_assert(offsetof(ABP_StoreBase_C, UberGraphFrame) == 0x000290, "Member 'ABP_StoreBase_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_StoreBase_C, AC_Indicator_HandIn) == 0x000298, "Member 'ABP_StoreBase_C::AC_Indicator_HandIn' has a wrong offset!");
static_assert(offsetof(ABP_StoreBase_C, HandInCube) == 0x0002A0, "Member 'ABP_StoreBase_C::HandInCube' has a wrong offset!");
static_assert(offsetof(ABP_StoreBase_C, HandInCollider) == 0x0002A8, "Member 'ABP_StoreBase_C::HandInCollider' has a wrong offset!");
static_assert(offsetof(ABP_StoreBase_C, Scene_HandIn) == 0x0002B0, "Member 'ABP_StoreBase_C::Scene_HandIn' has a wrong offset!");
static_assert(offsetof(ABP_StoreBase_C, AC_Indicator) == 0x0002B8, "Member 'ABP_StoreBase_C::AC_Indicator' has a wrong offset!");
static_assert(offsetof(ABP_StoreBase_C, BP_PingableComponent) == 0x0002C0, "Member 'ABP_StoreBase_C::BP_PingableComponent' has a wrong offset!");
static_assert(offsetof(ABP_StoreBase_C, Arrow) == 0x0002C8, "Member 'ABP_StoreBase_C::Arrow' has a wrong offset!");
static_assert(offsetof(ABP_StoreBase_C, Audio_UpgradeLoop) == 0x0002D0, "Member 'ABP_StoreBase_C::Audio_UpgradeLoop' has a wrong offset!");
static_assert(offsetof(ABP_StoreBase_C, UpgradeParticles) == 0x0002D8, "Member 'ABP_StoreBase_C::UpgradeParticles' has a wrong offset!");
static_assert(offsetof(ABP_StoreBase_C, SceneMesh) == 0x0002E0, "Member 'ABP_StoreBase_C::SceneMesh' has a wrong offset!");
static_assert(offsetof(ABP_StoreBase_C, InteractLocation) == 0x0002E8, "Member 'ABP_StoreBase_C::InteractLocation' has a wrong offset!");
static_assert(offsetof(ABP_StoreBase_C, Root) == 0x0002F0, "Member 'ABP_StoreBase_C::Root' has a wrong offset!");
static_assert(offsetof(ABP_StoreBase_C, SkeletalMesh) == 0x0002F8, "Member 'ABP_StoreBase_C::SkeletalMesh' has a wrong offset!");
static_assert(offsetof(ABP_StoreBase_C, TL_Upgrade_Alpha_5B98DBEB41F5DA983D9A7ABA67B1404D) == 0x000300, "Member 'ABP_StoreBase_C::TL_Upgrade_Alpha_5B98DBEB41F5DA983D9A7ABA67B1404D' has a wrong offset!");
static_assert(offsetof(ABP_StoreBase_C, TL_Upgrade__Direction_5B98DBEB41F5DA983D9A7ABA67B1404D) == 0x000304, "Member 'ABP_StoreBase_C::TL_Upgrade__Direction_5B98DBEB41F5DA983D9A7ABA67B1404D' has a wrong offset!");
static_assert(offsetof(ABP_StoreBase_C, TL_Upgrade) == 0x000308, "Member 'ABP_StoreBase_C::TL_Upgrade' has a wrong offset!");
static_assert(offsetof(ABP_StoreBase_C, Latest_Damaging_Controller) == 0x000310, "Member 'ABP_StoreBase_C::Latest_Damaging_Controller' has a wrong offset!");
static_assert(offsetof(ABP_StoreBase_C, ShopInteraction) == 0x000318, "Member 'ABP_StoreBase_C::ShopInteraction' has a wrong offset!");
static_assert(offsetof(ABP_StoreBase_C, PickupBuildRotation) == 0x000320, "Member 'ABP_StoreBase_C::PickupBuildRotation' has a wrong offset!");
static_assert(offsetof(ABP_StoreBase_C, StoreType) == 0x000338, "Member 'ABP_StoreBase_C::StoreType' has a wrong offset!");
static_assert(offsetof(ABP_StoreBase_C, AssociatedRoomManager) == 0x000340, "Member 'ABP_StoreBase_C::AssociatedRoomManager' has a wrong offset!");
static_assert(offsetof(ABP_StoreBase_C, RoomToUpgrade) == 0x000348, "Member 'ABP_StoreBase_C::RoomToUpgrade' has a wrong offset!");
static_assert(offsetof(ABP_StoreBase_C, ShopTier) == 0x00034C, "Member 'ABP_StoreBase_C::ShopTier' has a wrong offset!");
static_assert(offsetof(ABP_StoreBase_C, Radial) == 0x000350, "Member 'ABP_StoreBase_C::Radial' has a wrong offset!");
static_assert(offsetof(ABP_StoreBase_C, Level2SkeletalMesh) == 0x000358, "Member 'ABP_StoreBase_C::Level2SkeletalMesh' has a wrong offset!");
static_assert(offsetof(ABP_StoreBase_C, Level3SkeletalMesh) == 0x000380, "Member 'ABP_StoreBase_C::Level3SkeletalMesh' has a wrong offset!");
static_assert(offsetof(ABP_StoreBase_C, StoreLvl1AnimInstance) == 0x0003A8, "Member 'ABP_StoreBase_C::StoreLvl1AnimInstance' has a wrong offset!");
static_assert(offsetof(ABP_StoreBase_C, StoreLvl2AnimInstance) == 0x0003B0, "Member 'ABP_StoreBase_C::StoreLvl2AnimInstance' has a wrong offset!");
static_assert(offsetof(ABP_StoreBase_C, StoreLvl3AnimInstance) == 0x0003B8, "Member 'ABP_StoreBase_C::StoreLvl3AnimInstance' has a wrong offset!");
static_assert(offsetof(ABP_StoreBase_C, StoreLvl2MontageUpgrading) == 0x0003C0, "Member 'ABP_StoreBase_C::StoreLvl2MontageUpgrading' has a wrong offset!");
static_assert(offsetof(ABP_StoreBase_C, StoreLvl1MontageUpgrading) == 0x0003C8, "Member 'ABP_StoreBase_C::StoreLvl1MontageUpgrading' has a wrong offset!");
static_assert(offsetof(ABP_StoreBase_C, StoreLvl2MontageUpgradeComplete) == 0x0003D0, "Member 'ABP_StoreBase_C::StoreLvl2MontageUpgradeComplete' has a wrong offset!");
static_assert(offsetof(ABP_StoreBase_C, StoreLvl3MontageUpgradeComplete) == 0x0003D8, "Member 'ABP_StoreBase_C::StoreLvl3MontageUpgradeComplete' has a wrong offset!");
static_assert(offsetof(ABP_StoreBase_C, Lvl2SkeletalMesh) == 0x0003E0, "Member 'ABP_StoreBase_C::Lvl2SkeletalMesh' has a wrong offset!");
static_assert(offsetof(ABP_StoreBase_C, Lvl3SkeletalMesh) == 0x0003E8, "Member 'ABP_StoreBase_C::Lvl3SkeletalMesh' has a wrong offset!");
static_assert(offsetof(ABP_StoreBase_C, MaterialRed_Level1) == 0x0003F0, "Member 'ABP_StoreBase_C::MaterialRed_Level1' has a wrong offset!");
static_assert(offsetof(ABP_StoreBase_C, MaterialRed_Level2) == 0x0003F8, "Member 'ABP_StoreBase_C::MaterialRed_Level2' has a wrong offset!");
static_assert(offsetof(ABP_StoreBase_C, MaterialRed_Level3) == 0x000400, "Member 'ABP_StoreBase_C::MaterialRed_Level3' has a wrong offset!");
static_assert(offsetof(ABP_StoreBase_C, MaterialBlue_Level1) == 0x000408, "Member 'ABP_StoreBase_C::MaterialBlue_Level1' has a wrong offset!");
static_assert(offsetof(ABP_StoreBase_C, MaterialBlue_Level2) == 0x000410, "Member 'ABP_StoreBase_C::MaterialBlue_Level2' has a wrong offset!");
static_assert(offsetof(ABP_StoreBase_C, MaterialBlue_Level3) == 0x000418, "Member 'ABP_StoreBase_C::MaterialBlue_Level3' has a wrong offset!");
static_assert(offsetof(ABP_StoreBase_C, TeamId) == 0x000420, "Member 'ABP_StoreBase_C::TeamId' has a wrong offset!");
static_assert(offsetof(ABP_StoreBase_C, CurrentObjectInRange) == 0x000428, "Member 'ABP_StoreBase_C::CurrentObjectInRange' has a wrong offset!");
static_assert(offsetof(ABP_StoreBase_C, On_ResourceCrateDelivered) == 0x000430, "Member 'ABP_StoreBase_C::On_ResourceCrateDelivered' has a wrong offset!");
static_assert(offsetof(ABP_StoreBase_C, ResourcesUnlockSteps) == 0x000440, "Member 'ABP_StoreBase_C::ResourcesUnlockSteps' has a wrong offset!");
static_assert(offsetof(ABP_StoreBase_C, ResourcesFenceUpgradeSteps) == 0x000450, "Member 'ABP_StoreBase_C::ResourcesFenceUpgradeSteps' has a wrong offset!");
static_assert(offsetof(ABP_StoreBase_C, Upgrading) == 0x000460, "Member 'ABP_StoreBase_C::Upgrading' has a wrong offset!");
static_assert(offsetof(ABP_StoreBase_C, UpgradedToLevel2) == 0x000461, "Member 'ABP_StoreBase_C::UpgradedToLevel2' has a wrong offset!");
static_assert(offsetof(ABP_StoreBase_C, UpgradedToLevel3) == 0x000462, "Member 'ABP_StoreBase_C::UpgradedToLevel3' has a wrong offset!");
static_assert(offsetof(ABP_StoreBase_C, PlayersOfTeam) == 0x000468, "Member 'ABP_StoreBase_C::PlayersOfTeam' has a wrong offset!");

}

