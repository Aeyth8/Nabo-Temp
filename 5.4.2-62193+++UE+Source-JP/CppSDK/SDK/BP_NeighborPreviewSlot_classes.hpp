#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_NeighborPreviewSlot

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "JP_structs.hpp"
#include "GameplayTags_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_NeighborPreviewSlot.BP_NeighborPreviewSlot_C
// 0x00A8 (0x0338 - 0x0290)
class ABP_NeighborPreviewSlot_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0290(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UParticleSystemComponent*               ParticleSystem;                                    // 0x0298(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   GlowMesh;                                          // 0x02A0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        Scene;                                             // 0x02A8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   PreviewStaticMesh;                                 // 0x02B0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x02B8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FNeighborLoadout                       PreviewLoadout;                                    // 0x02C0(0x0030)(Edit, BlueprintVisible)
	struct FNeighborLoadout                       EquippedLoadout;                                   // 0x02F0(0x0030)(Edit, BlueprintVisible)
	struct FGameplayTag                           ItemIDToPreview;                                   // 0x0320(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class ABP_NeighborPreviewActor_C*             PreviewActor;                                      // 0x0328(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	double                                        CameraZoomTime;                                    // 0x0330(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ClearPreview();
	void ClearPreviewActor();
	void ExecuteUbergraph_BP_NeighborPreviewSlot(int32 EntryPoint);
	void GetDefaultItemSkinID(struct FGameplayTag* StartingItemDefaultSkinID);
	void GetDefaultOutfitID(struct FGameplayTag* DefaultOutfitID);
	void GetItemSkinDefinition(TSoftObjectPtr<class UItemSkinDefinition>* SoftItemSkinDefinition);
	void GetLoadoutStartingItemSkin(const struct FNeighborLoadout& NeighborLoadout, struct FGameplayTag* StartingItemSkinID);
	void GetNeighborStartingItemID(struct FGameplayTag* NeighborItemID);
	bool MatchesPreviewItemSkin(const struct FGameplayTag& ItemSkinID);
	bool MatchesPreviewOutfit(const struct FGameplayTag& OutfitID);
	void OnMessageReceived_018ACE1444E127E1BE1137AA0231E74D(class UAsyncAction_ListenForGameplayMessage* ProxyObject, const struct FGameplayTag& ActualChannel);
	void OnMessageReceived_04A5D86F489A4066B8DB90BC811E3ECB(class UAsyncAction_ListenForGameplayMessage* ProxyObject, const struct FGameplayTag& ActualChannel);
	void OnMessageReceived_0ED6050848ECAD4F7818CBBB6C30BA50(class UAsyncAction_ListenForGameplayMessage* ProxyObject, const struct FGameplayTag& ActualChannel);
	void OnMessageReceived_2EBC32FB4B902403C87A67A78FE79464(class UAsyncAction_ListenForGameplayMessage* ProxyObject, const struct FGameplayTag& ActualChannel);
	void OnMessageReceived_359E8C7C4BB4819D6486F7AAC9A412ED(class UAsyncAction_ListenForGameplayMessage* ProxyObject, const struct FGameplayTag& ActualChannel);
	void OnMessageReceived_BFC95CFF4B3725D61E619CBE2F4620A9(class UAsyncAction_ListenForGameplayMessage* ProxyObject, const struct FGameplayTag& ActualChannel);
	void OnMessageReceived_F7361A61464B111E7BA467BDC0873F6A(class UAsyncAction_ListenForGameplayMessage* ProxyObject, const struct FGameplayTag& ActualChannel);
	void PlayAnimation(const struct FGameplayTag& Context);
	void PreviewNeighbor(const struct FGameplayTag& NeighborID);
	void PreviewNeighborItem();
	void PreviewNeighborOutfitAndItem();
	void ReceiveBeginPlay();
	void SetEquippedItemSkin(const struct FGameplayTag& EquippedItemSkin);
	void SetEquippedLoadout(const struct FNeighborLoadout& Loadout);
	void SetItemToPreview(const struct FGameplayTag& PreviewItemID);
	void SetLoadoutItemSkin(const struct FGameplayTag& ItemSkinID);
	void SetPreviewLoadout();
	void SetPreviewNeighborItemSkin(const struct FGameplayTag& ItemSkinID);
	void SetPreviewNeighborOutfit(const struct FGameplayTag& OutfitID);
	void SetPreviewPlayerReward(const struct FGameplayTag& PlayerRewardID);
	void SwitchCamera(bool ResetToDefault);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_NeighborPreviewSlot_C">();
	}
	static class ABP_NeighborPreviewSlot_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_NeighborPreviewSlot_C>();
	}
};
static_assert(alignof(ABP_NeighborPreviewSlot_C) == 0x000008, "Wrong alignment on ABP_NeighborPreviewSlot_C");
static_assert(sizeof(ABP_NeighborPreviewSlot_C) == 0x000338, "Wrong size on ABP_NeighborPreviewSlot_C");
static_assert(offsetof(ABP_NeighborPreviewSlot_C, UberGraphFrame) == 0x000290, "Member 'ABP_NeighborPreviewSlot_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_NeighborPreviewSlot_C, ParticleSystem) == 0x000298, "Member 'ABP_NeighborPreviewSlot_C::ParticleSystem' has a wrong offset!");
static_assert(offsetof(ABP_NeighborPreviewSlot_C, GlowMesh) == 0x0002A0, "Member 'ABP_NeighborPreviewSlot_C::GlowMesh' has a wrong offset!");
static_assert(offsetof(ABP_NeighborPreviewSlot_C, Scene) == 0x0002A8, "Member 'ABP_NeighborPreviewSlot_C::Scene' has a wrong offset!");
static_assert(offsetof(ABP_NeighborPreviewSlot_C, PreviewStaticMesh) == 0x0002B0, "Member 'ABP_NeighborPreviewSlot_C::PreviewStaticMesh' has a wrong offset!");
static_assert(offsetof(ABP_NeighborPreviewSlot_C, DefaultSceneRoot) == 0x0002B8, "Member 'ABP_NeighborPreviewSlot_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ABP_NeighborPreviewSlot_C, PreviewLoadout) == 0x0002C0, "Member 'ABP_NeighborPreviewSlot_C::PreviewLoadout' has a wrong offset!");
static_assert(offsetof(ABP_NeighborPreviewSlot_C, EquippedLoadout) == 0x0002F0, "Member 'ABP_NeighborPreviewSlot_C::EquippedLoadout' has a wrong offset!");
static_assert(offsetof(ABP_NeighborPreviewSlot_C, ItemIDToPreview) == 0x000320, "Member 'ABP_NeighborPreviewSlot_C::ItemIDToPreview' has a wrong offset!");
static_assert(offsetof(ABP_NeighborPreviewSlot_C, PreviewActor) == 0x000328, "Member 'ABP_NeighborPreviewSlot_C::PreviewActor' has a wrong offset!");
static_assert(offsetof(ABP_NeighborPreviewSlot_C, CameraZoomTime) == 0x000330, "Member 'ABP_NeighborPreviewSlot_C::CameraZoomTime' has a wrong offset!");

}

