#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WI_HouseIdentifier

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "JP_structs.hpp"
#include "UMG_structs.hpp"
#include "SlateCore_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function WI_HouseIdentifier.WI_HouseIdentifier_C.PlayLookAtMeAnimation
// 0x0008 (0x0008 - 0x0000)
struct WI_HouseIdentifier_C_PlayLookAtMeAnimation final
{
public:
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WI_HouseIdentifier_C_PlayLookAtMeAnimation) == 0x000008, "Wrong alignment on WI_HouseIdentifier_C_PlayLookAtMeAnimation");
static_assert(sizeof(WI_HouseIdentifier_C_PlayLookAtMeAnimation) == 0x000008, "Wrong size on WI_HouseIdentifier_C_PlayLookAtMeAnimation");
static_assert(offsetof(WI_HouseIdentifier_C_PlayLookAtMeAnimation, CallFunc_PlayAnimation_ReturnValue) == 0x000000, "Member 'WI_HouseIdentifier_C_PlayLookAtMeAnimation::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");

// Function WI_HouseIdentifier.WI_HouseIdentifier_C.SetImageAndText
// 0x0168 (0x0168 - 0x0000)
struct WI_HouseIdentifier_C_SetImageAndText final
{
public:
	bool                                          Home;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         TeamId;                                            // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x2];                                        // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           Color;                                             // 0x0004(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETeamType                                     TeamType;                                          // 0x0014(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETeamType                                     Temp_byte_Variable;                                // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETeamType                                     Temp_byte_Variable_1;                              // 0x0016(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_17[0x1];                                       // 0x0017(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable;                                // 0x0018(0x0010)()
	class FText                                   Temp_text_Variable_1;                              // 0x0028(0x0010)()
	class FText                                   Temp_text_Variable_2;                              // 0x0038(0x0010)()
	class FText                                   Temp_text_Variable_3;                              // 0x0048(0x0010)()
	bool                                          Temp_bool_Variable;                                // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_2;                              // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_3;                              // 0x005A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x005B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5D[0x3];                                       // 0x005D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select_Default;                             // 0x0060(0x0010)()
	ETeamType                                     CallFunc_GetTeamTypeFromTeamId_ReturnValue;        // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_71[0x7];                                       // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0078(0x0048)(HasGetValueTypeHash)
	struct FLinearColor                           K2Node_Select_Default_1;                           // 0x00C0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_2;                           // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D1[0x3];                                       // 0x00D1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x00D4(0x0014)()
	class UTexture2D*                             K2Node_Select_Default_3;                           // 0x00E8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FText                                   K2Node_Select_Default_4;                           // 0x00F0(0x0010)(ConstParm)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x0100(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0148(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0158(0x0010)()
};
static_assert(alignof(WI_HouseIdentifier_C_SetImageAndText) == 0x000008, "Wrong alignment on WI_HouseIdentifier_C_SetImageAndText");
static_assert(sizeof(WI_HouseIdentifier_C_SetImageAndText) == 0x000168, "Wrong size on WI_HouseIdentifier_C_SetImageAndText");
static_assert(offsetof(WI_HouseIdentifier_C_SetImageAndText, Home) == 0x000000, "Member 'WI_HouseIdentifier_C_SetImageAndText::Home' has a wrong offset!");
static_assert(offsetof(WI_HouseIdentifier_C_SetImageAndText, TeamId) == 0x000001, "Member 'WI_HouseIdentifier_C_SetImageAndText::TeamId' has a wrong offset!");
static_assert(offsetof(WI_HouseIdentifier_C_SetImageAndText, Color) == 0x000004, "Member 'WI_HouseIdentifier_C_SetImageAndText::Color' has a wrong offset!");
static_assert(offsetof(WI_HouseIdentifier_C_SetImageAndText, TeamType) == 0x000014, "Member 'WI_HouseIdentifier_C_SetImageAndText::TeamType' has a wrong offset!");
static_assert(offsetof(WI_HouseIdentifier_C_SetImageAndText, Temp_byte_Variable) == 0x000015, "Member 'WI_HouseIdentifier_C_SetImageAndText::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WI_HouseIdentifier_C_SetImageAndText, Temp_byte_Variable_1) == 0x000016, "Member 'WI_HouseIdentifier_C_SetImageAndText::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WI_HouseIdentifier_C_SetImageAndText, Temp_text_Variable) == 0x000018, "Member 'WI_HouseIdentifier_C_SetImageAndText::Temp_text_Variable' has a wrong offset!");
static_assert(offsetof(WI_HouseIdentifier_C_SetImageAndText, Temp_text_Variable_1) == 0x000028, "Member 'WI_HouseIdentifier_C_SetImageAndText::Temp_text_Variable_1' has a wrong offset!");
static_assert(offsetof(WI_HouseIdentifier_C_SetImageAndText, Temp_text_Variable_2) == 0x000038, "Member 'WI_HouseIdentifier_C_SetImageAndText::Temp_text_Variable_2' has a wrong offset!");
static_assert(offsetof(WI_HouseIdentifier_C_SetImageAndText, Temp_text_Variable_3) == 0x000048, "Member 'WI_HouseIdentifier_C_SetImageAndText::Temp_text_Variable_3' has a wrong offset!");
static_assert(offsetof(WI_HouseIdentifier_C_SetImageAndText, Temp_bool_Variable) == 0x000058, "Member 'WI_HouseIdentifier_C_SetImageAndText::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WI_HouseIdentifier_C_SetImageAndText, Temp_byte_Variable_2) == 0x000059, "Member 'WI_HouseIdentifier_C_SetImageAndText::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(WI_HouseIdentifier_C_SetImageAndText, Temp_byte_Variable_3) == 0x00005A, "Member 'WI_HouseIdentifier_C_SetImageAndText::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(WI_HouseIdentifier_C_SetImageAndText, Temp_bool_Variable_1) == 0x00005B, "Member 'WI_HouseIdentifier_C_SetImageAndText::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(WI_HouseIdentifier_C_SetImageAndText, Temp_bool_Variable_2) == 0x00005C, "Member 'WI_HouseIdentifier_C_SetImageAndText::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(WI_HouseIdentifier_C_SetImageAndText, K2Node_Select_Default) == 0x000060, "Member 'WI_HouseIdentifier_C_SetImageAndText::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WI_HouseIdentifier_C_SetImageAndText, CallFunc_GetTeamTypeFromTeamId_ReturnValue) == 0x000070, "Member 'WI_HouseIdentifier_C_SetImageAndText::CallFunc_GetTeamTypeFromTeamId_ReturnValue' has a wrong offset!");
static_assert(offsetof(WI_HouseIdentifier_C_SetImageAndText, K2Node_MakeStruct_FormatArgumentData) == 0x000078, "Member 'WI_HouseIdentifier_C_SetImageAndText::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(WI_HouseIdentifier_C_SetImageAndText, K2Node_Select_Default_1) == 0x0000C0, "Member 'WI_HouseIdentifier_C_SetImageAndText::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(WI_HouseIdentifier_C_SetImageAndText, K2Node_Select_Default_2) == 0x0000D0, "Member 'WI_HouseIdentifier_C_SetImageAndText::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(WI_HouseIdentifier_C_SetImageAndText, K2Node_MakeStruct_SlateColor) == 0x0000D4, "Member 'WI_HouseIdentifier_C_SetImageAndText::K2Node_MakeStruct_SlateColor' has a wrong offset!");
static_assert(offsetof(WI_HouseIdentifier_C_SetImageAndText, K2Node_Select_Default_3) == 0x0000E8, "Member 'WI_HouseIdentifier_C_SetImageAndText::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(WI_HouseIdentifier_C_SetImageAndText, K2Node_Select_Default_4) == 0x0000F0, "Member 'WI_HouseIdentifier_C_SetImageAndText::K2Node_Select_Default_4' has a wrong offset!");
static_assert(offsetof(WI_HouseIdentifier_C_SetImageAndText, K2Node_MakeStruct_FormatArgumentData_1) == 0x000100, "Member 'WI_HouseIdentifier_C_SetImageAndText::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(WI_HouseIdentifier_C_SetImageAndText, K2Node_MakeArray_Array) == 0x000148, "Member 'WI_HouseIdentifier_C_SetImageAndText::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(WI_HouseIdentifier_C_SetImageAndText, CallFunc_Format_ReturnValue) == 0x000158, "Member 'WI_HouseIdentifier_C_SetImageAndText::CallFunc_Format_ReturnValue' has a wrong offset!");

}

