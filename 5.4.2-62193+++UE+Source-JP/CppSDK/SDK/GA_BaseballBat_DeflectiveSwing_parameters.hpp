#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GA_BaseballBat_DeflectiveSwing

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function GA_BaseballBat_DeflectiveSwing.GA_BaseballBat_DeflectiveSwing_C.ExecuteUbergraph_GA_BaseballBat_DeflectiveSwing
// 0x0070 (0x0070 - 0x0000)
struct GA_BaseballBat_DeflectiveSwing_C_ExecuteUbergraph_GA_BaseballBat_DeflectiveSwing final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetAvatarActorFromActorInfo_ReturnValue;  // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasMatchEnded_ReturnValue;                // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class II_FOVAble_C>          K2Node_DynamicCast_AsI_FOVAble;                    // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_SpawnProjectileOverlapVolume_SpawnedVolumeActor; // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_BaseballBat_ProjectileOverlapVolume_C* CallFunc_SpawnProjectileOverlapVolume_OverlapVolume; // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsServer_ReturnValue;                     // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_42[0x6];                                       // 0x0042(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwningActorFromActorInfo_ReturnValue;  // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_BaseballBat_ProjectileOverlapVolume_C* K2Node_DynamicCast_AsBP_Baseball_Bat_Projectile_Overlap_Volume; // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  K2Node_DynamicCast_AsPawn;                         // 0x0060(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_BaseballBat_DeflectiveSwing_C_ExecuteUbergraph_GA_BaseballBat_DeflectiveSwing) == 0x000008, "Wrong alignment on GA_BaseballBat_DeflectiveSwing_C_ExecuteUbergraph_GA_BaseballBat_DeflectiveSwing");
static_assert(sizeof(GA_BaseballBat_DeflectiveSwing_C_ExecuteUbergraph_GA_BaseballBat_DeflectiveSwing) == 0x000070, "Wrong size on GA_BaseballBat_DeflectiveSwing_C_ExecuteUbergraph_GA_BaseballBat_DeflectiveSwing");
static_assert(offsetof(GA_BaseballBat_DeflectiveSwing_C_ExecuteUbergraph_GA_BaseballBat_DeflectiveSwing, EntryPoint) == 0x000000, "Member 'GA_BaseballBat_DeflectiveSwing_C_ExecuteUbergraph_GA_BaseballBat_DeflectiveSwing::EntryPoint' has a wrong offset!");
static_assert(offsetof(GA_BaseballBat_DeflectiveSwing_C_ExecuteUbergraph_GA_BaseballBat_DeflectiveSwing, CallFunc_GetAvatarActorFromActorInfo_ReturnValue) == 0x000008, "Member 'GA_BaseballBat_DeflectiveSwing_C_ExecuteUbergraph_GA_BaseballBat_DeflectiveSwing::CallFunc_GetAvatarActorFromActorInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_BaseballBat_DeflectiveSwing_C_ExecuteUbergraph_GA_BaseballBat_DeflectiveSwing, CallFunc_HasMatchEnded_ReturnValue) == 0x000010, "Member 'GA_BaseballBat_DeflectiveSwing_C_ExecuteUbergraph_GA_BaseballBat_DeflectiveSwing::CallFunc_HasMatchEnded_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_BaseballBat_DeflectiveSwing_C_ExecuteUbergraph_GA_BaseballBat_DeflectiveSwing, K2Node_DynamicCast_AsI_FOVAble) == 0x000018, "Member 'GA_BaseballBat_DeflectiveSwing_C_ExecuteUbergraph_GA_BaseballBat_DeflectiveSwing::K2Node_DynamicCast_AsI_FOVAble' has a wrong offset!");
static_assert(offsetof(GA_BaseballBat_DeflectiveSwing_C_ExecuteUbergraph_GA_BaseballBat_DeflectiveSwing, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'GA_BaseballBat_DeflectiveSwing_C_ExecuteUbergraph_GA_BaseballBat_DeflectiveSwing::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(GA_BaseballBat_DeflectiveSwing_C_ExecuteUbergraph_GA_BaseballBat_DeflectiveSwing, CallFunc_SpawnProjectileOverlapVolume_SpawnedVolumeActor) == 0x000030, "Member 'GA_BaseballBat_DeflectiveSwing_C_ExecuteUbergraph_GA_BaseballBat_DeflectiveSwing::CallFunc_SpawnProjectileOverlapVolume_SpawnedVolumeActor' has a wrong offset!");
static_assert(offsetof(GA_BaseballBat_DeflectiveSwing_C_ExecuteUbergraph_GA_BaseballBat_DeflectiveSwing, CallFunc_SpawnProjectileOverlapVolume_OverlapVolume) == 0x000038, "Member 'GA_BaseballBat_DeflectiveSwing_C_ExecuteUbergraph_GA_BaseballBat_DeflectiveSwing::CallFunc_SpawnProjectileOverlapVolume_OverlapVolume' has a wrong offset!");
static_assert(offsetof(GA_BaseballBat_DeflectiveSwing_C_ExecuteUbergraph_GA_BaseballBat_DeflectiveSwing, CallFunc_IsServer_ReturnValue) == 0x000040, "Member 'GA_BaseballBat_DeflectiveSwing_C_ExecuteUbergraph_GA_BaseballBat_DeflectiveSwing::CallFunc_IsServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_BaseballBat_DeflectiveSwing_C_ExecuteUbergraph_GA_BaseballBat_DeflectiveSwing, CallFunc_IsValid_ReturnValue) == 0x000041, "Member 'GA_BaseballBat_DeflectiveSwing_C_ExecuteUbergraph_GA_BaseballBat_DeflectiveSwing::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_BaseballBat_DeflectiveSwing_C_ExecuteUbergraph_GA_BaseballBat_DeflectiveSwing, CallFunc_GetOwningActorFromActorInfo_ReturnValue) == 0x000048, "Member 'GA_BaseballBat_DeflectiveSwing_C_ExecuteUbergraph_GA_BaseballBat_DeflectiveSwing::CallFunc_GetOwningActorFromActorInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_BaseballBat_DeflectiveSwing_C_ExecuteUbergraph_GA_BaseballBat_DeflectiveSwing, K2Node_DynamicCast_AsBP_Baseball_Bat_Projectile_Overlap_Volume) == 0x000050, "Member 'GA_BaseballBat_DeflectiveSwing_C_ExecuteUbergraph_GA_BaseballBat_DeflectiveSwing::K2Node_DynamicCast_AsBP_Baseball_Bat_Projectile_Overlap_Volume' has a wrong offset!");
static_assert(offsetof(GA_BaseballBat_DeflectiveSwing_C_ExecuteUbergraph_GA_BaseballBat_DeflectiveSwing, K2Node_DynamicCast_bSuccess_1) == 0x000058, "Member 'GA_BaseballBat_DeflectiveSwing_C_ExecuteUbergraph_GA_BaseballBat_DeflectiveSwing::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(GA_BaseballBat_DeflectiveSwing_C_ExecuteUbergraph_GA_BaseballBat_DeflectiveSwing, K2Node_DynamicCast_AsPawn) == 0x000060, "Member 'GA_BaseballBat_DeflectiveSwing_C_ExecuteUbergraph_GA_BaseballBat_DeflectiveSwing::K2Node_DynamicCast_AsPawn' has a wrong offset!");
static_assert(offsetof(GA_BaseballBat_DeflectiveSwing_C_ExecuteUbergraph_GA_BaseballBat_DeflectiveSwing, K2Node_DynamicCast_bSuccess_2) == 0x000068, "Member 'GA_BaseballBat_DeflectiveSwing_C_ExecuteUbergraph_GA_BaseballBat_DeflectiveSwing::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");

// Function GA_BaseballBat_DeflectiveSwing.GA_BaseballBat_DeflectiveSwing_C.SpawnProjectileOverlapVolume
// 0x00E0 (0x00E0 - 0x0000)
struct GA_BaseballBat_DeflectiveSwing_C_SpawnProjectileOverlapVolume final
{
public:
	class AActor*                                 SpawnedVolumeActor;                                // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_BaseballBat_ProjectileOverlapVolume_C* OverlapVolume;                                     // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwningActorFromActorInfo_ReturnValue;  // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  K2Node_DynamicCast_AsPawn;                         // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0028(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_GetControlRotation_ReturnValue;           // 0x0040(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_58[0x8];                                       // 0x0058(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0060(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x00C0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_FinishSpawningActor_ReturnValue;          // 0x00C8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_BaseballBat_ProjectileOverlapVolume_C* K2Node_DynamicCast_AsBP_Baseball_Bat_Projectile_Overlap_Volume; // 0x00D0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_BaseballBat_DeflectiveSwing_C_SpawnProjectileOverlapVolume) == 0x000010, "Wrong alignment on GA_BaseballBat_DeflectiveSwing_C_SpawnProjectileOverlapVolume");
static_assert(sizeof(GA_BaseballBat_DeflectiveSwing_C_SpawnProjectileOverlapVolume) == 0x0000E0, "Wrong size on GA_BaseballBat_DeflectiveSwing_C_SpawnProjectileOverlapVolume");
static_assert(offsetof(GA_BaseballBat_DeflectiveSwing_C_SpawnProjectileOverlapVolume, SpawnedVolumeActor) == 0x000000, "Member 'GA_BaseballBat_DeflectiveSwing_C_SpawnProjectileOverlapVolume::SpawnedVolumeActor' has a wrong offset!");
static_assert(offsetof(GA_BaseballBat_DeflectiveSwing_C_SpawnProjectileOverlapVolume, OverlapVolume) == 0x000008, "Member 'GA_BaseballBat_DeflectiveSwing_C_SpawnProjectileOverlapVolume::OverlapVolume' has a wrong offset!");
static_assert(offsetof(GA_BaseballBat_DeflectiveSwing_C_SpawnProjectileOverlapVolume, CallFunc_GetOwningActorFromActorInfo_ReturnValue) == 0x000010, "Member 'GA_BaseballBat_DeflectiveSwing_C_SpawnProjectileOverlapVolume::CallFunc_GetOwningActorFromActorInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_BaseballBat_DeflectiveSwing_C_SpawnProjectileOverlapVolume, K2Node_DynamicCast_AsPawn) == 0x000018, "Member 'GA_BaseballBat_DeflectiveSwing_C_SpawnProjectileOverlapVolume::K2Node_DynamicCast_AsPawn' has a wrong offset!");
static_assert(offsetof(GA_BaseballBat_DeflectiveSwing_C_SpawnProjectileOverlapVolume, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'GA_BaseballBat_DeflectiveSwing_C_SpawnProjectileOverlapVolume::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(GA_BaseballBat_DeflectiveSwing_C_SpawnProjectileOverlapVolume, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000028, "Member 'GA_BaseballBat_DeflectiveSwing_C_SpawnProjectileOverlapVolume::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_BaseballBat_DeflectiveSwing_C_SpawnProjectileOverlapVolume, CallFunc_GetControlRotation_ReturnValue) == 0x000040, "Member 'GA_BaseballBat_DeflectiveSwing_C_SpawnProjectileOverlapVolume::CallFunc_GetControlRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_BaseballBat_DeflectiveSwing_C_SpawnProjectileOverlapVolume, CallFunc_MakeTransform_ReturnValue) == 0x000060, "Member 'GA_BaseballBat_DeflectiveSwing_C_SpawnProjectileOverlapVolume::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_BaseballBat_DeflectiveSwing_C_SpawnProjectileOverlapVolume, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x0000C0, "Member 'GA_BaseballBat_DeflectiveSwing_C_SpawnProjectileOverlapVolume::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_BaseballBat_DeflectiveSwing_C_SpawnProjectileOverlapVolume, CallFunc_FinishSpawningActor_ReturnValue) == 0x0000C8, "Member 'GA_BaseballBat_DeflectiveSwing_C_SpawnProjectileOverlapVolume::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_BaseballBat_DeflectiveSwing_C_SpawnProjectileOverlapVolume, K2Node_DynamicCast_AsBP_Baseball_Bat_Projectile_Overlap_Volume) == 0x0000D0, "Member 'GA_BaseballBat_DeflectiveSwing_C_SpawnProjectileOverlapVolume::K2Node_DynamicCast_AsBP_Baseball_Bat_Projectile_Overlap_Volume' has a wrong offset!");
static_assert(offsetof(GA_BaseballBat_DeflectiveSwing_C_SpawnProjectileOverlapVolume, K2Node_DynamicCast_bSuccess_1) == 0x0000D8, "Member 'GA_BaseballBat_DeflectiveSwing_C_SpawnProjectileOverlapVolume::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");

}

