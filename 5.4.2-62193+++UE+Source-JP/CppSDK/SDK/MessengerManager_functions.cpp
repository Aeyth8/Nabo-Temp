#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: MessengerManager

#include "Basic.hpp"

#include "MessengerManager_classes.hpp"
#include "MessengerManager_parameters.hpp"


namespace SDK
{

// Function MessengerManager.MessengerManager_C.GetAllPlayerControllersOnOpposingTeams
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          WorldContextObject                                     (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// uint8                                   Team                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// TArray<class APlayerControllerJP_MatchBP_C*>OutputPin                                              (Parm, OutParm)

void AMessengerManager_C::GetAllPlayerControllersOnOpposingTeams(const class UObject* WorldContextObject, uint8 Team, class UObject* __WorldContext, TArray<class APlayerControllerJP_MatchBP_C*>* OutputPin)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MessengerManager_C", "GetAllPlayerControllersOnOpposingTeams");

	Params::MessengerManager_C_GetAllPlayerControllersOnOpposingTeams Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.Team = Team;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (OutputPin != nullptr)
		*OutputPin = std::move(Parms.OutputPin);
}


// Function MessengerManager.MessengerManager_C.GetAllPlayerControllersOnSameTeams
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          WorldContextObject                                     (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// uint8                                   Team                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// TArray<class APlayerControllerJP_MatchBP_C*>PlayerControllers                                      (Parm, OutParm)

void AMessengerManager_C::GetAllPlayerControllersOnSameTeams(const class UObject* WorldContextObject, uint8 Team, class UObject* __WorldContext, TArray<class APlayerControllerJP_MatchBP_C*>* PlayerControllers)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MessengerManager_C", "GetAllPlayerControllersOnSameTeams");

	Params::MessengerManager_C_GetAllPlayerControllersOnSameTeams Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.Team = Team;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (PlayerControllers != nullptr)
		*PlayerControllers = std::move(Parms.PlayerControllers);
}


// Function MessengerManager.MessengerManager_C.SendEventMessage
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FS_EventMessageParams            PlayerMessage                                          (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void AMessengerManager_C::SendEventMessage(const struct FS_EventMessageParams& PlayerMessage)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MessengerManager_C", "SendEventMessage");

	Params::MessengerManager_C_SendEventMessage Parms{};

	Parms.PlayerMessage = std::move(PlayerMessage);

	UObject::ProcessEvent(Func, &Parms);
}


// Function MessengerManager.MessengerManager_C.SendMessage
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FPlayerMessage                   PlayerMessage                                          (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void AMessengerManager_C::SendMessage(const struct FPlayerMessage& PlayerMessage)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MessengerManager_C", "SendMessage");

	Params::MessengerManager_C_SendMessage Parms{};

	Parms.PlayerMessage = std::move(PlayerMessage);

	UObject::ProcessEvent(Func, &Parms);
}

}

