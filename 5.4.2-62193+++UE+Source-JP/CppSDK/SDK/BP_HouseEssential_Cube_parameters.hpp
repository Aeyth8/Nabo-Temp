#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_HouseEssential_Cube

#include "Basic.hpp"

#include "GameplayTags_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "GameplayAbilities_structs.hpp"
#include "SlateCore_structs.hpp"
#include "JP_structs.hpp"
#include "E_ImpactEffect_structs.hpp"
#include "E_MaterialTypes_structs.hpp"
#include "Engine_structs.hpp"
#include "S_HouseEssentialWasDamagedMessage_structs.hpp"


namespace SDK::Params
{

// Function BP_HouseEssential_Cube.BP_HouseEssential_Cube_C.ApplyDebugDamage
// 0x0030 (0x0030 - 0x0000)
struct BP_HouseEssential_Cube_C_ApplyDebugDamage final
{
public:
	struct FGameplayEffectSpecHandle              CallFunc_MakeOutgoingSpec_ReturnValue;             // 0x0000(0x0010)()
	struct FGameplayEffectSpecHandle              CallFunc_AssignTagSetByCallerMagnitude_ReturnValue; // 0x0010(0x0010)()
	bool                                          CallFunc_ApplyGameplayEffectSpecToTargetWithChange_Changed; // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FActiveGameplayEffectHandle            CallFunc_ApplyGameplayEffectSpecToTargetWithChange_ReturnValue; // 0x0024(0x0008)(NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_HouseEssential_Cube_C_ApplyDebugDamage) == 0x000008, "Wrong alignment on BP_HouseEssential_Cube_C_ApplyDebugDamage");
static_assert(sizeof(BP_HouseEssential_Cube_C_ApplyDebugDamage) == 0x000030, "Wrong size on BP_HouseEssential_Cube_C_ApplyDebugDamage");
static_assert(offsetof(BP_HouseEssential_Cube_C_ApplyDebugDamage, CallFunc_MakeOutgoingSpec_ReturnValue) == 0x000000, "Member 'BP_HouseEssential_Cube_C_ApplyDebugDamage::CallFunc_MakeOutgoingSpec_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HouseEssential_Cube_C_ApplyDebugDamage, CallFunc_AssignTagSetByCallerMagnitude_ReturnValue) == 0x000010, "Member 'BP_HouseEssential_Cube_C_ApplyDebugDamage::CallFunc_AssignTagSetByCallerMagnitude_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HouseEssential_Cube_C_ApplyDebugDamage, CallFunc_ApplyGameplayEffectSpecToTargetWithChange_Changed) == 0x000020, "Member 'BP_HouseEssential_Cube_C_ApplyDebugDamage::CallFunc_ApplyGameplayEffectSpecToTargetWithChange_Changed' has a wrong offset!");
static_assert(offsetof(BP_HouseEssential_Cube_C_ApplyDebugDamage, CallFunc_ApplyGameplayEffectSpecToTargetWithChange_ReturnValue) == 0x000024, "Member 'BP_HouseEssential_Cube_C_ApplyDebugDamage::CallFunc_ApplyGameplayEffectSpecToTargetWithChange_ReturnValue' has a wrong offset!");

// Function BP_HouseEssential_Cube.BP_HouseEssential_Cube_C.AttackYourNeighborPOI
// 0x0008 (0x0008 - 0x0000)
struct BP_HouseEssential_Cube_C_AttackYourNeighborPOI final
{
public:
	class APlayerState*                           PlayerState;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_HouseEssential_Cube_C_AttackYourNeighborPOI) == 0x000008, "Wrong alignment on BP_HouseEssential_Cube_C_AttackYourNeighborPOI");
static_assert(sizeof(BP_HouseEssential_Cube_C_AttackYourNeighborPOI) == 0x000008, "Wrong size on BP_HouseEssential_Cube_C_AttackYourNeighborPOI");
static_assert(offsetof(BP_HouseEssential_Cube_C_AttackYourNeighborPOI, PlayerState) == 0x000000, "Member 'BP_HouseEssential_Cube_C_AttackYourNeighborPOI::PlayerState' has a wrong offset!");

// Function BP_HouseEssential_Cube.BP_HouseEssential_Cube_C.BndEvt__HouseActorBase_Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature
// 0x0118 (0x0118 - 0x0000)
struct BP_HouseEssential_Cube_C_BndEvt__HouseActorBase_Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bFromSweep;                                        // 0x001C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             SweepResult;                                       // 0x0020(0x00F8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_HouseEssential_Cube_C_BndEvt__HouseActorBase_Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on BP_HouseEssential_Cube_C_BndEvt__HouseActorBase_Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(sizeof(BP_HouseEssential_Cube_C_BndEvt__HouseActorBase_Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature) == 0x000118, "Wrong size on BP_HouseEssential_Cube_C_BndEvt__HouseActorBase_Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(offsetof(BP_HouseEssential_Cube_C_BndEvt__HouseActorBase_Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OverlappedComponent) == 0x000000, "Member 'BP_HouseEssential_Cube_C_BndEvt__HouseActorBase_Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BP_HouseEssential_Cube_C_BndEvt__HouseActorBase_Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'BP_HouseEssential_Cube_C_BndEvt__HouseActorBase_Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(BP_HouseEssential_Cube_C_BndEvt__HouseActorBase_Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'BP_HouseEssential_Cube_C_BndEvt__HouseActorBase_Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(BP_HouseEssential_Cube_C_BndEvt__HouseActorBase_Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000018, "Member 'BP_HouseEssential_Cube_C_BndEvt__HouseActorBase_Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(BP_HouseEssential_Cube_C_BndEvt__HouseActorBase_Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, bFromSweep) == 0x00001C, "Member 'BP_HouseEssential_Cube_C_BndEvt__HouseActorBase_Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::bFromSweep' has a wrong offset!");
static_assert(offsetof(BP_HouseEssential_Cube_C_BndEvt__HouseActorBase_Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, SweepResult) == 0x000020, "Member 'BP_HouseEssential_Cube_C_BndEvt__HouseActorBase_Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::SweepResult' has a wrong offset!");

// Function BP_HouseEssential_Cube.BP_HouseEssential_Cube_C.BndEvt__HouseActorBase_Sphere_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct BP_HouseEssential_Cube_C_BndEvt__HouseActorBase_Sphere_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_HouseEssential_Cube_C_BndEvt__HouseActorBase_Sphere_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on BP_HouseEssential_Cube_C_BndEvt__HouseActorBase_Sphere_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature");
static_assert(sizeof(BP_HouseEssential_Cube_C_BndEvt__HouseActorBase_Sphere_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature) == 0x000020, "Wrong size on BP_HouseEssential_Cube_C_BndEvt__HouseActorBase_Sphere_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature");
static_assert(offsetof(BP_HouseEssential_Cube_C_BndEvt__HouseActorBase_Sphere_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature, OverlappedComponent) == 0x000000, "Member 'BP_HouseEssential_Cube_C_BndEvt__HouseActorBase_Sphere_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BP_HouseEssential_Cube_C_BndEvt__HouseActorBase_Sphere_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'BP_HouseEssential_Cube_C_BndEvt__HouseActorBase_Sphere_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(BP_HouseEssential_Cube_C_BndEvt__HouseActorBase_Sphere_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'BP_HouseEssential_Cube_C_BndEvt__HouseActorBase_Sphere_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(BP_HouseEssential_Cube_C_BndEvt__HouseActorBase_Sphere_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000018, "Member 'BP_HouseEssential_Cube_C_BndEvt__HouseActorBase_Sphere_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");

// Function BP_HouseEssential_Cube.BP_HouseEssential_Cube_C.CallOnEveryClient
// 0x0008 (0x0008 - 0x0000)
struct BP_HouseEssential_Cube_C_CallOnEveryClient final
{
public:
	class ASubObjective*                          NewParam;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_HouseEssential_Cube_C_CallOnEveryClient) == 0x000008, "Wrong alignment on BP_HouseEssential_Cube_C_CallOnEveryClient");
static_assert(sizeof(BP_HouseEssential_Cube_C_CallOnEveryClient) == 0x000008, "Wrong size on BP_HouseEssential_Cube_C_CallOnEveryClient");
static_assert(offsetof(BP_HouseEssential_Cube_C_CallOnEveryClient, NewParam) == 0x000000, "Member 'BP_HouseEssential_Cube_C_CallOnEveryClient::NewParam' has a wrong offset!");

// Function BP_HouseEssential_Cube.BP_HouseEssential_Cube_C.CancelInteraction
// 0x0008 (0x0008 - 0x0000)
struct BP_HouseEssential_Cube_C_CancelInteraction final
{
public:
	class UPrimitiveComponent*                    InteractionComponent;                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_HouseEssential_Cube_C_CancelInteraction) == 0x000008, "Wrong alignment on BP_HouseEssential_Cube_C_CancelInteraction");
static_assert(sizeof(BP_HouseEssential_Cube_C_CancelInteraction) == 0x000008, "Wrong size on BP_HouseEssential_Cube_C_CancelInteraction");
static_assert(offsetof(BP_HouseEssential_Cube_C_CancelInteraction, InteractionComponent) == 0x000000, "Member 'BP_HouseEssential_Cube_C_CancelInteraction::InteractionComponent' has a wrong offset!");

// Function BP_HouseEssential_Cube.BP_HouseEssential_Cube_C.CreateKillInfo
// 0x0FB0 (0x0FB0 - 0x0000)
struct BP_HouseEssential_Cube_C_CreateKillInfo final
{
public:
	struct FCombatParticipant                     Killer;                                            // 0x0000(0x0060)(BlueprintVisible, BlueprintReadOnly, Parm)
	struct FKillMethod                            Method;                                            // 0x0060(0x02E8)(BlueprintVisible, BlueprintReadOnly, Parm)
	struct FKillGameplayMessage                   KillGameplayMessage;                               // 0x0348(0x03D8)(Parm, OutParm)
	TArray<struct FCombatParticipant>             HealAssisters;                                     // 0x0720(0x0010)(Edit, BlueprintVisible)
	TArray<struct FCombatParticipant>             KillAssisters;                                     // 0x0730(0x0010)(Edit, BlueprintVisible)
	TSoftObjectPtr<class UTexture2D>              CallFunc_GetHouseEssentialIconTexture_ReturnValue; // 0x0740(0x0028)(UObjectWrapper, HasGetValueTypeHash)
	TArray<struct FCombatParticipant>             CallFunc_Add_Heal_Assisters_Modified;              // 0x0768(0x0010)(ReferenceParm)
	TArray<struct FCombatParticipant>             CallFunc_Add_Kill_Assisters_Modified;              // 0x0778(0x0010)(ReferenceParm)
	uint8                                         CallFunc_GetTeamID_ReturnValue;                    // 0x0788(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_789[0x7];                                      // 0x0789(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UKillCircumstance*>              K2Node_MakeArray_Array;                            // 0x0790(0x0010)(ReferenceParm)
	struct FCombatParticipant                     K2Node_MakeStruct_CombatParticipant;               // 0x07A0(0x0060)()
	struct FKillInfo                              K2Node_MakeStruct_KillInfo;                        // 0x0800(0x03D8)()
	struct FKillGameplayMessage                   K2Node_MakeStruct_KillGameplayMessage;             // 0x0BD8(0x03D8)()
};
static_assert(alignof(BP_HouseEssential_Cube_C_CreateKillInfo) == 0x000008, "Wrong alignment on BP_HouseEssential_Cube_C_CreateKillInfo");
static_assert(sizeof(BP_HouseEssential_Cube_C_CreateKillInfo) == 0x000FB0, "Wrong size on BP_HouseEssential_Cube_C_CreateKillInfo");
static_assert(offsetof(BP_HouseEssential_Cube_C_CreateKillInfo, Killer) == 0x000000, "Member 'BP_HouseEssential_Cube_C_CreateKillInfo::Killer' has a wrong offset!");
static_assert(offsetof(BP_HouseEssential_Cube_C_CreateKillInfo, Method) == 0x000060, "Member 'BP_HouseEssential_Cube_C_CreateKillInfo::Method' has a wrong offset!");
static_assert(offsetof(BP_HouseEssential_Cube_C_CreateKillInfo, KillGameplayMessage) == 0x000348, "Member 'BP_HouseEssential_Cube_C_CreateKillInfo::KillGameplayMessage' has a wrong offset!");
static_assert(offsetof(BP_HouseEssential_Cube_C_CreateKillInfo, HealAssisters) == 0x000720, "Member 'BP_HouseEssential_Cube_C_CreateKillInfo::HealAssisters' has a wrong offset!");
static_assert(offsetof(BP_HouseEssential_Cube_C_CreateKillInfo, KillAssisters) == 0x000730, "Member 'BP_HouseEssential_Cube_C_CreateKillInfo::KillAssisters' has a wrong offset!");
static_assert(offsetof(BP_HouseEssential_Cube_C_CreateKillInfo, CallFunc_GetHouseEssentialIconTexture_ReturnValue) == 0x000740, "Member 'BP_HouseEssential_Cube_C_CreateKillInfo::CallFunc_GetHouseEssentialIconTexture_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HouseEssential_Cube_C_CreateKillInfo, CallFunc_Add_Heal_Assisters_Modified) == 0x000768, "Member 'BP_HouseEssential_Cube_C_CreateKillInfo::CallFunc_Add_Heal_Assisters_Modified' has a wrong offset!");
static_assert(offsetof(BP_HouseEssential_Cube_C_CreateKillInfo, CallFunc_Add_Kill_Assisters_Modified) == 0x000778, "Member 'BP_HouseEssential_Cube_C_CreateKillInfo::CallFunc_Add_Kill_Assisters_Modified' has a wrong offset!");
static_assert(offsetof(BP_HouseEssential_Cube_C_CreateKillInfo, CallFunc_GetTeamID_ReturnValue) == 0x000788, "Member 'BP_HouseEssential_Cube_C_CreateKillInfo::CallFunc_GetTeamID_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HouseEssential_Cube_C_CreateKillInfo, K2Node_MakeArray_Array) == 0x000790, "Member 'BP_HouseEssential_Cube_C_CreateKillInfo::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_HouseEssential_Cube_C_CreateKillInfo, K2Node_MakeStruct_CombatParticipant) == 0x0007A0, "Member 'BP_HouseEssential_Cube_C_CreateKillInfo::K2Node_MakeStruct_CombatParticipant' has a wrong offset!");
static_assert(offsetof(BP_HouseEssential_Cube_C_CreateKillInfo, K2Node_MakeStruct_KillInfo) == 0x000800, "Member 'BP_HouseEssential_Cube_C_CreateKillInfo::K2Node_MakeStruct_KillInfo' has a wrong offset!");
static_assert(offsetof(BP_HouseEssential_Cube_C_CreateKillInfo, K2Node_MakeStruct_KillGameplayMessage) == 0x000BD8, "Member 'BP_HouseEssential_Cube_C_CreateKillInfo::K2Node_MakeStruct_KillGameplayMessage' has a wrong offset!");

// Function BP_HouseEssential_Cube.BP_HouseEssential_Cube_C.Destroyed Cosmetics State
// 0x0001 (0x0001 - 0x0000)
struct BP_HouseEssential_Cube_C_Destroyed_Cosmetics_State final
{
public:
	bool                                          Dead_0;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_HouseEssential_Cube_C_Destroyed_Cosmetics_State) == 0x000001, "Wrong alignment on BP_HouseEssential_Cube_C_Destroyed_Cosmetics_State");
static_assert(sizeof(BP_HouseEssential_Cube_C_Destroyed_Cosmetics_State) == 0x000001, "Wrong size on BP_HouseEssential_Cube_C_Destroyed_Cosmetics_State");
static_assert(offsetof(BP_HouseEssential_Cube_C_Destroyed_Cosmetics_State, Dead_0) == 0x000000, "Member 'BP_HouseEssential_Cube_C_Destroyed_Cosmetics_State::Dead_0' has a wrong offset!");

// Function BP_HouseEssential_Cube.BP_HouseEssential_Cube_C.Die Now
// 0x0348 (0x0348 - 0x0000)
struct BP_HouseEssential_Cube_C_Die_Now final
{
public:
	struct FCombatParticipant                     KilledBy;                                          // 0x0000(0x0060)(BlueprintVisible, BlueprintReadOnly, Parm)
	struct FKillMethod                            KillMethod;                                        // 0x0060(0x02E8)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(BP_HouseEssential_Cube_C_Die_Now) == 0x000008, "Wrong alignment on BP_HouseEssential_Cube_C_Die_Now");
static_assert(sizeof(BP_HouseEssential_Cube_C_Die_Now) == 0x000348, "Wrong size on BP_HouseEssential_Cube_C_Die_Now");
static_assert(offsetof(BP_HouseEssential_Cube_C_Die_Now, KilledBy) == 0x000000, "Member 'BP_HouseEssential_Cube_C_Die_Now::KilledBy' has a wrong offset!");
static_assert(offsetof(BP_HouseEssential_Cube_C_Die_Now, KillMethod) == 0x000060, "Member 'BP_HouseEssential_Cube_C_Die_Now::KillMethod' has a wrong offset!");

// Function BP_HouseEssential_Cube.BP_HouseEssential_Cube_C.ExecuteUbergraph_BP_HouseEssential_Cube
// 0x15D8 (0x15D8 - 0x0000)
struct BP_HouseEssential_Cube_C_ExecuteUbergraph_BP_HouseEssential_Cube final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(bool IsEnabled)>               K2Node_CreateDelegate_OutputDelegate;              // 0x0008(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FObjectiveEndMessage                   Temp_struct_Variable;                              // 0x0018(0x0008)(NoDestructor)
	class UAsyncAction_ListenForGameplayMessage*  K2Node_CustomEvent_ProxyObject;                    // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           K2Node_CustomEvent_ActualChannel;                  // 0x0028(0x0008)(NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UAsyncAction_ListenForGameplayMessage* ProxyObject, const struct FGameplayTag& ActualChannel)> K2Node_CreateDelegate_OutputDelegate_1;            // 0x0030(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FObjectiveEndMessage                   Temp_struct_Variable_1;                            // 0x0040(0x0008)(NoDestructor)
	struct FGameplayTag                           Temp_struct_Variable_2;                            // 0x0048(0x0008)(NoDestructor, HasGetValueTypeHash)
	class UAsyncAction_ListenForGameplayMessage*  Temp_object_Variable;                              // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAsyncAction_ListenForGameplayMessage*  CallFunc_ListenForGameplayMessages_ReturnValue;    // 0x0058(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetPayload_ReturnValue;                   // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_62[0x2];                                       // 0x0062(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_2;            // 0x0064(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_74[0x4];                                       // 0x0074(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UInitializationStateEnded*              CallFunc_ListenToInitializationStateEnded_ReturnValue; // 0x0078(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0088(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A1[0x3];                                       // 0x00A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_3;            // 0x00A4(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable;                       // 0x00B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable;                 // 0x00B5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x00B6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B7[0x1];                                       // 0x00B7(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Lerp_ReturnValue;                         // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x00C0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D9[0x7];                                       // 0x00D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_Event_InteractingActor_5;                   // 0x00E0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_Event_InteractingActor_4;                   // 0x00E8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_Event_Focusing_Actor;                       // 0x00F0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_Interactable;                         // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F9[0x7];                                       // 0x00F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    K2Node_Event_InteractionComponent_5;               // 0x0100(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_Event_InteractionComponent_4;               // 0x0108(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_Event_InteractingActor_3;                   // 0x0110(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_Event_InteractionComponent_3;               // 0x0118(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_Event_InteractionComponent_2;               // 0x0120(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_Event_InteractingActor_2;                   // 0x0128(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_Event_InteractionComponent_1;               // 0x0130(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_Event_InteractingActor_1;                   // 0x0138(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	const class AActor*                           K2Node_Event_AttackingActor;                       // 0x0140(0x0008)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Event_Direction;                            // 0x0148(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_CustomEvent_Location;                       // 0x0160(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UNiagaraComponent*                      CallFunc_SpawnSystemAtLocation_ReturnValue;        // 0x0178(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0180(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UNiagaraComponent*                      CallFunc_SpawnSystemAtLocation_ReturnValue_1;      // 0x0198(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue_1;    // 0x01A0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetRelativeLocation_SweepHitResult;    // 0x01B8(0x00F8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x02B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2B1[0x7];                                      // 0x02B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FCombatParticipant                     K2Node_CustomEvent_KilledBy;                       // 0x02B8(0x0060)()
	struct FKillMethod                            K2Node_CustomEvent_KillMethod;                     // 0x0318(0x02E8)()
	struct FKillGameplayMessage                   CallFunc_CreateKillInfo_KillGameplayMessage;       // 0x0600(0x03D8)()
	float                                         K2Node_Event_Delta;                                // 0x09D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9DC[0x4];                                      // 0x09DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_Event_Causer;                               // 0x09E0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FCombatParticipant                     K2Node_Event_CombatParticipant;                    // 0x09E8(0x0060)(ConstParm)
	struct FKillMethod                            K2Node_Event_KillMethod;                           // 0x0A48(0x02E8)(ConstParm)
	struct FVector_NetQuantize                    K2Node_Event_Location;                             // 0x0D30(0x0018)(NoDestructor, HasGetValueTypeHash)
	class APawn*                                  K2Node_DynamicCast_AsPawn;                         // 0x0D48(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0D50(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D51[0x3];                                      // 0x0D51(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FActiveGameplayEffectHandle            CallFunc_BP_ApplyGameplayEffectToSelf_ReturnValue; // 0x0D54(0x0008)(NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D5C[0x4];                                      // 0x0D5C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x0D60(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue_1;                       // 0x0D68(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0D70(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetGroundsKeeperAtPoint_bFoundTeam;       // 0x0D88(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D89[0x7];                                      // 0x0D89(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ATeamVolume*>                    CallFunc_GetGroundsKeeperAtPoint_OverlappingTeamVolumes; // 0x0D90(0x0010)(ReferenceParm)
	class AGroundsKeeper*                         CallFunc_GetGroundsKeeperAtPoint_ReturnValue;      // 0x0DA0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	const class UAttributeSet*                    CallFunc_GetAttributeSet_ReturnValue;              // 0x0DA8(0x0008)(ConstParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x0DB0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_DB1[0x7];                                      // 0x0DB1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UHealthAttributeSet*                    K2Node_DynamicCast_AsHealth_Attribute_Set;         // 0x0DB8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0DC0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x0DC1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_DC2[0x6];                                      // 0x0DC2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class Abp_groundskeeper_C*                    K2Node_DynamicCast_AsBp_Groundskeeper;             // 0x0DC8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0DD0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_DD1[0x7];                                      // 0x0DD1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameplayMessageSubsystem*              CallFunc_GetGameInstanceSubsystem_ReturnValue;     // 0x0DD8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_Health;                               // 0x0DE0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_MaxHealth;                            // 0x0DE4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGameplayMessageSubsystem*              CallFunc_GetGameInstanceSubsystem_ReturnValue_1;   // 0x0DE8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_4;            // 0x0DF0(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0E00(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E01[0x7];                                      // 0x0E01(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0E08(0x0008)(NoDestructor, HasGetValueTypeHash)
	class UInitializationStateEnded*              CallFunc_ListenToInitializationStateEnded_ReturnValue_1; // 0x0E10(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue_1;          // 0x0E18(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_5;                    // 0x0E19(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E1A[0x6];                                      // 0x0E1A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0E20(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FKillGameplayMessage                   K2Node_CustomEvent_Message;                        // 0x0E28(0x03D8)()
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_5;            // 0x1200(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FS_HouseEssentialWasDamagedMessage     K2Node_MakeStruct_S_HouseEssentialWasDamagedMessage; // 0x1210(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_Dead;                           // 0x1220(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1221[0x7];                                     // 0x1221(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UInitializationStateEnded*              CallFunc_ListenToInitializationStateEnded_ReturnValue_2; // 0x1228(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_6;                    // 0x1230(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1231[0x7];                                     // 0x1231(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x1238(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UNiagaraComponent*                      CallFunc_SpawnSystemAtLocation_ReturnValue_2;      // 0x1250(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Get_ClassLog_Name_name;                   // 0x1258(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class UGameUserSettings*                      CallFunc_GetGameUserSettings_ReturnValue;          // 0x1268(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_IsEnabled;                      // 0x1270(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1271[0x7];                                     // 0x1271(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ULyraSettingsLocal*                     K2Node_DynamicCast_AsLyra_Settings_Local;          // 0x1278(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x1280(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1281[0x7];                                     // 0x1281(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerState*                           K2Node_CustomEvent_PlayerState;                    // 0x1288(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_GetPawn_ReturnValue;                      // 0x1290(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLocallyControlled_ReturnValue;          // 0x1298(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1299[0x3];                                     // 0x1299(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_6;            // 0x129C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12AC[0x4];                                     // 0x12AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ASubObjective*                          K2Node_CustomEvent_NewParam;                       // 0x12B0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_7;                    // 0x12B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable_1;               // 0x12B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12BA[0x6];                                     // 0x12BA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerStateJP_Match*                   CallFunc_GetFirstPlayerStateJP_Match_ReturnValue;  // 0x12C0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x12C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable_2;               // 0x12C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_8;                    // 0x12CA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12CB[0x5];                                     // 0x12CB(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UHouseEssentialsManagerComponent_C*     CallFunc_GetComponentByClass_ReturnValue;          // 0x12D0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent_1;  // 0x12D8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor_1;           // 0x12E0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp_1;            // 0x12E8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex_1;       // 0x12F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bFromSweep;             // 0x12F4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12F5[0x3];                                     // 0x12F5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_ComponentBoundEvent_SweepResult;            // 0x12F8(0x00F8)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class APawn*                                  K2Node_DynamicCast_AsPawn_1;                       // 0x13F0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x13F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_13F9[0x7];                                     // 0x13F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent;    // 0x1400(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor;             // 0x1408(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp;              // 0x1410(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex;         // 0x1418(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLocallyControlled_ReturnValue_1;        // 0x141C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_141D[0x3];                                     // 0x141D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  K2Node_DynamicCast_AsPawn_2;                       // 0x1420(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_5;                     // 0x1428(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLocallyControlled_ReturnValue_2;        // 0x1429(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_142A[0x2];                                     // 0x142A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_CustomEvent_BlendTime;                      // 0x142C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_CustomEvent_Duration;                       // 0x1430(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue_1;        // 0x1438(0x0008)(NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x1440(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x1448(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetRelativeRotation_SweepHitResult;    // 0x1450(0x00F8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class AActor*                                 K2Node_Event_InteractingActor;                     // 0x1548(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_Event_InteractionComponent;                 // 0x1550(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable_1;                     // 0x1558(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable_2;                     // 0x1559(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue_1;               // 0x155A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue_2;               // 0x155B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue_3;               // 0x155C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_155D[0x3];                                     // 0x155D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x1560(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetServerWorldTimeSeconds_ReturnValue;    // 0x1568(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_A_ImplicitCast;          // 0x1570(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeRotator_Yaw_ImplicitCast;             // 0x1578(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetMorphTarget_Value_ImplicitCast;        // 0x157C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_Alpha_ImplicitCast;                  // 0x1580(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_Alpha_ImplicitCast_1;                // 0x1588(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_VariableSet_CurrentHealth_ImplicitCast;     // 0x1590(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_UpdateHealth_Health_ImplicitCast;         // 0x1598(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_VariableSet_OldHealth_ImplicitCast;         // 0x15A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Less_DoubleDouble_A_ImplicitCast;         // 0x15A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_UpdateProgressbar_Value_ImplicitCast;     // 0x15B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_B_ImplicitCast;     // 0x15B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Less_DoubleDouble_A_ImplicitCast_1;       // 0x15C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_UpdateProgressbar_Max_ImplicitCast;       // 0x15C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_K2_SetTimerDelegate_Time_ImplicitCast;    // 0x15D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_HouseEssential_Cube_C_ExecuteUbergraph_BP_HouseEssential_Cube) == 0x000008, "Wrong alignment on BP_HouseEssential_Cube_C_ExecuteUbergraph_BP_HouseEssential_Cube");
static_assert(sizeof(BP_HouseEssential_Cube_C_ExecuteUbergraph_BP_HouseEssential_Cube) == 0x0015D8, "Wrong size on BP_HouseEssential_Cube_C_ExecuteUbergraph_BP_HouseEssential_Cube");
static_assert(offsetof(BP_HouseEssential_Cube_C_ExecuteUbergraph_BP_HouseEssential_Cube, EntryPoint) == 0x000000, "Member 'BP_HouseEssential_Cube_C_ExecuteUbergraph_BP_HouseEssential_Cube::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_HouseEssential_Cube_C_ExecuteUbergraph_BP_HouseEssential_Cube, CallFunc_IsValid_ReturnValue) == 0x000004, "Member 'BP_HouseEssential_Cube_C_ExecuteUbergraph_BP_HouseEssential_Cube::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HouseEssential_Cube_C_ExecuteUbergraph_BP_HouseEssential_Cube, K2Node_CreateDelegate_OutputDelegate) == 0x000008, "Member 'BP_HouseEssential_Cube_C_ExecuteUbergraph_BP_HouseEssential_Cube::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_HouseEssential_Cube_C_ExecuteUbergraph_BP_HouseEssential_Cube, Temp_struct_Variable) == 0x000018, "Member 'BP_HouseEssential_Cube_C_ExecuteUbergraph_BP_HouseEssential_Cube::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(BP_HouseEssential_Cube_C_ExecuteUbergraph_BP_HouseEssential_Cube, K2Node_CustomEvent_ProxyObject) == 0x000020, "Member 'BP_HouseEssential_Cube_C_ExecuteUbergraph_BP_HouseEssential_Cube::K2Node_CustomEvent_ProxyObject' has a wrong offset!");
static_assert(offsetof(BP_HouseEssential_Cube_C_ExecuteUbergraph_BP_HouseEssential_Cube, K2Node_CustomEvent_ActualChannel) == 0x000028, "Member 'BP_HouseEssential_Cube_C_ExecuteUbergraph_BP_HouseEssential_Cube::K2Node_CustomEvent_ActualChannel' has a wrong offset!");
static_assert(offsetof(BP_HouseEssential_Cube_C_ExecuteUbergraph_BP_HouseEssential_Cube, K2Node_CreateDelegate_OutputDelegate_1) == 0x000030, "Member 'BP_HouseEssential_Cube_C_ExecuteUbergraph_BP_HouseEssential_Cube::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(BP_HouseEssential_Cube_C_ExecuteUbergraph_BP_HouseEssential_Cube, Temp_struct_Variable_1) == 0x000040, "Member 'BP_HouseEssential_Cube_C_ExecuteUbergraph_BP_HouseEssential_Cube::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_HouseEssential_Cube_C_ExecuteUbergraph_BP_HouseEssential_Cube, Temp_struct_Variable_2) == 0x000048, "Member 'BP_HouseEssential_Cube_C_ExecuteUbergraph_BP_HouseEssential_Cube::Temp_struct_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_HouseEssential_Cube_C_ExecuteUbergraph_BP_HouseEssential_Cube, Temp_object_Variable) == 0x000050, "Member 'BP_HouseEssential_Cube_C_ExecuteUbergraph_BP_HouseEssential_Cube::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BP_HouseEssential_Cube_C_ExecuteUbergraph_BP_HouseEssential_Cube, CallFunc_ListenForGameplayMessages_ReturnValue) == 0x000058, "Member 'BP_HouseEssential_Cube_C_ExecuteUbergraph_BP_HouseEssential_Cube::CallFunc_ListenForGameplayMessages_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HouseEssential_Cube_C_ExecuteUbergraph_BP_HouseEssential_Cube, CallFunc_GetPayload_ReturnValue) == 0x000060, "Member 'BP_HouseEssential_Cube_C_ExecuteUbergraph_BP_HouseEssential_Cube::CallFunc_GetPayload_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HouseEssential_Cube_C_ExecuteUbergraph_BP_HouseEssential_Cube, CallFunc_IsValid_ReturnValue_1) == 0x000061, "Member 'BP_HouseEssential_Cube_C_ExecuteUbergraph_BP_HouseEssential_Cube::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_HouseEssential_Cube_C_ExecuteUbergraph_BP_HouseEssential_Cube, K2Node_CreateDelegate_OutputDelegate_2) == 0x000064, "Member 'BP_HouseEssential_Cube_C_ExecuteUbergraph_BP_HouseEssential_Cube::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(BP_HouseEssential_Cube_C_ExecuteUbergraph_BP_HouseEssential_Cube, CallFunc_ListenToInitializationStateEnded_ReturnValue) == 0x000078, "Member 'BP_HouseEssential_Cube_C_ExecuteUbergraph_BP_HouseEssential_Cube::CallFunc_ListenToInitializationStateEnded_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HouseEssential_Cube_C_ExecuteUbergraph_BP_HouseEssential_Cube, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000080, "Member 'BP_HouseEssential_Cube_C_ExecuteUbergraph_BP_HouseEssential_Cube::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HouseEssential_Cube_C_ExecuteUbergraph_BP_HouseEssential_Cube, CallFunc_MakeRotator_ReturnValue) == 0x000088, "Member 'BP_HouseEssential_Cube_C_ExecuteUbergraph_BP_HouseEssential_Cube::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HouseEssential_Cube_C_ExecuteUbergraph_BP_HouseEssential_Cube, CallFunc_IsValid_ReturnValue_2) == 0x0000A0, "Member 'BP_HouseEssential_Cube_C_ExecuteUbergraph_BP_HouseEssential_Cube::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_HouseEssential_Cube_C_ExecuteUbergraph_BP_HouseEssential_Cube, K2Node_CreateDelegate_OutputDelegate_3) == 0x0000A4, "Member 'BP_HouseEssential_Cube_C_ExecuteUbergraph_BP_HouseEssential_Cube::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(BP_HouseEssential_Cube_C_ExecuteUbergraph_BP_HouseEssential_Cube, Temp_bool_IsClosed_Variable) == 0x0000B4, "Member 'BP_HouseEssential_Cube_C_ExecuteUbergraph_BP_HouseEssential_Cube::Temp_bool_IsClosed_Variable' has a wrong offset!");
static_assert(offsetof(BP_HouseEssential_Cube_C_ExecuteUbergraph_BP_HouseEssential_Cube, Temp_bool_Has_Been_Initd_Variable) == 0x0000B5, "Member 'BP_HouseEssential_Cube_C_ExecuteUbergraph_BP_HouseEssential_Cube::Temp_bool_Has_Been_Initd_Variable' has a wrong offset!");
static_assert(offsetof(BP_HouseEssential_Cube_C_ExecuteUbergraph_BP_HouseEssential_Cube, CallFunc_HasAuthority_ReturnValue) == 0x0000B6, "Member 'BP_HouseEssential_Cube_C_ExecuteUbergraph_BP_HouseEssential_Cube::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HouseEssential_Cube_C_ExecuteUbergraph_BP_HouseEssential_Cube, CallFunc_Lerp_ReturnValue) == 0x0000B8, "Member 'BP_HouseEssential_Cube_C_ExecuteUbergraph_BP_HouseEssential_Cube::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HouseEssential_Cube_C_ExecuteUbergraph_BP_HouseEssential_Cube, CallFunc_MakeVector_ReturnValue) == 0x0000C0, "Member 'BP_HouseEssential_Cube_C_ExecuteUbergraph_BP_HouseEssential_Cube::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HouseEssential_Cube_C_ExecuteUbergraph_BP_HouseEssential_Cube, CallFunc_IsDedicatedServer_ReturnValue) == 0x0000D8, "Member 'BP_HouseEssential_Cube_C_ExecuteUbergraph_BP_HouseEssential_Cube::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HouseEssential_Cube_C_ExecuteUbergraph_BP_HouseEssential_Cube, K2Node_Event_InteractingActor_5) == 0x0000E0, "Member 'BP_HouseEssential_Cube_C_ExecuteUbergraph_BP_HouseEssential_Cube::K2Node_Event_InteractingActor_5' has a wrong offset!");
static_assert(offsetof(BP_HouseEssential_Cube_C_ExecuteUbergraph_BP_HouseEssential_Cube, K2Node_Event_InteractingActor_4) == 0x0000E8, "Member 'BP_HouseEssential_Cube_C_ExecuteUbergraph_BP_HouseEssential_Cube::K2Node_Event_InteractingActor_4' has a wrong offset!");
static_assert(offsetof(BP_HouseEssential_Cube_C_ExecuteUbergraph_BP_HouseEssential_Cube, K2Node_Event_Focusing_Actor) == 0x0000F0, "Member 'BP_HouseEssential_Cube_C_ExecuteUbergraph_BP_HouseEssential_Cube::K2Node_Event_Focusing_Actor' has a wrong offset!");
static_assert(offsetof(BP_HouseEssential_Cube_C_ExecuteUbergraph_BP_HouseEssential_Cube, K2Node_Event_Interactable) == 0x0000F8, "Member 'BP_HouseEssential_Cube_C_ExecuteUbergraph_BP_HouseEssential_Cube::K2Node_Event_Interactable' has a wrong offset!");
static_assert(offsetof(BP_HouseEssential_Cube_C_ExecuteUbergraph_BP_HouseEssential_Cube, K2Node_Event_InteractionComponent_5) == 0x000100, "Member 'BP_HouseEssential_Cube_C_ExecuteUbergraph_BP_HouseEssential_Cube::K2Node_Event_InteractionComponent_5' has a wrong offset!");
static_assert(offsetof(BP_HouseEssential_Cube_C_ExecuteUbergraph_BP_HouseEssential_Cube, K2Node_Event_InteractionComponent_4) == 0x000108, "Member 'BP_HouseEssential_Cube_C_ExecuteUbergraph_BP_HouseEssential_Cube::K2Node_Event_InteractionComponent_4' has a wrong offset!");
static_assert(offsetof(BP_HouseEssential_Cube_C_ExecuteUbergraph_BP_HouseEssential_Cube, K2Node_Event_InteractingActor_3) == 0x000110, "Member 'BP_HouseEssential_Cube_C_ExecuteUbergraph_BP_HouseEssential_Cube::K2Node_Event_InteractingActor_3' has a wrong offset!");
static_assert(offsetof(BP_HouseEssential_Cube_C_ExecuteUbergraph_BP_HouseEssential_Cube, K2Node_Event_InteractionComponent_3) == 0x000118, "Member 'BP_HouseEssential_Cube_C_ExecuteUbergraph_BP_HouseEssential_Cube::K2Node_Event_InteractionComponent_3' has a wrong offset!");
static_assert(offsetof(BP_HouseEssential_Cube_C_ExecuteUbergraph_BP_HouseEssential_Cube, K2Node_Event_InteractionComponent_2) == 0x000120, "Member 'BP_HouseEssential_Cube_C_ExecuteUbergraph_BP_HouseEssential_Cube::K2Node_Event_InteractionComponent_2' has a wrong offset!");
static_assert(offsetof(BP_HouseEssential_Cube_C_ExecuteUbergraph_BP_HouseEssential_Cube, K2Node_Event_InteractingActor_2) == 0x000128, "Member 'BP_HouseEssential_Cube_C_ExecuteUbergraph_BP_HouseEssential_Cube::K2Node_Event_InteractingActor_2' has a wrong offset!");
static_assert(offsetof(BP_HouseEssential_Cube_C_ExecuteUbergraph_BP_HouseEssential_Cube, K2Node_Event_InteractionComponent_1) == 0x000130, "Member 'BP_HouseEssential_Cube_C_ExecuteUbergraph_BP_HouseEssential_Cube::K2Node_Event_InteractionComponent_1' has a wrong offset!");
static_assert(offsetof(BP_HouseEssential_Cube_C_ExecuteUbergraph_BP_HouseEssential_Cube, K2Node_Event_InteractingActor_1) == 0x000138, "Member 'BP_HouseEssential_Cube_C_ExecuteUbergraph_BP_HouseEssential_Cube::K2Node_Event_InteractingActor_1' has a wrong offset!");
static_assert(offsetof(BP_HouseEssential_Cube_C_ExecuteUbergraph_BP_HouseEssential_Cube, K2Node_Event_AttackingActor) == 0x000140, "Member 'BP_HouseEssential_Cube_C_ExecuteUbergraph_BP_HouseEssential_Cube::K2Node_Event_AttackingActor' has a wrong offset!");
static_assert(offsetof(BP_HouseEssential_Cube_C_ExecuteUbergraph_BP_HouseEssential_Cube, K2Node_Event_Direction) == 0x000148, "Member 'BP_HouseEssential_Cube_C_ExecuteUbergraph_BP_HouseEssential_Cube::K2Node_Event_Direction' has a wrong offset!");
static_assert(offsetof(BP_HouseEssential_Cube_C_ExecuteUbergraph_BP_HouseEssential_Cube, K2Node_CustomEvent_Location) == 0x000160, "Member 'BP_HouseEssential_Cube_C_ExecuteUbergraph_BP_HouseEssential_Cube::K2Node_CustomEvent_Location' has a wrong offset!");
static_assert(offsetof(BP_HouseEssential_Cube_C_ExecuteUbergraph_BP_HouseEssential_Cube, CallFunc_SpawnSystemAtLocation_ReturnValue) == 0x000178, "Member 'BP_HouseEssential_Cube_C_ExecuteUbergraph_BP_HouseEssential_Cube::CallFunc_SpawnSystemAtLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HouseEssential_Cube_C_ExecuteUbergraph_BP_HouseEssential_Cube, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000180, "Member 'BP_HouseEssential_Cube_C_ExecuteUbergraph_BP_HouseEssential_Cube::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HouseEssential_Cube_C_ExecuteUbergraph_BP_HouseEssential_Cube, CallFunc_SpawnSystemAtLocation_ReturnValue_1) == 0x000198, "Member 'BP_HouseEssential_Cube_C_ExecuteUbergraph_BP_HouseEssential_Cube::CallFunc_SpawnSystemAtLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_HouseEssential_Cube_C_ExecuteUbergraph_BP_HouseEssential_Cube, CallFunc_K2_GetComponentLocation_ReturnValue_1) == 0x0001A0, "Member 'BP_HouseEssential_Cube_C_ExecuteUbergraph_BP_HouseEssential_Cube::CallFunc_K2_GetComponentLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_HouseEssential_Cube_C_ExecuteUbergraph_BP_HouseEssential_Cube, CallFunc_K2_SetRelativeLocation_SweepHitResult) == 0x0001B8, "Member 'BP_HouseEssential_Cube_C_ExecuteUbergraph_BP_HouseEssential_Cube::CallFunc_K2_SetRelativeLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_HouseEssential_Cube_C_ExecuteUbergraph_BP_HouseEssential_Cube, CallFunc_IsValid_ReturnValue_3) == 0x0002B0, "Member 'BP_HouseEssential_Cube_C_ExecuteUbergraph_BP_HouseEssential_Cube::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_HouseEssential_Cube_C_ExecuteUbergraph_BP_HouseEssential_Cube, K2Node_CustomEvent_KilledBy) == 0x0002B8, "Member 'BP_HouseEssential_Cube_C_ExecuteUbergraph_BP_HouseEssential_Cube::K2Node_CustomEvent_KilledBy' has a wrong offset!");
static_assert(offsetof(BP_HouseEssential_Cube_C_ExecuteUbergraph_BP_HouseEssential_Cube, K2Node_CustomEvent_KillMethod) == 0x000318, "Member 'BP_HouseEssential_Cube_C_ExecuteUbergraph_BP_HouseEssential_Cube::K2Node_CustomEvent_KillMethod' has a wrong offset!");
static_assert(offsetof(BP_HouseEssential_Cube_C_ExecuteUbergraph_BP_HouseEssential_Cube, CallFunc_CreateKillInfo_KillGameplayMessage) == 0x000600, "Member 'BP_HouseEssential_Cube_C_ExecuteUbergraph_BP_HouseEssential_Cube::CallFunc_CreateKillInfo_KillGameplayMessage' has a wrong offset!");
static_assert(offsetof(BP_HouseEssential_Cube_C_ExecuteUbergraph_BP_HouseEssential_Cube, K2Node_Event_Delta) == 0x0009D8, "Member 'BP_HouseEssential_Cube_C_ExecuteUbergraph_BP_HouseEssential_Cube::K2Node_Event_Delta' has a wrong offset!");
static_assert(offsetof(BP_HouseEssential_Cube_C_ExecuteUbergraph_BP_HouseEssential_Cube, K2Node_Event_Causer) == 0x0009E0, "Member 'BP_HouseEssential_Cube_C_ExecuteUbergraph_BP_HouseEssential_Cube::K2Node_Event_Causer' has a wrong offset!");
static_assert(offsetof(BP_HouseEssential_Cube_C_ExecuteUbergraph_BP_HouseEssential_Cube, K2Node_Event_CombatParticipant) == 0x0009E8, "Member 'BP_HouseEssential_Cube_C_ExecuteUbergraph_BP_HouseEssential_Cube::K2Node_Event_CombatParticipant' has a wrong offset!");
static_assert(offsetof(BP_HouseEssential_Cube_C_ExecuteUbergraph_BP_HouseEssential_Cube, K2Node_Event_KillMethod) == 0x000A48, "Member 'BP_HouseEssential_Cube_C_ExecuteUbergraph_BP_HouseEssential_Cube::K2Node_Event_KillMethod' has a wrong offset!");
static_assert(offsetof(BP_HouseEssential_Cube_C_ExecuteUbergraph_BP_HouseEssential_Cube, K2Node_Event_Location) == 0x000D30, "Member 'BP_HouseEssential_Cube_C_ExecuteUbergraph_BP_HouseEssential_Cube::K2Node_Event_Location' has a wrong offset!");
static_assert(offsetof(BP_HouseEssential_Cube_C_ExecuteUbergraph_BP_HouseEssential_Cube, K2Node_DynamicCast_AsPawn) == 0x000D48, "Member 'BP_HouseEssential_Cube_C_ExecuteUbergraph_BP_HouseEssential_Cube::K2Node_DynamicCast_AsPawn' has a wrong offset!");
static_assert(offsetof(BP_HouseEssential_Cube_C_ExecuteUbergraph_BP_HouseEssential_Cube, K2Node_DynamicCast_bSuccess) == 0x000D50, "Member 'BP_HouseEssential_Cube_C_ExecuteUbergraph_BP_HouseEssential_Cube::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_HouseEssential_Cube_C_ExecuteUbergraph_BP_HouseEssential_Cube, CallFunc_BP_ApplyGameplayEffectToSelf_ReturnValue) == 0x000D54, "Member 'BP_HouseEssential_Cube_C_ExecuteUbergraph_BP_HouseEssential_Cube::CallFunc_BP_ApplyGameplayEffectToSelf_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HouseEssential_Cube_C_ExecuteUbergraph_BP_HouseEssential_Cube, CallFunc_MapRangeClamped_ReturnValue) == 0x000D60, "Member 'BP_HouseEssential_Cube_C_ExecuteUbergraph_BP_HouseEssential_Cube::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HouseEssential_Cube_C_ExecuteUbergraph_BP_HouseEssential_Cube, CallFunc_Lerp_ReturnValue_1) == 0x000D68, "Member 'BP_HouseEssential_Cube_C_ExecuteUbergraph_BP_HouseEssential_Cube::CallFunc_Lerp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_HouseEssential_Cube_C_ExecuteUbergraph_BP_HouseEssential_Cube, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000D70, "Member 'BP_HouseEssential_Cube_C_ExecuteUbergraph_BP_HouseEssential_Cube::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HouseEssential_Cube_C_ExecuteUbergraph_BP_HouseEssential_Cube, CallFunc_GetGroundsKeeperAtPoint_bFoundTeam) == 0x000D88, "Member 'BP_HouseEssential_Cube_C_ExecuteUbergraph_BP_HouseEssential_Cube::CallFunc_GetGroundsKeeperAtPoint_bFoundTeam' has a wrong offset!");
static_assert(offsetof(BP_HouseEssential_Cube_C_ExecuteUbergraph_BP_HouseEssential_Cube, CallFunc_GetGroundsKeeperAtPoint_OverlappingTeamVolumes) == 0x000D90, "Member 'BP_HouseEssential_Cube_C_ExecuteUbergraph_BP_HouseEssential_Cube::CallFunc_GetGroundsKeeperAtPoint_OverlappingTeamVolumes' has a wrong offset!");
static_assert(offsetof(BP_HouseEssential_Cube_C_ExecuteUbergraph_BP_HouseEssential_Cube, CallFunc_GetGroundsKeeperAtPoint_ReturnValue) == 0x000DA0, "Member 'BP_HouseEssential_Cube_C_ExecuteUbergraph_BP_HouseEssential_Cube::CallFunc_GetGroundsKeeperAtPoint_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HouseEssential_Cube_C_ExecuteUbergraph_BP_HouseEssential_Cube, CallFunc_GetAttributeSet_ReturnValue) == 0x000DA8, "Member 'BP_HouseEssential_Cube_C_ExecuteUbergraph_BP_HouseEssential_Cube::CallFunc_GetAttributeSet_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HouseEssential_Cube_C_ExecuteUbergraph_BP_HouseEssential_Cube, CallFunc_IsValid_ReturnValue_4) == 0x000DB0, "Member 'BP_HouseEssential_Cube_C_ExecuteUbergraph_BP_HouseEssential_Cube::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_HouseEssential_Cube_C_ExecuteUbergraph_BP_HouseEssential_Cube, K2Node_DynamicCast_AsHealth_Attribute_Set) == 0x000DB8, "Member 'BP_HouseEssential_Cube_C_ExecuteUbergraph_BP_HouseEssential_Cube::K2Node_DynamicCast_AsHealth_Attribute_Set' has a wrong offset!");
static_assert(offsetof(BP_HouseEssential_Cube_C_ExecuteUbergraph_BP_HouseEssential_Cube, K2Node_DynamicCast_bSuccess_1) == 0x000DC0, "Member 'BP_HouseEssential_Cube_C_ExecuteUbergraph_BP_HouseEssential_Cube::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_HouseEssential_Cube_C_ExecuteUbergraph_BP_HouseEssential_Cube, CallFunc_Less_DoubleDouble_ReturnValue) == 0x000DC1, "Member 'BP_HouseEssential_Cube_C_ExecuteUbergraph_BP_HouseEssential_Cube::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HouseEssential_Cube_C_ExecuteUbergraph_BP_HouseEssential_Cube, K2Node_DynamicCast_AsBp_Groundskeeper) == 0x000DC8, "Member 'BP_HouseEssential_Cube_C_ExecuteUbergraph_BP_HouseEssential_Cube::K2Node_DynamicCast_AsBp_Groundskeeper' has a wrong offset!");
static_assert(offsetof(BP_HouseEssential_Cube_C_ExecuteUbergraph_BP_HouseEssential_Cube, K2Node_DynamicCast_bSuccess_2) == 0x000DD0, "Member 'BP_HouseEssential_Cube_C_ExecuteUbergraph_BP_HouseEssential_Cube::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_HouseEssential_Cube_C_ExecuteUbergraph_BP_HouseEssential_Cube, CallFunc_GetGameInstanceSubsystem_ReturnValue) == 0x000DD8, "Member 'BP_HouseEssential_Cube_C_ExecuteUbergraph_BP_HouseEssential_Cube::CallFunc_GetGameInstanceSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HouseEssential_Cube_C_ExecuteUbergraph_BP_HouseEssential_Cube, K2Node_Event_Health) == 0x000DE0, "Member 'BP_HouseEssential_Cube_C_ExecuteUbergraph_BP_HouseEssential_Cube::K2Node_Event_Health' has a wrong offset!");
static_assert(offsetof(BP_HouseEssential_Cube_C_ExecuteUbergraph_BP_HouseEssential_Cube, K2Node_Event_MaxHealth) == 0x000DE4, "Member 'BP_HouseEssential_Cube_C_ExecuteUbergraph_BP_HouseEssential_Cube::K2Node_Event_MaxHealth' has a wrong offset!");
static_assert(offsetof(BP_HouseEssential_Cube_C_ExecuteUbergraph_BP_HouseEssential_Cube, CallFunc_GetGameInstanceSubsystem_ReturnValue_1) == 0x000DE8, "Member 'BP_HouseEssential_Cube_C_ExecuteUbergraph_BP_HouseEssential_Cube::CallFunc_GetGameInstanceSubsystem_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_HouseEssential_Cube_C_ExecuteUbergraph_BP_HouseEssential_Cube, K2Node_CreateDelegate_OutputDelegate_4) == 0x000DF0, "Member 'BP_HouseEssential_Cube_C_ExecuteUbergraph_BP_HouseEssential_Cube::K2Node_CreateDelegate_OutputDelegate_4' has a wrong offset!");
static_assert(offsetof(BP_HouseEssential_Cube_C_ExecuteUbergraph_BP_HouseEssential_Cube, CallFunc_Not_PreBool_ReturnValue) == 0x000E00, "Member 'BP_HouseEssential_Cube_C_ExecuteUbergraph_BP_HouseEssential_Cube::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HouseEssential_Cube_C_ExecuteUbergraph_BP_HouseEssential_Cube, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000E08, "Member 'BP_HouseEssential_Cube_C_ExecuteUbergraph_BP_HouseEssential_Cube::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HouseEssential_Cube_C_ExecuteUbergraph_BP_HouseEssential_Cube, CallFunc_ListenToInitializationStateEnded_ReturnValue_1) == 0x000E10, "Member 'BP_HouseEssential_Cube_C_ExecuteUbergraph_BP_HouseEssential_Cube::CallFunc_ListenToInitializationStateEnded_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_HouseEssential_Cube_C_ExecuteUbergraph_BP_HouseEssential_Cube, CallFunc_Less_DoubleDouble_ReturnValue_1) == 0x000E18, "Member 'BP_HouseEssential_Cube_C_ExecuteUbergraph_BP_HouseEssential_Cube::CallFunc_Less_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_HouseEssential_Cube_C_ExecuteUbergraph_BP_HouseEssential_Cube, CallFunc_IsValid_ReturnValue_5) == 0x000E19, "Member 'BP_HouseEssential_Cube_C_ExecuteUbergraph_BP_HouseEssential_Cube::CallFunc_IsValid_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_HouseEssential_Cube_C_ExecuteUbergraph_BP_HouseEssential_Cube, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000E20, "Member 'BP_HouseEssential_Cube_C_ExecuteUbergraph_BP_HouseEssential_Cube::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HouseEssential_Cube_C_ExecuteUbergraph_BP_HouseEssential_Cube, K2Node_CustomEvent_Message) == 0x000E28, "Member 'BP_HouseEssential_Cube_C_ExecuteUbergraph_BP_HouseEssential_Cube::K2Node_CustomEvent_Message' has a wrong offset!");
static_assert(offsetof(BP_HouseEssential_Cube_C_ExecuteUbergraph_BP_HouseEssential_Cube, K2Node_CreateDelegate_OutputDelegate_5) == 0x001200, "Member 'BP_HouseEssential_Cube_C_ExecuteUbergraph_BP_HouseEssential_Cube::K2Node_CreateDelegate_OutputDelegate_5' has a wrong offset!");
static_assert(offsetof(BP_HouseEssential_Cube_C_ExecuteUbergraph_BP_HouseEssential_Cube, K2Node_MakeStruct_S_HouseEssentialWasDamagedMessage) == 0x001210, "Member 'BP_HouseEssential_Cube_C_ExecuteUbergraph_BP_HouseEssential_Cube::K2Node_MakeStruct_S_HouseEssentialWasDamagedMessage' has a wrong offset!");
static_assert(offsetof(BP_HouseEssential_Cube_C_ExecuteUbergraph_BP_HouseEssential_Cube, K2Node_CustomEvent_Dead) == 0x001220, "Member 'BP_HouseEssential_Cube_C_ExecuteUbergraph_BP_HouseEssential_Cube::K2Node_CustomEvent_Dead' has a wrong offset!");
static_assert(offsetof(BP_HouseEssential_Cube_C_ExecuteUbergraph_BP_HouseEssential_Cube, CallFunc_ListenToInitializationStateEnded_ReturnValue_2) == 0x001228, "Member 'BP_HouseEssential_Cube_C_ExecuteUbergraph_BP_HouseEssential_Cube::CallFunc_ListenToInitializationStateEnded_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_HouseEssential_Cube_C_ExecuteUbergraph_BP_HouseEssential_Cube, CallFunc_IsValid_ReturnValue_6) == 0x001230, "Member 'BP_HouseEssential_Cube_C_ExecuteUbergraph_BP_HouseEssential_Cube::CallFunc_IsValid_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_HouseEssential_Cube_C_ExecuteUbergraph_BP_HouseEssential_Cube, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x001238, "Member 'BP_HouseEssential_Cube_C_ExecuteUbergraph_BP_HouseEssential_Cube::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_HouseEssential_Cube_C_ExecuteUbergraph_BP_HouseEssential_Cube, CallFunc_SpawnSystemAtLocation_ReturnValue_2) == 0x001250, "Member 'BP_HouseEssential_Cube_C_ExecuteUbergraph_BP_HouseEssential_Cube::CallFunc_SpawnSystemAtLocation_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_HouseEssential_Cube_C_ExecuteUbergraph_BP_HouseEssential_Cube, CallFunc_Get_ClassLog_Name_name) == 0x001258, "Member 'BP_HouseEssential_Cube_C_ExecuteUbergraph_BP_HouseEssential_Cube::CallFunc_Get_ClassLog_Name_name' has a wrong offset!");
static_assert(offsetof(BP_HouseEssential_Cube_C_ExecuteUbergraph_BP_HouseEssential_Cube, CallFunc_GetGameUserSettings_ReturnValue) == 0x001268, "Member 'BP_HouseEssential_Cube_C_ExecuteUbergraph_BP_HouseEssential_Cube::CallFunc_GetGameUserSettings_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HouseEssential_Cube_C_ExecuteUbergraph_BP_HouseEssential_Cube, K2Node_CustomEvent_IsEnabled) == 0x001270, "Member 'BP_HouseEssential_Cube_C_ExecuteUbergraph_BP_HouseEssential_Cube::K2Node_CustomEvent_IsEnabled' has a wrong offset!");
static_assert(offsetof(BP_HouseEssential_Cube_C_ExecuteUbergraph_BP_HouseEssential_Cube, K2Node_DynamicCast_AsLyra_Settings_Local) == 0x001278, "Member 'BP_HouseEssential_Cube_C_ExecuteUbergraph_BP_HouseEssential_Cube::K2Node_DynamicCast_AsLyra_Settings_Local' has a wrong offset!");
static_assert(offsetof(BP_HouseEssential_Cube_C_ExecuteUbergraph_BP_HouseEssential_Cube, K2Node_DynamicCast_bSuccess_3) == 0x001280, "Member 'BP_HouseEssential_Cube_C_ExecuteUbergraph_BP_HouseEssential_Cube::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(BP_HouseEssential_Cube_C_ExecuteUbergraph_BP_HouseEssential_Cube, K2Node_CustomEvent_PlayerState) == 0x001288, "Member 'BP_HouseEssential_Cube_C_ExecuteUbergraph_BP_HouseEssential_Cube::K2Node_CustomEvent_PlayerState' has a wrong offset!");
static_assert(offsetof(BP_HouseEssential_Cube_C_ExecuteUbergraph_BP_HouseEssential_Cube, CallFunc_GetPawn_ReturnValue) == 0x001290, "Member 'BP_HouseEssential_Cube_C_ExecuteUbergraph_BP_HouseEssential_Cube::CallFunc_GetPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HouseEssential_Cube_C_ExecuteUbergraph_BP_HouseEssential_Cube, CallFunc_IsLocallyControlled_ReturnValue) == 0x001298, "Member 'BP_HouseEssential_Cube_C_ExecuteUbergraph_BP_HouseEssential_Cube::CallFunc_IsLocallyControlled_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HouseEssential_Cube_C_ExecuteUbergraph_BP_HouseEssential_Cube, K2Node_CreateDelegate_OutputDelegate_6) == 0x00129C, "Member 'BP_HouseEssential_Cube_C_ExecuteUbergraph_BP_HouseEssential_Cube::K2Node_CreateDelegate_OutputDelegate_6' has a wrong offset!");
static_assert(offsetof(BP_HouseEssential_Cube_C_ExecuteUbergraph_BP_HouseEssential_Cube, K2Node_CustomEvent_NewParam) == 0x0012B0, "Member 'BP_HouseEssential_Cube_C_ExecuteUbergraph_BP_HouseEssential_Cube::K2Node_CustomEvent_NewParam' has a wrong offset!");
static_assert(offsetof(BP_HouseEssential_Cube_C_ExecuteUbergraph_BP_HouseEssential_Cube, CallFunc_IsValid_ReturnValue_7) == 0x0012B8, "Member 'BP_HouseEssential_Cube_C_ExecuteUbergraph_BP_HouseEssential_Cube::CallFunc_IsValid_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_HouseEssential_Cube_C_ExecuteUbergraph_BP_HouseEssential_Cube, Temp_bool_Has_Been_Initd_Variable_1) == 0x0012B9, "Member 'BP_HouseEssential_Cube_C_ExecuteUbergraph_BP_HouseEssential_Cube::Temp_bool_Has_Been_Initd_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_HouseEssential_Cube_C_ExecuteUbergraph_BP_HouseEssential_Cube, CallFunc_GetFirstPlayerStateJP_Match_ReturnValue) == 0x0012C0, "Member 'BP_HouseEssential_Cube_C_ExecuteUbergraph_BP_HouseEssential_Cube::CallFunc_GetFirstPlayerStateJP_Match_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HouseEssential_Cube_C_ExecuteUbergraph_BP_HouseEssential_Cube, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x0012C8, "Member 'BP_HouseEssential_Cube_C_ExecuteUbergraph_BP_HouseEssential_Cube::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HouseEssential_Cube_C_ExecuteUbergraph_BP_HouseEssential_Cube, Temp_bool_Has_Been_Initd_Variable_2) == 0x0012C9, "Member 'BP_HouseEssential_Cube_C_ExecuteUbergraph_BP_HouseEssential_Cube::Temp_bool_Has_Been_Initd_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_HouseEssential_Cube_C_ExecuteUbergraph_BP_HouseEssential_Cube, CallFunc_IsValid_ReturnValue_8) == 0x0012CA, "Member 'BP_HouseEssential_Cube_C_ExecuteUbergraph_BP_HouseEssential_Cube::CallFunc_IsValid_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_HouseEssential_Cube_C_ExecuteUbergraph_BP_HouseEssential_Cube, CallFunc_GetComponentByClass_ReturnValue) == 0x0012D0, "Member 'BP_HouseEssential_Cube_C_ExecuteUbergraph_BP_HouseEssential_Cube::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HouseEssential_Cube_C_ExecuteUbergraph_BP_HouseEssential_Cube, K2Node_ComponentBoundEvent_OverlappedComponent_1) == 0x0012D8, "Member 'BP_HouseEssential_Cube_C_ExecuteUbergraph_BP_HouseEssential_Cube::K2Node_ComponentBoundEvent_OverlappedComponent_1' has a wrong offset!");
static_assert(offsetof(BP_HouseEssential_Cube_C_ExecuteUbergraph_BP_HouseEssential_Cube, K2Node_ComponentBoundEvent_OtherActor_1) == 0x0012E0, "Member 'BP_HouseEssential_Cube_C_ExecuteUbergraph_BP_HouseEssential_Cube::K2Node_ComponentBoundEvent_OtherActor_1' has a wrong offset!");
static_assert(offsetof(BP_HouseEssential_Cube_C_ExecuteUbergraph_BP_HouseEssential_Cube, K2Node_ComponentBoundEvent_OtherComp_1) == 0x0012E8, "Member 'BP_HouseEssential_Cube_C_ExecuteUbergraph_BP_HouseEssential_Cube::K2Node_ComponentBoundEvent_OtherComp_1' has a wrong offset!");
static_assert(offsetof(BP_HouseEssential_Cube_C_ExecuteUbergraph_BP_HouseEssential_Cube, K2Node_ComponentBoundEvent_OtherBodyIndex_1) == 0x0012F0, "Member 'BP_HouseEssential_Cube_C_ExecuteUbergraph_BP_HouseEssential_Cube::K2Node_ComponentBoundEvent_OtherBodyIndex_1' has a wrong offset!");
static_assert(offsetof(BP_HouseEssential_Cube_C_ExecuteUbergraph_BP_HouseEssential_Cube, K2Node_ComponentBoundEvent_bFromSweep) == 0x0012F4, "Member 'BP_HouseEssential_Cube_C_ExecuteUbergraph_BP_HouseEssential_Cube::K2Node_ComponentBoundEvent_bFromSweep' has a wrong offset!");
static_assert(offsetof(BP_HouseEssential_Cube_C_ExecuteUbergraph_BP_HouseEssential_Cube, K2Node_ComponentBoundEvent_SweepResult) == 0x0012F8, "Member 'BP_HouseEssential_Cube_C_ExecuteUbergraph_BP_HouseEssential_Cube::K2Node_ComponentBoundEvent_SweepResult' has a wrong offset!");
static_assert(offsetof(BP_HouseEssential_Cube_C_ExecuteUbergraph_BP_HouseEssential_Cube, K2Node_DynamicCast_AsPawn_1) == 0x0013F0, "Member 'BP_HouseEssential_Cube_C_ExecuteUbergraph_BP_HouseEssential_Cube::K2Node_DynamicCast_AsPawn_1' has a wrong offset!");
static_assert(offsetof(BP_HouseEssential_Cube_C_ExecuteUbergraph_BP_HouseEssential_Cube, K2Node_DynamicCast_bSuccess_4) == 0x0013F8, "Member 'BP_HouseEssential_Cube_C_ExecuteUbergraph_BP_HouseEssential_Cube::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(BP_HouseEssential_Cube_C_ExecuteUbergraph_BP_HouseEssential_Cube, K2Node_ComponentBoundEvent_OverlappedComponent) == 0x001400, "Member 'BP_HouseEssential_Cube_C_ExecuteUbergraph_BP_HouseEssential_Cube::K2Node_ComponentBoundEvent_OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BP_HouseEssential_Cube_C_ExecuteUbergraph_BP_HouseEssential_Cube, K2Node_ComponentBoundEvent_OtherActor) == 0x001408, "Member 'BP_HouseEssential_Cube_C_ExecuteUbergraph_BP_HouseEssential_Cube::K2Node_ComponentBoundEvent_OtherActor' has a wrong offset!");
static_assert(offsetof(BP_HouseEssential_Cube_C_ExecuteUbergraph_BP_HouseEssential_Cube, K2Node_ComponentBoundEvent_OtherComp) == 0x001410, "Member 'BP_HouseEssential_Cube_C_ExecuteUbergraph_BP_HouseEssential_Cube::K2Node_ComponentBoundEvent_OtherComp' has a wrong offset!");
static_assert(offsetof(BP_HouseEssential_Cube_C_ExecuteUbergraph_BP_HouseEssential_Cube, K2Node_ComponentBoundEvent_OtherBodyIndex) == 0x001418, "Member 'BP_HouseEssential_Cube_C_ExecuteUbergraph_BP_HouseEssential_Cube::K2Node_ComponentBoundEvent_OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(BP_HouseEssential_Cube_C_ExecuteUbergraph_BP_HouseEssential_Cube, CallFunc_IsLocallyControlled_ReturnValue_1) == 0x00141C, "Member 'BP_HouseEssential_Cube_C_ExecuteUbergraph_BP_HouseEssential_Cube::CallFunc_IsLocallyControlled_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_HouseEssential_Cube_C_ExecuteUbergraph_BP_HouseEssential_Cube, K2Node_DynamicCast_AsPawn_2) == 0x001420, "Member 'BP_HouseEssential_Cube_C_ExecuteUbergraph_BP_HouseEssential_Cube::K2Node_DynamicCast_AsPawn_2' has a wrong offset!");
static_assert(offsetof(BP_HouseEssential_Cube_C_ExecuteUbergraph_BP_HouseEssential_Cube, K2Node_DynamicCast_bSuccess_5) == 0x001428, "Member 'BP_HouseEssential_Cube_C_ExecuteUbergraph_BP_HouseEssential_Cube::K2Node_DynamicCast_bSuccess_5' has a wrong offset!");
static_assert(offsetof(BP_HouseEssential_Cube_C_ExecuteUbergraph_BP_HouseEssential_Cube, CallFunc_IsLocallyControlled_ReturnValue_2) == 0x001429, "Member 'BP_HouseEssential_Cube_C_ExecuteUbergraph_BP_HouseEssential_Cube::CallFunc_IsLocallyControlled_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_HouseEssential_Cube_C_ExecuteUbergraph_BP_HouseEssential_Cube, K2Node_CustomEvent_BlendTime) == 0x00142C, "Member 'BP_HouseEssential_Cube_C_ExecuteUbergraph_BP_HouseEssential_Cube::K2Node_CustomEvent_BlendTime' has a wrong offset!");
static_assert(offsetof(BP_HouseEssential_Cube_C_ExecuteUbergraph_BP_HouseEssential_Cube, K2Node_CustomEvent_Duration) == 0x001430, "Member 'BP_HouseEssential_Cube_C_ExecuteUbergraph_BP_HouseEssential_Cube::K2Node_CustomEvent_Duration' has a wrong offset!");
static_assert(offsetof(BP_HouseEssential_Cube_C_ExecuteUbergraph_BP_HouseEssential_Cube, CallFunc_K2_SetTimerDelegate_ReturnValue_1) == 0x001438, "Member 'BP_HouseEssential_Cube_C_ExecuteUbergraph_BP_HouseEssential_Cube::CallFunc_K2_SetTimerDelegate_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_HouseEssential_Cube_C_ExecuteUbergraph_BP_HouseEssential_Cube, CallFunc_GetPlayerController_ReturnValue) == 0x001440, "Member 'BP_HouseEssential_Cube_C_ExecuteUbergraph_BP_HouseEssential_Cube::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HouseEssential_Cube_C_ExecuteUbergraph_BP_HouseEssential_Cube, CallFunc_GetOwner_ReturnValue) == 0x001448, "Member 'BP_HouseEssential_Cube_C_ExecuteUbergraph_BP_HouseEssential_Cube::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HouseEssential_Cube_C_ExecuteUbergraph_BP_HouseEssential_Cube, CallFunc_K2_SetRelativeRotation_SweepHitResult) == 0x001450, "Member 'BP_HouseEssential_Cube_C_ExecuteUbergraph_BP_HouseEssential_Cube::CallFunc_K2_SetRelativeRotation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_HouseEssential_Cube_C_ExecuteUbergraph_BP_HouseEssential_Cube, K2Node_Event_InteractingActor) == 0x001548, "Member 'BP_HouseEssential_Cube_C_ExecuteUbergraph_BP_HouseEssential_Cube::K2Node_Event_InteractingActor' has a wrong offset!");
static_assert(offsetof(BP_HouseEssential_Cube_C_ExecuteUbergraph_BP_HouseEssential_Cube, K2Node_Event_InteractionComponent) == 0x001550, "Member 'BP_HouseEssential_Cube_C_ExecuteUbergraph_BP_HouseEssential_Cube::K2Node_Event_InteractionComponent' has a wrong offset!");
static_assert(offsetof(BP_HouseEssential_Cube_C_ExecuteUbergraph_BP_HouseEssential_Cube, Temp_bool_IsClosed_Variable_1) == 0x001558, "Member 'BP_HouseEssential_Cube_C_ExecuteUbergraph_BP_HouseEssential_Cube::Temp_bool_IsClosed_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_HouseEssential_Cube_C_ExecuteUbergraph_BP_HouseEssential_Cube, Temp_bool_IsClosed_Variable_2) == 0x001559, "Member 'BP_HouseEssential_Cube_C_ExecuteUbergraph_BP_HouseEssential_Cube::Temp_bool_IsClosed_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_HouseEssential_Cube_C_ExecuteUbergraph_BP_HouseEssential_Cube, CallFunc_HasAuthority_ReturnValue_1) == 0x00155A, "Member 'BP_HouseEssential_Cube_C_ExecuteUbergraph_BP_HouseEssential_Cube::CallFunc_HasAuthority_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_HouseEssential_Cube_C_ExecuteUbergraph_BP_HouseEssential_Cube, CallFunc_HasAuthority_ReturnValue_2) == 0x00155B, "Member 'BP_HouseEssential_Cube_C_ExecuteUbergraph_BP_HouseEssential_Cube::CallFunc_HasAuthority_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_HouseEssential_Cube_C_ExecuteUbergraph_BP_HouseEssential_Cube, CallFunc_HasAuthority_ReturnValue_3) == 0x00155C, "Member 'BP_HouseEssential_Cube_C_ExecuteUbergraph_BP_HouseEssential_Cube::CallFunc_HasAuthority_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_HouseEssential_Cube_C_ExecuteUbergraph_BP_HouseEssential_Cube, CallFunc_GetGameState_ReturnValue) == 0x001560, "Member 'BP_HouseEssential_Cube_C_ExecuteUbergraph_BP_HouseEssential_Cube::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HouseEssential_Cube_C_ExecuteUbergraph_BP_HouseEssential_Cube, CallFunc_GetServerWorldTimeSeconds_ReturnValue) == 0x001568, "Member 'BP_HouseEssential_Cube_C_ExecuteUbergraph_BP_HouseEssential_Cube::CallFunc_GetServerWorldTimeSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HouseEssential_Cube_C_ExecuteUbergraph_BP_HouseEssential_Cube, CallFunc_Add_DoubleDouble_A_ImplicitCast) == 0x001570, "Member 'BP_HouseEssential_Cube_C_ExecuteUbergraph_BP_HouseEssential_Cube::CallFunc_Add_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_HouseEssential_Cube_C_ExecuteUbergraph_BP_HouseEssential_Cube, CallFunc_MakeRotator_Yaw_ImplicitCast) == 0x001578, "Member 'BP_HouseEssential_Cube_C_ExecuteUbergraph_BP_HouseEssential_Cube::CallFunc_MakeRotator_Yaw_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_HouseEssential_Cube_C_ExecuteUbergraph_BP_HouseEssential_Cube, CallFunc_SetMorphTarget_Value_ImplicitCast) == 0x00157C, "Member 'BP_HouseEssential_Cube_C_ExecuteUbergraph_BP_HouseEssential_Cube::CallFunc_SetMorphTarget_Value_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_HouseEssential_Cube_C_ExecuteUbergraph_BP_HouseEssential_Cube, CallFunc_Lerp_Alpha_ImplicitCast) == 0x001580, "Member 'BP_HouseEssential_Cube_C_ExecuteUbergraph_BP_HouseEssential_Cube::CallFunc_Lerp_Alpha_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_HouseEssential_Cube_C_ExecuteUbergraph_BP_HouseEssential_Cube, CallFunc_Lerp_Alpha_ImplicitCast_1) == 0x001588, "Member 'BP_HouseEssential_Cube_C_ExecuteUbergraph_BP_HouseEssential_Cube::CallFunc_Lerp_Alpha_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(BP_HouseEssential_Cube_C_ExecuteUbergraph_BP_HouseEssential_Cube, K2Node_VariableSet_CurrentHealth_ImplicitCast) == 0x001590, "Member 'BP_HouseEssential_Cube_C_ExecuteUbergraph_BP_HouseEssential_Cube::K2Node_VariableSet_CurrentHealth_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_HouseEssential_Cube_C_ExecuteUbergraph_BP_HouseEssential_Cube, CallFunc_UpdateHealth_Health_ImplicitCast) == 0x001598, "Member 'BP_HouseEssential_Cube_C_ExecuteUbergraph_BP_HouseEssential_Cube::CallFunc_UpdateHealth_Health_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_HouseEssential_Cube_C_ExecuteUbergraph_BP_HouseEssential_Cube, K2Node_VariableSet_OldHealth_ImplicitCast) == 0x0015A0, "Member 'BP_HouseEssential_Cube_C_ExecuteUbergraph_BP_HouseEssential_Cube::K2Node_VariableSet_OldHealth_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_HouseEssential_Cube_C_ExecuteUbergraph_BP_HouseEssential_Cube, CallFunc_Less_DoubleDouble_A_ImplicitCast) == 0x0015A8, "Member 'BP_HouseEssential_Cube_C_ExecuteUbergraph_BP_HouseEssential_Cube::CallFunc_Less_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_HouseEssential_Cube_C_ExecuteUbergraph_BP_HouseEssential_Cube, CallFunc_UpdateProgressbar_Value_ImplicitCast) == 0x0015B0, "Member 'BP_HouseEssential_Cube_C_ExecuteUbergraph_BP_HouseEssential_Cube::CallFunc_UpdateProgressbar_Value_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_HouseEssential_Cube_C_ExecuteUbergraph_BP_HouseEssential_Cube, CallFunc_Subtract_DoubleDouble_B_ImplicitCast) == 0x0015B8, "Member 'BP_HouseEssential_Cube_C_ExecuteUbergraph_BP_HouseEssential_Cube::CallFunc_Subtract_DoubleDouble_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_HouseEssential_Cube_C_ExecuteUbergraph_BP_HouseEssential_Cube, CallFunc_Less_DoubleDouble_A_ImplicitCast_1) == 0x0015C0, "Member 'BP_HouseEssential_Cube_C_ExecuteUbergraph_BP_HouseEssential_Cube::CallFunc_Less_DoubleDouble_A_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(BP_HouseEssential_Cube_C_ExecuteUbergraph_BP_HouseEssential_Cube, CallFunc_UpdateProgressbar_Max_ImplicitCast) == 0x0015C8, "Member 'BP_HouseEssential_Cube_C_ExecuteUbergraph_BP_HouseEssential_Cube::CallFunc_UpdateProgressbar_Max_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_HouseEssential_Cube_C_ExecuteUbergraph_BP_HouseEssential_Cube, CallFunc_K2_SetTimerDelegate_Time_ImplicitCast) == 0x0015D0, "Member 'BP_HouseEssential_Cube_C_ExecuteUbergraph_BP_HouseEssential_Cube::CallFunc_K2_SetTimerDelegate_Time_ImplicitCast' has a wrong offset!");

// Function BP_HouseEssential_Cube.BP_HouseEssential_Cube_C.GetCharacterTag
// 0x0008 (0x0008 - 0x0000)
struct BP_HouseEssential_Cube_C_GetCharacterTag final
{
public:
	struct FGameplayTag                           Return;                                            // 0x0000(0x0008)(Parm, OutParm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_HouseEssential_Cube_C_GetCharacterTag) == 0x000004, "Wrong alignment on BP_HouseEssential_Cube_C_GetCharacterTag");
static_assert(sizeof(BP_HouseEssential_Cube_C_GetCharacterTag) == 0x000008, "Wrong size on BP_HouseEssential_Cube_C_GetCharacterTag");
static_assert(offsetof(BP_HouseEssential_Cube_C_GetCharacterTag, Return) == 0x000000, "Member 'BP_HouseEssential_Cube_C_GetCharacterTag::Return' has a wrong offset!");

// Function BP_HouseEssential_Cube.BP_HouseEssential_Cube_C.GetDurabilityCostWhenHit
// 0x0008 (0x0008 - 0x0000)
struct BP_HouseEssential_Cube_C_GetDurabilityCostWhenHit final
{
public:
	double                                        Amount;                                            // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_HouseEssential_Cube_C_GetDurabilityCostWhenHit) == 0x000008, "Wrong alignment on BP_HouseEssential_Cube_C_GetDurabilityCostWhenHit");
static_assert(sizeof(BP_HouseEssential_Cube_C_GetDurabilityCostWhenHit) == 0x000008, "Wrong size on BP_HouseEssential_Cube_C_GetDurabilityCostWhenHit");
static_assert(offsetof(BP_HouseEssential_Cube_C_GetDurabilityCostWhenHit, Amount) == 0x000000, "Member 'BP_HouseEssential_Cube_C_GetDurabilityCostWhenHit::Amount' has a wrong offset!");

// Function BP_HouseEssential_Cube.BP_HouseEssential_Cube_C.GetHouseEssentialIconTexture
// 0x00A8 (0x00A8 - 0x0000)
struct BP_HouseEssential_Cube_C_GetHouseEssentialIconTexture final
{
public:
	TSoftObjectPtr<class UTexture2D>              ReturnValue;                                       // 0x0000(0x0028)(Parm, OutParm, ReturnParm, UObjectWrapper, HasGetValueTypeHash)
	TMap<struct FGameplayTag, TSoftObjectPtr<class UTexture2D>> Temp_struct_Variable;                              // 0x0028(0x0050)()
	TSoftObjectPtr<class UTexture2D>              CallFunc_Map_Find_Value;                           // 0x0078(0x0028)(HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_HouseEssential_Cube_C_GetHouseEssentialIconTexture) == 0x000008, "Wrong alignment on BP_HouseEssential_Cube_C_GetHouseEssentialIconTexture");
static_assert(sizeof(BP_HouseEssential_Cube_C_GetHouseEssentialIconTexture) == 0x0000A8, "Wrong size on BP_HouseEssential_Cube_C_GetHouseEssentialIconTexture");
static_assert(offsetof(BP_HouseEssential_Cube_C_GetHouseEssentialIconTexture, ReturnValue) == 0x000000, "Member 'BP_HouseEssential_Cube_C_GetHouseEssentialIconTexture::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HouseEssential_Cube_C_GetHouseEssentialIconTexture, Temp_struct_Variable) == 0x000028, "Member 'BP_HouseEssential_Cube_C_GetHouseEssentialIconTexture::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(BP_HouseEssential_Cube_C_GetHouseEssentialIconTexture, CallFunc_Map_Find_Value) == 0x000078, "Member 'BP_HouseEssential_Cube_C_GetHouseEssentialIconTexture::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BP_HouseEssential_Cube_C_GetHouseEssentialIconTexture, CallFunc_Map_Find_ReturnValue) == 0x0000A0, "Member 'BP_HouseEssential_Cube_C_GetHouseEssentialIconTexture::CallFunc_Map_Find_ReturnValue' has a wrong offset!");

// Function BP_HouseEssential_Cube.BP_HouseEssential_Cube_C.GetMaterialType
// 0x0001 (0x0001 - 0x0000)
struct BP_HouseEssential_Cube_C_GetMaterialType final
{
public:
	E_MaterialTypes                               MaterialType;                                      // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_HouseEssential_Cube_C_GetMaterialType) == 0x000001, "Wrong alignment on BP_HouseEssential_Cube_C_GetMaterialType");
static_assert(sizeof(BP_HouseEssential_Cube_C_GetMaterialType) == 0x000001, "Wrong size on BP_HouseEssential_Cube_C_GetMaterialType");
static_assert(offsetof(BP_HouseEssential_Cube_C_GetMaterialType, MaterialType) == 0x000000, "Member 'BP_HouseEssential_Cube_C_GetMaterialType::MaterialType' has a wrong offset!");

// Function BP_HouseEssential_Cube.BP_HouseEssential_Cube_C.GetName
// 0x0020 (0x0020 - 0x0000)
struct BP_HouseEssential_Cube_C_GetName final
{
public:
	class FString                                 Name_0;                                            // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x0010(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_HouseEssential_Cube_C_GetName) == 0x000008, "Wrong alignment on BP_HouseEssential_Cube_C_GetName");
static_assert(sizeof(BP_HouseEssential_Cube_C_GetName) == 0x000020, "Wrong size on BP_HouseEssential_Cube_C_GetName");
static_assert(offsetof(BP_HouseEssential_Cube_C_GetName, Name_0) == 0x000000, "Member 'BP_HouseEssential_Cube_C_GetName::Name_0' has a wrong offset!");
static_assert(offsetof(BP_HouseEssential_Cube_C_GetName, CallFunc_Conv_TextToString_ReturnValue) == 0x000010, "Member 'BP_HouseEssential_Cube_C_GetName::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");

// Function BP_HouseEssential_Cube.BP_HouseEssential_Cube_C.GetNewWidgetColor
// 0x0028 (0x0028 - 0x0000)
struct BP_HouseEssential_Cube_C_GetNewWidgetColor final
{
public:
	struct FSlateColor                            NewColor;                                          // 0x0000(0x0014)(Parm, OutParm)
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x0014(0x0014)()
};
static_assert(alignof(BP_HouseEssential_Cube_C_GetNewWidgetColor) == 0x000004, "Wrong alignment on BP_HouseEssential_Cube_C_GetNewWidgetColor");
static_assert(sizeof(BP_HouseEssential_Cube_C_GetNewWidgetColor) == 0x000028, "Wrong size on BP_HouseEssential_Cube_C_GetNewWidgetColor");
static_assert(offsetof(BP_HouseEssential_Cube_C_GetNewWidgetColor, NewColor) == 0x000000, "Member 'BP_HouseEssential_Cube_C_GetNewWidgetColor::NewColor' has a wrong offset!");
static_assert(offsetof(BP_HouseEssential_Cube_C_GetNewWidgetColor, K2Node_MakeStruct_SlateColor) == 0x000014, "Member 'BP_HouseEssential_Cube_C_GetNewWidgetColor::K2Node_MakeStruct_SlateColor' has a wrong offset!");

// Function BP_HouseEssential_Cube.BP_HouseEssential_Cube_C.GetOptionalText
// 0x0020 (0x0020 - 0x0000)
struct BP_HouseEssential_Cube_C_GetOptionalText final
{
public:
	class FText                                   Return;                                            // 0x0000(0x0010)(Parm, OutParm)
	class FText                                   Optional_Second_Line;                              // 0x0010(0x0010)(Parm, OutParm)
};
static_assert(alignof(BP_HouseEssential_Cube_C_GetOptionalText) == 0x000008, "Wrong alignment on BP_HouseEssential_Cube_C_GetOptionalText");
static_assert(sizeof(BP_HouseEssential_Cube_C_GetOptionalText) == 0x000020, "Wrong size on BP_HouseEssential_Cube_C_GetOptionalText");
static_assert(offsetof(BP_HouseEssential_Cube_C_GetOptionalText, Return) == 0x000000, "Member 'BP_HouseEssential_Cube_C_GetOptionalText::Return' has a wrong offset!");
static_assert(offsetof(BP_HouseEssential_Cube_C_GetOptionalText, Optional_Second_Line) == 0x000010, "Member 'BP_HouseEssential_Cube_C_GetOptionalText::Optional_Second_Line' has a wrong offset!");

// Function BP_HouseEssential_Cube.BP_HouseEssential_Cube_C.GetOwnerAbilitySystemComponent
// 0x0008 (0x0008 - 0x0000)
struct BP_HouseEssential_Cube_C_GetOwnerAbilitySystemComponent final
{
public:
	class UAbilitySystemComponent*                Return;                                            // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_HouseEssential_Cube_C_GetOwnerAbilitySystemComponent) == 0x000008, "Wrong alignment on BP_HouseEssential_Cube_C_GetOwnerAbilitySystemComponent");
static_assert(sizeof(BP_HouseEssential_Cube_C_GetOwnerAbilitySystemComponent) == 0x000008, "Wrong size on BP_HouseEssential_Cube_C_GetOwnerAbilitySystemComponent");
static_assert(offsetof(BP_HouseEssential_Cube_C_GetOwnerAbilitySystemComponent, Return) == 0x000000, "Member 'BP_HouseEssential_Cube_C_GetOwnerAbilitySystemComponent::Return' has a wrong offset!");

// Function BP_HouseEssential_Cube.BP_HouseEssential_Cube_C.GetPriority
// 0x0004 (0x0004 - 0x0000)
struct BP_HouseEssential_Cube_C_GetPriority final
{
public:
	int32                                         Priority;                                          // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_HouseEssential_Cube_C_GetPriority) == 0x000004, "Wrong alignment on BP_HouseEssential_Cube_C_GetPriority");
static_assert(sizeof(BP_HouseEssential_Cube_C_GetPriority) == 0x000004, "Wrong size on BP_HouseEssential_Cube_C_GetPriority");
static_assert(offsetof(BP_HouseEssential_Cube_C_GetPriority, Priority) == 0x000000, "Member 'BP_HouseEssential_Cube_C_GetPriority::Priority' has a wrong offset!");

// Function BP_HouseEssential_Cube.BP_HouseEssential_Cube_C.GetWidgetLocation
// 0x0030 (0x0030 - 0x0000)
struct BP_HouseEssential_Cube_C_GetWidgetLocation final
{
public:
	struct FVector                                Location;                                          // 0x0000(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0018(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_HouseEssential_Cube_C_GetWidgetLocation) == 0x000008, "Wrong alignment on BP_HouseEssential_Cube_C_GetWidgetLocation");
static_assert(sizeof(BP_HouseEssential_Cube_C_GetWidgetLocation) == 0x000030, "Wrong size on BP_HouseEssential_Cube_C_GetWidgetLocation");
static_assert(offsetof(BP_HouseEssential_Cube_C_GetWidgetLocation, Location) == 0x000000, "Member 'BP_HouseEssential_Cube_C_GetWidgetLocation::Location' has a wrong offset!");
static_assert(offsetof(BP_HouseEssential_Cube_C_GetWidgetLocation, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000018, "Member 'BP_HouseEssential_Cube_C_GetWidgetLocation::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");

// Function BP_HouseEssential_Cube.BP_HouseEssential_Cube_C.HideInteractionWidget
// 0x0001 (0x0001 - 0x0000)
struct BP_HouseEssential_Cube_C_HideInteractionWidget final
{
public:
	bool                                          Return;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_HouseEssential_Cube_C_HideInteractionWidget) == 0x000001, "Wrong alignment on BP_HouseEssential_Cube_C_HideInteractionWidget");
static_assert(sizeof(BP_HouseEssential_Cube_C_HideInteractionWidget) == 0x000001, "Wrong size on BP_HouseEssential_Cube_C_HideInteractionWidget");
static_assert(offsetof(BP_HouseEssential_Cube_C_HideInteractionWidget, Return) == 0x000000, "Member 'BP_HouseEssential_Cube_C_HideInteractionWidget::Return' has a wrong offset!");

// Function BP_HouseEssential_Cube.BP_HouseEssential_Cube_C.HighConstrastModeChanged
// 0x0001 (0x0001 - 0x0000)
struct BP_HouseEssential_Cube_C_HighConstrastModeChanged final
{
public:
	bool                                          IsEnabled;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_HouseEssential_Cube_C_HighConstrastModeChanged) == 0x000001, "Wrong alignment on BP_HouseEssential_Cube_C_HighConstrastModeChanged");
static_assert(sizeof(BP_HouseEssential_Cube_C_HighConstrastModeChanged) == 0x000001, "Wrong size on BP_HouseEssential_Cube_C_HighConstrastModeChanged");
static_assert(offsetof(BP_HouseEssential_Cube_C_HighConstrastModeChanged, IsEnabled) == 0x000000, "Member 'BP_HouseEssential_Cube_C_HighConstrastModeChanged::IsEnabled' has a wrong offset!");

// Function BP_HouseEssential_Cube.BP_HouseEssential_Cube_C.HighlightDamagedObject
// 0x0038 (0x0038 - 0x0000)
struct BP_HouseEssential_Cube_C_HighlightDamagedObject final
{
public:
	bool                                          Active;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ABP_HighlightManager_C*>         CallFunc_GetAllActorsOfClass_OutActors;            // 0x0008(0x0010)(ReferenceParm)
	class ABP_HighlightManager_C*                 CallFunc_Array_Get_Item;                           // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<class ABP_HighlightManager_C*>         CallFunc_GetAllActorsOfClass_OutActors_1;          // 0x0020(0x0010)(ReferenceParm)
	class ABP_HighlightManager_C*                 CallFunc_Array_Get_Item_1;                         // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_HouseEssential_Cube_C_HighlightDamagedObject) == 0x000008, "Wrong alignment on BP_HouseEssential_Cube_C_HighlightDamagedObject");
static_assert(sizeof(BP_HouseEssential_Cube_C_HighlightDamagedObject) == 0x000038, "Wrong size on BP_HouseEssential_Cube_C_HighlightDamagedObject");
static_assert(offsetof(BP_HouseEssential_Cube_C_HighlightDamagedObject, Active) == 0x000000, "Member 'BP_HouseEssential_Cube_C_HighlightDamagedObject::Active' has a wrong offset!");
static_assert(offsetof(BP_HouseEssential_Cube_C_HighlightDamagedObject, CallFunc_GetAllActorsOfClass_OutActors) == 0x000008, "Member 'BP_HouseEssential_Cube_C_HighlightDamagedObject::CallFunc_GetAllActorsOfClass_OutActors' has a wrong offset!");
static_assert(offsetof(BP_HouseEssential_Cube_C_HighlightDamagedObject, CallFunc_Array_Get_Item) == 0x000018, "Member 'BP_HouseEssential_Cube_C_HighlightDamagedObject::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_HouseEssential_Cube_C_HighlightDamagedObject, CallFunc_GetAllActorsOfClass_OutActors_1) == 0x000020, "Member 'BP_HouseEssential_Cube_C_HighlightDamagedObject::CallFunc_GetAllActorsOfClass_OutActors_1' has a wrong offset!");
static_assert(offsetof(BP_HouseEssential_Cube_C_HighlightDamagedObject, CallFunc_Array_Get_Item_1) == 0x000030, "Member 'BP_HouseEssential_Cube_C_HighlightDamagedObject::CallFunc_Array_Get_Item_1' has a wrong offset!");

// Function BP_HouseEssential_Cube.BP_HouseEssential_Cube_C.HitInterface
// 0x0018 (0x0018 - 0x0000)
struct BP_HouseEssential_Cube_C_HitInterface final
{
public:
	struct FVector                                Direction;                                         // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_HouseEssential_Cube_C_HitInterface) == 0x000008, "Wrong alignment on BP_HouseEssential_Cube_C_HitInterface");
static_assert(sizeof(BP_HouseEssential_Cube_C_HitInterface) == 0x000018, "Wrong size on BP_HouseEssential_Cube_C_HitInterface");
static_assert(offsetof(BP_HouseEssential_Cube_C_HitInterface, Direction) == 0x000000, "Member 'BP_HouseEssential_Cube_C_HitInterface::Direction' has a wrong offset!");

// Function BP_HouseEssential_Cube.BP_HouseEssential_Cube_C.ImpactCosmetics
// 0x0048 (0x0048 - 0x0000)
struct BP_HouseEssential_Cube_C_ImpactCosmetics final
{
public:
	class APawn*                                  ImpactCauser;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Location;                                          // 0x0008(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                HitImpulse;                                        // 0x0020(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_ImpactEffect                                ImpactEffect;                                      // 0x0038(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x3];                                       // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   BoneName;                                          // 0x003C(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ChangedAttributes;                                 // 0x0044(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_HouseEssential_Cube_C_ImpactCosmetics) == 0x000008, "Wrong alignment on BP_HouseEssential_Cube_C_ImpactCosmetics");
static_assert(sizeof(BP_HouseEssential_Cube_C_ImpactCosmetics) == 0x000048, "Wrong size on BP_HouseEssential_Cube_C_ImpactCosmetics");
static_assert(offsetof(BP_HouseEssential_Cube_C_ImpactCosmetics, ImpactCauser) == 0x000000, "Member 'BP_HouseEssential_Cube_C_ImpactCosmetics::ImpactCauser' has a wrong offset!");
static_assert(offsetof(BP_HouseEssential_Cube_C_ImpactCosmetics, Location) == 0x000008, "Member 'BP_HouseEssential_Cube_C_ImpactCosmetics::Location' has a wrong offset!");
static_assert(offsetof(BP_HouseEssential_Cube_C_ImpactCosmetics, HitImpulse) == 0x000020, "Member 'BP_HouseEssential_Cube_C_ImpactCosmetics::HitImpulse' has a wrong offset!");
static_assert(offsetof(BP_HouseEssential_Cube_C_ImpactCosmetics, ImpactEffect) == 0x000038, "Member 'BP_HouseEssential_Cube_C_ImpactCosmetics::ImpactEffect' has a wrong offset!");
static_assert(offsetof(BP_HouseEssential_Cube_C_ImpactCosmetics, BoneName) == 0x00003C, "Member 'BP_HouseEssential_Cube_C_ImpactCosmetics::BoneName' has a wrong offset!");
static_assert(offsetof(BP_HouseEssential_Cube_C_ImpactCosmetics, ChangedAttributes) == 0x000044, "Member 'BP_HouseEssential_Cube_C_ImpactCosmetics::ChangedAttributes' has a wrong offset!");

// Function BP_HouseEssential_Cube.BP_HouseEssential_Cube_C.InteractableCancelInteraction
// 0x0008 (0x0008 - 0x0000)
struct BP_HouseEssential_Cube_C_InteractableCancelInteraction final
{
public:
	class UPrimitiveComponent*                    InteractionComponent;                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_HouseEssential_Cube_C_InteractableCancelInteraction) == 0x000008, "Wrong alignment on BP_HouseEssential_Cube_C_InteractableCancelInteraction");
static_assert(sizeof(BP_HouseEssential_Cube_C_InteractableCancelInteraction) == 0x000008, "Wrong size on BP_HouseEssential_Cube_C_InteractableCancelInteraction");
static_assert(offsetof(BP_HouseEssential_Cube_C_InteractableCancelInteraction, InteractionComponent) == 0x000000, "Member 'BP_HouseEssential_Cube_C_InteractableCancelInteraction::InteractionComponent' has a wrong offset!");

// Function BP_HouseEssential_Cube.BP_HouseEssential_Cube_C.InteractPressed
// 0x0008 (0x0008 - 0x0000)
struct BP_HouseEssential_Cube_C_InteractPressed final
{
public:
	class AActor*                                 InteractingActor;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_HouseEssential_Cube_C_InteractPressed) == 0x000008, "Wrong alignment on BP_HouseEssential_Cube_C_InteractPressed");
static_assert(sizeof(BP_HouseEssential_Cube_C_InteractPressed) == 0x000008, "Wrong size on BP_HouseEssential_Cube_C_InteractPressed");
static_assert(offsetof(BP_HouseEssential_Cube_C_InteractPressed, InteractingActor) == 0x000000, "Member 'BP_HouseEssential_Cube_C_InteractPressed::InteractingActor' has a wrong offset!");

// Function BP_HouseEssential_Cube.BP_HouseEssential_Cube_C.InteractReleased
// 0x0008 (0x0008 - 0x0000)
struct BP_HouseEssential_Cube_C_InteractReleased final
{
public:
	class AActor*                                 InteractingActor;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_HouseEssential_Cube_C_InteractReleased) == 0x000008, "Wrong alignment on BP_HouseEssential_Cube_C_InteractReleased");
static_assert(sizeof(BP_HouseEssential_Cube_C_InteractReleased) == 0x000008, "Wrong size on BP_HouseEssential_Cube_C_InteractReleased");
static_assert(offsetof(BP_HouseEssential_Cube_C_InteractReleased, InteractingActor) == 0x000000, "Member 'BP_HouseEssential_Cube_C_InteractReleased::InteractingActor' has a wrong offset!");

// Function BP_HouseEssential_Cube.BP_HouseEssential_Cube_C.IsGooseTargetAlive
// 0x0002 (0x0002 - 0x0000)
struct BP_HouseEssential_Cube_C_IsGooseTargetAlive final
{
public:
	bool                                          Return;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_HouseEssential_Cube_C_IsGooseTargetAlive) == 0x000001, "Wrong alignment on BP_HouseEssential_Cube_C_IsGooseTargetAlive");
static_assert(sizeof(BP_HouseEssential_Cube_C_IsGooseTargetAlive) == 0x000002, "Wrong size on BP_HouseEssential_Cube_C_IsGooseTargetAlive");
static_assert(offsetof(BP_HouseEssential_Cube_C_IsGooseTargetAlive, Return) == 0x000000, "Member 'BP_HouseEssential_Cube_C_IsGooseTargetAlive::Return' has a wrong offset!");
static_assert(offsetof(BP_HouseEssential_Cube_C_IsGooseTargetAlive, CallFunc_Not_PreBool_ReturnValue) == 0x000001, "Member 'BP_HouseEssential_Cube_C_IsGooseTargetAlive::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function BP_HouseEssential_Cube.BP_HouseEssential_Cube_C.IsInFocus
// 0x0008 (0x0008 - 0x0000)
struct BP_HouseEssential_Cube_C_IsInFocus final
{
public:
	class AActor*                                 Focusing_Actor;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_HouseEssential_Cube_C_IsInFocus) == 0x000008, "Wrong alignment on BP_HouseEssential_Cube_C_IsInFocus");
static_assert(sizeof(BP_HouseEssential_Cube_C_IsInFocus) == 0x000008, "Wrong size on BP_HouseEssential_Cube_C_IsInFocus");
static_assert(offsetof(BP_HouseEssential_Cube_C_IsInFocus, Focusing_Actor) == 0x000000, "Member 'BP_HouseEssential_Cube_C_IsInFocus::Focusing_Actor' has a wrong offset!");

// Function BP_HouseEssential_Cube.BP_HouseEssential_Cube_C.IsInteractable
// 0x0001 (0x0001 - 0x0000)
struct BP_HouseEssential_Cube_C_IsInteractable final
{
public:
	bool                                          Interactable;                                      // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_HouseEssential_Cube_C_IsInteractable) == 0x000001, "Wrong alignment on BP_HouseEssential_Cube_C_IsInteractable");
static_assert(sizeof(BP_HouseEssential_Cube_C_IsInteractable) == 0x000001, "Wrong size on BP_HouseEssential_Cube_C_IsInteractable");
static_assert(offsetof(BP_HouseEssential_Cube_C_IsInteractable, Interactable) == 0x000000, "Member 'BP_HouseEssential_Cube_C_IsInteractable::Interactable' has a wrong offset!");

// Function BP_HouseEssential_Cube.BP_HouseEssential_Cube_C.IsSameTeamAsPlayer0
// 0x0038 (0x0038 - 0x0000)
struct BP_HouseEssential_Cube_C_IsSameTeamAsPlayer0 final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Temp_byte_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue;                   // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetTeamID_ReturnValue;                    // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class ITeamableInterface>    K2Node_DynamicCast_AsTeamable_Interface;           // 0x0020(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetTeamID_ReturnValue_1;                  // 0x0032(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_HouseEssential_Cube_C_IsSameTeamAsPlayer0) == 0x000008, "Wrong alignment on BP_HouseEssential_Cube_C_IsSameTeamAsPlayer0");
static_assert(sizeof(BP_HouseEssential_Cube_C_IsSameTeamAsPlayer0) == 0x000038, "Wrong size on BP_HouseEssential_Cube_C_IsSameTeamAsPlayer0");
static_assert(offsetof(BP_HouseEssential_Cube_C_IsSameTeamAsPlayer0, ReturnValue) == 0x000000, "Member 'BP_HouseEssential_Cube_C_IsSameTeamAsPlayer0::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HouseEssential_Cube_C_IsSameTeamAsPlayer0, Temp_byte_Variable) == 0x000001, "Member 'BP_HouseEssential_Cube_C_IsSameTeamAsPlayer0::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_HouseEssential_Cube_C_IsSameTeamAsPlayer0, CallFunc_GetPlayerController_ReturnValue) == 0x000008, "Member 'BP_HouseEssential_Cube_C_IsSameTeamAsPlayer0::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HouseEssential_Cube_C_IsSameTeamAsPlayer0, CallFunc_K2_GetPawn_ReturnValue) == 0x000010, "Member 'BP_HouseEssential_Cube_C_IsSameTeamAsPlayer0::CallFunc_K2_GetPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HouseEssential_Cube_C_IsSameTeamAsPlayer0, CallFunc_GetTeamID_ReturnValue) == 0x000018, "Member 'BP_HouseEssential_Cube_C_IsSameTeamAsPlayer0::CallFunc_GetTeamID_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HouseEssential_Cube_C_IsSameTeamAsPlayer0, K2Node_DynamicCast_AsTeamable_Interface) == 0x000020, "Member 'BP_HouseEssential_Cube_C_IsSameTeamAsPlayer0::K2Node_DynamicCast_AsTeamable_Interface' has a wrong offset!");
static_assert(offsetof(BP_HouseEssential_Cube_C_IsSameTeamAsPlayer0, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'BP_HouseEssential_Cube_C_IsSameTeamAsPlayer0::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_HouseEssential_Cube_C_IsSameTeamAsPlayer0, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000031, "Member 'BP_HouseEssential_Cube_C_IsSameTeamAsPlayer0::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HouseEssential_Cube_C_IsSameTeamAsPlayer0, CallFunc_GetTeamID_ReturnValue_1) == 0x000032, "Member 'BP_HouseEssential_Cube_C_IsSameTeamAsPlayer0::CallFunc_GetTeamID_ReturnValue_1' has a wrong offset!");

// Function BP_HouseEssential_Cube.BP_HouseEssential_Cube_C.MeleeHit
// 0x0008 (0x0008 - 0x0000)
struct BP_HouseEssential_Cube_C_MeleeHit final
{
public:
	const class AActor*                           AttackingActor;                                    // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_HouseEssential_Cube_C_MeleeHit) == 0x000008, "Wrong alignment on BP_HouseEssential_Cube_C_MeleeHit");
static_assert(sizeof(BP_HouseEssential_Cube_C_MeleeHit) == 0x000008, "Wrong size on BP_HouseEssential_Cube_C_MeleeHit");
static_assert(offsetof(BP_HouseEssential_Cube_C_MeleeHit, AttackingActor) == 0x000000, "Member 'BP_HouseEssential_Cube_C_MeleeHit::AttackingActor' has a wrong offset!");

// Function BP_HouseEssential_Cube.BP_HouseEssential_Cube_C.Multicast_BroadcastKill
// 0x03D8 (0x03D8 - 0x0000)
struct BP_HouseEssential_Cube_C_Multicast_BroadcastKill final
{
public:
	struct FKillGameplayMessage                   Message;                                           // 0x0000(0x03D8)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(BP_HouseEssential_Cube_C_Multicast_BroadcastKill) == 0x000008, "Wrong alignment on BP_HouseEssential_Cube_C_Multicast_BroadcastKill");
static_assert(sizeof(BP_HouseEssential_Cube_C_Multicast_BroadcastKill) == 0x0003D8, "Wrong size on BP_HouseEssential_Cube_C_Multicast_BroadcastKill");
static_assert(offsetof(BP_HouseEssential_Cube_C_Multicast_BroadcastKill, Message) == 0x000000, "Member 'BP_HouseEssential_Cube_C_Multicast_BroadcastKill::Message' has a wrong offset!");

// Function BP_HouseEssential_Cube.BP_HouseEssential_Cube_C.On_HouseEssentialDestroyed__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct BP_HouseEssential_Cube_C_On_HouseEssentialDestroyed__DelegateSignature final
{
public:
	class ABP_HouseEssential_Cube_C*              HouseEssential;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_HouseEssential_Cube_C_On_HouseEssentialDestroyed__DelegateSignature) == 0x000008, "Wrong alignment on BP_HouseEssential_Cube_C_On_HouseEssentialDestroyed__DelegateSignature");
static_assert(sizeof(BP_HouseEssential_Cube_C_On_HouseEssentialDestroyed__DelegateSignature) == 0x000008, "Wrong size on BP_HouseEssential_Cube_C_On_HouseEssentialDestroyed__DelegateSignature");
static_assert(offsetof(BP_HouseEssential_Cube_C_On_HouseEssentialDestroyed__DelegateSignature, HouseEssential) == 0x000000, "Member 'BP_HouseEssential_Cube_C_On_HouseEssentialDestroyed__DelegateSignature::HouseEssential' has a wrong offset!");

// Function BP_HouseEssential_Cube.BP_HouseEssential_Cube_C.OnDamaged
// 0x0370 (0x0370 - 0x0000)
struct BP_HouseEssential_Cube_C_OnDamaged final
{
public:
	float                                         Delta;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 Causer;                                            // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FCombatParticipant                     CombatParticipant;                                 // 0x0010(0x0060)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm)
	struct FKillMethod                            KillMethod;                                        // 0x0070(0x02E8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm)
	struct FVector_NetQuantize                    Location;                                          // 0x0358(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_HouseEssential_Cube_C_OnDamaged) == 0x000008, "Wrong alignment on BP_HouseEssential_Cube_C_OnDamaged");
static_assert(sizeof(BP_HouseEssential_Cube_C_OnDamaged) == 0x000370, "Wrong size on BP_HouseEssential_Cube_C_OnDamaged");
static_assert(offsetof(BP_HouseEssential_Cube_C_OnDamaged, Delta) == 0x000000, "Member 'BP_HouseEssential_Cube_C_OnDamaged::Delta' has a wrong offset!");
static_assert(offsetof(BP_HouseEssential_Cube_C_OnDamaged, Causer) == 0x000008, "Member 'BP_HouseEssential_Cube_C_OnDamaged::Causer' has a wrong offset!");
static_assert(offsetof(BP_HouseEssential_Cube_C_OnDamaged, CombatParticipant) == 0x000010, "Member 'BP_HouseEssential_Cube_C_OnDamaged::CombatParticipant' has a wrong offset!");
static_assert(offsetof(BP_HouseEssential_Cube_C_OnDamaged, KillMethod) == 0x000070, "Member 'BP_HouseEssential_Cube_C_OnDamaged::KillMethod' has a wrong offset!");
static_assert(offsetof(BP_HouseEssential_Cube_C_OnDamaged, Location) == 0x000358, "Member 'BP_HouseEssential_Cube_C_OnDamaged::Location' has a wrong offset!");

// Function BP_HouseEssential_Cube.BP_HouseEssential_Cube_C.OnHealthChanged
// 0x0008 (0x0008 - 0x0000)
struct BP_HouseEssential_Cube_C_OnHealthChanged final
{
public:
	float                                         Health;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MaxHealth_0;                                       // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_HouseEssential_Cube_C_OnHealthChanged) == 0x000004, "Wrong alignment on BP_HouseEssential_Cube_C_OnHealthChanged");
static_assert(sizeof(BP_HouseEssential_Cube_C_OnHealthChanged) == 0x000008, "Wrong size on BP_HouseEssential_Cube_C_OnHealthChanged");
static_assert(offsetof(BP_HouseEssential_Cube_C_OnHealthChanged, Health) == 0x000000, "Member 'BP_HouseEssential_Cube_C_OnHealthChanged::Health' has a wrong offset!");
static_assert(offsetof(BP_HouseEssential_Cube_C_OnHealthChanged, MaxHealth_0) == 0x000004, "Member 'BP_HouseEssential_Cube_C_OnHealthChanged::MaxHealth_0' has a wrong offset!");

// Function BP_HouseEssential_Cube.BP_HouseEssential_Cube_C.OnMessageReceived_BF8FF5C84263723D5769969F45CA41DA
// 0x0010 (0x0010 - 0x0000)
struct BP_HouseEssential_Cube_C_OnMessageReceived_BF8FF5C84263723D5769969F45CA41DA final
{
public:
	class UAsyncAction_ListenForGameplayMessage*  ProxyObject;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           ActualChannel;                                     // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_HouseEssential_Cube_C_OnMessageReceived_BF8FF5C84263723D5769969F45CA41DA) == 0x000008, "Wrong alignment on BP_HouseEssential_Cube_C_OnMessageReceived_BF8FF5C84263723D5769969F45CA41DA");
static_assert(sizeof(BP_HouseEssential_Cube_C_OnMessageReceived_BF8FF5C84263723D5769969F45CA41DA) == 0x000010, "Wrong size on BP_HouseEssential_Cube_C_OnMessageReceived_BF8FF5C84263723D5769969F45CA41DA");
static_assert(offsetof(BP_HouseEssential_Cube_C_OnMessageReceived_BF8FF5C84263723D5769969F45CA41DA, ProxyObject) == 0x000000, "Member 'BP_HouseEssential_Cube_C_OnMessageReceived_BF8FF5C84263723D5769969F45CA41DA::ProxyObject' has a wrong offset!");
static_assert(offsetof(BP_HouseEssential_Cube_C_OnMessageReceived_BF8FF5C84263723D5769969F45CA41DA, ActualChannel) == 0x000008, "Member 'BP_HouseEssential_Cube_C_OnMessageReceived_BF8FF5C84263723D5769969F45CA41DA::ActualChannel' has a wrong offset!");

// Function BP_HouseEssential_Cube.BP_HouseEssential_Cube_C.Play Hit Particles
// 0x0018 (0x0018 - 0x0000)
struct BP_HouseEssential_Cube_C_Play_Hit_Particles final
{
public:
	struct FVector                                Location;                                          // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_HouseEssential_Cube_C_Play_Hit_Particles) == 0x000008, "Wrong alignment on BP_HouseEssential_Cube_C_Play_Hit_Particles");
static_assert(sizeof(BP_HouseEssential_Cube_C_Play_Hit_Particles) == 0x000018, "Wrong size on BP_HouseEssential_Cube_C_Play_Hit_Particles");
static_assert(offsetof(BP_HouseEssential_Cube_C_Play_Hit_Particles, Location) == 0x000000, "Member 'BP_HouseEssential_Cube_C_Play_Hit_Particles::Location' has a wrong offset!");

// Function BP_HouseEssential_Cube.BP_HouseEssential_Cube_C.PostInteract
// 0x0010 (0x0010 - 0x0000)
struct BP_HouseEssential_Cube_C_PostInteract final
{
public:
	class AActor*                                 InteractingActor;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    InteractionComponent;                              // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_HouseEssential_Cube_C_PostInteract) == 0x000008, "Wrong alignment on BP_HouseEssential_Cube_C_PostInteract");
static_assert(sizeof(BP_HouseEssential_Cube_C_PostInteract) == 0x000010, "Wrong size on BP_HouseEssential_Cube_C_PostInteract");
static_assert(offsetof(BP_HouseEssential_Cube_C_PostInteract, InteractingActor) == 0x000000, "Member 'BP_HouseEssential_Cube_C_PostInteract::InteractingActor' has a wrong offset!");
static_assert(offsetof(BP_HouseEssential_Cube_C_PostInteract, InteractionComponent) == 0x000008, "Member 'BP_HouseEssential_Cube_C_PostInteract::InteractionComponent' has a wrong offset!");

// Function BP_HouseEssential_Cube.BP_HouseEssential_Cube_C.PreInteract
// 0x0010 (0x0010 - 0x0000)
struct BP_HouseEssential_Cube_C_PreInteract final
{
public:
	class AActor*                                 InteractingActor;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    InteractionComponent;                              // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_HouseEssential_Cube_C_PreInteract) == 0x000008, "Wrong alignment on BP_HouseEssential_Cube_C_PreInteract");
static_assert(sizeof(BP_HouseEssential_Cube_C_PreInteract) == 0x000010, "Wrong size on BP_HouseEssential_Cube_C_PreInteract");
static_assert(offsetof(BP_HouseEssential_Cube_C_PreInteract, InteractingActor) == 0x000000, "Member 'BP_HouseEssential_Cube_C_PreInteract::InteractingActor' has a wrong offset!");
static_assert(offsetof(BP_HouseEssential_Cube_C_PreInteract, InteractionComponent) == 0x000008, "Member 'BP_HouseEssential_Cube_C_PreInteract::InteractionComponent' has a wrong offset!");

// Function BP_HouseEssential_Cube.BP_HouseEssential_Cube_C.RegisterInteracter
// 0x0010 (0x0010 - 0x0000)
struct BP_HouseEssential_Cube_C_RegisterInteracter final
{
public:
	class UPrimitiveComponent*                    InteractionComponent;                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 InteractingActor;                                  // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_HouseEssential_Cube_C_RegisterInteracter) == 0x000008, "Wrong alignment on BP_HouseEssential_Cube_C_RegisterInteracter");
static_assert(sizeof(BP_HouseEssential_Cube_C_RegisterInteracter) == 0x000010, "Wrong size on BP_HouseEssential_Cube_C_RegisterInteracter");
static_assert(offsetof(BP_HouseEssential_Cube_C_RegisterInteracter, InteractionComponent) == 0x000000, "Member 'BP_HouseEssential_Cube_C_RegisterInteracter::InteractionComponent' has a wrong offset!");
static_assert(offsetof(BP_HouseEssential_Cube_C_RegisterInteracter, InteractingActor) == 0x000008, "Member 'BP_HouseEssential_Cube_C_RegisterInteracter::InteractingActor' has a wrong offset!");

// Function BP_HouseEssential_Cube.BP_HouseEssential_Cube_C.SetActorReferenceInHealthbar
// 0x0018 (0x0018 - 0x0000)
struct BP_HouseEssential_Cube_C_SetActorReferenceInHealthbar final
{
public:
	class UUserWidget*                            CallFunc_GetUserWidgetObject_ReturnValue;          // 0x0000(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UItemCompatibleInfoWI_C*                K2Node_DynamicCast_AsItem_Compatible_Info_WI;      // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_HouseEssential_Cube_C_SetActorReferenceInHealthbar) == 0x000008, "Wrong alignment on BP_HouseEssential_Cube_C_SetActorReferenceInHealthbar");
static_assert(sizeof(BP_HouseEssential_Cube_C_SetActorReferenceInHealthbar) == 0x000018, "Wrong size on BP_HouseEssential_Cube_C_SetActorReferenceInHealthbar");
static_assert(offsetof(BP_HouseEssential_Cube_C_SetActorReferenceInHealthbar, CallFunc_GetUserWidgetObject_ReturnValue) == 0x000000, "Member 'BP_HouseEssential_Cube_C_SetActorReferenceInHealthbar::CallFunc_GetUserWidgetObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HouseEssential_Cube_C_SetActorReferenceInHealthbar, K2Node_DynamicCast_AsItem_Compatible_Info_WI) == 0x000008, "Member 'BP_HouseEssential_Cube_C_SetActorReferenceInHealthbar::K2Node_DynamicCast_AsItem_Compatible_Info_WI' has a wrong offset!");
static_assert(offsetof(BP_HouseEssential_Cube_C_SetActorReferenceInHealthbar, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'BP_HouseEssential_Cube_C_SetActorReferenceInHealthbar::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BP_HouseEssential_Cube.BP_HouseEssential_Cube_C.SetHighContrastMode
// 0x0068 (0x0068 - 0x0000)
struct BP_HouseEssential_Cube_C_SetHighContrastMode final
{
public:
	bool                                          Enabled;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Conv_BoolToDouble_ReturnValue;            // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetTeamID_ReturnValue;                    // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UMaterialInterface*>             CallFunc_GetMaterials_ReturnValue;                 // 0x0020(0x0010)(ReferenceParm)
	uint8                                         CallFunc_GetLocalPlayerTeamId_ReturnValue;         // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInterface*                     CallFunc_Array_Get_Item;                           // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_BoolToDouble_ReturnValue_1;          // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5D[0x3];                                       // 0x005D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast; // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_1; // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_HouseEssential_Cube_C_SetHighContrastMode) == 0x000008, "Wrong alignment on BP_HouseEssential_Cube_C_SetHighContrastMode");
static_assert(sizeof(BP_HouseEssential_Cube_C_SetHighContrastMode) == 0x000068, "Wrong size on BP_HouseEssential_Cube_C_SetHighContrastMode");
static_assert(offsetof(BP_HouseEssential_Cube_C_SetHighContrastMode, Enabled) == 0x000000, "Member 'BP_HouseEssential_Cube_C_SetHighContrastMode::Enabled' has a wrong offset!");
static_assert(offsetof(BP_HouseEssential_Cube_C_SetHighContrastMode, CallFunc_Conv_BoolToDouble_ReturnValue) == 0x000008, "Member 'BP_HouseEssential_Cube_C_SetHighContrastMode::CallFunc_Conv_BoolToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HouseEssential_Cube_C_SetHighContrastMode, Temp_int_Array_Index_Variable) == 0x000010, "Member 'BP_HouseEssential_Cube_C_SetHighContrastMode::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_HouseEssential_Cube_C_SetHighContrastMode, Temp_int_Loop_Counter_Variable) == 0x000014, "Member 'BP_HouseEssential_Cube_C_SetHighContrastMode::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_HouseEssential_Cube_C_SetHighContrastMode, CallFunc_Add_IntInt_ReturnValue) == 0x000018, "Member 'BP_HouseEssential_Cube_C_SetHighContrastMode::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HouseEssential_Cube_C_SetHighContrastMode, CallFunc_GetTeamID_ReturnValue) == 0x00001C, "Member 'BP_HouseEssential_Cube_C_SetHighContrastMode::CallFunc_GetTeamID_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HouseEssential_Cube_C_SetHighContrastMode, CallFunc_GetMaterials_ReturnValue) == 0x000020, "Member 'BP_HouseEssential_Cube_C_SetHighContrastMode::CallFunc_GetMaterials_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HouseEssential_Cube_C_SetHighContrastMode, CallFunc_GetLocalPlayerTeamId_ReturnValue) == 0x000030, "Member 'BP_HouseEssential_Cube_C_SetHighContrastMode::CallFunc_GetLocalPlayerTeamId_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HouseEssential_Cube_C_SetHighContrastMode, CallFunc_Array_Get_Item) == 0x000038, "Member 'BP_HouseEssential_Cube_C_SetHighContrastMode::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_HouseEssential_Cube_C_SetHighContrastMode, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000040, "Member 'BP_HouseEssential_Cube_C_SetHighContrastMode::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HouseEssential_Cube_C_SetHighContrastMode, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x000048, "Member 'BP_HouseEssential_Cube_C_SetHighContrastMode::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HouseEssential_Cube_C_SetHighContrastMode, CallFunc_Conv_BoolToDouble_ReturnValue_1) == 0x000050, "Member 'BP_HouseEssential_Cube_C_SetHighContrastMode::CallFunc_Conv_BoolToDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_HouseEssential_Cube_C_SetHighContrastMode, CallFunc_Array_Length_ReturnValue) == 0x000058, "Member 'BP_HouseEssential_Cube_C_SetHighContrastMode::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HouseEssential_Cube_C_SetHighContrastMode, CallFunc_Less_IntInt_ReturnValue) == 0x00005C, "Member 'BP_HouseEssential_Cube_C_SetHighContrastMode::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HouseEssential_Cube_C_SetHighContrastMode, CallFunc_SetScalarParameterValue_Value_ImplicitCast) == 0x000060, "Member 'BP_HouseEssential_Cube_C_SetHighContrastMode::CallFunc_SetScalarParameterValue_Value_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_HouseEssential_Cube_C_SetHighContrastMode, CallFunc_SetScalarParameterValue_Value_ImplicitCast_1) == 0x000064, "Member 'BP_HouseEssential_Cube_C_SetHighContrastMode::CallFunc_SetScalarParameterValue_Value_ImplicitCast_1' has a wrong offset!");

// Function BP_HouseEssential_Cube.BP_HouseEssential_Cube_C.SetHoveredComponent
// 0x0010 (0x0010 - 0x0000)
struct BP_HouseEssential_Cube_C_SetHoveredComponent final
{
public:
	class UInteractionComponent_C*                HoveredComponent;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          Void;                                              // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_HouseEssential_Cube_C_SetHoveredComponent) == 0x000008, "Wrong alignment on BP_HouseEssential_Cube_C_SetHoveredComponent");
static_assert(sizeof(BP_HouseEssential_Cube_C_SetHoveredComponent) == 0x000010, "Wrong size on BP_HouseEssential_Cube_C_SetHoveredComponent");
static_assert(offsetof(BP_HouseEssential_Cube_C_SetHoveredComponent, HoveredComponent) == 0x000000, "Member 'BP_HouseEssential_Cube_C_SetHoveredComponent::HoveredComponent' has a wrong offset!");
static_assert(offsetof(BP_HouseEssential_Cube_C_SetHoveredComponent, Void) == 0x000008, "Member 'BP_HouseEssential_Cube_C_SetHoveredComponent::Void' has a wrong offset!");

// Function BP_HouseEssential_Cube.BP_HouseEssential_Cube_C.SetInitialHouseEssentialHealth
// 0x0040 (0x0040 - 0x0000)
struct BP_HouseEssential_Cube_C_SetInitialHouseEssentialHealth final
{
public:
	struct FGameplayTag                           DataTag;                                           // 0x0000(0x0008)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetMaxHealth_MaxHealth;                   // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayEffectSpecHandle              CallFunc_MakeOutgoingSpec_ReturnValue;             // 0x0010(0x0010)()
	struct FGameplayEffectSpecHandle              CallFunc_AssignTagSetByCallerMagnitude_ReturnValue; // 0x0020(0x0010)()
	struct FActiveGameplayEffectHandle            CallFunc_BP_ApplyGameplayEffectSpecToSelf_ReturnValue; // 0x0030(0x0008)(NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_AssignTagSetByCallerMagnitude_Magnitude_ImplicitCast; // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_HouseEssential_Cube_C_SetInitialHouseEssentialHealth) == 0x000008, "Wrong alignment on BP_HouseEssential_Cube_C_SetInitialHouseEssentialHealth");
static_assert(sizeof(BP_HouseEssential_Cube_C_SetInitialHouseEssentialHealth) == 0x000040, "Wrong size on BP_HouseEssential_Cube_C_SetInitialHouseEssentialHealth");
static_assert(offsetof(BP_HouseEssential_Cube_C_SetInitialHouseEssentialHealth, DataTag) == 0x000000, "Member 'BP_HouseEssential_Cube_C_SetInitialHouseEssentialHealth::DataTag' has a wrong offset!");
static_assert(offsetof(BP_HouseEssential_Cube_C_SetInitialHouseEssentialHealth, CallFunc_GetMaxHealth_MaxHealth) == 0x000008, "Member 'BP_HouseEssential_Cube_C_SetInitialHouseEssentialHealth::CallFunc_GetMaxHealth_MaxHealth' has a wrong offset!");
static_assert(offsetof(BP_HouseEssential_Cube_C_SetInitialHouseEssentialHealth, CallFunc_MakeOutgoingSpec_ReturnValue) == 0x000010, "Member 'BP_HouseEssential_Cube_C_SetInitialHouseEssentialHealth::CallFunc_MakeOutgoingSpec_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HouseEssential_Cube_C_SetInitialHouseEssentialHealth, CallFunc_AssignTagSetByCallerMagnitude_ReturnValue) == 0x000020, "Member 'BP_HouseEssential_Cube_C_SetInitialHouseEssentialHealth::CallFunc_AssignTagSetByCallerMagnitude_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HouseEssential_Cube_C_SetInitialHouseEssentialHealth, CallFunc_BP_ApplyGameplayEffectSpecToSelf_ReturnValue) == 0x000030, "Member 'BP_HouseEssential_Cube_C_SetInitialHouseEssentialHealth::CallFunc_BP_ApplyGameplayEffectSpecToSelf_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HouseEssential_Cube_C_SetInitialHouseEssentialHealth, CallFunc_AssignTagSetByCallerMagnitude_Magnitude_ImplicitCast) == 0x000038, "Member 'BP_HouseEssential_Cube_C_SetInitialHouseEssentialHealth::CallFunc_AssignTagSetByCallerMagnitude_Magnitude_ImplicitCast' has a wrong offset!");

// Function BP_HouseEssential_Cube.BP_HouseEssential_Cube_C.SetInteractable
// 0x0001 (0x0001 - 0x0000)
struct BP_HouseEssential_Cube_C_SetInteractable final
{
public:
	bool                                          Interactable;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_HouseEssential_Cube_C_SetInteractable) == 0x000001, "Wrong alignment on BP_HouseEssential_Cube_C_SetInteractable");
static_assert(sizeof(BP_HouseEssential_Cube_C_SetInteractable) == 0x000001, "Wrong size on BP_HouseEssential_Cube_C_SetInteractable");
static_assert(offsetof(BP_HouseEssential_Cube_C_SetInteractable, Interactable) == 0x000000, "Member 'BP_HouseEssential_Cube_C_SetInteractable::Interactable' has a wrong offset!");

// Function BP_HouseEssential_Cube.BP_HouseEssential_Cube_C.SetMaterialBasedOnTeam
// 0x0028 (0x0028 - 0x0000)
struct BP_HouseEssential_Cube_C_SetMaterialBasedOnTeam final
{
public:
	bool                                          Temp_bool_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UMeshComponent*>                 K2Node_MakeArray_Array;                            // 0x0008(0x0010)(ReferenceParm, ContainsInstancedReference)
	bool                                          CallFunc_IsSameTeamAsPlayer0_ReturnValue;          // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInterface*                     K2Node_Select_Default;                             // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_HouseEssential_Cube_C_SetMaterialBasedOnTeam) == 0x000008, "Wrong alignment on BP_HouseEssential_Cube_C_SetMaterialBasedOnTeam");
static_assert(sizeof(BP_HouseEssential_Cube_C_SetMaterialBasedOnTeam) == 0x000028, "Wrong size on BP_HouseEssential_Cube_C_SetMaterialBasedOnTeam");
static_assert(offsetof(BP_HouseEssential_Cube_C_SetMaterialBasedOnTeam, Temp_bool_Variable) == 0x000000, "Member 'BP_HouseEssential_Cube_C_SetMaterialBasedOnTeam::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_HouseEssential_Cube_C_SetMaterialBasedOnTeam, K2Node_MakeArray_Array) == 0x000008, "Member 'BP_HouseEssential_Cube_C_SetMaterialBasedOnTeam::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_HouseEssential_Cube_C_SetMaterialBasedOnTeam, CallFunc_IsSameTeamAsPlayer0_ReturnValue) == 0x000018, "Member 'BP_HouseEssential_Cube_C_SetMaterialBasedOnTeam::CallFunc_IsSameTeamAsPlayer0_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HouseEssential_Cube_C_SetMaterialBasedOnTeam, K2Node_Select_Default) == 0x000020, "Member 'BP_HouseEssential_Cube_C_SetMaterialBasedOnTeam::K2Node_Select_Default' has a wrong offset!");

// Function BP_HouseEssential_Cube.BP_HouseEssential_Cube_C.SetupHouseEssentialWidget
// 0x0028 (0x0028 - 0x0000)
struct BP_HouseEssential_Cube_C_SetupHouseEssentialWidget final
{
public:
	class FString                                 CallFunc_Get_ClassLog_Name_name;                   // 0x0000(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class UUserWidget*                            CallFunc_GetUserWidgetObject_ReturnValue;          // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UItemCompatibleInfoWI_C*                K2Node_DynamicCast_AsItem_Compatible_Info_WI;      // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_HouseEssential_Cube_C_SetupHouseEssentialWidget) == 0x000008, "Wrong alignment on BP_HouseEssential_Cube_C_SetupHouseEssentialWidget");
static_assert(sizeof(BP_HouseEssential_Cube_C_SetupHouseEssentialWidget) == 0x000028, "Wrong size on BP_HouseEssential_Cube_C_SetupHouseEssentialWidget");
static_assert(offsetof(BP_HouseEssential_Cube_C_SetupHouseEssentialWidget, CallFunc_Get_ClassLog_Name_name) == 0x000000, "Member 'BP_HouseEssential_Cube_C_SetupHouseEssentialWidget::CallFunc_Get_ClassLog_Name_name' has a wrong offset!");
static_assert(offsetof(BP_HouseEssential_Cube_C_SetupHouseEssentialWidget, CallFunc_GetUserWidgetObject_ReturnValue) == 0x000010, "Member 'BP_HouseEssential_Cube_C_SetupHouseEssentialWidget::CallFunc_GetUserWidgetObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HouseEssential_Cube_C_SetupHouseEssentialWidget, K2Node_DynamicCast_AsItem_Compatible_Info_WI) == 0x000018, "Member 'BP_HouseEssential_Cube_C_SetupHouseEssentialWidget::K2Node_DynamicCast_AsItem_Compatible_Info_WI' has a wrong offset!");
static_assert(offsetof(BP_HouseEssential_Cube_C_SetupHouseEssentialWidget, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'BP_HouseEssential_Cube_C_SetupHouseEssentialWidget::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BP_HouseEssential_Cube.BP_HouseEssential_Cube_C.SwitchToObjectCamera
// 0x0010 (0x0010 - 0x0000)
struct BP_HouseEssential_Cube_C_SwitchToObjectCamera final
{
public:
	float                                         BlendTime;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Duration;                                          // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_HouseEssential_Cube_C_SwitchToObjectCamera) == 0x000008, "Wrong alignment on BP_HouseEssential_Cube_C_SwitchToObjectCamera");
static_assert(sizeof(BP_HouseEssential_Cube_C_SwitchToObjectCamera) == 0x000010, "Wrong size on BP_HouseEssential_Cube_C_SwitchToObjectCamera");
static_assert(offsetof(BP_HouseEssential_Cube_C_SwitchToObjectCamera, BlendTime) == 0x000000, "Member 'BP_HouseEssential_Cube_C_SwitchToObjectCamera::BlendTime' has a wrong offset!");
static_assert(offsetof(BP_HouseEssential_Cube_C_SwitchToObjectCamera, Duration) == 0x000008, "Member 'BP_HouseEssential_Cube_C_SwitchToObjectCamera::Duration' has a wrong offset!");

// Function BP_HouseEssential_Cube.BP_HouseEssential_Cube_C.Try Grant Destroy Reward
// 0x0070 (0x0070 - 0x0000)
struct BP_HouseEssential_Cube_C_Try_Grant_Destroy_Reward final
{
public:
	struct FCombatParticipant                     CombatParticipant;                                 // 0x0000(0x0060)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class UEconomySubsystem*                      CallFunc_GetWorldSubsystem_ReturnValue;            // 0x0060(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_HouseEssential_Cube_C_Try_Grant_Destroy_Reward) == 0x000008, "Wrong alignment on BP_HouseEssential_Cube_C_Try_Grant_Destroy_Reward");
static_assert(sizeof(BP_HouseEssential_Cube_C_Try_Grant_Destroy_Reward) == 0x000070, "Wrong size on BP_HouseEssential_Cube_C_Try_Grant_Destroy_Reward");
static_assert(offsetof(BP_HouseEssential_Cube_C_Try_Grant_Destroy_Reward, CombatParticipant) == 0x000000, "Member 'BP_HouseEssential_Cube_C_Try_Grant_Destroy_Reward::CombatParticipant' has a wrong offset!");
static_assert(offsetof(BP_HouseEssential_Cube_C_Try_Grant_Destroy_Reward, CallFunc_GetWorldSubsystem_ReturnValue) == 0x000060, "Member 'BP_HouseEssential_Cube_C_Try_Grant_Destroy_Reward::CallFunc_GetWorldSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HouseEssential_Cube_C_Try_Grant_Destroy_Reward, CallFunc_IsValid_ReturnValue) == 0x000068, "Member 'BP_HouseEssential_Cube_C_Try_Grant_Destroy_Reward::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HouseEssential_Cube_C_Try_Grant_Destroy_Reward, CallFunc_IsValid_ReturnValue_1) == 0x000069, "Member 'BP_HouseEssential_Cube_C_Try_Grant_Destroy_Reward::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function BP_HouseEssential_Cube.BP_HouseEssential_Cube_C.UnregisterInteracter
// 0x0010 (0x0010 - 0x0000)
struct BP_HouseEssential_Cube_C_UnregisterInteracter final
{
public:
	class UPrimitiveComponent*                    InteractionComponent;                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 InteractingActor;                                  // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_HouseEssential_Cube_C_UnregisterInteracter) == 0x000008, "Wrong alignment on BP_HouseEssential_Cube_C_UnregisterInteracter");
static_assert(sizeof(BP_HouseEssential_Cube_C_UnregisterInteracter) == 0x000010, "Wrong size on BP_HouseEssential_Cube_C_UnregisterInteracter");
static_assert(offsetof(BP_HouseEssential_Cube_C_UnregisterInteracter, InteractionComponent) == 0x000000, "Member 'BP_HouseEssential_Cube_C_UnregisterInteracter::InteractionComponent' has a wrong offset!");
static_assert(offsetof(BP_HouseEssential_Cube_C_UnregisterInteracter, InteractingActor) == 0x000008, "Member 'BP_HouseEssential_Cube_C_UnregisterInteracter::InteractingActor' has a wrong offset!");

// Function BP_HouseEssential_Cube.BP_HouseEssential_Cube_C.UpdateHealth
// 0x0388 (0x0388 - 0x0000)
struct BP_HouseEssential_Cube_C_UpdateHealth final
{
public:
	double                                        Health;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          WasDamaged;                                        // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FCombatParticipant                     CombatParticipant;                                 // 0x0010(0x0060)(BlueprintVisible, BlueprintReadOnly, Parm)
	struct FKillMethod                            KillMethod;                                        // 0x0070(0x02E8)(BlueprintVisible, BlueprintReadOnly, Parm)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0358(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_359[0x3];                                      // 0x0359(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x035C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0360(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue;       // 0x0364(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_365[0x3];                                      // 0x0365(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0368(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetTeamID_ReturnValue;                    // 0x036C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_36D[0x3];                                      // 0x036D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class APlayerStateJP*>                 CallFunc_GetPlayersOfTeam_ReturnValue;             // 0x0370(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0380(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0384(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_HouseEssential_Cube_C_UpdateHealth) == 0x000008, "Wrong alignment on BP_HouseEssential_Cube_C_UpdateHealth");
static_assert(sizeof(BP_HouseEssential_Cube_C_UpdateHealth) == 0x000388, "Wrong size on BP_HouseEssential_Cube_C_UpdateHealth");
static_assert(offsetof(BP_HouseEssential_Cube_C_UpdateHealth, Health) == 0x000000, "Member 'BP_HouseEssential_Cube_C_UpdateHealth::Health' has a wrong offset!");
static_assert(offsetof(BP_HouseEssential_Cube_C_UpdateHealth, WasDamaged) == 0x000008, "Member 'BP_HouseEssential_Cube_C_UpdateHealth::WasDamaged' has a wrong offset!");
static_assert(offsetof(BP_HouseEssential_Cube_C_UpdateHealth, CombatParticipant) == 0x000010, "Member 'BP_HouseEssential_Cube_C_UpdateHealth::CombatParticipant' has a wrong offset!");
static_assert(offsetof(BP_HouseEssential_Cube_C_UpdateHealth, KillMethod) == 0x000070, "Member 'BP_HouseEssential_Cube_C_UpdateHealth::KillMethod' has a wrong offset!");
static_assert(offsetof(BP_HouseEssential_Cube_C_UpdateHealth, CallFunc_HasAuthority_ReturnValue) == 0x000358, "Member 'BP_HouseEssential_Cube_C_UpdateHealth::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HouseEssential_Cube_C_UpdateHealth, Temp_int_Loop_Counter_Variable) == 0x00035C, "Member 'BP_HouseEssential_Cube_C_UpdateHealth::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_HouseEssential_Cube_C_UpdateHealth, CallFunc_Add_IntInt_ReturnValue) == 0x000360, "Member 'BP_HouseEssential_Cube_C_UpdateHealth::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HouseEssential_Cube_C_UpdateHealth, CallFunc_LessEqual_DoubleDouble_ReturnValue) == 0x000364, "Member 'BP_HouseEssential_Cube_C_UpdateHealth::CallFunc_LessEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HouseEssential_Cube_C_UpdateHealth, Temp_int_Array_Index_Variable) == 0x000368, "Member 'BP_HouseEssential_Cube_C_UpdateHealth::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_HouseEssential_Cube_C_UpdateHealth, CallFunc_GetTeamID_ReturnValue) == 0x00036C, "Member 'BP_HouseEssential_Cube_C_UpdateHealth::CallFunc_GetTeamID_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HouseEssential_Cube_C_UpdateHealth, CallFunc_GetPlayersOfTeam_ReturnValue) == 0x000370, "Member 'BP_HouseEssential_Cube_C_UpdateHealth::CallFunc_GetPlayersOfTeam_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HouseEssential_Cube_C_UpdateHealth, CallFunc_Array_Length_ReturnValue) == 0x000380, "Member 'BP_HouseEssential_Cube_C_UpdateHealth::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HouseEssential_Cube_C_UpdateHealth, CallFunc_Less_IntInt_ReturnValue) == 0x000384, "Member 'BP_HouseEssential_Cube_C_UpdateHealth::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function BP_HouseEssential_Cube.BP_HouseEssential_Cube_C.UpdatePings
// 0x00D8 (0x00D8 - 0x0000)
struct BP_HouseEssential_Cube_C_UpdatePings final
{
public:
	ETeamType                                     Temp_byte_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftClassPtr<class UClass>                   Temp_softclass_Variable;                           // 0x0008(0x0028)(UObjectWrapper, HasGetValueTypeHash)
	TSoftClassPtr<class UClass>                   Temp_softclass_Variable_1;                         // 0x0030(0x0028)(UObjectWrapper, HasGetValueTypeHash)
	TSoftClassPtr<class UClass>                   Temp_softclass_Variable_2;                         // 0x0058(0x0028)(UObjectWrapper, HasGetValueTypeHash)
	TSoftClassPtr<class UClass>                   Temp_softclass_Variable_3;                         // 0x0080(0x0028)(UObjectWrapper, HasGetValueTypeHash)
	uint8                                         CallFunc_GetTeamID_ReturnValue;                    // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETeamType                                     CallFunc_GetTeamTypeFromTeamId_ReturnValue;        // 0x00A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_AA[0x6];                                       // 0x00AA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftClassPtr<class UClass>                   K2Node_Select_Default;                             // 0x00B0(0x0028)(UObjectWrapper, HasGetValueTypeHash)
};
static_assert(alignof(BP_HouseEssential_Cube_C_UpdatePings) == 0x000008, "Wrong alignment on BP_HouseEssential_Cube_C_UpdatePings");
static_assert(sizeof(BP_HouseEssential_Cube_C_UpdatePings) == 0x0000D8, "Wrong size on BP_HouseEssential_Cube_C_UpdatePings");
static_assert(offsetof(BP_HouseEssential_Cube_C_UpdatePings, Temp_byte_Variable) == 0x000000, "Member 'BP_HouseEssential_Cube_C_UpdatePings::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_HouseEssential_Cube_C_UpdatePings, Temp_softclass_Variable) == 0x000008, "Member 'BP_HouseEssential_Cube_C_UpdatePings::Temp_softclass_Variable' has a wrong offset!");
static_assert(offsetof(BP_HouseEssential_Cube_C_UpdatePings, Temp_softclass_Variable_1) == 0x000030, "Member 'BP_HouseEssential_Cube_C_UpdatePings::Temp_softclass_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_HouseEssential_Cube_C_UpdatePings, Temp_softclass_Variable_2) == 0x000058, "Member 'BP_HouseEssential_Cube_C_UpdatePings::Temp_softclass_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_HouseEssential_Cube_C_UpdatePings, Temp_softclass_Variable_3) == 0x000080, "Member 'BP_HouseEssential_Cube_C_UpdatePings::Temp_softclass_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_HouseEssential_Cube_C_UpdatePings, CallFunc_GetTeamID_ReturnValue) == 0x0000A8, "Member 'BP_HouseEssential_Cube_C_UpdatePings::CallFunc_GetTeamID_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HouseEssential_Cube_C_UpdatePings, CallFunc_GetTeamTypeFromTeamId_ReturnValue) == 0x0000A9, "Member 'BP_HouseEssential_Cube_C_UpdatePings::CallFunc_GetTeamTypeFromTeamId_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HouseEssential_Cube_C_UpdatePings, K2Node_Select_Default) == 0x0000B0, "Member 'BP_HouseEssential_Cube_C_UpdatePings::K2Node_Select_Default' has a wrong offset!");

// Function BP_HouseEssential_Cube.BP_HouseEssential_Cube_C.UpdateProgressbar
// 0x0020 (0x0020 - 0x0000)
struct BP_HouseEssential_Cube_C_UpdateProgressbar final
{
public:
	double                                        Value;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Max;                                               // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_NormalizeToRange_ReturnValue;             // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_HouseEssential_Cube_C_UpdateProgressbar) == 0x000008, "Wrong alignment on BP_HouseEssential_Cube_C_UpdateProgressbar");
static_assert(sizeof(BP_HouseEssential_Cube_C_UpdateProgressbar) == 0x000020, "Wrong size on BP_HouseEssential_Cube_C_UpdateProgressbar");
static_assert(offsetof(BP_HouseEssential_Cube_C_UpdateProgressbar, Value) == 0x000000, "Member 'BP_HouseEssential_Cube_C_UpdateProgressbar::Value' has a wrong offset!");
static_assert(offsetof(BP_HouseEssential_Cube_C_UpdateProgressbar, Max) == 0x000008, "Member 'BP_HouseEssential_Cube_C_UpdateProgressbar::Max' has a wrong offset!");
static_assert(offsetof(BP_HouseEssential_Cube_C_UpdateProgressbar, CallFunc_NormalizeToRange_ReturnValue) == 0x000010, "Member 'BP_HouseEssential_Cube_C_UpdateProgressbar::CallFunc_NormalizeToRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HouseEssential_Cube_C_UpdateProgressbar, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'BP_HouseEssential_Cube_C_UpdateProgressbar::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_HouseEssential_Cube.BP_HouseEssential_Cube_C.UserConstructionScript
// 0x0018 (0x0018 - 0x0000)
struct BP_HouseEssential_Cube_C_UserConstructionScript final
{
public:
	class USkeletalMesh*                          CallFunc_GetSkeletalMeshAsset_ReturnValue;         // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<class UMeshComponent*>                 K2Node_MakeArray_Array;                            // 0x0008(0x0010)(ReferenceParm, ContainsInstancedReference)
};
static_assert(alignof(BP_HouseEssential_Cube_C_UserConstructionScript) == 0x000008, "Wrong alignment on BP_HouseEssential_Cube_C_UserConstructionScript");
static_assert(sizeof(BP_HouseEssential_Cube_C_UserConstructionScript) == 0x000018, "Wrong size on BP_HouseEssential_Cube_C_UserConstructionScript");
static_assert(offsetof(BP_HouseEssential_Cube_C_UserConstructionScript, CallFunc_GetSkeletalMeshAsset_ReturnValue) == 0x000000, "Member 'BP_HouseEssential_Cube_C_UserConstructionScript::CallFunc_GetSkeletalMeshAsset_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HouseEssential_Cube_C_UserConstructionScript, K2Node_MakeArray_Array) == 0x000008, "Member 'BP_HouseEssential_Cube_C_UserConstructionScript::K2Node_MakeArray_Array' has a wrong offset!");

// Function BP_HouseEssential_Cube.BP_HouseEssential_Cube_C.GetHealth
// 0x0008 (0x0008 - 0x0000)
struct BP_HouseEssential_Cube_C_GetHealth final
{
public:
	double                                        CurrentHealth_0;                                   // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_HouseEssential_Cube_C_GetHealth) == 0x000008, "Wrong alignment on BP_HouseEssential_Cube_C_GetHealth");
static_assert(sizeof(BP_HouseEssential_Cube_C_GetHealth) == 0x000008, "Wrong size on BP_HouseEssential_Cube_C_GetHealth");
static_assert(offsetof(BP_HouseEssential_Cube_C_GetHealth, CurrentHealth_0) == 0x000000, "Member 'BP_HouseEssential_Cube_C_GetHealth::CurrentHealth_0' has a wrong offset!");

// Function BP_HouseEssential_Cube.BP_HouseEssential_Cube_C.GetInteractionDuration
// 0x0010 (0x0010 - 0x0000)
struct BP_HouseEssential_Cube_C_GetInteractionDuration final
{
public:
	class UPrimitiveComponent*                    InteractionComponent;                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	float                                         ReturnValue;                                       // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_HouseEssential_Cube_C_GetInteractionDuration) == 0x000008, "Wrong alignment on BP_HouseEssential_Cube_C_GetInteractionDuration");
static_assert(sizeof(BP_HouseEssential_Cube_C_GetInteractionDuration) == 0x000010, "Wrong size on BP_HouseEssential_Cube_C_GetInteractionDuration");
static_assert(offsetof(BP_HouseEssential_Cube_C_GetInteractionDuration, InteractionComponent) == 0x000000, "Member 'BP_HouseEssential_Cube_C_GetInteractionDuration::InteractionComponent' has a wrong offset!");
static_assert(offsetof(BP_HouseEssential_Cube_C_GetInteractionDuration, ReturnValue) == 0x000008, "Member 'BP_HouseEssential_Cube_C_GetInteractionDuration::ReturnValue' has a wrong offset!");

// Function BP_HouseEssential_Cube.BP_HouseEssential_Cube_C.GetMaxHealth
// 0x0018 (0x0018 - 0x0000)
struct BP_HouseEssential_Cube_C_GetMaxHealth final
{
public:
	double                                        MaxHealth_0;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_TweakableData_C*                    CallFunc_Get_BP_Tweakable_Data_AsBP_Tweakable_Data; // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_HouseEssential_Cube_C_GetMaxHealth) == 0x000008, "Wrong alignment on BP_HouseEssential_Cube_C_GetMaxHealth");
static_assert(sizeof(BP_HouseEssential_Cube_C_GetMaxHealth) == 0x000018, "Wrong size on BP_HouseEssential_Cube_C_GetMaxHealth");
static_assert(offsetof(BP_HouseEssential_Cube_C_GetMaxHealth, MaxHealth_0) == 0x000000, "Member 'BP_HouseEssential_Cube_C_GetMaxHealth::MaxHealth_0' has a wrong offset!");
static_assert(offsetof(BP_HouseEssential_Cube_C_GetMaxHealth, CallFunc_Get_BP_Tweakable_Data_AsBP_Tweakable_Data) == 0x000008, "Member 'BP_HouseEssential_Cube_C_GetMaxHealth::CallFunc_Get_BP_Tweakable_Data_AsBP_Tweakable_Data' has a wrong offset!");
static_assert(offsetof(BP_HouseEssential_Cube_C_GetMaxHealth, CallFunc_Conv_IntToDouble_ReturnValue) == 0x000010, "Member 'BP_HouseEssential_Cube_C_GetMaxHealth::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");

// Function BP_HouseEssential_Cube.BP_HouseEssential_Cube_C.GetPostInteractSyncType
// 0x0010 (0x0010 - 0x0000)
struct BP_HouseEssential_Cube_C_GetPostInteractSyncType final
{
public:
	bool                                          bShouldSync;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EAbilityTaskNetSyncType                       Type;                                              // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    InteractionComponent;                              // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_HouseEssential_Cube_C_GetPostInteractSyncType) == 0x000008, "Wrong alignment on BP_HouseEssential_Cube_C_GetPostInteractSyncType");
static_assert(sizeof(BP_HouseEssential_Cube_C_GetPostInteractSyncType) == 0x000010, "Wrong size on BP_HouseEssential_Cube_C_GetPostInteractSyncType");
static_assert(offsetof(BP_HouseEssential_Cube_C_GetPostInteractSyncType, bShouldSync) == 0x000000, "Member 'BP_HouseEssential_Cube_C_GetPostInteractSyncType::bShouldSync' has a wrong offset!");
static_assert(offsetof(BP_HouseEssential_Cube_C_GetPostInteractSyncType, Type) == 0x000001, "Member 'BP_HouseEssential_Cube_C_GetPostInteractSyncType::Type' has a wrong offset!");
static_assert(offsetof(BP_HouseEssential_Cube_C_GetPostInteractSyncType, InteractionComponent) == 0x000008, "Member 'BP_HouseEssential_Cube_C_GetPostInteractSyncType::InteractionComponent' has a wrong offset!");

// Function BP_HouseEssential_Cube.BP_HouseEssential_Cube_C.GetPreInteractSyncType
// 0x0010 (0x0010 - 0x0000)
struct BP_HouseEssential_Cube_C_GetPreInteractSyncType final
{
public:
	bool                                          bShouldSync;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EAbilityTaskNetSyncType                       Type;                                              // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    InteractionComponent;                              // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_HouseEssential_Cube_C_GetPreInteractSyncType) == 0x000008, "Wrong alignment on BP_HouseEssential_Cube_C_GetPreInteractSyncType");
static_assert(sizeof(BP_HouseEssential_Cube_C_GetPreInteractSyncType) == 0x000010, "Wrong size on BP_HouseEssential_Cube_C_GetPreInteractSyncType");
static_assert(offsetof(BP_HouseEssential_Cube_C_GetPreInteractSyncType, bShouldSync) == 0x000000, "Member 'BP_HouseEssential_Cube_C_GetPreInteractSyncType::bShouldSync' has a wrong offset!");
static_assert(offsetof(BP_HouseEssential_Cube_C_GetPreInteractSyncType, Type) == 0x000001, "Member 'BP_HouseEssential_Cube_C_GetPreInteractSyncType::Type' has a wrong offset!");
static_assert(offsetof(BP_HouseEssential_Cube_C_GetPreInteractSyncType, InteractionComponent) == 0x000008, "Member 'BP_HouseEssential_Cube_C_GetPreInteractSyncType::InteractionComponent' has a wrong offset!");

// Function BP_HouseEssential_Cube.BP_HouseEssential_Cube_C.GetTeam
// 0x0078 (0x0078 - 0x0000)
struct BP_HouseEssential_Cube_C_GetTeam final
{
public:
	struct FTeam                                  ReturnValue;                                       // 0x0000(0x0038)(Parm, OutParm, ReturnParm, NoDestructor)
	struct FTeam                                  CallFunc_GetTeam_ReturnValue;                      // 0x0038(0x0038)(NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_HouseEssential_Cube_C_GetTeam) == 0x000008, "Wrong alignment on BP_HouseEssential_Cube_C_GetTeam");
static_assert(sizeof(BP_HouseEssential_Cube_C_GetTeam) == 0x000078, "Wrong size on BP_HouseEssential_Cube_C_GetTeam");
static_assert(offsetof(BP_HouseEssential_Cube_C_GetTeam, ReturnValue) == 0x000000, "Member 'BP_HouseEssential_Cube_C_GetTeam::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HouseEssential_Cube_C_GetTeam, CallFunc_GetTeam_ReturnValue) == 0x000038, "Member 'BP_HouseEssential_Cube_C_GetTeam::CallFunc_GetTeam_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HouseEssential_Cube_C_GetTeam, CallFunc_IsValid_ReturnValue) == 0x000070, "Member 'BP_HouseEssential_Cube_C_GetTeam::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_HouseEssential_Cube.BP_HouseEssential_Cube_C.GetTeamID
// 0x0020 (0x0020 - 0x0000)
struct BP_HouseEssential_Cube_C_GetTeamID final
{
public:
	uint8                                         ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Get_ClassLog_Name_name;                   // 0x0008(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetTeamID_ReturnValue;                    // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_HouseEssential_Cube_C_GetTeamID) == 0x000008, "Wrong alignment on BP_HouseEssential_Cube_C_GetTeamID");
static_assert(sizeof(BP_HouseEssential_Cube_C_GetTeamID) == 0x000020, "Wrong size on BP_HouseEssential_Cube_C_GetTeamID");
static_assert(offsetof(BP_HouseEssential_Cube_C_GetTeamID, ReturnValue) == 0x000000, "Member 'BP_HouseEssential_Cube_C_GetTeamID::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HouseEssential_Cube_C_GetTeamID, CallFunc_Get_ClassLog_Name_name) == 0x000008, "Member 'BP_HouseEssential_Cube_C_GetTeamID::CallFunc_Get_ClassLog_Name_name' has a wrong offset!");
static_assert(offsetof(BP_HouseEssential_Cube_C_GetTeamID, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'BP_HouseEssential_Cube_C_GetTeamID::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HouseEssential_Cube_C_GetTeamID, CallFunc_GetTeamID_ReturnValue) == 0x000019, "Member 'BP_HouseEssential_Cube_C_GetTeamID::CallFunc_GetTeamID_ReturnValue' has a wrong offset!");

// Function BP_HouseEssential_Cube.BP_HouseEssential_Cube_C.HasTeam
// 0x0001 (0x0001 - 0x0000)
struct BP_HouseEssential_Cube_C_HasTeam final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_HouseEssential_Cube_C_HasTeam) == 0x000001, "Wrong alignment on BP_HouseEssential_Cube_C_HasTeam");
static_assert(sizeof(BP_HouseEssential_Cube_C_HasTeam) == 0x000001, "Wrong size on BP_HouseEssential_Cube_C_HasTeam");
static_assert(offsetof(BP_HouseEssential_Cube_C_HasTeam, ReturnValue) == 0x000000, "Member 'BP_HouseEssential_Cube_C_HasTeam::ReturnValue' has a wrong offset!");

// Function BP_HouseEssential_Cube.BP_HouseEssential_Cube_C.IsAvailableForEnemyTeam
// 0x0010 (0x0010 - 0x0000)
struct BP_HouseEssential_Cube_C_IsAvailableForEnemyTeam final
{
public:
	class UPrimitiveComponent*                    InteractionComponent;                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_HouseEssential_Cube_C_IsAvailableForEnemyTeam) == 0x000008, "Wrong alignment on BP_HouseEssential_Cube_C_IsAvailableForEnemyTeam");
static_assert(sizeof(BP_HouseEssential_Cube_C_IsAvailableForEnemyTeam) == 0x000010, "Wrong size on BP_HouseEssential_Cube_C_IsAvailableForEnemyTeam");
static_assert(offsetof(BP_HouseEssential_Cube_C_IsAvailableForEnemyTeam, InteractionComponent) == 0x000000, "Member 'BP_HouseEssential_Cube_C_IsAvailableForEnemyTeam::InteractionComponent' has a wrong offset!");
static_assert(offsetof(BP_HouseEssential_Cube_C_IsAvailableForEnemyTeam, ReturnValue) == 0x000008, "Member 'BP_HouseEssential_Cube_C_IsAvailableForEnemyTeam::ReturnValue' has a wrong offset!");

// Function BP_HouseEssential_Cube.BP_HouseEssential_Cube_C.IsAvailableForInteraction
// 0x0018 (0x0018 - 0x0000)
struct BP_HouseEssential_Cube_C_IsAvailableForInteraction final
{
public:
	class AActor*                                 InteractingActor;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    InteractionComponent;                              // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_HouseEssential_Cube_C_IsAvailableForInteraction) == 0x000008, "Wrong alignment on BP_HouseEssential_Cube_C_IsAvailableForInteraction");
static_assert(sizeof(BP_HouseEssential_Cube_C_IsAvailableForInteraction) == 0x000018, "Wrong size on BP_HouseEssential_Cube_C_IsAvailableForInteraction");
static_assert(offsetof(BP_HouseEssential_Cube_C_IsAvailableForInteraction, InteractingActor) == 0x000000, "Member 'BP_HouseEssential_Cube_C_IsAvailableForInteraction::InteractingActor' has a wrong offset!");
static_assert(offsetof(BP_HouseEssential_Cube_C_IsAvailableForInteraction, InteractionComponent) == 0x000008, "Member 'BP_HouseEssential_Cube_C_IsAvailableForInteraction::InteractionComponent' has a wrong offset!");
static_assert(offsetof(BP_HouseEssential_Cube_C_IsAvailableForInteraction, ReturnValue) == 0x000010, "Member 'BP_HouseEssential_Cube_C_IsAvailableForInteraction::ReturnValue' has a wrong offset!");

// Function BP_HouseEssential_Cube.BP_HouseEssential_Cube_C.TakeDamageFromAllTeams
// 0x0001 (0x0001 - 0x0000)
struct BP_HouseEssential_Cube_C_TakeDamageFromAllTeams final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_HouseEssential_Cube_C_TakeDamageFromAllTeams) == 0x000001, "Wrong alignment on BP_HouseEssential_Cube_C_TakeDamageFromAllTeams");
static_assert(sizeof(BP_HouseEssential_Cube_C_TakeDamageFromAllTeams) == 0x000001, "Wrong size on BP_HouseEssential_Cube_C_TakeDamageFromAllTeams");
static_assert(offsetof(BP_HouseEssential_Cube_C_TakeDamageFromAllTeams, ReturnValue) == 0x000000, "Member 'BP_HouseEssential_Cube_C_TakeDamageFromAllTeams::ReturnValue' has a wrong offset!");

}

