#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WI_PerkDetailsPanel

#include "Basic.hpp"

#include "GameplayTags_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function WI_PerkDetailsPanel.WI_PerkDetailsPanel_C.BndEvt__WI_PerkDetailsPanel_PerkIcon_K2Node_ComponentBoundEvent_0_CommonButtonBaseClicked__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct WI_PerkDetailsPanel_C_BndEvt__WI_PerkDetailsPanel_PerkIcon_K2Node_ComponentBoundEvent_0_CommonButtonBaseClicked__DelegateSignature final
{
public:
	class UCommonButtonBase*                      Button;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WI_PerkDetailsPanel_C_BndEvt__WI_PerkDetailsPanel_PerkIcon_K2Node_ComponentBoundEvent_0_CommonButtonBaseClicked__DelegateSignature) == 0x000008, "Wrong alignment on WI_PerkDetailsPanel_C_BndEvt__WI_PerkDetailsPanel_PerkIcon_K2Node_ComponentBoundEvent_0_CommonButtonBaseClicked__DelegateSignature");
static_assert(sizeof(WI_PerkDetailsPanel_C_BndEvt__WI_PerkDetailsPanel_PerkIcon_K2Node_ComponentBoundEvent_0_CommonButtonBaseClicked__DelegateSignature) == 0x000008, "Wrong size on WI_PerkDetailsPanel_C_BndEvt__WI_PerkDetailsPanel_PerkIcon_K2Node_ComponentBoundEvent_0_CommonButtonBaseClicked__DelegateSignature");
static_assert(offsetof(WI_PerkDetailsPanel_C_BndEvt__WI_PerkDetailsPanel_PerkIcon_K2Node_ComponentBoundEvent_0_CommonButtonBaseClicked__DelegateSignature, Button) == 0x000000, "Member 'WI_PerkDetailsPanel_C_BndEvt__WI_PerkDetailsPanel_PerkIcon_K2Node_ComponentBoundEvent_0_CommonButtonBaseClicked__DelegateSignature::Button' has a wrong offset!");

// Function WI_PerkDetailsPanel.WI_PerkDetailsPanel_C.ExecuteUbergraph_WI_PerkDetailsPanel
// 0x00B8 (0x00B8 - 0x0000)
struct WI_PerkDetailsPanel_C_ExecuteUbergraph_WI_PerkDetailsPanel final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           Temp_struct_Variable;                              // 0x0008(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           K2Node_CustomEvent_PerkID;                         // 0x0014(0x0008)(NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UPerkDefinition>         CallFunc_TryGetPerkDefinition_OutSoftPerkDefinition; // 0x0020(0x0028)(UObjectWrapper, HasGetValueTypeHash)
	bool                                          CallFunc_TryGetPerkDefinition_ReturnValue;         // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsGameplayTagValid_ReturnValue;           // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A[0x6];                                       // 0x004A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UCommonButtonBase*                      K2Node_ComponentBoundEvent_Button;                 // 0x0050(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_MatchesTag_ReturnValue;                   // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5A[0x2];                                       // 0x005A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           K2Node_Select_Default;                             // 0x005C(0x0008)(NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_64[0x4];                                       // 0x0064(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                Temp_object_Variable;                              // 0x0068(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPerkDefinition*                        K2Node_DynamicCast_AsPerk_Definition;              // 0x0070(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_79[0x7];                                       // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_GetDescription_ReturnValue;               // 0x0080(0x0010)()
	class FText                                   CallFunc_GetPerkName_ReturnValue;                  // 0x0090(0x0010)()
	class UObject*                                K2Node_CustomEvent_Loaded;                         // 0x00A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UObject* Loaded)>        K2Node_CreateDelegate_OutputDelegate;              // 0x00A8(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WI_PerkDetailsPanel_C_ExecuteUbergraph_WI_PerkDetailsPanel) == 0x000008, "Wrong alignment on WI_PerkDetailsPanel_C_ExecuteUbergraph_WI_PerkDetailsPanel");
static_assert(sizeof(WI_PerkDetailsPanel_C_ExecuteUbergraph_WI_PerkDetailsPanel) == 0x0000B8, "Wrong size on WI_PerkDetailsPanel_C_ExecuteUbergraph_WI_PerkDetailsPanel");
static_assert(offsetof(WI_PerkDetailsPanel_C_ExecuteUbergraph_WI_PerkDetailsPanel, EntryPoint) == 0x000000, "Member 'WI_PerkDetailsPanel_C_ExecuteUbergraph_WI_PerkDetailsPanel::EntryPoint' has a wrong offset!");
static_assert(offsetof(WI_PerkDetailsPanel_C_ExecuteUbergraph_WI_PerkDetailsPanel, Temp_bool_Variable) == 0x000004, "Member 'WI_PerkDetailsPanel_C_ExecuteUbergraph_WI_PerkDetailsPanel::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WI_PerkDetailsPanel_C_ExecuteUbergraph_WI_PerkDetailsPanel, Temp_struct_Variable) == 0x000008, "Member 'WI_PerkDetailsPanel_C_ExecuteUbergraph_WI_PerkDetailsPanel::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(WI_PerkDetailsPanel_C_ExecuteUbergraph_WI_PerkDetailsPanel, K2Node_Event_IsDesignTime) == 0x000010, "Member 'WI_PerkDetailsPanel_C_ExecuteUbergraph_WI_PerkDetailsPanel::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(WI_PerkDetailsPanel_C_ExecuteUbergraph_WI_PerkDetailsPanel, K2Node_CustomEvent_PerkID) == 0x000014, "Member 'WI_PerkDetailsPanel_C_ExecuteUbergraph_WI_PerkDetailsPanel::K2Node_CustomEvent_PerkID' has a wrong offset!");
static_assert(offsetof(WI_PerkDetailsPanel_C_ExecuteUbergraph_WI_PerkDetailsPanel, CallFunc_TryGetPerkDefinition_OutSoftPerkDefinition) == 0x000020, "Member 'WI_PerkDetailsPanel_C_ExecuteUbergraph_WI_PerkDetailsPanel::CallFunc_TryGetPerkDefinition_OutSoftPerkDefinition' has a wrong offset!");
static_assert(offsetof(WI_PerkDetailsPanel_C_ExecuteUbergraph_WI_PerkDetailsPanel, CallFunc_TryGetPerkDefinition_ReturnValue) == 0x000048, "Member 'WI_PerkDetailsPanel_C_ExecuteUbergraph_WI_PerkDetailsPanel::CallFunc_TryGetPerkDefinition_ReturnValue' has a wrong offset!");
static_assert(offsetof(WI_PerkDetailsPanel_C_ExecuteUbergraph_WI_PerkDetailsPanel, CallFunc_IsGameplayTagValid_ReturnValue) == 0x000049, "Member 'WI_PerkDetailsPanel_C_ExecuteUbergraph_WI_PerkDetailsPanel::CallFunc_IsGameplayTagValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WI_PerkDetailsPanel_C_ExecuteUbergraph_WI_PerkDetailsPanel, K2Node_ComponentBoundEvent_Button) == 0x000050, "Member 'WI_PerkDetailsPanel_C_ExecuteUbergraph_WI_PerkDetailsPanel::K2Node_ComponentBoundEvent_Button' has a wrong offset!");
static_assert(offsetof(WI_PerkDetailsPanel_C_ExecuteUbergraph_WI_PerkDetailsPanel, CallFunc_MatchesTag_ReturnValue) == 0x000058, "Member 'WI_PerkDetailsPanel_C_ExecuteUbergraph_WI_PerkDetailsPanel::CallFunc_MatchesTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(WI_PerkDetailsPanel_C_ExecuteUbergraph_WI_PerkDetailsPanel, CallFunc_BooleanAND_ReturnValue) == 0x000059, "Member 'WI_PerkDetailsPanel_C_ExecuteUbergraph_WI_PerkDetailsPanel::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(WI_PerkDetailsPanel_C_ExecuteUbergraph_WI_PerkDetailsPanel, K2Node_Select_Default) == 0x00005C, "Member 'WI_PerkDetailsPanel_C_ExecuteUbergraph_WI_PerkDetailsPanel::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WI_PerkDetailsPanel_C_ExecuteUbergraph_WI_PerkDetailsPanel, Temp_object_Variable) == 0x000068, "Member 'WI_PerkDetailsPanel_C_ExecuteUbergraph_WI_PerkDetailsPanel::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(WI_PerkDetailsPanel_C_ExecuteUbergraph_WI_PerkDetailsPanel, K2Node_DynamicCast_AsPerk_Definition) == 0x000070, "Member 'WI_PerkDetailsPanel_C_ExecuteUbergraph_WI_PerkDetailsPanel::K2Node_DynamicCast_AsPerk_Definition' has a wrong offset!");
static_assert(offsetof(WI_PerkDetailsPanel_C_ExecuteUbergraph_WI_PerkDetailsPanel, K2Node_DynamicCast_bSuccess) == 0x000078, "Member 'WI_PerkDetailsPanel_C_ExecuteUbergraph_WI_PerkDetailsPanel::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WI_PerkDetailsPanel_C_ExecuteUbergraph_WI_PerkDetailsPanel, CallFunc_GetDescription_ReturnValue) == 0x000080, "Member 'WI_PerkDetailsPanel_C_ExecuteUbergraph_WI_PerkDetailsPanel::CallFunc_GetDescription_ReturnValue' has a wrong offset!");
static_assert(offsetof(WI_PerkDetailsPanel_C_ExecuteUbergraph_WI_PerkDetailsPanel, CallFunc_GetPerkName_ReturnValue) == 0x000090, "Member 'WI_PerkDetailsPanel_C_ExecuteUbergraph_WI_PerkDetailsPanel::CallFunc_GetPerkName_ReturnValue' has a wrong offset!");
static_assert(offsetof(WI_PerkDetailsPanel_C_ExecuteUbergraph_WI_PerkDetailsPanel, K2Node_CustomEvent_Loaded) == 0x0000A0, "Member 'WI_PerkDetailsPanel_C_ExecuteUbergraph_WI_PerkDetailsPanel::K2Node_CustomEvent_Loaded' has a wrong offset!");
static_assert(offsetof(WI_PerkDetailsPanel_C_ExecuteUbergraph_WI_PerkDetailsPanel, K2Node_CreateDelegate_OutputDelegate) == 0x0000A8, "Member 'WI_PerkDetailsPanel_C_ExecuteUbergraph_WI_PerkDetailsPanel::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");

// Function WI_PerkDetailsPanel.WI_PerkDetailsPanel_C.LockPerkSlot
// 0x0010 (0x0010 - 0x0000)
struct WI_PerkDetailsPanel_C_LockPerkSlot final
{
public:
	class FText                                   LockDescription;                                   // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(WI_PerkDetailsPanel_C_LockPerkSlot) == 0x000008, "Wrong alignment on WI_PerkDetailsPanel_C_LockPerkSlot");
static_assert(sizeof(WI_PerkDetailsPanel_C_LockPerkSlot) == 0x000010, "Wrong size on WI_PerkDetailsPanel_C_LockPerkSlot");
static_assert(offsetof(WI_PerkDetailsPanel_C_LockPerkSlot, LockDescription) == 0x000000, "Member 'WI_PerkDetailsPanel_C_LockPerkSlot::LockDescription' has a wrong offset!");

// Function WI_PerkDetailsPanel.WI_PerkDetailsPanel_C.OnLoaded_F8838F6E47B85CB8DCCD899F75BF8FA7
// 0x0008 (0x0008 - 0x0000)
struct WI_PerkDetailsPanel_C_OnLoaded_F8838F6E47B85CB8DCCD899F75BF8FA7 final
{
public:
	class UObject*                                Loaded;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WI_PerkDetailsPanel_C_OnLoaded_F8838F6E47B85CB8DCCD899F75BF8FA7) == 0x000008, "Wrong alignment on WI_PerkDetailsPanel_C_OnLoaded_F8838F6E47B85CB8DCCD899F75BF8FA7");
static_assert(sizeof(WI_PerkDetailsPanel_C_OnLoaded_F8838F6E47B85CB8DCCD899F75BF8FA7) == 0x000008, "Wrong size on WI_PerkDetailsPanel_C_OnLoaded_F8838F6E47B85CB8DCCD899F75BF8FA7");
static_assert(offsetof(WI_PerkDetailsPanel_C_OnLoaded_F8838F6E47B85CB8DCCD899F75BF8FA7, Loaded) == 0x000000, "Member 'WI_PerkDetailsPanel_C_OnLoaded_F8838F6E47B85CB8DCCD899F75BF8FA7::Loaded' has a wrong offset!");

// Function WI_PerkDetailsPanel.WI_PerkDetailsPanel_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct WI_PerkDetailsPanel_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WI_PerkDetailsPanel_C_PreConstruct) == 0x000001, "Wrong alignment on WI_PerkDetailsPanel_C_PreConstruct");
static_assert(sizeof(WI_PerkDetailsPanel_C_PreConstruct) == 0x000001, "Wrong size on WI_PerkDetailsPanel_C_PreConstruct");
static_assert(offsetof(WI_PerkDetailsPanel_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'WI_PerkDetailsPanel_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function WI_PerkDetailsPanel.WI_PerkDetailsPanel_C.Set Button and Icon Diameter
// 0x0010 (0x0010 - 0x0000)
struct WI_PerkDetailsPanel_C_Set_Button_and_Icon_Diameter final
{
public:
	double                                        ButtonDiameter_0;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        IconDiameter_0;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WI_PerkDetailsPanel_C_Set_Button_and_Icon_Diameter) == 0x000008, "Wrong alignment on WI_PerkDetailsPanel_C_Set_Button_and_Icon_Diameter");
static_assert(sizeof(WI_PerkDetailsPanel_C_Set_Button_and_Icon_Diameter) == 0x000010, "Wrong size on WI_PerkDetailsPanel_C_Set_Button_and_Icon_Diameter");
static_assert(offsetof(WI_PerkDetailsPanel_C_Set_Button_and_Icon_Diameter, ButtonDiameter_0) == 0x000000, "Member 'WI_PerkDetailsPanel_C_Set_Button_and_Icon_Diameter::ButtonDiameter_0' has a wrong offset!");
static_assert(offsetof(WI_PerkDetailsPanel_C_Set_Button_and_Icon_Diameter, IconDiameter_0) == 0x000008, "Member 'WI_PerkDetailsPanel_C_Set_Button_and_Icon_Diameter::IconDiameter_0' has a wrong offset!");

// Function WI_PerkDetailsPanel.WI_PerkDetailsPanel_C.SetDescription
// 0x0010 (0x0010 - 0x0000)
struct WI_PerkDetailsPanel_C_SetDescription final
{
public:
	class FText                                   Description_0;                                     // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(WI_PerkDetailsPanel_C_SetDescription) == 0x000008, "Wrong alignment on WI_PerkDetailsPanel_C_SetDescription");
static_assert(sizeof(WI_PerkDetailsPanel_C_SetDescription) == 0x000010, "Wrong size on WI_PerkDetailsPanel_C_SetDescription");
static_assert(offsetof(WI_PerkDetailsPanel_C_SetDescription, Description_0) == 0x000000, "Member 'WI_PerkDetailsPanel_C_SetDescription::Description_0' has a wrong offset!");

// Function WI_PerkDetailsPanel.WI_PerkDetailsPanel_C.SetName
// 0x0010 (0x0010 - 0x0000)
struct WI_PerkDetailsPanel_C_SetName final
{
public:
	class FText                                   Name_0;                                            // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(WI_PerkDetailsPanel_C_SetName) == 0x000008, "Wrong alignment on WI_PerkDetailsPanel_C_SetName");
static_assert(sizeof(WI_PerkDetailsPanel_C_SetName) == 0x000010, "Wrong size on WI_PerkDetailsPanel_C_SetName");
static_assert(offsetof(WI_PerkDetailsPanel_C_SetName, Name_0) == 0x000000, "Member 'WI_PerkDetailsPanel_C_SetName::Name_0' has a wrong offset!");

// Function WI_PerkDetailsPanel.WI_PerkDetailsPanel_C.SetPerk
// 0x0008 (0x0008 - 0x0000)
struct WI_PerkDetailsPanel_C_SetPerk final
{
public:
	struct FGameplayTag                           PerkID;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WI_PerkDetailsPanel_C_SetPerk) == 0x000004, "Wrong alignment on WI_PerkDetailsPanel_C_SetPerk");
static_assert(sizeof(WI_PerkDetailsPanel_C_SetPerk) == 0x000008, "Wrong size on WI_PerkDetailsPanel_C_SetPerk");
static_assert(offsetof(WI_PerkDetailsPanel_C_SetPerk, PerkID) == 0x000000, "Member 'WI_PerkDetailsPanel_C_SetPerk::PerkID' has a wrong offset!");

// Function WI_PerkDetailsPanel.WI_PerkDetailsPanel_C.SetPerkType
// 0x000C (0x000C - 0x0000)
struct WI_PerkDetailsPanel_C_SetPerkType final
{
public:
	struct FGameplayTag                           PerkTypeTag;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	bool                                          GameplayTagsK2Node_SwitchGameplayTag_CmpSuccess;   // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WI_PerkDetailsPanel_C_SetPerkType) == 0x000004, "Wrong alignment on WI_PerkDetailsPanel_C_SetPerkType");
static_assert(sizeof(WI_PerkDetailsPanel_C_SetPerkType) == 0x00000C, "Wrong size on WI_PerkDetailsPanel_C_SetPerkType");
static_assert(offsetof(WI_PerkDetailsPanel_C_SetPerkType, PerkTypeTag) == 0x000000, "Member 'WI_PerkDetailsPanel_C_SetPerkType::PerkTypeTag' has a wrong offset!");
static_assert(offsetof(WI_PerkDetailsPanel_C_SetPerkType, GameplayTagsK2Node_SwitchGameplayTag_CmpSuccess) == 0x000008, "Member 'WI_PerkDetailsPanel_C_SetPerkType::GameplayTagsK2Node_SwitchGameplayTag_CmpSuccess' has a wrong offset!");

// Function WI_PerkDetailsPanel.WI_PerkDetailsPanel_C.SetType
// 0x0010 (0x0010 - 0x0000)
struct WI_PerkDetailsPanel_C_SetType final
{
public:
	class FText                                   Type_0;                                            // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(WI_PerkDetailsPanel_C_SetType) == 0x000008, "Wrong alignment on WI_PerkDetailsPanel_C_SetType");
static_assert(sizeof(WI_PerkDetailsPanel_C_SetType) == 0x000010, "Wrong size on WI_PerkDetailsPanel_C_SetType");
static_assert(offsetof(WI_PerkDetailsPanel_C_SetType, Type_0) == 0x000000, "Member 'WI_PerkDetailsPanel_C_SetType::Type_0' has a wrong offset!");

// Function WI_PerkDetailsPanel.WI_PerkDetailsPanel_C.ShouldLockPerkSlot
// 0x0140 (0x0140 - 0x0000)
struct WI_PerkDetailsPanel_C_ShouldLockPerkSlot final
{
public:
	struct FGameplayTag                           NeighborID;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	int32                                         NeighborLevel;                                     // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsLocked_0;                                        // 0x000C(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Lock_Description_0;                                // 0x0010(0x0010)(Parm, OutParm)
	int32                                         MinimumNeighborPerkLevel;                          // 0x0020(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_25[0x3];                                       // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2D[0x3];                                       // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A[0x6];                                       // 0x003A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	int64                                         CallFunc_Conv_IntToInt64_ReturnValue;              // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0048(0x0048)(HasGetValueTypeHash)
	class USeasonPassGameInstanceSubsystem*       CallFunc_GetGameInstanceSubsystem_ReturnValue;     // 0x0090(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0098(0x0010)(ReferenceParm)
	TMap<int32, struct FGameplayTag>              CallFunc_GetNeighborPerkRewardsByLevel_ReturnValue; // 0x00A8(0x0050)()
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x00F8(0x0010)()
	TArray<int32>                                 CallFunc_Map_Keys_Keys;                            // 0x0108(0x0010)(ReferenceParm)
	TArray<int32>                                 CallFunc_ArraySortInteger_ReturnValue;             // 0x0118(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0128(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Get_Item;                           // 0x012C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0131(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_132[0x2];                                      // 0x0132(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           CallFunc_Map_Find_Value;                           // 0x0134(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x013C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_MatchesTag_ReturnValue;                   // 0x013D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WI_PerkDetailsPanel_C_ShouldLockPerkSlot) == 0x000008, "Wrong alignment on WI_PerkDetailsPanel_C_ShouldLockPerkSlot");
static_assert(sizeof(WI_PerkDetailsPanel_C_ShouldLockPerkSlot) == 0x000140, "Wrong size on WI_PerkDetailsPanel_C_ShouldLockPerkSlot");
static_assert(offsetof(WI_PerkDetailsPanel_C_ShouldLockPerkSlot, NeighborID) == 0x000000, "Member 'WI_PerkDetailsPanel_C_ShouldLockPerkSlot::NeighborID' has a wrong offset!");
static_assert(offsetof(WI_PerkDetailsPanel_C_ShouldLockPerkSlot, NeighborLevel) == 0x000008, "Member 'WI_PerkDetailsPanel_C_ShouldLockPerkSlot::NeighborLevel' has a wrong offset!");
static_assert(offsetof(WI_PerkDetailsPanel_C_ShouldLockPerkSlot, IsLocked_0) == 0x00000C, "Member 'WI_PerkDetailsPanel_C_ShouldLockPerkSlot::IsLocked_0' has a wrong offset!");
static_assert(offsetof(WI_PerkDetailsPanel_C_ShouldLockPerkSlot, Lock_Description_0) == 0x000010, "Member 'WI_PerkDetailsPanel_C_ShouldLockPerkSlot::Lock_Description_0' has a wrong offset!");
static_assert(offsetof(WI_PerkDetailsPanel_C_ShouldLockPerkSlot, MinimumNeighborPerkLevel) == 0x000020, "Member 'WI_PerkDetailsPanel_C_ShouldLockPerkSlot::MinimumNeighborPerkLevel' has a wrong offset!");
static_assert(offsetof(WI_PerkDetailsPanel_C_ShouldLockPerkSlot, Temp_bool_True_if_break_was_hit_Variable) == 0x000024, "Member 'WI_PerkDetailsPanel_C_ShouldLockPerkSlot::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(WI_PerkDetailsPanel_C_ShouldLockPerkSlot, Temp_int_Array_Index_Variable) == 0x000028, "Member 'WI_PerkDetailsPanel_C_ShouldLockPerkSlot::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WI_PerkDetailsPanel_C_ShouldLockPerkSlot, CallFunc_Not_PreBool_ReturnValue) == 0x00002C, "Member 'WI_PerkDetailsPanel_C_ShouldLockPerkSlot::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WI_PerkDetailsPanel_C_ShouldLockPerkSlot, Temp_int_Loop_Counter_Variable) == 0x000030, "Member 'WI_PerkDetailsPanel_C_ShouldLockPerkSlot::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WI_PerkDetailsPanel_C_ShouldLockPerkSlot, CallFunc_Add_IntInt_ReturnValue) == 0x000034, "Member 'WI_PerkDetailsPanel_C_ShouldLockPerkSlot::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WI_PerkDetailsPanel_C_ShouldLockPerkSlot, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000038, "Member 'WI_PerkDetailsPanel_C_ShouldLockPerkSlot::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WI_PerkDetailsPanel_C_ShouldLockPerkSlot, CallFunc_Greater_IntInt_ReturnValue) == 0x000039, "Member 'WI_PerkDetailsPanel_C_ShouldLockPerkSlot::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WI_PerkDetailsPanel_C_ShouldLockPerkSlot, CallFunc_Conv_IntToInt64_ReturnValue) == 0x000040, "Member 'WI_PerkDetailsPanel_C_ShouldLockPerkSlot::CallFunc_Conv_IntToInt64_ReturnValue' has a wrong offset!");
static_assert(offsetof(WI_PerkDetailsPanel_C_ShouldLockPerkSlot, K2Node_MakeStruct_FormatArgumentData) == 0x000048, "Member 'WI_PerkDetailsPanel_C_ShouldLockPerkSlot::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(WI_PerkDetailsPanel_C_ShouldLockPerkSlot, CallFunc_GetGameInstanceSubsystem_ReturnValue) == 0x000090, "Member 'WI_PerkDetailsPanel_C_ShouldLockPerkSlot::CallFunc_GetGameInstanceSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(WI_PerkDetailsPanel_C_ShouldLockPerkSlot, K2Node_MakeArray_Array) == 0x000098, "Member 'WI_PerkDetailsPanel_C_ShouldLockPerkSlot::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(WI_PerkDetailsPanel_C_ShouldLockPerkSlot, CallFunc_GetNeighborPerkRewardsByLevel_ReturnValue) == 0x0000A8, "Member 'WI_PerkDetailsPanel_C_ShouldLockPerkSlot::CallFunc_GetNeighborPerkRewardsByLevel_ReturnValue' has a wrong offset!");
static_assert(offsetof(WI_PerkDetailsPanel_C_ShouldLockPerkSlot, CallFunc_Format_ReturnValue) == 0x0000F8, "Member 'WI_PerkDetailsPanel_C_ShouldLockPerkSlot::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(WI_PerkDetailsPanel_C_ShouldLockPerkSlot, CallFunc_Map_Keys_Keys) == 0x000108, "Member 'WI_PerkDetailsPanel_C_ShouldLockPerkSlot::CallFunc_Map_Keys_Keys' has a wrong offset!");
static_assert(offsetof(WI_PerkDetailsPanel_C_ShouldLockPerkSlot, CallFunc_ArraySortInteger_ReturnValue) == 0x000118, "Member 'WI_PerkDetailsPanel_C_ShouldLockPerkSlot::CallFunc_ArraySortInteger_ReturnValue' has a wrong offset!");
static_assert(offsetof(WI_PerkDetailsPanel_C_ShouldLockPerkSlot, CallFunc_Array_Length_ReturnValue) == 0x000128, "Member 'WI_PerkDetailsPanel_C_ShouldLockPerkSlot::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WI_PerkDetailsPanel_C_ShouldLockPerkSlot, CallFunc_Array_Get_Item) == 0x00012C, "Member 'WI_PerkDetailsPanel_C_ShouldLockPerkSlot::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WI_PerkDetailsPanel_C_ShouldLockPerkSlot, CallFunc_Less_IntInt_ReturnValue) == 0x000130, "Member 'WI_PerkDetailsPanel_C_ShouldLockPerkSlot::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WI_PerkDetailsPanel_C_ShouldLockPerkSlot, CallFunc_BooleanAND_ReturnValue) == 0x000131, "Member 'WI_PerkDetailsPanel_C_ShouldLockPerkSlot::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(WI_PerkDetailsPanel_C_ShouldLockPerkSlot, CallFunc_Map_Find_Value) == 0x000134, "Member 'WI_PerkDetailsPanel_C_ShouldLockPerkSlot::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(WI_PerkDetailsPanel_C_ShouldLockPerkSlot, CallFunc_Map_Find_ReturnValue) == 0x00013C, "Member 'WI_PerkDetailsPanel_C_ShouldLockPerkSlot::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(WI_PerkDetailsPanel_C_ShouldLockPerkSlot, CallFunc_MatchesTag_ReturnValue) == 0x00013D, "Member 'WI_PerkDetailsPanel_C_ShouldLockPerkSlot::CallFunc_MatchesTag_ReturnValue' has a wrong offset!");

}

