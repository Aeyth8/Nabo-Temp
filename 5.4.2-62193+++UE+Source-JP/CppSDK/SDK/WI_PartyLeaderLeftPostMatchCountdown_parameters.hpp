#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WI_PartyLeaderLeftPostMatchCountdown

#include "Basic.hpp"

#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function WI_PartyLeaderLeftPostMatchCountdown.WI_PartyLeaderLeftPostMatchCountdown_C.ExecuteUbergraph_WI_PartyLeaderLeftPostMatchCountdown
// 0x0020 (0x0020 - 0x0000)
struct WI_PartyLeaderLeftPostMatchCountdown_C_ExecuteUbergraph_WI_PartyLeaderLeftPostMatchCountdown final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0004(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0018(0x0008)(NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WI_PartyLeaderLeftPostMatchCountdown_C_ExecuteUbergraph_WI_PartyLeaderLeftPostMatchCountdown) == 0x000008, "Wrong alignment on WI_PartyLeaderLeftPostMatchCountdown_C_ExecuteUbergraph_WI_PartyLeaderLeftPostMatchCountdown");
static_assert(sizeof(WI_PartyLeaderLeftPostMatchCountdown_C_ExecuteUbergraph_WI_PartyLeaderLeftPostMatchCountdown) == 0x000020, "Wrong size on WI_PartyLeaderLeftPostMatchCountdown_C_ExecuteUbergraph_WI_PartyLeaderLeftPostMatchCountdown");
static_assert(offsetof(WI_PartyLeaderLeftPostMatchCountdown_C_ExecuteUbergraph_WI_PartyLeaderLeftPostMatchCountdown, EntryPoint) == 0x000000, "Member 'WI_PartyLeaderLeftPostMatchCountdown_C_ExecuteUbergraph_WI_PartyLeaderLeftPostMatchCountdown::EntryPoint' has a wrong offset!");
static_assert(offsetof(WI_PartyLeaderLeftPostMatchCountdown_C_ExecuteUbergraph_WI_PartyLeaderLeftPostMatchCountdown, K2Node_CreateDelegate_OutputDelegate) == 0x000004, "Member 'WI_PartyLeaderLeftPostMatchCountdown_C_ExecuteUbergraph_WI_PartyLeaderLeftPostMatchCountdown::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WI_PartyLeaderLeftPostMatchCountdown_C_ExecuteUbergraph_WI_PartyLeaderLeftPostMatchCountdown, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000018, "Member 'WI_PartyLeaderLeftPostMatchCountdown_C_ExecuteUbergraph_WI_PartyLeaderLeftPostMatchCountdown::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");

// Function WI_PartyLeaderLeftPostMatchCountdown.WI_PartyLeaderLeftPostMatchCountdown_C.Start
// 0x0008 (0x0008 - 0x0000)
struct WI_PartyLeaderLeftPostMatchCountdown_C_Start final
{
public:
	double                                        LeaveTime;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WI_PartyLeaderLeftPostMatchCountdown_C_Start) == 0x000008, "Wrong alignment on WI_PartyLeaderLeftPostMatchCountdown_C_Start");
static_assert(sizeof(WI_PartyLeaderLeftPostMatchCountdown_C_Start) == 0x000008, "Wrong size on WI_PartyLeaderLeftPostMatchCountdown_C_Start");
static_assert(offsetof(WI_PartyLeaderLeftPostMatchCountdown_C_Start, LeaveTime) == 0x000000, "Member 'WI_PartyLeaderLeftPostMatchCountdown_C_Start::LeaveTime' has a wrong offset!");

// Function WI_PartyLeaderLeftPostMatchCountdown.WI_PartyLeaderLeftPostMatchCountdown_C.UpdateTimerText
// 0x0090 (0x0090 - 0x0000)
struct WI_PartyLeaderLeftPostMatchCountdown_C_UpdateTimerText final
{
public:
	double                                        CallFunc_GetTimeSeconds_ReturnValue;               // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FMax_ReturnValue;                         // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_DoubleToText_ReturnValue;            // 0x0018(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0028(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0070(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0080(0x0010)()
};
static_assert(alignof(WI_PartyLeaderLeftPostMatchCountdown_C_UpdateTimerText) == 0x000008, "Wrong alignment on WI_PartyLeaderLeftPostMatchCountdown_C_UpdateTimerText");
static_assert(sizeof(WI_PartyLeaderLeftPostMatchCountdown_C_UpdateTimerText) == 0x000090, "Wrong size on WI_PartyLeaderLeftPostMatchCountdown_C_UpdateTimerText");
static_assert(offsetof(WI_PartyLeaderLeftPostMatchCountdown_C_UpdateTimerText, CallFunc_GetTimeSeconds_ReturnValue) == 0x000000, "Member 'WI_PartyLeaderLeftPostMatchCountdown_C_UpdateTimerText::CallFunc_GetTimeSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(WI_PartyLeaderLeftPostMatchCountdown_C_UpdateTimerText, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000008, "Member 'WI_PartyLeaderLeftPostMatchCountdown_C_UpdateTimerText::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WI_PartyLeaderLeftPostMatchCountdown_C_UpdateTimerText, CallFunc_FMax_ReturnValue) == 0x000010, "Member 'WI_PartyLeaderLeftPostMatchCountdown_C_UpdateTimerText::CallFunc_FMax_ReturnValue' has a wrong offset!");
static_assert(offsetof(WI_PartyLeaderLeftPostMatchCountdown_C_UpdateTimerText, CallFunc_Conv_DoubleToText_ReturnValue) == 0x000018, "Member 'WI_PartyLeaderLeftPostMatchCountdown_C_UpdateTimerText::CallFunc_Conv_DoubleToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WI_PartyLeaderLeftPostMatchCountdown_C_UpdateTimerText, K2Node_MakeStruct_FormatArgumentData) == 0x000028, "Member 'WI_PartyLeaderLeftPostMatchCountdown_C_UpdateTimerText::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(WI_PartyLeaderLeftPostMatchCountdown_C_UpdateTimerText, K2Node_MakeArray_Array) == 0x000070, "Member 'WI_PartyLeaderLeftPostMatchCountdown_C_UpdateTimerText::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(WI_PartyLeaderLeftPostMatchCountdown_C_UpdateTimerText, CallFunc_Format_ReturnValue) == 0x000080, "Member 'WI_PartyLeaderLeftPostMatchCountdown_C_UpdateTimerText::CallFunc_Format_ReturnValue' has a wrong offset!");

}

