#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GA_ThrowWrench

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "GA_Throw_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass GA_ThrowWrench.GA_ThrowWrench_C
// 0x0030 (0x0660 - 0x0630)
class UGA_ThrowWrench_C final : public UGA_Throw_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_GA_ThrowWrench_C;                   // 0x0630(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UClass*                                 WrenchProjectile;                                  // 0x0638(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	double                                        WrenchDamageMultiplier;                            // 0x0640(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           ChargeShakeTimer;                                  // 0x0648(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	double                                        LocalStartHoldTimeStamp;                           // 0x0650(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void AddCooldownGameplayCue();
	void AnimSetBlocking(bool Blocking);
	void DisableTrajectory();
	void Enable_Charge_Shake(bool Enable);
	void EnableTrajectory();
	void ExecuteUbergraph_GA_ThrowWrench(int32 EntryPoint);
	void K2_ActivateAbility();
	void K2_OnEndAbility(bool bWasCancelled);
	void LookForTargetsInFront(class ACharacter** FirstCharacterFound);
	void OnReleaseMontageEvent();
	void Play_Charge_Camera_Shake();
	void Reset_FOV();
	void Reset_Multigate_for_CS();
	void SetOnCooldown(bool Enable);
	void TryHomeTowardsCharacter(class ABP_ProjectileBase_C* Projectile);

	double GetDamage() const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"GA_ThrowWrench_C">();
	}
	static class UGA_ThrowWrench_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGA_ThrowWrench_C>();
	}
};
static_assert(alignof(UGA_ThrowWrench_C) == 0x000010, "Wrong alignment on UGA_ThrowWrench_C");
static_assert(sizeof(UGA_ThrowWrench_C) == 0x000660, "Wrong size on UGA_ThrowWrench_C");
static_assert(offsetof(UGA_ThrowWrench_C, UberGraphFrame_GA_ThrowWrench_C) == 0x000630, "Member 'UGA_ThrowWrench_C::UberGraphFrame_GA_ThrowWrench_C' has a wrong offset!");
static_assert(offsetof(UGA_ThrowWrench_C, WrenchProjectile) == 0x000638, "Member 'UGA_ThrowWrench_C::WrenchProjectile' has a wrong offset!");
static_assert(offsetof(UGA_ThrowWrench_C, WrenchDamageMultiplier) == 0x000640, "Member 'UGA_ThrowWrench_C::WrenchDamageMultiplier' has a wrong offset!");
static_assert(offsetof(UGA_ThrowWrench_C, ChargeShakeTimer) == 0x000648, "Member 'UGA_ThrowWrench_C::ChargeShakeTimer' has a wrong offset!");
static_assert(offsetof(UGA_ThrowWrench_C, LocalStartHoldTimeStamp) == 0x000650, "Member 'UGA_ThrowWrench_C::LocalStartHoldTimeStamp' has a wrong offset!");

}

