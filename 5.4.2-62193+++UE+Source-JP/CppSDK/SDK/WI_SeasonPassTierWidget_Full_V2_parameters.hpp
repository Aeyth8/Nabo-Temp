#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WI_SeasonPassTierWidget_Full_V2

#include "Basic.hpp"

#include "UMG_structs.hpp"
#include "JP_structs.hpp"


namespace SDK::Params
{

// Function WI_SeasonPassTierWidget_Full_V2.WI_SeasonPassTierWidget_Full_V2_C.DoApplyViewModel
// 0x0050 (0x0050 - 0x0000)
struct WI_SeasonPassTierWidget_Full_V2_C_DoApplyViewModel final
{
public:
	struct FSeasonPassTierViewModel               ViewModel;                                         // 0x0000(0x0028)(BlueprintVisible, BlueprintReadOnly, Parm)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_2;                              // 0x002B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_3;                              // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x002D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x002E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_1;                           // 0x002F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Subtract_DoubleDouble_A_ImplicitCast;     // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetPercent_InPercent_ImplicitCast;        // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WI_SeasonPassTierWidget_Full_V2_C_DoApplyViewModel) == 0x000008, "Wrong alignment on WI_SeasonPassTierWidget_Full_V2_C_DoApplyViewModel");
static_assert(sizeof(WI_SeasonPassTierWidget_Full_V2_C_DoApplyViewModel) == 0x000050, "Wrong size on WI_SeasonPassTierWidget_Full_V2_C_DoApplyViewModel");
static_assert(offsetof(WI_SeasonPassTierWidget_Full_V2_C_DoApplyViewModel, ViewModel) == 0x000000, "Member 'WI_SeasonPassTierWidget_Full_V2_C_DoApplyViewModel::ViewModel' has a wrong offset!");
static_assert(offsetof(WI_SeasonPassTierWidget_Full_V2_C_DoApplyViewModel, Temp_byte_Variable) == 0x000028, "Member 'WI_SeasonPassTierWidget_Full_V2_C_DoApplyViewModel::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WI_SeasonPassTierWidget_Full_V2_C_DoApplyViewModel, Temp_byte_Variable_1) == 0x000029, "Member 'WI_SeasonPassTierWidget_Full_V2_C_DoApplyViewModel::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WI_SeasonPassTierWidget_Full_V2_C_DoApplyViewModel, Temp_bool_Variable) == 0x00002A, "Member 'WI_SeasonPassTierWidget_Full_V2_C_DoApplyViewModel::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WI_SeasonPassTierWidget_Full_V2_C_DoApplyViewModel, Temp_byte_Variable_2) == 0x00002B, "Member 'WI_SeasonPassTierWidget_Full_V2_C_DoApplyViewModel::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(WI_SeasonPassTierWidget_Full_V2_C_DoApplyViewModel, Temp_byte_Variable_3) == 0x00002C, "Member 'WI_SeasonPassTierWidget_Full_V2_C_DoApplyViewModel::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(WI_SeasonPassTierWidget_Full_V2_C_DoApplyViewModel, Temp_bool_Variable_1) == 0x00002D, "Member 'WI_SeasonPassTierWidget_Full_V2_C_DoApplyViewModel::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(WI_SeasonPassTierWidget_Full_V2_C_DoApplyViewModel, K2Node_Select_Default) == 0x00002E, "Member 'WI_SeasonPassTierWidget_Full_V2_C_DoApplyViewModel::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WI_SeasonPassTierWidget_Full_V2_C_DoApplyViewModel, K2Node_Select_Default_1) == 0x00002F, "Member 'WI_SeasonPassTierWidget_Full_V2_C_DoApplyViewModel::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(WI_SeasonPassTierWidget_Full_V2_C_DoApplyViewModel, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000030, "Member 'WI_SeasonPassTierWidget_Full_V2_C_DoApplyViewModel::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WI_SeasonPassTierWidget_Full_V2_C_DoApplyViewModel, CallFunc_Add_IntInt_ReturnValue) == 0x000038, "Member 'WI_SeasonPassTierWidget_Full_V2_C_DoApplyViewModel::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WI_SeasonPassTierWidget_Full_V2_C_DoApplyViewModel, CallFunc_Subtract_DoubleDouble_A_ImplicitCast) == 0x000040, "Member 'WI_SeasonPassTierWidget_Full_V2_C_DoApplyViewModel::CallFunc_Subtract_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WI_SeasonPassTierWidget_Full_V2_C_DoApplyViewModel, CallFunc_SetPercent_InPercent_ImplicitCast) == 0x000048, "Member 'WI_SeasonPassTierWidget_Full_V2_C_DoApplyViewModel::CallFunc_SetPercent_InPercent_ImplicitCast' has a wrong offset!");

// Function WI_SeasonPassTierWidget_Full_V2.WI_SeasonPassTierWidget_Full_V2_C.ExecuteUbergraph_WI_SeasonPassTierWidget_Full_V2
// 0x0030 (0x0030 - 0x0000)
struct WI_SeasonPassTierWidget_Full_V2_C_ExecuteUbergraph_WI_SeasonPassTierWidget_Full_V2 final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSeasonPassTierViewModel               K2Node_Event_ViewModel;                            // 0x0008(0x0028)(ConstParm)
};
static_assert(alignof(WI_SeasonPassTierWidget_Full_V2_C_ExecuteUbergraph_WI_SeasonPassTierWidget_Full_V2) == 0x000008, "Wrong alignment on WI_SeasonPassTierWidget_Full_V2_C_ExecuteUbergraph_WI_SeasonPassTierWidget_Full_V2");
static_assert(sizeof(WI_SeasonPassTierWidget_Full_V2_C_ExecuteUbergraph_WI_SeasonPassTierWidget_Full_V2) == 0x000030, "Wrong size on WI_SeasonPassTierWidget_Full_V2_C_ExecuteUbergraph_WI_SeasonPassTierWidget_Full_V2");
static_assert(offsetof(WI_SeasonPassTierWidget_Full_V2_C_ExecuteUbergraph_WI_SeasonPassTierWidget_Full_V2, EntryPoint) == 0x000000, "Member 'WI_SeasonPassTierWidget_Full_V2_C_ExecuteUbergraph_WI_SeasonPassTierWidget_Full_V2::EntryPoint' has a wrong offset!");
static_assert(offsetof(WI_SeasonPassTierWidget_Full_V2_C_ExecuteUbergraph_WI_SeasonPassTierWidget_Full_V2, K2Node_Event_ViewModel) == 0x000008, "Member 'WI_SeasonPassTierWidget_Full_V2_C_ExecuteUbergraph_WI_SeasonPassTierWidget_Full_V2::K2Node_Event_ViewModel' has a wrong offset!");

// Function WI_SeasonPassTierWidget_Full_V2.WI_SeasonPassTierWidget_Full_V2_C.K2_ApplyViewModel
// 0x0028 (0x0028 - 0x0000)
struct WI_SeasonPassTierWidget_Full_V2_C_K2_ApplyViewModel final
{
public:
	struct FSeasonPassTierViewModel               ViewModel;                                         // 0x0000(0x0028)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(WI_SeasonPassTierWidget_Full_V2_C_K2_ApplyViewModel) == 0x000008, "Wrong alignment on WI_SeasonPassTierWidget_Full_V2_C_K2_ApplyViewModel");
static_assert(sizeof(WI_SeasonPassTierWidget_Full_V2_C_K2_ApplyViewModel) == 0x000028, "Wrong size on WI_SeasonPassTierWidget_Full_V2_C_K2_ApplyViewModel");
static_assert(offsetof(WI_SeasonPassTierWidget_Full_V2_C_K2_ApplyViewModel, ViewModel) == 0x000000, "Member 'WI_SeasonPassTierWidget_Full_V2_C_K2_ApplyViewModel::ViewModel' has a wrong offset!");

// Function WI_SeasonPassTierWidget_Full_V2.WI_SeasonPassTierWidget_Full_V2_C.SetUnlockedState
// 0x0009 (0x0009 - 0x0000)
struct WI_SeasonPassTierWidget_Full_V2_C_SetUnlockedState final
{
public:
	bool                                          Unlocked;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_2;                              // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_3;                              // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_1;                           // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WI_SeasonPassTierWidget_Full_V2_C_SetUnlockedState) == 0x000001, "Wrong alignment on WI_SeasonPassTierWidget_Full_V2_C_SetUnlockedState");
static_assert(sizeof(WI_SeasonPassTierWidget_Full_V2_C_SetUnlockedState) == 0x000009, "Wrong size on WI_SeasonPassTierWidget_Full_V2_C_SetUnlockedState");
static_assert(offsetof(WI_SeasonPassTierWidget_Full_V2_C_SetUnlockedState, Unlocked) == 0x000000, "Member 'WI_SeasonPassTierWidget_Full_V2_C_SetUnlockedState::Unlocked' has a wrong offset!");
static_assert(offsetof(WI_SeasonPassTierWidget_Full_V2_C_SetUnlockedState, Temp_bool_Variable) == 0x000001, "Member 'WI_SeasonPassTierWidget_Full_V2_C_SetUnlockedState::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WI_SeasonPassTierWidget_Full_V2_C_SetUnlockedState, Temp_byte_Variable) == 0x000002, "Member 'WI_SeasonPassTierWidget_Full_V2_C_SetUnlockedState::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WI_SeasonPassTierWidget_Full_V2_C_SetUnlockedState, Temp_byte_Variable_1) == 0x000003, "Member 'WI_SeasonPassTierWidget_Full_V2_C_SetUnlockedState::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WI_SeasonPassTierWidget_Full_V2_C_SetUnlockedState, Temp_bool_Variable_1) == 0x000004, "Member 'WI_SeasonPassTierWidget_Full_V2_C_SetUnlockedState::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(WI_SeasonPassTierWidget_Full_V2_C_SetUnlockedState, Temp_byte_Variable_2) == 0x000005, "Member 'WI_SeasonPassTierWidget_Full_V2_C_SetUnlockedState::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(WI_SeasonPassTierWidget_Full_V2_C_SetUnlockedState, Temp_byte_Variable_3) == 0x000006, "Member 'WI_SeasonPassTierWidget_Full_V2_C_SetUnlockedState::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(WI_SeasonPassTierWidget_Full_V2_C_SetUnlockedState, K2Node_Select_Default) == 0x000007, "Member 'WI_SeasonPassTierWidget_Full_V2_C_SetUnlockedState::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WI_SeasonPassTierWidget_Full_V2_C_SetUnlockedState, K2Node_Select_Default_1) == 0x000008, "Member 'WI_SeasonPassTierWidget_Full_V2_C_SetUnlockedState::K2Node_Select_Default_1' has a wrong offset!");

// Function WI_SeasonPassTierWidget_Full_V2.WI_SeasonPassTierWidget_Full_V2_C.UpdateReward
// 0x0018 (0x0018 - 0x0000)
struct WI_SeasonPassTierWidget_Full_V2_C_UpdateReward final
{
public:
	class UClass*                                 CallFunc_LoadClassAsset_Blocking_ReturnValue;      // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 K2Node_ClassDynamicCast_AsSeason_Pass_Single_Reward_Entry_Widget; // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ClassDynamicCast_bSuccess;                  // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WI_SeasonPassTierWidget_Full_V2_C_UpdateReward) == 0x000008, "Wrong alignment on WI_SeasonPassTierWidget_Full_V2_C_UpdateReward");
static_assert(sizeof(WI_SeasonPassTierWidget_Full_V2_C_UpdateReward) == 0x000018, "Wrong size on WI_SeasonPassTierWidget_Full_V2_C_UpdateReward");
static_assert(offsetof(WI_SeasonPassTierWidget_Full_V2_C_UpdateReward, CallFunc_LoadClassAsset_Blocking_ReturnValue) == 0x000000, "Member 'WI_SeasonPassTierWidget_Full_V2_C_UpdateReward::CallFunc_LoadClassAsset_Blocking_ReturnValue' has a wrong offset!");
static_assert(offsetof(WI_SeasonPassTierWidget_Full_V2_C_UpdateReward, K2Node_ClassDynamicCast_AsSeason_Pass_Single_Reward_Entry_Widget) == 0x000008, "Member 'WI_SeasonPassTierWidget_Full_V2_C_UpdateReward::K2Node_ClassDynamicCast_AsSeason_Pass_Single_Reward_Entry_Widget' has a wrong offset!");
static_assert(offsetof(WI_SeasonPassTierWidget_Full_V2_C_UpdateReward, K2Node_ClassDynamicCast_bSuccess) == 0x000010, "Member 'WI_SeasonPassTierWidget_Full_V2_C_UpdateReward::K2Node_ClassDynamicCast_bSuccess' has a wrong offset!");

}

