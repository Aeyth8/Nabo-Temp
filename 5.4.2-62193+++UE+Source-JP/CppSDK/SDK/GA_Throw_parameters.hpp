#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GA_Throw

#include "Basic.hpp"

#include "GameplayTags_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "GameplayAbilities_structs.hpp"


namespace SDK::Params
{

// Function GA_Throw.GA_Throw_C.CreateCosmeticProjectileCueParameters
// 0x0268 (0x0268 - 0x0000)
struct GA_Throw_C_CreateCosmeticProjectileCueParameters final
{
public:
	struct FGameplayCueParameters                 ReturnValue;                                       // 0x0000(0x00D8)(Parm, OutParm, ReturnParm, ContainsInstancedReference)
	bool                                          Temp_bool_Variable;                                // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D9[0x7];                                       // 0x00D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagContainer                  Temp_struct_Variable;                              // 0x00E0(0x0020)()
	struct FGameplayTagContainer                  Temp_struct_Variable_1;                            // 0x0100(0x0020)()
	class AActor*                                 CallFunc_GetOwningActorFromActorInfo_ReturnValue;  // 0x0120(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UEquipmentInstance*                     CallFunc_GetAssociatedEquipment_ReturnValue;       // 0x0128(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_131[0x7];                                      // 0x0131(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagContainer                  K2Node_Select_Default;                             // 0x0138(0x0020)()
	double                                        CallFunc_GetSpeed_ReturnValue;                     // 0x0158(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetAvatarActorFromActorInfo_ReturnValue;  // 0x0160(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_ResidentCharacter_C*                K2Node_DynamicCast_AsBP_Resident_Character;        // 0x0168(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0170(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_171[0x7];                                      // 0x0171(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayCueParameters                 CallFunc_MakeGameplayCueParameters_ReturnValue;    // 0x0178(0x00D8)(ContainsInstancedReference)
	float                                         CallFunc_MakeGameplayCueParameters_RawMagnitude_ImplicitCast; // 0x0250(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_254[0x4];                                      // 0x0254(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GetSpeed_TimeHeld_ImplicitCast;           // 0x0258(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeGameplayCueParameters_NormalizedMagnitude_ImplicitCast; // 0x0260(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_Throw_C_CreateCosmeticProjectileCueParameters) == 0x000008, "Wrong alignment on GA_Throw_C_CreateCosmeticProjectileCueParameters");
static_assert(sizeof(GA_Throw_C_CreateCosmeticProjectileCueParameters) == 0x000268, "Wrong size on GA_Throw_C_CreateCosmeticProjectileCueParameters");
static_assert(offsetof(GA_Throw_C_CreateCosmeticProjectileCueParameters, ReturnValue) == 0x000000, "Member 'GA_Throw_C_CreateCosmeticProjectileCueParameters::ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Throw_C_CreateCosmeticProjectileCueParameters, Temp_bool_Variable) == 0x0000D8, "Member 'GA_Throw_C_CreateCosmeticProjectileCueParameters::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(GA_Throw_C_CreateCosmeticProjectileCueParameters, Temp_struct_Variable) == 0x0000E0, "Member 'GA_Throw_C_CreateCosmeticProjectileCueParameters::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(GA_Throw_C_CreateCosmeticProjectileCueParameters, Temp_struct_Variable_1) == 0x000100, "Member 'GA_Throw_C_CreateCosmeticProjectileCueParameters::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(GA_Throw_C_CreateCosmeticProjectileCueParameters, CallFunc_GetOwningActorFromActorInfo_ReturnValue) == 0x000120, "Member 'GA_Throw_C_CreateCosmeticProjectileCueParameters::CallFunc_GetOwningActorFromActorInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Throw_C_CreateCosmeticProjectileCueParameters, CallFunc_GetAssociatedEquipment_ReturnValue) == 0x000128, "Member 'GA_Throw_C_CreateCosmeticProjectileCueParameters::CallFunc_GetAssociatedEquipment_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Throw_C_CreateCosmeticProjectileCueParameters, CallFunc_HasAuthority_ReturnValue) == 0x000130, "Member 'GA_Throw_C_CreateCosmeticProjectileCueParameters::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Throw_C_CreateCosmeticProjectileCueParameters, K2Node_Select_Default) == 0x000138, "Member 'GA_Throw_C_CreateCosmeticProjectileCueParameters::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(GA_Throw_C_CreateCosmeticProjectileCueParameters, CallFunc_GetSpeed_ReturnValue) == 0x000158, "Member 'GA_Throw_C_CreateCosmeticProjectileCueParameters::CallFunc_GetSpeed_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Throw_C_CreateCosmeticProjectileCueParameters, CallFunc_GetAvatarActorFromActorInfo_ReturnValue) == 0x000160, "Member 'GA_Throw_C_CreateCosmeticProjectileCueParameters::CallFunc_GetAvatarActorFromActorInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Throw_C_CreateCosmeticProjectileCueParameters, K2Node_DynamicCast_AsBP_Resident_Character) == 0x000168, "Member 'GA_Throw_C_CreateCosmeticProjectileCueParameters::K2Node_DynamicCast_AsBP_Resident_Character' has a wrong offset!");
static_assert(offsetof(GA_Throw_C_CreateCosmeticProjectileCueParameters, K2Node_DynamicCast_bSuccess) == 0x000170, "Member 'GA_Throw_C_CreateCosmeticProjectileCueParameters::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(GA_Throw_C_CreateCosmeticProjectileCueParameters, CallFunc_MakeGameplayCueParameters_ReturnValue) == 0x000178, "Member 'GA_Throw_C_CreateCosmeticProjectileCueParameters::CallFunc_MakeGameplayCueParameters_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Throw_C_CreateCosmeticProjectileCueParameters, CallFunc_MakeGameplayCueParameters_RawMagnitude_ImplicitCast) == 0x000250, "Member 'GA_Throw_C_CreateCosmeticProjectileCueParameters::CallFunc_MakeGameplayCueParameters_RawMagnitude_ImplicitCast' has a wrong offset!");
static_assert(offsetof(GA_Throw_C_CreateCosmeticProjectileCueParameters, CallFunc_GetSpeed_TimeHeld_ImplicitCast) == 0x000258, "Member 'GA_Throw_C_CreateCosmeticProjectileCueParameters::CallFunc_GetSpeed_TimeHeld_ImplicitCast' has a wrong offset!");
static_assert(offsetof(GA_Throw_C_CreateCosmeticProjectileCueParameters, CallFunc_MakeGameplayCueParameters_NormalizedMagnitude_ImplicitCast) == 0x000260, "Member 'GA_Throw_C_CreateCosmeticProjectileCueParameters::CallFunc_MakeGameplayCueParameters_NormalizedMagnitude_ImplicitCast' has a wrong offset!");

// Function GA_Throw.GA_Throw_C.DisableTrajectory
// 0x0002 (0x0002 - 0x0000)
struct GA_Throw_C_DisableTrajectory final
{
public:
	bool                                          CallFunc_IsLocallyControlled_ReturnValue;          // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_Throw_C_DisableTrajectory) == 0x000001, "Wrong alignment on GA_Throw_C_DisableTrajectory");
static_assert(sizeof(GA_Throw_C_DisableTrajectory) == 0x000002, "Wrong size on GA_Throw_C_DisableTrajectory");
static_assert(offsetof(GA_Throw_C_DisableTrajectory, CallFunc_IsLocallyControlled_ReturnValue) == 0x000000, "Member 'GA_Throw_C_DisableTrajectory::CallFunc_IsLocallyControlled_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Throw_C_DisableTrajectory, CallFunc_IsValid_ReturnValue) == 0x000001, "Member 'GA_Throw_C_DisableTrajectory::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function GA_Throw.GA_Throw_C.EnableTrajectory
// 0x0090 (0x0090 - 0x0000)
struct GA_Throw_C_EnableTrajectory final
{
public:
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0000(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0060(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x0068(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLocallyControlled_ReturnValue;          // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_71[0x7];                                       // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABp_Trajectory_C*                       CallFunc_FinishSpawningActor_ReturnValue;          // 0x0078(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class II_Trajectoryable_C>   CallFunc_SetInterfacePropertyByName_Value_CastInput; // 0x0080(0x0010)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
};
static_assert(alignof(GA_Throw_C_EnableTrajectory) == 0x000010, "Wrong alignment on GA_Throw_C_EnableTrajectory");
static_assert(sizeof(GA_Throw_C_EnableTrajectory) == 0x000090, "Wrong size on GA_Throw_C_EnableTrajectory");
static_assert(offsetof(GA_Throw_C_EnableTrajectory, CallFunc_MakeTransform_ReturnValue) == 0x000000, "Member 'GA_Throw_C_EnableTrajectory::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Throw_C_EnableTrajectory, CallFunc_GetPlayerController_ReturnValue) == 0x000060, "Member 'GA_Throw_C_EnableTrajectory::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Throw_C_EnableTrajectory, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x000068, "Member 'GA_Throw_C_EnableTrajectory::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Throw_C_EnableTrajectory, CallFunc_IsLocallyControlled_ReturnValue) == 0x000070, "Member 'GA_Throw_C_EnableTrajectory::CallFunc_IsLocallyControlled_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Throw_C_EnableTrajectory, CallFunc_FinishSpawningActor_ReturnValue) == 0x000078, "Member 'GA_Throw_C_EnableTrajectory::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Throw_C_EnableTrajectory, CallFunc_SetInterfacePropertyByName_Value_CastInput) == 0x000080, "Member 'GA_Throw_C_EnableTrajectory::CallFunc_SetInterfacePropertyByName_Value_CastInput' has a wrong offset!");

// Function GA_Throw.GA_Throw_C.EndWaitDelayTaskIfExists
// 0x0001 (0x0001 - 0x0000)
struct GA_Throw_C_EndWaitDelayTaskIfExists final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_Throw_C_EndWaitDelayTaskIfExists) == 0x000001, "Wrong alignment on GA_Throw_C_EndWaitDelayTaskIfExists");
static_assert(sizeof(GA_Throw_C_EndWaitDelayTaskIfExists) == 0x000001, "Wrong size on GA_Throw_C_EndWaitDelayTaskIfExists");
static_assert(offsetof(GA_Throw_C_EndWaitDelayTaskIfExists, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'GA_Throw_C_EndWaitDelayTaskIfExists::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function GA_Throw.GA_Throw_C.EndWaitTagTaskIfExists
// 0x0001 (0x0001 - 0x0000)
struct GA_Throw_C_EndWaitTagTaskIfExists final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_Throw_C_EndWaitTagTaskIfExists) == 0x000001, "Wrong alignment on GA_Throw_C_EndWaitTagTaskIfExists");
static_assert(sizeof(GA_Throw_C_EndWaitTagTaskIfExists) == 0x000001, "Wrong size on GA_Throw_C_EndWaitTagTaskIfExists");
static_assert(offsetof(GA_Throw_C_EndWaitTagTaskIfExists, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'GA_Throw_C_EndWaitTagTaskIfExists::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function GA_Throw.GA_Throw_C.ExecuteUbergraph_GA_Throw
// 0x0340 (0x0340 - 0x0000)
struct GA_Throw_C_ExecuteUbergraph_GA_Throw final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UItemInstance*                          CallFunc_GetAssociatedItem_ReturnValue;            // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetTagStackCount_ReturnValue;             // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAbilityTask_WaitDelay*                 CallFunc_WaitDelay_ReturnValue;                    // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x002C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_TimeHeld;                       // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(float TimeHeld)>               K2Node_CreateDelegate_OutputDelegate_1;            // 0x0040(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_real_Variable;                                // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_54[0x4];                                       // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAbilityTask_WaitInputRelease*          CallFunc_WaitInputRelease_ReturnValue;             // 0x0058(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_CommitAbility_ReturnValue;             // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_HasAuthority_ReturnValue;              // 0x0062(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_63[0xD];                                       // 0x0063(0x000D)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             K2Node_CustomEvent_Spawn_Transform;                // 0x0070(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  K2Node_CustomEvent_Owner;                          // 0x00D0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_CustomEvent_LocalVelocity;                  // 0x00D8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 K2Node_CustomEvent_Projectile_Class;               // 0x00F0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_CustomEvent_Damage;                         // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_CustomEvent_Speed;                          // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_CustomEvent_StructureDamageMultiplier;      // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_CustomEvent_GravityScale;                   // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetTagStackCount_ReturnValue_1;           // 0x0118(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x011C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11D[0x3];                                      // 0x011D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_2;            // 0x0120(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           CallFunc_Array_Get_Item;                           // 0x0130(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_3;            // 0x0138(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           CallFunc_Array_Get_Item_1;                         // 0x0148(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UEquipmentInstance*                     CallFunc_GetAssociatedEquipment_ReturnValue;       // 0x0150(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UChargableEquipmentInstance_C*          K2Node_DynamicCast_AsChargable_Equipment_Instance; // 0x0158(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0160(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bWasCancelled;                        // 0x0161(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_162[0x2];                                      // 0x0162(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetTagStackCount_ReturnValue_2;           // 0x0164(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_1;           // 0x0168(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_169[0x7];                                      // 0x0169(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwningActorFromActorInfo_ReturnValue;  // 0x0170(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAbilityAsync_WaitGameplayTagAdded*     CallFunc_WaitGameplayTagAddToActor_ReturnValue;    // 0x0178(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0180(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_181[0x7];                                      // 0x0181(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0188(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_GetProjectileData_Spawn_Transform;        // 0x0190(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_ResidentCharacter_C*                CallFunc_GetProjectileData_Owner;                  // 0x01F0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetProjectileData_LocalSpaceVelocity;     // 0x01F8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 CallFunc_GetProjectileData_ProjectileClass;        // 0x0210(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetProjectileData_Damage;                 // 0x0218(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetProjectileData_Speed;                  // 0x0220(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetProjectileData_GravityScale;           // 0x0228(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetServerWorldTimeSeconds_ReturnValue;    // 0x0230(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Get_Structure_Damage_Multiplier_Damage_Multiplier; // 0x0238(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Get_Structure_Damage_Multiplier_MultiplierFound; // 0x023C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_23D[0x3];                                      // 0x023D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetTagStackCount_ReturnValue_3;           // 0x0240(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0244(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_245[0x3];                                      // 0x0245(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UEquipmentInstance*                     CallFunc_GetAssociatedEquipment_ReturnValue_1;     // 0x0248(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayCueParameters                 CallFunc_MakeGameplayCueParameters_ReturnValue;    // 0x0250(0x00D8)(ContainsInstancedReference)
	float                                         CallFunc_MakeGameplayCueParameters_NormalizedMagnitude_ImplicitCast; // 0x0328(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeGameplayCueParameters_RawMagnitude_ImplicitCast; // 0x032C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetProjectileData_TimeHeld_ImplicitCast;  // 0x0330(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Server_SpawnProjectile_StructureDamageMultiplier_ImplicitCast; // 0x0338(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_Throw_C_ExecuteUbergraph_GA_Throw) == 0x000010, "Wrong alignment on GA_Throw_C_ExecuteUbergraph_GA_Throw");
static_assert(sizeof(GA_Throw_C_ExecuteUbergraph_GA_Throw) == 0x000340, "Wrong size on GA_Throw_C_ExecuteUbergraph_GA_Throw");
static_assert(offsetof(GA_Throw_C_ExecuteUbergraph_GA_Throw, EntryPoint) == 0x000000, "Member 'GA_Throw_C_ExecuteUbergraph_GA_Throw::EntryPoint' has a wrong offset!");
static_assert(offsetof(GA_Throw_C_ExecuteUbergraph_GA_Throw, CallFunc_GetAssociatedItem_ReturnValue) == 0x000008, "Member 'GA_Throw_C_ExecuteUbergraph_GA_Throw::CallFunc_GetAssociatedItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Throw_C_ExecuteUbergraph_GA_Throw, CallFunc_GetTagStackCount_ReturnValue) == 0x000010, "Member 'GA_Throw_C_ExecuteUbergraph_GA_Throw::CallFunc_GetTagStackCount_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Throw_C_ExecuteUbergraph_GA_Throw, CallFunc_WaitDelay_ReturnValue) == 0x000018, "Member 'GA_Throw_C_ExecuteUbergraph_GA_Throw::CallFunc_WaitDelay_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Throw_C_ExecuteUbergraph_GA_Throw, CallFunc_Conv_IntToDouble_ReturnValue) == 0x000020, "Member 'GA_Throw_C_ExecuteUbergraph_GA_Throw::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Throw_C_ExecuteUbergraph_GA_Throw, CallFunc_IsValid_ReturnValue) == 0x000028, "Member 'GA_Throw_C_ExecuteUbergraph_GA_Throw::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Throw_C_ExecuteUbergraph_GA_Throw, K2Node_CreateDelegate_OutputDelegate) == 0x00002C, "Member 'GA_Throw_C_ExecuteUbergraph_GA_Throw::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(GA_Throw_C_ExecuteUbergraph_GA_Throw, K2Node_CustomEvent_TimeHeld) == 0x00003C, "Member 'GA_Throw_C_ExecuteUbergraph_GA_Throw::K2Node_CustomEvent_TimeHeld' has a wrong offset!");
static_assert(offsetof(GA_Throw_C_ExecuteUbergraph_GA_Throw, K2Node_CreateDelegate_OutputDelegate_1) == 0x000040, "Member 'GA_Throw_C_ExecuteUbergraph_GA_Throw::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(GA_Throw_C_ExecuteUbergraph_GA_Throw, Temp_real_Variable) == 0x000050, "Member 'GA_Throw_C_ExecuteUbergraph_GA_Throw::Temp_real_Variable' has a wrong offset!");
static_assert(offsetof(GA_Throw_C_ExecuteUbergraph_GA_Throw, CallFunc_WaitInputRelease_ReturnValue) == 0x000058, "Member 'GA_Throw_C_ExecuteUbergraph_GA_Throw::CallFunc_WaitInputRelease_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Throw_C_ExecuteUbergraph_GA_Throw, CallFunc_IsValid_ReturnValue_1) == 0x000060, "Member 'GA_Throw_C_ExecuteUbergraph_GA_Throw::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_Throw_C_ExecuteUbergraph_GA_Throw, CallFunc_K2_CommitAbility_ReturnValue) == 0x000061, "Member 'GA_Throw_C_ExecuteUbergraph_GA_Throw::CallFunc_K2_CommitAbility_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Throw_C_ExecuteUbergraph_GA_Throw, CallFunc_K2_HasAuthority_ReturnValue) == 0x000062, "Member 'GA_Throw_C_ExecuteUbergraph_GA_Throw::CallFunc_K2_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Throw_C_ExecuteUbergraph_GA_Throw, K2Node_CustomEvent_Spawn_Transform) == 0x000070, "Member 'GA_Throw_C_ExecuteUbergraph_GA_Throw::K2Node_CustomEvent_Spawn_Transform' has a wrong offset!");
static_assert(offsetof(GA_Throw_C_ExecuteUbergraph_GA_Throw, K2Node_CustomEvent_Owner) == 0x0000D0, "Member 'GA_Throw_C_ExecuteUbergraph_GA_Throw::K2Node_CustomEvent_Owner' has a wrong offset!");
static_assert(offsetof(GA_Throw_C_ExecuteUbergraph_GA_Throw, K2Node_CustomEvent_LocalVelocity) == 0x0000D8, "Member 'GA_Throw_C_ExecuteUbergraph_GA_Throw::K2Node_CustomEvent_LocalVelocity' has a wrong offset!");
static_assert(offsetof(GA_Throw_C_ExecuteUbergraph_GA_Throw, K2Node_CustomEvent_Projectile_Class) == 0x0000F0, "Member 'GA_Throw_C_ExecuteUbergraph_GA_Throw::K2Node_CustomEvent_Projectile_Class' has a wrong offset!");
static_assert(offsetof(GA_Throw_C_ExecuteUbergraph_GA_Throw, K2Node_CustomEvent_Damage) == 0x0000F8, "Member 'GA_Throw_C_ExecuteUbergraph_GA_Throw::K2Node_CustomEvent_Damage' has a wrong offset!");
static_assert(offsetof(GA_Throw_C_ExecuteUbergraph_GA_Throw, K2Node_CustomEvent_Speed) == 0x000100, "Member 'GA_Throw_C_ExecuteUbergraph_GA_Throw::K2Node_CustomEvent_Speed' has a wrong offset!");
static_assert(offsetof(GA_Throw_C_ExecuteUbergraph_GA_Throw, K2Node_CustomEvent_StructureDamageMultiplier) == 0x000108, "Member 'GA_Throw_C_ExecuteUbergraph_GA_Throw::K2Node_CustomEvent_StructureDamageMultiplier' has a wrong offset!");
static_assert(offsetof(GA_Throw_C_ExecuteUbergraph_GA_Throw, K2Node_CustomEvent_GravityScale) == 0x000110, "Member 'GA_Throw_C_ExecuteUbergraph_GA_Throw::K2Node_CustomEvent_GravityScale' has a wrong offset!");
static_assert(offsetof(GA_Throw_C_ExecuteUbergraph_GA_Throw, CallFunc_GetTagStackCount_ReturnValue_1) == 0x000118, "Member 'GA_Throw_C_ExecuteUbergraph_GA_Throw::CallFunc_GetTagStackCount_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_Throw_C_ExecuteUbergraph_GA_Throw, CallFunc_LessEqual_IntInt_ReturnValue) == 0x00011C, "Member 'GA_Throw_C_ExecuteUbergraph_GA_Throw::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Throw_C_ExecuteUbergraph_GA_Throw, K2Node_CreateDelegate_OutputDelegate_2) == 0x000120, "Member 'GA_Throw_C_ExecuteUbergraph_GA_Throw::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(GA_Throw_C_ExecuteUbergraph_GA_Throw, CallFunc_Array_Get_Item) == 0x000130, "Member 'GA_Throw_C_ExecuteUbergraph_GA_Throw::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(GA_Throw_C_ExecuteUbergraph_GA_Throw, K2Node_CreateDelegate_OutputDelegate_3) == 0x000138, "Member 'GA_Throw_C_ExecuteUbergraph_GA_Throw::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(GA_Throw_C_ExecuteUbergraph_GA_Throw, CallFunc_Array_Get_Item_1) == 0x000148, "Member 'GA_Throw_C_ExecuteUbergraph_GA_Throw::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(GA_Throw_C_ExecuteUbergraph_GA_Throw, CallFunc_GetAssociatedEquipment_ReturnValue) == 0x000150, "Member 'GA_Throw_C_ExecuteUbergraph_GA_Throw::CallFunc_GetAssociatedEquipment_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Throw_C_ExecuteUbergraph_GA_Throw, K2Node_DynamicCast_AsChargable_Equipment_Instance) == 0x000158, "Member 'GA_Throw_C_ExecuteUbergraph_GA_Throw::K2Node_DynamicCast_AsChargable_Equipment_Instance' has a wrong offset!");
static_assert(offsetof(GA_Throw_C_ExecuteUbergraph_GA_Throw, K2Node_DynamicCast_bSuccess) == 0x000160, "Member 'GA_Throw_C_ExecuteUbergraph_GA_Throw::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(GA_Throw_C_ExecuteUbergraph_GA_Throw, K2Node_Event_bWasCancelled) == 0x000161, "Member 'GA_Throw_C_ExecuteUbergraph_GA_Throw::K2Node_Event_bWasCancelled' has a wrong offset!");
static_assert(offsetof(GA_Throw_C_ExecuteUbergraph_GA_Throw, CallFunc_GetTagStackCount_ReturnValue_2) == 0x000164, "Member 'GA_Throw_C_ExecuteUbergraph_GA_Throw::CallFunc_GetTagStackCount_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GA_Throw_C_ExecuteUbergraph_GA_Throw, CallFunc_LessEqual_IntInt_ReturnValue_1) == 0x000168, "Member 'GA_Throw_C_ExecuteUbergraph_GA_Throw::CallFunc_LessEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_Throw_C_ExecuteUbergraph_GA_Throw, CallFunc_GetOwningActorFromActorInfo_ReturnValue) == 0x000170, "Member 'GA_Throw_C_ExecuteUbergraph_GA_Throw::CallFunc_GetOwningActorFromActorInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Throw_C_ExecuteUbergraph_GA_Throw, CallFunc_WaitGameplayTagAddToActor_ReturnValue) == 0x000178, "Member 'GA_Throw_C_ExecuteUbergraph_GA_Throw::CallFunc_WaitGameplayTagAddToActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Throw_C_ExecuteUbergraph_GA_Throw, CallFunc_IsValid_ReturnValue_2) == 0x000180, "Member 'GA_Throw_C_ExecuteUbergraph_GA_Throw::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GA_Throw_C_ExecuteUbergraph_GA_Throw, CallFunc_GetGameState_ReturnValue) == 0x000188, "Member 'GA_Throw_C_ExecuteUbergraph_GA_Throw::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Throw_C_ExecuteUbergraph_GA_Throw, CallFunc_GetProjectileData_Spawn_Transform) == 0x000190, "Member 'GA_Throw_C_ExecuteUbergraph_GA_Throw::CallFunc_GetProjectileData_Spawn_Transform' has a wrong offset!");
static_assert(offsetof(GA_Throw_C_ExecuteUbergraph_GA_Throw, CallFunc_GetProjectileData_Owner) == 0x0001F0, "Member 'GA_Throw_C_ExecuteUbergraph_GA_Throw::CallFunc_GetProjectileData_Owner' has a wrong offset!");
static_assert(offsetof(GA_Throw_C_ExecuteUbergraph_GA_Throw, CallFunc_GetProjectileData_LocalSpaceVelocity) == 0x0001F8, "Member 'GA_Throw_C_ExecuteUbergraph_GA_Throw::CallFunc_GetProjectileData_LocalSpaceVelocity' has a wrong offset!");
static_assert(offsetof(GA_Throw_C_ExecuteUbergraph_GA_Throw, CallFunc_GetProjectileData_ProjectileClass) == 0x000210, "Member 'GA_Throw_C_ExecuteUbergraph_GA_Throw::CallFunc_GetProjectileData_ProjectileClass' has a wrong offset!");
static_assert(offsetof(GA_Throw_C_ExecuteUbergraph_GA_Throw, CallFunc_GetProjectileData_Damage) == 0x000218, "Member 'GA_Throw_C_ExecuteUbergraph_GA_Throw::CallFunc_GetProjectileData_Damage' has a wrong offset!");
static_assert(offsetof(GA_Throw_C_ExecuteUbergraph_GA_Throw, CallFunc_GetProjectileData_Speed) == 0x000220, "Member 'GA_Throw_C_ExecuteUbergraph_GA_Throw::CallFunc_GetProjectileData_Speed' has a wrong offset!");
static_assert(offsetof(GA_Throw_C_ExecuteUbergraph_GA_Throw, CallFunc_GetProjectileData_GravityScale) == 0x000228, "Member 'GA_Throw_C_ExecuteUbergraph_GA_Throw::CallFunc_GetProjectileData_GravityScale' has a wrong offset!");
static_assert(offsetof(GA_Throw_C_ExecuteUbergraph_GA_Throw, CallFunc_GetServerWorldTimeSeconds_ReturnValue) == 0x000230, "Member 'GA_Throw_C_ExecuteUbergraph_GA_Throw::CallFunc_GetServerWorldTimeSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Throw_C_ExecuteUbergraph_GA_Throw, CallFunc_Get_Structure_Damage_Multiplier_Damage_Multiplier) == 0x000238, "Member 'GA_Throw_C_ExecuteUbergraph_GA_Throw::CallFunc_Get_Structure_Damage_Multiplier_Damage_Multiplier' has a wrong offset!");
static_assert(offsetof(GA_Throw_C_ExecuteUbergraph_GA_Throw, CallFunc_Get_Structure_Damage_Multiplier_MultiplierFound) == 0x00023C, "Member 'GA_Throw_C_ExecuteUbergraph_GA_Throw::CallFunc_Get_Structure_Damage_Multiplier_MultiplierFound' has a wrong offset!");
static_assert(offsetof(GA_Throw_C_ExecuteUbergraph_GA_Throw, CallFunc_GetTagStackCount_ReturnValue_3) == 0x000240, "Member 'GA_Throw_C_ExecuteUbergraph_GA_Throw::CallFunc_GetTagStackCount_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(GA_Throw_C_ExecuteUbergraph_GA_Throw, CallFunc_Greater_IntInt_ReturnValue) == 0x000244, "Member 'GA_Throw_C_ExecuteUbergraph_GA_Throw::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Throw_C_ExecuteUbergraph_GA_Throw, CallFunc_GetAssociatedEquipment_ReturnValue_1) == 0x000248, "Member 'GA_Throw_C_ExecuteUbergraph_GA_Throw::CallFunc_GetAssociatedEquipment_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_Throw_C_ExecuteUbergraph_GA_Throw, CallFunc_MakeGameplayCueParameters_ReturnValue) == 0x000250, "Member 'GA_Throw_C_ExecuteUbergraph_GA_Throw::CallFunc_MakeGameplayCueParameters_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Throw_C_ExecuteUbergraph_GA_Throw, CallFunc_MakeGameplayCueParameters_NormalizedMagnitude_ImplicitCast) == 0x000328, "Member 'GA_Throw_C_ExecuteUbergraph_GA_Throw::CallFunc_MakeGameplayCueParameters_NormalizedMagnitude_ImplicitCast' has a wrong offset!");
static_assert(offsetof(GA_Throw_C_ExecuteUbergraph_GA_Throw, CallFunc_MakeGameplayCueParameters_RawMagnitude_ImplicitCast) == 0x00032C, "Member 'GA_Throw_C_ExecuteUbergraph_GA_Throw::CallFunc_MakeGameplayCueParameters_RawMagnitude_ImplicitCast' has a wrong offset!");
static_assert(offsetof(GA_Throw_C_ExecuteUbergraph_GA_Throw, CallFunc_GetProjectileData_TimeHeld_ImplicitCast) == 0x000330, "Member 'GA_Throw_C_ExecuteUbergraph_GA_Throw::CallFunc_GetProjectileData_TimeHeld_ImplicitCast' has a wrong offset!");
static_assert(offsetof(GA_Throw_C_ExecuteUbergraph_GA_Throw, CallFunc_Server_SpawnProjectile_StructureDamageMultiplier_ImplicitCast) == 0x000338, "Member 'GA_Throw_C_ExecuteUbergraph_GA_Throw::CallFunc_Server_SpawnProjectile_StructureDamageMultiplier_ImplicitCast' has a wrong offset!");

// Function GA_Throw.GA_Throw_C.GetGravityScale
// 0x0008 (0x0008 - 0x0000)
struct GA_Throw_C_GetGravityScale final
{
public:
	double                                        GravityScale_0;                                    // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_Throw_C_GetGravityScale) == 0x000008, "Wrong alignment on GA_Throw_C_GetGravityScale");
static_assert(sizeof(GA_Throw_C_GetGravityScale) == 0x000008, "Wrong size on GA_Throw_C_GetGravityScale");
static_assert(offsetof(GA_Throw_C_GetGravityScale, GravityScale_0) == 0x000000, "Member 'GA_Throw_C_GetGravityScale::GravityScale_0' has a wrong offset!");

// Function GA_Throw.GA_Throw_C.GetProjectileData
// 0x0190 (0x0190 - 0x0000)
struct GA_Throw_C_GetProjectileData final
{
public:
	double                                        TimeHeld;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8[0x8];                                        // 0x0008(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             Spawn_Transform;                                   // 0x0010(0x0060)(Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_ResidentCharacter_C*                Owner;                                             // 0x0070(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                LocalSpaceVelocity;                                // 0x0078(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 ProjectileClass;                                   // 0x0090(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        Damage;                                            // 0x0098(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Speed;                                             // 0x00A0(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        GravityScale_0;                                    // 0x00A8(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetSpeed_ReturnValue;                     // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B9[0x7];                                       // 0x00B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_CalculateChargeBasedOnTimeHeld_Charge;    // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 CallFunc_GetProjectileToSpawn_ReturnValue;         // 0x00D0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetDamage_ReturnValue;                    // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetAvatarActorFromActorInfo_ReturnValue;  // 0x00E0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_ResidentCharacter_C*                K2Node_DynamicCast_AsBP_Resident_Character;        // 0x00F0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F9[0x7];                                       // 0x00F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_Select_Default;                             // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetLocalVelocity_LocalSpaceVelocity;      // 0x0108(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_Calculate_Throw_Transform_Spawn_Transform; // 0x0120(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_CalculateChargeBasedOnTimeHeld_TimeHeld_ImplicitCast; // 0x0180(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_Throw_C_GetProjectileData) == 0x000010, "Wrong alignment on GA_Throw_C_GetProjectileData");
static_assert(sizeof(GA_Throw_C_GetProjectileData) == 0x000190, "Wrong size on GA_Throw_C_GetProjectileData");
static_assert(offsetof(GA_Throw_C_GetProjectileData, TimeHeld) == 0x000000, "Member 'GA_Throw_C_GetProjectileData::TimeHeld' has a wrong offset!");
static_assert(offsetof(GA_Throw_C_GetProjectileData, Spawn_Transform) == 0x000010, "Member 'GA_Throw_C_GetProjectileData::Spawn_Transform' has a wrong offset!");
static_assert(offsetof(GA_Throw_C_GetProjectileData, Owner) == 0x000070, "Member 'GA_Throw_C_GetProjectileData::Owner' has a wrong offset!");
static_assert(offsetof(GA_Throw_C_GetProjectileData, LocalSpaceVelocity) == 0x000078, "Member 'GA_Throw_C_GetProjectileData::LocalSpaceVelocity' has a wrong offset!");
static_assert(offsetof(GA_Throw_C_GetProjectileData, ProjectileClass) == 0x000090, "Member 'GA_Throw_C_GetProjectileData::ProjectileClass' has a wrong offset!");
static_assert(offsetof(GA_Throw_C_GetProjectileData, Damage) == 0x000098, "Member 'GA_Throw_C_GetProjectileData::Damage' has a wrong offset!");
static_assert(offsetof(GA_Throw_C_GetProjectileData, Speed) == 0x0000A0, "Member 'GA_Throw_C_GetProjectileData::Speed' has a wrong offset!");
static_assert(offsetof(GA_Throw_C_GetProjectileData, GravityScale_0) == 0x0000A8, "Member 'GA_Throw_C_GetProjectileData::GravityScale_0' has a wrong offset!");
static_assert(offsetof(GA_Throw_C_GetProjectileData, CallFunc_GetSpeed_ReturnValue) == 0x0000B0, "Member 'GA_Throw_C_GetProjectileData::CallFunc_GetSpeed_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Throw_C_GetProjectileData, Temp_bool_Variable) == 0x0000B8, "Member 'GA_Throw_C_GetProjectileData::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(GA_Throw_C_GetProjectileData, CallFunc_CalculateChargeBasedOnTimeHeld_Charge) == 0x0000C0, "Member 'GA_Throw_C_GetProjectileData::CallFunc_CalculateChargeBasedOnTimeHeld_Charge' has a wrong offset!");
static_assert(offsetof(GA_Throw_C_GetProjectileData, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x0000C8, "Member 'GA_Throw_C_GetProjectileData::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Throw_C_GetProjectileData, CallFunc_GetProjectileToSpawn_ReturnValue) == 0x0000D0, "Member 'GA_Throw_C_GetProjectileData::CallFunc_GetProjectileToSpawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Throw_C_GetProjectileData, CallFunc_GetDamage_ReturnValue) == 0x0000D8, "Member 'GA_Throw_C_GetProjectileData::CallFunc_GetDamage_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Throw_C_GetProjectileData, CallFunc_GetAvatarActorFromActorInfo_ReturnValue) == 0x0000E0, "Member 'GA_Throw_C_GetProjectileData::CallFunc_GetAvatarActorFromActorInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Throw_C_GetProjectileData, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x0000E8, "Member 'GA_Throw_C_GetProjectileData::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Throw_C_GetProjectileData, K2Node_DynamicCast_AsBP_Resident_Character) == 0x0000F0, "Member 'GA_Throw_C_GetProjectileData::K2Node_DynamicCast_AsBP_Resident_Character' has a wrong offset!");
static_assert(offsetof(GA_Throw_C_GetProjectileData, K2Node_DynamicCast_bSuccess) == 0x0000F8, "Member 'GA_Throw_C_GetProjectileData::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(GA_Throw_C_GetProjectileData, K2Node_Select_Default) == 0x000100, "Member 'GA_Throw_C_GetProjectileData::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(GA_Throw_C_GetProjectileData, CallFunc_GetLocalVelocity_LocalSpaceVelocity) == 0x000108, "Member 'GA_Throw_C_GetProjectileData::CallFunc_GetLocalVelocity_LocalSpaceVelocity' has a wrong offset!");
static_assert(offsetof(GA_Throw_C_GetProjectileData, CallFunc_Calculate_Throw_Transform_Spawn_Transform) == 0x000120, "Member 'GA_Throw_C_GetProjectileData::CallFunc_Calculate_Throw_Transform_Spawn_Transform' has a wrong offset!");
static_assert(offsetof(GA_Throw_C_GetProjectileData, CallFunc_CalculateChargeBasedOnTimeHeld_TimeHeld_ImplicitCast) == 0x000180, "Member 'GA_Throw_C_GetProjectileData::CallFunc_CalculateChargeBasedOnTimeHeld_TimeHeld_ImplicitCast' has a wrong offset!");

// Function GA_Throw.GA_Throw_C.GetProjectileToSpawn
// 0x0020 (0x0020 - 0x0000)
struct GA_Throw_C_GetProjectileToSpawn final
{
public:
	class UClass*                                 ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash)
	class UEquipmentInstance*                     CallFunc_GetAssociatedEquipment_ReturnValue;       // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UEI_Throw_C*                            K2Node_DynamicCast_AsEI_Throw;                     // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_Throw_C_GetProjectileToSpawn) == 0x000008, "Wrong alignment on GA_Throw_C_GetProjectileToSpawn");
static_assert(sizeof(GA_Throw_C_GetProjectileToSpawn) == 0x000020, "Wrong size on GA_Throw_C_GetProjectileToSpawn");
static_assert(offsetof(GA_Throw_C_GetProjectileToSpawn, ReturnValue) == 0x000000, "Member 'GA_Throw_C_GetProjectileToSpawn::ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Throw_C_GetProjectileToSpawn, CallFunc_GetAssociatedEquipment_ReturnValue) == 0x000008, "Member 'GA_Throw_C_GetProjectileToSpawn::CallFunc_GetAssociatedEquipment_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Throw_C_GetProjectileToSpawn, K2Node_DynamicCast_AsEI_Throw) == 0x000010, "Member 'GA_Throw_C_GetProjectileToSpawn::K2Node_DynamicCast_AsEI_Throw' has a wrong offset!");
static_assert(offsetof(GA_Throw_C_GetProjectileToSpawn, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'GA_Throw_C_GetProjectileToSpawn::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function GA_Throw.GA_Throw_C.GetSpeed
// 0x0018 (0x0018 - 0x0000)
struct GA_Throw_C_GetSpeed final
{
public:
	double                                        TimeHeld;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetMaxSpeed_ReturnValue;                  // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_Throw_C_GetSpeed) == 0x000008, "Wrong alignment on GA_Throw_C_GetSpeed");
static_assert(sizeof(GA_Throw_C_GetSpeed) == 0x000018, "Wrong size on GA_Throw_C_GetSpeed");
static_assert(offsetof(GA_Throw_C_GetSpeed, TimeHeld) == 0x000000, "Member 'GA_Throw_C_GetSpeed::TimeHeld' has a wrong offset!");
static_assert(offsetof(GA_Throw_C_GetSpeed, ReturnValue) == 0x000008, "Member 'GA_Throw_C_GetSpeed::ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Throw_C_GetSpeed, CallFunc_GetMaxSpeed_ReturnValue) == 0x000010, "Member 'GA_Throw_C_GetSpeed::CallFunc_GetMaxSpeed_ReturnValue' has a wrong offset!");

// Function GA_Throw.GA_Throw_C.GetStartPositionTransform
// 0x0100 (0x0100 - 0x0000)
struct GA_Throw_C_GetStartPositionTransform final
{
public:
	struct FTransform                             StartTransform;                                    // 0x0000(0x0060)(Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_GetProjectileData_Spawn_Transform;        // 0x0060(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_ResidentCharacter_C*                CallFunc_GetProjectileData_Owner;                  // 0x00C0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetProjectileData_LocalSpaceVelocity;     // 0x00C8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 CallFunc_GetProjectileData_ProjectileClass;        // 0x00E0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetProjectileData_Damage;                 // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetProjectileData_Speed;                  // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetProjectileData_GravityScale;           // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_Throw_C_GetStartPositionTransform) == 0x000010, "Wrong alignment on GA_Throw_C_GetStartPositionTransform");
static_assert(sizeof(GA_Throw_C_GetStartPositionTransform) == 0x000100, "Wrong size on GA_Throw_C_GetStartPositionTransform");
static_assert(offsetof(GA_Throw_C_GetStartPositionTransform, StartTransform) == 0x000000, "Member 'GA_Throw_C_GetStartPositionTransform::StartTransform' has a wrong offset!");
static_assert(offsetof(GA_Throw_C_GetStartPositionTransform, CallFunc_GetProjectileData_Spawn_Transform) == 0x000060, "Member 'GA_Throw_C_GetStartPositionTransform::CallFunc_GetProjectileData_Spawn_Transform' has a wrong offset!");
static_assert(offsetof(GA_Throw_C_GetStartPositionTransform, CallFunc_GetProjectileData_Owner) == 0x0000C0, "Member 'GA_Throw_C_GetStartPositionTransform::CallFunc_GetProjectileData_Owner' has a wrong offset!");
static_assert(offsetof(GA_Throw_C_GetStartPositionTransform, CallFunc_GetProjectileData_LocalSpaceVelocity) == 0x0000C8, "Member 'GA_Throw_C_GetStartPositionTransform::CallFunc_GetProjectileData_LocalSpaceVelocity' has a wrong offset!");
static_assert(offsetof(GA_Throw_C_GetStartPositionTransform, CallFunc_GetProjectileData_ProjectileClass) == 0x0000E0, "Member 'GA_Throw_C_GetStartPositionTransform::CallFunc_GetProjectileData_ProjectileClass' has a wrong offset!");
static_assert(offsetof(GA_Throw_C_GetStartPositionTransform, CallFunc_GetProjectileData_Damage) == 0x0000E8, "Member 'GA_Throw_C_GetStartPositionTransform::CallFunc_GetProjectileData_Damage' has a wrong offset!");
static_assert(offsetof(GA_Throw_C_GetStartPositionTransform, CallFunc_GetProjectileData_Speed) == 0x0000F0, "Member 'GA_Throw_C_GetStartPositionTransform::CallFunc_GetProjectileData_Speed' has a wrong offset!");
static_assert(offsetof(GA_Throw_C_GetStartPositionTransform, CallFunc_GetProjectileData_GravityScale) == 0x0000F8, "Member 'GA_Throw_C_GetStartPositionTransform::CallFunc_GetProjectileData_GravityScale' has a wrong offset!");

// Function GA_Throw.GA_Throw_C.GetVelocity
// 0x0160 (0x0160 - 0x0000)
struct GA_Throw_C_GetVelocity final
{
public:
	struct FVector                                Velocity;                                          // 0x0000(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetServerWorldTimeSeconds_ReturnValue;    // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_GetProjectileData_Spawn_Transform;        // 0x0030(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_ResidentCharacter_C*                CallFunc_GetProjectileData_Owner;                  // 0x0090(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetProjectileData_LocalSpaceVelocity;     // 0x0098(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 CallFunc_GetProjectileData_ProjectileClass;        // 0x00B0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetProjectileData_Damage;                 // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetProjectileData_Speed;                  // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetProjectileData_GravityScale;           // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x00D0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x00E8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x0100(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_DoubleToVector_ReturnValue;          // 0x0118(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_RotatorToVector_ReturnValue;         // 0x0130(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue;        // 0x0148(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_Throw_C_GetVelocity) == 0x000010, "Wrong alignment on GA_Throw_C_GetVelocity");
static_assert(sizeof(GA_Throw_C_GetVelocity) == 0x000160, "Wrong size on GA_Throw_C_GetVelocity");
static_assert(offsetof(GA_Throw_C_GetVelocity, Velocity) == 0x000000, "Member 'GA_Throw_C_GetVelocity::Velocity' has a wrong offset!");
static_assert(offsetof(GA_Throw_C_GetVelocity, CallFunc_GetGameState_ReturnValue) == 0x000018, "Member 'GA_Throw_C_GetVelocity::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Throw_C_GetVelocity, CallFunc_GetServerWorldTimeSeconds_ReturnValue) == 0x000020, "Member 'GA_Throw_C_GetVelocity::CallFunc_GetServerWorldTimeSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Throw_C_GetVelocity, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000028, "Member 'GA_Throw_C_GetVelocity::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Throw_C_GetVelocity, CallFunc_GetProjectileData_Spawn_Transform) == 0x000030, "Member 'GA_Throw_C_GetVelocity::CallFunc_GetProjectileData_Spawn_Transform' has a wrong offset!");
static_assert(offsetof(GA_Throw_C_GetVelocity, CallFunc_GetProjectileData_Owner) == 0x000090, "Member 'GA_Throw_C_GetVelocity::CallFunc_GetProjectileData_Owner' has a wrong offset!");
static_assert(offsetof(GA_Throw_C_GetVelocity, CallFunc_GetProjectileData_LocalSpaceVelocity) == 0x000098, "Member 'GA_Throw_C_GetVelocity::CallFunc_GetProjectileData_LocalSpaceVelocity' has a wrong offset!");
static_assert(offsetof(GA_Throw_C_GetVelocity, CallFunc_GetProjectileData_ProjectileClass) == 0x0000B0, "Member 'GA_Throw_C_GetVelocity::CallFunc_GetProjectileData_ProjectileClass' has a wrong offset!");
static_assert(offsetof(GA_Throw_C_GetVelocity, CallFunc_GetProjectileData_Damage) == 0x0000B8, "Member 'GA_Throw_C_GetVelocity::CallFunc_GetProjectileData_Damage' has a wrong offset!");
static_assert(offsetof(GA_Throw_C_GetVelocity, CallFunc_GetProjectileData_Speed) == 0x0000C0, "Member 'GA_Throw_C_GetVelocity::CallFunc_GetProjectileData_Speed' has a wrong offset!");
static_assert(offsetof(GA_Throw_C_GetVelocity, CallFunc_GetProjectileData_GravityScale) == 0x0000C8, "Member 'GA_Throw_C_GetVelocity::CallFunc_GetProjectileData_GravityScale' has a wrong offset!");
static_assert(offsetof(GA_Throw_C_GetVelocity, CallFunc_BreakTransform_Location) == 0x0000D0, "Member 'GA_Throw_C_GetVelocity::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(GA_Throw_C_GetVelocity, CallFunc_BreakTransform_Rotation) == 0x0000E8, "Member 'GA_Throw_C_GetVelocity::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(GA_Throw_C_GetVelocity, CallFunc_BreakTransform_Scale) == 0x000100, "Member 'GA_Throw_C_GetVelocity::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(GA_Throw_C_GetVelocity, CallFunc_Conv_DoubleToVector_ReturnValue) == 0x000118, "Member 'GA_Throw_C_GetVelocity::CallFunc_Conv_DoubleToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Throw_C_GetVelocity, CallFunc_Conv_RotatorToVector_ReturnValue) == 0x000130, "Member 'GA_Throw_C_GetVelocity::CallFunc_Conv_RotatorToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Throw_C_GetVelocity, CallFunc_Multiply_VectorVector_ReturnValue) == 0x000148, "Member 'GA_Throw_C_GetVelocity::CallFunc_Multiply_VectorVector_ReturnValue' has a wrong offset!");

// Function GA_Throw.GA_Throw_C.K2_OnEndAbility
// 0x0001 (0x0001 - 0x0000)
struct GA_Throw_C_K2_OnEndAbility final
{
public:
	bool                                          bWasCancelled;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_Throw_C_K2_OnEndAbility) == 0x000001, "Wrong alignment on GA_Throw_C_K2_OnEndAbility");
static_assert(sizeof(GA_Throw_C_K2_OnEndAbility) == 0x000001, "Wrong size on GA_Throw_C_K2_OnEndAbility");
static_assert(offsetof(GA_Throw_C_K2_OnEndAbility, bWasCancelled) == 0x000000, "Member 'GA_Throw_C_K2_OnEndAbility::bWasCancelled' has a wrong offset!");

// Function GA_Throw.GA_Throw_C.OnRelease_EFDD387045E1DDF87B0A23B5B15587B5
// 0x0004 (0x0004 - 0x0000)
struct GA_Throw_C_OnRelease_EFDD387045E1DDF87B0A23B5B15587B5 final
{
public:
	float                                         TimeHeld;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_Throw_C_OnRelease_EFDD387045E1DDF87B0A23B5B15587B5) == 0x000004, "Wrong alignment on GA_Throw_C_OnRelease_EFDD387045E1DDF87B0A23B5B15587B5");
static_assert(sizeof(GA_Throw_C_OnRelease_EFDD387045E1DDF87B0A23B5B15587B5) == 0x000004, "Wrong size on GA_Throw_C_OnRelease_EFDD387045E1DDF87B0A23B5B15587B5");
static_assert(offsetof(GA_Throw_C_OnRelease_EFDD387045E1DDF87B0A23B5B15587B5, TimeHeld) == 0x000000, "Member 'GA_Throw_C_OnRelease_EFDD387045E1DDF87B0A23B5B15587B5::TimeHeld' has a wrong offset!");

// Function GA_Throw.GA_Throw_C.Server_SpawnProjectile
// 0x00B0 (0x00B0 - 0x0000)
struct GA_Throw_C_Server_SpawnProjectile final
{
public:
	struct FTransform                             Spawn_Transform;                                   // 0x0000(0x0060)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  Owner;                                             // 0x0060(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                LocalVelocity;                                     // 0x0068(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 Projectile_Class;                                  // 0x0080(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        Damage;                                            // 0x0088(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Speed;                                             // 0x0090(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        StructureDamageMultiplier;                         // 0x0098(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        GravityScale_0;                                    // 0x00A0(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_Throw_C_Server_SpawnProjectile) == 0x000010, "Wrong alignment on GA_Throw_C_Server_SpawnProjectile");
static_assert(sizeof(GA_Throw_C_Server_SpawnProjectile) == 0x0000B0, "Wrong size on GA_Throw_C_Server_SpawnProjectile");
static_assert(offsetof(GA_Throw_C_Server_SpawnProjectile, Spawn_Transform) == 0x000000, "Member 'GA_Throw_C_Server_SpawnProjectile::Spawn_Transform' has a wrong offset!");
static_assert(offsetof(GA_Throw_C_Server_SpawnProjectile, Owner) == 0x000060, "Member 'GA_Throw_C_Server_SpawnProjectile::Owner' has a wrong offset!");
static_assert(offsetof(GA_Throw_C_Server_SpawnProjectile, LocalVelocity) == 0x000068, "Member 'GA_Throw_C_Server_SpawnProjectile::LocalVelocity' has a wrong offset!");
static_assert(offsetof(GA_Throw_C_Server_SpawnProjectile, Projectile_Class) == 0x000080, "Member 'GA_Throw_C_Server_SpawnProjectile::Projectile_Class' has a wrong offset!");
static_assert(offsetof(GA_Throw_C_Server_SpawnProjectile, Damage) == 0x000088, "Member 'GA_Throw_C_Server_SpawnProjectile::Damage' has a wrong offset!");
static_assert(offsetof(GA_Throw_C_Server_SpawnProjectile, Speed) == 0x000090, "Member 'GA_Throw_C_Server_SpawnProjectile::Speed' has a wrong offset!");
static_assert(offsetof(GA_Throw_C_Server_SpawnProjectile, StructureDamageMultiplier) == 0x000098, "Member 'GA_Throw_C_Server_SpawnProjectile::StructureDamageMultiplier' has a wrong offset!");
static_assert(offsetof(GA_Throw_C_Server_SpawnProjectile, GravityScale_0) == 0x0000A0, "Member 'GA_Throw_C_Server_SpawnProjectile::GravityScale_0' has a wrong offset!");

// Function GA_Throw.GA_Throw_C.SpawnCosmeticProjectile
// 0x0110 (0x0110 - 0x0000)
struct GA_Throw_C_SpawnCosmeticProjectile final
{
public:
	bool                                          CallFunc_K2_HasAuthority_ReturnValue;              // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwningActorFromActorInfo_ReturnValue;  // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_GetPlayerPawn_ReturnValue;                // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAbilitySystemComponent*                CallFunc_GetAbilitySystemComponent_ReturnValue;    // 0x0020(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FGameplayCueParameters                 CallFunc_CreateCosmeticProjectileCueParameters_ReturnValue; // 0x0028(0x00D8)(ContainsInstancedReference)
	class UAbilitySystemComponentIW*              K2Node_DynamicCast_AsAbility_System_Component_IW;  // 0x0100(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_Throw_C_SpawnCosmeticProjectile) == 0x000008, "Wrong alignment on GA_Throw_C_SpawnCosmeticProjectile");
static_assert(sizeof(GA_Throw_C_SpawnCosmeticProjectile) == 0x000110, "Wrong size on GA_Throw_C_SpawnCosmeticProjectile");
static_assert(offsetof(GA_Throw_C_SpawnCosmeticProjectile, CallFunc_K2_HasAuthority_ReturnValue) == 0x000000, "Member 'GA_Throw_C_SpawnCosmeticProjectile::CallFunc_K2_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Throw_C_SpawnCosmeticProjectile, CallFunc_GetOwningActorFromActorInfo_ReturnValue) == 0x000008, "Member 'GA_Throw_C_SpawnCosmeticProjectile::CallFunc_GetOwningActorFromActorInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Throw_C_SpawnCosmeticProjectile, CallFunc_HasAuthority_ReturnValue) == 0x000010, "Member 'GA_Throw_C_SpawnCosmeticProjectile::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Throw_C_SpawnCosmeticProjectile, CallFunc_GetPlayerPawn_ReturnValue) == 0x000018, "Member 'GA_Throw_C_SpawnCosmeticProjectile::CallFunc_GetPlayerPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Throw_C_SpawnCosmeticProjectile, CallFunc_GetAbilitySystemComponent_ReturnValue) == 0x000020, "Member 'GA_Throw_C_SpawnCosmeticProjectile::CallFunc_GetAbilitySystemComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Throw_C_SpawnCosmeticProjectile, CallFunc_CreateCosmeticProjectileCueParameters_ReturnValue) == 0x000028, "Member 'GA_Throw_C_SpawnCosmeticProjectile::CallFunc_CreateCosmeticProjectileCueParameters_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Throw_C_SpawnCosmeticProjectile, K2Node_DynamicCast_AsAbility_System_Component_IW) == 0x000100, "Member 'GA_Throw_C_SpawnCosmeticProjectile::K2Node_DynamicCast_AsAbility_System_Component_IW' has a wrong offset!");
static_assert(offsetof(GA_Throw_C_SpawnCosmeticProjectile, K2Node_DynamicCast_bSuccess) == 0x000108, "Member 'GA_Throw_C_SpawnCosmeticProjectile::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function GA_Throw.GA_Throw_C.SpawnDebugSphere
// 0x0050 (0x0050 - 0x0000)
struct GA_Throw_C_SpawnDebugSphere final
{
public:
	struct FVector                                HitLocation;                                       // 0x0000(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           Temp_struct_Variable;                              // 0x001C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_1;                            // 0x002C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsServer_ReturnValue;                     // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D[0x3];                                       // 0x003D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           K2Node_Select_Default;                             // 0x0040(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_Throw_C_SpawnDebugSphere) == 0x000008, "Wrong alignment on GA_Throw_C_SpawnDebugSphere");
static_assert(sizeof(GA_Throw_C_SpawnDebugSphere) == 0x000050, "Wrong size on GA_Throw_C_SpawnDebugSphere");
static_assert(offsetof(GA_Throw_C_SpawnDebugSphere, HitLocation) == 0x000000, "Member 'GA_Throw_C_SpawnDebugSphere::HitLocation' has a wrong offset!");
static_assert(offsetof(GA_Throw_C_SpawnDebugSphere, Temp_bool_Variable) == 0x000018, "Member 'GA_Throw_C_SpawnDebugSphere::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(GA_Throw_C_SpawnDebugSphere, Temp_struct_Variable) == 0x00001C, "Member 'GA_Throw_C_SpawnDebugSphere::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(GA_Throw_C_SpawnDebugSphere, Temp_struct_Variable_1) == 0x00002C, "Member 'GA_Throw_C_SpawnDebugSphere::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(GA_Throw_C_SpawnDebugSphere, CallFunc_IsServer_ReturnValue) == 0x00003C, "Member 'GA_Throw_C_SpawnDebugSphere::CallFunc_IsServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Throw_C_SpawnDebugSphere, K2Node_Select_Default) == 0x000040, "Member 'GA_Throw_C_SpawnDebugSphere::K2Node_Select_Default' has a wrong offset!");

// Function GA_Throw.GA_Throw_C.Calculate Throw Transform
// 0x00F0 (0x00F0 - 0x0000)
struct GA_Throw_C_Calculate_Throw_Transform final
{
public:
	struct FTransform                             Spawn_Transform;                                   // 0x0000(0x0060)(Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetAvatarActorFromActorInfo_ReturnValue;  // 0x0060(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_ResidentCharacter_C*                K2Node_DynamicCast_AsBP_Resident_Character;        // 0x0068(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_71[0x7];                                       // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0078(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0090(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_Throw_C_Calculate_Throw_Transform) == 0x000010, "Wrong alignment on GA_Throw_C_Calculate_Throw_Transform");
static_assert(sizeof(GA_Throw_C_Calculate_Throw_Transform) == 0x0000F0, "Wrong size on GA_Throw_C_Calculate_Throw_Transform");
static_assert(offsetof(GA_Throw_C_Calculate_Throw_Transform, Spawn_Transform) == 0x000000, "Member 'GA_Throw_C_Calculate_Throw_Transform::Spawn_Transform' has a wrong offset!");
static_assert(offsetof(GA_Throw_C_Calculate_Throw_Transform, CallFunc_GetAvatarActorFromActorInfo_ReturnValue) == 0x000060, "Member 'GA_Throw_C_Calculate_Throw_Transform::CallFunc_GetAvatarActorFromActorInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Throw_C_Calculate_Throw_Transform, K2Node_DynamicCast_AsBP_Resident_Character) == 0x000068, "Member 'GA_Throw_C_Calculate_Throw_Transform::K2Node_DynamicCast_AsBP_Resident_Character' has a wrong offset!");
static_assert(offsetof(GA_Throw_C_Calculate_Throw_Transform, K2Node_DynamicCast_bSuccess) == 0x000070, "Member 'GA_Throw_C_Calculate_Throw_Transform::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(GA_Throw_C_Calculate_Throw_Transform, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000078, "Member 'GA_Throw_C_Calculate_Throw_Transform::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Throw_C_Calculate_Throw_Transform, CallFunc_MakeTransform_ReturnValue) == 0x000090, "Member 'GA_Throw_C_Calculate_Throw_Transform::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");

// Function GA_Throw.GA_Throw_C.GetDamage
// 0x0018 (0x0018 - 0x0000)
struct GA_Throw_C_GetDamage final
{
public:
	double                                        ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetTagStackCount_ReturnValue;             // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_Throw_C_GetDamage) == 0x000008, "Wrong alignment on GA_Throw_C_GetDamage");
static_assert(sizeof(GA_Throw_C_GetDamage) == 0x000018, "Wrong size on GA_Throw_C_GetDamage");
static_assert(offsetof(GA_Throw_C_GetDamage, ReturnValue) == 0x000000, "Member 'GA_Throw_C_GetDamage::ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Throw_C_GetDamage, CallFunc_GetTagStackCount_ReturnValue) == 0x000008, "Member 'GA_Throw_C_GetDamage::CallFunc_GetTagStackCount_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Throw_C_GetDamage, CallFunc_Conv_IntToDouble_ReturnValue) == 0x000010, "Member 'GA_Throw_C_GetDamage::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");

}

