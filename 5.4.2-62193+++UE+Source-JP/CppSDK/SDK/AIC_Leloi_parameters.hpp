#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: AIC_Leloi

#include "Basic.hpp"

#include "GameplayTags_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "E_LeloiSenses_structs.hpp"
#include "JP_structs.hpp"
#include "AIModule_structs.hpp"
#include "E_TimeOfDay_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function AIC_Leloi.AIC_Leloi_C.BndEvt__AIC_Leloi_AIPerception_K2Node_ComponentBoundEvent_0_PerceptionUpdatedDelegate__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct AIC_Leloi_C_BndEvt__AIC_Leloi_AIPerception_K2Node_ComponentBoundEvent_0_PerceptionUpdatedDelegate__DelegateSignature final
{
public:
	TArray<class AActor*>                         UpdatedActors;                                     // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(AIC_Leloi_C_BndEvt__AIC_Leloi_AIPerception_K2Node_ComponentBoundEvent_0_PerceptionUpdatedDelegate__DelegateSignature) == 0x000008, "Wrong alignment on AIC_Leloi_C_BndEvt__AIC_Leloi_AIPerception_K2Node_ComponentBoundEvent_0_PerceptionUpdatedDelegate__DelegateSignature");
static_assert(sizeof(AIC_Leloi_C_BndEvt__AIC_Leloi_AIPerception_K2Node_ComponentBoundEvent_0_PerceptionUpdatedDelegate__DelegateSignature) == 0x000010, "Wrong size on AIC_Leloi_C_BndEvt__AIC_Leloi_AIPerception_K2Node_ComponentBoundEvent_0_PerceptionUpdatedDelegate__DelegateSignature");
static_assert(offsetof(AIC_Leloi_C_BndEvt__AIC_Leloi_AIPerception_K2Node_ComponentBoundEvent_0_PerceptionUpdatedDelegate__DelegateSignature, UpdatedActors) == 0x000000, "Member 'AIC_Leloi_C_BndEvt__AIC_Leloi_AIPerception_K2Node_ComponentBoundEvent_0_PerceptionUpdatedDelegate__DelegateSignature::UpdatedActors' has a wrong offset!");

// Function AIC_Leloi.AIC_Leloi_C.BndEvt__AIC_Leloi_AIPerception_K2Node_ComponentBoundEvent_1_ActorPerceptionForgetUpdatedDelegate__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct AIC_Leloi_C_BndEvt__AIC_Leloi_AIPerception_K2Node_ComponentBoundEvent_1_ActorPerceptionForgetUpdatedDelegate__DelegateSignature final
{
public:
	class AActor*                                 Actor;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AIC_Leloi_C_BndEvt__AIC_Leloi_AIPerception_K2Node_ComponentBoundEvent_1_ActorPerceptionForgetUpdatedDelegate__DelegateSignature) == 0x000008, "Wrong alignment on AIC_Leloi_C_BndEvt__AIC_Leloi_AIPerception_K2Node_ComponentBoundEvent_1_ActorPerceptionForgetUpdatedDelegate__DelegateSignature");
static_assert(sizeof(AIC_Leloi_C_BndEvt__AIC_Leloi_AIPerception_K2Node_ComponentBoundEvent_1_ActorPerceptionForgetUpdatedDelegate__DelegateSignature) == 0x000008, "Wrong size on AIC_Leloi_C_BndEvt__AIC_Leloi_AIPerception_K2Node_ComponentBoundEvent_1_ActorPerceptionForgetUpdatedDelegate__DelegateSignature");
static_assert(offsetof(AIC_Leloi_C_BndEvt__AIC_Leloi_AIPerception_K2Node_ComponentBoundEvent_1_ActorPerceptionForgetUpdatedDelegate__DelegateSignature, Actor) == 0x000000, "Member 'AIC_Leloi_C_BndEvt__AIC_Leloi_AIPerception_K2Node_ComponentBoundEvent_1_ActorPerceptionForgetUpdatedDelegate__DelegateSignature::Actor' has a wrong offset!");

// Function AIC_Leloi.AIC_Leloi_C.CacheEnemyCharacters
// 0x0068 (0x0068 - 0x0000)
struct AIC_Leloi_C_CacheEnemyCharacters final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Temp_byte_Variable;                                // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ACharacter*>                     CallFunc_GetAllActorsOfClass_OutActors;            // 0x0010(0x0010)(ReferenceParm)
	uint8                                         CallFunc_GetTeamID_ReturnValue;                    // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharacter*                             CallFunc_Array_Get_Item;                           // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class ITeamableInterface>    K2Node_DynamicCast_AsTeamable_Interface;           // 0x0038(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetTeamID_ReturnValue_1;                  // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A[0x2];                                       // 0x004A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_Leloi_C*                            K2Node_DynamicCast_AsBP_Leloi;                     // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59[0x3];                                       // 0x0059(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AIC_Leloi_C_CacheEnemyCharacters) == 0x000008, "Wrong alignment on AIC_Leloi_C_CacheEnemyCharacters");
static_assert(sizeof(AIC_Leloi_C_CacheEnemyCharacters) == 0x000068, "Wrong size on AIC_Leloi_C_CacheEnemyCharacters");
static_assert(offsetof(AIC_Leloi_C_CacheEnemyCharacters, Temp_int_Array_Index_Variable) == 0x000000, "Member 'AIC_Leloi_C_CacheEnemyCharacters::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(AIC_Leloi_C_CacheEnemyCharacters, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'AIC_Leloi_C_CacheEnemyCharacters::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(AIC_Leloi_C_CacheEnemyCharacters, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'AIC_Leloi_C_CacheEnemyCharacters::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_Leloi_C_CacheEnemyCharacters, Temp_byte_Variable) == 0x00000C, "Member 'AIC_Leloi_C_CacheEnemyCharacters::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(AIC_Leloi_C_CacheEnemyCharacters, CallFunc_GetAllActorsOfClass_OutActors) == 0x000010, "Member 'AIC_Leloi_C_CacheEnemyCharacters::CallFunc_GetAllActorsOfClass_OutActors' has a wrong offset!");
static_assert(offsetof(AIC_Leloi_C_CacheEnemyCharacters, CallFunc_GetTeamID_ReturnValue) == 0x000020, "Member 'AIC_Leloi_C_CacheEnemyCharacters::CallFunc_GetTeamID_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_Leloi_C_CacheEnemyCharacters, CallFunc_Array_Get_Item) == 0x000028, "Member 'AIC_Leloi_C_CacheEnemyCharacters::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(AIC_Leloi_C_CacheEnemyCharacters, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000030, "Member 'AIC_Leloi_C_CacheEnemyCharacters::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_Leloi_C_CacheEnemyCharacters, K2Node_DynamicCast_AsTeamable_Interface) == 0x000038, "Member 'AIC_Leloi_C_CacheEnemyCharacters::K2Node_DynamicCast_AsTeamable_Interface' has a wrong offset!");
static_assert(offsetof(AIC_Leloi_C_CacheEnemyCharacters, K2Node_DynamicCast_bSuccess) == 0x000048, "Member 'AIC_Leloi_C_CacheEnemyCharacters::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(AIC_Leloi_C_CacheEnemyCharacters, CallFunc_GetTeamID_ReturnValue_1) == 0x000049, "Member 'AIC_Leloi_C_CacheEnemyCharacters::CallFunc_GetTeamID_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AIC_Leloi_C_CacheEnemyCharacters, CallFunc_Array_Add_ReturnValue) == 0x00004C, "Member 'AIC_Leloi_C_CacheEnemyCharacters::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_Leloi_C_CacheEnemyCharacters, K2Node_DynamicCast_AsBP_Leloi) == 0x000050, "Member 'AIC_Leloi_C_CacheEnemyCharacters::K2Node_DynamicCast_AsBP_Leloi' has a wrong offset!");
static_assert(offsetof(AIC_Leloi_C_CacheEnemyCharacters, K2Node_DynamicCast_bSuccess_1) == 0x000058, "Member 'AIC_Leloi_C_CacheEnemyCharacters::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(AIC_Leloi_C_CacheEnemyCharacters, CallFunc_Array_Length_ReturnValue) == 0x00005C, "Member 'AIC_Leloi_C_CacheEnemyCharacters::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_Leloi_C_CacheEnemyCharacters, CallFunc_Less_IntInt_ReturnValue) == 0x000060, "Member 'AIC_Leloi_C_CacheEnemyCharacters::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function AIC_Leloi.AIC_Leloi_C.CanSenseActor
// 0x0138 (0x0138 - 0x0000)
struct AIC_Leloi_C_CanSenseActor final
{
public:
	class AActor*                                 Actor;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	E_LeloiSenses                                 Sense;                                             // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Sensed;                                            // 0x0009(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A[0x6];                                        // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAIStimulus                            Stimulus;                                          // 0x0010(0x0058)(Parm, OutParm, NoDestructor)
	class AActor*                                 SensedActor;                                       // 0x0068(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7C[0x4];                                       // 0x007C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 Temp_class_Variable;                               // 0x0080(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	E_LeloiSenses                                 Temp_byte_Variable;                                // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_89[0x7];                                       // 0x0089(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FActorPerceptionBlueprintInfo          CallFunc_GetActorsPerception_Info;                 // 0x0090(0x0020)()
	bool                                          CallFunc_GetActorsPerception_ReturnValue;          // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B1[0x7];                                       // 0x00B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 K2Node_Select_Default;                             // 0x00B8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C4[0x4];                                       // 0x00C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAIStimulus                            CallFunc_Array_Get_Item;                           // 0x00C8(0x0058)(NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_121[0x7];                                      // 0x0121(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSubclassOf<class UAISense>                   CallFunc_GetSenseClassForStimulus_ReturnValue;     // 0x0128(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ClassClass_ReturnValue;        // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AIC_Leloi_C_CanSenseActor) == 0x000008, "Wrong alignment on AIC_Leloi_C_CanSenseActor");
static_assert(sizeof(AIC_Leloi_C_CanSenseActor) == 0x000138, "Wrong size on AIC_Leloi_C_CanSenseActor");
static_assert(offsetof(AIC_Leloi_C_CanSenseActor, Actor) == 0x000000, "Member 'AIC_Leloi_C_CanSenseActor::Actor' has a wrong offset!");
static_assert(offsetof(AIC_Leloi_C_CanSenseActor, Sense) == 0x000008, "Member 'AIC_Leloi_C_CanSenseActor::Sense' has a wrong offset!");
static_assert(offsetof(AIC_Leloi_C_CanSenseActor, Sensed) == 0x000009, "Member 'AIC_Leloi_C_CanSenseActor::Sensed' has a wrong offset!");
static_assert(offsetof(AIC_Leloi_C_CanSenseActor, Stimulus) == 0x000010, "Member 'AIC_Leloi_C_CanSenseActor::Stimulus' has a wrong offset!");
static_assert(offsetof(AIC_Leloi_C_CanSenseActor, SensedActor) == 0x000068, "Member 'AIC_Leloi_C_CanSenseActor::SensedActor' has a wrong offset!");
static_assert(offsetof(AIC_Leloi_C_CanSenseActor, Temp_int_Array_Index_Variable) == 0x000070, "Member 'AIC_Leloi_C_CanSenseActor::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(AIC_Leloi_C_CanSenseActor, Temp_int_Loop_Counter_Variable) == 0x000074, "Member 'AIC_Leloi_C_CanSenseActor::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(AIC_Leloi_C_CanSenseActor, CallFunc_Add_IntInt_ReturnValue) == 0x000078, "Member 'AIC_Leloi_C_CanSenseActor::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_Leloi_C_CanSenseActor, Temp_class_Variable) == 0x000080, "Member 'AIC_Leloi_C_CanSenseActor::Temp_class_Variable' has a wrong offset!");
static_assert(offsetof(AIC_Leloi_C_CanSenseActor, Temp_byte_Variable) == 0x000088, "Member 'AIC_Leloi_C_CanSenseActor::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(AIC_Leloi_C_CanSenseActor, CallFunc_GetActorsPerception_Info) == 0x000090, "Member 'AIC_Leloi_C_CanSenseActor::CallFunc_GetActorsPerception_Info' has a wrong offset!");
static_assert(offsetof(AIC_Leloi_C_CanSenseActor, CallFunc_GetActorsPerception_ReturnValue) == 0x0000B0, "Member 'AIC_Leloi_C_CanSenseActor::CallFunc_GetActorsPerception_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_Leloi_C_CanSenseActor, K2Node_Select_Default) == 0x0000B8, "Member 'AIC_Leloi_C_CanSenseActor::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(AIC_Leloi_C_CanSenseActor, CallFunc_Array_Length_ReturnValue) == 0x0000C0, "Member 'AIC_Leloi_C_CanSenseActor::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_Leloi_C_CanSenseActor, CallFunc_Array_Get_Item) == 0x0000C8, "Member 'AIC_Leloi_C_CanSenseActor::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(AIC_Leloi_C_CanSenseActor, CallFunc_Less_IntInt_ReturnValue) == 0x000120, "Member 'AIC_Leloi_C_CanSenseActor::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_Leloi_C_CanSenseActor, CallFunc_GetSenseClassForStimulus_ReturnValue) == 0x000128, "Member 'AIC_Leloi_C_CanSenseActor::CallFunc_GetSenseClassForStimulus_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_Leloi_C_CanSenseActor, CallFunc_EqualEqual_ClassClass_ReturnValue) == 0x000130, "Member 'AIC_Leloi_C_CanSenseActor::CallFunc_EqualEqual_ClassClass_ReturnValue' has a wrong offset!");

// Function AIC_Leloi.AIC_Leloi_C.ExecuteUbergraph_AIC_Leloi
// 0x0198 (0x0198 - 0x0000)
struct AIC_Leloi_C_ExecuteUbergraph_AIC_Leloi final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_RunBehaviorTree_ReturnValue;              // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  K2Node_Event_PossessedPawn;                        // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         K2Node_ComponentBoundEvent_UpdatedActors;          // 0x0018(0x0010)(ConstParm, ReferenceParm)
	class ABP_Leloi_C*                            K2Node_DynamicCast_AsBP_Leloi;                     // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_Array_Get_Item;                           // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CanSenseActor_Sensed;                     // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAIStimulus                            CallFunc_CanSenseActor_Stimulus;                   // 0x0048(0x0058)(NoDestructor)
	class AActor*                                 CallFunc_CanSenseActor_SensedActor;                // 0x00A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsSensedActorOnProperty_ReturnValue;      // 0x00AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue;          // 0x00AD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_TimeOfDay                                   K2Node_CustomEvent_TimeOfDay;                      // 0x00AE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00AF(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDistracted_ReturnValue;                 // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B1[0x3];                                       // 0x00B1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x00B4(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C4[0x4];                                       // 0x00C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x00C8(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDistracted_ReturnValue_1;               // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D1[0x3];                                       // 0x00D1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(E_TimeOfDay TimeOfDay)>        K2Node_CreateDelegate_OutputDelegate_1;            // 0x00D8(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E9[0x3];                                       // 0x00E9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsSleeping_ReturnValue;                   // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F1[0x7];                                       // 0x00F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_ComponentBoundEvent_Actor;                  // 0x00F8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDistracted_ReturnValue_2;               // 0x0101(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsSleeping_ReturnValue_1;                 // 0x0102(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0103(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_104[0x4];                                      // 0x0104(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Get_ClassLog_Name_name;                   // 0x0108(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Get_ClassLog_Name_name_1;                 // 0x0118(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsHunting_ReturnValue;                    // 0x0128(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_129[0x7];                                      // 0x0129(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMatchConfiguration                    CallFunc_GetMatchConfiguration_ReturnValue;        // 0x0130(0x0058)(ConstParm)
	class ACharacter*                             CallFunc_GetClosestTrespassingCharacter_Return;    // 0x0188(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsNotEmpty_ReturnValue;             // 0x0190(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0191(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AIC_Leloi_C_ExecuteUbergraph_AIC_Leloi) == 0x000008, "Wrong alignment on AIC_Leloi_C_ExecuteUbergraph_AIC_Leloi");
static_assert(sizeof(AIC_Leloi_C_ExecuteUbergraph_AIC_Leloi) == 0x000198, "Wrong size on AIC_Leloi_C_ExecuteUbergraph_AIC_Leloi");
static_assert(offsetof(AIC_Leloi_C_ExecuteUbergraph_AIC_Leloi, EntryPoint) == 0x000000, "Member 'AIC_Leloi_C_ExecuteUbergraph_AIC_Leloi::EntryPoint' has a wrong offset!");
static_assert(offsetof(AIC_Leloi_C_ExecuteUbergraph_AIC_Leloi, Temp_int_Array_Index_Variable) == 0x000004, "Member 'AIC_Leloi_C_ExecuteUbergraph_AIC_Leloi::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(AIC_Leloi_C_ExecuteUbergraph_AIC_Leloi, CallFunc_RunBehaviorTree_ReturnValue) == 0x000008, "Member 'AIC_Leloi_C_ExecuteUbergraph_AIC_Leloi::CallFunc_RunBehaviorTree_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_Leloi_C_ExecuteUbergraph_AIC_Leloi, K2Node_Event_PossessedPawn) == 0x000010, "Member 'AIC_Leloi_C_ExecuteUbergraph_AIC_Leloi::K2Node_Event_PossessedPawn' has a wrong offset!");
static_assert(offsetof(AIC_Leloi_C_ExecuteUbergraph_AIC_Leloi, K2Node_ComponentBoundEvent_UpdatedActors) == 0x000018, "Member 'AIC_Leloi_C_ExecuteUbergraph_AIC_Leloi::K2Node_ComponentBoundEvent_UpdatedActors' has a wrong offset!");
static_assert(offsetof(AIC_Leloi_C_ExecuteUbergraph_AIC_Leloi, K2Node_DynamicCast_AsBP_Leloi) == 0x000028, "Member 'AIC_Leloi_C_ExecuteUbergraph_AIC_Leloi::K2Node_DynamicCast_AsBP_Leloi' has a wrong offset!");
static_assert(offsetof(AIC_Leloi_C_ExecuteUbergraph_AIC_Leloi, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'AIC_Leloi_C_ExecuteUbergraph_AIC_Leloi::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(AIC_Leloi_C_ExecuteUbergraph_AIC_Leloi, CallFunc_Array_Get_Item) == 0x000038, "Member 'AIC_Leloi_C_ExecuteUbergraph_AIC_Leloi::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(AIC_Leloi_C_ExecuteUbergraph_AIC_Leloi, CallFunc_CanSenseActor_Sensed) == 0x000040, "Member 'AIC_Leloi_C_ExecuteUbergraph_AIC_Leloi::CallFunc_CanSenseActor_Sensed' has a wrong offset!");
static_assert(offsetof(AIC_Leloi_C_ExecuteUbergraph_AIC_Leloi, CallFunc_CanSenseActor_Stimulus) == 0x000048, "Member 'AIC_Leloi_C_ExecuteUbergraph_AIC_Leloi::CallFunc_CanSenseActor_Stimulus' has a wrong offset!");
static_assert(offsetof(AIC_Leloi_C_ExecuteUbergraph_AIC_Leloi, CallFunc_CanSenseActor_SensedActor) == 0x0000A0, "Member 'AIC_Leloi_C_ExecuteUbergraph_AIC_Leloi::CallFunc_CanSenseActor_SensedActor' has a wrong offset!");
static_assert(offsetof(AIC_Leloi_C_ExecuteUbergraph_AIC_Leloi, CallFunc_Array_Length_ReturnValue) == 0x0000A8, "Member 'AIC_Leloi_C_ExecuteUbergraph_AIC_Leloi::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_Leloi_C_ExecuteUbergraph_AIC_Leloi, CallFunc_IsSensedActorOnProperty_ReturnValue) == 0x0000AC, "Member 'AIC_Leloi_C_ExecuteUbergraph_AIC_Leloi::CallFunc_IsSensedActorOnProperty_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_Leloi_C_ExecuteUbergraph_AIC_Leloi, CallFunc_EqualEqual_NameName_ReturnValue) == 0x0000AD, "Member 'AIC_Leloi_C_ExecuteUbergraph_AIC_Leloi::CallFunc_EqualEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_Leloi_C_ExecuteUbergraph_AIC_Leloi, K2Node_CustomEvent_TimeOfDay) == 0x0000AE, "Member 'AIC_Leloi_C_ExecuteUbergraph_AIC_Leloi::K2Node_CustomEvent_TimeOfDay' has a wrong offset!");
static_assert(offsetof(AIC_Leloi_C_ExecuteUbergraph_AIC_Leloi, CallFunc_BooleanAND_ReturnValue) == 0x0000AF, "Member 'AIC_Leloi_C_ExecuteUbergraph_AIC_Leloi::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_Leloi_C_ExecuteUbergraph_AIC_Leloi, CallFunc_IsDistracted_ReturnValue) == 0x0000B0, "Member 'AIC_Leloi_C_ExecuteUbergraph_AIC_Leloi::CallFunc_IsDistracted_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_Leloi_C_ExecuteUbergraph_AIC_Leloi, K2Node_CreateDelegate_OutputDelegate) == 0x0000B4, "Member 'AIC_Leloi_C_ExecuteUbergraph_AIC_Leloi::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(AIC_Leloi_C_ExecuteUbergraph_AIC_Leloi, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x0000C8, "Member 'AIC_Leloi_C_ExecuteUbergraph_AIC_Leloi::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_Leloi_C_ExecuteUbergraph_AIC_Leloi, CallFunc_IsDistracted_ReturnValue_1) == 0x0000D0, "Member 'AIC_Leloi_C_ExecuteUbergraph_AIC_Leloi::CallFunc_IsDistracted_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AIC_Leloi_C_ExecuteUbergraph_AIC_Leloi, Temp_int_Loop_Counter_Variable) == 0x0000D4, "Member 'AIC_Leloi_C_ExecuteUbergraph_AIC_Leloi::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(AIC_Leloi_C_ExecuteUbergraph_AIC_Leloi, K2Node_CreateDelegate_OutputDelegate_1) == 0x0000D8, "Member 'AIC_Leloi_C_ExecuteUbergraph_AIC_Leloi::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(AIC_Leloi_C_ExecuteUbergraph_AIC_Leloi, CallFunc_Less_IntInt_ReturnValue) == 0x0000E8, "Member 'AIC_Leloi_C_ExecuteUbergraph_AIC_Leloi::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_Leloi_C_ExecuteUbergraph_AIC_Leloi, CallFunc_Add_IntInt_ReturnValue) == 0x0000EC, "Member 'AIC_Leloi_C_ExecuteUbergraph_AIC_Leloi::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_Leloi_C_ExecuteUbergraph_AIC_Leloi, CallFunc_IsSleeping_ReturnValue) == 0x0000F0, "Member 'AIC_Leloi_C_ExecuteUbergraph_AIC_Leloi::CallFunc_IsSleeping_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_Leloi_C_ExecuteUbergraph_AIC_Leloi, K2Node_ComponentBoundEvent_Actor) == 0x0000F8, "Member 'AIC_Leloi_C_ExecuteUbergraph_AIC_Leloi::K2Node_ComponentBoundEvent_Actor' has a wrong offset!");
static_assert(offsetof(AIC_Leloi_C_ExecuteUbergraph_AIC_Leloi, CallFunc_BooleanOR_ReturnValue) == 0x000100, "Member 'AIC_Leloi_C_ExecuteUbergraph_AIC_Leloi::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_Leloi_C_ExecuteUbergraph_AIC_Leloi, CallFunc_IsDistracted_ReturnValue_2) == 0x000101, "Member 'AIC_Leloi_C_ExecuteUbergraph_AIC_Leloi::CallFunc_IsDistracted_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AIC_Leloi_C_ExecuteUbergraph_AIC_Leloi, CallFunc_IsSleeping_ReturnValue_1) == 0x000102, "Member 'AIC_Leloi_C_ExecuteUbergraph_AIC_Leloi::CallFunc_IsSleeping_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AIC_Leloi_C_ExecuteUbergraph_AIC_Leloi, CallFunc_BooleanOR_ReturnValue_1) == 0x000103, "Member 'AIC_Leloi_C_ExecuteUbergraph_AIC_Leloi::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AIC_Leloi_C_ExecuteUbergraph_AIC_Leloi, CallFunc_Get_ClassLog_Name_name) == 0x000108, "Member 'AIC_Leloi_C_ExecuteUbergraph_AIC_Leloi::CallFunc_Get_ClassLog_Name_name' has a wrong offset!");
static_assert(offsetof(AIC_Leloi_C_ExecuteUbergraph_AIC_Leloi, CallFunc_Get_ClassLog_Name_name_1) == 0x000118, "Member 'AIC_Leloi_C_ExecuteUbergraph_AIC_Leloi::CallFunc_Get_ClassLog_Name_name_1' has a wrong offset!");
static_assert(offsetof(AIC_Leloi_C_ExecuteUbergraph_AIC_Leloi, CallFunc_IsHunting_ReturnValue) == 0x000128, "Member 'AIC_Leloi_C_ExecuteUbergraph_AIC_Leloi::CallFunc_IsHunting_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_Leloi_C_ExecuteUbergraph_AIC_Leloi, CallFunc_GetMatchConfiguration_ReturnValue) == 0x000130, "Member 'AIC_Leloi_C_ExecuteUbergraph_AIC_Leloi::CallFunc_GetMatchConfiguration_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_Leloi_C_ExecuteUbergraph_AIC_Leloi, CallFunc_GetClosestTrespassingCharacter_Return) == 0x000188, "Member 'AIC_Leloi_C_ExecuteUbergraph_AIC_Leloi::CallFunc_GetClosestTrespassingCharacter_Return' has a wrong offset!");
static_assert(offsetof(AIC_Leloi_C_ExecuteUbergraph_AIC_Leloi, CallFunc_Array_IsNotEmpty_ReturnValue) == 0x000190, "Member 'AIC_Leloi_C_ExecuteUbergraph_AIC_Leloi::CallFunc_Array_IsNotEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_Leloi_C_ExecuteUbergraph_AIC_Leloi, K2Node_SwitchEnum_CmpSuccess) == 0x000191, "Member 'AIC_Leloi_C_ExecuteUbergraph_AIC_Leloi::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function AIC_Leloi.AIC_Leloi_C.GetClosestMarkedForDeathEnemy
// 0x0098 (0x0098 - 0x0000)
struct AIC_Leloi_C_GetClosestMarkedForDeathEnemy final
{
public:
	TMap<class ACharacter*, double>               DistanceToMarkedEnemies;                           // 0x0000(0x0050)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class ACharacter*                             Output;                                            // 0x0050(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<double>                                CallFunc_Map_Values_Values;                        // 0x0058(0x0010)(ReferenceParm)
	TArray<class ACharacter*>                     CallFunc_Map_Keys_Keys;                            // 0x0068(0x0010)(ReferenceParm)
	int32                                         CallFunc_MinOfFloatArray_IndexOfMinValue;          // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MinOfFloatArray_MinValue;                 // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACharacter*                             CallFunc_Array_Get_Item;                           // 0x0080(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<float>                                 CallFunc_MinOfFloatArray_FloatArray_ImplicitCast;  // 0x0088(0x0010)(ConstParm, ReferenceParm)
};
static_assert(alignof(AIC_Leloi_C_GetClosestMarkedForDeathEnemy) == 0x000008, "Wrong alignment on AIC_Leloi_C_GetClosestMarkedForDeathEnemy");
static_assert(sizeof(AIC_Leloi_C_GetClosestMarkedForDeathEnemy) == 0x000098, "Wrong size on AIC_Leloi_C_GetClosestMarkedForDeathEnemy");
static_assert(offsetof(AIC_Leloi_C_GetClosestMarkedForDeathEnemy, DistanceToMarkedEnemies) == 0x000000, "Member 'AIC_Leloi_C_GetClosestMarkedForDeathEnemy::DistanceToMarkedEnemies' has a wrong offset!");
static_assert(offsetof(AIC_Leloi_C_GetClosestMarkedForDeathEnemy, Output) == 0x000050, "Member 'AIC_Leloi_C_GetClosestMarkedForDeathEnemy::Output' has a wrong offset!");
static_assert(offsetof(AIC_Leloi_C_GetClosestMarkedForDeathEnemy, CallFunc_Map_Values_Values) == 0x000058, "Member 'AIC_Leloi_C_GetClosestMarkedForDeathEnemy::CallFunc_Map_Values_Values' has a wrong offset!");
static_assert(offsetof(AIC_Leloi_C_GetClosestMarkedForDeathEnemy, CallFunc_Map_Keys_Keys) == 0x000068, "Member 'AIC_Leloi_C_GetClosestMarkedForDeathEnemy::CallFunc_Map_Keys_Keys' has a wrong offset!");
static_assert(offsetof(AIC_Leloi_C_GetClosestMarkedForDeathEnemy, CallFunc_MinOfFloatArray_IndexOfMinValue) == 0x000078, "Member 'AIC_Leloi_C_GetClosestMarkedForDeathEnemy::CallFunc_MinOfFloatArray_IndexOfMinValue' has a wrong offset!");
static_assert(offsetof(AIC_Leloi_C_GetClosestMarkedForDeathEnemy, CallFunc_MinOfFloatArray_MinValue) == 0x00007C, "Member 'AIC_Leloi_C_GetClosestMarkedForDeathEnemy::CallFunc_MinOfFloatArray_MinValue' has a wrong offset!");
static_assert(offsetof(AIC_Leloi_C_GetClosestMarkedForDeathEnemy, CallFunc_Array_Get_Item) == 0x000080, "Member 'AIC_Leloi_C_GetClosestMarkedForDeathEnemy::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(AIC_Leloi_C_GetClosestMarkedForDeathEnemy, CallFunc_MinOfFloatArray_FloatArray_ImplicitCast) == 0x000088, "Member 'AIC_Leloi_C_GetClosestMarkedForDeathEnemy::CallFunc_MinOfFloatArray_FloatArray_ImplicitCast' has a wrong offset!");

// Function AIC_Leloi.AIC_Leloi_C.GetClosestTrespassingCharacter
// 0x00C8 (0x00C8 - 0x0000)
struct AIC_Leloi_C_GetClosestTrespassingCharacter final
{
public:
	class ACharacter*                             Return;                                            // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TMap<class ACharacter*, double>               L_DistanceToEnemies;                               // 0x0008(0x0050)(Edit, BlueprintVisible, DisableEditOnTemplate)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_64[0x4];                                       // 0x0064(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ACharacter*>                     CallFunc_Map_Keys_Keys;                            // 0x0068(0x0010)(ReferenceParm)
	TArray<double>                                CallFunc_Map_Values_Values;                        // 0x0078(0x0010)(ReferenceParm)
	int32                                         CallFunc_MinOfFloatArray_IndexOfMinValue;          // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MinOfFloatArray_MinValue;                 // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACharacter*                             CallFunc_Array_Get_Item;                           // 0x0090(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ACharacter*                             CallFunc_Array_Get_Item_1;                         // 0x0098(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A5[0x3];                                       // 0x00A5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetDistanceTo_ReturnValue;                // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_AC[0x4];                                       // 0x00AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<float>                                 CallFunc_MinOfFloatArray_FloatArray_ImplicitCast;  // 0x00B0(0x0010)(ConstParm, ReferenceParm)
	double                                        CallFunc_Map_Add_Value_ImplicitCast;               // 0x00C0(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AIC_Leloi_C_GetClosestTrespassingCharacter) == 0x000008, "Wrong alignment on AIC_Leloi_C_GetClosestTrespassingCharacter");
static_assert(sizeof(AIC_Leloi_C_GetClosestTrespassingCharacter) == 0x0000C8, "Wrong size on AIC_Leloi_C_GetClosestTrespassingCharacter");
static_assert(offsetof(AIC_Leloi_C_GetClosestTrespassingCharacter, Return) == 0x000000, "Member 'AIC_Leloi_C_GetClosestTrespassingCharacter::Return' has a wrong offset!");
static_assert(offsetof(AIC_Leloi_C_GetClosestTrespassingCharacter, L_DistanceToEnemies) == 0x000008, "Member 'AIC_Leloi_C_GetClosestTrespassingCharacter::L_DistanceToEnemies' has a wrong offset!");
static_assert(offsetof(AIC_Leloi_C_GetClosestTrespassingCharacter, Temp_int_Array_Index_Variable) == 0x000058, "Member 'AIC_Leloi_C_GetClosestTrespassingCharacter::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(AIC_Leloi_C_GetClosestTrespassingCharacter, Temp_int_Loop_Counter_Variable) == 0x00005C, "Member 'AIC_Leloi_C_GetClosestTrespassingCharacter::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(AIC_Leloi_C_GetClosestTrespassingCharacter, CallFunc_Add_IntInt_ReturnValue) == 0x000060, "Member 'AIC_Leloi_C_GetClosestTrespassingCharacter::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_Leloi_C_GetClosestTrespassingCharacter, CallFunc_Map_Keys_Keys) == 0x000068, "Member 'AIC_Leloi_C_GetClosestTrespassingCharacter::CallFunc_Map_Keys_Keys' has a wrong offset!");
static_assert(offsetof(AIC_Leloi_C_GetClosestTrespassingCharacter, CallFunc_Map_Values_Values) == 0x000078, "Member 'AIC_Leloi_C_GetClosestTrespassingCharacter::CallFunc_Map_Values_Values' has a wrong offset!");
static_assert(offsetof(AIC_Leloi_C_GetClosestTrespassingCharacter, CallFunc_MinOfFloatArray_IndexOfMinValue) == 0x000088, "Member 'AIC_Leloi_C_GetClosestTrespassingCharacter::CallFunc_MinOfFloatArray_IndexOfMinValue' has a wrong offset!");
static_assert(offsetof(AIC_Leloi_C_GetClosestTrespassingCharacter, CallFunc_MinOfFloatArray_MinValue) == 0x00008C, "Member 'AIC_Leloi_C_GetClosestTrespassingCharacter::CallFunc_MinOfFloatArray_MinValue' has a wrong offset!");
static_assert(offsetof(AIC_Leloi_C_GetClosestTrespassingCharacter, CallFunc_Array_Get_Item) == 0x000090, "Member 'AIC_Leloi_C_GetClosestTrespassingCharacter::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(AIC_Leloi_C_GetClosestTrespassingCharacter, CallFunc_Array_Get_Item_1) == 0x000098, "Member 'AIC_Leloi_C_GetClosestTrespassingCharacter::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(AIC_Leloi_C_GetClosestTrespassingCharacter, CallFunc_Array_Length_ReturnValue) == 0x0000A0, "Member 'AIC_Leloi_C_GetClosestTrespassingCharacter::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_Leloi_C_GetClosestTrespassingCharacter, CallFunc_Less_IntInt_ReturnValue) == 0x0000A4, "Member 'AIC_Leloi_C_GetClosestTrespassingCharacter::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_Leloi_C_GetClosestTrespassingCharacter, CallFunc_GetDistanceTo_ReturnValue) == 0x0000A8, "Member 'AIC_Leloi_C_GetClosestTrespassingCharacter::CallFunc_GetDistanceTo_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_Leloi_C_GetClosestTrespassingCharacter, CallFunc_MinOfFloatArray_FloatArray_ImplicitCast) == 0x0000B0, "Member 'AIC_Leloi_C_GetClosestTrespassingCharacter::CallFunc_MinOfFloatArray_FloatArray_ImplicitCast' has a wrong offset!");
static_assert(offsetof(AIC_Leloi_C_GetClosestTrespassingCharacter, CallFunc_Map_Add_Value_ImplicitCast) == 0x0000C0, "Member 'AIC_Leloi_C_GetClosestTrespassingCharacter::CallFunc_Map_Add_Value_ImplicitCast' has a wrong offset!");

// Function AIC_Leloi.AIC_Leloi_C.IsDistracted
// 0x0018 (0x0018 - 0x0000)
struct AIC_Leloi_C_IsDistracted final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBlackboardComponent*                   CallFunc_GetBlackboard_ReturnValue;                // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetValueAsEnum_ReturnValue;               // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetValidValue_ReturnValue;                // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AIC_Leloi_C_IsDistracted) == 0x000008, "Wrong alignment on AIC_Leloi_C_IsDistracted");
static_assert(sizeof(AIC_Leloi_C_IsDistracted) == 0x000018, "Wrong size on AIC_Leloi_C_IsDistracted");
static_assert(offsetof(AIC_Leloi_C_IsDistracted, ReturnValue) == 0x000000, "Member 'AIC_Leloi_C_IsDistracted::ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_Leloi_C_IsDistracted, CallFunc_GetBlackboard_ReturnValue) == 0x000008, "Member 'AIC_Leloi_C_IsDistracted::CallFunc_GetBlackboard_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_Leloi_C_IsDistracted, CallFunc_GetValueAsEnum_ReturnValue) == 0x000010, "Member 'AIC_Leloi_C_IsDistracted::CallFunc_GetValueAsEnum_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_Leloi_C_IsDistracted, CallFunc_GetValidValue_ReturnValue) == 0x000011, "Member 'AIC_Leloi_C_IsDistracted::CallFunc_GetValidValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_Leloi_C_IsDistracted, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000012, "Member 'AIC_Leloi_C_IsDistracted::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function AIC_Leloi.AIC_Leloi_C.IsHunting
// 0x0018 (0x0018 - 0x0000)
struct AIC_Leloi_C_IsHunting final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBlackboardComponent*                   CallFunc_GetBlackboard_ReturnValue;                // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetValueAsEnum_ReturnValue;               // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetValidValue_ReturnValue;                // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AIC_Leloi_C_IsHunting) == 0x000008, "Wrong alignment on AIC_Leloi_C_IsHunting");
static_assert(sizeof(AIC_Leloi_C_IsHunting) == 0x000018, "Wrong size on AIC_Leloi_C_IsHunting");
static_assert(offsetof(AIC_Leloi_C_IsHunting, ReturnValue) == 0x000000, "Member 'AIC_Leloi_C_IsHunting::ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_Leloi_C_IsHunting, CallFunc_GetBlackboard_ReturnValue) == 0x000008, "Member 'AIC_Leloi_C_IsHunting::CallFunc_GetBlackboard_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_Leloi_C_IsHunting, CallFunc_GetValueAsEnum_ReturnValue) == 0x000010, "Member 'AIC_Leloi_C_IsHunting::CallFunc_GetValueAsEnum_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_Leloi_C_IsHunting, CallFunc_GetValidValue_ReturnValue) == 0x000011, "Member 'AIC_Leloi_C_IsHunting::CallFunc_GetValidValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_Leloi_C_IsHunting, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000012, "Member 'AIC_Leloi_C_IsHunting::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function AIC_Leloi.AIC_Leloi_C.IsSensedActorOnProperty
// 0x0078 (0x0078 - 0x0000)
struct AIC_Leloi_C_IsSensedActorOnProperty final
{
public:
	class AActor*                                 SensedActor;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0010(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetTeamAtPoint_bFoundTeam;                // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           CallFunc_GetTeamAtPoint_TeamVolumeGameplayTag;     // 0x002C(0x0008)(NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTeam                                  CallFunc_GetTeamAtPoint_ReturnValue;               // 0x0038(0x0038)(ConstParm, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AIC_Leloi_C_IsSensedActorOnProperty) == 0x000008, "Wrong alignment on AIC_Leloi_C_IsSensedActorOnProperty");
static_assert(sizeof(AIC_Leloi_C_IsSensedActorOnProperty) == 0x000078, "Wrong size on AIC_Leloi_C_IsSensedActorOnProperty");
static_assert(offsetof(AIC_Leloi_C_IsSensedActorOnProperty, SensedActor) == 0x000000, "Member 'AIC_Leloi_C_IsSensedActorOnProperty::SensedActor' has a wrong offset!");
static_assert(offsetof(AIC_Leloi_C_IsSensedActorOnProperty, ReturnValue) == 0x000008, "Member 'AIC_Leloi_C_IsSensedActorOnProperty::ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_Leloi_C_IsSensedActorOnProperty, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000010, "Member 'AIC_Leloi_C_IsSensedActorOnProperty::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_Leloi_C_IsSensedActorOnProperty, CallFunc_GetTeamAtPoint_bFoundTeam) == 0x000028, "Member 'AIC_Leloi_C_IsSensedActorOnProperty::CallFunc_GetTeamAtPoint_bFoundTeam' has a wrong offset!");
static_assert(offsetof(AIC_Leloi_C_IsSensedActorOnProperty, CallFunc_GetTeamAtPoint_TeamVolumeGameplayTag) == 0x00002C, "Member 'AIC_Leloi_C_IsSensedActorOnProperty::CallFunc_GetTeamAtPoint_TeamVolumeGameplayTag' has a wrong offset!");
static_assert(offsetof(AIC_Leloi_C_IsSensedActorOnProperty, CallFunc_GetTeamAtPoint_ReturnValue) == 0x000038, "Member 'AIC_Leloi_C_IsSensedActorOnProperty::CallFunc_GetTeamAtPoint_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_Leloi_C_IsSensedActorOnProperty, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000070, "Member 'AIC_Leloi_C_IsSensedActorOnProperty::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function AIC_Leloi.AIC_Leloi_C.IsSleeping
// 0x0018 (0x0018 - 0x0000)
struct AIC_Leloi_C_IsSleeping final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBlackboardComponent*                   CallFunc_GetBlackboard_ReturnValue;                // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetValueAsEnum_ReturnValue;               // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetValidValue_ReturnValue;                // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AIC_Leloi_C_IsSleeping) == 0x000008, "Wrong alignment on AIC_Leloi_C_IsSleeping");
static_assert(sizeof(AIC_Leloi_C_IsSleeping) == 0x000018, "Wrong size on AIC_Leloi_C_IsSleeping");
static_assert(offsetof(AIC_Leloi_C_IsSleeping, ReturnValue) == 0x000000, "Member 'AIC_Leloi_C_IsSleeping::ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_Leloi_C_IsSleeping, CallFunc_GetBlackboard_ReturnValue) == 0x000008, "Member 'AIC_Leloi_C_IsSleeping::CallFunc_GetBlackboard_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_Leloi_C_IsSleeping, CallFunc_GetValueAsEnum_ReturnValue) == 0x000010, "Member 'AIC_Leloi_C_IsSleeping::CallFunc_GetValueAsEnum_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_Leloi_C_IsSleeping, CallFunc_GetValidValue_ReturnValue) == 0x000011, "Member 'AIC_Leloi_C_IsSleeping::CallFunc_GetValidValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_Leloi_C_IsSleeping, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000012, "Member 'AIC_Leloi_C_IsSleeping::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function AIC_Leloi.AIC_Leloi_C.On_TimeOfDayChange_Event
// 0x0001 (0x0001 - 0x0000)
struct AIC_Leloi_C_On_TimeOfDayChange_Event final
{
public:
	E_TimeOfDay                                   TimeOfDay;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AIC_Leloi_C_On_TimeOfDayChange_Event) == 0x000001, "Wrong alignment on AIC_Leloi_C_On_TimeOfDayChange_Event");
static_assert(sizeof(AIC_Leloi_C_On_TimeOfDayChange_Event) == 0x000001, "Wrong size on AIC_Leloi_C_On_TimeOfDayChange_Event");
static_assert(offsetof(AIC_Leloi_C_On_TimeOfDayChange_Event, TimeOfDay) == 0x000000, "Member 'AIC_Leloi_C_On_TimeOfDayChange_Event::TimeOfDay' has a wrong offset!");

// Function AIC_Leloi.AIC_Leloi_C.ReceivePossess
// 0x0008 (0x0008 - 0x0000)
struct AIC_Leloi_C_ReceivePossess final
{
public:
	class APawn*                                  PossessedPawn;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AIC_Leloi_C_ReceivePossess) == 0x000008, "Wrong alignment on AIC_Leloi_C_ReceivePossess");
static_assert(sizeof(AIC_Leloi_C_ReceivePossess) == 0x000008, "Wrong size on AIC_Leloi_C_ReceivePossess");
static_assert(offsetof(AIC_Leloi_C_ReceivePossess, PossessedPawn) == 0x000000, "Member 'AIC_Leloi_C_ReceivePossess::PossessedPawn' has a wrong offset!");

// Function AIC_Leloi.AIC_Leloi_C.Set State as Distracted
// 0x0028 (0x0028 - 0x0000)
struct AIC_Leloi_C_Set_State_as_Distracted final
{
public:
	class UObject*                                ActorOfInterest;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue;              // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue;                   // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_Leloi_C*                            K2Node_DynamicCast_AsBP_Leloi;                     // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AIC_Leloi_C_Set_State_as_Distracted) == 0x000008, "Wrong alignment on AIC_Leloi_C_Set_State_as_Distracted");
static_assert(sizeof(AIC_Leloi_C_Set_State_as_Distracted) == 0x000028, "Wrong size on AIC_Leloi_C_Set_State_as_Distracted");
static_assert(offsetof(AIC_Leloi_C_Set_State_as_Distracted, ActorOfInterest) == 0x000000, "Member 'AIC_Leloi_C_Set_State_as_Distracted::ActorOfInterest' has a wrong offset!");
static_assert(offsetof(AIC_Leloi_C_Set_State_as_Distracted, CallFunc_MakeLiteralByte_ReturnValue) == 0x000008, "Member 'AIC_Leloi_C_Set_State_as_Distracted::CallFunc_MakeLiteralByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_Leloi_C_Set_State_as_Distracted, CallFunc_K2_GetPawn_ReturnValue) == 0x000010, "Member 'AIC_Leloi_C_Set_State_as_Distracted::CallFunc_K2_GetPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_Leloi_C_Set_State_as_Distracted, K2Node_DynamicCast_AsBP_Leloi) == 0x000018, "Member 'AIC_Leloi_C_Set_State_as_Distracted::K2Node_DynamicCast_AsBP_Leloi' has a wrong offset!");
static_assert(offsetof(AIC_Leloi_C_Set_State_as_Distracted, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'AIC_Leloi_C_Set_State_as_Distracted::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function AIC_Leloi.AIC_Leloi_C.SetStateAsHunting
// 0x0028 (0x0028 - 0x0000)
struct AIC_Leloi_C_SetStateAsHunting final
{
public:
	class UObject*                                HuntedTarget;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue;              // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue;                   // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_Leloi_C*                            K2Node_DynamicCast_AsBP_Leloi;                     // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AIC_Leloi_C_SetStateAsHunting) == 0x000008, "Wrong alignment on AIC_Leloi_C_SetStateAsHunting");
static_assert(sizeof(AIC_Leloi_C_SetStateAsHunting) == 0x000028, "Wrong size on AIC_Leloi_C_SetStateAsHunting");
static_assert(offsetof(AIC_Leloi_C_SetStateAsHunting, HuntedTarget) == 0x000000, "Member 'AIC_Leloi_C_SetStateAsHunting::HuntedTarget' has a wrong offset!");
static_assert(offsetof(AIC_Leloi_C_SetStateAsHunting, CallFunc_MakeLiteralByte_ReturnValue) == 0x000008, "Member 'AIC_Leloi_C_SetStateAsHunting::CallFunc_MakeLiteralByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_Leloi_C_SetStateAsHunting, CallFunc_K2_GetPawn_ReturnValue) == 0x000010, "Member 'AIC_Leloi_C_SetStateAsHunting::CallFunc_K2_GetPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_Leloi_C_SetStateAsHunting, K2Node_DynamicCast_AsBP_Leloi) == 0x000018, "Member 'AIC_Leloi_C_SetStateAsHunting::K2Node_DynamicCast_AsBP_Leloi' has a wrong offset!");
static_assert(offsetof(AIC_Leloi_C_SetStateAsHunting, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'AIC_Leloi_C_SetStateAsHunting::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function AIC_Leloi.AIC_Leloi_C.SetStateAsPatrolling
// 0x0030 (0x0030 - 0x0000)
struct AIC_Leloi_C_SetStateAsPatrolling final
{
public:
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue;              // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBlackboardComponent*                   CallFunc_GetBlackboard_ReturnValue;                // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetValueAsBool_ReturnValue;               // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12[0x6];                                       // 0x0012(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue;                   // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_Leloi_C*                            K2Node_DynamicCast_AsBP_Leloi;                     // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AIC_Leloi_C_SetStateAsPatrolling) == 0x000008, "Wrong alignment on AIC_Leloi_C_SetStateAsPatrolling");
static_assert(sizeof(AIC_Leloi_C_SetStateAsPatrolling) == 0x000030, "Wrong size on AIC_Leloi_C_SetStateAsPatrolling");
static_assert(offsetof(AIC_Leloi_C_SetStateAsPatrolling, CallFunc_MakeLiteralByte_ReturnValue) == 0x000000, "Member 'AIC_Leloi_C_SetStateAsPatrolling::CallFunc_MakeLiteralByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_Leloi_C_SetStateAsPatrolling, CallFunc_GetBlackboard_ReturnValue) == 0x000008, "Member 'AIC_Leloi_C_SetStateAsPatrolling::CallFunc_GetBlackboard_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_Leloi_C_SetStateAsPatrolling, CallFunc_GetValueAsBool_ReturnValue) == 0x000010, "Member 'AIC_Leloi_C_SetStateAsPatrolling::CallFunc_GetValueAsBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_Leloi_C_SetStateAsPatrolling, CallFunc_Not_PreBool_ReturnValue) == 0x000011, "Member 'AIC_Leloi_C_SetStateAsPatrolling::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_Leloi_C_SetStateAsPatrolling, CallFunc_K2_GetPawn_ReturnValue) == 0x000018, "Member 'AIC_Leloi_C_SetStateAsPatrolling::CallFunc_K2_GetPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_Leloi_C_SetStateAsPatrolling, K2Node_DynamicCast_AsBP_Leloi) == 0x000020, "Member 'AIC_Leloi_C_SetStateAsPatrolling::K2Node_DynamicCast_AsBP_Leloi' has a wrong offset!");
static_assert(offsetof(AIC_Leloi_C_SetStateAsPatrolling, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'AIC_Leloi_C_SetStateAsPatrolling::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function AIC_Leloi.AIC_Leloi_C.SetStateAsSleeping
// 0x0020 (0x0020 - 0x0000)
struct AIC_Leloi_C_SetStateAsSleeping final
{
public:
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue;              // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue;                   // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_Leloi_C*                            K2Node_DynamicCast_AsBP_Leloi;                     // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AIC_Leloi_C_SetStateAsSleeping) == 0x000008, "Wrong alignment on AIC_Leloi_C_SetStateAsSleeping");
static_assert(sizeof(AIC_Leloi_C_SetStateAsSleeping) == 0x000020, "Wrong size on AIC_Leloi_C_SetStateAsSleeping");
static_assert(offsetof(AIC_Leloi_C_SetStateAsSleeping, CallFunc_MakeLiteralByte_ReturnValue) == 0x000000, "Member 'AIC_Leloi_C_SetStateAsSleeping::CallFunc_MakeLiteralByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_Leloi_C_SetStateAsSleeping, CallFunc_K2_GetPawn_ReturnValue) == 0x000008, "Member 'AIC_Leloi_C_SetStateAsSleeping::CallFunc_K2_GetPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_Leloi_C_SetStateAsSleeping, K2Node_DynamicCast_AsBP_Leloi) == 0x000010, "Member 'AIC_Leloi_C_SetStateAsSleeping::K2Node_DynamicCast_AsBP_Leloi' has a wrong offset!");
static_assert(offsetof(AIC_Leloi_C_SetStateAsSleeping, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'AIC_Leloi_C_SetStateAsSleeping::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function AIC_Leloi.AIC_Leloi_C.TeleportLeloiToDogHouseIfNotOnProperty
// 0x0088 (0x0088 - 0x0000)
struct AIC_Leloi_C_TeleportLeloiToDogHouseIfNotOnProperty final
{
public:
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0000(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_TeleportTo_ReturnValue;                // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0020(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetTeamAtPoint_bFoundTeam;                // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x3];                                       // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           CallFunc_GetTeamAtPoint_TeamVolumeGameplayTag;     // 0x003C(0x0008)(NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTeam                                  CallFunc_GetTeamAtPoint_ReturnValue;               // 0x0048(0x0038)(ConstParm, NoDestructor)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AIC_Leloi_C_TeleportLeloiToDogHouseIfNotOnProperty) == 0x000008, "Wrong alignment on AIC_Leloi_C_TeleportLeloiToDogHouseIfNotOnProperty");
static_assert(sizeof(AIC_Leloi_C_TeleportLeloiToDogHouseIfNotOnProperty) == 0x000088, "Wrong size on AIC_Leloi_C_TeleportLeloiToDogHouseIfNotOnProperty");
static_assert(offsetof(AIC_Leloi_C_TeleportLeloiToDogHouseIfNotOnProperty, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000000, "Member 'AIC_Leloi_C_TeleportLeloiToDogHouseIfNotOnProperty::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_Leloi_C_TeleportLeloiToDogHouseIfNotOnProperty, CallFunc_K2_TeleportTo_ReturnValue) == 0x000018, "Member 'AIC_Leloi_C_TeleportLeloiToDogHouseIfNotOnProperty::CallFunc_K2_TeleportTo_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_Leloi_C_TeleportLeloiToDogHouseIfNotOnProperty, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000020, "Member 'AIC_Leloi_C_TeleportLeloiToDogHouseIfNotOnProperty::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_Leloi_C_TeleportLeloiToDogHouseIfNotOnProperty, CallFunc_GetTeamAtPoint_bFoundTeam) == 0x000038, "Member 'AIC_Leloi_C_TeleportLeloiToDogHouseIfNotOnProperty::CallFunc_GetTeamAtPoint_bFoundTeam' has a wrong offset!");
static_assert(offsetof(AIC_Leloi_C_TeleportLeloiToDogHouseIfNotOnProperty, CallFunc_GetTeamAtPoint_TeamVolumeGameplayTag) == 0x00003C, "Member 'AIC_Leloi_C_TeleportLeloiToDogHouseIfNotOnProperty::CallFunc_GetTeamAtPoint_TeamVolumeGameplayTag' has a wrong offset!");
static_assert(offsetof(AIC_Leloi_C_TeleportLeloiToDogHouseIfNotOnProperty, CallFunc_GetTeamAtPoint_ReturnValue) == 0x000048, "Member 'AIC_Leloi_C_TeleportLeloiToDogHouseIfNotOnProperty::CallFunc_GetTeamAtPoint_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_Leloi_C_TeleportLeloiToDogHouseIfNotOnProperty, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000080, "Member 'AIC_Leloi_C_TeleportLeloiToDogHouseIfNotOnProperty::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function AIC_Leloi.AIC_Leloi_C.UpdateEnemiesMarkedForDeath
// 0x0028 (0x0028 - 0x0000)
struct AIC_Leloi_C_UpdateEnemiesMarkedForDeath final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACharacter*                             CallFunc_Array_Get_Item;                           // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetDistanceTo_ReturnValue;                // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Map_Add_Value_ImplicitCast;               // 0x0020(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AIC_Leloi_C_UpdateEnemiesMarkedForDeath) == 0x000008, "Wrong alignment on AIC_Leloi_C_UpdateEnemiesMarkedForDeath");
static_assert(sizeof(AIC_Leloi_C_UpdateEnemiesMarkedForDeath) == 0x000028, "Wrong size on AIC_Leloi_C_UpdateEnemiesMarkedForDeath");
static_assert(offsetof(AIC_Leloi_C_UpdateEnemiesMarkedForDeath, Temp_int_Array_Index_Variable) == 0x000000, "Member 'AIC_Leloi_C_UpdateEnemiesMarkedForDeath::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(AIC_Leloi_C_UpdateEnemiesMarkedForDeath, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'AIC_Leloi_C_UpdateEnemiesMarkedForDeath::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(AIC_Leloi_C_UpdateEnemiesMarkedForDeath, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'AIC_Leloi_C_UpdateEnemiesMarkedForDeath::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_Leloi_C_UpdateEnemiesMarkedForDeath, CallFunc_Array_Length_ReturnValue) == 0x00000C, "Member 'AIC_Leloi_C_UpdateEnemiesMarkedForDeath::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_Leloi_C_UpdateEnemiesMarkedForDeath, CallFunc_Array_Get_Item) == 0x000010, "Member 'AIC_Leloi_C_UpdateEnemiesMarkedForDeath::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(AIC_Leloi_C_UpdateEnemiesMarkedForDeath, CallFunc_Less_IntInt_ReturnValue) == 0x000018, "Member 'AIC_Leloi_C_UpdateEnemiesMarkedForDeath::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_Leloi_C_UpdateEnemiesMarkedForDeath, CallFunc_GetDistanceTo_ReturnValue) == 0x00001C, "Member 'AIC_Leloi_C_UpdateEnemiesMarkedForDeath::CallFunc_GetDistanceTo_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_Leloi_C_UpdateEnemiesMarkedForDeath, CallFunc_Map_Add_Value_ImplicitCast) == 0x000020, "Member 'AIC_Leloi_C_UpdateEnemiesMarkedForDeath::CallFunc_Map_Add_Value_ImplicitCast' has a wrong offset!");

}

