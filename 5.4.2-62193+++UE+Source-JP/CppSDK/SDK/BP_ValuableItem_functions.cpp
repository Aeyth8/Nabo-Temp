#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_ValuableItem

#include "Basic.hpp"

#include "BP_ValuableItem_classes.hpp"
#include "BP_ValuableItem_parameters.hpp"


namespace SDK
{

// Function BP_ValuableItem.BP_ValuableItem_C.CanActivateTrap
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool ABP_ValuableItem_C::CanActivateTrap()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ValuableItem_C", "CanActivateTrap");

	Params::BP_ValuableItem_C_CanActivateTrap Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_ValuableItem.BP_ValuableItem_C.ExecuteUbergraph_BP_ValuableItem
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_ValuableItem_C::ExecuteUbergraph_BP_ValuableItem(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ValuableItem_C", "ExecuteUbergraph_BP_ValuableItem");

	Params::BP_ValuableItem_C_ExecuteUbergraph_BP_ValuableItem Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ValuableItem.BP_ValuableItem_C.OnEnded_65CD2C62425455685449238B4BA9C2E1
// (BlueprintCallable, BlueprintEvent)

void ABP_ValuableItem_C::OnEnded_65CD2C62425455685449238B4BA9C2E1()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ValuableItem_C", "OnEnded_65CD2C62425455685449238B4BA9C2E1");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ValuableItem.BP_ValuableItem_C.OnEnded_94BAD75142C0FEC3A5E948BF7E3A784F
// (BlueprintCallable, BlueprintEvent)

void ABP_ValuableItem_C::OnEnded_94BAD75142C0FEC3A5E948BF7E3A784F()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ValuableItem_C", "OnEnded_94BAD75142C0FEC3A5E948BF7E3A784F");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ValuableItem.BP_ValuableItem_C.OnMessageReceived_C2A8115A4820329653CE6FA640BA59A2
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UAsyncAction_ListenForGameplayMessage*ProxyObject                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// struct FGameplayTag                     ActualChannel                                          (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)

void ABP_ValuableItem_C::OnMessageReceived_C2A8115A4820329653CE6FA640BA59A2(class UAsyncAction_ListenForGameplayMessage* ProxyObject, const struct FGameplayTag& ActualChannel)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ValuableItem_C", "OnMessageReceived_C2A8115A4820329653CE6FA640BA59A2");

	Params::BP_ValuableItem_C_OnMessageReceived_C2A8115A4820329653CE6FA640BA59A2 Parms{};

	Parms.ProxyObject = ProxyObject;
	Parms.ActualChannel = std::move(ActualChannel);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ValuableItem.BP_ValuableItem_C.RemoveSimulatePhysics
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_ValuableItem_C::RemoveSimulatePhysics()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ValuableItem_C", "RemoveSimulatePhysics");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ValuableItem.BP_ValuableItem_C.SetFreezeTimer
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  Time                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_ValuableItem_C::SetFreezeTimer(double Time)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ValuableItem_C", "SetFreezeTimer");

	Params::BP_ValuableItem_C_SetFreezeTimer Parms{};

	Parms.Time = Time;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ValuableItem.BP_ValuableItem_C.SetupPings
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_ValuableItem_C::SetupPings()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ValuableItem_C", "SetupPings");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ValuableItem.BP_ValuableItem_C.SwitchToObjectCamera
// (BlueprintCallable, BlueprintEvent)

void ABP_ValuableItem_C::SwitchToObjectCamera()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ValuableItem_C", "SwitchToObjectCamera");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ValuableItem.BP_ValuableItem_C.Timeline__FinishedFunc
// (BlueprintEvent)

void ABP_ValuableItem_C::Timeline__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ValuableItem_C", "Timeline__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ValuableItem.BP_ValuableItem_C.Timeline__UpdateFunc
// (BlueprintEvent)

void ABP_ValuableItem_C::Timeline__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ValuableItem_C", "Timeline__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ValuableItem.BP_ValuableItem_C.ValuablesIndicators
// (Net, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// class APlayerState*                     PlayerState                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_ValuableItem_C::ValuablesIndicators(class APlayerState* PlayerState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ValuableItem_C", "ValuablesIndicators");

	Params::BP_ValuableItem_C_ValuablesIndicators Parms{};

	Parms.PlayerState = PlayerState;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ValuableItem.BP_ValuableItem_C.OnGrabbed
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_ValuableItem_C::OnGrabbed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ValuableItem_C", "OnGrabbed");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ValuableItem.BP_ValuableItem_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ABP_ValuableItem_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ValuableItem_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ValuableItem.BP_ValuableItem_C.SetVisibleReceptacles
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class ABP_ReceptacleFurnitureBase_C*>Array                                                  (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// class AActor*                           User                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_ValuableItem_C::SetVisibleReceptacles(TArray<class ABP_ReceptacleFurnitureBase_C*>& Array, class AActor* User)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ValuableItem_C", "SetVisibleReceptacles");

	Params::BP_ValuableItem_C_SetVisibleReceptacles Parms{};

	Parms.Array = std::move(Array);
	Parms.User = User;

	UObject::ProcessEvent(Func, &Parms);

	Array = std::move(Parms.Array);
}


// Function BP_ValuableItem.BP_ValuableItem_C.SetVisibleScoreZones
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class ABP_ReceptacleFurnitureBase_C*>Array                                                  (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// class AActor*                           User                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_ValuableItem_C::SetVisibleScoreZones(TArray<class ABP_ReceptacleFurnitureBase_C*>& Array, class AActor* User)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ValuableItem_C", "SetVisibleScoreZones");

	Params::BP_ValuableItem_C_SetVisibleScoreZones Parms{};

	Parms.Array = std::move(Array);
	Parms.User = User;

	UObject::ProcessEvent(Func, &Parms);

	Array = std::move(Parms.Array);
}


// Function BP_ValuableItem.BP_ValuableItem_C.IsAvailableForInteraction
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// class AActor*                           InteractingActor                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*              InteractionComponent                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool ABP_ValuableItem_C::IsAvailableForInteraction(class AActor* InteractingActor, class UPrimitiveComponent* InteractionComponent) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ValuableItem_C", "IsAvailableForInteraction");

	Params::BP_ValuableItem_C_IsAvailableForInteraction Parms{};

	Parms.InteractingActor = InteractingActor;
	Parms.InteractionComponent = InteractionComponent;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}

}

