#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WI_BenchmarkOverlay

#include "Basic.hpp"

#include "E_BenchmarkState_structs.hpp"
#include "UMG_structs.hpp"


namespace SDK::Params
{

// Function WI_BenchmarkOverlay.WI_BenchmarkOverlay_C.AddEntries
// 0x00C0 (0x00C0 - 0x0000)
struct WI_BenchmarkOverlay_C_AddEntries final
{
public:
	TMap<class FString, class FString>            Input;                                             // 0x0000(0x0050)(BlueprintVisible, BlueprintReadOnly, Parm)
	TArray<class FString>                         CallFunc_Map_Keys_Keys;                            // 0x0050(0x0010)(ReferenceParm)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Array_Get_Item;                           // 0x0068(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Map_Find_Value;                           // 0x0078(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_89[0x7];                                       // 0x0089(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0090(0x0010)()
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_1;          // 0x00A0(0x0010)()
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B5[0x3];                                       // 0x00B5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WI_BenchmarkOverlay_C_AddEntries) == 0x000008, "Wrong alignment on WI_BenchmarkOverlay_C_AddEntries");
static_assert(sizeof(WI_BenchmarkOverlay_C_AddEntries) == 0x0000C0, "Wrong size on WI_BenchmarkOverlay_C_AddEntries");
static_assert(offsetof(WI_BenchmarkOverlay_C_AddEntries, Input) == 0x000000, "Member 'WI_BenchmarkOverlay_C_AddEntries::Input' has a wrong offset!");
static_assert(offsetof(WI_BenchmarkOverlay_C_AddEntries, CallFunc_Map_Keys_Keys) == 0x000050, "Member 'WI_BenchmarkOverlay_C_AddEntries::CallFunc_Map_Keys_Keys' has a wrong offset!");
static_assert(offsetof(WI_BenchmarkOverlay_C_AddEntries, Temp_int_Array_Index_Variable) == 0x000060, "Member 'WI_BenchmarkOverlay_C_AddEntries::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WI_BenchmarkOverlay_C_AddEntries, CallFunc_Array_Length_ReturnValue) == 0x000064, "Member 'WI_BenchmarkOverlay_C_AddEntries::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WI_BenchmarkOverlay_C_AddEntries, CallFunc_Array_Get_Item) == 0x000068, "Member 'WI_BenchmarkOverlay_C_AddEntries::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WI_BenchmarkOverlay_C_AddEntries, CallFunc_Map_Find_Value) == 0x000078, "Member 'WI_BenchmarkOverlay_C_AddEntries::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(WI_BenchmarkOverlay_C_AddEntries, CallFunc_Map_Find_ReturnValue) == 0x000088, "Member 'WI_BenchmarkOverlay_C_AddEntries::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(WI_BenchmarkOverlay_C_AddEntries, CallFunc_Conv_StringToText_ReturnValue) == 0x000090, "Member 'WI_BenchmarkOverlay_C_AddEntries::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WI_BenchmarkOverlay_C_AddEntries, CallFunc_Conv_StringToText_ReturnValue_1) == 0x0000A0, "Member 'WI_BenchmarkOverlay_C_AddEntries::CallFunc_Conv_StringToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WI_BenchmarkOverlay_C_AddEntries, Temp_int_Loop_Counter_Variable) == 0x0000B0, "Member 'WI_BenchmarkOverlay_C_AddEntries::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WI_BenchmarkOverlay_C_AddEntries, CallFunc_Less_IntInt_ReturnValue) == 0x0000B4, "Member 'WI_BenchmarkOverlay_C_AddEntries::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WI_BenchmarkOverlay_C_AddEntries, CallFunc_Add_IntInt_ReturnValue) == 0x0000B8, "Member 'WI_BenchmarkOverlay_C_AddEntries::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function WI_BenchmarkOverlay.WI_BenchmarkOverlay_C.AddEntry
// 0x0048 (0x0048 - 0x0000)
struct WI_BenchmarkOverlay_C_AddEntry final
{
public:
	class FText                                   LabelText;                                         // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm)
	class FText                                   ValueText;                                         // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm)
	int32                                         Row;                                               // 0x0020(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWI_BenchmarkOverlayText_C*             CallFunc_Create_ReturnValue;                       // 0x0028(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWI_BenchmarkOverlayText_C*             CallFunc_Create_ReturnValue_1;                     // 0x0030(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UUniformGridSlot*                       CallFunc_AddChildToUniformGrid_ReturnValue;        // 0x0038(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UUniformGridSlot*                       CallFunc_AddChildToUniformGrid_ReturnValue_1;      // 0x0040(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WI_BenchmarkOverlay_C_AddEntry) == 0x000008, "Wrong alignment on WI_BenchmarkOverlay_C_AddEntry");
static_assert(sizeof(WI_BenchmarkOverlay_C_AddEntry) == 0x000048, "Wrong size on WI_BenchmarkOverlay_C_AddEntry");
static_assert(offsetof(WI_BenchmarkOverlay_C_AddEntry, LabelText) == 0x000000, "Member 'WI_BenchmarkOverlay_C_AddEntry::LabelText' has a wrong offset!");
static_assert(offsetof(WI_BenchmarkOverlay_C_AddEntry, ValueText) == 0x000010, "Member 'WI_BenchmarkOverlay_C_AddEntry::ValueText' has a wrong offset!");
static_assert(offsetof(WI_BenchmarkOverlay_C_AddEntry, Row) == 0x000020, "Member 'WI_BenchmarkOverlay_C_AddEntry::Row' has a wrong offset!");
static_assert(offsetof(WI_BenchmarkOverlay_C_AddEntry, CallFunc_Create_ReturnValue) == 0x000028, "Member 'WI_BenchmarkOverlay_C_AddEntry::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(WI_BenchmarkOverlay_C_AddEntry, CallFunc_Create_ReturnValue_1) == 0x000030, "Member 'WI_BenchmarkOverlay_C_AddEntry::CallFunc_Create_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WI_BenchmarkOverlay_C_AddEntry, CallFunc_AddChildToUniformGrid_ReturnValue) == 0x000038, "Member 'WI_BenchmarkOverlay_C_AddEntry::CallFunc_AddChildToUniformGrid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WI_BenchmarkOverlay_C_AddEntry, CallFunc_AddChildToUniformGrid_ReturnValue_1) == 0x000040, "Member 'WI_BenchmarkOverlay_C_AddEntry::CallFunc_AddChildToUniformGrid_ReturnValue_1' has a wrong offset!");

// Function WI_BenchmarkOverlay.WI_BenchmarkOverlay_C.AddOrUpdateEntries
// 0x00E8 (0x00E8 - 0x0000)
struct WI_BenchmarkOverlay_C_AddOrUpdateEntries final
{
public:
	TMap<class FString, class FString>            Input;                                             // 0x0000(0x0050)(BlueprintVisible, BlueprintReadOnly, Parm)
	int32                                         CallFunc_Map_Length_ReturnValue;                   // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_54[0x4];                                       // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FString>                         CallFunc_Map_Keys_Keys;                            // 0x0058(0x0010)(ReferenceParm)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0074(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_75[0x3];                                       // 0x0075(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_84[0x4];                                       // 0x0084(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Array_Get_Item;                           // 0x0088(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_99[0x7];                                       // 0x0099(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Map_Find_Value;                           // 0x00A0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B1[0x7];                                       // 0x00B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x00B8(0x0010)()
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_1;          // 0x00C8(0x0010)()
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_RemoveChildAt_ReturnValue;                // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WI_BenchmarkOverlay_C_AddOrUpdateEntries) == 0x000008, "Wrong alignment on WI_BenchmarkOverlay_C_AddOrUpdateEntries");
static_assert(sizeof(WI_BenchmarkOverlay_C_AddOrUpdateEntries) == 0x0000E8, "Wrong size on WI_BenchmarkOverlay_C_AddOrUpdateEntries");
static_assert(offsetof(WI_BenchmarkOverlay_C_AddOrUpdateEntries, Input) == 0x000000, "Member 'WI_BenchmarkOverlay_C_AddOrUpdateEntries::Input' has a wrong offset!");
static_assert(offsetof(WI_BenchmarkOverlay_C_AddOrUpdateEntries, CallFunc_Map_Length_ReturnValue) == 0x000050, "Member 'WI_BenchmarkOverlay_C_AddOrUpdateEntries::CallFunc_Map_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WI_BenchmarkOverlay_C_AddOrUpdateEntries, CallFunc_Map_Keys_Keys) == 0x000058, "Member 'WI_BenchmarkOverlay_C_AddOrUpdateEntries::CallFunc_Map_Keys_Keys' has a wrong offset!");
static_assert(offsetof(WI_BenchmarkOverlay_C_AddOrUpdateEntries, CallFunc_Subtract_IntInt_ReturnValue) == 0x000068, "Member 'WI_BenchmarkOverlay_C_AddOrUpdateEntries::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WI_BenchmarkOverlay_C_AddOrUpdateEntries, CallFunc_Array_Length_ReturnValue) == 0x00006C, "Member 'WI_BenchmarkOverlay_C_AddOrUpdateEntries::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WI_BenchmarkOverlay_C_AddOrUpdateEntries, Temp_int_Loop_Counter_Variable) == 0x000070, "Member 'WI_BenchmarkOverlay_C_AddOrUpdateEntries::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WI_BenchmarkOverlay_C_AddOrUpdateEntries, CallFunc_Less_IntInt_ReturnValue) == 0x000074, "Member 'WI_BenchmarkOverlay_C_AddOrUpdateEntries::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WI_BenchmarkOverlay_C_AddOrUpdateEntries, CallFunc_Add_IntInt_ReturnValue) == 0x000078, "Member 'WI_BenchmarkOverlay_C_AddOrUpdateEntries::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WI_BenchmarkOverlay_C_AddOrUpdateEntries, Temp_int_Array_Index_Variable) == 0x00007C, "Member 'WI_BenchmarkOverlay_C_AddOrUpdateEntries::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WI_BenchmarkOverlay_C_AddOrUpdateEntries, Temp_int_Variable) == 0x000080, "Member 'WI_BenchmarkOverlay_C_AddOrUpdateEntries::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(WI_BenchmarkOverlay_C_AddOrUpdateEntries, CallFunc_Array_Get_Item) == 0x000088, "Member 'WI_BenchmarkOverlay_C_AddOrUpdateEntries::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WI_BenchmarkOverlay_C_AddOrUpdateEntries, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000098, "Member 'WI_BenchmarkOverlay_C_AddOrUpdateEntries::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WI_BenchmarkOverlay_C_AddOrUpdateEntries, CallFunc_Map_Find_Value) == 0x0000A0, "Member 'WI_BenchmarkOverlay_C_AddOrUpdateEntries::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(WI_BenchmarkOverlay_C_AddOrUpdateEntries, CallFunc_Map_Find_ReturnValue) == 0x0000B0, "Member 'WI_BenchmarkOverlay_C_AddOrUpdateEntries::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(WI_BenchmarkOverlay_C_AddOrUpdateEntries, CallFunc_Conv_StringToText_ReturnValue) == 0x0000B8, "Member 'WI_BenchmarkOverlay_C_AddOrUpdateEntries::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WI_BenchmarkOverlay_C_AddOrUpdateEntries, CallFunc_Conv_StringToText_ReturnValue_1) == 0x0000C8, "Member 'WI_BenchmarkOverlay_C_AddOrUpdateEntries::CallFunc_Conv_StringToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WI_BenchmarkOverlay_C_AddOrUpdateEntries, CallFunc_Add_IntInt_ReturnValue_1) == 0x0000D8, "Member 'WI_BenchmarkOverlay_C_AddOrUpdateEntries::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WI_BenchmarkOverlay_C_AddOrUpdateEntries, CallFunc_Add_IntInt_ReturnValue_2) == 0x0000DC, "Member 'WI_BenchmarkOverlay_C_AddOrUpdateEntries::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WI_BenchmarkOverlay_C_AddOrUpdateEntries, CallFunc_RemoveChildAt_ReturnValue) == 0x0000E0, "Member 'WI_BenchmarkOverlay_C_AddOrUpdateEntries::CallFunc_RemoveChildAt_ReturnValue' has a wrong offset!");

// Function WI_BenchmarkOverlay.WI_BenchmarkOverlay_C.AddOrUpdateEntry
// 0x0070 (0x0070 - 0x0000)
struct WI_BenchmarkOverlay_C_AddOrUpdateEntry final
{
public:
	class FText                                   Label;                                             // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm)
	class FText                                   Value;                                             // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm)
	int32                                         Row;                                               // 0x0020(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_MathExpression_ReturnValue;                 // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWidget*                                CallFunc_GetChildAt_ReturnValue;                   // 0x0028(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_MathExpression_ReturnValue_1;               // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWidget*                                CallFunc_GetChildAt_ReturnValue_1;                 // 0x0038(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_MathExpression_ReturnValue_2;               // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_45[0x3];                                       // 0x0045(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UWI_BenchmarkOverlayText_C*             K2Node_DynamicCast_AsWI_Benchmark_Overlay_Text;    // 0x0048(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                CallFunc_GetChildAt_ReturnValue_2;                 // 0x0058(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWI_BenchmarkOverlayText_C*             K2Node_DynamicCast_AsWI_Benchmark_Overlay_Text_1;  // 0x0060(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WI_BenchmarkOverlay_C_AddOrUpdateEntry) == 0x000008, "Wrong alignment on WI_BenchmarkOverlay_C_AddOrUpdateEntry");
static_assert(sizeof(WI_BenchmarkOverlay_C_AddOrUpdateEntry) == 0x000070, "Wrong size on WI_BenchmarkOverlay_C_AddOrUpdateEntry");
static_assert(offsetof(WI_BenchmarkOverlay_C_AddOrUpdateEntry, Label) == 0x000000, "Member 'WI_BenchmarkOverlay_C_AddOrUpdateEntry::Label' has a wrong offset!");
static_assert(offsetof(WI_BenchmarkOverlay_C_AddOrUpdateEntry, Value) == 0x000010, "Member 'WI_BenchmarkOverlay_C_AddOrUpdateEntry::Value' has a wrong offset!");
static_assert(offsetof(WI_BenchmarkOverlay_C_AddOrUpdateEntry, Row) == 0x000020, "Member 'WI_BenchmarkOverlay_C_AddOrUpdateEntry::Row' has a wrong offset!");
static_assert(offsetof(WI_BenchmarkOverlay_C_AddOrUpdateEntry, K2Node_MathExpression_ReturnValue) == 0x000024, "Member 'WI_BenchmarkOverlay_C_AddOrUpdateEntry::K2Node_MathExpression_ReturnValue' has a wrong offset!");
static_assert(offsetof(WI_BenchmarkOverlay_C_AddOrUpdateEntry, CallFunc_GetChildAt_ReturnValue) == 0x000028, "Member 'WI_BenchmarkOverlay_C_AddOrUpdateEntry::CallFunc_GetChildAt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WI_BenchmarkOverlay_C_AddOrUpdateEntry, CallFunc_IsValid_ReturnValue) == 0x000030, "Member 'WI_BenchmarkOverlay_C_AddOrUpdateEntry::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WI_BenchmarkOverlay_C_AddOrUpdateEntry, K2Node_MathExpression_ReturnValue_1) == 0x000034, "Member 'WI_BenchmarkOverlay_C_AddOrUpdateEntry::K2Node_MathExpression_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WI_BenchmarkOverlay_C_AddOrUpdateEntry, CallFunc_GetChildAt_ReturnValue_1) == 0x000038, "Member 'WI_BenchmarkOverlay_C_AddOrUpdateEntry::CallFunc_GetChildAt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WI_BenchmarkOverlay_C_AddOrUpdateEntry, K2Node_MathExpression_ReturnValue_2) == 0x000040, "Member 'WI_BenchmarkOverlay_C_AddOrUpdateEntry::K2Node_MathExpression_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WI_BenchmarkOverlay_C_AddOrUpdateEntry, CallFunc_IsValid_ReturnValue_1) == 0x000044, "Member 'WI_BenchmarkOverlay_C_AddOrUpdateEntry::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WI_BenchmarkOverlay_C_AddOrUpdateEntry, K2Node_DynamicCast_AsWI_Benchmark_Overlay_Text) == 0x000048, "Member 'WI_BenchmarkOverlay_C_AddOrUpdateEntry::K2Node_DynamicCast_AsWI_Benchmark_Overlay_Text' has a wrong offset!");
static_assert(offsetof(WI_BenchmarkOverlay_C_AddOrUpdateEntry, K2Node_DynamicCast_bSuccess) == 0x000050, "Member 'WI_BenchmarkOverlay_C_AddOrUpdateEntry::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WI_BenchmarkOverlay_C_AddOrUpdateEntry, CallFunc_GetChildAt_ReturnValue_2) == 0x000058, "Member 'WI_BenchmarkOverlay_C_AddOrUpdateEntry::CallFunc_GetChildAt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WI_BenchmarkOverlay_C_AddOrUpdateEntry, K2Node_DynamicCast_AsWI_Benchmark_Overlay_Text_1) == 0x000060, "Member 'WI_BenchmarkOverlay_C_AddOrUpdateEntry::K2Node_DynamicCast_AsWI_Benchmark_Overlay_Text_1' has a wrong offset!");
static_assert(offsetof(WI_BenchmarkOverlay_C_AddOrUpdateEntry, K2Node_DynamicCast_bSuccess_1) == 0x000068, "Member 'WI_BenchmarkOverlay_C_AddOrUpdateEntry::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(WI_BenchmarkOverlay_C_AddOrUpdateEntry, CallFunc_IsValid_ReturnValue_2) == 0x000069, "Member 'WI_BenchmarkOverlay_C_AddOrUpdateEntry::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");

// Function WI_BenchmarkOverlay.WI_BenchmarkOverlay_C.ExecuteUbergraph_WI_BenchmarkOverlay
// 0x0070 (0x0070 - 0x0000)
struct WI_BenchmarkOverlay_C_ExecuteUbergraph_WI_BenchmarkOverlay final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<class FString, class FString>            K2Node_MakeMap_Map;                                // 0x0008(0x0050)()
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0058(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UGameInstanceJP*                        K2Node_DynamicCast_AsGame_Instance_JP;             // 0x0060(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WI_BenchmarkOverlay_C_ExecuteUbergraph_WI_BenchmarkOverlay) == 0x000008, "Wrong alignment on WI_BenchmarkOverlay_C_ExecuteUbergraph_WI_BenchmarkOverlay");
static_assert(sizeof(WI_BenchmarkOverlay_C_ExecuteUbergraph_WI_BenchmarkOverlay) == 0x000070, "Wrong size on WI_BenchmarkOverlay_C_ExecuteUbergraph_WI_BenchmarkOverlay");
static_assert(offsetof(WI_BenchmarkOverlay_C_ExecuteUbergraph_WI_BenchmarkOverlay, EntryPoint) == 0x000000, "Member 'WI_BenchmarkOverlay_C_ExecuteUbergraph_WI_BenchmarkOverlay::EntryPoint' has a wrong offset!");
static_assert(offsetof(WI_BenchmarkOverlay_C_ExecuteUbergraph_WI_BenchmarkOverlay, K2Node_Event_IsDesignTime) == 0x000004, "Member 'WI_BenchmarkOverlay_C_ExecuteUbergraph_WI_BenchmarkOverlay::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(WI_BenchmarkOverlay_C_ExecuteUbergraph_WI_BenchmarkOverlay, K2Node_MakeMap_Map) == 0x000008, "Member 'WI_BenchmarkOverlay_C_ExecuteUbergraph_WI_BenchmarkOverlay::K2Node_MakeMap_Map' has a wrong offset!");
static_assert(offsetof(WI_BenchmarkOverlay_C_ExecuteUbergraph_WI_BenchmarkOverlay, CallFunc_GetGameInstance_ReturnValue) == 0x000058, "Member 'WI_BenchmarkOverlay_C_ExecuteUbergraph_WI_BenchmarkOverlay::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(WI_BenchmarkOverlay_C_ExecuteUbergraph_WI_BenchmarkOverlay, K2Node_DynamicCast_AsGame_Instance_JP) == 0x000060, "Member 'WI_BenchmarkOverlay_C_ExecuteUbergraph_WI_BenchmarkOverlay::K2Node_DynamicCast_AsGame_Instance_JP' has a wrong offset!");
static_assert(offsetof(WI_BenchmarkOverlay_C_ExecuteUbergraph_WI_BenchmarkOverlay, K2Node_DynamicCast_bSuccess) == 0x000068, "Member 'WI_BenchmarkOverlay_C_ExecuteUbergraph_WI_BenchmarkOverlay::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function WI_BenchmarkOverlay.WI_BenchmarkOverlay_C.GetResultText
// 0x0100 (0x0100 - 0x0000)
struct WI_BenchmarkOverlay_C_GetResultText final
{
public:
	class FText                                   ResultText;                                        // 0x0000(0x0010)(Parm, OutParm)
	class FString                                 TempResultText;                                    // 0x0010(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable;                              // 0x0020(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable_1;                            // 0x0030(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_MathExpression_ReturnValue;                 // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49[0x3];                                       // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 K2Node_Select_Default;                             // 0x0058(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0068(0x0010)()
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0078(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	TArray<class UWidget*>                        CallFunc_GetAllChildren_ReturnValue;               // 0x0088(0x0010)(ReferenceParm, ContainsInstancedReference)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9C[0x4];                                       // 0x009C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                CallFunc_Array_Get_Item;                           // 0x00A0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_MathExpression_ReturnValue_1;               // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A9[0x7];                                       // 0x00A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWI_BenchmarkOverlayText_C*             K2Node_DynamicCast_AsWI_Benchmark_Overlay_Text;    // 0x00B0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B9[0x7];                                       // 0x00B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_GetText_In_Text;                          // 0x00C0(0x0010)()
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D4[0x4];                                       // 0x00D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x00D8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E9[0x7];                                       // 0x00E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x00F0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(WI_BenchmarkOverlay_C_GetResultText) == 0x000008, "Wrong alignment on WI_BenchmarkOverlay_C_GetResultText");
static_assert(sizeof(WI_BenchmarkOverlay_C_GetResultText) == 0x000100, "Wrong size on WI_BenchmarkOverlay_C_GetResultText");
static_assert(offsetof(WI_BenchmarkOverlay_C_GetResultText, ResultText) == 0x000000, "Member 'WI_BenchmarkOverlay_C_GetResultText::ResultText' has a wrong offset!");
static_assert(offsetof(WI_BenchmarkOverlay_C_GetResultText, TempResultText) == 0x000010, "Member 'WI_BenchmarkOverlay_C_GetResultText::TempResultText' has a wrong offset!");
static_assert(offsetof(WI_BenchmarkOverlay_C_GetResultText, Temp_string_Variable) == 0x000020, "Member 'WI_BenchmarkOverlay_C_GetResultText::Temp_string_Variable' has a wrong offset!");
static_assert(offsetof(WI_BenchmarkOverlay_C_GetResultText, Temp_string_Variable_1) == 0x000030, "Member 'WI_BenchmarkOverlay_C_GetResultText::Temp_string_Variable_1' has a wrong offset!");
static_assert(offsetof(WI_BenchmarkOverlay_C_GetResultText, Temp_int_Array_Index_Variable) == 0x000040, "Member 'WI_BenchmarkOverlay_C_GetResultText::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WI_BenchmarkOverlay_C_GetResultText, Temp_int_Loop_Counter_Variable) == 0x000044, "Member 'WI_BenchmarkOverlay_C_GetResultText::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WI_BenchmarkOverlay_C_GetResultText, K2Node_MathExpression_ReturnValue) == 0x000048, "Member 'WI_BenchmarkOverlay_C_GetResultText::K2Node_MathExpression_ReturnValue' has a wrong offset!");
static_assert(offsetof(WI_BenchmarkOverlay_C_GetResultText, CallFunc_Add_IntInt_ReturnValue) == 0x00004C, "Member 'WI_BenchmarkOverlay_C_GetResultText::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WI_BenchmarkOverlay_C_GetResultText, Temp_bool_Variable) == 0x000050, "Member 'WI_BenchmarkOverlay_C_GetResultText::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WI_BenchmarkOverlay_C_GetResultText, K2Node_Select_Default) == 0x000058, "Member 'WI_BenchmarkOverlay_C_GetResultText::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WI_BenchmarkOverlay_C_GetResultText, CallFunc_Conv_StringToText_ReturnValue) == 0x000068, "Member 'WI_BenchmarkOverlay_C_GetResultText::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WI_BenchmarkOverlay_C_GetResultText, CallFunc_Concat_StrStr_ReturnValue) == 0x000078, "Member 'WI_BenchmarkOverlay_C_GetResultText::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(WI_BenchmarkOverlay_C_GetResultText, CallFunc_GetAllChildren_ReturnValue) == 0x000088, "Member 'WI_BenchmarkOverlay_C_GetResultText::CallFunc_GetAllChildren_ReturnValue' has a wrong offset!");
static_assert(offsetof(WI_BenchmarkOverlay_C_GetResultText, CallFunc_Array_Length_ReturnValue) == 0x000098, "Member 'WI_BenchmarkOverlay_C_GetResultText::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WI_BenchmarkOverlay_C_GetResultText, CallFunc_Array_Get_Item) == 0x0000A0, "Member 'WI_BenchmarkOverlay_C_GetResultText::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WI_BenchmarkOverlay_C_GetResultText, K2Node_MathExpression_ReturnValue_1) == 0x0000A8, "Member 'WI_BenchmarkOverlay_C_GetResultText::K2Node_MathExpression_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WI_BenchmarkOverlay_C_GetResultText, K2Node_DynamicCast_AsWI_Benchmark_Overlay_Text) == 0x0000B0, "Member 'WI_BenchmarkOverlay_C_GetResultText::K2Node_DynamicCast_AsWI_Benchmark_Overlay_Text' has a wrong offset!");
static_assert(offsetof(WI_BenchmarkOverlay_C_GetResultText, K2Node_DynamicCast_bSuccess) == 0x0000B8, "Member 'WI_BenchmarkOverlay_C_GetResultText::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WI_BenchmarkOverlay_C_GetResultText, CallFunc_GetText_In_Text) == 0x0000C0, "Member 'WI_BenchmarkOverlay_C_GetResultText::CallFunc_GetText_In_Text' has a wrong offset!");
static_assert(offsetof(WI_BenchmarkOverlay_C_GetResultText, CallFunc_Array_Length_ReturnValue_1) == 0x0000D0, "Member 'WI_BenchmarkOverlay_C_GetResultText::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WI_BenchmarkOverlay_C_GetResultText, CallFunc_Conv_TextToString_ReturnValue) == 0x0000D8, "Member 'WI_BenchmarkOverlay_C_GetResultText::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(WI_BenchmarkOverlay_C_GetResultText, CallFunc_Less_IntInt_ReturnValue) == 0x0000E8, "Member 'WI_BenchmarkOverlay_C_GetResultText::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WI_BenchmarkOverlay_C_GetResultText, CallFunc_Concat_StrStr_ReturnValue_1) == 0x0000F0, "Member 'WI_BenchmarkOverlay_C_GetResultText::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");

// Function WI_BenchmarkOverlay.WI_BenchmarkOverlay_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct WI_BenchmarkOverlay_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WI_BenchmarkOverlay_C_PreConstruct) == 0x000001, "Wrong alignment on WI_BenchmarkOverlay_C_PreConstruct");
static_assert(sizeof(WI_BenchmarkOverlay_C_PreConstruct) == 0x000001, "Wrong size on WI_BenchmarkOverlay_C_PreConstruct");
static_assert(offsetof(WI_BenchmarkOverlay_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'WI_BenchmarkOverlay_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function WI_BenchmarkOverlay.WI_BenchmarkOverlay_C.SetBenchmarkState
// 0x000B (0x000B - 0x0000)
struct WI_BenchmarkOverlay_C_SetBenchmarkState final
{
public:
	E_BenchmarkState                              State;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_BenchmarkState                              Temp_byte_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_2;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_3;                              // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_BenchmarkState                              Temp_byte_Variable_4;                              // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_5;                              // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_6;                              // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_7;                              // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_1;                           // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WI_BenchmarkOverlay_C_SetBenchmarkState) == 0x000001, "Wrong alignment on WI_BenchmarkOverlay_C_SetBenchmarkState");
static_assert(sizeof(WI_BenchmarkOverlay_C_SetBenchmarkState) == 0x00000B, "Wrong size on WI_BenchmarkOverlay_C_SetBenchmarkState");
static_assert(offsetof(WI_BenchmarkOverlay_C_SetBenchmarkState, State) == 0x000000, "Member 'WI_BenchmarkOverlay_C_SetBenchmarkState::State' has a wrong offset!");
static_assert(offsetof(WI_BenchmarkOverlay_C_SetBenchmarkState, Temp_byte_Variable) == 0x000001, "Member 'WI_BenchmarkOverlay_C_SetBenchmarkState::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WI_BenchmarkOverlay_C_SetBenchmarkState, Temp_byte_Variable_1) == 0x000002, "Member 'WI_BenchmarkOverlay_C_SetBenchmarkState::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WI_BenchmarkOverlay_C_SetBenchmarkState, Temp_byte_Variable_2) == 0x000003, "Member 'WI_BenchmarkOverlay_C_SetBenchmarkState::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(WI_BenchmarkOverlay_C_SetBenchmarkState, Temp_byte_Variable_3) == 0x000004, "Member 'WI_BenchmarkOverlay_C_SetBenchmarkState::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(WI_BenchmarkOverlay_C_SetBenchmarkState, Temp_byte_Variable_4) == 0x000005, "Member 'WI_BenchmarkOverlay_C_SetBenchmarkState::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(WI_BenchmarkOverlay_C_SetBenchmarkState, K2Node_Select_Default) == 0x000006, "Member 'WI_BenchmarkOverlay_C_SetBenchmarkState::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WI_BenchmarkOverlay_C_SetBenchmarkState, Temp_byte_Variable_5) == 0x000007, "Member 'WI_BenchmarkOverlay_C_SetBenchmarkState::Temp_byte_Variable_5' has a wrong offset!");
static_assert(offsetof(WI_BenchmarkOverlay_C_SetBenchmarkState, Temp_byte_Variable_6) == 0x000008, "Member 'WI_BenchmarkOverlay_C_SetBenchmarkState::Temp_byte_Variable_6' has a wrong offset!");
static_assert(offsetof(WI_BenchmarkOverlay_C_SetBenchmarkState, Temp_byte_Variable_7) == 0x000009, "Member 'WI_BenchmarkOverlay_C_SetBenchmarkState::Temp_byte_Variable_7' has a wrong offset!");
static_assert(offsetof(WI_BenchmarkOverlay_C_SetBenchmarkState, K2Node_Select_Default_1) == 0x00000A, "Member 'WI_BenchmarkOverlay_C_SetBenchmarkState::K2Node_Select_Default_1' has a wrong offset!");

// Function WI_BenchmarkOverlay.WI_BenchmarkOverlay_C.SetResults
// 0x0058 (0x0058 - 0x0000)
struct WI_BenchmarkOverlay_C_SetResults final
{
public:
	TMap<class FString, class FString>            Results_0;                                         // 0x0000(0x0050)(BlueprintVisible, BlueprintReadOnly, Parm)
	bool                                          UpdateResultText;                                  // 0x0050(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WI_BenchmarkOverlay_C_SetResults) == 0x000008, "Wrong alignment on WI_BenchmarkOverlay_C_SetResults");
static_assert(sizeof(WI_BenchmarkOverlay_C_SetResults) == 0x000058, "Wrong size on WI_BenchmarkOverlay_C_SetResults");
static_assert(offsetof(WI_BenchmarkOverlay_C_SetResults, Results_0) == 0x000000, "Member 'WI_BenchmarkOverlay_C_SetResults::Results_0' has a wrong offset!");
static_assert(offsetof(WI_BenchmarkOverlay_C_SetResults, UpdateResultText) == 0x000050, "Member 'WI_BenchmarkOverlay_C_SetResults::UpdateResultText' has a wrong offset!");

// Function WI_BenchmarkOverlay.WI_BenchmarkOverlay_C.UpdateResultText
// 0x0010 (0x0010 - 0x0000)
struct WI_BenchmarkOverlay_C_UpdateResultText final
{
public:
	class FText                                   CallFunc_GetResultText_ResultText;                 // 0x0000(0x0010)()
};
static_assert(alignof(WI_BenchmarkOverlay_C_UpdateResultText) == 0x000008, "Wrong alignment on WI_BenchmarkOverlay_C_UpdateResultText");
static_assert(sizeof(WI_BenchmarkOverlay_C_UpdateResultText) == 0x000010, "Wrong size on WI_BenchmarkOverlay_C_UpdateResultText");
static_assert(offsetof(WI_BenchmarkOverlay_C_UpdateResultText, CallFunc_GetResultText_ResultText) == 0x000000, "Member 'WI_BenchmarkOverlay_C_UpdateResultText::CallFunc_GetResultText_ResultText' has a wrong offset!");

}

