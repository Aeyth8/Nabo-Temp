#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_BaseballBat_ProjectileOverlapVolume

#include "Basic.hpp"

#include "BP_BaseballBat_ProjectileOverlapVolume_classes.hpp"
#include "BP_BaseballBat_ProjectileOverlapVolume_parameters.hpp"


namespace SDK
{

// Function BP_BaseballBat_ProjectileOverlapVolume.BP_BaseballBat_ProjectileOverlapVolume_C.ActivateCollision
// (Net, NetMulticast, BlueprintCallable, BlueprintEvent)

void ABP_BaseballBat_ProjectileOverlapVolume_C::ActivateCollision()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BaseballBat_ProjectileOverlapVolume_C", "ActivateCollision");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BaseballBat_ProjectileOverlapVolume.BP_BaseballBat_ProjectileOverlapVolume_C.DeactivateCollisions
// (BlueprintCallable, BlueprintEvent)

void ABP_BaseballBat_ProjectileOverlapVolume_C::DeactivateCollisions()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BaseballBat_ProjectileOverlapVolume_C", "DeactivateCollisions");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BaseballBat_ProjectileOverlapVolume.BP_BaseballBat_ProjectileOverlapVolume_C.ExecuteUbergraph_BP_BaseballBat_ProjectileOverlapVolume
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_BaseballBat_ProjectileOverlapVolume_C::ExecuteUbergraph_BP_BaseballBat_ProjectileOverlapVolume(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BaseballBat_ProjectileOverlapVolume_C", "ExecuteUbergraph_BP_BaseballBat_ProjectileOverlapVolume");

	Params::BP_BaseballBat_ProjectileOverlapVolume_C_ExecuteUbergraph_BP_BaseballBat_ProjectileOverlapVolume Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BaseballBat_ProjectileOverlapVolume.BP_BaseballBat_ProjectileOverlapVolume_C.InitializeOverlapVolume
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class APawn*                            InstigatorPawn_0                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_BaseballBat_ProjectileOverlapVolume_C::InitializeOverlapVolume(class APawn* InstigatorPawn_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BaseballBat_ProjectileOverlapVolume_C", "InitializeOverlapVolume");

	Params::BP_BaseballBat_ProjectileOverlapVolume_C_InitializeOverlapVolume Parms{};

	Parms.InstigatorPawn_0 = InstigatorPawn_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BaseballBat_ProjectileOverlapVolume.BP_BaseballBat_ProjectileOverlapVolume_C.ReceiveActorBeginOverlap
// (Event, Public, BlueprintEvent)
// Parameters:
// class AActor*                           OtherActor                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_BaseballBat_ProjectileOverlapVolume_C::ReceiveActorBeginOverlap(class AActor* OtherActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BaseballBat_ProjectileOverlapVolume_C", "ReceiveActorBeginOverlap");

	Params::BP_BaseballBat_ProjectileOverlapVolume_C_ReceiveActorBeginOverlap Parms{};

	Parms.OtherActor = OtherActor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BaseballBat_ProjectileOverlapVolume.BP_BaseballBat_ProjectileOverlapVolume_C.UpdateVolumePositionLocation
// (Net, NetMulticast, BlueprintCallable, BlueprintEvent)

void ABP_BaseballBat_ProjectileOverlapVolume_C::UpdateVolumePositionLocation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BaseballBat_ProjectileOverlapVolume_C", "UpdateVolumePositionLocation");

	UObject::ProcessEvent(Func, nullptr);
}

}

