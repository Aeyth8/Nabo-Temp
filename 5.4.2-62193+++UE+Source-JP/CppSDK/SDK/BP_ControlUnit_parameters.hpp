#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_ControlUnit

#include "Basic.hpp"

#include "JP_structs.hpp"
#include "E_MaterialTypes_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "E_ImpactEffect_structs.hpp"
#include "EnhancedInput_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BP_ControlUnit.BP_ControlUnit_C.AddCollision
// 0x0010 (0x0010 - 0x0000)
struct BP_ControlUnit_C_AddCollision final
{
public:
	class ABP_MovementCharacter_C*                K2Node_DynamicCast_AsBP_Movement_Character;        // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ControlUnit_C_AddCollision) == 0x000008, "Wrong alignment on BP_ControlUnit_C_AddCollision");
static_assert(sizeof(BP_ControlUnit_C_AddCollision) == 0x000010, "Wrong size on BP_ControlUnit_C_AddCollision");
static_assert(offsetof(BP_ControlUnit_C_AddCollision, K2Node_DynamicCast_AsBP_Movement_Character) == 0x000000, "Member 'BP_ControlUnit_C_AddCollision::K2Node_DynamicCast_AsBP_Movement_Character' has a wrong offset!");
static_assert(offsetof(BP_ControlUnit_C_AddCollision, K2Node_DynamicCast_bSuccess) == 0x000008, "Member 'BP_ControlUnit_C_AddCollision::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BP_ControlUnit.BP_ControlUnit_C.BndEvt__HouseActorBase_Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature
// 0x0118 (0x0118 - 0x0000)
struct BP_ControlUnit_C_BndEvt__HouseActorBase_Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bFromSweep;                                        // 0x001C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             SweepResult;                                       // 0x0020(0x00F8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_ControlUnit_C_BndEvt__HouseActorBase_Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on BP_ControlUnit_C_BndEvt__HouseActorBase_Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(sizeof(BP_ControlUnit_C_BndEvt__HouseActorBase_Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature) == 0x000118, "Wrong size on BP_ControlUnit_C_BndEvt__HouseActorBase_Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(offsetof(BP_ControlUnit_C_BndEvt__HouseActorBase_Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OverlappedComponent) == 0x000000, "Member 'BP_ControlUnit_C_BndEvt__HouseActorBase_Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BP_ControlUnit_C_BndEvt__HouseActorBase_Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'BP_ControlUnit_C_BndEvt__HouseActorBase_Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(BP_ControlUnit_C_BndEvt__HouseActorBase_Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'BP_ControlUnit_C_BndEvt__HouseActorBase_Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(BP_ControlUnit_C_BndEvt__HouseActorBase_Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000018, "Member 'BP_ControlUnit_C_BndEvt__HouseActorBase_Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(BP_ControlUnit_C_BndEvt__HouseActorBase_Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, bFromSweep) == 0x00001C, "Member 'BP_ControlUnit_C_BndEvt__HouseActorBase_Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::bFromSweep' has a wrong offset!");
static_assert(offsetof(BP_ControlUnit_C_BndEvt__HouseActorBase_Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, SweepResult) == 0x000020, "Member 'BP_ControlUnit_C_BndEvt__HouseActorBase_Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::SweepResult' has a wrong offset!");

// Function BP_ControlUnit.BP_ControlUnit_C.BndEvt__HouseActorBase_Sphere_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct BP_ControlUnit_C_BndEvt__HouseActorBase_Sphere_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ControlUnit_C_BndEvt__HouseActorBase_Sphere_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on BP_ControlUnit_C_BndEvt__HouseActorBase_Sphere_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature");
static_assert(sizeof(BP_ControlUnit_C_BndEvt__HouseActorBase_Sphere_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature) == 0x000020, "Wrong size on BP_ControlUnit_C_BndEvt__HouseActorBase_Sphere_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature");
static_assert(offsetof(BP_ControlUnit_C_BndEvt__HouseActorBase_Sphere_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature, OverlappedComponent) == 0x000000, "Member 'BP_ControlUnit_C_BndEvt__HouseActorBase_Sphere_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BP_ControlUnit_C_BndEvt__HouseActorBase_Sphere_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'BP_ControlUnit_C_BndEvt__HouseActorBase_Sphere_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(BP_ControlUnit_C_BndEvt__HouseActorBase_Sphere_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'BP_ControlUnit_C_BndEvt__HouseActorBase_Sphere_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(BP_ControlUnit_C_BndEvt__HouseActorBase_Sphere_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000018, "Member 'BP_ControlUnit_C_BndEvt__HouseActorBase_Sphere_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");

// Function BP_ControlUnit.BP_ControlUnit_C.CheckAchievement
// 0x0030 (0x0030 - 0x0000)
struct BP_ControlUnit_C_CheckAchievement final
{
public:
	double                                        Distance;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 Causer;                                            // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  K2Node_DynamicCast_AsPawn;                         // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_22[0x6];                                       // 0x0022(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UAC_AchievementTracker_C*               CallFunc_GetComponentByClass_ReturnValue;          // 0x0028(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ControlUnit_C_CheckAchievement) == 0x000008, "Wrong alignment on BP_ControlUnit_C_CheckAchievement");
static_assert(sizeof(BP_ControlUnit_C_CheckAchievement) == 0x000030, "Wrong size on BP_ControlUnit_C_CheckAchievement");
static_assert(offsetof(BP_ControlUnit_C_CheckAchievement, Distance) == 0x000000, "Member 'BP_ControlUnit_C_CheckAchievement::Distance' has a wrong offset!");
static_assert(offsetof(BP_ControlUnit_C_CheckAchievement, Causer) == 0x000008, "Member 'BP_ControlUnit_C_CheckAchievement::Causer' has a wrong offset!");
static_assert(offsetof(BP_ControlUnit_C_CheckAchievement, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000010, "Member 'BP_ControlUnit_C_CheckAchievement::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ControlUnit_C_CheckAchievement, K2Node_DynamicCast_AsPawn) == 0x000018, "Member 'BP_ControlUnit_C_CheckAchievement::K2Node_DynamicCast_AsPawn' has a wrong offset!");
static_assert(offsetof(BP_ControlUnit_C_CheckAchievement, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'BP_ControlUnit_C_CheckAchievement::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_ControlUnit_C_CheckAchievement, CallFunc_BooleanAND_ReturnValue) == 0x000021, "Member 'BP_ControlUnit_C_CheckAchievement::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ControlUnit_C_CheckAchievement, CallFunc_GetComponentByClass_ReturnValue) == 0x000028, "Member 'BP_ControlUnit_C_CheckAchievement::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");

// Function BP_ControlUnit.BP_ControlUnit_C.ExecuteUbergraph_BP_ControlUnit
// 0x06B0 (0x06B0 - 0x0000)
struct BP_ControlUnit_C_ExecuteUbergraph_BP_ControlUnit final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	const class AActor*                           K2Node_Event_AttackingActor;                       // 0x0008(0x0008)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Event_Direction;                            // 0x0010(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_Event_InteractingActor;                     // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_Event_InteractionComponent;                 // 0x0030(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_Delta;                                // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_Event_Causer;                               // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FCombatParticipant                     K2Node_Event_CombatParticipant;                    // 0x0048(0x0060)(ConstParm)
	struct FKillMethod                            K2Node_Event_KillMethod;                           // 0x00A8(0x02E8)(ConstParm)
	struct FVector_NetQuantize                    K2Node_Event_Location;                             // 0x0390(0x0018)(NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class ITeamableInterface>    K2Node_DynamicCast_AsTeamable_Interface;           // 0x03A8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x03B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetTeamID_ReturnValue;                    // 0x03B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x03BA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3BB[0x5];                                      // 0x03BB(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_CustomEvent_InteractingActor;               // 0x03C0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  K2Node_DynamicCast_AsPawn;                         // 0x03C8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x03D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D1[0x7];                                      // 0x03D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            CallFunc_GetController_ReturnValue;                // 0x03D8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LethalDamageTaken_ReturnValue;            // 0x03E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3E1[0x7];                                      // 0x03E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      K2Node_DynamicCast_AsPlayer_Controller;            // 0x03E8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x03F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Temp_byte_Variable;                                // 0x03F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x03F2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3F3[0x1];                                      // 0x03F3(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_Health;                               // 0x03F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_MaxHealth;                            // 0x03F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3FC[0x4];                                      // 0x03FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_K2_GetComponentToWorld_ReturnValue;       // 0x0400(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x0460(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_Seagull130_Destroyed_C*             CallFunc_FinishSpawningActor_ReturnValue;          // 0x0468(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0470(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue_1;          // 0x0471(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0472(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_473[0x5];                                      // 0x0473(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Temp_real_Variable;                                // 0x0478(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_1;                              // 0x0480(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0488(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue;                   // 0x0490(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue_1;        // 0x0498(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue_1;                 // 0x04A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x04A8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x04C0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Vector_Distance_ReturnValue;              // 0x04D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue_2;          // 0x04E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4E1[0x7];                                      // 0x04E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UInputAction*                           Temp_object_Variable;                              // 0x04E8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FInputActionValue                      K2Node_EnhancedInputActionEvent_ActionValue;       // 0x04F0(0x0020)(NoDestructor)
	float                                         K2Node_EnhancedInputActionEvent_ElapsedTime;       // 0x0510(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_EnhancedInputActionEvent_TriggeredTime;     // 0x0514(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	const class UInputAction*                     K2Node_EnhancedInputActionEvent_SourceAction;      // 0x0518(0x0008)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent_1;  // 0x0520(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor_1;           // 0x0528(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp_1;            // 0x0530(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex_1;       // 0x0538(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bFromSweep;             // 0x053C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_53D[0x3];                                      // 0x053D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_ComponentBoundEvent_SweepResult;            // 0x0540(0x00F8)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class APawn*                                  K2Node_DynamicCast_AsPawn_1;                       // 0x0638(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0640(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_641[0x7];                                      // 0x0641(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Temp_real_Variable_1_0;                            // 0x0648(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLocallyControlled_ReturnValue;          // 0x0650(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_651[0x7];                                      // 0x0651(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Temp_real_Variable_0;                              // 0x0658(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Conv_InputActionValueToBool_ReturnValue;  // 0x0660(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_661[0x7];                                      // 0x0661(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent;    // 0x0668(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor;             // 0x0670(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp;              // 0x0678(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex;         // 0x0680(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_684[0x4];                                      // 0x0684(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  K2Node_DynamicCast_AsPawn_2;                       // 0x0688(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x0690(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLocallyControlled_ReturnValue_1;        // 0x0691(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_692[0x6];                                      // 0x0692(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_UpdateHealthBar_Value_ImplicitCast;       // 0x0698(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_UpdateHealthBar_Max_ImplicitCast;         // 0x06A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ControlUnit_C_ExecuteUbergraph_BP_ControlUnit) == 0x000010, "Wrong alignment on BP_ControlUnit_C_ExecuteUbergraph_BP_ControlUnit");
static_assert(sizeof(BP_ControlUnit_C_ExecuteUbergraph_BP_ControlUnit) == 0x0006B0, "Wrong size on BP_ControlUnit_C_ExecuteUbergraph_BP_ControlUnit");
static_assert(offsetof(BP_ControlUnit_C_ExecuteUbergraph_BP_ControlUnit, EntryPoint) == 0x000000, "Member 'BP_ControlUnit_C_ExecuteUbergraph_BP_ControlUnit::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_ControlUnit_C_ExecuteUbergraph_BP_ControlUnit, K2Node_Event_AttackingActor) == 0x000008, "Member 'BP_ControlUnit_C_ExecuteUbergraph_BP_ControlUnit::K2Node_Event_AttackingActor' has a wrong offset!");
static_assert(offsetof(BP_ControlUnit_C_ExecuteUbergraph_BP_ControlUnit, K2Node_Event_Direction) == 0x000010, "Member 'BP_ControlUnit_C_ExecuteUbergraph_BP_ControlUnit::K2Node_Event_Direction' has a wrong offset!");
static_assert(offsetof(BP_ControlUnit_C_ExecuteUbergraph_BP_ControlUnit, K2Node_Event_InteractingActor) == 0x000028, "Member 'BP_ControlUnit_C_ExecuteUbergraph_BP_ControlUnit::K2Node_Event_InteractingActor' has a wrong offset!");
static_assert(offsetof(BP_ControlUnit_C_ExecuteUbergraph_BP_ControlUnit, K2Node_Event_InteractionComponent) == 0x000030, "Member 'BP_ControlUnit_C_ExecuteUbergraph_BP_ControlUnit::K2Node_Event_InteractionComponent' has a wrong offset!");
static_assert(offsetof(BP_ControlUnit_C_ExecuteUbergraph_BP_ControlUnit, K2Node_Event_Delta) == 0x000038, "Member 'BP_ControlUnit_C_ExecuteUbergraph_BP_ControlUnit::K2Node_Event_Delta' has a wrong offset!");
static_assert(offsetof(BP_ControlUnit_C_ExecuteUbergraph_BP_ControlUnit, K2Node_Event_Causer) == 0x000040, "Member 'BP_ControlUnit_C_ExecuteUbergraph_BP_ControlUnit::K2Node_Event_Causer' has a wrong offset!");
static_assert(offsetof(BP_ControlUnit_C_ExecuteUbergraph_BP_ControlUnit, K2Node_Event_CombatParticipant) == 0x000048, "Member 'BP_ControlUnit_C_ExecuteUbergraph_BP_ControlUnit::K2Node_Event_CombatParticipant' has a wrong offset!");
static_assert(offsetof(BP_ControlUnit_C_ExecuteUbergraph_BP_ControlUnit, K2Node_Event_KillMethod) == 0x0000A8, "Member 'BP_ControlUnit_C_ExecuteUbergraph_BP_ControlUnit::K2Node_Event_KillMethod' has a wrong offset!");
static_assert(offsetof(BP_ControlUnit_C_ExecuteUbergraph_BP_ControlUnit, K2Node_Event_Location) == 0x000390, "Member 'BP_ControlUnit_C_ExecuteUbergraph_BP_ControlUnit::K2Node_Event_Location' has a wrong offset!");
static_assert(offsetof(BP_ControlUnit_C_ExecuteUbergraph_BP_ControlUnit, K2Node_DynamicCast_AsTeamable_Interface) == 0x0003A8, "Member 'BP_ControlUnit_C_ExecuteUbergraph_BP_ControlUnit::K2Node_DynamicCast_AsTeamable_Interface' has a wrong offset!");
static_assert(offsetof(BP_ControlUnit_C_ExecuteUbergraph_BP_ControlUnit, K2Node_DynamicCast_bSuccess) == 0x0003B8, "Member 'BP_ControlUnit_C_ExecuteUbergraph_BP_ControlUnit::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_ControlUnit_C_ExecuteUbergraph_BP_ControlUnit, CallFunc_GetTeamID_ReturnValue) == 0x0003B9, "Member 'BP_ControlUnit_C_ExecuteUbergraph_BP_ControlUnit::CallFunc_GetTeamID_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ControlUnit_C_ExecuteUbergraph_BP_ControlUnit, CallFunc_HasAuthority_ReturnValue) == 0x0003BA, "Member 'BP_ControlUnit_C_ExecuteUbergraph_BP_ControlUnit::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ControlUnit_C_ExecuteUbergraph_BP_ControlUnit, K2Node_CustomEvent_InteractingActor) == 0x0003C0, "Member 'BP_ControlUnit_C_ExecuteUbergraph_BP_ControlUnit::K2Node_CustomEvent_InteractingActor' has a wrong offset!");
static_assert(offsetof(BP_ControlUnit_C_ExecuteUbergraph_BP_ControlUnit, K2Node_DynamicCast_AsPawn) == 0x0003C8, "Member 'BP_ControlUnit_C_ExecuteUbergraph_BP_ControlUnit::K2Node_DynamicCast_AsPawn' has a wrong offset!");
static_assert(offsetof(BP_ControlUnit_C_ExecuteUbergraph_BP_ControlUnit, K2Node_DynamicCast_bSuccess_1) == 0x0003D0, "Member 'BP_ControlUnit_C_ExecuteUbergraph_BP_ControlUnit::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_ControlUnit_C_ExecuteUbergraph_BP_ControlUnit, CallFunc_GetController_ReturnValue) == 0x0003D8, "Member 'BP_ControlUnit_C_ExecuteUbergraph_BP_ControlUnit::CallFunc_GetController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ControlUnit_C_ExecuteUbergraph_BP_ControlUnit, CallFunc_LethalDamageTaken_ReturnValue) == 0x0003E0, "Member 'BP_ControlUnit_C_ExecuteUbergraph_BP_ControlUnit::CallFunc_LethalDamageTaken_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ControlUnit_C_ExecuteUbergraph_BP_ControlUnit, K2Node_DynamicCast_AsPlayer_Controller) == 0x0003E8, "Member 'BP_ControlUnit_C_ExecuteUbergraph_BP_ControlUnit::K2Node_DynamicCast_AsPlayer_Controller' has a wrong offset!");
static_assert(offsetof(BP_ControlUnit_C_ExecuteUbergraph_BP_ControlUnit, K2Node_DynamicCast_bSuccess_2) == 0x0003F0, "Member 'BP_ControlUnit_C_ExecuteUbergraph_BP_ControlUnit::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_ControlUnit_C_ExecuteUbergraph_BP_ControlUnit, Temp_byte_Variable) == 0x0003F1, "Member 'BP_ControlUnit_C_ExecuteUbergraph_BP_ControlUnit::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_ControlUnit_C_ExecuteUbergraph_BP_ControlUnit, CallFunc_IsDedicatedServer_ReturnValue) == 0x0003F2, "Member 'BP_ControlUnit_C_ExecuteUbergraph_BP_ControlUnit::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ControlUnit_C_ExecuteUbergraph_BP_ControlUnit, K2Node_Event_Health) == 0x0003F4, "Member 'BP_ControlUnit_C_ExecuteUbergraph_BP_ControlUnit::K2Node_Event_Health' has a wrong offset!");
static_assert(offsetof(BP_ControlUnit_C_ExecuteUbergraph_BP_ControlUnit, K2Node_Event_MaxHealth) == 0x0003F8, "Member 'BP_ControlUnit_C_ExecuteUbergraph_BP_ControlUnit::K2Node_Event_MaxHealth' has a wrong offset!");
static_assert(offsetof(BP_ControlUnit_C_ExecuteUbergraph_BP_ControlUnit, CallFunc_K2_GetComponentToWorld_ReturnValue) == 0x000400, "Member 'BP_ControlUnit_C_ExecuteUbergraph_BP_ControlUnit::CallFunc_K2_GetComponentToWorld_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ControlUnit_C_ExecuteUbergraph_BP_ControlUnit, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x000460, "Member 'BP_ControlUnit_C_ExecuteUbergraph_BP_ControlUnit::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ControlUnit_C_ExecuteUbergraph_BP_ControlUnit, CallFunc_FinishSpawningActor_ReturnValue) == 0x000468, "Member 'BP_ControlUnit_C_ExecuteUbergraph_BP_ControlUnit::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ControlUnit_C_ExecuteUbergraph_BP_ControlUnit, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000470, "Member 'BP_ControlUnit_C_ExecuteUbergraph_BP_ControlUnit::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ControlUnit_C_ExecuteUbergraph_BP_ControlUnit, CallFunc_IsDedicatedServer_ReturnValue_1) == 0x000471, "Member 'BP_ControlUnit_C_ExecuteUbergraph_BP_ControlUnit::CallFunc_IsDedicatedServer_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ControlUnit_C_ExecuteUbergraph_BP_ControlUnit, Temp_bool_Variable) == 0x000472, "Member 'BP_ControlUnit_C_ExecuteUbergraph_BP_ControlUnit::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_ControlUnit_C_ExecuteUbergraph_BP_ControlUnit, Temp_real_Variable) == 0x000478, "Member 'BP_ControlUnit_C_ExecuteUbergraph_BP_ControlUnit::Temp_real_Variable' has a wrong offset!");
static_assert(offsetof(BP_ControlUnit_C_ExecuteUbergraph_BP_ControlUnit, Temp_real_Variable_1) == 0x000480, "Member 'BP_ControlUnit_C_ExecuteUbergraph_BP_ControlUnit::Temp_real_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_ControlUnit_C_ExecuteUbergraph_BP_ControlUnit, CallFunc_GetPlayerController_ReturnValue) == 0x000488, "Member 'BP_ControlUnit_C_ExecuteUbergraph_BP_ControlUnit::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ControlUnit_C_ExecuteUbergraph_BP_ControlUnit, CallFunc_K2_GetPawn_ReturnValue) == 0x000490, "Member 'BP_ControlUnit_C_ExecuteUbergraph_BP_ControlUnit::CallFunc_K2_GetPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ControlUnit_C_ExecuteUbergraph_BP_ControlUnit, CallFunc_GetPlayerController_ReturnValue_1) == 0x000498, "Member 'BP_ControlUnit_C_ExecuteUbergraph_BP_ControlUnit::CallFunc_GetPlayerController_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ControlUnit_C_ExecuteUbergraph_BP_ControlUnit, CallFunc_K2_GetPawn_ReturnValue_1) == 0x0004A0, "Member 'BP_ControlUnit_C_ExecuteUbergraph_BP_ControlUnit::CallFunc_K2_GetPawn_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ControlUnit_C_ExecuteUbergraph_BP_ControlUnit, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x0004A8, "Member 'BP_ControlUnit_C_ExecuteUbergraph_BP_ControlUnit::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ControlUnit_C_ExecuteUbergraph_BP_ControlUnit, CallFunc_K2_GetActorLocation_ReturnValue) == 0x0004C0, "Member 'BP_ControlUnit_C_ExecuteUbergraph_BP_ControlUnit::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ControlUnit_C_ExecuteUbergraph_BP_ControlUnit, CallFunc_Vector_Distance_ReturnValue) == 0x0004D8, "Member 'BP_ControlUnit_C_ExecuteUbergraph_BP_ControlUnit::CallFunc_Vector_Distance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ControlUnit_C_ExecuteUbergraph_BP_ControlUnit, CallFunc_IsDedicatedServer_ReturnValue_2) == 0x0004E0, "Member 'BP_ControlUnit_C_ExecuteUbergraph_BP_ControlUnit::CallFunc_IsDedicatedServer_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_ControlUnit_C_ExecuteUbergraph_BP_ControlUnit, Temp_object_Variable) == 0x0004E8, "Member 'BP_ControlUnit_C_ExecuteUbergraph_BP_ControlUnit::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BP_ControlUnit_C_ExecuteUbergraph_BP_ControlUnit, K2Node_EnhancedInputActionEvent_ActionValue) == 0x0004F0, "Member 'BP_ControlUnit_C_ExecuteUbergraph_BP_ControlUnit::K2Node_EnhancedInputActionEvent_ActionValue' has a wrong offset!");
static_assert(offsetof(BP_ControlUnit_C_ExecuteUbergraph_BP_ControlUnit, K2Node_EnhancedInputActionEvent_ElapsedTime) == 0x000510, "Member 'BP_ControlUnit_C_ExecuteUbergraph_BP_ControlUnit::K2Node_EnhancedInputActionEvent_ElapsedTime' has a wrong offset!");
static_assert(offsetof(BP_ControlUnit_C_ExecuteUbergraph_BP_ControlUnit, K2Node_EnhancedInputActionEvent_TriggeredTime) == 0x000514, "Member 'BP_ControlUnit_C_ExecuteUbergraph_BP_ControlUnit::K2Node_EnhancedInputActionEvent_TriggeredTime' has a wrong offset!");
static_assert(offsetof(BP_ControlUnit_C_ExecuteUbergraph_BP_ControlUnit, K2Node_EnhancedInputActionEvent_SourceAction) == 0x000518, "Member 'BP_ControlUnit_C_ExecuteUbergraph_BP_ControlUnit::K2Node_EnhancedInputActionEvent_SourceAction' has a wrong offset!");
static_assert(offsetof(BP_ControlUnit_C_ExecuteUbergraph_BP_ControlUnit, K2Node_ComponentBoundEvent_OverlappedComponent_1) == 0x000520, "Member 'BP_ControlUnit_C_ExecuteUbergraph_BP_ControlUnit::K2Node_ComponentBoundEvent_OverlappedComponent_1' has a wrong offset!");
static_assert(offsetof(BP_ControlUnit_C_ExecuteUbergraph_BP_ControlUnit, K2Node_ComponentBoundEvent_OtherActor_1) == 0x000528, "Member 'BP_ControlUnit_C_ExecuteUbergraph_BP_ControlUnit::K2Node_ComponentBoundEvent_OtherActor_1' has a wrong offset!");
static_assert(offsetof(BP_ControlUnit_C_ExecuteUbergraph_BP_ControlUnit, K2Node_ComponentBoundEvent_OtherComp_1) == 0x000530, "Member 'BP_ControlUnit_C_ExecuteUbergraph_BP_ControlUnit::K2Node_ComponentBoundEvent_OtherComp_1' has a wrong offset!");
static_assert(offsetof(BP_ControlUnit_C_ExecuteUbergraph_BP_ControlUnit, K2Node_ComponentBoundEvent_OtherBodyIndex_1) == 0x000538, "Member 'BP_ControlUnit_C_ExecuteUbergraph_BP_ControlUnit::K2Node_ComponentBoundEvent_OtherBodyIndex_1' has a wrong offset!");
static_assert(offsetof(BP_ControlUnit_C_ExecuteUbergraph_BP_ControlUnit, K2Node_ComponentBoundEvent_bFromSweep) == 0x00053C, "Member 'BP_ControlUnit_C_ExecuteUbergraph_BP_ControlUnit::K2Node_ComponentBoundEvent_bFromSweep' has a wrong offset!");
static_assert(offsetof(BP_ControlUnit_C_ExecuteUbergraph_BP_ControlUnit, K2Node_ComponentBoundEvent_SweepResult) == 0x000540, "Member 'BP_ControlUnit_C_ExecuteUbergraph_BP_ControlUnit::K2Node_ComponentBoundEvent_SweepResult' has a wrong offset!");
static_assert(offsetof(BP_ControlUnit_C_ExecuteUbergraph_BP_ControlUnit, K2Node_DynamicCast_AsPawn_1) == 0x000638, "Member 'BP_ControlUnit_C_ExecuteUbergraph_BP_ControlUnit::K2Node_DynamicCast_AsPawn_1' has a wrong offset!");
static_assert(offsetof(BP_ControlUnit_C_ExecuteUbergraph_BP_ControlUnit, K2Node_DynamicCast_bSuccess_3) == 0x000640, "Member 'BP_ControlUnit_C_ExecuteUbergraph_BP_ControlUnit::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(BP_ControlUnit_C_ExecuteUbergraph_BP_ControlUnit, Temp_real_Variable_1_0) == 0x000648, "Member 'BP_ControlUnit_C_ExecuteUbergraph_BP_ControlUnit::Temp_real_Variable_1_0' has a wrong offset!");
static_assert(offsetof(BP_ControlUnit_C_ExecuteUbergraph_BP_ControlUnit, CallFunc_IsLocallyControlled_ReturnValue) == 0x000650, "Member 'BP_ControlUnit_C_ExecuteUbergraph_BP_ControlUnit::CallFunc_IsLocallyControlled_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ControlUnit_C_ExecuteUbergraph_BP_ControlUnit, Temp_real_Variable_0) == 0x000658, "Member 'BP_ControlUnit_C_ExecuteUbergraph_BP_ControlUnit::Temp_real_Variable_0' has a wrong offset!");
static_assert(offsetof(BP_ControlUnit_C_ExecuteUbergraph_BP_ControlUnit, CallFunc_Conv_InputActionValueToBool_ReturnValue) == 0x000660, "Member 'BP_ControlUnit_C_ExecuteUbergraph_BP_ControlUnit::CallFunc_Conv_InputActionValueToBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ControlUnit_C_ExecuteUbergraph_BP_ControlUnit, K2Node_ComponentBoundEvent_OverlappedComponent) == 0x000668, "Member 'BP_ControlUnit_C_ExecuteUbergraph_BP_ControlUnit::K2Node_ComponentBoundEvent_OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BP_ControlUnit_C_ExecuteUbergraph_BP_ControlUnit, K2Node_ComponentBoundEvent_OtherActor) == 0x000670, "Member 'BP_ControlUnit_C_ExecuteUbergraph_BP_ControlUnit::K2Node_ComponentBoundEvent_OtherActor' has a wrong offset!");
static_assert(offsetof(BP_ControlUnit_C_ExecuteUbergraph_BP_ControlUnit, K2Node_ComponentBoundEvent_OtherComp) == 0x000678, "Member 'BP_ControlUnit_C_ExecuteUbergraph_BP_ControlUnit::K2Node_ComponentBoundEvent_OtherComp' has a wrong offset!");
static_assert(offsetof(BP_ControlUnit_C_ExecuteUbergraph_BP_ControlUnit, K2Node_ComponentBoundEvent_OtherBodyIndex) == 0x000680, "Member 'BP_ControlUnit_C_ExecuteUbergraph_BP_ControlUnit::K2Node_ComponentBoundEvent_OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(BP_ControlUnit_C_ExecuteUbergraph_BP_ControlUnit, K2Node_DynamicCast_AsPawn_2) == 0x000688, "Member 'BP_ControlUnit_C_ExecuteUbergraph_BP_ControlUnit::K2Node_DynamicCast_AsPawn_2' has a wrong offset!");
static_assert(offsetof(BP_ControlUnit_C_ExecuteUbergraph_BP_ControlUnit, K2Node_DynamicCast_bSuccess_4) == 0x000690, "Member 'BP_ControlUnit_C_ExecuteUbergraph_BP_ControlUnit::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(BP_ControlUnit_C_ExecuteUbergraph_BP_ControlUnit, CallFunc_IsLocallyControlled_ReturnValue_1) == 0x000691, "Member 'BP_ControlUnit_C_ExecuteUbergraph_BP_ControlUnit::CallFunc_IsLocallyControlled_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ControlUnit_C_ExecuteUbergraph_BP_ControlUnit, CallFunc_UpdateHealthBar_Value_ImplicitCast) == 0x000698, "Member 'BP_ControlUnit_C_ExecuteUbergraph_BP_ControlUnit::CallFunc_UpdateHealthBar_Value_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_ControlUnit_C_ExecuteUbergraph_BP_ControlUnit, CallFunc_UpdateHealthBar_Max_ImplicitCast) == 0x0006A0, "Member 'BP_ControlUnit_C_ExecuteUbergraph_BP_ControlUnit::CallFunc_UpdateHealthBar_Max_ImplicitCast' has a wrong offset!");

// Function BP_ControlUnit.BP_ControlUnit_C.GetDurabilityCostWhenHit
// 0x0008 (0x0008 - 0x0000)
struct BP_ControlUnit_C_GetDurabilityCostWhenHit final
{
public:
	double                                        Amount;                                            // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ControlUnit_C_GetDurabilityCostWhenHit) == 0x000008, "Wrong alignment on BP_ControlUnit_C_GetDurabilityCostWhenHit");
static_assert(sizeof(BP_ControlUnit_C_GetDurabilityCostWhenHit) == 0x000008, "Wrong size on BP_ControlUnit_C_GetDurabilityCostWhenHit");
static_assert(offsetof(BP_ControlUnit_C_GetDurabilityCostWhenHit, Amount) == 0x000000, "Member 'BP_ControlUnit_C_GetDurabilityCostWhenHit::Amount' has a wrong offset!");

// Function BP_ControlUnit.BP_ControlUnit_C.GetMaterialType
// 0x0001 (0x0001 - 0x0000)
struct BP_ControlUnit_C_GetMaterialType final
{
public:
	E_MaterialTypes                               MaterialType;                                      // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ControlUnit_C_GetMaterialType) == 0x000001, "Wrong alignment on BP_ControlUnit_C_GetMaterialType");
static_assert(sizeof(BP_ControlUnit_C_GetMaterialType) == 0x000001, "Wrong size on BP_ControlUnit_C_GetMaterialType");
static_assert(offsetof(BP_ControlUnit_C_GetMaterialType, MaterialType) == 0x000000, "Member 'BP_ControlUnit_C_GetMaterialType::MaterialType' has a wrong offset!");

// Function BP_ControlUnit.BP_ControlUnit_C.HitInterface
// 0x0018 (0x0018 - 0x0000)
struct BP_ControlUnit_C_HitInterface final
{
public:
	struct FVector                                Direction;                                         // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ControlUnit_C_HitInterface) == 0x000008, "Wrong alignment on BP_ControlUnit_C_HitInterface");
static_assert(sizeof(BP_ControlUnit_C_HitInterface) == 0x000018, "Wrong size on BP_ControlUnit_C_HitInterface");
static_assert(offsetof(BP_ControlUnit_C_HitInterface, Direction) == 0x000000, "Member 'BP_ControlUnit_C_HitInterface::Direction' has a wrong offset!");

// Function BP_ControlUnit.BP_ControlUnit_C.ImpactCosmetics
// 0x0048 (0x0048 - 0x0000)
struct BP_ControlUnit_C_ImpactCosmetics final
{
public:
	class APawn*                                  ImpactCauser;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Location;                                          // 0x0008(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                HitImpulse;                                        // 0x0020(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_ImpactEffect                                ImpactEffect;                                      // 0x0038(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x3];                                       // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   BoneName;                                          // 0x003C(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ChangedAttributes;                                 // 0x0044(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ControlUnit_C_ImpactCosmetics) == 0x000008, "Wrong alignment on BP_ControlUnit_C_ImpactCosmetics");
static_assert(sizeof(BP_ControlUnit_C_ImpactCosmetics) == 0x000048, "Wrong size on BP_ControlUnit_C_ImpactCosmetics");
static_assert(offsetof(BP_ControlUnit_C_ImpactCosmetics, ImpactCauser) == 0x000000, "Member 'BP_ControlUnit_C_ImpactCosmetics::ImpactCauser' has a wrong offset!");
static_assert(offsetof(BP_ControlUnit_C_ImpactCosmetics, Location) == 0x000008, "Member 'BP_ControlUnit_C_ImpactCosmetics::Location' has a wrong offset!");
static_assert(offsetof(BP_ControlUnit_C_ImpactCosmetics, HitImpulse) == 0x000020, "Member 'BP_ControlUnit_C_ImpactCosmetics::HitImpulse' has a wrong offset!");
static_assert(offsetof(BP_ControlUnit_C_ImpactCosmetics, ImpactEffect) == 0x000038, "Member 'BP_ControlUnit_C_ImpactCosmetics::ImpactEffect' has a wrong offset!");
static_assert(offsetof(BP_ControlUnit_C_ImpactCosmetics, BoneName) == 0x00003C, "Member 'BP_ControlUnit_C_ImpactCosmetics::BoneName' has a wrong offset!");
static_assert(offsetof(BP_ControlUnit_C_ImpactCosmetics, ChangedAttributes) == 0x000044, "Member 'BP_ControlUnit_C_ImpactCosmetics::ChangedAttributes' has a wrong offset!");

// Function BP_ControlUnit.BP_ControlUnit_C.InitHealthBar
// 0x0018 (0x0018 - 0x0000)
struct BP_ControlUnit_C_InitHealthBar final
{
public:
	class UUserWidget*                            CallFunc_GetUserWidgetObject_ReturnValue;          // 0x0000(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UItemCompatibleInfoWI_C*                K2Node_DynamicCast_AsItem_Compatible_Info_WI;      // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ControlUnit_C_InitHealthBar) == 0x000008, "Wrong alignment on BP_ControlUnit_C_InitHealthBar");
static_assert(sizeof(BP_ControlUnit_C_InitHealthBar) == 0x000018, "Wrong size on BP_ControlUnit_C_InitHealthBar");
static_assert(offsetof(BP_ControlUnit_C_InitHealthBar, CallFunc_GetUserWidgetObject_ReturnValue) == 0x000000, "Member 'BP_ControlUnit_C_InitHealthBar::CallFunc_GetUserWidgetObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ControlUnit_C_InitHealthBar, K2Node_DynamicCast_AsItem_Compatible_Info_WI) == 0x000008, "Member 'BP_ControlUnit_C_InitHealthBar::K2Node_DynamicCast_AsItem_Compatible_Info_WI' has a wrong offset!");
static_assert(offsetof(BP_ControlUnit_C_InitHealthBar, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'BP_ControlUnit_C_InitHealthBar::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BP_ControlUnit.BP_ControlUnit_C.InpActEvt_IA_Interact_K2Node_EnhancedInputActionEvent_0
// 0x0030 (0x0030 - 0x0000)
struct BP_ControlUnit_C_InpActEvt_IA_Interact_K2Node_EnhancedInputActionEvent_0 final
{
public:
	struct FInputActionValue                      ActionValue;                                       // 0x0000(0x0020)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	float                                         ElapsedTime;                                       // 0x0020(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TriggeredTime;                                     // 0x0024(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	const class UInputAction*                     SourceAction;                                      // 0x0028(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ControlUnit_C_InpActEvt_IA_Interact_K2Node_EnhancedInputActionEvent_0) == 0x000008, "Wrong alignment on BP_ControlUnit_C_InpActEvt_IA_Interact_K2Node_EnhancedInputActionEvent_0");
static_assert(sizeof(BP_ControlUnit_C_InpActEvt_IA_Interact_K2Node_EnhancedInputActionEvent_0) == 0x000030, "Wrong size on BP_ControlUnit_C_InpActEvt_IA_Interact_K2Node_EnhancedInputActionEvent_0");
static_assert(offsetof(BP_ControlUnit_C_InpActEvt_IA_Interact_K2Node_EnhancedInputActionEvent_0, ActionValue) == 0x000000, "Member 'BP_ControlUnit_C_InpActEvt_IA_Interact_K2Node_EnhancedInputActionEvent_0::ActionValue' has a wrong offset!");
static_assert(offsetof(BP_ControlUnit_C_InpActEvt_IA_Interact_K2Node_EnhancedInputActionEvent_0, ElapsedTime) == 0x000020, "Member 'BP_ControlUnit_C_InpActEvt_IA_Interact_K2Node_EnhancedInputActionEvent_0::ElapsedTime' has a wrong offset!");
static_assert(offsetof(BP_ControlUnit_C_InpActEvt_IA_Interact_K2Node_EnhancedInputActionEvent_0, TriggeredTime) == 0x000024, "Member 'BP_ControlUnit_C_InpActEvt_IA_Interact_K2Node_EnhancedInputActionEvent_0::TriggeredTime' has a wrong offset!");
static_assert(offsetof(BP_ControlUnit_C_InpActEvt_IA_Interact_K2Node_EnhancedInputActionEvent_0, SourceAction) == 0x000028, "Member 'BP_ControlUnit_C_InpActEvt_IA_Interact_K2Node_EnhancedInputActionEvent_0::SourceAction' has a wrong offset!");

// Function BP_ControlUnit.BP_ControlUnit_C.InUseCosmetics
// 0x0001 (0x0001 - 0x0000)
struct BP_ControlUnit_C_InUseCosmetics final
{
public:
	bool                                          InUse_0;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ControlUnit_C_InUseCosmetics) == 0x000001, "Wrong alignment on BP_ControlUnit_C_InUseCosmetics");
static_assert(sizeof(BP_ControlUnit_C_InUseCosmetics) == 0x000001, "Wrong size on BP_ControlUnit_C_InUseCosmetics");
static_assert(offsetof(BP_ControlUnit_C_InUseCosmetics, InUse_0) == 0x000000, "Member 'BP_ControlUnit_C_InUseCosmetics::InUse_0' has a wrong offset!");

// Function BP_ControlUnit.BP_ControlUnit_C.LethalDamageTaken
// 0x0018 (0x0018 - 0x0000)
struct BP_ControlUnit_C_LethalDamageTaken final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetFloatAttributeFromAbilitySystemComponent_bSuccessfullyFoundAttribute; // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x2];                                        // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetFloatAttributeFromAbilitySystemComponent_ReturnValue; // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue;       // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_LessEqual_DoubleDouble_A_ImplicitCast;    // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ControlUnit_C_LethalDamageTaken) == 0x000008, "Wrong alignment on BP_ControlUnit_C_LethalDamageTaken");
static_assert(sizeof(BP_ControlUnit_C_LethalDamageTaken) == 0x000018, "Wrong size on BP_ControlUnit_C_LethalDamageTaken");
static_assert(offsetof(BP_ControlUnit_C_LethalDamageTaken, ReturnValue) == 0x000000, "Member 'BP_ControlUnit_C_LethalDamageTaken::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ControlUnit_C_LethalDamageTaken, CallFunc_GetFloatAttributeFromAbilitySystemComponent_bSuccessfullyFoundAttribute) == 0x000001, "Member 'BP_ControlUnit_C_LethalDamageTaken::CallFunc_GetFloatAttributeFromAbilitySystemComponent_bSuccessfullyFoundAttribute' has a wrong offset!");
static_assert(offsetof(BP_ControlUnit_C_LethalDamageTaken, CallFunc_GetFloatAttributeFromAbilitySystemComponent_ReturnValue) == 0x000004, "Member 'BP_ControlUnit_C_LethalDamageTaken::CallFunc_GetFloatAttributeFromAbilitySystemComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ControlUnit_C_LethalDamageTaken, CallFunc_LessEqual_DoubleDouble_ReturnValue) == 0x000008, "Member 'BP_ControlUnit_C_LethalDamageTaken::CallFunc_LessEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ControlUnit_C_LethalDamageTaken, CallFunc_LessEqual_DoubleDouble_A_ImplicitCast) == 0x000010, "Member 'BP_ControlUnit_C_LethalDamageTaken::CallFunc_LessEqual_DoubleDouble_A_ImplicitCast' has a wrong offset!");

// Function BP_ControlUnit.BP_ControlUnit_C.MeleeHit
// 0x0008 (0x0008 - 0x0000)
struct BP_ControlUnit_C_MeleeHit final
{
public:
	const class AActor*                           AttackingActor;                                    // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ControlUnit_C_MeleeHit) == 0x000008, "Wrong alignment on BP_ControlUnit_C_MeleeHit");
static_assert(sizeof(BP_ControlUnit_C_MeleeHit) == 0x000008, "Wrong size on BP_ControlUnit_C_MeleeHit");
static_assert(offsetof(BP_ControlUnit_C_MeleeHit, AttackingActor) == 0x000000, "Member 'BP_ControlUnit_C_MeleeHit::AttackingActor' has a wrong offset!");

// Function BP_ControlUnit.BP_ControlUnit_C.OnDamaged
// 0x0370 (0x0370 - 0x0000)
struct BP_ControlUnit_C_OnDamaged final
{
public:
	float                                         Delta;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 Causer;                                            // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FCombatParticipant                     CombatParticipant;                                 // 0x0010(0x0060)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm)
	struct FKillMethod                            KillMethod;                                        // 0x0070(0x02E8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm)
	struct FVector_NetQuantize                    Location;                                          // 0x0358(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ControlUnit_C_OnDamaged) == 0x000008, "Wrong alignment on BP_ControlUnit_C_OnDamaged");
static_assert(sizeof(BP_ControlUnit_C_OnDamaged) == 0x000370, "Wrong size on BP_ControlUnit_C_OnDamaged");
static_assert(offsetof(BP_ControlUnit_C_OnDamaged, Delta) == 0x000000, "Member 'BP_ControlUnit_C_OnDamaged::Delta' has a wrong offset!");
static_assert(offsetof(BP_ControlUnit_C_OnDamaged, Causer) == 0x000008, "Member 'BP_ControlUnit_C_OnDamaged::Causer' has a wrong offset!");
static_assert(offsetof(BP_ControlUnit_C_OnDamaged, CombatParticipant) == 0x000010, "Member 'BP_ControlUnit_C_OnDamaged::CombatParticipant' has a wrong offset!");
static_assert(offsetof(BP_ControlUnit_C_OnDamaged, KillMethod) == 0x000070, "Member 'BP_ControlUnit_C_OnDamaged::KillMethod' has a wrong offset!");
static_assert(offsetof(BP_ControlUnit_C_OnDamaged, Location) == 0x000358, "Member 'BP_ControlUnit_C_OnDamaged::Location' has a wrong offset!");

// Function BP_ControlUnit.BP_ControlUnit_C.OnHealthChanged
// 0x0008 (0x0008 - 0x0000)
struct BP_ControlUnit_C_OnHealthChanged final
{
public:
	float                                         Health;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MaxHealth;                                         // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ControlUnit_C_OnHealthChanged) == 0x000004, "Wrong alignment on BP_ControlUnit_C_OnHealthChanged");
static_assert(sizeof(BP_ControlUnit_C_OnHealthChanged) == 0x000008, "Wrong size on BP_ControlUnit_C_OnHealthChanged");
static_assert(offsetof(BP_ControlUnit_C_OnHealthChanged, Health) == 0x000000, "Member 'BP_ControlUnit_C_OnHealthChanged::Health' has a wrong offset!");
static_assert(offsetof(BP_ControlUnit_C_OnHealthChanged, MaxHealth) == 0x000004, "Member 'BP_ControlUnit_C_OnHealthChanged::MaxHealth' has a wrong offset!");

// Function BP_ControlUnit.BP_ControlUnit_C.Owner_EnterControlUnit
// 0x0008 (0x0008 - 0x0000)
struct BP_ControlUnit_C_Owner_EnterControlUnit final
{
public:
	class AActor*                                 InteractingActor_0;                                // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ControlUnit_C_Owner_EnterControlUnit) == 0x000008, "Wrong alignment on BP_ControlUnit_C_Owner_EnterControlUnit");
static_assert(sizeof(BP_ControlUnit_C_Owner_EnterControlUnit) == 0x000008, "Wrong size on BP_ControlUnit_C_Owner_EnterControlUnit");
static_assert(offsetof(BP_ControlUnit_C_Owner_EnterControlUnit, InteractingActor_0) == 0x000000, "Member 'BP_ControlUnit_C_Owner_EnterControlUnit::InteractingActor_0' has a wrong offset!");

// Function BP_ControlUnit.BP_ControlUnit_C.PlayCameraFade
// 0x0020 (0x0020 - 0x0000)
struct BP_ControlUnit_C_PlayCameraFade final
{
public:
	class AActor*                                 InteractingActor_0;                                // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue;                   // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ControlUnit_C_PlayCameraFade) == 0x000008, "Wrong alignment on BP_ControlUnit_C_PlayCameraFade");
static_assert(sizeof(BP_ControlUnit_C_PlayCameraFade) == 0x000020, "Wrong size on BP_ControlUnit_C_PlayCameraFade");
static_assert(offsetof(BP_ControlUnit_C_PlayCameraFade, InteractingActor_0) == 0x000000, "Member 'BP_ControlUnit_C_PlayCameraFade::InteractingActor_0' has a wrong offset!");
static_assert(offsetof(BP_ControlUnit_C_PlayCameraFade, CallFunc_GetPlayerController_ReturnValue) == 0x000008, "Member 'BP_ControlUnit_C_PlayCameraFade::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ControlUnit_C_PlayCameraFade, CallFunc_K2_GetPawn_ReturnValue) == 0x000010, "Member 'BP_ControlUnit_C_PlayCameraFade::CallFunc_K2_GetPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ControlUnit_C_PlayCameraFade, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000018, "Member 'BP_ControlUnit_C_PlayCameraFade::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");

// Function BP_ControlUnit.BP_ControlUnit_C.RemoveCollision
// 0x0010 (0x0010 - 0x0000)
struct BP_ControlUnit_C_RemoveCollision final
{
public:
	class ABP_MovementCharacter_C*                K2Node_DynamicCast_AsBP_Movement_Character;        // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ControlUnit_C_RemoveCollision) == 0x000008, "Wrong alignment on BP_ControlUnit_C_RemoveCollision");
static_assert(sizeof(BP_ControlUnit_C_RemoveCollision) == 0x000010, "Wrong size on BP_ControlUnit_C_RemoveCollision");
static_assert(offsetof(BP_ControlUnit_C_RemoveCollision, K2Node_DynamicCast_AsBP_Movement_Character) == 0x000000, "Member 'BP_ControlUnit_C_RemoveCollision::K2Node_DynamicCast_AsBP_Movement_Character' has a wrong offset!");
static_assert(offsetof(BP_ControlUnit_C_RemoveCollision, K2Node_DynamicCast_bSuccess) == 0x000008, "Member 'BP_ControlUnit_C_RemoveCollision::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BP_ControlUnit.BP_ControlUnit_C.SetChatContextIfLocallyCharacterControlled
// 0x0040 (0x0040 - 0x0000)
struct BP_ControlUnit_C_SetChatContextIfLocallyCharacterControlled final
{
public:
	class AActor*                                 Actor;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Add;                                               // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A[0x6];                                        // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharacter*                             K2Node_DynamicCast_AsCharacter;                    // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            CallFunc_GetController_ReturnValue;                // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLocallyControlled_ReturnValue;          // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      K2Node_DynamicCast_AsPlayer_Controller;            // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ControlUnit_C_SetChatContextIfLocallyCharacterControlled) == 0x000008, "Wrong alignment on BP_ControlUnit_C_SetChatContextIfLocallyCharacterControlled");
static_assert(sizeof(BP_ControlUnit_C_SetChatContextIfLocallyCharacterControlled) == 0x000040, "Wrong size on BP_ControlUnit_C_SetChatContextIfLocallyCharacterControlled");
static_assert(offsetof(BP_ControlUnit_C_SetChatContextIfLocallyCharacterControlled, Actor) == 0x000000, "Member 'BP_ControlUnit_C_SetChatContextIfLocallyCharacterControlled::Actor' has a wrong offset!");
static_assert(offsetof(BP_ControlUnit_C_SetChatContextIfLocallyCharacterControlled, Add) == 0x000008, "Member 'BP_ControlUnit_C_SetChatContextIfLocallyCharacterControlled::Add' has a wrong offset!");
static_assert(offsetof(BP_ControlUnit_C_SetChatContextIfLocallyCharacterControlled, CallFunc_IsDedicatedServer_ReturnValue) == 0x000009, "Member 'BP_ControlUnit_C_SetChatContextIfLocallyCharacterControlled::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ControlUnit_C_SetChatContextIfLocallyCharacterControlled, K2Node_DynamicCast_AsCharacter) == 0x000010, "Member 'BP_ControlUnit_C_SetChatContextIfLocallyCharacterControlled::K2Node_DynamicCast_AsCharacter' has a wrong offset!");
static_assert(offsetof(BP_ControlUnit_C_SetChatContextIfLocallyCharacterControlled, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_ControlUnit_C_SetChatContextIfLocallyCharacterControlled::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_ControlUnit_C_SetChatContextIfLocallyCharacterControlled, CallFunc_GetController_ReturnValue) == 0x000020, "Member 'BP_ControlUnit_C_SetChatContextIfLocallyCharacterControlled::CallFunc_GetController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ControlUnit_C_SetChatContextIfLocallyCharacterControlled, CallFunc_IsLocallyControlled_ReturnValue) == 0x000028, "Member 'BP_ControlUnit_C_SetChatContextIfLocallyCharacterControlled::CallFunc_IsLocallyControlled_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ControlUnit_C_SetChatContextIfLocallyCharacterControlled, K2Node_DynamicCast_AsPlayer_Controller) == 0x000030, "Member 'BP_ControlUnit_C_SetChatContextIfLocallyCharacterControlled::K2Node_DynamicCast_AsPlayer_Controller' has a wrong offset!");
static_assert(offsetof(BP_ControlUnit_C_SetChatContextIfLocallyCharacterControlled, K2Node_DynamicCast_bSuccess_1) == 0x000038, "Member 'BP_ControlUnit_C_SetChatContextIfLocallyCharacterControlled::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");

// Function BP_ControlUnit.BP_ControlUnit_C.TryGrantReward
// 0x0028 (0x0028 - 0x0000)
struct BP_ControlUnit_C_TryGrantReward final
{
public:
	class AActor*                                 Causer;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  K2Node_DynamicCast_AsPawn;                         // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPlayerControlled_ReturnValue;           // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A[0x6];                                       // 0x001A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UEconomySubsystem*                      CallFunc_GetWorldSubsystem_ReturnValue;            // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ControlUnit_C_TryGrantReward) == 0x000008, "Wrong alignment on BP_ControlUnit_C_TryGrantReward");
static_assert(sizeof(BP_ControlUnit_C_TryGrantReward) == 0x000028, "Wrong size on BP_ControlUnit_C_TryGrantReward");
static_assert(offsetof(BP_ControlUnit_C_TryGrantReward, Causer) == 0x000000, "Member 'BP_ControlUnit_C_TryGrantReward::Causer' has a wrong offset!");
static_assert(offsetof(BP_ControlUnit_C_TryGrantReward, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'BP_ControlUnit_C_TryGrantReward::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ControlUnit_C_TryGrantReward, K2Node_DynamicCast_AsPawn) == 0x000010, "Member 'BP_ControlUnit_C_TryGrantReward::K2Node_DynamicCast_AsPawn' has a wrong offset!");
static_assert(offsetof(BP_ControlUnit_C_TryGrantReward, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_ControlUnit_C_TryGrantReward::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_ControlUnit_C_TryGrantReward, CallFunc_IsPlayerControlled_ReturnValue) == 0x000019, "Member 'BP_ControlUnit_C_TryGrantReward::CallFunc_IsPlayerControlled_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ControlUnit_C_TryGrantReward, CallFunc_GetWorldSubsystem_ReturnValue) == 0x000020, "Member 'BP_ControlUnit_C_TryGrantReward::CallFunc_GetWorldSubsystem_ReturnValue' has a wrong offset!");

// Function BP_ControlUnit.BP_ControlUnit_C.UpdateHealthBar
// 0x0020 (0x0020 - 0x0000)
struct BP_ControlUnit_C_UpdateHealthBar final
{
public:
	double                                        Value;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Max;                                               // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_NormalizeToRange_ReturnValue;             // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ControlUnit_C_UpdateHealthBar) == 0x000008, "Wrong alignment on BP_ControlUnit_C_UpdateHealthBar");
static_assert(sizeof(BP_ControlUnit_C_UpdateHealthBar) == 0x000020, "Wrong size on BP_ControlUnit_C_UpdateHealthBar");
static_assert(offsetof(BP_ControlUnit_C_UpdateHealthBar, Value) == 0x000000, "Member 'BP_ControlUnit_C_UpdateHealthBar::Value' has a wrong offset!");
static_assert(offsetof(BP_ControlUnit_C_UpdateHealthBar, Max) == 0x000008, "Member 'BP_ControlUnit_C_UpdateHealthBar::Max' has a wrong offset!");
static_assert(offsetof(BP_ControlUnit_C_UpdateHealthBar, CallFunc_NormalizeToRange_ReturnValue) == 0x000010, "Member 'BP_ControlUnit_C_UpdateHealthBar::CallFunc_NormalizeToRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ControlUnit_C_UpdateHealthBar, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'BP_ControlUnit_C_UpdateHealthBar::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_ControlUnit.BP_ControlUnit_C.UserConstructionScript
// 0x0010 (0x0010 - 0x0000)
struct BP_ControlUnit_C_UserConstructionScript final
{
public:
	TArray<class UMeshComponent*>                 K2Node_MakeArray_Array;                            // 0x0000(0x0010)(ReferenceParm, ContainsInstancedReference)
};
static_assert(alignof(BP_ControlUnit_C_UserConstructionScript) == 0x000008, "Wrong alignment on BP_ControlUnit_C_UserConstructionScript");
static_assert(sizeof(BP_ControlUnit_C_UserConstructionScript) == 0x000010, "Wrong size on BP_ControlUnit_C_UserConstructionScript");
static_assert(offsetof(BP_ControlUnit_C_UserConstructionScript, K2Node_MakeArray_Array) == 0x000000, "Member 'BP_ControlUnit_C_UserConstructionScript::K2Node_MakeArray_Array' has a wrong offset!");

// Function BP_ControlUnit.BP_ControlUnit_C.PostInteract
// 0x0010 (0x0010 - 0x0000)
struct BP_ControlUnit_C_PostInteract final
{
public:
	class AActor*                                 InteractingActor_0;                                // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    InteractionComponent;                              // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ControlUnit_C_PostInteract) == 0x000008, "Wrong alignment on BP_ControlUnit_C_PostInteract");
static_assert(sizeof(BP_ControlUnit_C_PostInteract) == 0x000010, "Wrong size on BP_ControlUnit_C_PostInteract");
static_assert(offsetof(BP_ControlUnit_C_PostInteract, InteractingActor_0) == 0x000000, "Member 'BP_ControlUnit_C_PostInteract::InteractingActor_0' has a wrong offset!");
static_assert(offsetof(BP_ControlUnit_C_PostInteract, InteractionComponent) == 0x000008, "Member 'BP_ControlUnit_C_PostInteract::InteractionComponent' has a wrong offset!");

// Function BP_ControlUnit.BP_ControlUnit_C.GetTeam
// 0x0038 (0x0038 - 0x0000)
struct BP_ControlUnit_C_GetTeam final
{
public:
	struct FTeam                                  ReturnValue;                                       // 0x0000(0x0038)(Parm, OutParm, ReturnParm, NoDestructor)
};
static_assert(alignof(BP_ControlUnit_C_GetTeam) == 0x000008, "Wrong alignment on BP_ControlUnit_C_GetTeam");
static_assert(sizeof(BP_ControlUnit_C_GetTeam) == 0x000038, "Wrong size on BP_ControlUnit_C_GetTeam");
static_assert(offsetof(BP_ControlUnit_C_GetTeam, ReturnValue) == 0x000000, "Member 'BP_ControlUnit_C_GetTeam::ReturnValue' has a wrong offset!");

// Function BP_ControlUnit.BP_ControlUnit_C.GetTeamID
// 0x0001 (0x0001 - 0x0000)
struct BP_ControlUnit_C_GetTeamID final
{
public:
	uint8                                         ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ControlUnit_C_GetTeamID) == 0x000001, "Wrong alignment on BP_ControlUnit_C_GetTeamID");
static_assert(sizeof(BP_ControlUnit_C_GetTeamID) == 0x000001, "Wrong size on BP_ControlUnit_C_GetTeamID");
static_assert(offsetof(BP_ControlUnit_C_GetTeamID, ReturnValue) == 0x000000, "Member 'BP_ControlUnit_C_GetTeamID::ReturnValue' has a wrong offset!");

// Function BP_ControlUnit.BP_ControlUnit_C.HasTeam
// 0x0001 (0x0001 - 0x0000)
struct BP_ControlUnit_C_HasTeam final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ControlUnit_C_HasTeam) == 0x000001, "Wrong alignment on BP_ControlUnit_C_HasTeam");
static_assert(sizeof(BP_ControlUnit_C_HasTeam) == 0x000001, "Wrong size on BP_ControlUnit_C_HasTeam");
static_assert(offsetof(BP_ControlUnit_C_HasTeam, ReturnValue) == 0x000000, "Member 'BP_ControlUnit_C_HasTeam::ReturnValue' has a wrong offset!");

// Function BP_ControlUnit.BP_ControlUnit_C.TakeDamageFromAllTeams
// 0x0001 (0x0001 - 0x0000)
struct BP_ControlUnit_C_TakeDamageFromAllTeams final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ControlUnit_C_TakeDamageFromAllTeams) == 0x000001, "Wrong alignment on BP_ControlUnit_C_TakeDamageFromAllTeams");
static_assert(sizeof(BP_ControlUnit_C_TakeDamageFromAllTeams) == 0x000001, "Wrong size on BP_ControlUnit_C_TakeDamageFromAllTeams");
static_assert(offsetof(BP_ControlUnit_C_TakeDamageFromAllTeams, ReturnValue) == 0x000000, "Member 'BP_ControlUnit_C_TakeDamageFromAllTeams::ReturnValue' has a wrong offset!");

// Function BP_ControlUnit.BP_ControlUnit_C.IsAvailableForInteraction
// 0x0018 (0x0018 - 0x0000)
struct BP_ControlUnit_C_IsAvailableForInteraction final
{
public:
	class AActor*                                 InteractingActor_0;                                // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    InteractionComponent;                              // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ControlUnit_C_IsAvailableForInteraction) == 0x000008, "Wrong alignment on BP_ControlUnit_C_IsAvailableForInteraction");
static_assert(sizeof(BP_ControlUnit_C_IsAvailableForInteraction) == 0x000018, "Wrong size on BP_ControlUnit_C_IsAvailableForInteraction");
static_assert(offsetof(BP_ControlUnit_C_IsAvailableForInteraction, InteractingActor_0) == 0x000000, "Member 'BP_ControlUnit_C_IsAvailableForInteraction::InteractingActor_0' has a wrong offset!");
static_assert(offsetof(BP_ControlUnit_C_IsAvailableForInteraction, InteractionComponent) == 0x000008, "Member 'BP_ControlUnit_C_IsAvailableForInteraction::InteractionComponent' has a wrong offset!");
static_assert(offsetof(BP_ControlUnit_C_IsAvailableForInteraction, ReturnValue) == 0x000010, "Member 'BP_ControlUnit_C_IsAvailableForInteraction::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ControlUnit_C_IsAvailableForInteraction, CallFunc_Not_PreBool_ReturnValue) == 0x000011, "Member 'BP_ControlUnit_C_IsAvailableForInteraction::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

}

