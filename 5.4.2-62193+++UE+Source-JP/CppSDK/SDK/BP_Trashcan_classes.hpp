#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Trashcan

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "HouseActorBase_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_Trashcan.BP_Trashcan_C
// 0x00D8 (0x04C8 - 0x03F0)
class ABP_Trashcan_C : public AHouseActorBase_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_BP_Trashcan_C;                      // 0x03F0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UStaticMeshComponent*                   Cone;                                              // 0x03F8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        SC_Garbage_SuckToBin_;                             // 0x0400(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   StaticMesh;                                        // 0x0408(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   FillLevel3;                                        // 0x0410(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   FillLevel1;                                        // 0x0418(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   FillLevel2;                                        // 0x0420(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 SkeletalMesh;                                      // 0x0428(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UCapsuleComponent*                      Capsule;                                           // 0x0430(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          CollectTrigger;                                    // 0x0438(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UGroundskeeperReference*                GroundskeeperReference;                            // 0x0440(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UArrowComponent*                        LaunchDirection;                                   // 0x0448(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         MorphTimeline_Time_3904183049A1B6EA392F1C85E7682253; // 0x0450(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            MorphTimeline__Direction_3904183049A1B6EA392F1C85E7682253; // 0x0454(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_455[0x3];                                      // 0x0455(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     MorphTimeLine;                                     // 0x0458(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TArray<class ABP_GarbageItem_C*>              HeldGarbage;                                       // 0x0460(0x0010)(Edit, BlueprintVisible, Net, DisableEditOnTemplate, DisableEditOnInstance)
	double                                        LaunchForce;                                       // 0x0470(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         FirstCapacityLevel;                                // 0x0478(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         SecondCapacityLevel;                               // 0x047C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         MaxCapacityLevel;                                  // 0x0480(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CurrentCapacityLevel;                              // 0x0484(0x0004)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash)
	class ABP_GarbageItem_C*                      CurrentTrashInOverlap;                             // 0x0488(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           RetriggerOverlapTimer;                             // 0x0490(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	double                                        DestructionValue;                                  // 0x0498(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        OldMappedAlpha;                                    // 0x04A0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CurrentHealth;                                     // 0x04A8(0x0008)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash)
	double                                        MaxHealth;                                         // 0x04B0(0x0008)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	FMulticastInlineDelegateProperty_             OnGarbageCollected;                                // 0x04B8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)

public:
	void AddPerfectness();
	void BndEvt__BP_Trashcan_Capsule_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
	void BndEvt__BP_Trashcan_Capsule_K2Node_ComponentBoundEvent_4_ComponentEndOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex);
	void Collect();
	void ExecuteUbergraph_BP_Trashcan(int32 EntryPoint);
	void GetCollectEffectLocation(struct FVector* SpawnLocation);
	void GiveScore();
	void LaunchTrash(class ABP_GarbageItem_C* Garbage);
	void MorphTimeLine__FinishedFunc();
	void MorphTimeLine__UpdateFunc();
	void Multicast_LaunchTrash(class ABP_GarbageItem_C* Garbage);
	void OnGarbageCollected__DelegateSignature();
	void OnRep_CurrentCapacityLevel();
	void OnRep_CurrentHealth();
	void PlayFeedback();
	void RecheckOverlap();
	void RemoveScoreWhenDestroyed();
	void SetGarbageCollectionPath(class ABP_GarbageItem_C* Garbage);
	void SetTeam();
	void StartMorph();
	void OnHealthChanged(float Health, float MaxHealth_0);
	void ReceiveBeginPlay();
	void Repair();
	void Sabotage(class AActor* SabotagingActor);
	void UpdateTeamAndID();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_Trashcan_C">();
	}
	static class ABP_Trashcan_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_Trashcan_C>();
	}
};
static_assert(alignof(ABP_Trashcan_C) == 0x000008, "Wrong alignment on ABP_Trashcan_C");
static_assert(sizeof(ABP_Trashcan_C) == 0x0004C8, "Wrong size on ABP_Trashcan_C");
static_assert(offsetof(ABP_Trashcan_C, UberGraphFrame_BP_Trashcan_C) == 0x0003F0, "Member 'ABP_Trashcan_C::UberGraphFrame_BP_Trashcan_C' has a wrong offset!");
static_assert(offsetof(ABP_Trashcan_C, Cone) == 0x0003F8, "Member 'ABP_Trashcan_C::Cone' has a wrong offset!");
static_assert(offsetof(ABP_Trashcan_C, SC_Garbage_SuckToBin_) == 0x000400, "Member 'ABP_Trashcan_C::SC_Garbage_SuckToBin_' has a wrong offset!");
static_assert(offsetof(ABP_Trashcan_C, StaticMesh) == 0x000408, "Member 'ABP_Trashcan_C::StaticMesh' has a wrong offset!");
static_assert(offsetof(ABP_Trashcan_C, FillLevel3) == 0x000410, "Member 'ABP_Trashcan_C::FillLevel3' has a wrong offset!");
static_assert(offsetof(ABP_Trashcan_C, FillLevel1) == 0x000418, "Member 'ABP_Trashcan_C::FillLevel1' has a wrong offset!");
static_assert(offsetof(ABP_Trashcan_C, FillLevel2) == 0x000420, "Member 'ABP_Trashcan_C::FillLevel2' has a wrong offset!");
static_assert(offsetof(ABP_Trashcan_C, SkeletalMesh) == 0x000428, "Member 'ABP_Trashcan_C::SkeletalMesh' has a wrong offset!");
static_assert(offsetof(ABP_Trashcan_C, Capsule) == 0x000430, "Member 'ABP_Trashcan_C::Capsule' has a wrong offset!");
static_assert(offsetof(ABP_Trashcan_C, CollectTrigger) == 0x000438, "Member 'ABP_Trashcan_C::CollectTrigger' has a wrong offset!");
static_assert(offsetof(ABP_Trashcan_C, GroundskeeperReference) == 0x000440, "Member 'ABP_Trashcan_C::GroundskeeperReference' has a wrong offset!");
static_assert(offsetof(ABP_Trashcan_C, LaunchDirection) == 0x000448, "Member 'ABP_Trashcan_C::LaunchDirection' has a wrong offset!");
static_assert(offsetof(ABP_Trashcan_C, MorphTimeline_Time_3904183049A1B6EA392F1C85E7682253) == 0x000450, "Member 'ABP_Trashcan_C::MorphTimeline_Time_3904183049A1B6EA392F1C85E7682253' has a wrong offset!");
static_assert(offsetof(ABP_Trashcan_C, MorphTimeline__Direction_3904183049A1B6EA392F1C85E7682253) == 0x000454, "Member 'ABP_Trashcan_C::MorphTimeline__Direction_3904183049A1B6EA392F1C85E7682253' has a wrong offset!");
static_assert(offsetof(ABP_Trashcan_C, MorphTimeLine) == 0x000458, "Member 'ABP_Trashcan_C::MorphTimeLine' has a wrong offset!");
static_assert(offsetof(ABP_Trashcan_C, HeldGarbage) == 0x000460, "Member 'ABP_Trashcan_C::HeldGarbage' has a wrong offset!");
static_assert(offsetof(ABP_Trashcan_C, LaunchForce) == 0x000470, "Member 'ABP_Trashcan_C::LaunchForce' has a wrong offset!");
static_assert(offsetof(ABP_Trashcan_C, FirstCapacityLevel) == 0x000478, "Member 'ABP_Trashcan_C::FirstCapacityLevel' has a wrong offset!");
static_assert(offsetof(ABP_Trashcan_C, SecondCapacityLevel) == 0x00047C, "Member 'ABP_Trashcan_C::SecondCapacityLevel' has a wrong offset!");
static_assert(offsetof(ABP_Trashcan_C, MaxCapacityLevel) == 0x000480, "Member 'ABP_Trashcan_C::MaxCapacityLevel' has a wrong offset!");
static_assert(offsetof(ABP_Trashcan_C, CurrentCapacityLevel) == 0x000484, "Member 'ABP_Trashcan_C::CurrentCapacityLevel' has a wrong offset!");
static_assert(offsetof(ABP_Trashcan_C, CurrentTrashInOverlap) == 0x000488, "Member 'ABP_Trashcan_C::CurrentTrashInOverlap' has a wrong offset!");
static_assert(offsetof(ABP_Trashcan_C, RetriggerOverlapTimer) == 0x000490, "Member 'ABP_Trashcan_C::RetriggerOverlapTimer' has a wrong offset!");
static_assert(offsetof(ABP_Trashcan_C, DestructionValue) == 0x000498, "Member 'ABP_Trashcan_C::DestructionValue' has a wrong offset!");
static_assert(offsetof(ABP_Trashcan_C, OldMappedAlpha) == 0x0004A0, "Member 'ABP_Trashcan_C::OldMappedAlpha' has a wrong offset!");
static_assert(offsetof(ABP_Trashcan_C, CurrentHealth) == 0x0004A8, "Member 'ABP_Trashcan_C::CurrentHealth' has a wrong offset!");
static_assert(offsetof(ABP_Trashcan_C, MaxHealth) == 0x0004B0, "Member 'ABP_Trashcan_C::MaxHealth' has a wrong offset!");
static_assert(offsetof(ABP_Trashcan_C, OnGarbageCollected) == 0x0004B8, "Member 'ABP_Trashcan_C::OnGarbageCollected' has a wrong offset!");

}

