#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Resource_Receptacle

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_Resource_Receptacle.BP_Resource_Receptacle_C
// 0x0090 (0x0320 - 0x0290)
class ABP_Resource_Receptacle_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0290(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UBP_PingableComponent_C*                BP_PingableComponent;                              // 0x0298(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UAC_Indicator_C*                        AC_Indicator;                                      // 0x02A0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UGroundskeeperReference*                GroundskeeperReference;                            // 0x02A8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          Box;                                               // 0x02B0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Cube;                                              // 0x02B8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   StaticMesh;                                        // 0x02C0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UNiagaraComponent*                      Niagara;                                           // 0x02C8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               ParticleSystem;                                    // 0x02D0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        Audio;                                             // 0x02D8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        Scene;                                             // 0x02E0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class ABP_ResourceCrate_C*                    CurrentObjectInRange;                              // 0x02E8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           OverlapTimer;                                      // 0x02F0(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	FMulticastInlineDelegateProperty_             ResourceDelivered;                                 // 0x02F8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	uint8                                         TeamId;                                            // 0x0308(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_309[0x3];                                      // 0x0309(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ResourcesHandedIn;                                 // 0x030C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<bool>                                  ResourcesUnlockSteps;                              // 0x0310(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)

public:
	void ActivatePointOfInterest();
	void BndEvt__BP_Resource_Receptacle_Box_K2Node_ComponentBoundEvent_0_ComponentEndOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex);
	void BndEvt__BP_Resource_Receptacle_Box_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
	void CollectResource();
	void CosmeticCollect();
	void DeactivatePointOfInterest();
	void ExecuteUbergraph_BP_Resource_Receptacle(int32 EntryPoint);
	bool IsSameTeamAsPlayer0();
	void Multi_Show_New_Unlocks(const TArray<class APlayerStateJP*>& PlayerStatesOfOwningTeam);
	void OnEnded_0B95BAE449EC612A96768BA602E28D28();
	void ReceiveBeginPlay();
	void RecheckOverlap();
	void ResourceDelivered__DelegateSignature(class ACharacter* DeliveringCharacter);
	void SetMaterialBasedOnTeam();
	void ToggleReceptacleVisibility(bool Visible);

	struct FTeam GetTeam() const;
	uint8 GetTeamID() const;
	bool HasTeam() const;
	bool TakeDamageFromAllTeams() const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_Resource_Receptacle_C">();
	}
	static class ABP_Resource_Receptacle_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_Resource_Receptacle_C>();
	}
};
static_assert(alignof(ABP_Resource_Receptacle_C) == 0x000008, "Wrong alignment on ABP_Resource_Receptacle_C");
static_assert(sizeof(ABP_Resource_Receptacle_C) == 0x000320, "Wrong size on ABP_Resource_Receptacle_C");
static_assert(offsetof(ABP_Resource_Receptacle_C, UberGraphFrame) == 0x000290, "Member 'ABP_Resource_Receptacle_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_Resource_Receptacle_C, BP_PingableComponent) == 0x000298, "Member 'ABP_Resource_Receptacle_C::BP_PingableComponent' has a wrong offset!");
static_assert(offsetof(ABP_Resource_Receptacle_C, AC_Indicator) == 0x0002A0, "Member 'ABP_Resource_Receptacle_C::AC_Indicator' has a wrong offset!");
static_assert(offsetof(ABP_Resource_Receptacle_C, GroundskeeperReference) == 0x0002A8, "Member 'ABP_Resource_Receptacle_C::GroundskeeperReference' has a wrong offset!");
static_assert(offsetof(ABP_Resource_Receptacle_C, Box) == 0x0002B0, "Member 'ABP_Resource_Receptacle_C::Box' has a wrong offset!");
static_assert(offsetof(ABP_Resource_Receptacle_C, Cube) == 0x0002B8, "Member 'ABP_Resource_Receptacle_C::Cube' has a wrong offset!");
static_assert(offsetof(ABP_Resource_Receptacle_C, StaticMesh) == 0x0002C0, "Member 'ABP_Resource_Receptacle_C::StaticMesh' has a wrong offset!");
static_assert(offsetof(ABP_Resource_Receptacle_C, Niagara) == 0x0002C8, "Member 'ABP_Resource_Receptacle_C::Niagara' has a wrong offset!");
static_assert(offsetof(ABP_Resource_Receptacle_C, ParticleSystem) == 0x0002D0, "Member 'ABP_Resource_Receptacle_C::ParticleSystem' has a wrong offset!");
static_assert(offsetof(ABP_Resource_Receptacle_C, Audio) == 0x0002D8, "Member 'ABP_Resource_Receptacle_C::Audio' has a wrong offset!");
static_assert(offsetof(ABP_Resource_Receptacle_C, Scene) == 0x0002E0, "Member 'ABP_Resource_Receptacle_C::Scene' has a wrong offset!");
static_assert(offsetof(ABP_Resource_Receptacle_C, CurrentObjectInRange) == 0x0002E8, "Member 'ABP_Resource_Receptacle_C::CurrentObjectInRange' has a wrong offset!");
static_assert(offsetof(ABP_Resource_Receptacle_C, OverlapTimer) == 0x0002F0, "Member 'ABP_Resource_Receptacle_C::OverlapTimer' has a wrong offset!");
static_assert(offsetof(ABP_Resource_Receptacle_C, ResourceDelivered) == 0x0002F8, "Member 'ABP_Resource_Receptacle_C::ResourceDelivered' has a wrong offset!");
static_assert(offsetof(ABP_Resource_Receptacle_C, TeamId) == 0x000308, "Member 'ABP_Resource_Receptacle_C::TeamId' has a wrong offset!");
static_assert(offsetof(ABP_Resource_Receptacle_C, ResourcesHandedIn) == 0x00030C, "Member 'ABP_Resource_Receptacle_C::ResourcesHandedIn' has a wrong offset!");
static_assert(offsetof(ABP_Resource_Receptacle_C, ResourcesUnlockSteps) == 0x000310, "Member 'ABP_Resource_Receptacle_C::ResourcesUnlockSteps' has a wrong offset!");

}

