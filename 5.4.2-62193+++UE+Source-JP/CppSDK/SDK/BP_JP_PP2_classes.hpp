#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_JP_PP2

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "E_Lighting_Presets_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_JP_PP2.BP_JP_PP2_C
// 0x0068 (0x02F8 - 0x0290)
class ABP_JP_PP2_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0290(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x0298(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         BlendDayNight_NewTrack_0_8DF9972B44ED2FBFC8A0319E52AB7C74; // 0x02A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            BlendDayNight__Direction_8DF9972B44ED2FBFC8A0319E52AB7C74; // 0x02A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2A5[0x3];                                      // 0x02A5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     BlendDayNight;                                     // 0x02A8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	float                                         BlendPostProcessTimeline_Blend_3CE6367B4326F93A84AD37A4A6ED8175; // 0x02B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            BlendPostProcessTimeline__Direction_3CE6367B4326F93A84AD37A4A6ED8175; // 0x02B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2B5[0x3];                                      // 0x02B5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     BlendPostProcessTimeline;                          // 0x02B8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	E_Lighting_Presets                            LightingPreset;                                    // 0x02C0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C1[0x7];                                      // 0x02C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APostProcessVolume*                     PostProcessActor;                                  // 0x02C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	class UDataTable*                             Presets;                                           // 0x02D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class ABP_LightingAndPostProcessController_C* LightingAndPostProcessController;                  // 0x02D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	E_Lighting_Presets                            LightingPresetNight;                               // 0x02E0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          blending;                                          // 0x02E1(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2E2[0x6];                                      // 0x02E2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class APostProcessVolume*                     PostProcessActorNight;                             // 0x02E8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	bool                                          Inside;                                            // 0x02F0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          BlockUpdates;                                      // 0x02F1(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void BlendDayNight__FinishedFunc();
	void BlendDayNight__UpdateFunc();
	void BlendPostProcessTimeline__FinishedFunc();
	void BlendPostProcessTimeline__UpdateFunc();
	void ExecuteUbergraph_BP_JP_PP2(int32 EntryPoint);
	void ForceEndOverlap();
	void OnComponentBeginOverlap_Event(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
	void OnComponentEndOverlap_Event(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex);
	void PP_SwitchDay();
	void PP_SwitchNight();
	void ReceiveBeginPlay();
	void SetPostProcessAtSpawn(class APawn* OldPawn, class APawn* NewPawn);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_JP_PP2_C">();
	}
	static class ABP_JP_PP2_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_JP_PP2_C>();
	}
};
static_assert(alignof(ABP_JP_PP2_C) == 0x000008, "Wrong alignment on ABP_JP_PP2_C");
static_assert(sizeof(ABP_JP_PP2_C) == 0x0002F8, "Wrong size on ABP_JP_PP2_C");
static_assert(offsetof(ABP_JP_PP2_C, UberGraphFrame) == 0x000290, "Member 'ABP_JP_PP2_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_JP_PP2_C, DefaultSceneRoot) == 0x000298, "Member 'ABP_JP_PP2_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ABP_JP_PP2_C, BlendDayNight_NewTrack_0_8DF9972B44ED2FBFC8A0319E52AB7C74) == 0x0002A0, "Member 'ABP_JP_PP2_C::BlendDayNight_NewTrack_0_8DF9972B44ED2FBFC8A0319E52AB7C74' has a wrong offset!");
static_assert(offsetof(ABP_JP_PP2_C, BlendDayNight__Direction_8DF9972B44ED2FBFC8A0319E52AB7C74) == 0x0002A4, "Member 'ABP_JP_PP2_C::BlendDayNight__Direction_8DF9972B44ED2FBFC8A0319E52AB7C74' has a wrong offset!");
static_assert(offsetof(ABP_JP_PP2_C, BlendDayNight) == 0x0002A8, "Member 'ABP_JP_PP2_C::BlendDayNight' has a wrong offset!");
static_assert(offsetof(ABP_JP_PP2_C, BlendPostProcessTimeline_Blend_3CE6367B4326F93A84AD37A4A6ED8175) == 0x0002B0, "Member 'ABP_JP_PP2_C::BlendPostProcessTimeline_Blend_3CE6367B4326F93A84AD37A4A6ED8175' has a wrong offset!");
static_assert(offsetof(ABP_JP_PP2_C, BlendPostProcessTimeline__Direction_3CE6367B4326F93A84AD37A4A6ED8175) == 0x0002B4, "Member 'ABP_JP_PP2_C::BlendPostProcessTimeline__Direction_3CE6367B4326F93A84AD37A4A6ED8175' has a wrong offset!");
static_assert(offsetof(ABP_JP_PP2_C, BlendPostProcessTimeline) == 0x0002B8, "Member 'ABP_JP_PP2_C::BlendPostProcessTimeline' has a wrong offset!");
static_assert(offsetof(ABP_JP_PP2_C, LightingPreset) == 0x0002C0, "Member 'ABP_JP_PP2_C::LightingPreset' has a wrong offset!");
static_assert(offsetof(ABP_JP_PP2_C, PostProcessActor) == 0x0002C8, "Member 'ABP_JP_PP2_C::PostProcessActor' has a wrong offset!");
static_assert(offsetof(ABP_JP_PP2_C, Presets) == 0x0002D0, "Member 'ABP_JP_PP2_C::Presets' has a wrong offset!");
static_assert(offsetof(ABP_JP_PP2_C, LightingAndPostProcessController) == 0x0002D8, "Member 'ABP_JP_PP2_C::LightingAndPostProcessController' has a wrong offset!");
static_assert(offsetof(ABP_JP_PP2_C, LightingPresetNight) == 0x0002E0, "Member 'ABP_JP_PP2_C::LightingPresetNight' has a wrong offset!");
static_assert(offsetof(ABP_JP_PP2_C, blending) == 0x0002E1, "Member 'ABP_JP_PP2_C::blending' has a wrong offset!");
static_assert(offsetof(ABP_JP_PP2_C, PostProcessActorNight) == 0x0002E8, "Member 'ABP_JP_PP2_C::PostProcessActorNight' has a wrong offset!");
static_assert(offsetof(ABP_JP_PP2_C, Inside) == 0x0002F0, "Member 'ABP_JP_PP2_C::Inside' has a wrong offset!");
static_assert(offsetof(ABP_JP_PP2_C, BlockUpdates) == 0x0002F1, "Member 'ABP_JP_PP2_C::BlockUpdates' has a wrong offset!");

}

