#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_SettingsListEntry_SubCollection

#include "Basic.hpp"

#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function W_SettingsListEntry_SubCollection.W_SettingsListEntry_SubCollection_C.ExecuteUbergraph_W_SettingsListEntry_SubCollection
// 0x0168 (0x0168 - 0x0000)
struct W_SettingsListEntry_SubCollection_C_ExecuteUbergraph_W_SettingsListEntry_SubCollection final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Event_ActionText;                           // 0x0008(0x0010)(ConstParm)
	class UW_LyraMenuButton_C*                    K2Node_DynamicCast_AsW_Lyra_Menu_Button;           // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x0024(0x0038)(IsPlainOldData, NoDestructor)
	uint8                                         Pad_5C[0x4];                                       // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPointerEvent                          K2Node_Event_MouseEvent_1;                         // 0x0060(0x0078)(ConstParm)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationReverse_ReturnValue;         // 0x00D8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationForward_ReturnValue;         // 0x00E0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FPointerEvent                          K2Node_Event_MouseEvent;                           // 0x00E8(0x0078)(ConstParm)
	bool                                          CallFunc_IsOwningPlayerUsingTouch_ReturnValue;     // 0x0160(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_SettingsListEntry_SubCollection_C_ExecuteUbergraph_W_SettingsListEntry_SubCollection) == 0x000008, "Wrong alignment on W_SettingsListEntry_SubCollection_C_ExecuteUbergraph_W_SettingsListEntry_SubCollection");
static_assert(sizeof(W_SettingsListEntry_SubCollection_C_ExecuteUbergraph_W_SettingsListEntry_SubCollection) == 0x000168, "Wrong size on W_SettingsListEntry_SubCollection_C_ExecuteUbergraph_W_SettingsListEntry_SubCollection");
static_assert(offsetof(W_SettingsListEntry_SubCollection_C_ExecuteUbergraph_W_SettingsListEntry_SubCollection, EntryPoint) == 0x000000, "Member 'W_SettingsListEntry_SubCollection_C_ExecuteUbergraph_W_SettingsListEntry_SubCollection::EntryPoint' has a wrong offset!");
static_assert(offsetof(W_SettingsListEntry_SubCollection_C_ExecuteUbergraph_W_SettingsListEntry_SubCollection, K2Node_Event_ActionText) == 0x000008, "Member 'W_SettingsListEntry_SubCollection_C_ExecuteUbergraph_W_SettingsListEntry_SubCollection::K2Node_Event_ActionText' has a wrong offset!");
static_assert(offsetof(W_SettingsListEntry_SubCollection_C_ExecuteUbergraph_W_SettingsListEntry_SubCollection, K2Node_DynamicCast_AsW_Lyra_Menu_Button) == 0x000018, "Member 'W_SettingsListEntry_SubCollection_C_ExecuteUbergraph_W_SettingsListEntry_SubCollection::K2Node_DynamicCast_AsW_Lyra_Menu_Button' has a wrong offset!");
static_assert(offsetof(W_SettingsListEntry_SubCollection_C_ExecuteUbergraph_W_SettingsListEntry_SubCollection, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'W_SettingsListEntry_SubCollection_C_ExecuteUbergraph_W_SettingsListEntry_SubCollection::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(W_SettingsListEntry_SubCollection_C_ExecuteUbergraph_W_SettingsListEntry_SubCollection, K2Node_Event_MyGeometry) == 0x000024, "Member 'W_SettingsListEntry_SubCollection_C_ExecuteUbergraph_W_SettingsListEntry_SubCollection::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(W_SettingsListEntry_SubCollection_C_ExecuteUbergraph_W_SettingsListEntry_SubCollection, K2Node_Event_MouseEvent_1) == 0x000060, "Member 'W_SettingsListEntry_SubCollection_C_ExecuteUbergraph_W_SettingsListEntry_SubCollection::K2Node_Event_MouseEvent_1' has a wrong offset!");
static_assert(offsetof(W_SettingsListEntry_SubCollection_C_ExecuteUbergraph_W_SettingsListEntry_SubCollection, CallFunc_PlayAnimationReverse_ReturnValue) == 0x0000D8, "Member 'W_SettingsListEntry_SubCollection_C_ExecuteUbergraph_W_SettingsListEntry_SubCollection::CallFunc_PlayAnimationReverse_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_SettingsListEntry_SubCollection_C_ExecuteUbergraph_W_SettingsListEntry_SubCollection, CallFunc_PlayAnimationForward_ReturnValue) == 0x0000E0, "Member 'W_SettingsListEntry_SubCollection_C_ExecuteUbergraph_W_SettingsListEntry_SubCollection::CallFunc_PlayAnimationForward_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_SettingsListEntry_SubCollection_C_ExecuteUbergraph_W_SettingsListEntry_SubCollection, K2Node_Event_MouseEvent) == 0x0000E8, "Member 'W_SettingsListEntry_SubCollection_C_ExecuteUbergraph_W_SettingsListEntry_SubCollection::K2Node_Event_MouseEvent' has a wrong offset!");
static_assert(offsetof(W_SettingsListEntry_SubCollection_C_ExecuteUbergraph_W_SettingsListEntry_SubCollection, CallFunc_IsOwningPlayerUsingTouch_ReturnValue) == 0x000160, "Member 'W_SettingsListEntry_SubCollection_C_ExecuteUbergraph_W_SettingsListEntry_SubCollection::CallFunc_IsOwningPlayerUsingTouch_ReturnValue' has a wrong offset!");

// Function W_SettingsListEntry_SubCollection.W_SettingsListEntry_SubCollection_C.GetPrimaryGamepadFocusWidget
// 0x0008 (0x0008 - 0x0000)
struct W_SettingsListEntry_SubCollection_C_GetPrimaryGamepadFocusWidget final
{
public:
	class UWidget*                                ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_SettingsListEntry_SubCollection_C_GetPrimaryGamepadFocusWidget) == 0x000008, "Wrong alignment on W_SettingsListEntry_SubCollection_C_GetPrimaryGamepadFocusWidget");
static_assert(sizeof(W_SettingsListEntry_SubCollection_C_GetPrimaryGamepadFocusWidget) == 0x000008, "Wrong size on W_SettingsListEntry_SubCollection_C_GetPrimaryGamepadFocusWidget");
static_assert(offsetof(W_SettingsListEntry_SubCollection_C_GetPrimaryGamepadFocusWidget, ReturnValue) == 0x000000, "Member 'W_SettingsListEntry_SubCollection_C_GetPrimaryGamepadFocusWidget::ReturnValue' has a wrong offset!");

// Function W_SettingsListEntry_SubCollection.W_SettingsListEntry_SubCollection_C.OnMouseEnter
// 0x00B0 (0x00B0 - 0x0000)
struct W_SettingsListEntry_SubCollection_C_OnMouseEnter final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FPointerEvent                          MouseEvent;                                        // 0x0038(0x0078)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(W_SettingsListEntry_SubCollection_C_OnMouseEnter) == 0x000008, "Wrong alignment on W_SettingsListEntry_SubCollection_C_OnMouseEnter");
static_assert(sizeof(W_SettingsListEntry_SubCollection_C_OnMouseEnter) == 0x0000B0, "Wrong size on W_SettingsListEntry_SubCollection_C_OnMouseEnter");
static_assert(offsetof(W_SettingsListEntry_SubCollection_C_OnMouseEnter, MyGeometry) == 0x000000, "Member 'W_SettingsListEntry_SubCollection_C_OnMouseEnter::MyGeometry' has a wrong offset!");
static_assert(offsetof(W_SettingsListEntry_SubCollection_C_OnMouseEnter, MouseEvent) == 0x000038, "Member 'W_SettingsListEntry_SubCollection_C_OnMouseEnter::MouseEvent' has a wrong offset!");

// Function W_SettingsListEntry_SubCollection.W_SettingsListEntry_SubCollection_C.OnMouseLeave
// 0x0078 (0x0078 - 0x0000)
struct W_SettingsListEntry_SubCollection_C_OnMouseLeave final
{
public:
	struct FPointerEvent                          MouseEvent;                                        // 0x0000(0x0078)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(W_SettingsListEntry_SubCollection_C_OnMouseLeave) == 0x000008, "Wrong alignment on W_SettingsListEntry_SubCollection_C_OnMouseLeave");
static_assert(sizeof(W_SettingsListEntry_SubCollection_C_OnMouseLeave) == 0x000078, "Wrong size on W_SettingsListEntry_SubCollection_C_OnMouseLeave");
static_assert(offsetof(W_SettingsListEntry_SubCollection_C_OnMouseLeave, MouseEvent) == 0x000000, "Member 'W_SettingsListEntry_SubCollection_C_OnMouseLeave::MouseEvent' has a wrong offset!");

// Function W_SettingsListEntry_SubCollection.W_SettingsListEntry_SubCollection_C.OnSettingAssigned
// 0x0010 (0x0010 - 0x0000)
struct W_SettingsListEntry_SubCollection_C_OnSettingAssigned final
{
public:
	class FText                                   ActionText;                                        // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(W_SettingsListEntry_SubCollection_C_OnSettingAssigned) == 0x000008, "Wrong alignment on W_SettingsListEntry_SubCollection_C_OnSettingAssigned");
static_assert(sizeof(W_SettingsListEntry_SubCollection_C_OnSettingAssigned) == 0x000010, "Wrong size on W_SettingsListEntry_SubCollection_C_OnSettingAssigned");
static_assert(offsetof(W_SettingsListEntry_SubCollection_C_OnSettingAssigned, ActionText) == 0x000000, "Member 'W_SettingsListEntry_SubCollection_C_OnSettingAssigned::ActionText' has a wrong offset!");

}

