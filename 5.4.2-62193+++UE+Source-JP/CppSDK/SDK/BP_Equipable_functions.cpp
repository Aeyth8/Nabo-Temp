#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Equipable

#include "Basic.hpp"

#include "BP_Equipable_classes.hpp"
#include "BP_Equipable_parameters.hpp"


namespace SDK
{

// Function BP_Equipable.BP_Equipable_C.CastNoShadow
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_Equipable_C::CastNoShadow()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Equipable_C", "CastNoShadow");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Equipable.BP_Equipable_C.DisableShadowsOnLocalEquipables
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_Equipable_C::DisableShadowsOnLocalEquipables()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Equipable_C", "DisableShadowsOnLocalEquipables");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Equipable.BP_Equipable_C.ExecuteUbergraph_BP_Equipable
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Equipable_C::ExecuteUbergraph_BP_Equipable(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Equipable_C", "ExecuteUbergraph_BP_Equipable");

	Params::BP_Equipable_C_ExecuteUbergraph_BP_Equipable Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Equipable.BP_Equipable_C.GetAudioComponent
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class UAudioComponent*>          AudioComponents                                        (Parm, OutParm, ContainsInstancedReference)

void ABP_Equipable_C::GetAudioComponent(TArray<class UAudioComponent*>* AudioComponents)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Equipable_C", "GetAudioComponent");

	Params::BP_Equipable_C_GetAudioComponent Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (AudioComponents != nullptr)
		*AudioComponents = std::move(Parms.AudioComponents);
}


// Function BP_Equipable.BP_Equipable_C.GetRenderMeshes
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class UMeshComponent*>           Meshes                                                 (Parm, OutParm, ContainsInstancedReference)

void ABP_Equipable_C::GetRenderMeshes(TArray<class UMeshComponent*>* Meshes)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Equipable_C", "GetRenderMeshes");

	Params::BP_Equipable_C_GetRenderMeshes Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Meshes != nullptr)
		*Meshes = std::move(Parms.Meshes);
}


// Function BP_Equipable.BP_Equipable_C.GetViewMode
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// EEquipmentViewMode                      ViewMode                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Equipable_C::GetViewMode(EEquipmentViewMode* ViewMode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Equipable_C", "GetViewMode");

	Params::BP_Equipable_C_GetViewMode Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (ViewMode != nullptr)
		*ViewMode = Parms.ViewMode;
}


// Function BP_Equipable.BP_Equipable_C.HighConstrastModeChanged
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsEnabled                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Equipable_C::HighConstrastModeChanged(bool IsEnabled)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Equipable_C", "HighConstrastModeChanged");

	Params::BP_Equipable_C_HighConstrastModeChanged Parms{};

	Parms.IsEnabled = IsEnabled;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Equipable.BP_Equipable_C.MakeVisible
// (BlueprintCallable, BlueprintEvent)

void ABP_Equipable_C::MakeVisible()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Equipable_C", "MakeVisible");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Equipable.BP_Equipable_C.OnHandleViewMode
// (Event, Public, BlueprintEvent)
// Parameters:
// EEquipmentViewMode                      ViewMode                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Equipable_C::OnHandleViewMode(EEquipmentViewMode ViewMode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Equipable_C", "OnHandleViewMode");

	Params::BP_Equipable_C_OnHandleViewMode Parms{};

	Parms.ViewMode = ViewMode;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Equipable.BP_Equipable_C.OnOwnerDead
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class ACharacter*                       Character                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_Equipable_C::OnOwnerDead(class ACharacter* Character)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Equipable_C", "OnOwnerDead");

	Params::BP_Equipable_C_OnOwnerDead Parms{};

	Parms.Character = Character;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Equipable.BP_Equipable_C.PlayEquipableMontage
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UAnimMontage*                     MontageToPlay                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class UAnimInstance*                    FollowerAnimInstance                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class UAnimMontage*                     MontageLeader                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class UAnimMontage*                     CurrentActiveMontage                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class UAnimInstance*                    OtherAnimInstance                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// double                                  InPlayRate                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bBlocking                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bItemReady                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Equipable_C::PlayEquipableMontage(class UAnimMontage* MontageToPlay, class UAnimInstance* FollowerAnimInstance, class UAnimMontage* MontageLeader, class UAnimMontage* CurrentActiveMontage, class UAnimInstance* OtherAnimInstance, double InPlayRate, bool bBlocking, bool bItemReady)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Equipable_C", "PlayEquipableMontage");

	Params::BP_Equipable_C_PlayEquipableMontage Parms{};

	Parms.MontageToPlay = MontageToPlay;
	Parms.FollowerAnimInstance = FollowerAnimInstance;
	Parms.MontageLeader = MontageLeader;
	Parms.CurrentActiveMontage = CurrentActiveMontage;
	Parms.OtherAnimInstance = OtherAnimInstance;
	Parms.InPlayRate = InPlayRate;
	Parms.bBlocking = bBlocking;
	Parms.bItemReady = bItemReady;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Equipable.BP_Equipable_C.PlayMaterialLayerSound
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UPhysicalMaterial*                PhysicalMaterial                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_Equipable_C::PlayMaterialLayerSound(class UPhysicalMaterial* PhysicalMaterial)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Equipable_C", "PlayMaterialLayerSound");

	Params::BP_Equipable_C_PlayMaterialLayerSound Parms{};

	Parms.PhysicalMaterial = PhysicalMaterial;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Equipable.BP_Equipable_C.PlaySound
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class USoundCue*                        Sound                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_Equipable_C::PlaySound(class USoundCue* Sound)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Equipable_C", "PlaySound");

	Params::BP_Equipable_C_PlaySound Parms{};

	Parms.Sound = Sound;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Equipable.BP_Equipable_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ABP_Equipable_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Equipable_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Equipable.BP_Equipable_C.SetHighContrastMode
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Enabled                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Equipable_C::SetHighContrastMode(bool Enabled)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Equipable_C", "SetHighContrastMode");

	Params::BP_Equipable_C_SetHighContrastMode Parms{};

	Parms.Enabled = Enabled;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Equipable.BP_Equipable_C.UserConstructionScript
// (Event, Public, BlueprintCallable, BlueprintEvent)

void ABP_Equipable_C::UserConstructionScript()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Equipable_C", "UserConstructionScript");

	UObject::ProcessEvent(Func, nullptr);
}

}

