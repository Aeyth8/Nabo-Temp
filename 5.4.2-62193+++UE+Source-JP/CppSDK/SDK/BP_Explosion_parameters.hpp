#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Explosion

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "E_ExplosionRange_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "JP_structs.hpp"


namespace SDK::Params
{

// Function BP_Explosion.BP_Explosion_C.CalculateDamageBasedOnDistance
// 0x0128 (0x0128 - 0x0000)
struct BP_Explosion_C_CalculateDamageBasedOnDistance final
{
public:
	class AActor*                                 HitActor;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        Damage;                                            // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          LIsHouseEssential;                                 // 0x0010(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        LDistanceFromExplosion;                            // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_ExplosionRange                              Temp_byte_Variable;                                // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Temp_real_Variable;                                // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_DoesImplementInterface_ReturnValue;       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_GetInstigator_ReturnValue;                // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class ITeamableInterface>    K2Node_DynamicCast_AsTeamable_Interface;           // 0x0040(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetTeamIDFromPawn_ReturnValue;            // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_52[0x6];                                       // 0x0052(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTeam                                  CallFunc_GetTeam_ReturnValue;                      // 0x0058(0x0038)(NoDestructor)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0090(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_Select_Default;                             // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SafeDivide_ReturnValue;                   // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C1[0x7];                                       // 0x00C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTeam                                  Temp_struct_Variable;                              // 0x00C8(0x0038)(NoDestructor)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_1;       // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0101(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_102[0x6];                                      // 0x0102(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x0108(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Vector_Distance_ReturnValue;              // 0x0120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Explosion_C_CalculateDamageBasedOnDistance) == 0x000008, "Wrong alignment on BP_Explosion_C_CalculateDamageBasedOnDistance");
static_assert(sizeof(BP_Explosion_C_CalculateDamageBasedOnDistance) == 0x000128, "Wrong size on BP_Explosion_C_CalculateDamageBasedOnDistance");
static_assert(offsetof(BP_Explosion_C_CalculateDamageBasedOnDistance, HitActor) == 0x000000, "Member 'BP_Explosion_C_CalculateDamageBasedOnDistance::HitActor' has a wrong offset!");
static_assert(offsetof(BP_Explosion_C_CalculateDamageBasedOnDistance, Damage) == 0x000008, "Member 'BP_Explosion_C_CalculateDamageBasedOnDistance::Damage' has a wrong offset!");
static_assert(offsetof(BP_Explosion_C_CalculateDamageBasedOnDistance, LIsHouseEssential) == 0x000010, "Member 'BP_Explosion_C_CalculateDamageBasedOnDistance::LIsHouseEssential' has a wrong offset!");
static_assert(offsetof(BP_Explosion_C_CalculateDamageBasedOnDistance, LDistanceFromExplosion) == 0x000018, "Member 'BP_Explosion_C_CalculateDamageBasedOnDistance::LDistanceFromExplosion' has a wrong offset!");
static_assert(offsetof(BP_Explosion_C_CalculateDamageBasedOnDistance, Temp_byte_Variable) == 0x000020, "Member 'BP_Explosion_C_CalculateDamageBasedOnDistance::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_Explosion_C_CalculateDamageBasedOnDistance, Temp_real_Variable) == 0x000028, "Member 'BP_Explosion_C_CalculateDamageBasedOnDistance::Temp_real_Variable' has a wrong offset!");
static_assert(offsetof(BP_Explosion_C_CalculateDamageBasedOnDistance, CallFunc_DoesImplementInterface_ReturnValue) == 0x000030, "Member 'BP_Explosion_C_CalculateDamageBasedOnDistance::CallFunc_DoesImplementInterface_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Explosion_C_CalculateDamageBasedOnDistance, CallFunc_GetInstigator_ReturnValue) == 0x000038, "Member 'BP_Explosion_C_CalculateDamageBasedOnDistance::CallFunc_GetInstigator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Explosion_C_CalculateDamageBasedOnDistance, K2Node_DynamicCast_AsTeamable_Interface) == 0x000040, "Member 'BP_Explosion_C_CalculateDamageBasedOnDistance::K2Node_DynamicCast_AsTeamable_Interface' has a wrong offset!");
static_assert(offsetof(BP_Explosion_C_CalculateDamageBasedOnDistance, K2Node_DynamicCast_bSuccess) == 0x000050, "Member 'BP_Explosion_C_CalculateDamageBasedOnDistance::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_Explosion_C_CalculateDamageBasedOnDistance, CallFunc_GetTeamIDFromPawn_ReturnValue) == 0x000051, "Member 'BP_Explosion_C_CalculateDamageBasedOnDistance::CallFunc_GetTeamIDFromPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Explosion_C_CalculateDamageBasedOnDistance, CallFunc_GetTeam_ReturnValue) == 0x000058, "Member 'BP_Explosion_C_CalculateDamageBasedOnDistance::CallFunc_GetTeam_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Explosion_C_CalculateDamageBasedOnDistance, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000090, "Member 'BP_Explosion_C_CalculateDamageBasedOnDistance::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Explosion_C_CalculateDamageBasedOnDistance, K2Node_Select_Default) == 0x0000A8, "Member 'BP_Explosion_C_CalculateDamageBasedOnDistance::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_Explosion_C_CalculateDamageBasedOnDistance, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x0000B0, "Member 'BP_Explosion_C_CalculateDamageBasedOnDistance::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Explosion_C_CalculateDamageBasedOnDistance, CallFunc_SafeDivide_ReturnValue) == 0x0000B8, "Member 'BP_Explosion_C_CalculateDamageBasedOnDistance::CallFunc_SafeDivide_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Explosion_C_CalculateDamageBasedOnDistance, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x0000C0, "Member 'BP_Explosion_C_CalculateDamageBasedOnDistance::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Explosion_C_CalculateDamageBasedOnDistance, Temp_struct_Variable) == 0x0000C8, "Member 'BP_Explosion_C_CalculateDamageBasedOnDistance::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(BP_Explosion_C_CalculateDamageBasedOnDistance, CallFunc_Greater_DoubleDouble_ReturnValue_1) == 0x000100, "Member 'BP_Explosion_C_CalculateDamageBasedOnDistance::CallFunc_Greater_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Explosion_C_CalculateDamageBasedOnDistance, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000101, "Member 'BP_Explosion_C_CalculateDamageBasedOnDistance::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Explosion_C_CalculateDamageBasedOnDistance, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x000108, "Member 'BP_Explosion_C_CalculateDamageBasedOnDistance::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Explosion_C_CalculateDamageBasedOnDistance, CallFunc_Vector_Distance_ReturnValue) == 0x000120, "Member 'BP_Explosion_C_CalculateDamageBasedOnDistance::CallFunc_Vector_Distance_ReturnValue' has a wrong offset!");

// Function BP_Explosion.BP_Explosion_C.CanAffectActorBasedOnTeam
// 0x0038 (0x0038 - 0x0000)
struct BP_Explosion_C_CanAffectActorBasedOnTeam final
{
public:
	class AActor*                                 HitActor;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CanHit;                                            // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Temp_byte_Variable;                                // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B[0x5];                                        // 0x000B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_GetInstigator_ReturnValue;                // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class ITeamableInterface>    K2Node_DynamicCast_AsTeamable_Interface;           // 0x0020(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetTeamID_ReturnValue;                    // 0x0032(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Explosion_C_CanAffectActorBasedOnTeam) == 0x000008, "Wrong alignment on BP_Explosion_C_CanAffectActorBasedOnTeam");
static_assert(sizeof(BP_Explosion_C_CanAffectActorBasedOnTeam) == 0x000038, "Wrong size on BP_Explosion_C_CanAffectActorBasedOnTeam");
static_assert(offsetof(BP_Explosion_C_CanAffectActorBasedOnTeam, HitActor) == 0x000000, "Member 'BP_Explosion_C_CanAffectActorBasedOnTeam::HitActor' has a wrong offset!");
static_assert(offsetof(BP_Explosion_C_CanAffectActorBasedOnTeam, CanHit) == 0x000008, "Member 'BP_Explosion_C_CanAffectActorBasedOnTeam::CanHit' has a wrong offset!");
static_assert(offsetof(BP_Explosion_C_CanAffectActorBasedOnTeam, Temp_byte_Variable) == 0x000009, "Member 'BP_Explosion_C_CanAffectActorBasedOnTeam::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_Explosion_C_CanAffectActorBasedOnTeam, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x00000A, "Member 'BP_Explosion_C_CanAffectActorBasedOnTeam::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Explosion_C_CanAffectActorBasedOnTeam, CallFunc_GetInstigator_ReturnValue) == 0x000010, "Member 'BP_Explosion_C_CanAffectActorBasedOnTeam::CallFunc_GetInstigator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Explosion_C_CanAffectActorBasedOnTeam, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000018, "Member 'BP_Explosion_C_CanAffectActorBasedOnTeam::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Explosion_C_CanAffectActorBasedOnTeam, K2Node_DynamicCast_AsTeamable_Interface) == 0x000020, "Member 'BP_Explosion_C_CanAffectActorBasedOnTeam::K2Node_DynamicCast_AsTeamable_Interface' has a wrong offset!");
static_assert(offsetof(BP_Explosion_C_CanAffectActorBasedOnTeam, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'BP_Explosion_C_CanAffectActorBasedOnTeam::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_Explosion_C_CanAffectActorBasedOnTeam, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000031, "Member 'BP_Explosion_C_CanAffectActorBasedOnTeam::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Explosion_C_CanAffectActorBasedOnTeam, CallFunc_GetTeamID_ReturnValue) == 0x000032, "Member 'BP_Explosion_C_CanAffectActorBasedOnTeam::CallFunc_GetTeamID_ReturnValue' has a wrong offset!");

// Function BP_Explosion.BP_Explosion_C.CheckLineOfSight
// 0x0288 (0x0288 - 0x0000)
struct BP_Explosion_C_CheckLineOfSight final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Conv_DoubleToVector_ReturnValue;          // 0x0008(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<EObjectTypeQuery>                      K2Node_MakeArray_Array;                            // 0x0028(0x0010)(ConstParm, ReferenceParm)
	struct FVector                                CallFunc_Conv_DoubleToVector_ReturnValue_1;        // 0x0038(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorUpVector_ReturnValue;             // 0x0050(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0068(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue;        // 0x0080(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0098(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_Array_Get_Item;                           // 0x00B0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_BC[0x4];                                       // 0x00BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class II_CustomCenterLocation_C> K2Node_DynamicCast_AsI_Custom_Center_Location;     // 0x00C0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D2[0x6];                                       // 0x00D2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetCenterLocation_Location;               // 0x00D8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_VectorVector_ReturnValue;        // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F1[0x3];                                       // 0x00F1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x00F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         K2Node_MakeArray_Array_1;                          // 0x00F8(0x0010)(ConstParm, ReferenceParm)
	struct FVector                                CallFunc_GetActorUpVector_ReturnValue_1;           // 0x0108(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x0120(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue_1;      // 0x0138(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_1;           // 0x0150(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_SelectVector_ReturnValue;                 // 0x0168(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_LineTraceSingleForObjects_OutHit;         // 0x0180(0x00F8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceSingleForObjects_ReturnValue;    // 0x0278(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HitShield_ReturnValue;                    // 0x0279(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_27A[0x6];                                      // 0x027A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_HitShield_HitActor;                       // 0x0280(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Explosion_C_CheckLineOfSight) == 0x000008, "Wrong alignment on BP_Explosion_C_CheckLineOfSight");
static_assert(sizeof(BP_Explosion_C_CheckLineOfSight) == 0x000288, "Wrong size on BP_Explosion_C_CheckLineOfSight");
static_assert(offsetof(BP_Explosion_C_CheckLineOfSight, Temp_int_Array_Index_Variable) == 0x000000, "Member 'BP_Explosion_C_CheckLineOfSight::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_Explosion_C_CheckLineOfSight, CallFunc_Conv_DoubleToVector_ReturnValue) == 0x000008, "Member 'BP_Explosion_C_CheckLineOfSight::CallFunc_Conv_DoubleToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Explosion_C_CheckLineOfSight, Temp_int_Loop_Counter_Variable) == 0x000020, "Member 'BP_Explosion_C_CheckLineOfSight::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_Explosion_C_CheckLineOfSight, CallFunc_Add_IntInt_ReturnValue) == 0x000024, "Member 'BP_Explosion_C_CheckLineOfSight::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Explosion_C_CheckLineOfSight, K2Node_MakeArray_Array) == 0x000028, "Member 'BP_Explosion_C_CheckLineOfSight::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_Explosion_C_CheckLineOfSight, CallFunc_Conv_DoubleToVector_ReturnValue_1) == 0x000038, "Member 'BP_Explosion_C_CheckLineOfSight::CallFunc_Conv_DoubleToVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Explosion_C_CheckLineOfSight, CallFunc_GetActorUpVector_ReturnValue) == 0x000050, "Member 'BP_Explosion_C_CheckLineOfSight::CallFunc_GetActorUpVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Explosion_C_CheckLineOfSight, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000068, "Member 'BP_Explosion_C_CheckLineOfSight::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Explosion_C_CheckLineOfSight, CallFunc_Multiply_VectorVector_ReturnValue) == 0x000080, "Member 'BP_Explosion_C_CheckLineOfSight::CallFunc_Multiply_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Explosion_C_CheckLineOfSight, CallFunc_Add_VectorVector_ReturnValue) == 0x000098, "Member 'BP_Explosion_C_CheckLineOfSight::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Explosion_C_CheckLineOfSight, CallFunc_Array_Get_Item) == 0x0000B0, "Member 'BP_Explosion_C_CheckLineOfSight::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_Explosion_C_CheckLineOfSight, CallFunc_Array_Length_ReturnValue) == 0x0000B8, "Member 'BP_Explosion_C_CheckLineOfSight::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Explosion_C_CheckLineOfSight, K2Node_DynamicCast_AsI_Custom_Center_Location) == 0x0000C0, "Member 'BP_Explosion_C_CheckLineOfSight::K2Node_DynamicCast_AsI_Custom_Center_Location' has a wrong offset!");
static_assert(offsetof(BP_Explosion_C_CheckLineOfSight, K2Node_DynamicCast_bSuccess) == 0x0000D0, "Member 'BP_Explosion_C_CheckLineOfSight::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_Explosion_C_CheckLineOfSight, CallFunc_Less_IntInt_ReturnValue) == 0x0000D1, "Member 'BP_Explosion_C_CheckLineOfSight::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Explosion_C_CheckLineOfSight, CallFunc_GetCenterLocation_Location) == 0x0000D8, "Member 'BP_Explosion_C_CheckLineOfSight::CallFunc_GetCenterLocation_Location' has a wrong offset!");
static_assert(offsetof(BP_Explosion_C_CheckLineOfSight, CallFunc_NotEqual_VectorVector_ReturnValue) == 0x0000F0, "Member 'BP_Explosion_C_CheckLineOfSight::CallFunc_NotEqual_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Explosion_C_CheckLineOfSight, CallFunc_Array_AddUnique_ReturnValue) == 0x0000F4, "Member 'BP_Explosion_C_CheckLineOfSight::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Explosion_C_CheckLineOfSight, K2Node_MakeArray_Array_1) == 0x0000F8, "Member 'BP_Explosion_C_CheckLineOfSight::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(BP_Explosion_C_CheckLineOfSight, CallFunc_GetActorUpVector_ReturnValue_1) == 0x000108, "Member 'BP_Explosion_C_CheckLineOfSight::CallFunc_GetActorUpVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Explosion_C_CheckLineOfSight, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x000120, "Member 'BP_Explosion_C_CheckLineOfSight::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Explosion_C_CheckLineOfSight, CallFunc_Multiply_VectorVector_ReturnValue_1) == 0x000138, "Member 'BP_Explosion_C_CheckLineOfSight::CallFunc_Multiply_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Explosion_C_CheckLineOfSight, CallFunc_Add_VectorVector_ReturnValue_1) == 0x000150, "Member 'BP_Explosion_C_CheckLineOfSight::CallFunc_Add_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Explosion_C_CheckLineOfSight, CallFunc_SelectVector_ReturnValue) == 0x000168, "Member 'BP_Explosion_C_CheckLineOfSight::CallFunc_SelectVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Explosion_C_CheckLineOfSight, CallFunc_LineTraceSingleForObjects_OutHit) == 0x000180, "Member 'BP_Explosion_C_CheckLineOfSight::CallFunc_LineTraceSingleForObjects_OutHit' has a wrong offset!");
static_assert(offsetof(BP_Explosion_C_CheckLineOfSight, CallFunc_LineTraceSingleForObjects_ReturnValue) == 0x000278, "Member 'BP_Explosion_C_CheckLineOfSight::CallFunc_LineTraceSingleForObjects_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Explosion_C_CheckLineOfSight, CallFunc_HitShield_ReturnValue) == 0x000279, "Member 'BP_Explosion_C_CheckLineOfSight::CallFunc_HitShield_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Explosion_C_CheckLineOfSight, CallFunc_HitShield_HitActor) == 0x000280, "Member 'BP_Explosion_C_CheckLineOfSight::CallFunc_HitShield_HitActor' has a wrong offset!");

// Function BP_Explosion.BP_Explosion_C.DoExplode
// 0x0010 (0x0010 - 0x0000)
struct BP_Explosion_C_DoExplode final
{
public:
	TArray<class AActor*>                         ActorsInLineOfSight_0;                             // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(BP_Explosion_C_DoExplode) == 0x000008, "Wrong alignment on BP_Explosion_C_DoExplode");
static_assert(sizeof(BP_Explosion_C_DoExplode) == 0x000010, "Wrong size on BP_Explosion_C_DoExplode");
static_assert(offsetof(BP_Explosion_C_DoExplode, ActorsInLineOfSight_0) == 0x000000, "Member 'BP_Explosion_C_DoExplode::ActorsInLineOfSight_0' has a wrong offset!");

// Function BP_Explosion.BP_Explosion_C.ExecuteUbergraph_BP_Explosion
// 0x0098 (0x0098 - 0x0000)
struct BP_Explosion_C_ExecuteUbergraph_BP_Explosion final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0008(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         Temp_object_Variable;                              // 0x0020(0x0010)(ConstParm, ReferenceParm)
	TArray<struct FHitResult>                     CallFunc_SphereTraceMulti_OutHits;                 // 0x0030(0x0010)(ReferenceParm, ContainsInstancedReference)
	bool                                          CallFunc_SphereTraceMulti_ReturnValue;             // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x0048(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_2;        // 0x0060(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_79[0x7];                                       // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UNiagaraComponent*                      CallFunc_SpawnSystemAtLocation_ReturnValue;        // 0x0080(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        CallFunc_SpawnSoundAtLocation_ReturnValue;         // 0x0088(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SphereTraceMulti_Radius_ImplicitCast;     // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Explosion_C_ExecuteUbergraph_BP_Explosion) == 0x000008, "Wrong alignment on BP_Explosion_C_ExecuteUbergraph_BP_Explosion");
static_assert(sizeof(BP_Explosion_C_ExecuteUbergraph_BP_Explosion) == 0x000098, "Wrong size on BP_Explosion_C_ExecuteUbergraph_BP_Explosion");
static_assert(offsetof(BP_Explosion_C_ExecuteUbergraph_BP_Explosion, EntryPoint) == 0x000000, "Member 'BP_Explosion_C_ExecuteUbergraph_BP_Explosion::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_Explosion_C_ExecuteUbergraph_BP_Explosion, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000008, "Member 'BP_Explosion_C_ExecuteUbergraph_BP_Explosion::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Explosion_C_ExecuteUbergraph_BP_Explosion, Temp_object_Variable) == 0x000020, "Member 'BP_Explosion_C_ExecuteUbergraph_BP_Explosion::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BP_Explosion_C_ExecuteUbergraph_BP_Explosion, CallFunc_SphereTraceMulti_OutHits) == 0x000030, "Member 'BP_Explosion_C_ExecuteUbergraph_BP_Explosion::CallFunc_SphereTraceMulti_OutHits' has a wrong offset!");
static_assert(offsetof(BP_Explosion_C_ExecuteUbergraph_BP_Explosion, CallFunc_SphereTraceMulti_ReturnValue) == 0x000040, "Member 'BP_Explosion_C_ExecuteUbergraph_BP_Explosion::CallFunc_SphereTraceMulti_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Explosion_C_ExecuteUbergraph_BP_Explosion, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x000048, "Member 'BP_Explosion_C_ExecuteUbergraph_BP_Explosion::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Explosion_C_ExecuteUbergraph_BP_Explosion, CallFunc_K2_GetActorLocation_ReturnValue_2) == 0x000060, "Member 'BP_Explosion_C_ExecuteUbergraph_BP_Explosion::CallFunc_K2_GetActorLocation_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Explosion_C_ExecuteUbergraph_BP_Explosion, CallFunc_HasAuthority_ReturnValue) == 0x000078, "Member 'BP_Explosion_C_ExecuteUbergraph_BP_Explosion::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Explosion_C_ExecuteUbergraph_BP_Explosion, CallFunc_SpawnSystemAtLocation_ReturnValue) == 0x000080, "Member 'BP_Explosion_C_ExecuteUbergraph_BP_Explosion::CallFunc_SpawnSystemAtLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Explosion_C_ExecuteUbergraph_BP_Explosion, CallFunc_SpawnSoundAtLocation_ReturnValue) == 0x000088, "Member 'BP_Explosion_C_ExecuteUbergraph_BP_Explosion::CallFunc_SpawnSoundAtLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Explosion_C_ExecuteUbergraph_BP_Explosion, CallFunc_SphereTraceMulti_Radius_ImplicitCast) == 0x000090, "Member 'BP_Explosion_C_ExecuteUbergraph_BP_Explosion::CallFunc_SphereTraceMulti_Radius_ImplicitCast' has a wrong offset!");

// Function BP_Explosion.BP_Explosion_C.FilterHitActors
// 0x0208 (0x0208 - 0x0000)
struct BP_Explosion_C_FilterHitActors final
{
public:
	TArray<struct FHitResult>                     Hits;                                              // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_Array_Get_Item;                           // 0x0018(0x00F8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x0111(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_112[0x2];                                      // 0x0112(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x0114(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x0118(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11C[0x4];                                      // 0x011C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x0120(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x0138(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x0150(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x0168(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0180(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0188(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0190(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0198(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_BoneName;                  // 0x01A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x01A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x01AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x01B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B4[0x4];                                      // 0x01B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x01B8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x01D0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x01E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CanAffectActorBasedOnTeam_CanHit;         // 0x01EC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x01ED(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1EE[0x2];                                      // 0x01EE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x01F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x01F4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1F5[0x3];                                      // 0x01F5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UAbilitySystemComponent*                CallFunc_GetComponentByClass_ReturnValue;          // 0x01F8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0200(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_DoesImplementInterface_ReturnValue;       // 0x0201(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0202(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_203[0x1];                                      // 0x0203(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x0204(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Explosion_C_FilterHitActors) == 0x000008, "Wrong alignment on BP_Explosion_C_FilterHitActors");
static_assert(sizeof(BP_Explosion_C_FilterHitActors) == 0x000208, "Wrong size on BP_Explosion_C_FilterHitActors");
static_assert(offsetof(BP_Explosion_C_FilterHitActors, Hits) == 0x000000, "Member 'BP_Explosion_C_FilterHitActors::Hits' has a wrong offset!");
static_assert(offsetof(BP_Explosion_C_FilterHitActors, CallFunc_Array_Length_ReturnValue) == 0x000010, "Member 'BP_Explosion_C_FilterHitActors::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Explosion_C_FilterHitActors, Temp_int_Array_Index_Variable) == 0x000014, "Member 'BP_Explosion_C_FilterHitActors::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_Explosion_C_FilterHitActors, CallFunc_Array_Get_Item) == 0x000018, "Member 'BP_Explosion_C_FilterHitActors::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_Explosion_C_FilterHitActors, CallFunc_BreakHitResult_bBlockingHit) == 0x000110, "Member 'BP_Explosion_C_FilterHitActors::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(BP_Explosion_C_FilterHitActors, CallFunc_BreakHitResult_bInitialOverlap) == 0x000111, "Member 'BP_Explosion_C_FilterHitActors::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(BP_Explosion_C_FilterHitActors, CallFunc_BreakHitResult_Time) == 0x000114, "Member 'BP_Explosion_C_FilterHitActors::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(BP_Explosion_C_FilterHitActors, CallFunc_BreakHitResult_Distance) == 0x000118, "Member 'BP_Explosion_C_FilterHitActors::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(BP_Explosion_C_FilterHitActors, CallFunc_BreakHitResult_Location) == 0x000120, "Member 'BP_Explosion_C_FilterHitActors::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(BP_Explosion_C_FilterHitActors, CallFunc_BreakHitResult_ImpactPoint) == 0x000138, "Member 'BP_Explosion_C_FilterHitActors::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(BP_Explosion_C_FilterHitActors, CallFunc_BreakHitResult_Normal) == 0x000150, "Member 'BP_Explosion_C_FilterHitActors::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(BP_Explosion_C_FilterHitActors, CallFunc_BreakHitResult_ImpactNormal) == 0x000168, "Member 'BP_Explosion_C_FilterHitActors::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(BP_Explosion_C_FilterHitActors, CallFunc_BreakHitResult_PhysMat) == 0x000180, "Member 'BP_Explosion_C_FilterHitActors::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(BP_Explosion_C_FilterHitActors, CallFunc_BreakHitResult_HitActor) == 0x000188, "Member 'BP_Explosion_C_FilterHitActors::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(BP_Explosion_C_FilterHitActors, CallFunc_BreakHitResult_HitComponent) == 0x000190, "Member 'BP_Explosion_C_FilterHitActors::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(BP_Explosion_C_FilterHitActors, CallFunc_BreakHitResult_HitBoneName) == 0x000198, "Member 'BP_Explosion_C_FilterHitActors::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(BP_Explosion_C_FilterHitActors, CallFunc_BreakHitResult_BoneName) == 0x0001A0, "Member 'BP_Explosion_C_FilterHitActors::CallFunc_BreakHitResult_BoneName' has a wrong offset!");
static_assert(offsetof(BP_Explosion_C_FilterHitActors, CallFunc_BreakHitResult_HitItem) == 0x0001A8, "Member 'BP_Explosion_C_FilterHitActors::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(BP_Explosion_C_FilterHitActors, CallFunc_BreakHitResult_ElementIndex) == 0x0001AC, "Member 'BP_Explosion_C_FilterHitActors::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(BP_Explosion_C_FilterHitActors, CallFunc_BreakHitResult_FaceIndex) == 0x0001B0, "Member 'BP_Explosion_C_FilterHitActors::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(BP_Explosion_C_FilterHitActors, CallFunc_BreakHitResult_TraceStart) == 0x0001B8, "Member 'BP_Explosion_C_FilterHitActors::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(BP_Explosion_C_FilterHitActors, CallFunc_BreakHitResult_TraceEnd) == 0x0001D0, "Member 'BP_Explosion_C_FilterHitActors::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(BP_Explosion_C_FilterHitActors, Temp_int_Loop_Counter_Variable) == 0x0001E8, "Member 'BP_Explosion_C_FilterHitActors::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_Explosion_C_FilterHitActors, CallFunc_CanAffectActorBasedOnTeam_CanHit) == 0x0001EC, "Member 'BP_Explosion_C_FilterHitActors::CallFunc_CanAffectActorBasedOnTeam_CanHit' has a wrong offset!");
static_assert(offsetof(BP_Explosion_C_FilterHitActors, CallFunc_Less_IntInt_ReturnValue) == 0x0001ED, "Member 'BP_Explosion_C_FilterHitActors::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Explosion_C_FilterHitActors, CallFunc_Add_IntInt_ReturnValue) == 0x0001F0, "Member 'BP_Explosion_C_FilterHitActors::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Explosion_C_FilterHitActors, CallFunc_IsValid_ReturnValue) == 0x0001F4, "Member 'BP_Explosion_C_FilterHitActors::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Explosion_C_FilterHitActors, CallFunc_GetComponentByClass_ReturnValue) == 0x0001F8, "Member 'BP_Explosion_C_FilterHitActors::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Explosion_C_FilterHitActors, CallFunc_IsValid_ReturnValue_1) == 0x000200, "Member 'BP_Explosion_C_FilterHitActors::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Explosion_C_FilterHitActors, CallFunc_DoesImplementInterface_ReturnValue) == 0x000201, "Member 'BP_Explosion_C_FilterHitActors::CallFunc_DoesImplementInterface_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Explosion_C_FilterHitActors, CallFunc_BooleanOR_ReturnValue) == 0x000202, "Member 'BP_Explosion_C_FilterHitActors::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Explosion_C_FilterHitActors, CallFunc_Array_AddUnique_ReturnValue) == 0x000204, "Member 'BP_Explosion_C_FilterHitActors::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");

// Function BP_Explosion.BP_Explosion_C.GetKnockbackVelocity
// 0x0138 (0x0138 - 0x0000)
struct BP_Explosion_C_GetKnockbackVelocity final
{
public:
	class AActor*                                 TargetActor;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Velocity;                                          // 0x0008(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        LDistanceFromExplosion;                            // 0x0020(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_DoubleToVector_ReturnValue;          // 0x0028(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetActorUpVector_ReturnValue;             // 0x0048(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue;        // 0x0060(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0078(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0090(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable;                                // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_ExplosionRange                              Temp_byte_Variable;                                // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B1[0x7];                                       // 0x00B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x00B8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_Select_Default;                             // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x00D8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_DoubleToVector_ReturnValue_1;        // 0x00F0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x0108(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue_1;      // 0x0120(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Explosion_C_GetKnockbackVelocity) == 0x000008, "Wrong alignment on BP_Explosion_C_GetKnockbackVelocity");
static_assert(sizeof(BP_Explosion_C_GetKnockbackVelocity) == 0x000138, "Wrong size on BP_Explosion_C_GetKnockbackVelocity");
static_assert(offsetof(BP_Explosion_C_GetKnockbackVelocity, TargetActor) == 0x000000, "Member 'BP_Explosion_C_GetKnockbackVelocity::TargetActor' has a wrong offset!");
static_assert(offsetof(BP_Explosion_C_GetKnockbackVelocity, Velocity) == 0x000008, "Member 'BP_Explosion_C_GetKnockbackVelocity::Velocity' has a wrong offset!");
static_assert(offsetof(BP_Explosion_C_GetKnockbackVelocity, LDistanceFromExplosion) == 0x000020, "Member 'BP_Explosion_C_GetKnockbackVelocity::LDistanceFromExplosion' has a wrong offset!");
static_assert(offsetof(BP_Explosion_C_GetKnockbackVelocity, CallFunc_Conv_DoubleToVector_ReturnValue) == 0x000028, "Member 'BP_Explosion_C_GetKnockbackVelocity::CallFunc_Conv_DoubleToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Explosion_C_GetKnockbackVelocity, CallFunc_IsValid_ReturnValue) == 0x000040, "Member 'BP_Explosion_C_GetKnockbackVelocity::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Explosion_C_GetKnockbackVelocity, CallFunc_GetActorUpVector_ReturnValue) == 0x000048, "Member 'BP_Explosion_C_GetKnockbackVelocity::CallFunc_GetActorUpVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Explosion_C_GetKnockbackVelocity, CallFunc_Multiply_VectorVector_ReturnValue) == 0x000060, "Member 'BP_Explosion_C_GetKnockbackVelocity::CallFunc_Multiply_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Explosion_C_GetKnockbackVelocity, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000078, "Member 'BP_Explosion_C_GetKnockbackVelocity::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Explosion_C_GetKnockbackVelocity, CallFunc_Add_VectorVector_ReturnValue) == 0x000090, "Member 'BP_Explosion_C_GetKnockbackVelocity::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Explosion_C_GetKnockbackVelocity, Temp_real_Variable) == 0x0000A8, "Member 'BP_Explosion_C_GetKnockbackVelocity::Temp_real_Variable' has a wrong offset!");
static_assert(offsetof(BP_Explosion_C_GetKnockbackVelocity, Temp_byte_Variable) == 0x0000B0, "Member 'BP_Explosion_C_GetKnockbackVelocity::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_Explosion_C_GetKnockbackVelocity, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x0000B8, "Member 'BP_Explosion_C_GetKnockbackVelocity::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Explosion_C_GetKnockbackVelocity, K2Node_Select_Default) == 0x0000D0, "Member 'BP_Explosion_C_GetKnockbackVelocity::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_Explosion_C_GetKnockbackVelocity, CallFunc_Subtract_VectorVector_ReturnValue) == 0x0000D8, "Member 'BP_Explosion_C_GetKnockbackVelocity::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Explosion_C_GetKnockbackVelocity, CallFunc_Conv_DoubleToVector_ReturnValue_1) == 0x0000F0, "Member 'BP_Explosion_C_GetKnockbackVelocity::CallFunc_Conv_DoubleToVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Explosion_C_GetKnockbackVelocity, CallFunc_Normal_ReturnValue) == 0x000108, "Member 'BP_Explosion_C_GetKnockbackVelocity::CallFunc_Normal_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Explosion_C_GetKnockbackVelocity, CallFunc_Multiply_VectorVector_ReturnValue_1) == 0x000120, "Member 'BP_Explosion_C_GetKnockbackVelocity::CallFunc_Multiply_VectorVector_ReturnValue_1' has a wrong offset!");

// Function BP_Explosion.BP_Explosion_C.HitShield
// 0x01E8 (0x01E8 - 0x0000)
struct BP_Explosion_C_HitShield final
{
public:
	struct FHitResult                             Hit;                                               // 0x0000(0x00F8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          ReturnValue;                                       // 0x00F8(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F9[0x7];                                       // 0x00F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 HitActor;                                          // 0x0100(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x0109(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_10A[0x2];                                      // 0x010A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x010C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x0110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_114[0x4];                                      // 0x0114(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x0118(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x0130(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x0148(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x0160(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0178(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0180(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0188(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0190(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_BoneName;                  // 0x0198(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x01A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x01A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x01A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1AC[0x4];                                      // 0x01AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x01B0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x01C8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECollisionChannel                             CallFunc_GetCollisionObjectType_ReturnValue;       // 0x01E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x01E1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Explosion_C_HitShield) == 0x000008, "Wrong alignment on BP_Explosion_C_HitShield");
static_assert(sizeof(BP_Explosion_C_HitShield) == 0x0001E8, "Wrong size on BP_Explosion_C_HitShield");
static_assert(offsetof(BP_Explosion_C_HitShield, Hit) == 0x000000, "Member 'BP_Explosion_C_HitShield::Hit' has a wrong offset!");
static_assert(offsetof(BP_Explosion_C_HitShield, ReturnValue) == 0x0000F8, "Member 'BP_Explosion_C_HitShield::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Explosion_C_HitShield, HitActor) == 0x000100, "Member 'BP_Explosion_C_HitShield::HitActor' has a wrong offset!");
static_assert(offsetof(BP_Explosion_C_HitShield, CallFunc_BreakHitResult_bBlockingHit) == 0x000108, "Member 'BP_Explosion_C_HitShield::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(BP_Explosion_C_HitShield, CallFunc_BreakHitResult_bInitialOverlap) == 0x000109, "Member 'BP_Explosion_C_HitShield::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(BP_Explosion_C_HitShield, CallFunc_BreakHitResult_Time) == 0x00010C, "Member 'BP_Explosion_C_HitShield::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(BP_Explosion_C_HitShield, CallFunc_BreakHitResult_Distance) == 0x000110, "Member 'BP_Explosion_C_HitShield::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(BP_Explosion_C_HitShield, CallFunc_BreakHitResult_Location) == 0x000118, "Member 'BP_Explosion_C_HitShield::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(BP_Explosion_C_HitShield, CallFunc_BreakHitResult_ImpactPoint) == 0x000130, "Member 'BP_Explosion_C_HitShield::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(BP_Explosion_C_HitShield, CallFunc_BreakHitResult_Normal) == 0x000148, "Member 'BP_Explosion_C_HitShield::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(BP_Explosion_C_HitShield, CallFunc_BreakHitResult_ImpactNormal) == 0x000160, "Member 'BP_Explosion_C_HitShield::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(BP_Explosion_C_HitShield, CallFunc_BreakHitResult_PhysMat) == 0x000178, "Member 'BP_Explosion_C_HitShield::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(BP_Explosion_C_HitShield, CallFunc_BreakHitResult_HitActor) == 0x000180, "Member 'BP_Explosion_C_HitShield::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(BP_Explosion_C_HitShield, CallFunc_BreakHitResult_HitComponent) == 0x000188, "Member 'BP_Explosion_C_HitShield::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(BP_Explosion_C_HitShield, CallFunc_BreakHitResult_HitBoneName) == 0x000190, "Member 'BP_Explosion_C_HitShield::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(BP_Explosion_C_HitShield, CallFunc_BreakHitResult_BoneName) == 0x000198, "Member 'BP_Explosion_C_HitShield::CallFunc_BreakHitResult_BoneName' has a wrong offset!");
static_assert(offsetof(BP_Explosion_C_HitShield, CallFunc_BreakHitResult_HitItem) == 0x0001A0, "Member 'BP_Explosion_C_HitShield::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(BP_Explosion_C_HitShield, CallFunc_BreakHitResult_ElementIndex) == 0x0001A4, "Member 'BP_Explosion_C_HitShield::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(BP_Explosion_C_HitShield, CallFunc_BreakHitResult_FaceIndex) == 0x0001A8, "Member 'BP_Explosion_C_HitShield::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(BP_Explosion_C_HitShield, CallFunc_BreakHitResult_TraceStart) == 0x0001B0, "Member 'BP_Explosion_C_HitShield::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(BP_Explosion_C_HitShield, CallFunc_BreakHitResult_TraceEnd) == 0x0001C8, "Member 'BP_Explosion_C_HitShield::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(BP_Explosion_C_HitShield, CallFunc_GetCollisionObjectType_ReturnValue) == 0x0001E0, "Member 'BP_Explosion_C_HitShield::CallFunc_GetCollisionObjectType_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Explosion_C_HitShield, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x0001E1, "Member 'BP_Explosion_C_HitShield::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function BP_Explosion.BP_Explosion_C.Knockback
// 0x0068 (0x0068 - 0x0000)
struct BP_Explosion_C_Knockback final
{
public:
	TArray<class AActor*>                         Actors;                                            // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_Array_Get_Item;                           // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class II_Knockbackable_C>    K2Node_DynamicCast_AsI_Knockbackable;              // 0x0028(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetKnockbackVelocity_Velocity;            // 0x0040(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Knockback_Void;                           // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Vector_IsNearlyZero_ReturnValue;          // 0x005A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5B[0x1];                                       // 0x005B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Explosion_C_Knockback) == 0x000008, "Wrong alignment on BP_Explosion_C_Knockback");
static_assert(sizeof(BP_Explosion_C_Knockback) == 0x000068, "Wrong size on BP_Explosion_C_Knockback");
static_assert(offsetof(BP_Explosion_C_Knockback, Actors) == 0x000000, "Member 'BP_Explosion_C_Knockback::Actors' has a wrong offset!");
static_assert(offsetof(BP_Explosion_C_Knockback, CallFunc_Array_Length_ReturnValue) == 0x000010, "Member 'BP_Explosion_C_Knockback::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Explosion_C_Knockback, Temp_int_Array_Index_Variable) == 0x000014, "Member 'BP_Explosion_C_Knockback::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_Explosion_C_Knockback, Temp_int_Loop_Counter_Variable) == 0x000018, "Member 'BP_Explosion_C_Knockback::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_Explosion_C_Knockback, CallFunc_Array_Get_Item) == 0x000020, "Member 'BP_Explosion_C_Knockback::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_Explosion_C_Knockback, K2Node_DynamicCast_AsI_Knockbackable) == 0x000028, "Member 'BP_Explosion_C_Knockback::K2Node_DynamicCast_AsI_Knockbackable' has a wrong offset!");
static_assert(offsetof(BP_Explosion_C_Knockback, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'BP_Explosion_C_Knockback::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_Explosion_C_Knockback, CallFunc_GetKnockbackVelocity_Velocity) == 0x000040, "Member 'BP_Explosion_C_Knockback::CallFunc_GetKnockbackVelocity_Velocity' has a wrong offset!");
static_assert(offsetof(BP_Explosion_C_Knockback, CallFunc_Less_IntInt_ReturnValue) == 0x000058, "Member 'BP_Explosion_C_Knockback::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Explosion_C_Knockback, CallFunc_Knockback_Void) == 0x000059, "Member 'BP_Explosion_C_Knockback::CallFunc_Knockback_Void' has a wrong offset!");
static_assert(offsetof(BP_Explosion_C_Knockback, CallFunc_Vector_IsNearlyZero_ReturnValue) == 0x00005A, "Member 'BP_Explosion_C_Knockback::CallFunc_Vector_IsNearlyZero_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Explosion_C_Knockback, CallFunc_Add_IntInt_ReturnValue) == 0x00005C, "Member 'BP_Explosion_C_Knockback::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Explosion_C_Knockback, CallFunc_Not_PreBool_ReturnValue) == 0x000060, "Member 'BP_Explosion_C_Knockback::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function BP_Explosion.BP_Explosion_C.TracedShield
// 0x0128 (0x0128 - 0x0000)
struct BP_Explosion_C_TracedShield final
{
public:
	class AActor*                                 Actor;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             Hit;                                               // 0x0008(0x00F8)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	TScriptInterface<class II_ShieldBlock_C>      K2Node_DynamicCast_AsI_Shield_Block;               // 0x0100(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_111[0x7];                                      // 0x0111(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         K2Node_MakeArray_Array;                            // 0x0118(0x0010)(ReferenceParm)
};
static_assert(alignof(BP_Explosion_C_TracedShield) == 0x000008, "Wrong alignment on BP_Explosion_C_TracedShield");
static_assert(sizeof(BP_Explosion_C_TracedShield) == 0x000128, "Wrong size on BP_Explosion_C_TracedShield");
static_assert(offsetof(BP_Explosion_C_TracedShield, Actor) == 0x000000, "Member 'BP_Explosion_C_TracedShield::Actor' has a wrong offset!");
static_assert(offsetof(BP_Explosion_C_TracedShield, Hit) == 0x000008, "Member 'BP_Explosion_C_TracedShield::Hit' has a wrong offset!");
static_assert(offsetof(BP_Explosion_C_TracedShield, K2Node_DynamicCast_AsI_Shield_Block) == 0x000100, "Member 'BP_Explosion_C_TracedShield::K2Node_DynamicCast_AsI_Shield_Block' has a wrong offset!");
static_assert(offsetof(BP_Explosion_C_TracedShield, K2Node_DynamicCast_bSuccess) == 0x000110, "Member 'BP_Explosion_C_TracedShield::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_Explosion_C_TracedShield, K2Node_MakeArray_Array) == 0x000118, "Member 'BP_Explosion_C_TracedShield::K2Node_MakeArray_Array' has a wrong offset!");

}

