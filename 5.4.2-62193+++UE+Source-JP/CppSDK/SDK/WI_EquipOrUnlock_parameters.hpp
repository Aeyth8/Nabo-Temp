#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WI_EquipOrUnlock

#include "Basic.hpp"

#include "JP_structs.hpp"
#include "UMG_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function WI_EquipOrUnlock.WI_EquipOrUnlock_C.BndEvt__WI_EquipOrUnlock_EquipButton_K2Node_ComponentBoundEvent_2_CommonButtonBaseClicked__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct WI_EquipOrUnlock_C_BndEvt__WI_EquipOrUnlock_EquipButton_K2Node_ComponentBoundEvent_2_CommonButtonBaseClicked__DelegateSignature final
{
public:
	class UCommonButtonBase*                      Button;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WI_EquipOrUnlock_C_BndEvt__WI_EquipOrUnlock_EquipButton_K2Node_ComponentBoundEvent_2_CommonButtonBaseClicked__DelegateSignature) == 0x000008, "Wrong alignment on WI_EquipOrUnlock_C_BndEvt__WI_EquipOrUnlock_EquipButton_K2Node_ComponentBoundEvent_2_CommonButtonBaseClicked__DelegateSignature");
static_assert(sizeof(WI_EquipOrUnlock_C_BndEvt__WI_EquipOrUnlock_EquipButton_K2Node_ComponentBoundEvent_2_CommonButtonBaseClicked__DelegateSignature) == 0x000008, "Wrong size on WI_EquipOrUnlock_C_BndEvt__WI_EquipOrUnlock_EquipButton_K2Node_ComponentBoundEvent_2_CommonButtonBaseClicked__DelegateSignature");
static_assert(offsetof(WI_EquipOrUnlock_C_BndEvt__WI_EquipOrUnlock_EquipButton_K2Node_ComponentBoundEvent_2_CommonButtonBaseClicked__DelegateSignature, Button) == 0x000000, "Member 'WI_EquipOrUnlock_C_BndEvt__WI_EquipOrUnlock_EquipButton_K2Node_ComponentBoundEvent_2_CommonButtonBaseClicked__DelegateSignature::Button' has a wrong offset!");

// Function WI_EquipOrUnlock.WI_EquipOrUnlock_C.BndEvt__WI_EquipOrUnlock_NextSelector_K2Node_ComponentBoundEvent_1_CommonButtonBaseClicked__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct WI_EquipOrUnlock_C_BndEvt__WI_EquipOrUnlock_NextSelector_K2Node_ComponentBoundEvent_1_CommonButtonBaseClicked__DelegateSignature final
{
public:
	class UCommonButtonBase*                      Button;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WI_EquipOrUnlock_C_BndEvt__WI_EquipOrUnlock_NextSelector_K2Node_ComponentBoundEvent_1_CommonButtonBaseClicked__DelegateSignature) == 0x000008, "Wrong alignment on WI_EquipOrUnlock_C_BndEvt__WI_EquipOrUnlock_NextSelector_K2Node_ComponentBoundEvent_1_CommonButtonBaseClicked__DelegateSignature");
static_assert(sizeof(WI_EquipOrUnlock_C_BndEvt__WI_EquipOrUnlock_NextSelector_K2Node_ComponentBoundEvent_1_CommonButtonBaseClicked__DelegateSignature) == 0x000008, "Wrong size on WI_EquipOrUnlock_C_BndEvt__WI_EquipOrUnlock_NextSelector_K2Node_ComponentBoundEvent_1_CommonButtonBaseClicked__DelegateSignature");
static_assert(offsetof(WI_EquipOrUnlock_C_BndEvt__WI_EquipOrUnlock_NextSelector_K2Node_ComponentBoundEvent_1_CommonButtonBaseClicked__DelegateSignature, Button) == 0x000000, "Member 'WI_EquipOrUnlock_C_BndEvt__WI_EquipOrUnlock_NextSelector_K2Node_ComponentBoundEvent_1_CommonButtonBaseClicked__DelegateSignature::Button' has a wrong offset!");

// Function WI_EquipOrUnlock.WI_EquipOrUnlock_C.BndEvt__WI_EquipOrUnlock_PrevSelector_K2Node_ComponentBoundEvent_0_CommonButtonBaseClicked__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct WI_EquipOrUnlock_C_BndEvt__WI_EquipOrUnlock_PrevSelector_K2Node_ComponentBoundEvent_0_CommonButtonBaseClicked__DelegateSignature final
{
public:
	class UCommonButtonBase*                      Button;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WI_EquipOrUnlock_C_BndEvt__WI_EquipOrUnlock_PrevSelector_K2Node_ComponentBoundEvent_0_CommonButtonBaseClicked__DelegateSignature) == 0x000008, "Wrong alignment on WI_EquipOrUnlock_C_BndEvt__WI_EquipOrUnlock_PrevSelector_K2Node_ComponentBoundEvent_0_CommonButtonBaseClicked__DelegateSignature");
static_assert(sizeof(WI_EquipOrUnlock_C_BndEvt__WI_EquipOrUnlock_PrevSelector_K2Node_ComponentBoundEvent_0_CommonButtonBaseClicked__DelegateSignature) == 0x000008, "Wrong size on WI_EquipOrUnlock_C_BndEvt__WI_EquipOrUnlock_PrevSelector_K2Node_ComponentBoundEvent_0_CommonButtonBaseClicked__DelegateSignature");
static_assert(offsetof(WI_EquipOrUnlock_C_BndEvt__WI_EquipOrUnlock_PrevSelector_K2Node_ComponentBoundEvent_0_CommonButtonBaseClicked__DelegateSignature, Button) == 0x000000, "Member 'WI_EquipOrUnlock_C_BndEvt__WI_EquipOrUnlock_PrevSelector_K2Node_ComponentBoundEvent_0_CommonButtonBaseClicked__DelegateSignature::Button' has a wrong offset!");

// Function WI_EquipOrUnlock.WI_EquipOrUnlock_C.BndEvt__WI_EquipOrUnlock_UnlockButton_K2Node_ComponentBoundEvent_3_CommonButtonBaseClicked__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct WI_EquipOrUnlock_C_BndEvt__WI_EquipOrUnlock_UnlockButton_K2Node_ComponentBoundEvent_3_CommonButtonBaseClicked__DelegateSignature final
{
public:
	class UCommonButtonBase*                      Button;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WI_EquipOrUnlock_C_BndEvt__WI_EquipOrUnlock_UnlockButton_K2Node_ComponentBoundEvent_3_CommonButtonBaseClicked__DelegateSignature) == 0x000008, "Wrong alignment on WI_EquipOrUnlock_C_BndEvt__WI_EquipOrUnlock_UnlockButton_K2Node_ComponentBoundEvent_3_CommonButtonBaseClicked__DelegateSignature");
static_assert(sizeof(WI_EquipOrUnlock_C_BndEvt__WI_EquipOrUnlock_UnlockButton_K2Node_ComponentBoundEvent_3_CommonButtonBaseClicked__DelegateSignature) == 0x000008, "Wrong size on WI_EquipOrUnlock_C_BndEvt__WI_EquipOrUnlock_UnlockButton_K2Node_ComponentBoundEvent_3_CommonButtonBaseClicked__DelegateSignature");
static_assert(offsetof(WI_EquipOrUnlock_C_BndEvt__WI_EquipOrUnlock_UnlockButton_K2Node_ComponentBoundEvent_3_CommonButtonBaseClicked__DelegateSignature, Button) == 0x000000, "Member 'WI_EquipOrUnlock_C_BndEvt__WI_EquipOrUnlock_UnlockButton_K2Node_ComponentBoundEvent_3_CommonButtonBaseClicked__DelegateSignature::Button' has a wrong offset!");

// Function WI_EquipOrUnlock.WI_EquipOrUnlock_C.ExecuteUbergraph_WI_EquipOrUnlock
// 0x0180 (0x0180 - 0x0000)
struct WI_EquipOrUnlock_C_ExecuteUbergraph_WI_EquipOrUnlock final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UCommonButtonBase*                      K2Node_ComponentBoundEvent_Button;                 // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UObject*                                Temp_object_Variable;                              // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPlayerRewardDataAsset*                 K2Node_DynamicCast_AsPlayer_Reward_Data_Asset;     // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_22[0x6];                                       // 0x0022(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FOnlineStoreItemData                   K2Node_CustomEvent_StoreItemData_1;                // 0x0028(0x0048)()
	class UObject*                                K2Node_CustomEvent_Loaded;                         // 0x0070(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FOnlineStoreItemData                   K2Node_CustomEvent_StoreItemData;                  // 0x0078(0x0048)(ConstParm)
	TSoftObjectPtr<class UPlayerRewardDataAsset>  CallFunc_TryGetPlayerRewardDataAsset_OutSoftPlayerRewardDataAsset; // 0x00C0(0x0028)(UObjectWrapper, HasGetValueTypeHash)
	bool                                          CallFunc_TryGetPlayerRewardDataAsset_ReturnValue;  // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x00E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_EA[0x2];                                       // 0x00EA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class UObject* Loaded)>        K2Node_CreateDelegate_OutputDelegate;              // 0x00EC(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_FC[0x4];                                       // 0x00FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UCommonButtonBase*                      K2Node_ComponentBoundEvent_Button_3;               // 0x0100(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UCommonButtonBase*                      K2Node_ComponentBoundEvent_Button_2;               // 0x0108(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TArray<class FString>                         K2Node_MakeArray_Array;                            // 0x0110(0x0010)(ConstParm, ReferenceParm)
	struct FOnlineStoreItemCost                   CallFunc_MakeOnlineStoreItemCostStruct_ReturnValue; // 0x0120(0x000C)(NoDestructor)
	uint8                                         Pad_12C[0x4];                                      // 0x012C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FOnlineStoreItemData                   CallFunc_MakeOnlineStoreItemDataVirtualCurrencyUnlock_ReturnValue; // 0x0130(0x0048)()
	class UCommonButtonBase*                      K2Node_ComponentBoundEvent_Button_1;               // 0x0178(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WI_EquipOrUnlock_C_ExecuteUbergraph_WI_EquipOrUnlock) == 0x000008, "Wrong alignment on WI_EquipOrUnlock_C_ExecuteUbergraph_WI_EquipOrUnlock");
static_assert(sizeof(WI_EquipOrUnlock_C_ExecuteUbergraph_WI_EquipOrUnlock) == 0x000180, "Wrong size on WI_EquipOrUnlock_C_ExecuteUbergraph_WI_EquipOrUnlock");
static_assert(offsetof(WI_EquipOrUnlock_C_ExecuteUbergraph_WI_EquipOrUnlock, EntryPoint) == 0x000000, "Member 'WI_EquipOrUnlock_C_ExecuteUbergraph_WI_EquipOrUnlock::EntryPoint' has a wrong offset!");
static_assert(offsetof(WI_EquipOrUnlock_C_ExecuteUbergraph_WI_EquipOrUnlock, K2Node_ComponentBoundEvent_Button) == 0x000008, "Member 'WI_EquipOrUnlock_C_ExecuteUbergraph_WI_EquipOrUnlock::K2Node_ComponentBoundEvent_Button' has a wrong offset!");
static_assert(offsetof(WI_EquipOrUnlock_C_ExecuteUbergraph_WI_EquipOrUnlock, Temp_object_Variable) == 0x000010, "Member 'WI_EquipOrUnlock_C_ExecuteUbergraph_WI_EquipOrUnlock::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(WI_EquipOrUnlock_C_ExecuteUbergraph_WI_EquipOrUnlock, K2Node_DynamicCast_AsPlayer_Reward_Data_Asset) == 0x000018, "Member 'WI_EquipOrUnlock_C_ExecuteUbergraph_WI_EquipOrUnlock::K2Node_DynamicCast_AsPlayer_Reward_Data_Asset' has a wrong offset!");
static_assert(offsetof(WI_EquipOrUnlock_C_ExecuteUbergraph_WI_EquipOrUnlock, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'WI_EquipOrUnlock_C_ExecuteUbergraph_WI_EquipOrUnlock::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WI_EquipOrUnlock_C_ExecuteUbergraph_WI_EquipOrUnlock, K2Node_Event_IsDesignTime) == 0x000021, "Member 'WI_EquipOrUnlock_C_ExecuteUbergraph_WI_EquipOrUnlock::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(WI_EquipOrUnlock_C_ExecuteUbergraph_WI_EquipOrUnlock, K2Node_CustomEvent_StoreItemData_1) == 0x000028, "Member 'WI_EquipOrUnlock_C_ExecuteUbergraph_WI_EquipOrUnlock::K2Node_CustomEvent_StoreItemData_1' has a wrong offset!");
static_assert(offsetof(WI_EquipOrUnlock_C_ExecuteUbergraph_WI_EquipOrUnlock, K2Node_CustomEvent_Loaded) == 0x000070, "Member 'WI_EquipOrUnlock_C_ExecuteUbergraph_WI_EquipOrUnlock::K2Node_CustomEvent_Loaded' has a wrong offset!");
static_assert(offsetof(WI_EquipOrUnlock_C_ExecuteUbergraph_WI_EquipOrUnlock, K2Node_CustomEvent_StoreItemData) == 0x000078, "Member 'WI_EquipOrUnlock_C_ExecuteUbergraph_WI_EquipOrUnlock::K2Node_CustomEvent_StoreItemData' has a wrong offset!");
static_assert(offsetof(WI_EquipOrUnlock_C_ExecuteUbergraph_WI_EquipOrUnlock, CallFunc_TryGetPlayerRewardDataAsset_OutSoftPlayerRewardDataAsset) == 0x0000C0, "Member 'WI_EquipOrUnlock_C_ExecuteUbergraph_WI_EquipOrUnlock::CallFunc_TryGetPlayerRewardDataAsset_OutSoftPlayerRewardDataAsset' has a wrong offset!");
static_assert(offsetof(WI_EquipOrUnlock_C_ExecuteUbergraph_WI_EquipOrUnlock, CallFunc_TryGetPlayerRewardDataAsset_ReturnValue) == 0x0000E8, "Member 'WI_EquipOrUnlock_C_ExecuteUbergraph_WI_EquipOrUnlock::CallFunc_TryGetPlayerRewardDataAsset_ReturnValue' has a wrong offset!");
static_assert(offsetof(WI_EquipOrUnlock_C_ExecuteUbergraph_WI_EquipOrUnlock, K2Node_SwitchEnum_CmpSuccess) == 0x0000E9, "Member 'WI_EquipOrUnlock_C_ExecuteUbergraph_WI_EquipOrUnlock::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(WI_EquipOrUnlock_C_ExecuteUbergraph_WI_EquipOrUnlock, K2Node_CreateDelegate_OutputDelegate) == 0x0000EC, "Member 'WI_EquipOrUnlock_C_ExecuteUbergraph_WI_EquipOrUnlock::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WI_EquipOrUnlock_C_ExecuteUbergraph_WI_EquipOrUnlock, K2Node_ComponentBoundEvent_Button_3) == 0x000100, "Member 'WI_EquipOrUnlock_C_ExecuteUbergraph_WI_EquipOrUnlock::K2Node_ComponentBoundEvent_Button_3' has a wrong offset!");
static_assert(offsetof(WI_EquipOrUnlock_C_ExecuteUbergraph_WI_EquipOrUnlock, K2Node_ComponentBoundEvent_Button_2) == 0x000108, "Member 'WI_EquipOrUnlock_C_ExecuteUbergraph_WI_EquipOrUnlock::K2Node_ComponentBoundEvent_Button_2' has a wrong offset!");
static_assert(offsetof(WI_EquipOrUnlock_C_ExecuteUbergraph_WI_EquipOrUnlock, K2Node_MakeArray_Array) == 0x000110, "Member 'WI_EquipOrUnlock_C_ExecuteUbergraph_WI_EquipOrUnlock::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(WI_EquipOrUnlock_C_ExecuteUbergraph_WI_EquipOrUnlock, CallFunc_MakeOnlineStoreItemCostStruct_ReturnValue) == 0x000120, "Member 'WI_EquipOrUnlock_C_ExecuteUbergraph_WI_EquipOrUnlock::CallFunc_MakeOnlineStoreItemCostStruct_ReturnValue' has a wrong offset!");
static_assert(offsetof(WI_EquipOrUnlock_C_ExecuteUbergraph_WI_EquipOrUnlock, CallFunc_MakeOnlineStoreItemDataVirtualCurrencyUnlock_ReturnValue) == 0x000130, "Member 'WI_EquipOrUnlock_C_ExecuteUbergraph_WI_EquipOrUnlock::CallFunc_MakeOnlineStoreItemDataVirtualCurrencyUnlock_ReturnValue' has a wrong offset!");
static_assert(offsetof(WI_EquipOrUnlock_C_ExecuteUbergraph_WI_EquipOrUnlock, K2Node_ComponentBoundEvent_Button_1) == 0x000178, "Member 'WI_EquipOrUnlock_C_ExecuteUbergraph_WI_EquipOrUnlock::K2Node_ComponentBoundEvent_Button_1' has a wrong offset!");

// Function WI_EquipOrUnlock.WI_EquipOrUnlock_C.OnLoaded_BEAE240C4885243D6D1DD28F1B361747
// 0x0008 (0x0008 - 0x0000)
struct WI_EquipOrUnlock_C_OnLoaded_BEAE240C4885243D6D1DD28F1B361747 final
{
public:
	class UObject*                                Loaded;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WI_EquipOrUnlock_C_OnLoaded_BEAE240C4885243D6D1DD28F1B361747) == 0x000008, "Wrong alignment on WI_EquipOrUnlock_C_OnLoaded_BEAE240C4885243D6D1DD28F1B361747");
static_assert(sizeof(WI_EquipOrUnlock_C_OnLoaded_BEAE240C4885243D6D1DD28F1B361747) == 0x000008, "Wrong size on WI_EquipOrUnlock_C_OnLoaded_BEAE240C4885243D6D1DD28F1B361747");
static_assert(offsetof(WI_EquipOrUnlock_C_OnLoaded_BEAE240C4885243D6D1DD28F1B361747, Loaded) == 0x000000, "Member 'WI_EquipOrUnlock_C_OnLoaded_BEAE240C4885243D6D1DD28F1B361747::Loaded' has a wrong offset!");

// Function WI_EquipOrUnlock.WI_EquipOrUnlock_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct WI_EquipOrUnlock_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WI_EquipOrUnlock_C_PreConstruct) == 0x000001, "Wrong alignment on WI_EquipOrUnlock_C_PreConstruct");
static_assert(sizeof(WI_EquipOrUnlock_C_PreConstruct) == 0x000001, "Wrong size on WI_EquipOrUnlock_C_PreConstruct");
static_assert(offsetof(WI_EquipOrUnlock_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'WI_EquipOrUnlock_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function WI_EquipOrUnlock.WI_EquipOrUnlock_C.SetBattlePassInfo
// 0x0248 (0x0248 - 0x0000)
struct WI_EquipOrUnlock_C_SetBattlePassInfo final
{
public:
	struct FOnlineStoreItemBattlePassRequirement  BattlePassRequirement;                             // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	bool                                          IsOwned;                                           // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBattlePassMetaData*                    BattlePassMetaData;                                // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0020(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0068(0x0010)(ReferenceParm)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7C[0x4];                                       // 0x007C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0080(0x0010)()
	int64                                         CallFunc_Conv_IntToInt64_ReturnValue;              // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int64                                         CallFunc_Conv_IntToInt64_ReturnValue_1;            // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x00A0(0x0048)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_2;            // 0x00E8(0x0048)(HasGetValueTypeHash)
	TSoftObjectPtr<class UBattlePassMetaData>     CallFunc_TryGetBattlePassMetaData_OutSoftBattlePassMetaData; // 0x0130(0x0028)(UObjectWrapper, HasGetValueTypeHash)
	bool                                          CallFunc_TryGetBattlePassMetaData_ReturnValue;     // 0x0158(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_159[0x7];                                      // 0x0159(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_3;            // 0x0160(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_1;                          // 0x01A8(0x0010)(ReferenceParm)
	class UObject*                                CallFunc_LoadAsset_Blocking_ReturnValue;           // 0x01B8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Format_ReturnValue_1;                     // 0x01C0(0x0010)()
	class UBattlePassMetaData*                    K2Node_DynamicCast_AsBattle_Pass_Meta_Data;        // 0x01D0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x01D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D9[0x7];                                      // 0x01D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_4;            // 0x01E0(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_2;                          // 0x0228(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue_2;                     // 0x0238(0x0010)()
};
static_assert(alignof(WI_EquipOrUnlock_C_SetBattlePassInfo) == 0x000008, "Wrong alignment on WI_EquipOrUnlock_C_SetBattlePassInfo");
static_assert(sizeof(WI_EquipOrUnlock_C_SetBattlePassInfo) == 0x000248, "Wrong size on WI_EquipOrUnlock_C_SetBattlePassInfo");
static_assert(offsetof(WI_EquipOrUnlock_C_SetBattlePassInfo, BattlePassRequirement) == 0x000000, "Member 'WI_EquipOrUnlock_C_SetBattlePassInfo::BattlePassRequirement' has a wrong offset!");
static_assert(offsetof(WI_EquipOrUnlock_C_SetBattlePassInfo, IsOwned) == 0x000010, "Member 'WI_EquipOrUnlock_C_SetBattlePassInfo::IsOwned' has a wrong offset!");
static_assert(offsetof(WI_EquipOrUnlock_C_SetBattlePassInfo, BattlePassMetaData) == 0x000018, "Member 'WI_EquipOrUnlock_C_SetBattlePassInfo::BattlePassMetaData' has a wrong offset!");
static_assert(offsetof(WI_EquipOrUnlock_C_SetBattlePassInfo, K2Node_MakeStruct_FormatArgumentData) == 0x000020, "Member 'WI_EquipOrUnlock_C_SetBattlePassInfo::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(WI_EquipOrUnlock_C_SetBattlePassInfo, K2Node_MakeArray_Array) == 0x000068, "Member 'WI_EquipOrUnlock_C_SetBattlePassInfo::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(WI_EquipOrUnlock_C_SetBattlePassInfo, CallFunc_Add_IntInt_ReturnValue) == 0x000078, "Member 'WI_EquipOrUnlock_C_SetBattlePassInfo::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WI_EquipOrUnlock_C_SetBattlePassInfo, CallFunc_Format_ReturnValue) == 0x000080, "Member 'WI_EquipOrUnlock_C_SetBattlePassInfo::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(WI_EquipOrUnlock_C_SetBattlePassInfo, CallFunc_Conv_IntToInt64_ReturnValue) == 0x000090, "Member 'WI_EquipOrUnlock_C_SetBattlePassInfo::CallFunc_Conv_IntToInt64_ReturnValue' has a wrong offset!");
static_assert(offsetof(WI_EquipOrUnlock_C_SetBattlePassInfo, CallFunc_Conv_IntToInt64_ReturnValue_1) == 0x000098, "Member 'WI_EquipOrUnlock_C_SetBattlePassInfo::CallFunc_Conv_IntToInt64_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WI_EquipOrUnlock_C_SetBattlePassInfo, K2Node_MakeStruct_FormatArgumentData_1) == 0x0000A0, "Member 'WI_EquipOrUnlock_C_SetBattlePassInfo::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(WI_EquipOrUnlock_C_SetBattlePassInfo, K2Node_MakeStruct_FormatArgumentData_2) == 0x0000E8, "Member 'WI_EquipOrUnlock_C_SetBattlePassInfo::K2Node_MakeStruct_FormatArgumentData_2' has a wrong offset!");
static_assert(offsetof(WI_EquipOrUnlock_C_SetBattlePassInfo, CallFunc_TryGetBattlePassMetaData_OutSoftBattlePassMetaData) == 0x000130, "Member 'WI_EquipOrUnlock_C_SetBattlePassInfo::CallFunc_TryGetBattlePassMetaData_OutSoftBattlePassMetaData' has a wrong offset!");
static_assert(offsetof(WI_EquipOrUnlock_C_SetBattlePassInfo, CallFunc_TryGetBattlePassMetaData_ReturnValue) == 0x000158, "Member 'WI_EquipOrUnlock_C_SetBattlePassInfo::CallFunc_TryGetBattlePassMetaData_ReturnValue' has a wrong offset!");
static_assert(offsetof(WI_EquipOrUnlock_C_SetBattlePassInfo, K2Node_MakeStruct_FormatArgumentData_3) == 0x000160, "Member 'WI_EquipOrUnlock_C_SetBattlePassInfo::K2Node_MakeStruct_FormatArgumentData_3' has a wrong offset!");
static_assert(offsetof(WI_EquipOrUnlock_C_SetBattlePassInfo, K2Node_MakeArray_Array_1) == 0x0001A8, "Member 'WI_EquipOrUnlock_C_SetBattlePassInfo::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(WI_EquipOrUnlock_C_SetBattlePassInfo, CallFunc_LoadAsset_Blocking_ReturnValue) == 0x0001B8, "Member 'WI_EquipOrUnlock_C_SetBattlePassInfo::CallFunc_LoadAsset_Blocking_ReturnValue' has a wrong offset!");
static_assert(offsetof(WI_EquipOrUnlock_C_SetBattlePassInfo, CallFunc_Format_ReturnValue_1) == 0x0001C0, "Member 'WI_EquipOrUnlock_C_SetBattlePassInfo::CallFunc_Format_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WI_EquipOrUnlock_C_SetBattlePassInfo, K2Node_DynamicCast_AsBattle_Pass_Meta_Data) == 0x0001D0, "Member 'WI_EquipOrUnlock_C_SetBattlePassInfo::K2Node_DynamicCast_AsBattle_Pass_Meta_Data' has a wrong offset!");
static_assert(offsetof(WI_EquipOrUnlock_C_SetBattlePassInfo, K2Node_DynamicCast_bSuccess) == 0x0001D8, "Member 'WI_EquipOrUnlock_C_SetBattlePassInfo::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WI_EquipOrUnlock_C_SetBattlePassInfo, K2Node_MakeStruct_FormatArgumentData_4) == 0x0001E0, "Member 'WI_EquipOrUnlock_C_SetBattlePassInfo::K2Node_MakeStruct_FormatArgumentData_4' has a wrong offset!");
static_assert(offsetof(WI_EquipOrUnlock_C_SetBattlePassInfo, K2Node_MakeArray_Array_2) == 0x000228, "Member 'WI_EquipOrUnlock_C_SetBattlePassInfo::K2Node_MakeArray_Array_2' has a wrong offset!");
static_assert(offsetof(WI_EquipOrUnlock_C_SetBattlePassInfo, CallFunc_Format_ReturnValue_2) == 0x000238, "Member 'WI_EquipOrUnlock_C_SetBattlePassInfo::CallFunc_Format_ReturnValue_2' has a wrong offset!");

// Function WI_EquipOrUnlock.WI_EquipOrUnlock_C.SetButtonVisibilities
// 0x000D (0x000D - 0x0000)
struct WI_EquipOrUnlock_C_SetButtonVisibilities final
{
public:
	EOnlineItemUnlockRequirement                  ItemUnlockRequirement;                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Index_0;                                           // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_2;                              // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_3;                              // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_1;                           // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WI_EquipOrUnlock_C_SetButtonVisibilities) == 0x000001, "Wrong alignment on WI_EquipOrUnlock_C_SetButtonVisibilities");
static_assert(sizeof(WI_EquipOrUnlock_C_SetButtonVisibilities) == 0x00000D, "Wrong size on WI_EquipOrUnlock_C_SetButtonVisibilities");
static_assert(offsetof(WI_EquipOrUnlock_C_SetButtonVisibilities, ItemUnlockRequirement) == 0x000000, "Member 'WI_EquipOrUnlock_C_SetButtonVisibilities::ItemUnlockRequirement' has a wrong offset!");
static_assert(offsetof(WI_EquipOrUnlock_C_SetButtonVisibilities, Index_0) == 0x000001, "Member 'WI_EquipOrUnlock_C_SetButtonVisibilities::Index_0' has a wrong offset!");
static_assert(offsetof(WI_EquipOrUnlock_C_SetButtonVisibilities, Temp_bool_Variable) == 0x000002, "Member 'WI_EquipOrUnlock_C_SetButtonVisibilities::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WI_EquipOrUnlock_C_SetButtonVisibilities, CallFunc_Not_PreBool_ReturnValue) == 0x000003, "Member 'WI_EquipOrUnlock_C_SetButtonVisibilities::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WI_EquipOrUnlock_C_SetButtonVisibilities, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000004, "Member 'WI_EquipOrUnlock_C_SetButtonVisibilities::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(WI_EquipOrUnlock_C_SetButtonVisibilities, Temp_byte_Variable) == 0x000005, "Member 'WI_EquipOrUnlock_C_SetButtonVisibilities::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WI_EquipOrUnlock_C_SetButtonVisibilities, CallFunc_BooleanAND_ReturnValue) == 0x000006, "Member 'WI_EquipOrUnlock_C_SetButtonVisibilities::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(WI_EquipOrUnlock_C_SetButtonVisibilities, Temp_byte_Variable_1) == 0x000007, "Member 'WI_EquipOrUnlock_C_SetButtonVisibilities::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WI_EquipOrUnlock_C_SetButtonVisibilities, Temp_bool_Variable_1) == 0x000008, "Member 'WI_EquipOrUnlock_C_SetButtonVisibilities::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(WI_EquipOrUnlock_C_SetButtonVisibilities, K2Node_Select_Default) == 0x000009, "Member 'WI_EquipOrUnlock_C_SetButtonVisibilities::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WI_EquipOrUnlock_C_SetButtonVisibilities, Temp_byte_Variable_2) == 0x00000A, "Member 'WI_EquipOrUnlock_C_SetButtonVisibilities::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(WI_EquipOrUnlock_C_SetButtonVisibilities, Temp_byte_Variable_3) == 0x00000B, "Member 'WI_EquipOrUnlock_C_SetButtonVisibilities::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(WI_EquipOrUnlock_C_SetButtonVisibilities, K2Node_Select_Default_1) == 0x00000C, "Member 'WI_EquipOrUnlock_C_SetButtonVisibilities::K2Node_Select_Default_1' has a wrong offset!");

// Function WI_EquipOrUnlock.WI_EquipOrUnlock_C.SetDescription
// 0x0010 (0x0010 - 0x0000)
struct WI_EquipOrUnlock_C_SetDescription final
{
public:
	class FText                                   Description;                                       // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(WI_EquipOrUnlock_C_SetDescription) == 0x000008, "Wrong alignment on WI_EquipOrUnlock_C_SetDescription");
static_assert(sizeof(WI_EquipOrUnlock_C_SetDescription) == 0x000010, "Wrong size on WI_EquipOrUnlock_C_SetDescription");
static_assert(offsetof(WI_EquipOrUnlock_C_SetDescription, Description) == 0x000000, "Member 'WI_EquipOrUnlock_C_SetDescription::Description' has a wrong offset!");

// Function WI_EquipOrUnlock.WI_EquipOrUnlock_C.SetIcon
// 0x0008 (0x0008 - 0x0000)
struct WI_EquipOrUnlock_C_SetIcon final
{
public:
	class UPlayerRewardDataAsset*                 PlayerRewardDataAsset;                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WI_EquipOrUnlock_C_SetIcon) == 0x000008, "Wrong alignment on WI_EquipOrUnlock_C_SetIcon");
static_assert(sizeof(WI_EquipOrUnlock_C_SetIcon) == 0x000008, "Wrong size on WI_EquipOrUnlock_C_SetIcon");
static_assert(offsetof(WI_EquipOrUnlock_C_SetIcon, PlayerRewardDataAsset) == 0x000000, "Member 'WI_EquipOrUnlock_C_SetIcon::PlayerRewardDataAsset' has a wrong offset!");

// Function WI_EquipOrUnlock.WI_EquipOrUnlock_C.SetIsEquipped
// 0x0002 (0x0002 - 0x0000)
struct WI_EquipOrUnlock_C_SetIsEquipped final
{
public:
	bool                                          IsEquipped;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WI_EquipOrUnlock_C_SetIsEquipped) == 0x000001, "Wrong alignment on WI_EquipOrUnlock_C_SetIsEquipped");
static_assert(sizeof(WI_EquipOrUnlock_C_SetIsEquipped) == 0x000002, "Wrong size on WI_EquipOrUnlock_C_SetIsEquipped");
static_assert(offsetof(WI_EquipOrUnlock_C_SetIsEquipped, IsEquipped) == 0x000000, "Member 'WI_EquipOrUnlock_C_SetIsEquipped::IsEquipped' has a wrong offset!");
static_assert(offsetof(WI_EquipOrUnlock_C_SetIsEquipped, CallFunc_Not_PreBool_ReturnValue) == 0x000001, "Member 'WI_EquipOrUnlock_C_SetIsEquipped::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function WI_EquipOrUnlock.WI_EquipOrUnlock_C.SetName
// 0x0010 (0x0010 - 0x0000)
struct WI_EquipOrUnlock_C_SetName final
{
public:
	class FText                                   Name_0;                                            // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(WI_EquipOrUnlock_C_SetName) == 0x000008, "Wrong alignment on WI_EquipOrUnlock_C_SetName");
static_assert(sizeof(WI_EquipOrUnlock_C_SetName) == 0x000010, "Wrong size on WI_EquipOrUnlock_C_SetName");
static_assert(offsetof(WI_EquipOrUnlock_C_SetName, Name_0) == 0x000000, "Member 'WI_EquipOrUnlock_C_SetName::Name_0' has a wrong offset!");

// Function WI_EquipOrUnlock.WI_EquipOrUnlock_C.SetRarity
// 0x0008 (0x0008 - 0x0000)
struct WI_EquipOrUnlock_C_SetRarity final
{
public:
	class URarity*                                Rarity;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WI_EquipOrUnlock_C_SetRarity) == 0x000008, "Wrong alignment on WI_EquipOrUnlock_C_SetRarity");
static_assert(sizeof(WI_EquipOrUnlock_C_SetRarity) == 0x000008, "Wrong size on WI_EquipOrUnlock_C_SetRarity");
static_assert(offsetof(WI_EquipOrUnlock_C_SetRarity, Rarity) == 0x000000, "Member 'WI_EquipOrUnlock_C_SetRarity::Rarity' has a wrong offset!");

// Function WI_EquipOrUnlock.WI_EquipOrUnlock_C.SetStoreItemData
// 0x0048 (0x0048 - 0x0000)
struct WI_EquipOrUnlock_C_SetStoreItemData final
{
public:
	struct FOnlineStoreItemData                   StoreItemData;                                     // 0x0000(0x0048)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(WI_EquipOrUnlock_C_SetStoreItemData) == 0x000008, "Wrong alignment on WI_EquipOrUnlock_C_SetStoreItemData");
static_assert(sizeof(WI_EquipOrUnlock_C_SetStoreItemData) == 0x000048, "Wrong size on WI_EquipOrUnlock_C_SetStoreItemData");
static_assert(offsetof(WI_EquipOrUnlock_C_SetStoreItemData, StoreItemData) == 0x000000, "Member 'WI_EquipOrUnlock_C_SetStoreItemData::StoreItemData' has a wrong offset!");

// Function WI_EquipOrUnlock.WI_EquipOrUnlock_C.SetUnlockInfo
// 0x000E (0x000E - 0x0000)
struct WI_EquipOrUnlock_C_SetUnlockInfo final
{
public:
	EOnlineItemUnlockRequirement                  ItemUnlockRequirement;                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsOwned;                                           // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_2;                              // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_3;                              // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_1;                           // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WI_EquipOrUnlock_C_SetUnlockInfo) == 0x000001, "Wrong alignment on WI_EquipOrUnlock_C_SetUnlockInfo");
static_assert(sizeof(WI_EquipOrUnlock_C_SetUnlockInfo) == 0x00000E, "Wrong size on WI_EquipOrUnlock_C_SetUnlockInfo");
static_assert(offsetof(WI_EquipOrUnlock_C_SetUnlockInfo, ItemUnlockRequirement) == 0x000000, "Member 'WI_EquipOrUnlock_C_SetUnlockInfo::ItemUnlockRequirement' has a wrong offset!");
static_assert(offsetof(WI_EquipOrUnlock_C_SetUnlockInfo, IsOwned) == 0x000001, "Member 'WI_EquipOrUnlock_C_SetUnlockInfo::IsOwned' has a wrong offset!");
static_assert(offsetof(WI_EquipOrUnlock_C_SetUnlockInfo, Temp_bool_Variable) == 0x000002, "Member 'WI_EquipOrUnlock_C_SetUnlockInfo::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WI_EquipOrUnlock_C_SetUnlockInfo, CallFunc_Not_PreBool_ReturnValue) == 0x000003, "Member 'WI_EquipOrUnlock_C_SetUnlockInfo::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WI_EquipOrUnlock_C_SetUnlockInfo, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000004, "Member 'WI_EquipOrUnlock_C_SetUnlockInfo::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(WI_EquipOrUnlock_C_SetUnlockInfo, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000005, "Member 'WI_EquipOrUnlock_C_SetUnlockInfo::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WI_EquipOrUnlock_C_SetUnlockInfo, CallFunc_BooleanAND_ReturnValue) == 0x000006, "Member 'WI_EquipOrUnlock_C_SetUnlockInfo::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(WI_EquipOrUnlock_C_SetUnlockInfo, Temp_byte_Variable) == 0x000007, "Member 'WI_EquipOrUnlock_C_SetUnlockInfo::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WI_EquipOrUnlock_C_SetUnlockInfo, Temp_byte_Variable_1) == 0x000008, "Member 'WI_EquipOrUnlock_C_SetUnlockInfo::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WI_EquipOrUnlock_C_SetUnlockInfo, Temp_bool_Variable_1) == 0x000009, "Member 'WI_EquipOrUnlock_C_SetUnlockInfo::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(WI_EquipOrUnlock_C_SetUnlockInfo, K2Node_Select_Default) == 0x00000A, "Member 'WI_EquipOrUnlock_C_SetUnlockInfo::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WI_EquipOrUnlock_C_SetUnlockInfo, Temp_byte_Variable_2) == 0x00000B, "Member 'WI_EquipOrUnlock_C_SetUnlockInfo::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(WI_EquipOrUnlock_C_SetUnlockInfo, Temp_byte_Variable_3) == 0x00000C, "Member 'WI_EquipOrUnlock_C_SetUnlockInfo::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(WI_EquipOrUnlock_C_SetUnlockInfo, K2Node_Select_Default_1) == 0x00000D, "Member 'WI_EquipOrUnlock_C_SetUnlockInfo::K2Node_Select_Default_1' has a wrong offset!");

// Function WI_EquipOrUnlock.WI_EquipOrUnlock_C.SetUnlockRequirements
// 0x0048 (0x0048 - 0x0000)
struct WI_EquipOrUnlock_C_SetUnlockRequirements final
{
public:
	struct FOnlineStoreItemData                   StoreItemData;                                     // 0x0000(0x0048)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(WI_EquipOrUnlock_C_SetUnlockRequirements) == 0x000008, "Wrong alignment on WI_EquipOrUnlock_C_SetUnlockRequirements");
static_assert(sizeof(WI_EquipOrUnlock_C_SetUnlockRequirements) == 0x000048, "Wrong size on WI_EquipOrUnlock_C_SetUnlockRequirements");
static_assert(offsetof(WI_EquipOrUnlock_C_SetUnlockRequirements, StoreItemData) == 0x000000, "Member 'WI_EquipOrUnlock_C_SetUnlockRequirements::StoreItemData' has a wrong offset!");

// Function WI_EquipOrUnlock.WI_EquipOrUnlock_C.ShowNavigationArrows
// 0x0005 (0x0005 - 0x0000)
struct WI_EquipOrUnlock_C_ShowNavigationArrows final
{
public:
	bool                                          ShowNavigationArrows_0;                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WI_EquipOrUnlock_C_ShowNavigationArrows) == 0x000001, "Wrong alignment on WI_EquipOrUnlock_C_ShowNavigationArrows");
static_assert(sizeof(WI_EquipOrUnlock_C_ShowNavigationArrows) == 0x000005, "Wrong size on WI_EquipOrUnlock_C_ShowNavigationArrows");
static_assert(offsetof(WI_EquipOrUnlock_C_ShowNavigationArrows, ShowNavigationArrows_0) == 0x000000, "Member 'WI_EquipOrUnlock_C_ShowNavigationArrows::ShowNavigationArrows_0' has a wrong offset!");
static_assert(offsetof(WI_EquipOrUnlock_C_ShowNavigationArrows, Temp_bool_Variable) == 0x000001, "Member 'WI_EquipOrUnlock_C_ShowNavigationArrows::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WI_EquipOrUnlock_C_ShowNavigationArrows, Temp_byte_Variable) == 0x000002, "Member 'WI_EquipOrUnlock_C_ShowNavigationArrows::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WI_EquipOrUnlock_C_ShowNavigationArrows, Temp_byte_Variable_1) == 0x000003, "Member 'WI_EquipOrUnlock_C_ShowNavigationArrows::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WI_EquipOrUnlock_C_ShowNavigationArrows, K2Node_Select_Default) == 0x000004, "Member 'WI_EquipOrUnlock_C_ShowNavigationArrows::K2Node_Select_Default' has a wrong offset!");

}

