#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PA_ModifyCritAndStrengthOnPossess

#include "Basic.hpp"

#include "GameplayTags_structs.hpp"
#include "JP_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass PA_ModifyCritAndStrengthOnPossess.PA_ModifyCritAndStrengthOnPossess_C
// 0x0028 (0x0050 - 0x0028)
class UPA_ModifyCritAndStrengthOnPossess_C final : public UPerkAction
{
public:
	struct FGameplayTag                           CritChanceTag;                                     // 0x0028(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	double                                        NewCritChance;                                     // 0x0030(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           CritMultiplierTag;                                 // 0x0038(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	double                                        NewCritMultiplier;                                 // 0x0040(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        StrengthMultiplier;                                // 0x0048(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void SetNewValuesToASC(class UAbilitySystemComponent* ASC);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"PA_ModifyCritAndStrengthOnPossess_C">();
	}
	static class UPA_ModifyCritAndStrengthOnPossess_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPA_ModifyCritAndStrengthOnPossess_C>();
	}
};
static_assert(alignof(UPA_ModifyCritAndStrengthOnPossess_C) == 0x000008, "Wrong alignment on UPA_ModifyCritAndStrengthOnPossess_C");
static_assert(sizeof(UPA_ModifyCritAndStrengthOnPossess_C) == 0x000050, "Wrong size on UPA_ModifyCritAndStrengthOnPossess_C");
static_assert(offsetof(UPA_ModifyCritAndStrengthOnPossess_C, CritChanceTag) == 0x000028, "Member 'UPA_ModifyCritAndStrengthOnPossess_C::CritChanceTag' has a wrong offset!");
static_assert(offsetof(UPA_ModifyCritAndStrengthOnPossess_C, NewCritChance) == 0x000030, "Member 'UPA_ModifyCritAndStrengthOnPossess_C::NewCritChance' has a wrong offset!");
static_assert(offsetof(UPA_ModifyCritAndStrengthOnPossess_C, CritMultiplierTag) == 0x000038, "Member 'UPA_ModifyCritAndStrengthOnPossess_C::CritMultiplierTag' has a wrong offset!");
static_assert(offsetof(UPA_ModifyCritAndStrengthOnPossess_C, NewCritMultiplier) == 0x000040, "Member 'UPA_ModifyCritAndStrengthOnPossess_C::NewCritMultiplier' has a wrong offset!");
static_assert(offsetof(UPA_ModifyCritAndStrengthOnPossess_C, StrengthMultiplier) == 0x000048, "Member 'UPA_ModifyCritAndStrengthOnPossess_C::StrengthMultiplier' has a wrong offset!");

}

