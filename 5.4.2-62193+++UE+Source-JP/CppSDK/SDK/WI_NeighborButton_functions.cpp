#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WI_NeighborButton

#include "Basic.hpp"

#include "WI_NeighborButton_classes.hpp"
#include "WI_NeighborButton_parameters.hpp"


namespace SDK
{

// Function WI_NeighborButton.WI_NeighborButton_C.BP_OnClicked
// (Event, Protected, BlueprintEvent)

void UWI_NeighborButton_C::BP_OnClicked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WI_NeighborButton_C", "BP_OnClicked");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WI_NeighborButton.WI_NeighborButton_C.BP_OnHovered
// (Event, Protected, BlueprintEvent)

void UWI_NeighborButton_C::BP_OnHovered()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WI_NeighborButton_C", "BP_OnHovered");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WI_NeighborButton.WI_NeighborButton_C.BP_OnPressed
// (Event, Protected, BlueprintEvent)

void UWI_NeighborButton_C::BP_OnPressed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WI_NeighborButton_C", "BP_OnPressed");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WI_NeighborButton.WI_NeighborButton_C.BP_OnUnhovered
// (Event, Protected, BlueprintEvent)

void UWI_NeighborButton_C::BP_OnUnhovered()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WI_NeighborButton_C", "BP_OnUnhovered");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WI_NeighborButton.WI_NeighborButton_C.ExecuteUbergraph_WI_NeighborButton
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWI_NeighborButton_C::ExecuteUbergraph_WI_NeighborButton(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WI_NeighborButton_C", "ExecuteUbergraph_WI_NeighborButton");

	Params::WI_NeighborButton_C_ExecuteUbergraph_WI_NeighborButton Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WI_NeighborButton.WI_NeighborButton_C.GetNameAndIcon
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGameplayTag                     NeighborID_0                                           (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
// class FText                             Name_0                                                 (Parm, OutParm)
// TSoftObjectPtr<class UTexture2D>        Icon                                                   (Parm, OutParm, HasGetValueTypeHash)

void UWI_NeighborButton_C::GetNameAndIcon(const struct FGameplayTag& NeighborID_0, class FText* Name_0, TSoftObjectPtr<class UTexture2D>* Icon)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WI_NeighborButton_C", "GetNameAndIcon");

	Params::WI_NeighborButton_C_GetNameAndIcon Parms{};

	Parms.NeighborID_0 = std::move(NeighborID_0);

	UObject::ProcessEvent(Func, &Parms);

	if (Name_0 != nullptr)
		*Name_0 = std::move(Parms.Name_0);

	if (Icon != nullptr)
		*Icon = Parms.Icon;
}


// Function WI_NeighborButton.WI_NeighborButton_C.GetNameFromNeighborID
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FGameplayTag                     NeighborID_0                                           (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
// class FString                           NeighborName                                           (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)

void UWI_NeighborButton_C::GetNameFromNeighborID(const struct FGameplayTag& NeighborID_0, class FString* NeighborName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WI_NeighborButton_C", "GetNameFromNeighborID");

	Params::WI_NeighborButton_C_GetNameFromNeighborID Parms{};

	Parms.NeighborID_0 = std::move(NeighborID_0);

	UObject::ProcessEvent(Func, &Parms);

	if (NeighborName != nullptr)
		*NeighborName = std::move(Parms.NeighborName);
}


// Function WI_NeighborButton.WI_NeighborButton_C.OnClickedEventDispatcher__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Index_0                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWI_NeighborButton_C::OnClickedEventDispatcher__DelegateSignature(int32 Index_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WI_NeighborButton_C", "OnClickedEventDispatcher__DelegateSignature");

	Params::WI_NeighborButton_C_OnClickedEventDispatcher__DelegateSignature Parms{};

	Parms.Index_0 = Index_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WI_NeighborButton.WI_NeighborButton_C.OnLoaded_38A939B04DC8A529401B48902723274B
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          Loaded                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UWI_NeighborButton_C::OnLoaded_38A939B04DC8A529401B48902723274B(class UObject* Loaded)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WI_NeighborButton_C", "OnLoaded_38A939B04DC8A529401B48902723274B");

	Params::WI_NeighborButton_C_OnLoaded_38A939B04DC8A529401B48902723274B Parms{};

	Parms.Loaded = Loaded;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WI_NeighborButton.WI_NeighborButton_C.OnLoaded_CCA746F24EDA6D5C3E4A9AA90EB212AB
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          Loaded                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UWI_NeighborButton_C::OnLoaded_CCA746F24EDA6D5C3E4A9AA90EB212AB(class UObject* Loaded)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WI_NeighborButton_C", "OnLoaded_CCA746F24EDA6D5C3E4A9AA90EB212AB");

	Params::WI_NeighborButton_C_OnLoaded_CCA746F24EDA6D5C3E4A9AA90EB212AB Parms{};

	Parms.Loaded = Loaded;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WI_NeighborButton.WI_NeighborButton_C.PreConstruct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// bool                                    IsDesignTime                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWI_NeighborButton_C::PreConstruct(bool IsDesignTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WI_NeighborButton_C", "PreConstruct");

	Params::WI_NeighborButton_C_PreConstruct Parms{};

	Parms.IsDesignTime = IsDesignTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WI_NeighborButton.WI_NeighborButton_C.SetBattlePassRequirement
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FOnlineStoreItemBattlePassRequirementBattlePassRequirement                                  (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)

void UWI_NeighborButton_C::SetBattlePassRequirement(const struct FOnlineStoreItemBattlePassRequirement& BattlePassRequirement)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WI_NeighborButton_C", "SetBattlePassRequirement");

	Params::WI_NeighborButton_C_SetBattlePassRequirement Parms{};

	Parms.BattlePassRequirement = std::move(BattlePassRequirement);

	UObject::ProcessEvent(Func, &Parms);
}


// Function WI_NeighborButton.WI_NeighborButton_C.SetCharacterName
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FText                             CharacterName                                          (BlueprintVisible, BlueprintReadOnly, Parm)

void UWI_NeighborButton_C::SetCharacterName(const class FText& CharacterName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WI_NeighborButton_C", "SetCharacterName");

	Params::WI_NeighborButton_C_SetCharacterName Parms{};

	Parms.CharacterName = std::move(CharacterName);

	UObject::ProcessEvent(Func, &Parms);
}


// Function WI_NeighborButton.WI_NeighborButton_C.SetIconMode
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IconMode_0                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWI_NeighborButton_C::SetIconMode(bool IconMode_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WI_NeighborButton_C", "SetIconMode");

	Params::WI_NeighborButton_C_SetIconMode Parms{};

	Parms.IconMode_0 = IconMode_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WI_NeighborButton.WI_NeighborButton_C.SetIndex
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Index_0                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWI_NeighborButton_C::SetIndex(int32 Index_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WI_NeighborButton_C", "SetIndex");

	Params::WI_NeighborButton_C_SetIndex Parms{};

	Parms.Index_0 = Index_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WI_NeighborButton.WI_NeighborButton_C.SetIsOwned
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsOwned                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWI_NeighborButton_C::SetIsOwned(bool IsOwned)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WI_NeighborButton_C", "SetIsOwned");

	Params::WI_NeighborButton_C_SetIsOwned Parms{};

	Parms.IsOwned = IsOwned;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WI_NeighborButton.WI_NeighborButton_C.SetLevel
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Level_0                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWI_NeighborButton_C::SetLevel(int32 Level_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WI_NeighborButton_C", "SetLevel");

	Params::WI_NeighborButton_C_SetLevel Parms{};

	Parms.Level_0 = Level_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WI_NeighborButton.WI_NeighborButton_C.SetLockedPortraitSoftTexture
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// TSoftObjectPtr<class UTexture2D>        NewParam                                               (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void UWI_NeighborButton_C::SetLockedPortraitSoftTexture(TSoftObjectPtr<class UTexture2D> NewParam)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WI_NeighborButton_C", "SetLockedPortraitSoftTexture");

	Params::WI_NeighborButton_C_SetLockedPortraitSoftTexture Parms{};

	Parms.NewParam = NewParam;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WI_NeighborButton.WI_NeighborButton_C.SetNeighborID
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGameplayTag                     NeighborID_0                                           (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)

void UWI_NeighborButton_C::SetNeighborID(const struct FGameplayTag& NeighborID_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WI_NeighborButton_C", "SetNeighborID");

	Params::WI_NeighborButton_C_SetNeighborID Parms{};

	Parms.NeighborID_0 = std::move(NeighborID_0);

	UObject::ProcessEvent(Func, &Parms);
}


// Function WI_NeighborButton.WI_NeighborButton_C.SetNeighborXP
// (Public, BlueprintCallable, BlueprintEvent)

void UWI_NeighborButton_C::SetNeighborXP()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WI_NeighborButton_C", "SetNeighborXP");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WI_NeighborButton.WI_NeighborButton_C.SetNextLevelProgress
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  NextLevelProgress                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWI_NeighborButton_C::SetNextLevelProgress(double NextLevelProgress)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WI_NeighborButton_C", "SetNextLevelProgress");

	Params::WI_NeighborButton_C_SetNextLevelProgress Parms{};

	Parms.NextLevelProgress = NextLevelProgress;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WI_NeighborButton.WI_NeighborButton_C.SetPortraitSoftTexture
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// TSoftObjectPtr<class UTexture2D>        NewParam                                               (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void UWI_NeighborButton_C::SetPortraitSoftTexture(TSoftObjectPtr<class UTexture2D> NewParam)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WI_NeighborButton_C", "SetPortraitSoftTexture");

	Params::WI_NeighborButton_C_SetPortraitSoftTexture Parms{};

	Parms.NewParam = NewParam;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WI_NeighborButton.WI_NeighborButton_C.SetRandomNeighbor
// (BlueprintCallable, BlueprintEvent)

void UWI_NeighborButton_C::SetRandomNeighbor()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WI_NeighborButton_C", "SetRandomNeighbor");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WI_NeighborButton.WI_NeighborButton_C.SetUnlockRequirement
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// EOnlineItemUnlockRequirement            UnlockRequirement                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FOnlineStoreItemCost             VirtualCurrencyCost                                    (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
// struct FOnlineStoreItemBattlePassRequirementBattlePassRequirement                                  (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)

void UWI_NeighborButton_C::SetUnlockRequirement(EOnlineItemUnlockRequirement UnlockRequirement, const struct FOnlineStoreItemCost& VirtualCurrencyCost, const struct FOnlineStoreItemBattlePassRequirement& BattlePassRequirement)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WI_NeighborButton_C", "SetUnlockRequirement");

	Params::WI_NeighborButton_C_SetUnlockRequirement Parms{};

	Parms.UnlockRequirement = UnlockRequirement;
	Parms.VirtualCurrencyCost = std::move(VirtualCurrencyCost);
	Parms.BattlePassRequirement = std::move(BattlePassRequirement);

	UObject::ProcessEvent(Func, &Parms);
}


// Function WI_NeighborButton.WI_NeighborButton_C.SetWithOnlineStoreItem
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FOnlineStoreItemData             OnlineStoreItem                                        (BlueprintVisible, BlueprintReadOnly, Parm)

void UWI_NeighborButton_C::SetWithOnlineStoreItem(const struct FOnlineStoreItemData& OnlineStoreItem)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WI_NeighborButton_C", "SetWithOnlineStoreItem");

	Params::WI_NeighborButton_C_SetWithOnlineStoreItem Parms{};

	Parms.OnlineStoreItem = std::move(OnlineStoreItem);

	UObject::ProcessEvent(Func, &Parms);
}

}

