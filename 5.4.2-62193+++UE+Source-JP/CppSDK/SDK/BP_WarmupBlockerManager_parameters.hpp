#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_WarmupBlockerManager

#include "Basic.hpp"

#include "JP_structs.hpp"


namespace SDK::Params
{

// Function BP_WarmupBlockerManager.BP_WarmupBlockerManager_C.CreateWidget
// 0x0010 (0x0010 - 0x0000)
struct BP_WarmupBlockerManager_C_CreateWidget final
{
public:
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UWI_WarmupCountdown_C*                  CallFunc_Create_ReturnValue;                       // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_WarmupBlockerManager_C_CreateWidget) == 0x000008, "Wrong alignment on BP_WarmupBlockerManager_C_CreateWidget");
static_assert(sizeof(BP_WarmupBlockerManager_C_CreateWidget) == 0x000010, "Wrong size on BP_WarmupBlockerManager_C_CreateWidget");
static_assert(offsetof(BP_WarmupBlockerManager_C_CreateWidget, CallFunc_GetPlayerController_ReturnValue) == 0x000000, "Member 'BP_WarmupBlockerManager_C_CreateWidget::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WarmupBlockerManager_C_CreateWidget, CallFunc_Create_ReturnValue) == 0x000008, "Member 'BP_WarmupBlockerManager_C_CreateWidget::CallFunc_Create_ReturnValue' has a wrong offset!");

// Function BP_WarmupBlockerManager.BP_WarmupBlockerManager_C.ExecuteUbergraph_BP_WarmupBlockerManager
// 0x0080 (0x0080 - 0x0000)
struct BP_WarmupBlockerManager_C_ExecuteUbergraph_BP_WarmupBlockerManager final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0008(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_MatchIntro_Manager_C*               CallFunc_GetActorOfClass_ReturnValue;              // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMatchConfiguration                    CallFunc_GetMatchConfiguration_ReturnValue;        // 0x0028(0x0058)(ConstParm)
};
static_assert(alignof(BP_WarmupBlockerManager_C_ExecuteUbergraph_BP_WarmupBlockerManager) == 0x000008, "Wrong alignment on BP_WarmupBlockerManager_C_ExecuteUbergraph_BP_WarmupBlockerManager");
static_assert(sizeof(BP_WarmupBlockerManager_C_ExecuteUbergraph_BP_WarmupBlockerManager) == 0x000080, "Wrong size on BP_WarmupBlockerManager_C_ExecuteUbergraph_BP_WarmupBlockerManager");
static_assert(offsetof(BP_WarmupBlockerManager_C_ExecuteUbergraph_BP_WarmupBlockerManager, EntryPoint) == 0x000000, "Member 'BP_WarmupBlockerManager_C_ExecuteUbergraph_BP_WarmupBlockerManager::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_WarmupBlockerManager_C_ExecuteUbergraph_BP_WarmupBlockerManager, CallFunc_IsDedicatedServer_ReturnValue) == 0x000004, "Member 'BP_WarmupBlockerManager_C_ExecuteUbergraph_BP_WarmupBlockerManager::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WarmupBlockerManager_C_ExecuteUbergraph_BP_WarmupBlockerManager, K2Node_CreateDelegate_OutputDelegate) == 0x000008, "Member 'BP_WarmupBlockerManager_C_ExecuteUbergraph_BP_WarmupBlockerManager::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_WarmupBlockerManager_C_ExecuteUbergraph_BP_WarmupBlockerManager, CallFunc_GetActorOfClass_ReturnValue) == 0x000018, "Member 'BP_WarmupBlockerManager_C_ExecuteUbergraph_BP_WarmupBlockerManager::CallFunc_GetActorOfClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WarmupBlockerManager_C_ExecuteUbergraph_BP_WarmupBlockerManager, CallFunc_IsValid_ReturnValue) == 0x000020, "Member 'BP_WarmupBlockerManager_C_ExecuteUbergraph_BP_WarmupBlockerManager::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WarmupBlockerManager_C_ExecuteUbergraph_BP_WarmupBlockerManager, CallFunc_GetMatchConfiguration_ReturnValue) == 0x000028, "Member 'BP_WarmupBlockerManager_C_ExecuteUbergraph_BP_WarmupBlockerManager::CallFunc_GetMatchConfiguration_ReturnValue' has a wrong offset!");

// Function BP_WarmupBlockerManager.BP_WarmupBlockerManager_C.OnRep_IsEnabled
// 0x0028 (0x0028 - 0x0000)
struct BP_WarmupBlockerManager_C_OnRep_IsEnabled final
{
public:
	int32                                         Temp_int_Variable;                                 // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UWI_WarmupCountdown_C*>          CallFunc_GetAllWidgetsOfClass_FoundWidgets;        // 0x0008(0x0010)(ReferenceParm, ContainsInstancedReference)
	class UWI_WarmupCountdown_C*                  CallFunc_Array_Get_Item;                           // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Conv_IntToBool_ReturnValue;               // 0x0025(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_WarmupBlockerManager_C_OnRep_IsEnabled) == 0x000008, "Wrong alignment on BP_WarmupBlockerManager_C_OnRep_IsEnabled");
static_assert(sizeof(BP_WarmupBlockerManager_C_OnRep_IsEnabled) == 0x000028, "Wrong size on BP_WarmupBlockerManager_C_OnRep_IsEnabled");
static_assert(offsetof(BP_WarmupBlockerManager_C_OnRep_IsEnabled, Temp_int_Variable) == 0x000000, "Member 'BP_WarmupBlockerManager_C_OnRep_IsEnabled::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_WarmupBlockerManager_C_OnRep_IsEnabled, CallFunc_Add_IntInt_ReturnValue) == 0x000004, "Member 'BP_WarmupBlockerManager_C_OnRep_IsEnabled::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WarmupBlockerManager_C_OnRep_IsEnabled, CallFunc_GetAllWidgetsOfClass_FoundWidgets) == 0x000008, "Member 'BP_WarmupBlockerManager_C_OnRep_IsEnabled::CallFunc_GetAllWidgetsOfClass_FoundWidgets' has a wrong offset!");
static_assert(offsetof(BP_WarmupBlockerManager_C_OnRep_IsEnabled, CallFunc_Array_Get_Item) == 0x000018, "Member 'BP_WarmupBlockerManager_C_OnRep_IsEnabled::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_WarmupBlockerManager_C_OnRep_IsEnabled, CallFunc_Array_Length_ReturnValue) == 0x000020, "Member 'BP_WarmupBlockerManager_C_OnRep_IsEnabled::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WarmupBlockerManager_C_OnRep_IsEnabled, CallFunc_Less_IntInt_ReturnValue) == 0x000024, "Member 'BP_WarmupBlockerManager_C_OnRep_IsEnabled::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WarmupBlockerManager_C_OnRep_IsEnabled, CallFunc_Conv_IntToBool_ReturnValue) == 0x000025, "Member 'BP_WarmupBlockerManager_C_OnRep_IsEnabled::CallFunc_Conv_IntToBool_ReturnValue' has a wrong offset!");

// Function BP_WarmupBlockerManager.BP_WarmupBlockerManager_C.ToggleBlocker
// 0x0004 (0x0004 - 0x0000)
struct BP_WarmupBlockerManager_C_ToggleBlocker final
{
public:
	int32                                         Enabled;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_WarmupBlockerManager_C_ToggleBlocker) == 0x000004, "Wrong alignment on BP_WarmupBlockerManager_C_ToggleBlocker");
static_assert(sizeof(BP_WarmupBlockerManager_C_ToggleBlocker) == 0x000004, "Wrong size on BP_WarmupBlockerManager_C_ToggleBlocker");
static_assert(offsetof(BP_WarmupBlockerManager_C_ToggleBlocker, Enabled) == 0x000000, "Member 'BP_WarmupBlockerManager_C_ToggleBlocker::Enabled' has a wrong offset!");

// Function BP_WarmupBlockerManager.BP_WarmupBlockerManager_C.UpdateCollisionAndVisibility
// 0x0028 (0x0028 - 0x0000)
struct BP_WarmupBlockerManager_C_UpdateCollisionAndVisibility final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A[0x2];                                        // 0x000A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABp_WarmupBlocker_Spline_C*             CallFunc_Array_Get_Item;                           // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_WarmupBlockerManager_C_UpdateCollisionAndVisibility) == 0x000008, "Wrong alignment on BP_WarmupBlockerManager_C_UpdateCollisionAndVisibility");
static_assert(sizeof(BP_WarmupBlockerManager_C_UpdateCollisionAndVisibility) == 0x000028, "Wrong size on BP_WarmupBlockerManager_C_UpdateCollisionAndVisibility");
static_assert(offsetof(BP_WarmupBlockerManager_C_UpdateCollisionAndVisibility, Temp_int_Array_Index_Variable) == 0x000000, "Member 'BP_WarmupBlockerManager_C_UpdateCollisionAndVisibility::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_WarmupBlockerManager_C_UpdateCollisionAndVisibility, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'BP_WarmupBlockerManager_C_UpdateCollisionAndVisibility::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_WarmupBlockerManager_C_UpdateCollisionAndVisibility, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000008, "Member 'BP_WarmupBlockerManager_C_UpdateCollisionAndVisibility::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WarmupBlockerManager_C_UpdateCollisionAndVisibility, CallFunc_Not_PreBool_ReturnValue) == 0x000009, "Member 'BP_WarmupBlockerManager_C_UpdateCollisionAndVisibility::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WarmupBlockerManager_C_UpdateCollisionAndVisibility, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'BP_WarmupBlockerManager_C_UpdateCollisionAndVisibility::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WarmupBlockerManager_C_UpdateCollisionAndVisibility, CallFunc_Array_Length_ReturnValue) == 0x000010, "Member 'BP_WarmupBlockerManager_C_UpdateCollisionAndVisibility::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WarmupBlockerManager_C_UpdateCollisionAndVisibility, CallFunc_Array_Get_Item) == 0x000018, "Member 'BP_WarmupBlockerManager_C_UpdateCollisionAndVisibility::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_WarmupBlockerManager_C_UpdateCollisionAndVisibility, CallFunc_Less_IntInt_ReturnValue) == 0x000020, "Member 'BP_WarmupBlockerManager_C_UpdateCollisionAndVisibility::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WarmupBlockerManager_C_UpdateCollisionAndVisibility, CallFunc_IsValid_ReturnValue) == 0x000021, "Member 'BP_WarmupBlockerManager_C_UpdateCollisionAndVisibility::CallFunc_IsValid_ReturnValue' has a wrong offset!");

}

