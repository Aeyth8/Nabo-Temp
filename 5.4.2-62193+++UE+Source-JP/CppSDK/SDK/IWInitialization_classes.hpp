#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: IWInitialization

#include "Basic.hpp"

#include "GameplayTags_structs.hpp"
#include "Engine_classes.hpp"
#include "IWInitialization_structs.hpp"
#include "ModularGameplay_classes.hpp"


namespace SDK
{

// Class IWInitialization.InitializationState
// 0x0028 (0x0058 - 0x0030)
class UInitializationState final : public UDataAsset
{
public:
	struct FGameplayTag                           Identifier;                                        // 0x0030(0x0008)(Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTagContainer                  Steps;                                             // 0x0038(0x0020)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"InitializationState">();
	}
	static class UInitializationState* GetDefaultObj()
	{
		return GetDefaultObjImpl<UInitializationState>();
	}
};
static_assert(alignof(UInitializationState) == 0x000008, "Wrong alignment on UInitializationState");
static_assert(sizeof(UInitializationState) == 0x000058, "Wrong size on UInitializationState");
static_assert(offsetof(UInitializationState, Identifier) == 0x000030, "Member 'UInitializationState::Identifier' has a wrong offset!");
static_assert(offsetof(UInitializationState, Steps) == 0x000038, "Member 'UInitializationState::Steps' has a wrong offset!");

// Class IWInitialization.InitializationAsyncAction
// 0x0008 (0x0038 - 0x0030)
class UInitializationAsyncAction : public UBlueprintAsyncActionBase
{
public:
	class UObject*                                WorldContextObjectPtr;                             // 0x0030(0x0008)(ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"InitializationAsyncAction">();
	}
	static class UInitializationAsyncAction* GetDefaultObj()
	{
		return GetDefaultObjImpl<UInitializationAsyncAction>();
	}
};
static_assert(alignof(UInitializationAsyncAction) == 0x000008, "Wrong alignment on UInitializationAsyncAction");
static_assert(sizeof(UInitializationAsyncAction) == 0x000038, "Wrong size on UInitializationAsyncAction");
static_assert(offsetof(UInitializationAsyncAction, WorldContextObjectPtr) == 0x000030, "Member 'UInitializationAsyncAction::WorldContextObjectPtr' has a wrong offset!");

// Class IWInitialization.InitializationStateStarted
// 0x0018 (0x0050 - 0x0038)
class UInitializationStateStarted final : public UInitializationAsyncAction
{
public:
	FMulticastInlineDelegateProperty_             OnStarted;                                         // 0x0038(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                         Pad_48[0x8];                                       // 0x0048(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UInitializationStateStarted* ListenToInitializationStateStarted(const class UObject* WorldContextObject, const struct FGameplayTag& Identifier);

	void OnStateStarted() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"InitializationStateStarted">();
	}
	static class UInitializationStateStarted* GetDefaultObj()
	{
		return GetDefaultObjImpl<UInitializationStateStarted>();
	}
};
static_assert(alignof(UInitializationStateStarted) == 0x000008, "Wrong alignment on UInitializationStateStarted");
static_assert(sizeof(UInitializationStateStarted) == 0x000050, "Wrong size on UInitializationStateStarted");
static_assert(offsetof(UInitializationStateStarted, OnStarted) == 0x000038, "Member 'UInitializationStateStarted::OnStarted' has a wrong offset!");

// Class IWInitialization.InitializationStateEnded
// 0x0018 (0x0050 - 0x0038)
class UInitializationStateEnded final : public UInitializationAsyncAction
{
public:
	FMulticastInlineDelegateProperty_             OnEnded;                                           // 0x0038(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                         Pad_48[0x8];                                       // 0x0048(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UInitializationStateEnded* ListenToInitializationStateEnded(const class UObject* WorldContextObject, const struct FGameplayTag& Identifier);

	void OnStateEnded() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"InitializationStateEnded">();
	}
	static class UInitializationStateEnded* GetDefaultObj()
	{
		return GetDefaultObjImpl<UInitializationStateEnded>();
	}
};
static_assert(alignof(UInitializationStateEnded) == 0x000008, "Wrong alignment on UInitializationStateEnded");
static_assert(sizeof(UInitializationStateEnded) == 0x000050, "Wrong size on UInitializationStateEnded");
static_assert(offsetof(UInitializationStateEnded, OnEnded) == 0x000038, "Member 'UInitializationStateEnded::OnEnded' has a wrong offset!");

// Class IWInitialization.InitializationStateExecution
// 0x0038 (0x0070 - 0x0038)
class UInitializationStateExecution final : public UInitializationAsyncAction
{
public:
	FMulticastInlineDelegateProperty_             OnFinished;                                        // 0x0038(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                         Pad_48[0x28];                                      // 0x0048(0x0028)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UInitializationStateExecution* ExecuteInitializationState(const class UObject* WorldContextObject, TSoftObjectPtr<class UInitializationState> State);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"InitializationStateExecution">();
	}
	static class UInitializationStateExecution* GetDefaultObj()
	{
		return GetDefaultObjImpl<UInitializationStateExecution>();
	}
};
static_assert(alignof(UInitializationStateExecution) == 0x000008, "Wrong alignment on UInitializationStateExecution");
static_assert(sizeof(UInitializationStateExecution) == 0x000070, "Wrong size on UInitializationStateExecution");
static_assert(offsetof(UInitializationStateExecution, OnFinished) == 0x000038, "Member 'UInitializationStateExecution::OnFinished' has a wrong offset!");

// Class IWInitialization.InitializationWorldSubsystem
// 0x00E0 (0x0110 - 0x0030)
class UInitializationWorldSubsystem final : public UWorldSubsystem
{
public:
	class UInitializationStateExecution*          CurrentStateExecution;                             // 0x0030(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FGameplayTagContainer                  FinishedSteps;                                     // 0x0038(0x0020)(NativeAccessSpecifierPrivate)
	struct FGameplayTagContainer                  TargetSteps;                                       // 0x0058(0x0020)(NativeAccessSpecifierPrivate)
	struct FGameplayTagContainer                  FinishedStatesHistory;                             // 0x0078(0x0020)(NativeAccessSpecifierPrivate)
	struct FGameplayTagContainer                  StartedStatesHistory;                              // 0x0098(0x0020)(NativeAccessSpecifierPrivate)
	TMap<struct FGameplayTag, struct FStateDelegateSatelliteData> EventListeners;                                    // 0x00B8(0x0050)(NativeAccessSpecifierPrivate)
	uint8                                         Pad_108[0x8];                                      // 0x0108(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static bool HasInitializationStateEnded(const class UObject* WorldContextObject, const struct FGameplayTag& Tag);
	static bool HasInitializationStateStarted(const class UObject* WorldContextObject, const struct FGameplayTag& Tag);

	void FinishStateStep(const struct FGameplayTag& Tag);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"InitializationWorldSubsystem">();
	}
	static class UInitializationWorldSubsystem* GetDefaultObj()
	{
		return GetDefaultObjImpl<UInitializationWorldSubsystem>();
	}
};
static_assert(alignof(UInitializationWorldSubsystem) == 0x000008, "Wrong alignment on UInitializationWorldSubsystem");
static_assert(sizeof(UInitializationWorldSubsystem) == 0x000110, "Wrong size on UInitializationWorldSubsystem");
static_assert(offsetof(UInitializationWorldSubsystem, CurrentStateExecution) == 0x000030, "Member 'UInitializationWorldSubsystem::CurrentStateExecution' has a wrong offset!");
static_assert(offsetof(UInitializationWorldSubsystem, FinishedSteps) == 0x000038, "Member 'UInitializationWorldSubsystem::FinishedSteps' has a wrong offset!");
static_assert(offsetof(UInitializationWorldSubsystem, TargetSteps) == 0x000058, "Member 'UInitializationWorldSubsystem::TargetSteps' has a wrong offset!");
static_assert(offsetof(UInitializationWorldSubsystem, FinishedStatesHistory) == 0x000078, "Member 'UInitializationWorldSubsystem::FinishedStatesHistory' has a wrong offset!");
static_assert(offsetof(UInitializationWorldSubsystem, StartedStatesHistory) == 0x000098, "Member 'UInitializationWorldSubsystem::StartedStatesHistory' has a wrong offset!");
static_assert(offsetof(UInitializationWorldSubsystem, EventListeners) == 0x0000B8, "Member 'UInitializationWorldSubsystem::EventListeners' has a wrong offset!");

// Class IWInitialization.InitializationSequenceComponent
// 0x0000 (0x00A0 - 0x00A0)
class UInitializationSequenceComponent final : public UGameFrameworkComponent
{
public:
	void BeginClientSequence();
	void BeginServerSequence();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"InitializationSequenceComponent">();
	}
	static class UInitializationSequenceComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UInitializationSequenceComponent>();
	}
};
static_assert(alignof(UInitializationSequenceComponent) == 0x000008, "Wrong alignment on UInitializationSequenceComponent");
static_assert(sizeof(UInitializationSequenceComponent) == 0x0000A0, "Wrong size on UInitializationSequenceComponent");

}

