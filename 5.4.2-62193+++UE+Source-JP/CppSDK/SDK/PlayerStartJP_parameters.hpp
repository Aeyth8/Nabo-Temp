#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PlayerStartJP

#include "Basic.hpp"


namespace SDK::Params
{

// Function PlayerStartJP.PlayerStartJP_C.BndEvt__PlayerStartJP_Box_K2Node_ComponentBoundEvent_0_ComponentEndOverlapSignature__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct PlayerStartJP_C_BndEvt__PlayerStartJP_Box_K2Node_ComponentBoundEvent_0_ComponentEndOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PlayerStartJP_C_BndEvt__PlayerStartJP_Box_K2Node_ComponentBoundEvent_0_ComponentEndOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on PlayerStartJP_C_BndEvt__PlayerStartJP_Box_K2Node_ComponentBoundEvent_0_ComponentEndOverlapSignature__DelegateSignature");
static_assert(sizeof(PlayerStartJP_C_BndEvt__PlayerStartJP_Box_K2Node_ComponentBoundEvent_0_ComponentEndOverlapSignature__DelegateSignature) == 0x000020, "Wrong size on PlayerStartJP_C_BndEvt__PlayerStartJP_Box_K2Node_ComponentBoundEvent_0_ComponentEndOverlapSignature__DelegateSignature");
static_assert(offsetof(PlayerStartJP_C_BndEvt__PlayerStartJP_Box_K2Node_ComponentBoundEvent_0_ComponentEndOverlapSignature__DelegateSignature, OverlappedComponent) == 0x000000, "Member 'PlayerStartJP_C_BndEvt__PlayerStartJP_Box_K2Node_ComponentBoundEvent_0_ComponentEndOverlapSignature__DelegateSignature::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(PlayerStartJP_C_BndEvt__PlayerStartJP_Box_K2Node_ComponentBoundEvent_0_ComponentEndOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'PlayerStartJP_C_BndEvt__PlayerStartJP_Box_K2Node_ComponentBoundEvent_0_ComponentEndOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(PlayerStartJP_C_BndEvt__PlayerStartJP_Box_K2Node_ComponentBoundEvent_0_ComponentEndOverlapSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'PlayerStartJP_C_BndEvt__PlayerStartJP_Box_K2Node_ComponentBoundEvent_0_ComponentEndOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(PlayerStartJP_C_BndEvt__PlayerStartJP_Box_K2Node_ComponentBoundEvent_0_ComponentEndOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000018, "Member 'PlayerStartJP_C_BndEvt__PlayerStartJP_Box_K2Node_ComponentBoundEvent_0_ComponentEndOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");

// Function PlayerStartJP.PlayerStartJP_C.ExecuteUbergraph_PlayerStartJP
// 0x0038 (0x0038 - 0x0000)
struct PlayerStartJP_C_ExecuteUbergraph_PlayerStartJP final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent;    // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor;             // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp;              // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex;         // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  K2Node_DynamicCast_AsPawn;                         // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PlayerStartJP_C_ExecuteUbergraph_PlayerStartJP) == 0x000008, "Wrong alignment on PlayerStartJP_C_ExecuteUbergraph_PlayerStartJP");
static_assert(sizeof(PlayerStartJP_C_ExecuteUbergraph_PlayerStartJP) == 0x000038, "Wrong size on PlayerStartJP_C_ExecuteUbergraph_PlayerStartJP");
static_assert(offsetof(PlayerStartJP_C_ExecuteUbergraph_PlayerStartJP, EntryPoint) == 0x000000, "Member 'PlayerStartJP_C_ExecuteUbergraph_PlayerStartJP::EntryPoint' has a wrong offset!");
static_assert(offsetof(PlayerStartJP_C_ExecuteUbergraph_PlayerStartJP, CallFunc_HasAuthority_ReturnValue) == 0x000004, "Member 'PlayerStartJP_C_ExecuteUbergraph_PlayerStartJP::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerStartJP_C_ExecuteUbergraph_PlayerStartJP, K2Node_ComponentBoundEvent_OverlappedComponent) == 0x000008, "Member 'PlayerStartJP_C_ExecuteUbergraph_PlayerStartJP::K2Node_ComponentBoundEvent_OverlappedComponent' has a wrong offset!");
static_assert(offsetof(PlayerStartJP_C_ExecuteUbergraph_PlayerStartJP, K2Node_ComponentBoundEvent_OtherActor) == 0x000010, "Member 'PlayerStartJP_C_ExecuteUbergraph_PlayerStartJP::K2Node_ComponentBoundEvent_OtherActor' has a wrong offset!");
static_assert(offsetof(PlayerStartJP_C_ExecuteUbergraph_PlayerStartJP, K2Node_ComponentBoundEvent_OtherComp) == 0x000018, "Member 'PlayerStartJP_C_ExecuteUbergraph_PlayerStartJP::K2Node_ComponentBoundEvent_OtherComp' has a wrong offset!");
static_assert(offsetof(PlayerStartJP_C_ExecuteUbergraph_PlayerStartJP, K2Node_ComponentBoundEvent_OtherBodyIndex) == 0x000020, "Member 'PlayerStartJP_C_ExecuteUbergraph_PlayerStartJP::K2Node_ComponentBoundEvent_OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(PlayerStartJP_C_ExecuteUbergraph_PlayerStartJP, K2Node_DynamicCast_AsPawn) == 0x000028, "Member 'PlayerStartJP_C_ExecuteUbergraph_PlayerStartJP::K2Node_DynamicCast_AsPawn' has a wrong offset!");
static_assert(offsetof(PlayerStartJP_C_ExecuteUbergraph_PlayerStartJP, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'PlayerStartJP_C_ExecuteUbergraph_PlayerStartJP::K2Node_DynamicCast_bSuccess' has a wrong offset!");

}

