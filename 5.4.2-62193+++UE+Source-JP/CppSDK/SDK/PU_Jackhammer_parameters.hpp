#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PU_Jackhammer

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function PU_Jackhammer.PU_Jackhammer_C.BndEvt__PU_Jackhammer_Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature
// 0x0118 (0x0118 - 0x0000)
struct PU_Jackhammer_C_BndEvt__PU_Jackhammer_Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bFromSweep;                                        // 0x001C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             SweepResult;                                       // 0x0020(0x00F8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(PU_Jackhammer_C_BndEvt__PU_Jackhammer_Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on PU_Jackhammer_C_BndEvt__PU_Jackhammer_Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(sizeof(PU_Jackhammer_C_BndEvt__PU_Jackhammer_Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature) == 0x000118, "Wrong size on PU_Jackhammer_C_BndEvt__PU_Jackhammer_Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(offsetof(PU_Jackhammer_C_BndEvt__PU_Jackhammer_Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OverlappedComponent) == 0x000000, "Member 'PU_Jackhammer_C_BndEvt__PU_Jackhammer_Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(PU_Jackhammer_C_BndEvt__PU_Jackhammer_Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'PU_Jackhammer_C_BndEvt__PU_Jackhammer_Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(PU_Jackhammer_C_BndEvt__PU_Jackhammer_Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'PU_Jackhammer_C_BndEvt__PU_Jackhammer_Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(PU_Jackhammer_C_BndEvt__PU_Jackhammer_Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000018, "Member 'PU_Jackhammer_C_BndEvt__PU_Jackhammer_Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(PU_Jackhammer_C_BndEvt__PU_Jackhammer_Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, bFromSweep) == 0x00001C, "Member 'PU_Jackhammer_C_BndEvt__PU_Jackhammer_Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::bFromSweep' has a wrong offset!");
static_assert(offsetof(PU_Jackhammer_C_BndEvt__PU_Jackhammer_Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, SweepResult) == 0x000020, "Member 'PU_Jackhammer_C_BndEvt__PU_Jackhammer_Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::SweepResult' has a wrong offset!");

// Function PU_Jackhammer.PU_Jackhammer_C.ExecuteUbergraph_PU_Jackhammer
// 0x02B8 (0x02B8 - 0x0000)
struct PU_Jackhammer_C_ExecuteUbergraph_PU_Jackhammer final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable;                       // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable;                 // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue_1;               // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_Event_InteractingActor;                     // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_Event_InteractionComponent;                 // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UAbilitySystemComponent*                CallFunc_GetAbilitySystemComponent_ReturnValue;    // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IGameplayTagAssetInterface> CallFunc_HasMatchingGameplayTag_self_CastInput;    // 0x0020(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasMatchingGameplayTag_ReturnValue;       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_RandomUnitVector_ReturnValue;             // 0x0038(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent;    // 0x0050(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor;             // 0x0058(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp;              // 0x0060(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex;         // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bFromSweep;             // 0x006C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6D[0x3];                                       // 0x006D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_ComponentBoundEvent_SweepResult;            // 0x0070(0x00F8)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FVector                                CallFunc_Conv_DoubleToVector_ReturnValue;          // 0x0168(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetKnockbackVelocity_ReturnValue;         // 0x0180(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue;        // 0x0198(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACharacter*                             K2Node_DynamicCast_AsCharacter;                    // 0x01B0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x01B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B9[0x7];                                      // 0x01B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x01C0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class II_Knockbackable_C>    K2Node_DynamicCast_AsI_Knockbackable;              // 0x01D8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x01E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Knockback_Void;                           // 0x01E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Knockback_Void_1;                         // 0x01EA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1EB[0x5];                                      // 0x01EB(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                K2Node_Event_Velocity;                             // 0x01F0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue_2;               // 0x0208(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_209[0x7];                                      // 0x0209(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0210(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0228(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x0240(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0258(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0268(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimer_ReturnValue;                  // 0x0270(0x0008)(NoDestructor, HasGetValueTypeHash)
	TArray<class ABP_BalloonDropSpawn_C*>         CallFunc_GetAllActorsOfClass_OutActors;            // 0x0278(0x0010)(ReferenceParm)
	class ABP_BalloonDropSpawn_C*                 CallFunc_Array_Random_OutItem;                     // 0x0288(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Random_OutIndex;                    // 0x0290(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_294[0x4];                                      // 0x0294(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue_1;    // 0x0298(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_TeleportTo_ReturnValue;                // 0x02B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PU_Jackhammer_C_ExecuteUbergraph_PU_Jackhammer) == 0x000008, "Wrong alignment on PU_Jackhammer_C_ExecuteUbergraph_PU_Jackhammer");
static_assert(sizeof(PU_Jackhammer_C_ExecuteUbergraph_PU_Jackhammer) == 0x0002B8, "Wrong size on PU_Jackhammer_C_ExecuteUbergraph_PU_Jackhammer");
static_assert(offsetof(PU_Jackhammer_C_ExecuteUbergraph_PU_Jackhammer, EntryPoint) == 0x000000, "Member 'PU_Jackhammer_C_ExecuteUbergraph_PU_Jackhammer::EntryPoint' has a wrong offset!");
static_assert(offsetof(PU_Jackhammer_C_ExecuteUbergraph_PU_Jackhammer, CallFunc_HasAuthority_ReturnValue) == 0x000004, "Member 'PU_Jackhammer_C_ExecuteUbergraph_PU_Jackhammer::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(PU_Jackhammer_C_ExecuteUbergraph_PU_Jackhammer, Temp_bool_IsClosed_Variable) == 0x000005, "Member 'PU_Jackhammer_C_ExecuteUbergraph_PU_Jackhammer::Temp_bool_IsClosed_Variable' has a wrong offset!");
static_assert(offsetof(PU_Jackhammer_C_ExecuteUbergraph_PU_Jackhammer, Temp_bool_Has_Been_Initd_Variable) == 0x000006, "Member 'PU_Jackhammer_C_ExecuteUbergraph_PU_Jackhammer::Temp_bool_Has_Been_Initd_Variable' has a wrong offset!");
static_assert(offsetof(PU_Jackhammer_C_ExecuteUbergraph_PU_Jackhammer, CallFunc_HasAuthority_ReturnValue_1) == 0x000007, "Member 'PU_Jackhammer_C_ExecuteUbergraph_PU_Jackhammer::CallFunc_HasAuthority_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PU_Jackhammer_C_ExecuteUbergraph_PU_Jackhammer, K2Node_Event_InteractingActor) == 0x000008, "Member 'PU_Jackhammer_C_ExecuteUbergraph_PU_Jackhammer::K2Node_Event_InteractingActor' has a wrong offset!");
static_assert(offsetof(PU_Jackhammer_C_ExecuteUbergraph_PU_Jackhammer, K2Node_Event_InteractionComponent) == 0x000010, "Member 'PU_Jackhammer_C_ExecuteUbergraph_PU_Jackhammer::K2Node_Event_InteractionComponent' has a wrong offset!");
static_assert(offsetof(PU_Jackhammer_C_ExecuteUbergraph_PU_Jackhammer, CallFunc_GetAbilitySystemComponent_ReturnValue) == 0x000018, "Member 'PU_Jackhammer_C_ExecuteUbergraph_PU_Jackhammer::CallFunc_GetAbilitySystemComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(PU_Jackhammer_C_ExecuteUbergraph_PU_Jackhammer, CallFunc_HasMatchingGameplayTag_self_CastInput) == 0x000020, "Member 'PU_Jackhammer_C_ExecuteUbergraph_PU_Jackhammer::CallFunc_HasMatchingGameplayTag_self_CastInput' has a wrong offset!");
static_assert(offsetof(PU_Jackhammer_C_ExecuteUbergraph_PU_Jackhammer, CallFunc_HasMatchingGameplayTag_ReturnValue) == 0x000030, "Member 'PU_Jackhammer_C_ExecuteUbergraph_PU_Jackhammer::CallFunc_HasMatchingGameplayTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(PU_Jackhammer_C_ExecuteUbergraph_PU_Jackhammer, CallFunc_RandomUnitVector_ReturnValue) == 0x000038, "Member 'PU_Jackhammer_C_ExecuteUbergraph_PU_Jackhammer::CallFunc_RandomUnitVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(PU_Jackhammer_C_ExecuteUbergraph_PU_Jackhammer, K2Node_ComponentBoundEvent_OverlappedComponent) == 0x000050, "Member 'PU_Jackhammer_C_ExecuteUbergraph_PU_Jackhammer::K2Node_ComponentBoundEvent_OverlappedComponent' has a wrong offset!");
static_assert(offsetof(PU_Jackhammer_C_ExecuteUbergraph_PU_Jackhammer, K2Node_ComponentBoundEvent_OtherActor) == 0x000058, "Member 'PU_Jackhammer_C_ExecuteUbergraph_PU_Jackhammer::K2Node_ComponentBoundEvent_OtherActor' has a wrong offset!");
static_assert(offsetof(PU_Jackhammer_C_ExecuteUbergraph_PU_Jackhammer, K2Node_ComponentBoundEvent_OtherComp) == 0x000060, "Member 'PU_Jackhammer_C_ExecuteUbergraph_PU_Jackhammer::K2Node_ComponentBoundEvent_OtherComp' has a wrong offset!");
static_assert(offsetof(PU_Jackhammer_C_ExecuteUbergraph_PU_Jackhammer, K2Node_ComponentBoundEvent_OtherBodyIndex) == 0x000068, "Member 'PU_Jackhammer_C_ExecuteUbergraph_PU_Jackhammer::K2Node_ComponentBoundEvent_OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(PU_Jackhammer_C_ExecuteUbergraph_PU_Jackhammer, K2Node_ComponentBoundEvent_bFromSweep) == 0x00006C, "Member 'PU_Jackhammer_C_ExecuteUbergraph_PU_Jackhammer::K2Node_ComponentBoundEvent_bFromSweep' has a wrong offset!");
static_assert(offsetof(PU_Jackhammer_C_ExecuteUbergraph_PU_Jackhammer, K2Node_ComponentBoundEvent_SweepResult) == 0x000070, "Member 'PU_Jackhammer_C_ExecuteUbergraph_PU_Jackhammer::K2Node_ComponentBoundEvent_SweepResult' has a wrong offset!");
static_assert(offsetof(PU_Jackhammer_C_ExecuteUbergraph_PU_Jackhammer, CallFunc_Conv_DoubleToVector_ReturnValue) == 0x000168, "Member 'PU_Jackhammer_C_ExecuteUbergraph_PU_Jackhammer::CallFunc_Conv_DoubleToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(PU_Jackhammer_C_ExecuteUbergraph_PU_Jackhammer, CallFunc_GetKnockbackVelocity_ReturnValue) == 0x000180, "Member 'PU_Jackhammer_C_ExecuteUbergraph_PU_Jackhammer::CallFunc_GetKnockbackVelocity_ReturnValue' has a wrong offset!");
static_assert(offsetof(PU_Jackhammer_C_ExecuteUbergraph_PU_Jackhammer, CallFunc_Multiply_VectorVector_ReturnValue) == 0x000198, "Member 'PU_Jackhammer_C_ExecuteUbergraph_PU_Jackhammer::CallFunc_Multiply_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(PU_Jackhammer_C_ExecuteUbergraph_PU_Jackhammer, K2Node_DynamicCast_AsCharacter) == 0x0001B0, "Member 'PU_Jackhammer_C_ExecuteUbergraph_PU_Jackhammer::K2Node_DynamicCast_AsCharacter' has a wrong offset!");
static_assert(offsetof(PU_Jackhammer_C_ExecuteUbergraph_PU_Jackhammer, K2Node_DynamicCast_bSuccess) == 0x0001B8, "Member 'PU_Jackhammer_C_ExecuteUbergraph_PU_Jackhammer::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(PU_Jackhammer_C_ExecuteUbergraph_PU_Jackhammer, CallFunc_Add_VectorVector_ReturnValue) == 0x0001C0, "Member 'PU_Jackhammer_C_ExecuteUbergraph_PU_Jackhammer::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(PU_Jackhammer_C_ExecuteUbergraph_PU_Jackhammer, K2Node_DynamicCast_AsI_Knockbackable) == 0x0001D8, "Member 'PU_Jackhammer_C_ExecuteUbergraph_PU_Jackhammer::K2Node_DynamicCast_AsI_Knockbackable' has a wrong offset!");
static_assert(offsetof(PU_Jackhammer_C_ExecuteUbergraph_PU_Jackhammer, K2Node_DynamicCast_bSuccess_1) == 0x0001E8, "Member 'PU_Jackhammer_C_ExecuteUbergraph_PU_Jackhammer::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(PU_Jackhammer_C_ExecuteUbergraph_PU_Jackhammer, CallFunc_Knockback_Void) == 0x0001E9, "Member 'PU_Jackhammer_C_ExecuteUbergraph_PU_Jackhammer::CallFunc_Knockback_Void' has a wrong offset!");
static_assert(offsetof(PU_Jackhammer_C_ExecuteUbergraph_PU_Jackhammer, CallFunc_Knockback_Void_1) == 0x0001EA, "Member 'PU_Jackhammer_C_ExecuteUbergraph_PU_Jackhammer::CallFunc_Knockback_Void_1' has a wrong offset!");
static_assert(offsetof(PU_Jackhammer_C_ExecuteUbergraph_PU_Jackhammer, K2Node_Event_Velocity) == 0x0001F0, "Member 'PU_Jackhammer_C_ExecuteUbergraph_PU_Jackhammer::K2Node_Event_Velocity' has a wrong offset!");
static_assert(offsetof(PU_Jackhammer_C_ExecuteUbergraph_PU_Jackhammer, CallFunc_HasAuthority_ReturnValue_2) == 0x000208, "Member 'PU_Jackhammer_C_ExecuteUbergraph_PU_Jackhammer::CallFunc_HasAuthority_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PU_Jackhammer_C_ExecuteUbergraph_PU_Jackhammer, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000210, "Member 'PU_Jackhammer_C_ExecuteUbergraph_PU_Jackhammer::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(PU_Jackhammer_C_ExecuteUbergraph_PU_Jackhammer, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000228, "Member 'PU_Jackhammer_C_ExecuteUbergraph_PU_Jackhammer::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(PU_Jackhammer_C_ExecuteUbergraph_PU_Jackhammer, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x000240, "Member 'PU_Jackhammer_C_ExecuteUbergraph_PU_Jackhammer::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PU_Jackhammer_C_ExecuteUbergraph_PU_Jackhammer, K2Node_CreateDelegate_OutputDelegate) == 0x000258, "Member 'PU_Jackhammer_C_ExecuteUbergraph_PU_Jackhammer::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(PU_Jackhammer_C_ExecuteUbergraph_PU_Jackhammer, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000268, "Member 'PU_Jackhammer_C_ExecuteUbergraph_PU_Jackhammer::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(PU_Jackhammer_C_ExecuteUbergraph_PU_Jackhammer, CallFunc_K2_SetTimer_ReturnValue) == 0x000270, "Member 'PU_Jackhammer_C_ExecuteUbergraph_PU_Jackhammer::CallFunc_K2_SetTimer_ReturnValue' has a wrong offset!");
static_assert(offsetof(PU_Jackhammer_C_ExecuteUbergraph_PU_Jackhammer, CallFunc_GetAllActorsOfClass_OutActors) == 0x000278, "Member 'PU_Jackhammer_C_ExecuteUbergraph_PU_Jackhammer::CallFunc_GetAllActorsOfClass_OutActors' has a wrong offset!");
static_assert(offsetof(PU_Jackhammer_C_ExecuteUbergraph_PU_Jackhammer, CallFunc_Array_Random_OutItem) == 0x000288, "Member 'PU_Jackhammer_C_ExecuteUbergraph_PU_Jackhammer::CallFunc_Array_Random_OutItem' has a wrong offset!");
static_assert(offsetof(PU_Jackhammer_C_ExecuteUbergraph_PU_Jackhammer, CallFunc_Array_Random_OutIndex) == 0x000290, "Member 'PU_Jackhammer_C_ExecuteUbergraph_PU_Jackhammer::CallFunc_Array_Random_OutIndex' has a wrong offset!");
static_assert(offsetof(PU_Jackhammer_C_ExecuteUbergraph_PU_Jackhammer, CallFunc_K2_GetComponentLocation_ReturnValue_1) == 0x000298, "Member 'PU_Jackhammer_C_ExecuteUbergraph_PU_Jackhammer::CallFunc_K2_GetComponentLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PU_Jackhammer_C_ExecuteUbergraph_PU_Jackhammer, CallFunc_K2_TeleportTo_ReturnValue) == 0x0002B0, "Member 'PU_Jackhammer_C_ExecuteUbergraph_PU_Jackhammer::CallFunc_K2_TeleportTo_ReturnValue' has a wrong offset!");

// Function PU_Jackhammer.PU_Jackhammer_C.GetKnockbackVelocity
// 0x00B0 (0x00B0 - 0x0000)
struct PU_Jackhammer_C_GetKnockbackVelocity final
{
public:
	class AActor*                                 HitActor;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                ReturnValue;                                       // 0x0008(0x0018)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0020(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0038(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_DoubleToVector_ReturnValue;          // 0x0050(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_FindLookAtRotation_ReturnValue;           // 0x0068(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue;             // 0x0080(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue;        // 0x0098(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PU_Jackhammer_C_GetKnockbackVelocity) == 0x000008, "Wrong alignment on PU_Jackhammer_C_GetKnockbackVelocity");
static_assert(sizeof(PU_Jackhammer_C_GetKnockbackVelocity) == 0x0000B0, "Wrong size on PU_Jackhammer_C_GetKnockbackVelocity");
static_assert(offsetof(PU_Jackhammer_C_GetKnockbackVelocity, HitActor) == 0x000000, "Member 'PU_Jackhammer_C_GetKnockbackVelocity::HitActor' has a wrong offset!");
static_assert(offsetof(PU_Jackhammer_C_GetKnockbackVelocity, ReturnValue) == 0x000008, "Member 'PU_Jackhammer_C_GetKnockbackVelocity::ReturnValue' has a wrong offset!");
static_assert(offsetof(PU_Jackhammer_C_GetKnockbackVelocity, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000020, "Member 'PU_Jackhammer_C_GetKnockbackVelocity::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(PU_Jackhammer_C_GetKnockbackVelocity, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000038, "Member 'PU_Jackhammer_C_GetKnockbackVelocity::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(PU_Jackhammer_C_GetKnockbackVelocity, CallFunc_Conv_DoubleToVector_ReturnValue) == 0x000050, "Member 'PU_Jackhammer_C_GetKnockbackVelocity::CallFunc_Conv_DoubleToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(PU_Jackhammer_C_GetKnockbackVelocity, CallFunc_FindLookAtRotation_ReturnValue) == 0x000068, "Member 'PU_Jackhammer_C_GetKnockbackVelocity::CallFunc_FindLookAtRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(PU_Jackhammer_C_GetKnockbackVelocity, CallFunc_GetForwardVector_ReturnValue) == 0x000080, "Member 'PU_Jackhammer_C_GetKnockbackVelocity::CallFunc_GetForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(PU_Jackhammer_C_GetKnockbackVelocity, CallFunc_Multiply_VectorVector_ReturnValue) == 0x000098, "Member 'PU_Jackhammer_C_GetKnockbackVelocity::CallFunc_Multiply_VectorVector_ReturnValue' has a wrong offset!");

// Function PU_Jackhammer.PU_Jackhammer_C.GrantJackhammer
// 0x0028 (0x0028 - 0x0000)
struct PU_Jackhammer_C_GrantJackhammer final
{
public:
	class AActor*                                 InteractingActor_0;                                // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UInventoryComponent*                    CallFunc_GetComponentByClass_ReturnValue;          // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UItemInstance*                          CallFunc_AddItemDefinition_ReturnValue;            // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UCharacterItemWheelComponent_C*         CallFunc_GetComponentByClass_ReturnValue_1;        // 0x0020(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PU_Jackhammer_C_GrantJackhammer) == 0x000008, "Wrong alignment on PU_Jackhammer_C_GrantJackhammer");
static_assert(sizeof(PU_Jackhammer_C_GrantJackhammer) == 0x000028, "Wrong size on PU_Jackhammer_C_GrantJackhammer");
static_assert(offsetof(PU_Jackhammer_C_GrantJackhammer, InteractingActor_0) == 0x000000, "Member 'PU_Jackhammer_C_GrantJackhammer::InteractingActor_0' has a wrong offset!");
static_assert(offsetof(PU_Jackhammer_C_GrantJackhammer, CallFunc_HasAuthority_ReturnValue) == 0x000008, "Member 'PU_Jackhammer_C_GrantJackhammer::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(PU_Jackhammer_C_GrantJackhammer, CallFunc_GetComponentByClass_ReturnValue) == 0x000010, "Member 'PU_Jackhammer_C_GrantJackhammer::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(PU_Jackhammer_C_GrantJackhammer, CallFunc_AddItemDefinition_ReturnValue) == 0x000018, "Member 'PU_Jackhammer_C_GrantJackhammer::CallFunc_AddItemDefinition_ReturnValue' has a wrong offset!");
static_assert(offsetof(PU_Jackhammer_C_GrantJackhammer, CallFunc_GetComponentByClass_ReturnValue_1) == 0x000020, "Member 'PU_Jackhammer_C_GrantJackhammer::CallFunc_GetComponentByClass_ReturnValue_1' has a wrong offset!");

// Function PU_Jackhammer.PU_Jackhammer_C.CanActivateTrap
// 0x0001 (0x0001 - 0x0000)
struct PU_Jackhammer_C_CanActivateTrap final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PU_Jackhammer_C_CanActivateTrap) == 0x000001, "Wrong alignment on PU_Jackhammer_C_CanActivateTrap");
static_assert(sizeof(PU_Jackhammer_C_CanActivateTrap) == 0x000001, "Wrong size on PU_Jackhammer_C_CanActivateTrap");
static_assert(offsetof(PU_Jackhammer_C_CanActivateTrap, ReturnValue) == 0x000000, "Member 'PU_Jackhammer_C_CanActivateTrap::ReturnValue' has a wrong offset!");

// Function PU_Jackhammer.PU_Jackhammer_C.Multi_Launch
// 0x0018 (0x0018 - 0x0000)
struct PU_Jackhammer_C_Multi_Launch final
{
public:
	struct FVector                                Velocity;                                          // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PU_Jackhammer_C_Multi_Launch) == 0x000008, "Wrong alignment on PU_Jackhammer_C_Multi_Launch");
static_assert(sizeof(PU_Jackhammer_C_Multi_Launch) == 0x000018, "Wrong size on PU_Jackhammer_C_Multi_Launch");
static_assert(offsetof(PU_Jackhammer_C_Multi_Launch, Velocity) == 0x000000, "Member 'PU_Jackhammer_C_Multi_Launch::Velocity' has a wrong offset!");

// Function PU_Jackhammer.PU_Jackhammer_C.PostInteract
// 0x0010 (0x0010 - 0x0000)
struct PU_Jackhammer_C_PostInteract final
{
public:
	class AActor*                                 InteractingActor_0;                                // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    InteractionComponent;                              // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PU_Jackhammer_C_PostInteract) == 0x000008, "Wrong alignment on PU_Jackhammer_C_PostInteract");
static_assert(sizeof(PU_Jackhammer_C_PostInteract) == 0x000010, "Wrong size on PU_Jackhammer_C_PostInteract");
static_assert(offsetof(PU_Jackhammer_C_PostInteract, InteractingActor_0) == 0x000000, "Member 'PU_Jackhammer_C_PostInteract::InteractingActor_0' has a wrong offset!");
static_assert(offsetof(PU_Jackhammer_C_PostInteract, InteractionComponent) == 0x000008, "Member 'PU_Jackhammer_C_PostInteract::InteractionComponent' has a wrong offset!");

}

