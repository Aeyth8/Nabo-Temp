#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WI_CharacterLocator

#include "Basic.hpp"

#include "E_NameplateDistanceState_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "UMG_structs.hpp"


namespace SDK::Params
{

// Function WI_CharacterLocator.WI_CharacterLocator_C.ExecuteUbergraph_WI_CharacterLocator
// 0x00A8 (0x00A8 - 0x0000)
struct WI_CharacterLocator_C_ExecuteUbergraph_WI_CharacterLocator final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                Temp_object_Variable;                              // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UNeighborDefinition*                    K2Node_DynamicCast_AsNeighbor_Definition;          // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Temp_byte_Variable;                                // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A[0x6];                                       // 0x001A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class ITeamableInterface>    K2Node_DynamicCast_AsTeamable_Interface;           // 0x0020(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetTeamID_ReturnValue;                    // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_32[0x6];                                       // 0x0032(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                K2Node_CustomEvent_Loaded;                         // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_CustomEvent_Owner;                          // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ACharacter*                             K2Node_DynamicCast_AsCharacter;                    // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_52[0x6];                                       // 0x0052(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerStateJP*                         K2Node_DynamicCast_AsPlayer_State_JP;              // 0x0058(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_61[0x3];                                       // 0x0061(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           CallFunc_GetNeighborIdentifier_ReturnValue;        // 0x0064(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_TryGetNeighborDefinition_Succeeded;       // 0x006C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6D[0x3];                                       // 0x006D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UNeighborDefinition>     CallFunc_TryGetNeighborDefinition_ReturnValue;     // 0x0070(0x0028)(UObjectWrapper, HasGetValueTypeHash)
	TDelegate<void(class UObject* Loaded)>        K2Node_CreateDelegate_OutputDelegate;              // 0x0098(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WI_CharacterLocator_C_ExecuteUbergraph_WI_CharacterLocator) == 0x000008, "Wrong alignment on WI_CharacterLocator_C_ExecuteUbergraph_WI_CharacterLocator");
static_assert(sizeof(WI_CharacterLocator_C_ExecuteUbergraph_WI_CharacterLocator) == 0x0000A8, "Wrong size on WI_CharacterLocator_C_ExecuteUbergraph_WI_CharacterLocator");
static_assert(offsetof(WI_CharacterLocator_C_ExecuteUbergraph_WI_CharacterLocator, EntryPoint) == 0x000000, "Member 'WI_CharacterLocator_C_ExecuteUbergraph_WI_CharacterLocator::EntryPoint' has a wrong offset!");
static_assert(offsetof(WI_CharacterLocator_C_ExecuteUbergraph_WI_CharacterLocator, Temp_object_Variable) == 0x000008, "Member 'WI_CharacterLocator_C_ExecuteUbergraph_WI_CharacterLocator::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(WI_CharacterLocator_C_ExecuteUbergraph_WI_CharacterLocator, K2Node_DynamicCast_AsNeighbor_Definition) == 0x000010, "Member 'WI_CharacterLocator_C_ExecuteUbergraph_WI_CharacterLocator::K2Node_DynamicCast_AsNeighbor_Definition' has a wrong offset!");
static_assert(offsetof(WI_CharacterLocator_C_ExecuteUbergraph_WI_CharacterLocator, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'WI_CharacterLocator_C_ExecuteUbergraph_WI_CharacterLocator::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WI_CharacterLocator_C_ExecuteUbergraph_WI_CharacterLocator, Temp_byte_Variable) == 0x000019, "Member 'WI_CharacterLocator_C_ExecuteUbergraph_WI_CharacterLocator::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WI_CharacterLocator_C_ExecuteUbergraph_WI_CharacterLocator, K2Node_DynamicCast_AsTeamable_Interface) == 0x000020, "Member 'WI_CharacterLocator_C_ExecuteUbergraph_WI_CharacterLocator::K2Node_DynamicCast_AsTeamable_Interface' has a wrong offset!");
static_assert(offsetof(WI_CharacterLocator_C_ExecuteUbergraph_WI_CharacterLocator, K2Node_DynamicCast_bSuccess_1) == 0x000030, "Member 'WI_CharacterLocator_C_ExecuteUbergraph_WI_CharacterLocator::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(WI_CharacterLocator_C_ExecuteUbergraph_WI_CharacterLocator, CallFunc_GetTeamID_ReturnValue) == 0x000031, "Member 'WI_CharacterLocator_C_ExecuteUbergraph_WI_CharacterLocator::CallFunc_GetTeamID_ReturnValue' has a wrong offset!");
static_assert(offsetof(WI_CharacterLocator_C_ExecuteUbergraph_WI_CharacterLocator, K2Node_CustomEvent_Loaded) == 0x000038, "Member 'WI_CharacterLocator_C_ExecuteUbergraph_WI_CharacterLocator::K2Node_CustomEvent_Loaded' has a wrong offset!");
static_assert(offsetof(WI_CharacterLocator_C_ExecuteUbergraph_WI_CharacterLocator, K2Node_CustomEvent_Owner) == 0x000040, "Member 'WI_CharacterLocator_C_ExecuteUbergraph_WI_CharacterLocator::K2Node_CustomEvent_Owner' has a wrong offset!");
static_assert(offsetof(WI_CharacterLocator_C_ExecuteUbergraph_WI_CharacterLocator, K2Node_DynamicCast_AsCharacter) == 0x000048, "Member 'WI_CharacterLocator_C_ExecuteUbergraph_WI_CharacterLocator::K2Node_DynamicCast_AsCharacter' has a wrong offset!");
static_assert(offsetof(WI_CharacterLocator_C_ExecuteUbergraph_WI_CharacterLocator, K2Node_DynamicCast_bSuccess_2) == 0x000050, "Member 'WI_CharacterLocator_C_ExecuteUbergraph_WI_CharacterLocator::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(WI_CharacterLocator_C_ExecuteUbergraph_WI_CharacterLocator, CallFunc_IsValid_ReturnValue) == 0x000051, "Member 'WI_CharacterLocator_C_ExecuteUbergraph_WI_CharacterLocator::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WI_CharacterLocator_C_ExecuteUbergraph_WI_CharacterLocator, K2Node_DynamicCast_AsPlayer_State_JP) == 0x000058, "Member 'WI_CharacterLocator_C_ExecuteUbergraph_WI_CharacterLocator::K2Node_DynamicCast_AsPlayer_State_JP' has a wrong offset!");
static_assert(offsetof(WI_CharacterLocator_C_ExecuteUbergraph_WI_CharacterLocator, K2Node_DynamicCast_bSuccess_3) == 0x000060, "Member 'WI_CharacterLocator_C_ExecuteUbergraph_WI_CharacterLocator::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(WI_CharacterLocator_C_ExecuteUbergraph_WI_CharacterLocator, CallFunc_GetNeighborIdentifier_ReturnValue) == 0x000064, "Member 'WI_CharacterLocator_C_ExecuteUbergraph_WI_CharacterLocator::CallFunc_GetNeighborIdentifier_ReturnValue' has a wrong offset!");
static_assert(offsetof(WI_CharacterLocator_C_ExecuteUbergraph_WI_CharacterLocator, CallFunc_TryGetNeighborDefinition_Succeeded) == 0x00006C, "Member 'WI_CharacterLocator_C_ExecuteUbergraph_WI_CharacterLocator::CallFunc_TryGetNeighborDefinition_Succeeded' has a wrong offset!");
static_assert(offsetof(WI_CharacterLocator_C_ExecuteUbergraph_WI_CharacterLocator, CallFunc_TryGetNeighborDefinition_ReturnValue) == 0x000070, "Member 'WI_CharacterLocator_C_ExecuteUbergraph_WI_CharacterLocator::CallFunc_TryGetNeighborDefinition_ReturnValue' has a wrong offset!");
static_assert(offsetof(WI_CharacterLocator_C_ExecuteUbergraph_WI_CharacterLocator, K2Node_CreateDelegate_OutputDelegate) == 0x000098, "Member 'WI_CharacterLocator_C_ExecuteUbergraph_WI_CharacterLocator::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");

// Function WI_CharacterLocator.WI_CharacterLocator_C.InitWidget
// 0x0008 (0x0008 - 0x0000)
struct WI_CharacterLocator_C_InitWidget final
{
public:
	class AActor*                                 Owner_0;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WI_CharacterLocator_C_InitWidget) == 0x000008, "Wrong alignment on WI_CharacterLocator_C_InitWidget");
static_assert(sizeof(WI_CharacterLocator_C_InitWidget) == 0x000008, "Wrong size on WI_CharacterLocator_C_InitWidget");
static_assert(offsetof(WI_CharacterLocator_C_InitWidget, Owner_0) == 0x000000, "Member 'WI_CharacterLocator_C_InitWidget::Owner_0' has a wrong offset!");

// Function WI_CharacterLocator.WI_CharacterLocator_C.OnLoaded_86193B4D45EA099573C2B68F23262776
// 0x0008 (0x0008 - 0x0000)
struct WI_CharacterLocator_C_OnLoaded_86193B4D45EA099573C2B68F23262776 final
{
public:
	class UObject*                                Loaded;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WI_CharacterLocator_C_OnLoaded_86193B4D45EA099573C2B68F23262776) == 0x000008, "Wrong alignment on WI_CharacterLocator_C_OnLoaded_86193B4D45EA099573C2B68F23262776");
static_assert(sizeof(WI_CharacterLocator_C_OnLoaded_86193B4D45EA099573C2B68F23262776) == 0x000008, "Wrong size on WI_CharacterLocator_C_OnLoaded_86193B4D45EA099573C2B68F23262776");
static_assert(offsetof(WI_CharacterLocator_C_OnLoaded_86193B4D45EA099573C2B68F23262776, Loaded) == 0x000000, "Member 'WI_CharacterLocator_C_OnLoaded_86193B4D45EA099573C2B68F23262776::Loaded' has a wrong offset!");

// Function WI_CharacterLocator.WI_CharacterLocator_C.SetCombatState
// 0x0018 (0x0018 - 0x0000)
struct WI_CharacterLocator_C_SetCombatState final
{
public:
	bool                                          Active;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationForward_ReturnValue;         // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WI_CharacterLocator_C_SetCombatState) == 0x000008, "Wrong alignment on WI_CharacterLocator_C_SetCombatState");
static_assert(sizeof(WI_CharacterLocator_C_SetCombatState) == 0x000018, "Wrong size on WI_CharacterLocator_C_SetCombatState");
static_assert(offsetof(WI_CharacterLocator_C_SetCombatState, Active) == 0x000000, "Member 'WI_CharacterLocator_C_SetCombatState::Active' has a wrong offset!");
static_assert(offsetof(WI_CharacterLocator_C_SetCombatState, Temp_bool_Variable) == 0x000001, "Member 'WI_CharacterLocator_C_SetCombatState::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WI_CharacterLocator_C_SetCombatState, Temp_byte_Variable) == 0x000002, "Member 'WI_CharacterLocator_C_SetCombatState::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WI_CharacterLocator_C_SetCombatState, Temp_byte_Variable_1) == 0x000003, "Member 'WI_CharacterLocator_C_SetCombatState::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WI_CharacterLocator_C_SetCombatState, CallFunc_PlayAnimationForward_ReturnValue) == 0x000008, "Member 'WI_CharacterLocator_C_SetCombatState::CallFunc_PlayAnimationForward_ReturnValue' has a wrong offset!");
static_assert(offsetof(WI_CharacterLocator_C_SetCombatState, K2Node_Select_Default) == 0x000010, "Member 'WI_CharacterLocator_C_SetCombatState::K2Node_Select_Default' has a wrong offset!");

// Function WI_CharacterLocator.WI_CharacterLocator_C.SetTeamVisibility
// 0x0030 (0x0030 - 0x0000)
struct WI_CharacterLocator_C_SetTeamVisibility final
{
public:
	float                                         Temp_real_Variable;                                // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_real_Variable_1;                              // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Temp_byte_Variable;                                // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A[0x6];                                        // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_GetPlayerPawn_ReturnValue;                // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class ITeamableInterface>    K2Node_DynamicCast_AsTeamable_Interface;           // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetTeamID_ReturnValue;                    // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2B[0x1];                                       // 0x002B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Select_Default;                             // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WI_CharacterLocator_C_SetTeamVisibility) == 0x000008, "Wrong alignment on WI_CharacterLocator_C_SetTeamVisibility");
static_assert(sizeof(WI_CharacterLocator_C_SetTeamVisibility) == 0x000030, "Wrong size on WI_CharacterLocator_C_SetTeamVisibility");
static_assert(offsetof(WI_CharacterLocator_C_SetTeamVisibility, Temp_real_Variable) == 0x000000, "Member 'WI_CharacterLocator_C_SetTeamVisibility::Temp_real_Variable' has a wrong offset!");
static_assert(offsetof(WI_CharacterLocator_C_SetTeamVisibility, Temp_real_Variable_1) == 0x000004, "Member 'WI_CharacterLocator_C_SetTeamVisibility::Temp_real_Variable_1' has a wrong offset!");
static_assert(offsetof(WI_CharacterLocator_C_SetTeamVisibility, Temp_byte_Variable) == 0x000008, "Member 'WI_CharacterLocator_C_SetTeamVisibility::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WI_CharacterLocator_C_SetTeamVisibility, Temp_bool_Variable) == 0x000009, "Member 'WI_CharacterLocator_C_SetTeamVisibility::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WI_CharacterLocator_C_SetTeamVisibility, CallFunc_GetPlayerPawn_ReturnValue) == 0x000010, "Member 'WI_CharacterLocator_C_SetTeamVisibility::CallFunc_GetPlayerPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(WI_CharacterLocator_C_SetTeamVisibility, K2Node_DynamicCast_AsTeamable_Interface) == 0x000018, "Member 'WI_CharacterLocator_C_SetTeamVisibility::K2Node_DynamicCast_AsTeamable_Interface' has a wrong offset!");
static_assert(offsetof(WI_CharacterLocator_C_SetTeamVisibility, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'WI_CharacterLocator_C_SetTeamVisibility::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WI_CharacterLocator_C_SetTeamVisibility, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000029, "Member 'WI_CharacterLocator_C_SetTeamVisibility::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(WI_CharacterLocator_C_SetTeamVisibility, CallFunc_GetTeamID_ReturnValue) == 0x00002A, "Member 'WI_CharacterLocator_C_SetTeamVisibility::CallFunc_GetTeamID_ReturnValue' has a wrong offset!");
static_assert(offsetof(WI_CharacterLocator_C_SetTeamVisibility, K2Node_Select_Default) == 0x00002C, "Member 'WI_CharacterLocator_C_SetTeamVisibility::K2Node_Select_Default' has a wrong offset!");

// Function WI_CharacterLocator.WI_CharacterLocator_C.UpdateDistanceState
// 0x0002 (0x0002 - 0x0000)
struct WI_CharacterLocator_C_UpdateDistanceState final
{
public:
	E_NameplateDistanceState                      DistanceState_0;                                   // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WI_CharacterLocator_C_UpdateDistanceState) == 0x000001, "Wrong alignment on WI_CharacterLocator_C_UpdateDistanceState");
static_assert(sizeof(WI_CharacterLocator_C_UpdateDistanceState) == 0x000002, "Wrong size on WI_CharacterLocator_C_UpdateDistanceState");
static_assert(offsetof(WI_CharacterLocator_C_UpdateDistanceState, DistanceState_0) == 0x000000, "Member 'WI_CharacterLocator_C_UpdateDistanceState::DistanceState_0' has a wrong offset!");
static_assert(offsetof(WI_CharacterLocator_C_UpdateDistanceState, K2Node_SwitchEnum_CmpSuccess) == 0x000001, "Member 'WI_CharacterLocator_C_UpdateDistanceState::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function WI_CharacterLocator.WI_CharacterLocator_C.UpdateRenderScale
// 0x0020 (0x0020 - 0x0000)
struct WI_CharacterLocator_C_UpdateRenderScale final
{
public:
	double                                        ScaleX;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        ScaleY;                                            // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WI_CharacterLocator_C_UpdateRenderScale) == 0x000008, "Wrong alignment on WI_CharacterLocator_C_UpdateRenderScale");
static_assert(sizeof(WI_CharacterLocator_C_UpdateRenderScale) == 0x000020, "Wrong size on WI_CharacterLocator_C_UpdateRenderScale");
static_assert(offsetof(WI_CharacterLocator_C_UpdateRenderScale, ScaleX) == 0x000000, "Member 'WI_CharacterLocator_C_UpdateRenderScale::ScaleX' has a wrong offset!");
static_assert(offsetof(WI_CharacterLocator_C_UpdateRenderScale, ScaleY) == 0x000008, "Member 'WI_CharacterLocator_C_UpdateRenderScale::ScaleY' has a wrong offset!");
static_assert(offsetof(WI_CharacterLocator_C_UpdateRenderScale, CallFunc_MakeVector2D_ReturnValue) == 0x000010, "Member 'WI_CharacterLocator_C_UpdateRenderScale::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");

}

