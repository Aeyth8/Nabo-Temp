#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GA_BlockTrashCanLid

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "GameplayAbilities_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function GA_BlockTrashCanLid.GA_BlockTrashCanLid_C.ExecuteUbergraph_GA_BlockTrashCanLid
// 0x0008 (0x0008 - 0x0000)
struct GA_BlockTrashCanLid_C_ExecuteUbergraph_GA_BlockTrashCanLid final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bWasCancelled;                        // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_BlockTrashCanLid_C_ExecuteUbergraph_GA_BlockTrashCanLid) == 0x000004, "Wrong alignment on GA_BlockTrashCanLid_C_ExecuteUbergraph_GA_BlockTrashCanLid");
static_assert(sizeof(GA_BlockTrashCanLid_C_ExecuteUbergraph_GA_BlockTrashCanLid) == 0x000008, "Wrong size on GA_BlockTrashCanLid_C_ExecuteUbergraph_GA_BlockTrashCanLid");
static_assert(offsetof(GA_BlockTrashCanLid_C_ExecuteUbergraph_GA_BlockTrashCanLid, EntryPoint) == 0x000000, "Member 'GA_BlockTrashCanLid_C_ExecuteUbergraph_GA_BlockTrashCanLid::EntryPoint' has a wrong offset!");
static_assert(offsetof(GA_BlockTrashCanLid_C_ExecuteUbergraph_GA_BlockTrashCanLid, K2Node_Event_bWasCancelled) == 0x000004, "Member 'GA_BlockTrashCanLid_C_ExecuteUbergraph_GA_BlockTrashCanLid::K2Node_Event_bWasCancelled' has a wrong offset!");

// Function GA_BlockTrashCanLid.GA_BlockTrashCanLid_C.K2_OnEndAbility
// 0x0001 (0x0001 - 0x0000)
struct GA_BlockTrashCanLid_C_K2_OnEndAbility final
{
public:
	bool                                          bWasCancelled;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_BlockTrashCanLid_C_K2_OnEndAbility) == 0x000001, "Wrong alignment on GA_BlockTrashCanLid_C_K2_OnEndAbility");
static_assert(sizeof(GA_BlockTrashCanLid_C_K2_OnEndAbility) == 0x000001, "Wrong size on GA_BlockTrashCanLid_C_K2_OnEndAbility");
static_assert(offsetof(GA_BlockTrashCanLid_C_K2_OnEndAbility, bWasCancelled) == 0x000000, "Member 'GA_BlockTrashCanLid_C_K2_OnEndAbility::bWasCancelled' has a wrong offset!");

// Function GA_BlockTrashCanLid.GA_BlockTrashCanLid_C.UpdateBlockingVolume
// 0x0270 (0x0270 - 0x0000)
struct GA_BlockTrashCanLid_C_UpdateBlockingVolume final
{
public:
	struct FGameplayAbilityActorInfo              CallFunc_GetActorInfo_ReturnValue;                 // 0x0000(0x0048)(ContainsInstancedReference)
	struct FVector                                CallFunc_Conv_DoubleToVector_ReturnValue;          // 0x0048(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_ResidentCharacter_C*                K2Node_DynamicCast_AsBP_Resident_Character;        // 0x0060(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_69[0x7];                                       // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USceneComponent*                        CallFunc_K2_GetRootComponent_ReturnValue;          // 0x0070(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_DoubleToVector_ReturnValue_1;        // 0x0078(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetUpVector_ReturnValue;                  // 0x0090(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        CallFunc_K2_GetRootComponent_ReturnValue_1;        // 0x00A8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue;        // 0x00B0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue;             // 0x00C8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue_1;      // 0x00E0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x00FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x0100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_104[0x4];                                      // 0x0104(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0108(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0120(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_K2_SetActorRotation_ReturnValue;          // 0x0138(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_139[0x7];                                      // 0x0139(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0140(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_1;           // 0x0158(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetActorLocation_SweepHitResult;       // 0x0170(0x00F8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_SetActorLocation_ReturnValue;          // 0x0268(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_BlockTrashCanLid_C_UpdateBlockingVolume) == 0x000008, "Wrong alignment on GA_BlockTrashCanLid_C_UpdateBlockingVolume");
static_assert(sizeof(GA_BlockTrashCanLid_C_UpdateBlockingVolume) == 0x000270, "Wrong size on GA_BlockTrashCanLid_C_UpdateBlockingVolume");
static_assert(offsetof(GA_BlockTrashCanLid_C_UpdateBlockingVolume, CallFunc_GetActorInfo_ReturnValue) == 0x000000, "Member 'GA_BlockTrashCanLid_C_UpdateBlockingVolume::CallFunc_GetActorInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_BlockTrashCanLid_C_UpdateBlockingVolume, CallFunc_Conv_DoubleToVector_ReturnValue) == 0x000048, "Member 'GA_BlockTrashCanLid_C_UpdateBlockingVolume::CallFunc_Conv_DoubleToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_BlockTrashCanLid_C_UpdateBlockingVolume, K2Node_DynamicCast_AsBP_Resident_Character) == 0x000060, "Member 'GA_BlockTrashCanLid_C_UpdateBlockingVolume::K2Node_DynamicCast_AsBP_Resident_Character' has a wrong offset!");
static_assert(offsetof(GA_BlockTrashCanLid_C_UpdateBlockingVolume, K2Node_DynamicCast_bSuccess) == 0x000068, "Member 'GA_BlockTrashCanLid_C_UpdateBlockingVolume::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(GA_BlockTrashCanLid_C_UpdateBlockingVolume, CallFunc_K2_GetRootComponent_ReturnValue) == 0x000070, "Member 'GA_BlockTrashCanLid_C_UpdateBlockingVolume::CallFunc_K2_GetRootComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_BlockTrashCanLid_C_UpdateBlockingVolume, CallFunc_Conv_DoubleToVector_ReturnValue_1) == 0x000078, "Member 'GA_BlockTrashCanLid_C_UpdateBlockingVolume::CallFunc_Conv_DoubleToVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_BlockTrashCanLid_C_UpdateBlockingVolume, CallFunc_GetUpVector_ReturnValue) == 0x000090, "Member 'GA_BlockTrashCanLid_C_UpdateBlockingVolume::CallFunc_GetUpVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_BlockTrashCanLid_C_UpdateBlockingVolume, CallFunc_K2_GetRootComponent_ReturnValue_1) == 0x0000A8, "Member 'GA_BlockTrashCanLid_C_UpdateBlockingVolume::CallFunc_K2_GetRootComponent_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_BlockTrashCanLid_C_UpdateBlockingVolume, CallFunc_Multiply_VectorVector_ReturnValue) == 0x0000B0, "Member 'GA_BlockTrashCanLid_C_UpdateBlockingVolume::CallFunc_Multiply_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_BlockTrashCanLid_C_UpdateBlockingVolume, CallFunc_GetForwardVector_ReturnValue) == 0x0000C8, "Member 'GA_BlockTrashCanLid_C_UpdateBlockingVolume::CallFunc_GetForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_BlockTrashCanLid_C_UpdateBlockingVolume, CallFunc_Multiply_VectorVector_ReturnValue_1) == 0x0000E0, "Member 'GA_BlockTrashCanLid_C_UpdateBlockingVolume::CallFunc_Multiply_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_BlockTrashCanLid_C_UpdateBlockingVolume, CallFunc_BreakRotator_Roll) == 0x0000F8, "Member 'GA_BlockTrashCanLid_C_UpdateBlockingVolume::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(GA_BlockTrashCanLid_C_UpdateBlockingVolume, CallFunc_BreakRotator_Pitch) == 0x0000FC, "Member 'GA_BlockTrashCanLid_C_UpdateBlockingVolume::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(GA_BlockTrashCanLid_C_UpdateBlockingVolume, CallFunc_BreakRotator_Yaw) == 0x000100, "Member 'GA_BlockTrashCanLid_C_UpdateBlockingVolume::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(GA_BlockTrashCanLid_C_UpdateBlockingVolume, CallFunc_Add_VectorVector_ReturnValue) == 0x000108, "Member 'GA_BlockTrashCanLid_C_UpdateBlockingVolume::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_BlockTrashCanLid_C_UpdateBlockingVolume, CallFunc_MakeRotator_ReturnValue) == 0x000120, "Member 'GA_BlockTrashCanLid_C_UpdateBlockingVolume::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_BlockTrashCanLid_C_UpdateBlockingVolume, CallFunc_K2_SetActorRotation_ReturnValue) == 0x000138, "Member 'GA_BlockTrashCanLid_C_UpdateBlockingVolume::CallFunc_K2_SetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_BlockTrashCanLid_C_UpdateBlockingVolume, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000140, "Member 'GA_BlockTrashCanLid_C_UpdateBlockingVolume::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_BlockTrashCanLid_C_UpdateBlockingVolume, CallFunc_Add_VectorVector_ReturnValue_1) == 0x000158, "Member 'GA_BlockTrashCanLid_C_UpdateBlockingVolume::CallFunc_Add_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_BlockTrashCanLid_C_UpdateBlockingVolume, CallFunc_K2_SetActorLocation_SweepHitResult) == 0x000170, "Member 'GA_BlockTrashCanLid_C_UpdateBlockingVolume::CallFunc_K2_SetActorLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(GA_BlockTrashCanLid_C_UpdateBlockingVolume, CallFunc_K2_SetActorLocation_ReturnValue) == 0x000268, "Member 'GA_BlockTrashCanLid_C_UpdateBlockingVolume::CallFunc_K2_SetActorLocation_ReturnValue' has a wrong offset!");

}

