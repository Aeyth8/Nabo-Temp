#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: SpectatorPawnStinna

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass SpectatorPawnStinna.SpectatorPawnStinna_C
// 0x0058 (0x0398 - 0x0340)
class ASpectatorPawnStinna_C final : public ASpectatorPawn
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0340(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UShopInteractionAC_C*                   ShopInteractionAC;                                 // 0x0348(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USpringArmComponent*                    DeathSpringArm;                                    // 0x0350(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USpringArmComponent*                    SpringArm;                                         // 0x0358(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UCameraComponent*                       TPPCamera;                                         // 0x0360(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UAbilitySystemComponentIW*              AbilitySystemComponentIW;                          // 0x0368(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UPawnInputExtensionComponent*           PawnInputExtension;                                // 0x0370(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  OGPlayerPawn;                                      // 0x0378(0x0008)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class AController*                            OGPlayerController;                                // 0x0380(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class ACharacter*                             CharacterToFollow;                                 // 0x0388(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	int32                                         SpectatedCharacterIndex;                           // 0x0390(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         TeamId;                                            // 0x0394(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void CheatRespawn();
	void ExecuteUbergraph_SpectatorPawnStinna(int32 EntryPoint);
	void InpActEvt_IA_Crouch_K2Node_EnhancedInputActionEvent_1(const struct FInputActionValue& ActionValue, float ElapsedTime, float TriggeredTime, const class UInputAction* SourceAction);
	void InpActEvt_IA_Jump_K2Node_EnhancedInputActionEvent_2(const struct FInputActionValue& ActionValue, float ElapsedTime, float TriggeredTime, const class UInputAction* SourceAction);
	void InpActEvt_IA_LookStickHorizontal_K2Node_EnhancedInputActionEvent_6(const struct FInputActionValue& ActionValue, float ElapsedTime, float TriggeredTime, const class UInputAction* SourceAction);
	void InpActEvt_IA_LookStickVertical_K2Node_EnhancedInputActionEvent_5(const struct FInputActionValue& ActionValue, float ElapsedTime, float TriggeredTime, const class UInputAction* SourceAction);
	void InpActEvt_IA_MoveHorizontal_K2Node_EnhancedInputActionEvent_4(const struct FInputActionValue& ActionValue, float ElapsedTime, float TriggeredTime, const class UInputAction* SourceAction);
	void InpActEvt_IA_MoveVertical_K2Node_EnhancedInputActionEvent_3(const struct FInputActionValue& ActionValue, float ElapsedTime, float TriggeredTime, const class UInputAction* SourceAction);
	void InpActEvt_IA_SecondaryFire_K2Node_EnhancedInputActionEvent_0(const struct FInputActionValue& ActionValue, float ElapsedTime, float TriggeredTime, const class UInputAction* SourceAction);
	void InpActEvt_P_K2Node_InputDebugKeyEvent_0(const struct FKey& Key, const struct FInputActionValue& ActionValue);
	void OnRep_OGPlayerPawn();
	void ReceiveBeginPlay();
	void ReceiveRestarted();
	void ReceiveTick(float DeltaSeconds);
	void StartTickingSpringArms();
	void Targeted_F70DBEBE4BAA218FAE670A826087F9B3(const struct FTargetingRequestHandle& TargetingHandle);

	struct FTeam GetTeam() const;
	uint8 GetTeamID() const;
	bool HasTeam() const;
	bool TakeDamageFromAllTeams() const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"SpectatorPawnStinna_C">();
	}
	static class ASpectatorPawnStinna_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ASpectatorPawnStinna_C>();
	}
};
static_assert(alignof(ASpectatorPawnStinna_C) == 0x000008, "Wrong alignment on ASpectatorPawnStinna_C");
static_assert(sizeof(ASpectatorPawnStinna_C) == 0x000398, "Wrong size on ASpectatorPawnStinna_C");
static_assert(offsetof(ASpectatorPawnStinna_C, UberGraphFrame) == 0x000340, "Member 'ASpectatorPawnStinna_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ASpectatorPawnStinna_C, ShopInteractionAC) == 0x000348, "Member 'ASpectatorPawnStinna_C::ShopInteractionAC' has a wrong offset!");
static_assert(offsetof(ASpectatorPawnStinna_C, DeathSpringArm) == 0x000350, "Member 'ASpectatorPawnStinna_C::DeathSpringArm' has a wrong offset!");
static_assert(offsetof(ASpectatorPawnStinna_C, SpringArm) == 0x000358, "Member 'ASpectatorPawnStinna_C::SpringArm' has a wrong offset!");
static_assert(offsetof(ASpectatorPawnStinna_C, TPPCamera) == 0x000360, "Member 'ASpectatorPawnStinna_C::TPPCamera' has a wrong offset!");
static_assert(offsetof(ASpectatorPawnStinna_C, AbilitySystemComponentIW) == 0x000368, "Member 'ASpectatorPawnStinna_C::AbilitySystemComponentIW' has a wrong offset!");
static_assert(offsetof(ASpectatorPawnStinna_C, PawnInputExtension) == 0x000370, "Member 'ASpectatorPawnStinna_C::PawnInputExtension' has a wrong offset!");
static_assert(offsetof(ASpectatorPawnStinna_C, OGPlayerPawn) == 0x000378, "Member 'ASpectatorPawnStinna_C::OGPlayerPawn' has a wrong offset!");
static_assert(offsetof(ASpectatorPawnStinna_C, OGPlayerController) == 0x000380, "Member 'ASpectatorPawnStinna_C::OGPlayerController' has a wrong offset!");
static_assert(offsetof(ASpectatorPawnStinna_C, CharacterToFollow) == 0x000388, "Member 'ASpectatorPawnStinna_C::CharacterToFollow' has a wrong offset!");
static_assert(offsetof(ASpectatorPawnStinna_C, SpectatedCharacterIndex) == 0x000390, "Member 'ASpectatorPawnStinna_C::SpectatedCharacterIndex' has a wrong offset!");
static_assert(offsetof(ASpectatorPawnStinna_C, TeamId) == 0x000394, "Member 'ASpectatorPawnStinna_C::TeamId' has a wrong offset!");

}

