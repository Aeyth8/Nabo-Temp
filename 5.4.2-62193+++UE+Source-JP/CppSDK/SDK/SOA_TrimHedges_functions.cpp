#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: SOA_TrimHedges

#include "Basic.hpp"

#include "SOA_TrimHedges_classes.hpp"
#include "SOA_TrimHedges_parameters.hpp"


namespace SDK
{

// Function SOA_TrimHedges.SOA_TrimHedges_C.Add Existing Tasks
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ASOA_TrimHedges_C::Add_Existing_Tasks()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SOA_TrimHedges_C", "Add Existing Tasks");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SOA_TrimHedges.SOA_TrimHedges_C.CheckIfSubObjectiveFinished
// (Public, BlueprintCallable, BlueprintEvent)

void ASOA_TrimHedges_C::CheckIfSubObjectiveFinished()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SOA_TrimHedges_C", "CheckIfSubObjectiveFinished");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SOA_TrimHedges.SOA_TrimHedges_C.CreateRemainingTasks
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ASOA_TrimHedges_C::CreateRemainingTasks()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SOA_TrimHedges_C", "CreateRemainingTasks");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SOA_TrimHedges.SOA_TrimHedges_C.ExecuteUbergraph_SOA_TrimHedges
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASOA_TrimHedges_C::ExecuteUbergraph_SOA_TrimHedges(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SOA_TrimHedges_C", "ExecuteUbergraph_SOA_TrimHedges");

	Params::SOA_TrimHedges_C_ExecuteUbergraph_SOA_TrimHedges Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SOA_TrimHedges.SOA_TrimHedges_C.Find Fitting Spawn Positions
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ASOA_TrimHedges_C::Find_Fitting_Spawn_Positions()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SOA_TrimHedges_C", "Find Fitting Spawn Positions");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SOA_TrimHedges.SOA_TrimHedges_C.GetText
// (BlueprintCosmetic, Event, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm)

class FText ASOA_TrimHedges_C::GetText()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SOA_TrimHedges_C", "GetText");

	Params::SOA_TrimHedges_C_GetText Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function SOA_TrimHedges.SOA_TrimHedges_C.HedgeTrimmed
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           DestroyedActor                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ASOA_TrimHedges_C::HedgeTrimmed(class AActor* DestroyedActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SOA_TrimHedges_C", "HedgeTrimmed");

	Params::SOA_TrimHedges_C_HedgeTrimmed Parms{};

	Parms.DestroyedActor = DestroyedActor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SOA_TrimHedges.SOA_TrimHedges_C.OnRep_BranchesLeftToTrim
// (BlueprintCallable, BlueprintEvent)

void ASOA_TrimHedges_C::OnRep_BranchesLeftToTrim()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SOA_TrimHedges_C", "OnRep_BranchesLeftToTrim");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SOA_TrimHedges.SOA_TrimHedges_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ASOA_TrimHedges_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SOA_TrimHedges_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}

}

