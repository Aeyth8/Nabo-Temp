#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WI_MiscAbility

#include "Basic.hpp"

#include "WI_MiscAbility_classes.hpp"
#include "WI_MiscAbility_parameters.hpp"


namespace SDK
{

// Function WI_MiscAbility.WI_MiscAbility_C.Construct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UWI_MiscAbility_C::Construct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WI_MiscAbility_C", "Construct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WI_MiscAbility.WI_MiscAbility_C.ExecuteUbergraph_WI_MiscAbility
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWI_MiscAbility_C::ExecuteUbergraph_WI_MiscAbility(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WI_MiscAbility_C", "ExecuteUbergraph_WI_MiscAbility");

	Params::WI_MiscAbility_C_ExecuteUbergraph_WI_MiscAbility Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WI_MiscAbility.WI_MiscAbility_C.GetCooldownText
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  TimeRemaining                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash)

class FString UWI_MiscAbility_C::GetCooldownText(double TimeRemaining)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WI_MiscAbility_C", "GetCooldownText");

	Params::WI_MiscAbility_C_GetCooldownText Parms{};

	Parms.TimeRemaining = TimeRemaining;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function WI_MiscAbility.WI_MiscAbility_C.OnAbilityActivatable
// (Public, BlueprintCallable, BlueprintEvent)

void UWI_MiscAbility_C::OnAbilityActivatable()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WI_MiscAbility_C", "OnAbilityActivatable");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WI_MiscAbility.WI_MiscAbility_C.OnAbilityCooldownEnded
// (Public, BlueprintCallable, BlueprintEvent)

void UWI_MiscAbility_C::OnAbilityCooldownEnded()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WI_MiscAbility_C", "OnAbilityCooldownEnded");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WI_MiscAbility.WI_MiscAbility_C.OnAbilityCooldownStarted
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  TimeRemaining                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  CooldownDuration                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  PercentageDone                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWI_MiscAbility_C::OnAbilityCooldownStarted(double TimeRemaining, double CooldownDuration, double PercentageDone)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WI_MiscAbility_C", "OnAbilityCooldownStarted");

	Params::WI_MiscAbility_C_OnAbilityCooldownStarted Parms{};

	Parms.TimeRemaining = TimeRemaining;
	Parms.CooldownDuration = CooldownDuration;
	Parms.PercentageDone = PercentageDone;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WI_MiscAbility.WI_MiscAbility_C.OnAbilityInactivatable
// (Public, BlueprintCallable, BlueprintEvent)

void UWI_MiscAbility_C::OnAbilityInactivatable()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WI_MiscAbility_C", "OnAbilityInactivatable");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WI_MiscAbility.WI_MiscAbility_C.OnAbilityInitialized
// (BlueprintCallable, BlueprintEvent)

void UWI_MiscAbility_C::OnAbilityInitialized()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WI_MiscAbility_C", "OnAbilityInitialized");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WI_MiscAbility.WI_MiscAbility_C.OnCooldownTick
// (Protected, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  TimeRemaining                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  CooldownDuration                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  PercentageDone                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWI_MiscAbility_C::OnCooldownTick(double TimeRemaining, double CooldownDuration, double PercentageDone)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WI_MiscAbility_C", "OnCooldownTick");

	Params::WI_MiscAbility_C_OnCooldownTick Parms{};

	Parms.TimeRemaining = TimeRemaining;
	Parms.CooldownDuration = CooldownDuration;
	Parms.PercentageDone = PercentageDone;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WI_MiscAbility.WI_MiscAbility_C.PreConstruct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// bool                                    IsDesignTime                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWI_MiscAbility_C::PreConstruct(bool IsDesignTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WI_MiscAbility_C", "PreConstruct");

	Params::WI_MiscAbility_C_PreConstruct Parms{};

	Parms.IsDesignTime = IsDesignTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WI_MiscAbility.WI_MiscAbility_C.SetIconTexture
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// TSoftObjectPtr<class UTexture2D>        SoftTexture                                            (BlueprintVisible, BlueprintReadOnly, Parm, UObjectWrapper, HasGetValueTypeHash)

void UWI_MiscAbility_C::SetIconTexture(TSoftObjectPtr<class UTexture2D> SoftTexture)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WI_MiscAbility_C", "SetIconTexture");

	Params::WI_MiscAbility_C_SetIconTexture Parms{};

	Parms.SoftTexture = SoftTexture;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WI_MiscAbility.WI_MiscAbility_C.SetInputAction
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UInputAction*                     InputAction_0                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UWI_MiscAbility_C::SetInputAction(class UInputAction* InputAction_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WI_MiscAbility_C", "SetInputAction");

	Params::WI_MiscAbility_C_SetInputAction Parms{};

	Parms.InputAction_0 = InputAction_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WI_MiscAbility.WI_MiscAbility_C.SetShowBoundAction
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Index_0                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWI_MiscAbility_C::SetShowBoundAction(bool Index_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WI_MiscAbility_C", "SetShowBoundAction");

	Params::WI_MiscAbility_C_SetShowBoundAction Parms{};

	Parms.Index_0 = Index_0;

	UObject::ProcessEvent(Func, &Parms);
}

}

