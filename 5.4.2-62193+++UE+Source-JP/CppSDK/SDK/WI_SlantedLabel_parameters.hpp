#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WI_SlantedLabel

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function WI_SlantedLabel.WI_SlantedLabel_C.ExecuteUbergraph_WI_SlantedLabel
// 0x0008 (0x0008 - 0x0000)
struct WI_SlantedLabel_C_ExecuteUbergraph_WI_SlantedLabel final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WI_SlantedLabel_C_ExecuteUbergraph_WI_SlantedLabel) == 0x000004, "Wrong alignment on WI_SlantedLabel_C_ExecuteUbergraph_WI_SlantedLabel");
static_assert(sizeof(WI_SlantedLabel_C_ExecuteUbergraph_WI_SlantedLabel) == 0x000008, "Wrong size on WI_SlantedLabel_C_ExecuteUbergraph_WI_SlantedLabel");
static_assert(offsetof(WI_SlantedLabel_C_ExecuteUbergraph_WI_SlantedLabel, EntryPoint) == 0x000000, "Member 'WI_SlantedLabel_C_ExecuteUbergraph_WI_SlantedLabel::EntryPoint' has a wrong offset!");
static_assert(offsetof(WI_SlantedLabel_C_ExecuteUbergraph_WI_SlantedLabel, K2Node_Event_IsDesignTime) == 0x000004, "Member 'WI_SlantedLabel_C_ExecuteUbergraph_WI_SlantedLabel::K2Node_Event_IsDesignTime' has a wrong offset!");

// Function WI_SlantedLabel.WI_SlantedLabel_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct WI_SlantedLabel_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WI_SlantedLabel_C_PreConstruct) == 0x000001, "Wrong alignment on WI_SlantedLabel_C_PreConstruct");
static_assert(sizeof(WI_SlantedLabel_C_PreConstruct) == 0x000001, "Wrong size on WI_SlantedLabel_C_PreConstruct");
static_assert(offsetof(WI_SlantedLabel_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'WI_SlantedLabel_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function WI_SlantedLabel.WI_SlantedLabel_C.SetBackgroundColor
// 0x0010 (0x0010 - 0x0000)
struct WI_SlantedLabel_C_SetBackgroundColor final
{
public:
	struct FLinearColor                           Color;                                             // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WI_SlantedLabel_C_SetBackgroundColor) == 0x000004, "Wrong alignment on WI_SlantedLabel_C_SetBackgroundColor");
static_assert(sizeof(WI_SlantedLabel_C_SetBackgroundColor) == 0x000010, "Wrong size on WI_SlantedLabel_C_SetBackgroundColor");
static_assert(offsetof(WI_SlantedLabel_C_SetBackgroundColor, Color) == 0x000000, "Member 'WI_SlantedLabel_C_SetBackgroundColor::Color' has a wrong offset!");

// Function WI_SlantedLabel.WI_SlantedLabel_C.SetFontColorAndOpacity
// 0x0014 (0x0014 - 0x0000)
struct WI_SlantedLabel_C_SetFontColorAndOpacity final
{
public:
	struct FSlateColor                            Font_Color_and_Opacity_0;                          // 0x0000(0x0014)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(WI_SlantedLabel_C_SetFontColorAndOpacity) == 0x000004, "Wrong alignment on WI_SlantedLabel_C_SetFontColorAndOpacity");
static_assert(sizeof(WI_SlantedLabel_C_SetFontColorAndOpacity) == 0x000014, "Wrong size on WI_SlantedLabel_C_SetFontColorAndOpacity");
static_assert(offsetof(WI_SlantedLabel_C_SetFontColorAndOpacity, Font_Color_and_Opacity_0) == 0x000000, "Member 'WI_SlantedLabel_C_SetFontColorAndOpacity::Font_Color_and_Opacity_0' has a wrong offset!");

// Function WI_SlantedLabel.WI_SlantedLabel_C.SetText
// 0x0010 (0x0010 - 0x0000)
struct WI_SlantedLabel_C_SetText final
{
public:
	class FText                                   Text_0;                                            // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(WI_SlantedLabel_C_SetText) == 0x000008, "Wrong alignment on WI_SlantedLabel_C_SetText");
static_assert(sizeof(WI_SlantedLabel_C_SetText) == 0x000010, "Wrong size on WI_SlantedLabel_C_SetText");
static_assert(offsetof(WI_SlantedLabel_C_SetText, Text_0) == 0x000000, "Member 'WI_SlantedLabel_C_SetText::Text_0' has a wrong offset!");

}

