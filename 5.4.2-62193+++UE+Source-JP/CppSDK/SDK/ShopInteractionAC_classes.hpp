#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ShopInteractionAC

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "JP_structs.hpp"
#include "JP_classes.hpp"
#include "E_ShopType_structs.hpp"
#include "CommonInput_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass ShopInteractionAC.ShopInteractionAC_C
// 0x0030 (0x00E8 - 0x00B8)
class UShopInteractionAC_C final : public UShopInteractionComponent
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x00B8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	FMulticastInlineDelegateProperty_             On_GrantItem;                                      // 0x00C0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	class Abp_groundskeeper_C*                    GroundsKeeper;                                     // 0x00D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                          CheatUnlocked;                                     // 0x00D8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D9[0x3];                                       // 0x00D9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         ClientsideInteractionCooldown;                     // 0x00DC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ShopIsOpen;                                        // 0x00E0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	bool AddAmmo(class UItemDefinition* ItemDefinition, const struct FShopItemViewModel& ShopItemViewModel);
	bool AttemptItemPurchase(class UItemDefinition* ItemDefinition, class UItemInstance* OptionalItemToDropFromInventory, bool DeliveryOrderConfirmed);
	bool CanAddAmmo(class UItemDefinition* ItemDefinition);
	bool CanAddItem(class UInventoryComponent* Inventory_0, class APlayerState* PlayerState);
	bool CanPurchaseItem(class UItemDefinition* ItemDefinition);
	void Client_ShowDeliveryConfirmationPrompt(const struct FGameplayTag& OrderedDelivery);
	void CouldNotCastToItemDefinitionError(class UObject* Object);
	void DisplayFullAmmoMessage_Auth(class UItemDefinition* Definition);
	void DisplayFullInventoryMessage_Auth();
	void DropItem(class UItemInstance* ItemToDropFromInventory);
	void ExecuteUbergraph_ShopInteractionAC(int32 EntryPoint);
	void FindDropLocation(struct FVector* Location);
	void Get_Ammo_Tags_to_Add(TSoftObjectPtr<class UItemDefinition> ItemDefinition, struct FGameplayTag* Tag, bool* Found);
	void GetAmmoGameplayEffectFromTag(const struct FGameplayTag& Tag, class UClass** GameplayEffect);
	void GetCurrentItemTierIndex(const struct FRoomData& ShopRoomData, const TArray<struct FItemTier>& ItemTiers, int32* ItemTierIndex);
	void HasItem(TSoftObjectPtr<class UItemDefinition> Definition, bool* Return);
	void HasMaxAmmo(class UItemInstance* ItemInstance, bool* Return_Value);
	bool IsLocalPlayer();
	void ModifyDurabilityFromPerk(const TSoftObjectPtr<class UObject> Item_Definition, int32 Current_Durability, int32* ModifiedDurability);
	void ModifyItemAmountFromPerk(const TSoftObjectPtr<class UObject> Item_Definition, int32 Amount_to_Add, int32* ModifiedAmountToAdd);
	uint8 ModifyItemAmountFromPerks(class UItemDefinition* ItemDefinition);
	void Multi_Play_Purchased_Sound(E_ShopType ShopType, class USoundBase* AdditionalSound, TSoftObjectPtr<class UItemDefinition> ItemDefinition);
	void On_GrantItem__DelegateSignature(bool Succesful);
	void OnDead(class ACharacter* Character);
	void OnLoaded_586CA9B345DF883542EE0C96FE89B069(class UObject* Loaded);
	void OnRespawn(class AActor* DestroyedActor);
	void OrderDelivery(TSubclassOf<class AActor> Actor, const struct FShopItemViewModel& ShopItemViewModel);
	void PlaceDeliveryOrder(class UClass* ActorToDeliver, class ABP_ResidentCharacter_C* ResidentCharacter);
	void PlayPurchaseCosmeticsOnShopItemWidget(TSoftObjectPtr<class UItemDefinition> ItemDefinition);
	class UItemInstance* PurchaseItem(class UItemDefinition* ItemDefinition, const struct FShopItemViewModel& ShopItemViewModel, uint8 Amount);
	void ReduceShopManagerItemQuantity(const struct FS_ShopItem& ShopItem, E_ShopType ShopType);
	void RemoveAmmoFromItem(class ABP_PickupBase_C* PickUp, class UItemInstance* ItemInstance);
	class UItemInstance* RequestItem(TSoftObjectPtr<class UObject> RequestedActor, E_ShopType ShopType, const int32 AmountToAdd, bool* Success);
	void Send_Buy_Event_to_Analytics(TSoftObjectPtr<class UObject> Item_Definition, class APawn* Pawn_Customer, TSoftClassPtr<class UClass> Dilivery_Actor_To_Spawn__temp_);
	void SendAmmoGameplayEffectToOwner(const struct FGameplayTag& TagToLookFor, int32 AmmoCountToAdd);
	void SendBuyEventToLog(const struct FS_ShopItem& ShopItem, const struct FRoomData& RoomData);
	void SendBuyEventToLogV2(class UItemDefinition* ItemDefinition);
	bool SetInventory();
	void ShowDeliveryConfirmationPrompt(class UItemDefinition* ItemDefinition);
	void ShowDropChoiceWidget(const struct FGameplayTag& ItemToExchangeFor);
	void Spawn_Shop_Widget_V2();
	void TryAddAmmo(class UItemInstance* ItemInstance, const int32 AmountToAdd, TSoftObjectPtr<class UItemDefinition> ItemDefinition, bool* AddedAmmo);
	void TryAddExtraStacksAsAmmo(int32 AmountToAdd, TSoftObjectPtr<class UItemDefinition> Definition);
	void UsingAmmo(TSoftObjectPtr<class UItemDefinition> Definition, bool* Return_Value, class UItemInstance** Item);

	void GetParentCharacter(class ABP_ResidentCharacter_C** AsBP_Resident_Character) const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"ShopInteractionAC_C">();
	}
	static class UShopInteractionAC_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UShopInteractionAC_C>();
	}
};
static_assert(alignof(UShopInteractionAC_C) == 0x000008, "Wrong alignment on UShopInteractionAC_C");
static_assert(sizeof(UShopInteractionAC_C) == 0x0000E8, "Wrong size on UShopInteractionAC_C");
static_assert(offsetof(UShopInteractionAC_C, UberGraphFrame) == 0x0000B8, "Member 'UShopInteractionAC_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UShopInteractionAC_C, On_GrantItem) == 0x0000C0, "Member 'UShopInteractionAC_C::On_GrantItem' has a wrong offset!");
static_assert(offsetof(UShopInteractionAC_C, GroundsKeeper) == 0x0000D0, "Member 'UShopInteractionAC_C::GroundsKeeper' has a wrong offset!");
static_assert(offsetof(UShopInteractionAC_C, CheatUnlocked) == 0x0000D8, "Member 'UShopInteractionAC_C::CheatUnlocked' has a wrong offset!");
static_assert(offsetof(UShopInteractionAC_C, ClientsideInteractionCooldown) == 0x0000DC, "Member 'UShopInteractionAC_C::ClientsideInteractionCooldown' has a wrong offset!");
static_assert(offsetof(UShopInteractionAC_C, ShopIsOpen) == 0x0000E0, "Member 'UShopInteractionAC_C::ShopIsOpen' has a wrong offset!");

}

