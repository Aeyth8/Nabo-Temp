#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WI_JPSelector

#include "Basic.hpp"

#include "UMG_structs.hpp"


namespace SDK::Params
{

// Function WI_JPSelector.WI_JPSelector_C.BndEvt__WI_JPSelector_LeftArrowButton_K2Node_ComponentBoundEvent_1_CommonButtonBaseClicked__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct WI_JPSelector_C_BndEvt__WI_JPSelector_LeftArrowButton_K2Node_ComponentBoundEvent_1_CommonButtonBaseClicked__DelegateSignature final
{
public:
	class UCommonButtonBase*                      Button;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WI_JPSelector_C_BndEvt__WI_JPSelector_LeftArrowButton_K2Node_ComponentBoundEvent_1_CommonButtonBaseClicked__DelegateSignature) == 0x000008, "Wrong alignment on WI_JPSelector_C_BndEvt__WI_JPSelector_LeftArrowButton_K2Node_ComponentBoundEvent_1_CommonButtonBaseClicked__DelegateSignature");
static_assert(sizeof(WI_JPSelector_C_BndEvt__WI_JPSelector_LeftArrowButton_K2Node_ComponentBoundEvent_1_CommonButtonBaseClicked__DelegateSignature) == 0x000008, "Wrong size on WI_JPSelector_C_BndEvt__WI_JPSelector_LeftArrowButton_K2Node_ComponentBoundEvent_1_CommonButtonBaseClicked__DelegateSignature");
static_assert(offsetof(WI_JPSelector_C_BndEvt__WI_JPSelector_LeftArrowButton_K2Node_ComponentBoundEvent_1_CommonButtonBaseClicked__DelegateSignature, Button) == 0x000000, "Member 'WI_JPSelector_C_BndEvt__WI_JPSelector_LeftArrowButton_K2Node_ComponentBoundEvent_1_CommonButtonBaseClicked__DelegateSignature::Button' has a wrong offset!");

// Function WI_JPSelector.WI_JPSelector_C.BndEvt__WI_JPSelector_RightArrowButton_K2Node_ComponentBoundEvent_0_CommonButtonBaseClicked__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct WI_JPSelector_C_BndEvt__WI_JPSelector_RightArrowButton_K2Node_ComponentBoundEvent_0_CommonButtonBaseClicked__DelegateSignature final
{
public:
	class UCommonButtonBase*                      Button;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WI_JPSelector_C_BndEvt__WI_JPSelector_RightArrowButton_K2Node_ComponentBoundEvent_0_CommonButtonBaseClicked__DelegateSignature) == 0x000008, "Wrong alignment on WI_JPSelector_C_BndEvt__WI_JPSelector_RightArrowButton_K2Node_ComponentBoundEvent_0_CommonButtonBaseClicked__DelegateSignature");
static_assert(sizeof(WI_JPSelector_C_BndEvt__WI_JPSelector_RightArrowButton_K2Node_ComponentBoundEvent_0_CommonButtonBaseClicked__DelegateSignature) == 0x000008, "Wrong size on WI_JPSelector_C_BndEvt__WI_JPSelector_RightArrowButton_K2Node_ComponentBoundEvent_0_CommonButtonBaseClicked__DelegateSignature");
static_assert(offsetof(WI_JPSelector_C_BndEvt__WI_JPSelector_RightArrowButton_K2Node_ComponentBoundEvent_0_CommonButtonBaseClicked__DelegateSignature, Button) == 0x000000, "Member 'WI_JPSelector_C_BndEvt__WI_JPSelector_RightArrowButton_K2Node_ComponentBoundEvent_0_CommonButtonBaseClicked__DelegateSignature::Button' has a wrong offset!");

// Function WI_JPSelector.WI_JPSelector_C.ExecuteUbergraph_WI_JPSelector
// 0x0050 (0x0050 - 0x0000)
struct WI_JPSelector_C_ExecuteUbergraph_WI_JPSelector final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UVerticalBoxSlot*                       CallFunc_SlotAsVerticalBoxSlot_ReturnValue;        // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_13[0x1];                                       // 0x0013(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(int32 Value)>                  K2Node_CreateDelegate_OutputDelegate;              // 0x0014(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPanelSlot*                             CallFunc_GetContentSlot_ReturnValue;               // 0x0028(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCommonButtonBase*                      K2Node_ComponentBoundEvent_Button_1;               // 0x0038(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UCommonButtonBase*                      K2Node_ComponentBoundEvent_Button;                 // 0x0040(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_Value;                          // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x004D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WI_JPSelector_C_ExecuteUbergraph_WI_JPSelector) == 0x000008, "Wrong alignment on WI_JPSelector_C_ExecuteUbergraph_WI_JPSelector");
static_assert(sizeof(WI_JPSelector_C_ExecuteUbergraph_WI_JPSelector) == 0x000050, "Wrong size on WI_JPSelector_C_ExecuteUbergraph_WI_JPSelector");
static_assert(offsetof(WI_JPSelector_C_ExecuteUbergraph_WI_JPSelector, EntryPoint) == 0x000000, "Member 'WI_JPSelector_C_ExecuteUbergraph_WI_JPSelector::EntryPoint' has a wrong offset!");
static_assert(offsetof(WI_JPSelector_C_ExecuteUbergraph_WI_JPSelector, Temp_bool_Variable) == 0x000004, "Member 'WI_JPSelector_C_ExecuteUbergraph_WI_JPSelector::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WI_JPSelector_C_ExecuteUbergraph_WI_JPSelector, CallFunc_SlotAsVerticalBoxSlot_ReturnValue) == 0x000008, "Member 'WI_JPSelector_C_ExecuteUbergraph_WI_JPSelector::CallFunc_SlotAsVerticalBoxSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(WI_JPSelector_C_ExecuteUbergraph_WI_JPSelector, Temp_byte_Variable) == 0x000010, "Member 'WI_JPSelector_C_ExecuteUbergraph_WI_JPSelector::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WI_JPSelector_C_ExecuteUbergraph_WI_JPSelector, Temp_byte_Variable_1) == 0x000011, "Member 'WI_JPSelector_C_ExecuteUbergraph_WI_JPSelector::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WI_JPSelector_C_ExecuteUbergraph_WI_JPSelector, K2Node_Event_IsDesignTime) == 0x000012, "Member 'WI_JPSelector_C_ExecuteUbergraph_WI_JPSelector::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(WI_JPSelector_C_ExecuteUbergraph_WI_JPSelector, K2Node_CreateDelegate_OutputDelegate) == 0x000014, "Member 'WI_JPSelector_C_ExecuteUbergraph_WI_JPSelector::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WI_JPSelector_C_ExecuteUbergraph_WI_JPSelector, CallFunc_GetContentSlot_ReturnValue) == 0x000028, "Member 'WI_JPSelector_C_ExecuteUbergraph_WI_JPSelector::CallFunc_GetContentSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(WI_JPSelector_C_ExecuteUbergraph_WI_JPSelector, CallFunc_IsValid_ReturnValue) == 0x000030, "Member 'WI_JPSelector_C_ExecuteUbergraph_WI_JPSelector::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WI_JPSelector_C_ExecuteUbergraph_WI_JPSelector, K2Node_ComponentBoundEvent_Button_1) == 0x000038, "Member 'WI_JPSelector_C_ExecuteUbergraph_WI_JPSelector::K2Node_ComponentBoundEvent_Button_1' has a wrong offset!");
static_assert(offsetof(WI_JPSelector_C_ExecuteUbergraph_WI_JPSelector, K2Node_ComponentBoundEvent_Button) == 0x000040, "Member 'WI_JPSelector_C_ExecuteUbergraph_WI_JPSelector::K2Node_ComponentBoundEvent_Button' has a wrong offset!");
static_assert(offsetof(WI_JPSelector_C_ExecuteUbergraph_WI_JPSelector, K2Node_CustomEvent_Value) == 0x000048, "Member 'WI_JPSelector_C_ExecuteUbergraph_WI_JPSelector::K2Node_CustomEvent_Value' has a wrong offset!");
static_assert(offsetof(WI_JPSelector_C_ExecuteUbergraph_WI_JPSelector, CallFunc_BooleanAND_ReturnValue) == 0x00004C, "Member 'WI_JPSelector_C_ExecuteUbergraph_WI_JPSelector::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(WI_JPSelector_C_ExecuteUbergraph_WI_JPSelector, K2Node_Select_Default) == 0x00004D, "Member 'WI_JPSelector_C_ExecuteUbergraph_WI_JPSelector::K2Node_Select_Default' has a wrong offset!");

// Function WI_JPSelector.WI_JPSelector_C.GetSelectedIndex
// 0x0008 (0x0008 - 0x0000)
struct WI_JPSelector_C_GetSelectedIndex final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetSelectedIndex_ReturnValue;             // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WI_JPSelector_C_GetSelectedIndex) == 0x000004, "Wrong alignment on WI_JPSelector_C_GetSelectedIndex");
static_assert(sizeof(WI_JPSelector_C_GetSelectedIndex) == 0x000008, "Wrong size on WI_JPSelector_C_GetSelectedIndex");
static_assert(offsetof(WI_JPSelector_C_GetSelectedIndex, ReturnValue) == 0x000000, "Member 'WI_JPSelector_C_GetSelectedIndex::ReturnValue' has a wrong offset!");
static_assert(offsetof(WI_JPSelector_C_GetSelectedIndex, CallFunc_GetSelectedIndex_ReturnValue) == 0x000004, "Member 'WI_JPSelector_C_GetSelectedIndex::CallFunc_GetSelectedIndex_ReturnValue' has a wrong offset!");

// Function WI_JPSelector.WI_JPSelector_C.HandleRotated
// 0x0004 (0x0004 - 0x0000)
struct WI_JPSelector_C_HandleRotated final
{
public:
	int32                                         Value;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WI_JPSelector_C_HandleRotated) == 0x000004, "Wrong alignment on WI_JPSelector_C_HandleRotated");
static_assert(sizeof(WI_JPSelector_C_HandleRotated) == 0x000004, "Wrong size on WI_JPSelector_C_HandleRotated");
static_assert(offsetof(WI_JPSelector_C_HandleRotated, Value) == 0x000000, "Member 'WI_JPSelector_C_HandleRotated::Value' has a wrong offset!");

// Function WI_JPSelector.WI_JPSelector_C.OnSelectedIndexChanged__DelegateSignature
// 0x0004 (0x0004 - 0x0000)
struct WI_JPSelector_C_OnSelectedIndexChanged__DelegateSignature final
{
public:
	int32                                         SelectedIndex;                                     // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WI_JPSelector_C_OnSelectedIndexChanged__DelegateSignature) == 0x000004, "Wrong alignment on WI_JPSelector_C_OnSelectedIndexChanged__DelegateSignature");
static_assert(sizeof(WI_JPSelector_C_OnSelectedIndexChanged__DelegateSignature) == 0x000004, "Wrong size on WI_JPSelector_C_OnSelectedIndexChanged__DelegateSignature");
static_assert(offsetof(WI_JPSelector_C_OnSelectedIndexChanged__DelegateSignature, SelectedIndex) == 0x000000, "Member 'WI_JPSelector_C_OnSelectedIndexChanged__DelegateSignature::SelectedIndex' has a wrong offset!");

// Function WI_JPSelector.WI_JPSelector_C.PopulateTextLabels
// 0x0010 (0x0010 - 0x0000)
struct WI_JPSelector_C_PopulateTextLabels final
{
public:
	TArray<class FText>                           TextLabels;                                        // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(WI_JPSelector_C_PopulateTextLabels) == 0x000008, "Wrong alignment on WI_JPSelector_C_PopulateTextLabels");
static_assert(sizeof(WI_JPSelector_C_PopulateTextLabels) == 0x000010, "Wrong size on WI_JPSelector_C_PopulateTextLabels");
static_assert(offsetof(WI_JPSelector_C_PopulateTextLabels, TextLabels) == 0x000000, "Member 'WI_JPSelector_C_PopulateTextLabels::TextLabels' has a wrong offset!");

// Function WI_JPSelector.WI_JPSelector_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct WI_JPSelector_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WI_JPSelector_C_PreConstruct) == 0x000001, "Wrong alignment on WI_JPSelector_C_PreConstruct");
static_assert(sizeof(WI_JPSelector_C_PreConstruct) == 0x000001, "Wrong size on WI_JPSelector_C_PreConstruct");
static_assert(offsetof(WI_JPSelector_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'WI_JPSelector_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function WI_JPSelector.WI_JPSelector_C.SetSelectedIndex
// 0x0004 (0x0004 - 0x0000)
struct WI_JPSelector_C_SetSelectedIndex final
{
public:
	int32                                         Index_0;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WI_JPSelector_C_SetSelectedIndex) == 0x000004, "Wrong alignment on WI_JPSelector_C_SetSelectedIndex");
static_assert(sizeof(WI_JPSelector_C_SetSelectedIndex) == 0x000004, "Wrong size on WI_JPSelector_C_SetSelectedIndex");
static_assert(offsetof(WI_JPSelector_C_SetSelectedIndex, Index_0) == 0x000000, "Member 'WI_JPSelector_C_SetSelectedIndex::Index_0' has a wrong offset!");

}

