#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WI_NeighborDetailsPerkSelectElement

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WI_NeighborDetailsPerkSelectElement.WI_NeighborDetailsPerkSelectElement_C
// 0x0070 (0x0350 - 0x02E0)
class UWI_NeighborDetailsPerkSelectElement_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02E0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UCommonTextBlock*                       LevelReqText;                                      // 0x02E8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWI_PerkButton_C*                       PerkButton;                                        // 0x02F0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	struct FGameplayTag                           PerkID;                                            // 0x02F8(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	int32                                         RequiredLevel;                                     // 0x0300(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_304[0x4];                                      // 0x0304(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        ButtonDiameter;                                    // 0x0308(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	double                                        IconDiameter;                                      // 0x0310(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	FMulticastInlineDelegateProperty_             OnClicked;                                         // 0x0318(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	int32                                         NeighborLevel;                                     // 0x0328(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsEquipped;                                        // 0x032C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsActive;                                          // 0x032D(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_32E[0x2];                                      // 0x032E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	FMulticastInlineDelegateProperty_             OnNewPerkActivated;                                // 0x0330(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_             OnNewPerkEquipped;                                 // 0x0340(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)

public:
	void BndEvt__WI_NeighborDetailsPerkSelectElement_WI_PerkButton_K2Node_ComponentBoundEvent_0_CommonButtonBaseClicked__DelegateSignature(class UCommonButtonBase* Button);
	void ExecuteUbergraph_WI_NeighborDetailsPerkSelectElement(int32 EntryPoint);
	void GetIsEquipped(bool* IsEquipped_0);
	void GetNeighborLevel(int32* NeighborLevel_0);
	void GetPerkID(struct FGameplayTag* PerkID_0);
	void GetRequiredLevel(int32* RequiredLevel_0);
	void OnActivated();
	void OnClicked__DelegateSignature(class UWI_NeighborDetailsPerkSelectElement_C* PerkSelectElement);
	void OnDeactivated();
	void OnEquippedToggled();
	void OnNewPerkActivated__DelegateSignature(class UWI_NeighborDetailsPerkSelectElement_C* PerkSelectElement);
	void OnNewPerkEquipped__DelegateSignature(class UWI_NeighborDetailsPerkSelectElement_C* PerkSelectElement);
	void PreConstruct(bool IsDesignTime);
	void SetButtonAndIconDiameter(double ButtonDiameter_0, double IconDiameter_0);
	void SetIsActive(bool IsActive_0);
	void SetIsEquipped(bool IsEquipped_0);
	void SetLevelRequirement(int32 LevelRequirement, int32 NeighborLevel_0);
	void SetPerkID(const struct FGameplayTag& PerkID_0);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WI_NeighborDetailsPerkSelectElement_C">();
	}
	static class UWI_NeighborDetailsPerkSelectElement_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWI_NeighborDetailsPerkSelectElement_C>();
	}
};
static_assert(alignof(UWI_NeighborDetailsPerkSelectElement_C) == 0x000008, "Wrong alignment on UWI_NeighborDetailsPerkSelectElement_C");
static_assert(sizeof(UWI_NeighborDetailsPerkSelectElement_C) == 0x000350, "Wrong size on UWI_NeighborDetailsPerkSelectElement_C");
static_assert(offsetof(UWI_NeighborDetailsPerkSelectElement_C, UberGraphFrame) == 0x0002E0, "Member 'UWI_NeighborDetailsPerkSelectElement_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWI_NeighborDetailsPerkSelectElement_C, LevelReqText) == 0x0002E8, "Member 'UWI_NeighborDetailsPerkSelectElement_C::LevelReqText' has a wrong offset!");
static_assert(offsetof(UWI_NeighborDetailsPerkSelectElement_C, PerkButton) == 0x0002F0, "Member 'UWI_NeighborDetailsPerkSelectElement_C::PerkButton' has a wrong offset!");
static_assert(offsetof(UWI_NeighborDetailsPerkSelectElement_C, PerkID) == 0x0002F8, "Member 'UWI_NeighborDetailsPerkSelectElement_C::PerkID' has a wrong offset!");
static_assert(offsetof(UWI_NeighborDetailsPerkSelectElement_C, RequiredLevel) == 0x000300, "Member 'UWI_NeighborDetailsPerkSelectElement_C::RequiredLevel' has a wrong offset!");
static_assert(offsetof(UWI_NeighborDetailsPerkSelectElement_C, ButtonDiameter) == 0x000308, "Member 'UWI_NeighborDetailsPerkSelectElement_C::ButtonDiameter' has a wrong offset!");
static_assert(offsetof(UWI_NeighborDetailsPerkSelectElement_C, IconDiameter) == 0x000310, "Member 'UWI_NeighborDetailsPerkSelectElement_C::IconDiameter' has a wrong offset!");
static_assert(offsetof(UWI_NeighborDetailsPerkSelectElement_C, OnClicked) == 0x000318, "Member 'UWI_NeighborDetailsPerkSelectElement_C::OnClicked' has a wrong offset!");
static_assert(offsetof(UWI_NeighborDetailsPerkSelectElement_C, NeighborLevel) == 0x000328, "Member 'UWI_NeighborDetailsPerkSelectElement_C::NeighborLevel' has a wrong offset!");
static_assert(offsetof(UWI_NeighborDetailsPerkSelectElement_C, IsEquipped) == 0x00032C, "Member 'UWI_NeighborDetailsPerkSelectElement_C::IsEquipped' has a wrong offset!");
static_assert(offsetof(UWI_NeighborDetailsPerkSelectElement_C, IsActive) == 0x00032D, "Member 'UWI_NeighborDetailsPerkSelectElement_C::IsActive' has a wrong offset!");
static_assert(offsetof(UWI_NeighborDetailsPerkSelectElement_C, OnNewPerkActivated) == 0x000330, "Member 'UWI_NeighborDetailsPerkSelectElement_C::OnNewPerkActivated' has a wrong offset!");
static_assert(offsetof(UWI_NeighborDetailsPerkSelectElement_C, OnNewPerkEquipped) == 0x000340, "Member 'UWI_NeighborDetailsPerkSelectElement_C::OnNewPerkEquipped' has a wrong offset!");

}

