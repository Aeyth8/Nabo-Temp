#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GA_TraceForThrowables

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "GASIW_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass GA_TraceForThrowables.GA_TraceForThrowables_C
// 0x0050 (0x04B0 - 0x0460)
class UGA_TraceForThrowables_C final : public UGameplayAbilityIW
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0460(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct FGameplayTagContainer                  BlockedTags;                                       // 0x0468(0x0020)(Edit, BlueprintVisible, DisableEditOnInstance)
	double                                        TraceableDistance;                                 // 0x0488(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         TraceDistance;                                     // 0x0490(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_494[0x4];                                      // 0x0494(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UGA_ContinuousTraceHitables_C*          GA_Continuous_Trace_for_Hitables;                  // 0x0498(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class ABp_ThrowableProp_Base_C*               CurrentTarget;                                     // 0x04A0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_GA_TraceForThrowables(int32 EntryPoint);
	void FilterForThrowable(class ABp_ThrowableProp_Base_C** Return_Value);
	void GetReferenceForContinuousTraceForHitablesAbility(class UGA_ContinuousTraceHitables_C** AsGA_Continuous_Trace_for_Hitables);
	void K2_ActivateAbility();
	void K2_OnAbilityAdded();
	void OnFinished_F7CC6FEA40931DE74D6F4D9E5D383422(int32 ActionNumber);
	void OnPerformAction_F7CC6FEA40931DE74D6F4D9E5D383422(int32 ActionNumber);
	void SetThrowable(class ABp_ThrowableProp_Base_C* Throwable);
	void TraceForThrowable();

	void GetAvatarResidentCharacter(class ABP_ResidentCharacter_C** As_Resident) const;
	void GetTraceInput(struct FVector* Start, struct FVector* End, TArray<EObjectTypeQuery>* ObjectTypes, TArray<class ABP_ResidentCharacter_C*>* ActorsToIgnore) const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"GA_TraceForThrowables_C">();
	}
	static class UGA_TraceForThrowables_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGA_TraceForThrowables_C>();
	}
};
static_assert(alignof(UGA_TraceForThrowables_C) == 0x000010, "Wrong alignment on UGA_TraceForThrowables_C");
static_assert(sizeof(UGA_TraceForThrowables_C) == 0x0004B0, "Wrong size on UGA_TraceForThrowables_C");
static_assert(offsetof(UGA_TraceForThrowables_C, UberGraphFrame) == 0x000460, "Member 'UGA_TraceForThrowables_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UGA_TraceForThrowables_C, BlockedTags) == 0x000468, "Member 'UGA_TraceForThrowables_C::BlockedTags' has a wrong offset!");
static_assert(offsetof(UGA_TraceForThrowables_C, TraceableDistance) == 0x000488, "Member 'UGA_TraceForThrowables_C::TraceableDistance' has a wrong offset!");
static_assert(offsetof(UGA_TraceForThrowables_C, TraceDistance) == 0x000490, "Member 'UGA_TraceForThrowables_C::TraceDistance' has a wrong offset!");
static_assert(offsetof(UGA_TraceForThrowables_C, GA_Continuous_Trace_for_Hitables) == 0x000498, "Member 'UGA_TraceForThrowables_C::GA_Continuous_Trace_for_Hitables' has a wrong offset!");
static_assert(offsetof(UGA_TraceForThrowables_C, CurrentTarget) == 0x0004A0, "Member 'UGA_TraceForThrowables_C::CurrentTarget' has a wrong offset!");

}

