#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_EssentialBomba

#include "Basic.hpp"

#include "E_MaterialTypes_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "E_ImpactEffect_structs.hpp"
#include "JP_structs.hpp"
#include "GameplayAbilities_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BP_EssentialBomba.BP_EssentialBomba_C.BndEvt__HouseActorBase_Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature
// 0x0118 (0x0118 - 0x0000)
struct BP_EssentialBomba_C_BndEvt__HouseActorBase_Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bFromSweep;                                        // 0x001C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             SweepResult;                                       // 0x0020(0x00F8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_EssentialBomba_C_BndEvt__HouseActorBase_Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on BP_EssentialBomba_C_BndEvt__HouseActorBase_Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(sizeof(BP_EssentialBomba_C_BndEvt__HouseActorBase_Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature) == 0x000118, "Wrong size on BP_EssentialBomba_C_BndEvt__HouseActorBase_Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(offsetof(BP_EssentialBomba_C_BndEvt__HouseActorBase_Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OverlappedComponent) == 0x000000, "Member 'BP_EssentialBomba_C_BndEvt__HouseActorBase_Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BP_EssentialBomba_C_BndEvt__HouseActorBase_Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'BP_EssentialBomba_C_BndEvt__HouseActorBase_Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(BP_EssentialBomba_C_BndEvt__HouseActorBase_Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'BP_EssentialBomba_C_BndEvt__HouseActorBase_Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(BP_EssentialBomba_C_BndEvt__HouseActorBase_Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000018, "Member 'BP_EssentialBomba_C_BndEvt__HouseActorBase_Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(BP_EssentialBomba_C_BndEvt__HouseActorBase_Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, bFromSweep) == 0x00001C, "Member 'BP_EssentialBomba_C_BndEvt__HouseActorBase_Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::bFromSweep' has a wrong offset!");
static_assert(offsetof(BP_EssentialBomba_C_BndEvt__HouseActorBase_Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, SweepResult) == 0x000020, "Member 'BP_EssentialBomba_C_BndEvt__HouseActorBase_Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::SweepResult' has a wrong offset!");

// Function BP_EssentialBomba.BP_EssentialBomba_C.BndEvt__HouseActorBase_Sphere_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct BP_EssentialBomba_C_BndEvt__HouseActorBase_Sphere_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EssentialBomba_C_BndEvt__HouseActorBase_Sphere_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on BP_EssentialBomba_C_BndEvt__HouseActorBase_Sphere_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature");
static_assert(sizeof(BP_EssentialBomba_C_BndEvt__HouseActorBase_Sphere_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature) == 0x000020, "Wrong size on BP_EssentialBomba_C_BndEvt__HouseActorBase_Sphere_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature");
static_assert(offsetof(BP_EssentialBomba_C_BndEvt__HouseActorBase_Sphere_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature, OverlappedComponent) == 0x000000, "Member 'BP_EssentialBomba_C_BndEvt__HouseActorBase_Sphere_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BP_EssentialBomba_C_BndEvt__HouseActorBase_Sphere_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'BP_EssentialBomba_C_BndEvt__HouseActorBase_Sphere_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(BP_EssentialBomba_C_BndEvt__HouseActorBase_Sphere_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'BP_EssentialBomba_C_BndEvt__HouseActorBase_Sphere_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(BP_EssentialBomba_C_BndEvt__HouseActorBase_Sphere_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000018, "Member 'BP_EssentialBomba_C_BndEvt__HouseActorBase_Sphere_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");

// Function BP_EssentialBomba.BP_EssentialBomba_C.CacheHealthBar
// 0x0018 (0x0018 - 0x0000)
struct BP_EssentialBomba_C_CacheHealthBar final
{
public:
	class UUserWidget*                            CallFunc_GetUserWidgetObject_ReturnValue;          // 0x0000(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UItemCompatibleInfoWI_C*                K2Node_DynamicCast_AsItem_Compatible_Info_WI;      // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EssentialBomba_C_CacheHealthBar) == 0x000008, "Wrong alignment on BP_EssentialBomba_C_CacheHealthBar");
static_assert(sizeof(BP_EssentialBomba_C_CacheHealthBar) == 0x000018, "Wrong size on BP_EssentialBomba_C_CacheHealthBar");
static_assert(offsetof(BP_EssentialBomba_C_CacheHealthBar, CallFunc_GetUserWidgetObject_ReturnValue) == 0x000000, "Member 'BP_EssentialBomba_C_CacheHealthBar::CallFunc_GetUserWidgetObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EssentialBomba_C_CacheHealthBar, K2Node_DynamicCast_AsItem_Compatible_Info_WI) == 0x000008, "Member 'BP_EssentialBomba_C_CacheHealthBar::K2Node_DynamicCast_AsItem_Compatible_Info_WI' has a wrong offset!");
static_assert(offsetof(BP_EssentialBomba_C_CacheHealthBar, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'BP_EssentialBomba_C_CacheHealthBar::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BP_EssentialBomba.BP_EssentialBomba_C.ExecuteUbergraph_BP_EssentialBomba
// 0x06C0 (0x06C0 - 0x0000)
struct BP_EssentialBomba_C_ExecuteUbergraph_BP_EssentialBomba final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	const class AActor*                           K2Node_Event_AttackingActor;                       // 0x0018(0x0008)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Event_Direction;                            // 0x0020(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_GetInstigator_ReturnValue;                // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_Delta;                                // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_Event_Causer;                               // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FCombatParticipant                     K2Node_Event_CombatParticipant;                    // 0x0050(0x0060)(ConstParm)
	struct FKillMethod                            K2Node_Event_KillMethod;                           // 0x00B0(0x02E8)(ConstParm)
	struct FVector_NetQuantize                    K2Node_Event_Location;                             // 0x0398(0x0018)(NoDestructor, HasGetValueTypeHash)
	class APlayerStateJP_Match*                   K2Node_DynamicCast_AsPlayer_State_JP_Match;        // 0x03B0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x03B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetFloatAttributeFromAbilitySystemComponent_bSuccessfullyFoundAttribute; // 0x03B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3BA[0x2];                                      // 0x03BA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetFloatAttributeFromAbilitySystemComponent_ReturnValue; // 0x03BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FCombatParticipant                     CallFunc_CreateCombatParticipantFromPlayer_ReturnValue; // 0x03C0(0x0060)()
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue;       // 0x0420(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_421[0x3];                                      // 0x0421(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0424(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_Health;                               // 0x0434(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_MaxHealth;                            // 0x0438(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_43C[0x4];                                      // 0x043C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent_1;  // 0x0440(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor_1;           // 0x0448(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp_1;            // 0x0450(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex_1;       // 0x0458(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bFromSweep;             // 0x045C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_45D[0x3];                                      // 0x045D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_ComponentBoundEvent_SweepResult;            // 0x0460(0x00F8)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent;    // 0x0558(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor;             // 0x0560(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp;              // 0x0568(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex;         // 0x0570(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_574[0x4];                                      // 0x0574(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  K2Node_DynamicCast_AsPawn;                         // 0x0578(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0580(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_581[0x7];                                      // 0x0581(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  K2Node_DynamicCast_AsPawn_1;                       // 0x0588(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0590(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLocallyControlled_ReturnValue;          // 0x0591(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLocallyControlled_ReturnValue_1;        // 0x0592(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_593[0x1];                                      // 0x0593(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetGameTimeSinceCreation_ReturnValue;     // 0x0594(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0598(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_599[0x7];                                      // 0x0599(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x05A0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UNiagaraComponent*                      CallFunc_SpawnSystemAtLocation_ReturnValue;        // 0x05B8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TArray<EObjectTypeQuery>                      K2Node_MakeArray_Array;                            // 0x05C0(0x0010)(ConstParm, ReferenceParm)
	TArray<class AActor*>                         K2Node_MakeArray_Array_1;                          // 0x05D0(0x0010)(ConstParm, ReferenceParm)
	TArray<class AActor*>                         CallFunc_SphereOverlapActors_OutActors;            // 0x05E0(0x0010)(ReferenceParm)
	bool                                          CallFunc_SphereOverlapActors_ReturnValue;          // 0x05F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5F1[0x7];                                      // 0x05F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharacter*                             K2Node_DynamicCast_AsCharacter;                    // 0x05F8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0600(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_601[0x7];                                      // 0x0601(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_Array_Get_Item;                           // 0x0608(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayEffectSpecHandle              CallFunc_GetDamageSpec_SpecHandle;                 // 0x0610(0x0010)()
	class UAbilitySystemComponent*                CallFunc_GetAbilitySystemComponent_ReturnValue;    // 0x0620(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0628(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FActiveGameplayEffectHandle            CallFunc_BP_ApplyGameplayEffectSpecToTarget_ReturnValue; // 0x062C(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0634(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_635[0x3];                                      // 0x0635(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0638(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_K2_GetComponentToWorld_ReturnValue;       // 0x0640(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x06A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_EssentialBomba_Destroyed_C*         CallFunc_FinishSpawningActor_ReturnValue;          // 0x06A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_LessEqual_DoubleDouble_A_ImplicitCast;    // 0x06B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Greater_DoubleDouble_A_ImplicitCast;      // 0x06B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EssentialBomba_C_ExecuteUbergraph_BP_EssentialBomba) == 0x000010, "Wrong alignment on BP_EssentialBomba_C_ExecuteUbergraph_BP_EssentialBomba");
static_assert(sizeof(BP_EssentialBomba_C_ExecuteUbergraph_BP_EssentialBomba) == 0x0006C0, "Wrong size on BP_EssentialBomba_C_ExecuteUbergraph_BP_EssentialBomba");
static_assert(offsetof(BP_EssentialBomba_C_ExecuteUbergraph_BP_EssentialBomba, EntryPoint) == 0x000000, "Member 'BP_EssentialBomba_C_ExecuteUbergraph_BP_EssentialBomba::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_EssentialBomba_C_ExecuteUbergraph_BP_EssentialBomba, CallFunc_HasAuthority_ReturnValue) == 0x000004, "Member 'BP_EssentialBomba_C_ExecuteUbergraph_BP_EssentialBomba::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EssentialBomba_C_ExecuteUbergraph_BP_EssentialBomba, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'BP_EssentialBomba_C_ExecuteUbergraph_BP_EssentialBomba::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_EssentialBomba_C_ExecuteUbergraph_BP_EssentialBomba, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'BP_EssentialBomba_C_ExecuteUbergraph_BP_EssentialBomba::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EssentialBomba_C_ExecuteUbergraph_BP_EssentialBomba, Temp_int_Array_Index_Variable) == 0x000010, "Member 'BP_EssentialBomba_C_ExecuteUbergraph_BP_EssentialBomba::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_EssentialBomba_C_ExecuteUbergraph_BP_EssentialBomba, K2Node_Event_AttackingActor) == 0x000018, "Member 'BP_EssentialBomba_C_ExecuteUbergraph_BP_EssentialBomba::K2Node_Event_AttackingActor' has a wrong offset!");
static_assert(offsetof(BP_EssentialBomba_C_ExecuteUbergraph_BP_EssentialBomba, K2Node_Event_Direction) == 0x000020, "Member 'BP_EssentialBomba_C_ExecuteUbergraph_BP_EssentialBomba::K2Node_Event_Direction' has a wrong offset!");
static_assert(offsetof(BP_EssentialBomba_C_ExecuteUbergraph_BP_EssentialBomba, CallFunc_GetInstigator_ReturnValue) == 0x000038, "Member 'BP_EssentialBomba_C_ExecuteUbergraph_BP_EssentialBomba::CallFunc_GetInstigator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EssentialBomba_C_ExecuteUbergraph_BP_EssentialBomba, K2Node_Event_Delta) == 0x000040, "Member 'BP_EssentialBomba_C_ExecuteUbergraph_BP_EssentialBomba::K2Node_Event_Delta' has a wrong offset!");
static_assert(offsetof(BP_EssentialBomba_C_ExecuteUbergraph_BP_EssentialBomba, K2Node_Event_Causer) == 0x000048, "Member 'BP_EssentialBomba_C_ExecuteUbergraph_BP_EssentialBomba::K2Node_Event_Causer' has a wrong offset!");
static_assert(offsetof(BP_EssentialBomba_C_ExecuteUbergraph_BP_EssentialBomba, K2Node_Event_CombatParticipant) == 0x000050, "Member 'BP_EssentialBomba_C_ExecuteUbergraph_BP_EssentialBomba::K2Node_Event_CombatParticipant' has a wrong offset!");
static_assert(offsetof(BP_EssentialBomba_C_ExecuteUbergraph_BP_EssentialBomba, K2Node_Event_KillMethod) == 0x0000B0, "Member 'BP_EssentialBomba_C_ExecuteUbergraph_BP_EssentialBomba::K2Node_Event_KillMethod' has a wrong offset!");
static_assert(offsetof(BP_EssentialBomba_C_ExecuteUbergraph_BP_EssentialBomba, K2Node_Event_Location) == 0x000398, "Member 'BP_EssentialBomba_C_ExecuteUbergraph_BP_EssentialBomba::K2Node_Event_Location' has a wrong offset!");
static_assert(offsetof(BP_EssentialBomba_C_ExecuteUbergraph_BP_EssentialBomba, K2Node_DynamicCast_AsPlayer_State_JP_Match) == 0x0003B0, "Member 'BP_EssentialBomba_C_ExecuteUbergraph_BP_EssentialBomba::K2Node_DynamicCast_AsPlayer_State_JP_Match' has a wrong offset!");
static_assert(offsetof(BP_EssentialBomba_C_ExecuteUbergraph_BP_EssentialBomba, K2Node_DynamicCast_bSuccess) == 0x0003B8, "Member 'BP_EssentialBomba_C_ExecuteUbergraph_BP_EssentialBomba::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_EssentialBomba_C_ExecuteUbergraph_BP_EssentialBomba, CallFunc_GetFloatAttributeFromAbilitySystemComponent_bSuccessfullyFoundAttribute) == 0x0003B9, "Member 'BP_EssentialBomba_C_ExecuteUbergraph_BP_EssentialBomba::CallFunc_GetFloatAttributeFromAbilitySystemComponent_bSuccessfullyFoundAttribute' has a wrong offset!");
static_assert(offsetof(BP_EssentialBomba_C_ExecuteUbergraph_BP_EssentialBomba, CallFunc_GetFloatAttributeFromAbilitySystemComponent_ReturnValue) == 0x0003BC, "Member 'BP_EssentialBomba_C_ExecuteUbergraph_BP_EssentialBomba::CallFunc_GetFloatAttributeFromAbilitySystemComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EssentialBomba_C_ExecuteUbergraph_BP_EssentialBomba, CallFunc_CreateCombatParticipantFromPlayer_ReturnValue) == 0x0003C0, "Member 'BP_EssentialBomba_C_ExecuteUbergraph_BP_EssentialBomba::CallFunc_CreateCombatParticipantFromPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EssentialBomba_C_ExecuteUbergraph_BP_EssentialBomba, CallFunc_LessEqual_DoubleDouble_ReturnValue) == 0x000420, "Member 'BP_EssentialBomba_C_ExecuteUbergraph_BP_EssentialBomba::CallFunc_LessEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EssentialBomba_C_ExecuteUbergraph_BP_EssentialBomba, K2Node_CreateDelegate_OutputDelegate) == 0x000424, "Member 'BP_EssentialBomba_C_ExecuteUbergraph_BP_EssentialBomba::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_EssentialBomba_C_ExecuteUbergraph_BP_EssentialBomba, K2Node_Event_Health) == 0x000434, "Member 'BP_EssentialBomba_C_ExecuteUbergraph_BP_EssentialBomba::K2Node_Event_Health' has a wrong offset!");
static_assert(offsetof(BP_EssentialBomba_C_ExecuteUbergraph_BP_EssentialBomba, K2Node_Event_MaxHealth) == 0x000438, "Member 'BP_EssentialBomba_C_ExecuteUbergraph_BP_EssentialBomba::K2Node_Event_MaxHealth' has a wrong offset!");
static_assert(offsetof(BP_EssentialBomba_C_ExecuteUbergraph_BP_EssentialBomba, K2Node_ComponentBoundEvent_OverlappedComponent_1) == 0x000440, "Member 'BP_EssentialBomba_C_ExecuteUbergraph_BP_EssentialBomba::K2Node_ComponentBoundEvent_OverlappedComponent_1' has a wrong offset!");
static_assert(offsetof(BP_EssentialBomba_C_ExecuteUbergraph_BP_EssentialBomba, K2Node_ComponentBoundEvent_OtherActor_1) == 0x000448, "Member 'BP_EssentialBomba_C_ExecuteUbergraph_BP_EssentialBomba::K2Node_ComponentBoundEvent_OtherActor_1' has a wrong offset!");
static_assert(offsetof(BP_EssentialBomba_C_ExecuteUbergraph_BP_EssentialBomba, K2Node_ComponentBoundEvent_OtherComp_1) == 0x000450, "Member 'BP_EssentialBomba_C_ExecuteUbergraph_BP_EssentialBomba::K2Node_ComponentBoundEvent_OtherComp_1' has a wrong offset!");
static_assert(offsetof(BP_EssentialBomba_C_ExecuteUbergraph_BP_EssentialBomba, K2Node_ComponentBoundEvent_OtherBodyIndex_1) == 0x000458, "Member 'BP_EssentialBomba_C_ExecuteUbergraph_BP_EssentialBomba::K2Node_ComponentBoundEvent_OtherBodyIndex_1' has a wrong offset!");
static_assert(offsetof(BP_EssentialBomba_C_ExecuteUbergraph_BP_EssentialBomba, K2Node_ComponentBoundEvent_bFromSweep) == 0x00045C, "Member 'BP_EssentialBomba_C_ExecuteUbergraph_BP_EssentialBomba::K2Node_ComponentBoundEvent_bFromSweep' has a wrong offset!");
static_assert(offsetof(BP_EssentialBomba_C_ExecuteUbergraph_BP_EssentialBomba, K2Node_ComponentBoundEvent_SweepResult) == 0x000460, "Member 'BP_EssentialBomba_C_ExecuteUbergraph_BP_EssentialBomba::K2Node_ComponentBoundEvent_SweepResult' has a wrong offset!");
static_assert(offsetof(BP_EssentialBomba_C_ExecuteUbergraph_BP_EssentialBomba, K2Node_ComponentBoundEvent_OverlappedComponent) == 0x000558, "Member 'BP_EssentialBomba_C_ExecuteUbergraph_BP_EssentialBomba::K2Node_ComponentBoundEvent_OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BP_EssentialBomba_C_ExecuteUbergraph_BP_EssentialBomba, K2Node_ComponentBoundEvent_OtherActor) == 0x000560, "Member 'BP_EssentialBomba_C_ExecuteUbergraph_BP_EssentialBomba::K2Node_ComponentBoundEvent_OtherActor' has a wrong offset!");
static_assert(offsetof(BP_EssentialBomba_C_ExecuteUbergraph_BP_EssentialBomba, K2Node_ComponentBoundEvent_OtherComp) == 0x000568, "Member 'BP_EssentialBomba_C_ExecuteUbergraph_BP_EssentialBomba::K2Node_ComponentBoundEvent_OtherComp' has a wrong offset!");
static_assert(offsetof(BP_EssentialBomba_C_ExecuteUbergraph_BP_EssentialBomba, K2Node_ComponentBoundEvent_OtherBodyIndex) == 0x000570, "Member 'BP_EssentialBomba_C_ExecuteUbergraph_BP_EssentialBomba::K2Node_ComponentBoundEvent_OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(BP_EssentialBomba_C_ExecuteUbergraph_BP_EssentialBomba, K2Node_DynamicCast_AsPawn) == 0x000578, "Member 'BP_EssentialBomba_C_ExecuteUbergraph_BP_EssentialBomba::K2Node_DynamicCast_AsPawn' has a wrong offset!");
static_assert(offsetof(BP_EssentialBomba_C_ExecuteUbergraph_BP_EssentialBomba, K2Node_DynamicCast_bSuccess_1) == 0x000580, "Member 'BP_EssentialBomba_C_ExecuteUbergraph_BP_EssentialBomba::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_EssentialBomba_C_ExecuteUbergraph_BP_EssentialBomba, K2Node_DynamicCast_AsPawn_1) == 0x000588, "Member 'BP_EssentialBomba_C_ExecuteUbergraph_BP_EssentialBomba::K2Node_DynamicCast_AsPawn_1' has a wrong offset!");
static_assert(offsetof(BP_EssentialBomba_C_ExecuteUbergraph_BP_EssentialBomba, K2Node_DynamicCast_bSuccess_2) == 0x000590, "Member 'BP_EssentialBomba_C_ExecuteUbergraph_BP_EssentialBomba::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_EssentialBomba_C_ExecuteUbergraph_BP_EssentialBomba, CallFunc_IsLocallyControlled_ReturnValue) == 0x000591, "Member 'BP_EssentialBomba_C_ExecuteUbergraph_BP_EssentialBomba::CallFunc_IsLocallyControlled_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EssentialBomba_C_ExecuteUbergraph_BP_EssentialBomba, CallFunc_IsLocallyControlled_ReturnValue_1) == 0x000592, "Member 'BP_EssentialBomba_C_ExecuteUbergraph_BP_EssentialBomba::CallFunc_IsLocallyControlled_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EssentialBomba_C_ExecuteUbergraph_BP_EssentialBomba, CallFunc_GetGameTimeSinceCreation_ReturnValue) == 0x000594, "Member 'BP_EssentialBomba_C_ExecuteUbergraph_BP_EssentialBomba::CallFunc_GetGameTimeSinceCreation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EssentialBomba_C_ExecuteUbergraph_BP_EssentialBomba, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000598, "Member 'BP_EssentialBomba_C_ExecuteUbergraph_BP_EssentialBomba::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EssentialBomba_C_ExecuteUbergraph_BP_EssentialBomba, CallFunc_K2_GetActorLocation_ReturnValue) == 0x0005A0, "Member 'BP_EssentialBomba_C_ExecuteUbergraph_BP_EssentialBomba::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EssentialBomba_C_ExecuteUbergraph_BP_EssentialBomba, CallFunc_SpawnSystemAtLocation_ReturnValue) == 0x0005B8, "Member 'BP_EssentialBomba_C_ExecuteUbergraph_BP_EssentialBomba::CallFunc_SpawnSystemAtLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EssentialBomba_C_ExecuteUbergraph_BP_EssentialBomba, K2Node_MakeArray_Array) == 0x0005C0, "Member 'BP_EssentialBomba_C_ExecuteUbergraph_BP_EssentialBomba::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_EssentialBomba_C_ExecuteUbergraph_BP_EssentialBomba, K2Node_MakeArray_Array_1) == 0x0005D0, "Member 'BP_EssentialBomba_C_ExecuteUbergraph_BP_EssentialBomba::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(BP_EssentialBomba_C_ExecuteUbergraph_BP_EssentialBomba, CallFunc_SphereOverlapActors_OutActors) == 0x0005E0, "Member 'BP_EssentialBomba_C_ExecuteUbergraph_BP_EssentialBomba::CallFunc_SphereOverlapActors_OutActors' has a wrong offset!");
static_assert(offsetof(BP_EssentialBomba_C_ExecuteUbergraph_BP_EssentialBomba, CallFunc_SphereOverlapActors_ReturnValue) == 0x0005F0, "Member 'BP_EssentialBomba_C_ExecuteUbergraph_BP_EssentialBomba::CallFunc_SphereOverlapActors_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EssentialBomba_C_ExecuteUbergraph_BP_EssentialBomba, K2Node_DynamicCast_AsCharacter) == 0x0005F8, "Member 'BP_EssentialBomba_C_ExecuteUbergraph_BP_EssentialBomba::K2Node_DynamicCast_AsCharacter' has a wrong offset!");
static_assert(offsetof(BP_EssentialBomba_C_ExecuteUbergraph_BP_EssentialBomba, K2Node_DynamicCast_bSuccess_3) == 0x000600, "Member 'BP_EssentialBomba_C_ExecuteUbergraph_BP_EssentialBomba::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(BP_EssentialBomba_C_ExecuteUbergraph_BP_EssentialBomba, CallFunc_Array_Get_Item) == 0x000608, "Member 'BP_EssentialBomba_C_ExecuteUbergraph_BP_EssentialBomba::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_EssentialBomba_C_ExecuteUbergraph_BP_EssentialBomba, CallFunc_GetDamageSpec_SpecHandle) == 0x000610, "Member 'BP_EssentialBomba_C_ExecuteUbergraph_BP_EssentialBomba::CallFunc_GetDamageSpec_SpecHandle' has a wrong offset!");
static_assert(offsetof(BP_EssentialBomba_C_ExecuteUbergraph_BP_EssentialBomba, CallFunc_GetAbilitySystemComponent_ReturnValue) == 0x000620, "Member 'BP_EssentialBomba_C_ExecuteUbergraph_BP_EssentialBomba::CallFunc_GetAbilitySystemComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EssentialBomba_C_ExecuteUbergraph_BP_EssentialBomba, CallFunc_Array_Length_ReturnValue) == 0x000628, "Member 'BP_EssentialBomba_C_ExecuteUbergraph_BP_EssentialBomba::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EssentialBomba_C_ExecuteUbergraph_BP_EssentialBomba, CallFunc_BP_ApplyGameplayEffectSpecToTarget_ReturnValue) == 0x00062C, "Member 'BP_EssentialBomba_C_ExecuteUbergraph_BP_EssentialBomba::CallFunc_BP_ApplyGameplayEffectSpecToTarget_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EssentialBomba_C_ExecuteUbergraph_BP_EssentialBomba, CallFunc_Less_IntInt_ReturnValue) == 0x000634, "Member 'BP_EssentialBomba_C_ExecuteUbergraph_BP_EssentialBomba::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EssentialBomba_C_ExecuteUbergraph_BP_EssentialBomba, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000638, "Member 'BP_EssentialBomba_C_ExecuteUbergraph_BP_EssentialBomba::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EssentialBomba_C_ExecuteUbergraph_BP_EssentialBomba, CallFunc_K2_GetComponentToWorld_ReturnValue) == 0x000640, "Member 'BP_EssentialBomba_C_ExecuteUbergraph_BP_EssentialBomba::CallFunc_K2_GetComponentToWorld_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EssentialBomba_C_ExecuteUbergraph_BP_EssentialBomba, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x0006A0, "Member 'BP_EssentialBomba_C_ExecuteUbergraph_BP_EssentialBomba::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EssentialBomba_C_ExecuteUbergraph_BP_EssentialBomba, CallFunc_FinishSpawningActor_ReturnValue) == 0x0006A8, "Member 'BP_EssentialBomba_C_ExecuteUbergraph_BP_EssentialBomba::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EssentialBomba_C_ExecuteUbergraph_BP_EssentialBomba, CallFunc_LessEqual_DoubleDouble_A_ImplicitCast) == 0x0006B0, "Member 'BP_EssentialBomba_C_ExecuteUbergraph_BP_EssentialBomba::CallFunc_LessEqual_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_EssentialBomba_C_ExecuteUbergraph_BP_EssentialBomba, CallFunc_Greater_DoubleDouble_A_ImplicitCast) == 0x0006B8, "Member 'BP_EssentialBomba_C_ExecuteUbergraph_BP_EssentialBomba::CallFunc_Greater_DoubleDouble_A_ImplicitCast' has a wrong offset!");

// Function BP_EssentialBomba.BP_EssentialBomba_C.GetDamageSpec
// 0x0178 (0x0178 - 0x0000)
struct BP_EssentialBomba_C_GetDamageSpec final
{
public:
	class ACharacter*                             Target;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayEffectSpecHandle              SpecHandle;                                        // 0x0008(0x0010)(Parm, OutParm)
	class UAbilitySystemComponent*                CallFunc_GetAbilitySystemComponent_ReturnValue;    // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FGameplayEffectSpecHandle              CallFunc_MakeOutgoingSpec_ReturnValue;             // 0x0020(0x0010)()
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0030(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_MakeHitResult_ReturnValue;                // 0x0050(0x00F8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FGameplayEffectSpecHandle              CallFunc_AssignTagSetByCallerMagnitude_ReturnValue; // 0x0148(0x0010)()
	struct FGameplayEffectContextHandle           CallFunc_GetEffectContext_ReturnValue;             // 0x0158(0x0018)()
	float                                         CallFunc_AssignTagSetByCallerMagnitude_Magnitude_ImplicitCast; // 0x0170(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EssentialBomba_C_GetDamageSpec) == 0x000008, "Wrong alignment on BP_EssentialBomba_C_GetDamageSpec");
static_assert(sizeof(BP_EssentialBomba_C_GetDamageSpec) == 0x000178, "Wrong size on BP_EssentialBomba_C_GetDamageSpec");
static_assert(offsetof(BP_EssentialBomba_C_GetDamageSpec, Target) == 0x000000, "Member 'BP_EssentialBomba_C_GetDamageSpec::Target' has a wrong offset!");
static_assert(offsetof(BP_EssentialBomba_C_GetDamageSpec, SpecHandle) == 0x000008, "Member 'BP_EssentialBomba_C_GetDamageSpec::SpecHandle' has a wrong offset!");
static_assert(offsetof(BP_EssentialBomba_C_GetDamageSpec, CallFunc_GetAbilitySystemComponent_ReturnValue) == 0x000018, "Member 'BP_EssentialBomba_C_GetDamageSpec::CallFunc_GetAbilitySystemComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EssentialBomba_C_GetDamageSpec, CallFunc_MakeOutgoingSpec_ReturnValue) == 0x000020, "Member 'BP_EssentialBomba_C_GetDamageSpec::CallFunc_MakeOutgoingSpec_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EssentialBomba_C_GetDamageSpec, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000030, "Member 'BP_EssentialBomba_C_GetDamageSpec::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EssentialBomba_C_GetDamageSpec, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000048, "Member 'BP_EssentialBomba_C_GetDamageSpec::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EssentialBomba_C_GetDamageSpec, CallFunc_MakeHitResult_ReturnValue) == 0x000050, "Member 'BP_EssentialBomba_C_GetDamageSpec::CallFunc_MakeHitResult_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EssentialBomba_C_GetDamageSpec, CallFunc_AssignTagSetByCallerMagnitude_ReturnValue) == 0x000148, "Member 'BP_EssentialBomba_C_GetDamageSpec::CallFunc_AssignTagSetByCallerMagnitude_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EssentialBomba_C_GetDamageSpec, CallFunc_GetEffectContext_ReturnValue) == 0x000158, "Member 'BP_EssentialBomba_C_GetDamageSpec::CallFunc_GetEffectContext_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EssentialBomba_C_GetDamageSpec, CallFunc_AssignTagSetByCallerMagnitude_Magnitude_ImplicitCast) == 0x000170, "Member 'BP_EssentialBomba_C_GetDamageSpec::CallFunc_AssignTagSetByCallerMagnitude_Magnitude_ImplicitCast' has a wrong offset!");

// Function BP_EssentialBomba.BP_EssentialBomba_C.GetDurabilityCostWhenHit
// 0x0008 (0x0008 - 0x0000)
struct BP_EssentialBomba_C_GetDurabilityCostWhenHit final
{
public:
	double                                        Amount;                                            // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EssentialBomba_C_GetDurabilityCostWhenHit) == 0x000008, "Wrong alignment on BP_EssentialBomba_C_GetDurabilityCostWhenHit");
static_assert(sizeof(BP_EssentialBomba_C_GetDurabilityCostWhenHit) == 0x000008, "Wrong size on BP_EssentialBomba_C_GetDurabilityCostWhenHit");
static_assert(offsetof(BP_EssentialBomba_C_GetDurabilityCostWhenHit, Amount) == 0x000000, "Member 'BP_EssentialBomba_C_GetDurabilityCostWhenHit::Amount' has a wrong offset!");

// Function BP_EssentialBomba.BP_EssentialBomba_C.GetMaterialType
// 0x0001 (0x0001 - 0x0000)
struct BP_EssentialBomba_C_GetMaterialType final
{
public:
	E_MaterialTypes                               MaterialType;                                      // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EssentialBomba_C_GetMaterialType) == 0x000001, "Wrong alignment on BP_EssentialBomba_C_GetMaterialType");
static_assert(sizeof(BP_EssentialBomba_C_GetMaterialType) == 0x000001, "Wrong size on BP_EssentialBomba_C_GetMaterialType");
static_assert(offsetof(BP_EssentialBomba_C_GetMaterialType, MaterialType) == 0x000000, "Member 'BP_EssentialBomba_C_GetMaterialType::MaterialType' has a wrong offset!");

// Function BP_EssentialBomba.BP_EssentialBomba_C.GetOptionalText
// 0x0020 (0x0020 - 0x0000)
struct BP_EssentialBomba_C_GetOptionalText final
{
public:
	class FText                                   Return;                                            // 0x0000(0x0010)(Parm, OutParm)
	class FText                                   Optional_Second_Line;                              // 0x0010(0x0010)(Parm, OutParm)
};
static_assert(alignof(BP_EssentialBomba_C_GetOptionalText) == 0x000008, "Wrong alignment on BP_EssentialBomba_C_GetOptionalText");
static_assert(sizeof(BP_EssentialBomba_C_GetOptionalText) == 0x000020, "Wrong size on BP_EssentialBomba_C_GetOptionalText");
static_assert(offsetof(BP_EssentialBomba_C_GetOptionalText, Return) == 0x000000, "Member 'BP_EssentialBomba_C_GetOptionalText::Return' has a wrong offset!");
static_assert(offsetof(BP_EssentialBomba_C_GetOptionalText, Optional_Second_Line) == 0x000010, "Member 'BP_EssentialBomba_C_GetOptionalText::Optional_Second_Line' has a wrong offset!");

// Function BP_EssentialBomba.BP_EssentialBomba_C.HideInteractionWidget
// 0x0001 (0x0001 - 0x0000)
struct BP_EssentialBomba_C_HideInteractionWidget final
{
public:
	bool                                          Return;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EssentialBomba_C_HideInteractionWidget) == 0x000001, "Wrong alignment on BP_EssentialBomba_C_HideInteractionWidget");
static_assert(sizeof(BP_EssentialBomba_C_HideInteractionWidget) == 0x000001, "Wrong size on BP_EssentialBomba_C_HideInteractionWidget");
static_assert(offsetof(BP_EssentialBomba_C_HideInteractionWidget, Return) == 0x000000, "Member 'BP_EssentialBomba_C_HideInteractionWidget::Return' has a wrong offset!");

// Function BP_EssentialBomba.BP_EssentialBomba_C.HitInterface
// 0x0018 (0x0018 - 0x0000)
struct BP_EssentialBomba_C_HitInterface final
{
public:
	struct FVector                                Direction;                                         // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EssentialBomba_C_HitInterface) == 0x000008, "Wrong alignment on BP_EssentialBomba_C_HitInterface");
static_assert(sizeof(BP_EssentialBomba_C_HitInterface) == 0x000018, "Wrong size on BP_EssentialBomba_C_HitInterface");
static_assert(offsetof(BP_EssentialBomba_C_HitInterface, Direction) == 0x000000, "Member 'BP_EssentialBomba_C_HitInterface::Direction' has a wrong offset!");

// Function BP_EssentialBomba.BP_EssentialBomba_C.ImpactCosmetics
// 0x0048 (0x0048 - 0x0000)
struct BP_EssentialBomba_C_ImpactCosmetics final
{
public:
	class APawn*                                  ImpactCauser;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Location;                                          // 0x0008(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                HitImpulse;                                        // 0x0020(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_ImpactEffect                                ImpactEffect;                                      // 0x0038(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x3];                                       // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   BoneName;                                          // 0x003C(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ChangedAttributes;                                 // 0x0044(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EssentialBomba_C_ImpactCosmetics) == 0x000008, "Wrong alignment on BP_EssentialBomba_C_ImpactCosmetics");
static_assert(sizeof(BP_EssentialBomba_C_ImpactCosmetics) == 0x000048, "Wrong size on BP_EssentialBomba_C_ImpactCosmetics");
static_assert(offsetof(BP_EssentialBomba_C_ImpactCosmetics, ImpactCauser) == 0x000000, "Member 'BP_EssentialBomba_C_ImpactCosmetics::ImpactCauser' has a wrong offset!");
static_assert(offsetof(BP_EssentialBomba_C_ImpactCosmetics, Location) == 0x000008, "Member 'BP_EssentialBomba_C_ImpactCosmetics::Location' has a wrong offset!");
static_assert(offsetof(BP_EssentialBomba_C_ImpactCosmetics, HitImpulse) == 0x000020, "Member 'BP_EssentialBomba_C_ImpactCosmetics::HitImpulse' has a wrong offset!");
static_assert(offsetof(BP_EssentialBomba_C_ImpactCosmetics, ImpactEffect) == 0x000038, "Member 'BP_EssentialBomba_C_ImpactCosmetics::ImpactEffect' has a wrong offset!");
static_assert(offsetof(BP_EssentialBomba_C_ImpactCosmetics, BoneName) == 0x00003C, "Member 'BP_EssentialBomba_C_ImpactCosmetics::BoneName' has a wrong offset!");
static_assert(offsetof(BP_EssentialBomba_C_ImpactCosmetics, ChangedAttributes) == 0x000044, "Member 'BP_EssentialBomba_C_ImpactCosmetics::ChangedAttributes' has a wrong offset!");

// Function BP_EssentialBomba.BP_EssentialBomba_C.MeleeHit
// 0x0008 (0x0008 - 0x0000)
struct BP_EssentialBomba_C_MeleeHit final
{
public:
	const class AActor*                           AttackingActor;                                    // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EssentialBomba_C_MeleeHit) == 0x000008, "Wrong alignment on BP_EssentialBomba_C_MeleeHit");
static_assert(sizeof(BP_EssentialBomba_C_MeleeHit) == 0x000008, "Wrong size on BP_EssentialBomba_C_MeleeHit");
static_assert(offsetof(BP_EssentialBomba_C_MeleeHit, AttackingActor) == 0x000000, "Member 'BP_EssentialBomba_C_MeleeHit::AttackingActor' has a wrong offset!");

// Function BP_EssentialBomba.BP_EssentialBomba_C.OnDamaged
// 0x0370 (0x0370 - 0x0000)
struct BP_EssentialBomba_C_OnDamaged final
{
public:
	float                                         Delta;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 Causer;                                            // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FCombatParticipant                     CombatParticipant;                                 // 0x0010(0x0060)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm)
	struct FKillMethod                            KillMethod;                                        // 0x0070(0x02E8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm)
	struct FVector_NetQuantize                    Location;                                          // 0x0358(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EssentialBomba_C_OnDamaged) == 0x000008, "Wrong alignment on BP_EssentialBomba_C_OnDamaged");
static_assert(sizeof(BP_EssentialBomba_C_OnDamaged) == 0x000370, "Wrong size on BP_EssentialBomba_C_OnDamaged");
static_assert(offsetof(BP_EssentialBomba_C_OnDamaged, Delta) == 0x000000, "Member 'BP_EssentialBomba_C_OnDamaged::Delta' has a wrong offset!");
static_assert(offsetof(BP_EssentialBomba_C_OnDamaged, Causer) == 0x000008, "Member 'BP_EssentialBomba_C_OnDamaged::Causer' has a wrong offset!");
static_assert(offsetof(BP_EssentialBomba_C_OnDamaged, CombatParticipant) == 0x000010, "Member 'BP_EssentialBomba_C_OnDamaged::CombatParticipant' has a wrong offset!");
static_assert(offsetof(BP_EssentialBomba_C_OnDamaged, KillMethod) == 0x000070, "Member 'BP_EssentialBomba_C_OnDamaged::KillMethod' has a wrong offset!");
static_assert(offsetof(BP_EssentialBomba_C_OnDamaged, Location) == 0x000358, "Member 'BP_EssentialBomba_C_OnDamaged::Location' has a wrong offset!");

// Function BP_EssentialBomba.BP_EssentialBomba_C.OnHealthChanged
// 0x0008 (0x0008 - 0x0000)
struct BP_EssentialBomba_C_OnHealthChanged final
{
public:
	float                                         Health;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MaxHealth;                                         // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EssentialBomba_C_OnHealthChanged) == 0x000004, "Wrong alignment on BP_EssentialBomba_C_OnHealthChanged");
static_assert(sizeof(BP_EssentialBomba_C_OnHealthChanged) == 0x000008, "Wrong size on BP_EssentialBomba_C_OnHealthChanged");
static_assert(offsetof(BP_EssentialBomba_C_OnHealthChanged, Health) == 0x000000, "Member 'BP_EssentialBomba_C_OnHealthChanged::Health' has a wrong offset!");
static_assert(offsetof(BP_EssentialBomba_C_OnHealthChanged, MaxHealth) == 0x000004, "Member 'BP_EssentialBomba_C_OnHealthChanged::MaxHealth' has a wrong offset!");

// Function BP_EssentialBomba.BP_EssentialBomba_C.UpdateHealthBar
// 0x0028 (0x0028 - 0x0000)
struct BP_EssentialBomba_C_UpdateHealthBar final
{
public:
	bool                                          CallFunc_GetFloatAttributeFromAbilitySystemComponent_bSuccessfullyFoundAttribute; // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetFloatAttributeFromAbilitySystemComponent_ReturnValue; // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetFloatAttributeFromAbilitySystemComponent_bSuccessfullyFoundAttribute_1; // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetFloatAttributeFromAbilitySystemComponent_ReturnValue_1; // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_NormalizeToRange_ReturnValue;             // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_NormalizeToRange_Value_ImplicitCast;      // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_NormalizeToRange_RangeMax_ImplicitCast;   // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EssentialBomba_C_UpdateHealthBar) == 0x000008, "Wrong alignment on BP_EssentialBomba_C_UpdateHealthBar");
static_assert(sizeof(BP_EssentialBomba_C_UpdateHealthBar) == 0x000028, "Wrong size on BP_EssentialBomba_C_UpdateHealthBar");
static_assert(offsetof(BP_EssentialBomba_C_UpdateHealthBar, CallFunc_GetFloatAttributeFromAbilitySystemComponent_bSuccessfullyFoundAttribute) == 0x000000, "Member 'BP_EssentialBomba_C_UpdateHealthBar::CallFunc_GetFloatAttributeFromAbilitySystemComponent_bSuccessfullyFoundAttribute' has a wrong offset!");
static_assert(offsetof(BP_EssentialBomba_C_UpdateHealthBar, CallFunc_GetFloatAttributeFromAbilitySystemComponent_ReturnValue) == 0x000004, "Member 'BP_EssentialBomba_C_UpdateHealthBar::CallFunc_GetFloatAttributeFromAbilitySystemComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EssentialBomba_C_UpdateHealthBar, CallFunc_GetFloatAttributeFromAbilitySystemComponent_bSuccessfullyFoundAttribute_1) == 0x000008, "Member 'BP_EssentialBomba_C_UpdateHealthBar::CallFunc_GetFloatAttributeFromAbilitySystemComponent_bSuccessfullyFoundAttribute_1' has a wrong offset!");
static_assert(offsetof(BP_EssentialBomba_C_UpdateHealthBar, CallFunc_GetFloatAttributeFromAbilitySystemComponent_ReturnValue_1) == 0x00000C, "Member 'BP_EssentialBomba_C_UpdateHealthBar::CallFunc_GetFloatAttributeFromAbilitySystemComponent_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EssentialBomba_C_UpdateHealthBar, CallFunc_NormalizeToRange_ReturnValue) == 0x000010, "Member 'BP_EssentialBomba_C_UpdateHealthBar::CallFunc_NormalizeToRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EssentialBomba_C_UpdateHealthBar, CallFunc_NormalizeToRange_Value_ImplicitCast) == 0x000018, "Member 'BP_EssentialBomba_C_UpdateHealthBar::CallFunc_NormalizeToRange_Value_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_EssentialBomba_C_UpdateHealthBar, CallFunc_NormalizeToRange_RangeMax_ImplicitCast) == 0x000020, "Member 'BP_EssentialBomba_C_UpdateHealthBar::CallFunc_NormalizeToRange_RangeMax_ImplicitCast' has a wrong offset!");

// Function BP_EssentialBomba.BP_EssentialBomba_C.GetTeam
// 0x0038 (0x0038 - 0x0000)
struct BP_EssentialBomba_C_GetTeam final
{
public:
	struct FTeam                                  ReturnValue;                                       // 0x0000(0x0038)(Parm, OutParm, ReturnParm, NoDestructor)
};
static_assert(alignof(BP_EssentialBomba_C_GetTeam) == 0x000008, "Wrong alignment on BP_EssentialBomba_C_GetTeam");
static_assert(sizeof(BP_EssentialBomba_C_GetTeam) == 0x000038, "Wrong size on BP_EssentialBomba_C_GetTeam");
static_assert(offsetof(BP_EssentialBomba_C_GetTeam, ReturnValue) == 0x000000, "Member 'BP_EssentialBomba_C_GetTeam::ReturnValue' has a wrong offset!");

// Function BP_EssentialBomba.BP_EssentialBomba_C.GetTeamID
// 0x0001 (0x0001 - 0x0000)
struct BP_EssentialBomba_C_GetTeamID final
{
public:
	uint8                                         ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EssentialBomba_C_GetTeamID) == 0x000001, "Wrong alignment on BP_EssentialBomba_C_GetTeamID");
static_assert(sizeof(BP_EssentialBomba_C_GetTeamID) == 0x000001, "Wrong size on BP_EssentialBomba_C_GetTeamID");
static_assert(offsetof(BP_EssentialBomba_C_GetTeamID, ReturnValue) == 0x000000, "Member 'BP_EssentialBomba_C_GetTeamID::ReturnValue' has a wrong offset!");

// Function BP_EssentialBomba.BP_EssentialBomba_C.HasTeam
// 0x0001 (0x0001 - 0x0000)
struct BP_EssentialBomba_C_HasTeam final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EssentialBomba_C_HasTeam) == 0x000001, "Wrong alignment on BP_EssentialBomba_C_HasTeam");
static_assert(sizeof(BP_EssentialBomba_C_HasTeam) == 0x000001, "Wrong size on BP_EssentialBomba_C_HasTeam");
static_assert(offsetof(BP_EssentialBomba_C_HasTeam, ReturnValue) == 0x000000, "Member 'BP_EssentialBomba_C_HasTeam::ReturnValue' has a wrong offset!");

// Function BP_EssentialBomba.BP_EssentialBomba_C.IsAvailableForEnemyTeam
// 0x0010 (0x0010 - 0x0000)
struct BP_EssentialBomba_C_IsAvailableForEnemyTeam final
{
public:
	class UPrimitiveComponent*                    InteractionComponent;                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EssentialBomba_C_IsAvailableForEnemyTeam) == 0x000008, "Wrong alignment on BP_EssentialBomba_C_IsAvailableForEnemyTeam");
static_assert(sizeof(BP_EssentialBomba_C_IsAvailableForEnemyTeam) == 0x000010, "Wrong size on BP_EssentialBomba_C_IsAvailableForEnemyTeam");
static_assert(offsetof(BP_EssentialBomba_C_IsAvailableForEnemyTeam, InteractionComponent) == 0x000000, "Member 'BP_EssentialBomba_C_IsAvailableForEnemyTeam::InteractionComponent' has a wrong offset!");
static_assert(offsetof(BP_EssentialBomba_C_IsAvailableForEnemyTeam, ReturnValue) == 0x000008, "Member 'BP_EssentialBomba_C_IsAvailableForEnemyTeam::ReturnValue' has a wrong offset!");

// Function BP_EssentialBomba.BP_EssentialBomba_C.IsAvailableForInteraction
// 0x0018 (0x0018 - 0x0000)
struct BP_EssentialBomba_C_IsAvailableForInteraction final
{
public:
	class AActor*                                 InteractingActor_0;                                // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    InteractionComponent;                              // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EssentialBomba_C_IsAvailableForInteraction) == 0x000008, "Wrong alignment on BP_EssentialBomba_C_IsAvailableForInteraction");
static_assert(sizeof(BP_EssentialBomba_C_IsAvailableForInteraction) == 0x000018, "Wrong size on BP_EssentialBomba_C_IsAvailableForInteraction");
static_assert(offsetof(BP_EssentialBomba_C_IsAvailableForInteraction, InteractingActor_0) == 0x000000, "Member 'BP_EssentialBomba_C_IsAvailableForInteraction::InteractingActor_0' has a wrong offset!");
static_assert(offsetof(BP_EssentialBomba_C_IsAvailableForInteraction, InteractionComponent) == 0x000008, "Member 'BP_EssentialBomba_C_IsAvailableForInteraction::InteractionComponent' has a wrong offset!");
static_assert(offsetof(BP_EssentialBomba_C_IsAvailableForInteraction, ReturnValue) == 0x000010, "Member 'BP_EssentialBomba_C_IsAvailableForInteraction::ReturnValue' has a wrong offset!");

// Function BP_EssentialBomba.BP_EssentialBomba_C.TakeDamageFromAllTeams
// 0x0001 (0x0001 - 0x0000)
struct BP_EssentialBomba_C_TakeDamageFromAllTeams final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EssentialBomba_C_TakeDamageFromAllTeams) == 0x000001, "Wrong alignment on BP_EssentialBomba_C_TakeDamageFromAllTeams");
static_assert(sizeof(BP_EssentialBomba_C_TakeDamageFromAllTeams) == 0x000001, "Wrong size on BP_EssentialBomba_C_TakeDamageFromAllTeams");
static_assert(offsetof(BP_EssentialBomba_C_TakeDamageFromAllTeams, ReturnValue) == 0x000000, "Member 'BP_EssentialBomba_C_TakeDamageFromAllTeams::ReturnValue' has a wrong offset!");

}

