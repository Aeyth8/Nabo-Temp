#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GA_Equipment

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "GASIW_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass GA_Equipment.GA_Equipment_C
// 0x0160 (0x05E0 - 0x0480)
#pragma pack(push, 0x1)
class alignas(0x10) UGA_Equipment_C : public UGameplayAbilityEquipment
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0480(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	int32                                         OneShotCount;                                      // 0x0488(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_48C[0x4];                                      // 0x048C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UAnimMontage*>                   CharacterOneShotMontagesFPP;                       // 0x0490(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<class UAnimMontage*>                   CharacterOneShotMontagesTPP;                       // 0x04A0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<class UAnimMontage*>                   CharacterChargeMontageFPP;                         // 0x04B0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<class UAnimMontage*>                   CharacterChargeMontageTPP;                         // 0x04C0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<class UAnimMontage*>                   CharacterOnReleaseMontageFPP;                      // 0x04D0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<class UAnimMontage*>                   CharacterOnReleaseMontageTPP;                      // 0x04E0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	class UAnimMontage*                           Current_Montage_FPP;                               // 0x04F0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           Current_Montage_TPP;                               // 0x04F8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	int32                                         Ticks_Per_Second;                                  // 0x0500(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Charge_Rate;                                       // 0x0504(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         OnHitActorPlayRate;                                // 0x0508(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         OnHitActorSlowdownDuration;                        // 0x050C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MontageStopBlendOutTime;                           // 0x0510(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          StopMontageOnEndAbility;                           // 0x0514(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bStopItemMontageOnEndAbility;                      // 0x0515(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_516[0x2];                                      // 0x0516(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ChargeCount;                                       // 0x0518(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Play_Rate;                                         // 0x051C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Starting_Position;                                 // 0x0520(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Starting_Section;                                  // 0x0524(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IncrementCount;                                    // 0x052C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_52D[0x3];                                      // 0x052D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UAnimMontage*>                   One_Shot_MontageTPP;                               // 0x0530(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<class UAnimMontage*>                   Charge_MontageTPP;                                 // 0x0540(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<class UAnimMontage*>                   On_Release_MontageTPP;                             // 0x0550(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<class UAnimMontage*>                   One_Shot_MontageFPP;                               // 0x0560(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<class UAnimMontage*>                   Charge_MontageFPP;                                 // 0x0570(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<class UAnimMontage*>                   On_Release_MontageFPP;                             // 0x0580(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	double                                        CachedChargedPlayRate;                             // 0x0590(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bCalculateChargedPlayRate;                         // 0x0598(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_599[0x7];                                      // 0x0599(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UAnimMontage*>                   CharacterAffectedMontagesFPP;                      // 0x05A0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<class UAnimMontage*>                   CharacterAffectedMontagesTPP;                      // 0x05B0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	int32                                         AffectedCount;                                     // 0x05C0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5C4[0x4];                                      // 0x05C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             AbilityHUDIcon;                                    // 0x05C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                          HeldAbility;                                       // 0x05D0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void AffectedMontageEvent();
	void Check_on_Cooldown_Cue(const struct FGameplayTagContainer& Gameplay_Tags);
	void CheckItemBroken();
	void CheckNoAmmoCue(const struct FGameplayTagContainer& GameplayTagContainer);
	void Event_Play_Charge_Montage();
	void Event_PlayOneShotMontages(class UAnimMontage* MontageFPP, class UAnimMontage* MontageTPP, float PlayRate, float StartingPosition, class FName StartingSection);
	void Event_StopMontages();
	void EventReceived_9559A0914F3EAD112E6C8E98F7AA5D18(const struct FGameplayTag& EventTag, const struct FGameplayEventData& EventData);
	void EventReceived_AFDE5EE746339BC47D92C5BBC5E7265D(const struct FGameplayTag& EventTag, const struct FGameplayEventData& EventData);
	void ExecuteNoAmmoCue();
	void ExecuteUbergraph_GA_Equipment(int32 EntryPoint);
	void Find_Count(const TArray<class UAnimMontage*>& TargetArray, int32 InCount, int32* Count);
	void Get_Structure_Damage_Multiplier(float* Damage_Multiplier, bool* MultiplierFound);
	double GetChargedPlayRate();
	void GetCorrectAmmoGameplayEffect(const struct FGameplayTag& Tag, class UClass** GameplayEffect);
	void GetMontageFromCount(int32 Count, TArray<class UAnimMontage*>& MontageInputFPP, TArray<class UAnimMontage*>& MontageInputTPP, class UAnimMontage** MontageOutputFPP, class UAnimMontage** MontageOutputTPP);
	void HasAmmo(const struct FGameplayAttribute& Attribute, bool* HasAmmo_0);
	void IsFPPMontageDataAssetValid(class UCharacterItemAnimDefinition* MontageFPPDataAsset);
	void IsTPPMontageDataAssetValid(class UCharacterItemAnimDefinition* MontageTPPDataAsset);
	void K2_ActivateAbility();
	void K2_OnAbilityFailed(const struct FGameplayTagContainer& FailureReason);
	void K2_OnEndAbility(bool bWasCancelled);
	void MontageNotify(class FName NotifyName);
	void MontageSetPlayRateOnHit();
	void OnBlendOut_3DF8331F46087D01CA10C0B8666CA9D4(class FName NotifyName);
	void OnBlendOut_81329CA941BBA8B1006ECDAA49553E11(class FName NotifyName);
	void OnBlendOut_81329CA941BBA8B1006ECDAAFD5DDADB(class FName NotifyName);
	void OnBlendOut_9559A0914F3EAD112E6C8E98F7AA5D18(const struct FGameplayTag& EventTag, const struct FGameplayEventData& EventData);
	void OnBlendOut_AFDE5EE746339BC47D92C5BBC5E7265D(const struct FGameplayTag& EventTag, const struct FGameplayEventData& EventData);
	void OnCancelled_9559A0914F3EAD112E6C8E98F7AA5D18(const struct FGameplayTag& EventTag, const struct FGameplayEventData& EventData);
	void OnCancelled_AFDE5EE746339BC47D92C5BBC5E7265D(const struct FGameplayTag& EventTag, const struct FGameplayEventData& EventData);
	void OnCompleted_3DF8331F46087D01CA10C0B8666CA9D4(class FName NotifyName);
	void OnCompleted_81329CA941BBA8B1006ECDAA49553E11(class FName NotifyName);
	void OnCompleted_81329CA941BBA8B1006ECDAAFD5DDADB(class FName NotifyName);
	void OnCompleted_9559A0914F3EAD112E6C8E98F7AA5D18(const struct FGameplayTag& EventTag, const struct FGameplayEventData& EventData);
	void OnCompleted_AFDE5EE746339BC47D92C5BBC5E7265D(const struct FGameplayTag& EventTag, const struct FGameplayEventData& EventData);
	void OneShotMontageEvent();
	void OnInterrupted_3DF8331F46087D01CA10C0B8666CA9D4(class FName NotifyName);
	void OnInterrupted_81329CA941BBA8B1006ECDAA49553E11(class FName NotifyName);
	void OnInterrupted_81329CA941BBA8B1006ECDAAFD5DDADB(class FName NotifyName);
	void OnInterrupted_9559A0914F3EAD112E6C8E98F7AA5D18(const struct FGameplayTag& EventTag, const struct FGameplayEventData& EventData);
	void OnInterrupted_AFDE5EE746339BC47D92C5BBC5E7265D(const struct FGameplayTag& EventTag, const struct FGameplayEventData& EventData);
	void OnNotifyBegin_3DF8331F46087D01CA10C0B8666CA9D4(class FName NotifyName);
	void OnNotifyBegin_81329CA941BBA8B1006ECDAA49553E11(class FName NotifyName);
	void OnNotifyBegin_81329CA941BBA8B1006ECDAAFD5DDADB(class FName NotifyName);
	void OnNotifyEnd_3DF8331F46087D01CA10C0B8666CA9D4(class FName NotifyName);
	void OnNotifyEnd_81329CA941BBA8B1006ECDAA49553E11(class FName NotifyName);
	void OnNotifyEnd_81329CA941BBA8B1006ECDAAFD5DDADB(class FName NotifyName);
	void OnReleaseMontageEvent();
	void ResetCombo();
	void SelectAnimation();
	void SetAnimState(bool Blocked);
	void SetKillData(const struct FHitResult& Hit, const struct FGameplayEffectSpecHandle& Spec);
	void SetMontagePlayRateFromTimer();
	void ShowNoAmmoMessage();
	void StopItemMontage();
	void SubtractAmmo(int32 AmmoToRemove, const struct FGameplayTag& AmmoTag);

	bool K2_CanActivateAbility(const struct FGameplayAbilityActorInfo& ActorInfo, const struct FGameplayAbilitySpecHandle& Handle, struct FGameplayTagContainer* RelevantTags) const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"GA_Equipment_C">();
	}
	static class UGA_Equipment_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGA_Equipment_C>();
	}
};
#pragma pack(pop)
static_assert(alignof(UGA_Equipment_C) == 0x000010, "Wrong alignment on UGA_Equipment_C");
static_assert(sizeof(UGA_Equipment_C) == 0x0005E0, "Wrong size on UGA_Equipment_C");
static_assert(offsetof(UGA_Equipment_C, UberGraphFrame) == 0x000480, "Member 'UGA_Equipment_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UGA_Equipment_C, OneShotCount) == 0x000488, "Member 'UGA_Equipment_C::OneShotCount' has a wrong offset!");
static_assert(offsetof(UGA_Equipment_C, CharacterOneShotMontagesFPP) == 0x000490, "Member 'UGA_Equipment_C::CharacterOneShotMontagesFPP' has a wrong offset!");
static_assert(offsetof(UGA_Equipment_C, CharacterOneShotMontagesTPP) == 0x0004A0, "Member 'UGA_Equipment_C::CharacterOneShotMontagesTPP' has a wrong offset!");
static_assert(offsetof(UGA_Equipment_C, CharacterChargeMontageFPP) == 0x0004B0, "Member 'UGA_Equipment_C::CharacterChargeMontageFPP' has a wrong offset!");
static_assert(offsetof(UGA_Equipment_C, CharacterChargeMontageTPP) == 0x0004C0, "Member 'UGA_Equipment_C::CharacterChargeMontageTPP' has a wrong offset!");
static_assert(offsetof(UGA_Equipment_C, CharacterOnReleaseMontageFPP) == 0x0004D0, "Member 'UGA_Equipment_C::CharacterOnReleaseMontageFPP' has a wrong offset!");
static_assert(offsetof(UGA_Equipment_C, CharacterOnReleaseMontageTPP) == 0x0004E0, "Member 'UGA_Equipment_C::CharacterOnReleaseMontageTPP' has a wrong offset!");
static_assert(offsetof(UGA_Equipment_C, Current_Montage_FPP) == 0x0004F0, "Member 'UGA_Equipment_C::Current_Montage_FPP' has a wrong offset!");
static_assert(offsetof(UGA_Equipment_C, Current_Montage_TPP) == 0x0004F8, "Member 'UGA_Equipment_C::Current_Montage_TPP' has a wrong offset!");
static_assert(offsetof(UGA_Equipment_C, Ticks_Per_Second) == 0x000500, "Member 'UGA_Equipment_C::Ticks_Per_Second' has a wrong offset!");
static_assert(offsetof(UGA_Equipment_C, Charge_Rate) == 0x000504, "Member 'UGA_Equipment_C::Charge_Rate' has a wrong offset!");
static_assert(offsetof(UGA_Equipment_C, OnHitActorPlayRate) == 0x000508, "Member 'UGA_Equipment_C::OnHitActorPlayRate' has a wrong offset!");
static_assert(offsetof(UGA_Equipment_C, OnHitActorSlowdownDuration) == 0x00050C, "Member 'UGA_Equipment_C::OnHitActorSlowdownDuration' has a wrong offset!");
static_assert(offsetof(UGA_Equipment_C, MontageStopBlendOutTime) == 0x000510, "Member 'UGA_Equipment_C::MontageStopBlendOutTime' has a wrong offset!");
static_assert(offsetof(UGA_Equipment_C, StopMontageOnEndAbility) == 0x000514, "Member 'UGA_Equipment_C::StopMontageOnEndAbility' has a wrong offset!");
static_assert(offsetof(UGA_Equipment_C, bStopItemMontageOnEndAbility) == 0x000515, "Member 'UGA_Equipment_C::bStopItemMontageOnEndAbility' has a wrong offset!");
static_assert(offsetof(UGA_Equipment_C, ChargeCount) == 0x000518, "Member 'UGA_Equipment_C::ChargeCount' has a wrong offset!");
static_assert(offsetof(UGA_Equipment_C, Play_Rate) == 0x00051C, "Member 'UGA_Equipment_C::Play_Rate' has a wrong offset!");
static_assert(offsetof(UGA_Equipment_C, Starting_Position) == 0x000520, "Member 'UGA_Equipment_C::Starting_Position' has a wrong offset!");
static_assert(offsetof(UGA_Equipment_C, Starting_Section) == 0x000524, "Member 'UGA_Equipment_C::Starting_Section' has a wrong offset!");
static_assert(offsetof(UGA_Equipment_C, IncrementCount) == 0x00052C, "Member 'UGA_Equipment_C::IncrementCount' has a wrong offset!");
static_assert(offsetof(UGA_Equipment_C, One_Shot_MontageTPP) == 0x000530, "Member 'UGA_Equipment_C::One_Shot_MontageTPP' has a wrong offset!");
static_assert(offsetof(UGA_Equipment_C, Charge_MontageTPP) == 0x000540, "Member 'UGA_Equipment_C::Charge_MontageTPP' has a wrong offset!");
static_assert(offsetof(UGA_Equipment_C, On_Release_MontageTPP) == 0x000550, "Member 'UGA_Equipment_C::On_Release_MontageTPP' has a wrong offset!");
static_assert(offsetof(UGA_Equipment_C, One_Shot_MontageFPP) == 0x000560, "Member 'UGA_Equipment_C::One_Shot_MontageFPP' has a wrong offset!");
static_assert(offsetof(UGA_Equipment_C, Charge_MontageFPP) == 0x000570, "Member 'UGA_Equipment_C::Charge_MontageFPP' has a wrong offset!");
static_assert(offsetof(UGA_Equipment_C, On_Release_MontageFPP) == 0x000580, "Member 'UGA_Equipment_C::On_Release_MontageFPP' has a wrong offset!");
static_assert(offsetof(UGA_Equipment_C, CachedChargedPlayRate) == 0x000590, "Member 'UGA_Equipment_C::CachedChargedPlayRate' has a wrong offset!");
static_assert(offsetof(UGA_Equipment_C, bCalculateChargedPlayRate) == 0x000598, "Member 'UGA_Equipment_C::bCalculateChargedPlayRate' has a wrong offset!");
static_assert(offsetof(UGA_Equipment_C, CharacterAffectedMontagesFPP) == 0x0005A0, "Member 'UGA_Equipment_C::CharacterAffectedMontagesFPP' has a wrong offset!");
static_assert(offsetof(UGA_Equipment_C, CharacterAffectedMontagesTPP) == 0x0005B0, "Member 'UGA_Equipment_C::CharacterAffectedMontagesTPP' has a wrong offset!");
static_assert(offsetof(UGA_Equipment_C, AffectedCount) == 0x0005C0, "Member 'UGA_Equipment_C::AffectedCount' has a wrong offset!");
static_assert(offsetof(UGA_Equipment_C, AbilityHUDIcon) == 0x0005C8, "Member 'UGA_Equipment_C::AbilityHUDIcon' has a wrong offset!");
static_assert(offsetof(UGA_Equipment_C, HeldAbility) == 0x0005D0, "Member 'UGA_Equipment_C::HeldAbility' has a wrong offset!");

}

