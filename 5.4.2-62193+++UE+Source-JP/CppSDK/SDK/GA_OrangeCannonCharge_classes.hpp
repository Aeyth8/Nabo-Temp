#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GA_OrangeCannonCharge

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "GASIW_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass GA_OrangeCannonCharge.GA_OrangeCannonCharge_C
// 0x0020 (0x04A0 - 0x0480)
class UGA_OrangeCannonCharge_C final : public UGameplayAbilityEquipment
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0480(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UAbilityAsync_WaitAttributeChanged*     AttributeChangeTask;                               // 0x0488(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UGameplayTask_WaitDelay*                ChargeTask;                                        // 0x0490(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 Equipable;                                         // 0x0498(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)

public:
	void Changed_EC5DC5A94F3C55A845B066AFADB8C513(const struct FGameplayAttribute& Attribute, float NewValue, float OldValue);
	void ExecuteUbergraph_GA_OrangeCannonCharge(int32 EntryPoint);
	void GetChargableEquipment(class UChargableEquipmentInstance_C** AsChargable_Equipment_Instance);
	double GetFullChargeTime();
	void K2_ActivateAbility();
	void K2_OnEndAbility(bool bWasCancelled);
	void OnFinish_7517FA8F41A23C8CBB84D5B034B0082C();
	void PlaySoundFromEquipable(class USoundCue* Sound);
	void Recharge();
	void SetEquipable();
	void SetLastChargeTime();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"GA_OrangeCannonCharge_C">();
	}
	static class UGA_OrangeCannonCharge_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGA_OrangeCannonCharge_C>();
	}
};
static_assert(alignof(UGA_OrangeCannonCharge_C) == 0x000010, "Wrong alignment on UGA_OrangeCannonCharge_C");
static_assert(sizeof(UGA_OrangeCannonCharge_C) == 0x0004A0, "Wrong size on UGA_OrangeCannonCharge_C");
static_assert(offsetof(UGA_OrangeCannonCharge_C, UberGraphFrame) == 0x000480, "Member 'UGA_OrangeCannonCharge_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UGA_OrangeCannonCharge_C, AttributeChangeTask) == 0x000488, "Member 'UGA_OrangeCannonCharge_C::AttributeChangeTask' has a wrong offset!");
static_assert(offsetof(UGA_OrangeCannonCharge_C, ChargeTask) == 0x000490, "Member 'UGA_OrangeCannonCharge_C::ChargeTask' has a wrong offset!");
static_assert(offsetof(UGA_OrangeCannonCharge_C, Equipable) == 0x000498, "Member 'UGA_OrangeCannonCharge_C::Equipable' has a wrong offset!");

}

