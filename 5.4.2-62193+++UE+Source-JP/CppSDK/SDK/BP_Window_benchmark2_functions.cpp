#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Window_benchmark2

#include "Basic.hpp"

#include "BP_Window_benchmark2_classes.hpp"
#include "BP_Window_benchmark2_parameters.hpp"


namespace SDK
{

// Function BP_Window_benchmark2.BP_Window_benchmark2_C.AddImpulseToBrokenWindow
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_Window_benchmark2_C::AddImpulseToBrokenWindow()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Window_benchmark2_C", "AddImpulseToBrokenWindow");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Window_benchmark2.BP_Window_benchmark2_C.AddMeshBounceComponents
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_Window_benchmark2_C::AddMeshBounceComponents()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Window_benchmark2_C", "AddMeshBounceComponents");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Window_benchmark2.BP_Window_benchmark2_C.ApplyDebugDamage
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_Window_benchmark2_C::ApplyDebugDamage()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Window_benchmark2_C", "ApplyDebugDamage");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Window_benchmark2.BP_Window_benchmark2_C.Attempt Auto Close
// (BlueprintCallable, BlueprintEvent)

void ABP_Window_benchmark2_C::Attempt_Auto_Close()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Window_benchmark2_C", "Attempt Auto Close");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Window_benchmark2.BP_Window_benchmark2_C.Audio Close
// (BlueprintCallable, BlueprintEvent)

void ABP_Window_benchmark2_C::Audio_Close()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Window_benchmark2_C", "Audio Close");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Window_benchmark2.BP_Window_benchmark2_C.Audio Open
// (BlueprintCallable, BlueprintEvent)

void ABP_Window_benchmark2_C::Audio_Open()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Window_benchmark2_C", "Audio Open");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Window_benchmark2.BP_Window_benchmark2_C.Benchmark_Window_Smash
// (BlueprintCallable, BlueprintEvent)

void ABP_Window_benchmark2_C::Benchmark_Window_Smash()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Window_benchmark2_C", "Benchmark_Window_Smash");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Window_benchmark2.BP_Window_benchmark2_C.Close Window
// (BlueprintCallable, BlueprintEvent)

void ABP_Window_benchmark2_C::Close_Window()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Window_benchmark2_C", "Close Window");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Window_benchmark2.BP_Window_benchmark2_C.Cosmetics State Repaired
// (BlueprintCallable, BlueprintEvent)

void ABP_Window_benchmark2_C::Cosmetics_State_Repaired()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Window_benchmark2_C", "Cosmetics State Repaired");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Window_benchmark2.BP_Window_benchmark2_C.Cosmetics State Sabotaged
// (BlueprintCallable, BlueprintEvent)

void ABP_Window_benchmark2_C::Cosmetics_State_Sabotaged()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Window_benchmark2_C", "Cosmetics State Sabotaged");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Window_benchmark2.BP_Window_benchmark2_C.Event Apply Audio Multiplier
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           InteractingActor                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_Window_benchmark2_C::Event_Apply_Audio_Multiplier(class AActor* InteractingActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Window_benchmark2_C", "Event Apply Audio Multiplier");

	Params::BP_Window_benchmark2_C_Event_Apply_Audio_Multiplier Parms{};

	Parms.InteractingActor = InteractingActor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Window_benchmark2.BP_Window_benchmark2_C.ExecuteUbergraph_BP_Window_benchmark2
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Window_benchmark2_C::ExecuteUbergraph_BP_Window_benchmark2(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Window_benchmark2_C", "ExecuteUbergraph_BP_Window_benchmark2");

	Params::BP_Window_benchmark2_C_ExecuteUbergraph_BP_Window_benchmark2 Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Window_benchmark2.BP_Window_benchmark2_C.GetCenterLocation
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          Location                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Window_benchmark2_C::GetCenterLocation(struct FVector* Location)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Window_benchmark2_C", "GetCenterLocation");

	Params::BP_Window_benchmark2_C_GetCenterLocation Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Location != nullptr)
		*Location = std::move(Parms.Location);
}


// Function BP_Window_benchmark2.BP_Window_benchmark2_C.GetLockPickDuration
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Return                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Window_benchmark2_C::GetLockPickDuration(int32* Return)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Window_benchmark2_C", "GetLockPickDuration");

	Params::BP_Window_benchmark2_C_GetLockPickDuration Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Return != nullptr)
		*Return = Parms.Return;
}


// Function BP_Window_benchmark2.BP_Window_benchmark2_C.GetWidgetLocation
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          Location                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Window_benchmark2_C::GetWidgetLocation(struct FVector* Location)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Window_benchmark2_C", "GetWidgetLocation");

	Params::BP_Window_benchmark2_C_GetWidgetLocation Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Location != nullptr)
		*Location = std::move(Parms.Location);
}


// Function BP_Window_benchmark2.BP_Window_benchmark2_C.GetWindowBaseHealth
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// double                                  Health                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Window_benchmark2_C::GetWindowBaseHealth(double* Health)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Window_benchmark2_C", "GetWindowBaseHealth");

	Params::BP_Window_benchmark2_C_GetWindowBaseHealth Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Health != nullptr)
		*Health = Parms.Health;
}


// Function BP_Window_benchmark2.BP_Window_benchmark2_C.HideInteractionWidget
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Return                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Window_benchmark2_C::HideInteractionWidget(bool* Return)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Window_benchmark2_C", "HideInteractionWidget");

	Params::BP_Window_benchmark2_C_HideInteractionWidget Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Return != nullptr)
		*Return = Parms.Return;
}


// Function BP_Window_benchmark2.BP_Window_benchmark2_C.House Actor Impact Cosmetics
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          Location                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          HitImpulse                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// E_ImpactEffect                          ImpactEffect                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Window_benchmark2_C::House_Actor_Impact_Cosmetics(const struct FVector& Location, const struct FVector& HitImpulse, E_ImpactEffect ImpactEffect)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Window_benchmark2_C", "House Actor Impact Cosmetics");

	Params::BP_Window_benchmark2_C_House_Actor_Impact_Cosmetics Parms{};

	Parms.Location = std::move(Location);
	Parms.HitImpulse = std::move(HitImpulse);
	Parms.ImpactEffect = ImpactEffect;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Window_benchmark2.BP_Window_benchmark2_C.IsCharacterInFront
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_Window_benchmark2_C::IsCharacterInFront()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Window_benchmark2_C", "IsCharacterInFront");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Window_benchmark2.BP_Window_benchmark2_C.IsClosed
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Open                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Window_benchmark2_C::IsClosed(bool* Open)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Window_benchmark2_C", "IsClosed");

	Params::BP_Window_benchmark2_C_IsClosed Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Open != nullptr)
		*Open = Parms.Open;
}


// Function BP_Window_benchmark2.BP_Window_benchmark2_C.IsInteractable
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Interactable                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Window_benchmark2_C::IsInteractable(bool* Interactable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Window_benchmark2_C", "IsInteractable");

	Params::BP_Window_benchmark2_C_IsInteractable Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Interactable != nullptr)
		*Interactable = Parms.Interactable;
}


// Function BP_Window_benchmark2.BP_Window_benchmark2_C.IsInteractingActorATeamMember
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class AActor*                           Actor                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    Return                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Window_benchmark2_C::IsInteractingActorATeamMember(class AActor* Actor, bool* Return)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Window_benchmark2_C", "IsInteractingActorATeamMember");

	Params::BP_Window_benchmark2_C_IsInteractingActorATeamMember Parms{};

	Parms.Actor = Actor;

	UObject::ProcessEvent(Func, &Parms);

	if (Return != nullptr)
		*Return = Parms.Return;
}


// Function BP_Window_benchmark2.BP_Window_benchmark2_C.IsNotLockpickable
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsNotLockpickable_0                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Window_benchmark2_C::IsNotLockpickable(bool* IsNotLockpickable_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Window_benchmark2_C", "IsNotLockpickable");

	Params::BP_Window_benchmark2_C_IsNotLockpickable Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (IsNotLockpickable_0 != nullptr)
		*IsNotLockpickable_0 = Parms.IsNotLockpickable_0;
}


// Function BP_Window_benchmark2.BP_Window_benchmark2_C.LockpickBegin
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class APlayerController*                PickerController                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_Window_benchmark2_C::LockpickBegin(class APlayerController* PickerController)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Window_benchmark2_C", "LockpickBegin");

	Params::BP_Window_benchmark2_C_LockpickBegin Parms{};

	Parms.PickerController = PickerController;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Window_benchmark2.BP_Window_benchmark2_C.LockpickSuccess
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class APlayerController*                PickerController                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_Window_benchmark2_C::LockpickSuccess(class APlayerController* PickerController)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Window_benchmark2_C", "LockpickSuccess");

	Params::BP_Window_benchmark2_C_LockpickSuccess Parms{};

	Parms.PickerController = PickerController;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Window_benchmark2.BP_Window_benchmark2_C.Multi_Audio Locked
// (Net, NetMulticast, BlueprintCallable, BlueprintEvent)

void ABP_Window_benchmark2_C::Multi_Audio_Locked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Window_benchmark2_C", "Multi_Audio Locked");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Window_benchmark2.BP_Window_benchmark2_C.OnDamaged
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   Delta                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           Causer                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// struct FCombatParticipant               CombatParticipant                                      (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm)
// struct FKillMethod                      KillMethod                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm)
// struct FVector_NetQuantize              Location                                               (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)

void ABP_Window_benchmark2_C::OnDamaged(float Delta, class AActor* Causer, const struct FCombatParticipant& CombatParticipant, const struct FKillMethod& KillMethod, const struct FVector_NetQuantize& Location)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Window_benchmark2_C", "OnDamaged");

	Params::BP_Window_benchmark2_C_OnDamaged Parms{};

	Parms.Delta = Delta;
	Parms.Causer = Causer;
	Parms.CombatParticipant = std::move(CombatParticipant);
	Parms.KillMethod = std::move(KillMethod);
	Parms.Location = std::move(Location);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Window_benchmark2.BP_Window_benchmark2_C.OnRep_Opened
// (BlueprintCallable, BlueprintEvent)

void ABP_Window_benchmark2_C::OnRep_Opened()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Window_benchmark2_C", "OnRep_Opened");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Window_benchmark2.BP_Window_benchmark2_C.Open Window
// (BlueprintCallable, BlueprintEvent)

void ABP_Window_benchmark2_C::Open_Window()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Window_benchmark2_C", "Open Window");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Window_benchmark2.BP_Window_benchmark2_C.PostInteract
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           InteractingActor                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*              InteractionComponent                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void ABP_Window_benchmark2_C::PostInteract(class AActor* InteractingActor, class UPrimitiveComponent* InteractionComponent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Window_benchmark2_C", "PostInteract");

	Params::BP_Window_benchmark2_C_PostInteract Parms{};

	Parms.InteractingActor = InteractingActor;
	Parms.InteractionComponent = InteractionComponent;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Window_benchmark2.BP_Window_benchmark2_C.PutRigidBodiesToSleep
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_Window_benchmark2_C::PutRigidBodiesToSleep()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Window_benchmark2_C", "PutRigidBodiesToSleep");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Window_benchmark2.BP_Window_benchmark2_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ABP_Window_benchmark2_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Window_benchmark2_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Window_benchmark2.BP_Window_benchmark2_C.ReloadAfterHousesLoaded
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Return                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Window_benchmark2_C::ReloadAfterHousesLoaded(bool* Return)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Window_benchmark2_C", "ReloadAfterHousesLoaded");

	Params::BP_Window_benchmark2_C_ReloadAfterHousesLoaded Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Return != nullptr)
		*Return = Parms.Return;
}


// Function BP_Window_benchmark2.BP_Window_benchmark2_C.RemoveGlassDecal
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_Window_benchmark2_C::RemoveGlassDecal()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Window_benchmark2_C", "RemoveGlassDecal");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Window_benchmark2.BP_Window_benchmark2_C.Repair
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_Window_benchmark2_C::Repair()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Window_benchmark2_C", "Repair");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Window_benchmark2.BP_Window_benchmark2_C.Sabotage
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           SabotagingActor                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_Window_benchmark2_C::Sabotage(class AActor* SabotagingActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Window_benchmark2_C", "Sabotage");

	Params::BP_Window_benchmark2_C_Sabotage Parms{};

	Parms.SabotagingActor = SabotagingActor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Window_benchmark2.BP_Window_benchmark2_C.SetInitialWindowHealth
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_Window_benchmark2_C::SetInitialWindowHealth()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Window_benchmark2_C", "SetInitialWindowHealth");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Window_benchmark2.BP_Window_benchmark2_C.Spawn destroyed window
// (BlueprintCallable, BlueprintEvent)

void ABP_Window_benchmark2_C::Spawn_destroyed_window()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Window_benchmark2_C", "Spawn destroyed window");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Window_benchmark2.BP_Window_benchmark2_C.SpawnRandomGlassHit
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          Location                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Window_benchmark2_C::SpawnRandomGlassHit(const struct FVector& Location)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Window_benchmark2_C", "SpawnRandomGlassHit");

	Params::BP_Window_benchmark2_C_SpawnRandomGlassHit Parms{};

	Parms.Location = std::move(Location);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Window_benchmark2.BP_Window_benchmark2_C.Start Auto Close Timer
// (BlueprintCallable, BlueprintEvent)

void ABP_Window_benchmark2_C::Start_Auto_Close_Timer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Window_benchmark2_C", "Start Auto Close Timer");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Window_benchmark2.BP_Window_benchmark2_C.UpdateWindowCrackEffect
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_Window_benchmark2_C::UpdateWindowCrackEffect()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Window_benchmark2_C", "UpdateWindowCrackEffect");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Window_benchmark2.BP_Window_benchmark2_C.UserConstructionScript
// (Event, Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_Window_benchmark2_C::UserConstructionScript()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Window_benchmark2_C", "UserConstructionScript");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Window_benchmark2.BP_Window_benchmark2_C.WindowImpactCosmetics
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          Location                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// E_ImpactEffect                          Selection                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          HitImpulse                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Window_benchmark2_C::WindowImpactCosmetics(const struct FVector& Location, E_ImpactEffect Selection, const struct FVector& HitImpulse)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Window_benchmark2_C", "WindowImpactCosmetics");

	Params::BP_Window_benchmark2_C_WindowImpactCosmetics Parms{};

	Parms.Location = std::move(Location);
	Parms.Selection = Selection;
	Parms.HitImpulse = std::move(HitImpulse);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Window_benchmark2.BP_Window_benchmark2_C.WindowSabotaged
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    TURR                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Window_benchmark2_C::WindowSabotaged(bool TURR)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Window_benchmark2_C", "WindowSabotaged");

	Params::BP_Window_benchmark2_C_WindowSabotaged Parms{};

	Parms.TURR = TURR;

	UObject::ProcessEvent(Func, &Parms);
}

}

