#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GA_PopGunBlast

#include "Basic.hpp"

#include "GASIW_structs.hpp"
#include "GameplayAbilities_structs.hpp"


namespace SDK::Params
{

// Function GA_PopGunBlast.GA_PopGunBlast_C.ExecuteFireCue
// 0x0220 (0x0220 - 0x0000)
struct GA_PopGunBlast_C_ExecuteFireCue final
{
public:
	class UEquipmentInstance*                     CallFunc_GetAssociatedEquipment_ReturnValue;       // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<struct FSpawnedActorData>              CallFunc_GetSpawnedActors_ReturnValue;             // 0x0008(0x0010)(ReferenceParm)
	uint8                                         Pad_18[0x8];                                       // 0x0018(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSpawnedActorData                      CallFunc_Array_Get_Item;                           // 0x0020(0x0100)(NoDestructor)
	TScriptInterface<class II_MuzzleComponent_C>  K2Node_DynamicCast_AsI_Muzzle_Component;           // 0x0120(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_131[0x7];                                      // 0x0131(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USceneComponent*                        CallFunc_GetMuzzleSceneComponent_Return;           // 0x0138(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FGameplayCueParameters                 CallFunc_MakeGameplayCueParameters_ReturnValue;    // 0x0140(0x00D8)(ContainsInstancedReference)
};
static_assert(alignof(GA_PopGunBlast_C_ExecuteFireCue) == 0x000010, "Wrong alignment on GA_PopGunBlast_C_ExecuteFireCue");
static_assert(sizeof(GA_PopGunBlast_C_ExecuteFireCue) == 0x000220, "Wrong size on GA_PopGunBlast_C_ExecuteFireCue");
static_assert(offsetof(GA_PopGunBlast_C_ExecuteFireCue, CallFunc_GetAssociatedEquipment_ReturnValue) == 0x000000, "Member 'GA_PopGunBlast_C_ExecuteFireCue::CallFunc_GetAssociatedEquipment_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_PopGunBlast_C_ExecuteFireCue, CallFunc_GetSpawnedActors_ReturnValue) == 0x000008, "Member 'GA_PopGunBlast_C_ExecuteFireCue::CallFunc_GetSpawnedActors_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_PopGunBlast_C_ExecuteFireCue, CallFunc_Array_Get_Item) == 0x000020, "Member 'GA_PopGunBlast_C_ExecuteFireCue::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(GA_PopGunBlast_C_ExecuteFireCue, K2Node_DynamicCast_AsI_Muzzle_Component) == 0x000120, "Member 'GA_PopGunBlast_C_ExecuteFireCue::K2Node_DynamicCast_AsI_Muzzle_Component' has a wrong offset!");
static_assert(offsetof(GA_PopGunBlast_C_ExecuteFireCue, K2Node_DynamicCast_bSuccess) == 0x000130, "Member 'GA_PopGunBlast_C_ExecuteFireCue::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(GA_PopGunBlast_C_ExecuteFireCue, CallFunc_GetMuzzleSceneComponent_Return) == 0x000138, "Member 'GA_PopGunBlast_C_ExecuteFireCue::CallFunc_GetMuzzleSceneComponent_Return' has a wrong offset!");
static_assert(offsetof(GA_PopGunBlast_C_ExecuteFireCue, CallFunc_MakeGameplayCueParameters_ReturnValue) == 0x000140, "Member 'GA_PopGunBlast_C_ExecuteFireCue::CallFunc_MakeGameplayCueParameters_ReturnValue' has a wrong offset!");

// Function GA_PopGunBlast.GA_PopGunBlast_C.ExecuteUbergraph_GA_PopGunBlast
// 0x0058 (0x0058 - 0x0000)
struct GA_PopGunBlast_C_ExecuteUbergraph_GA_PopGunBlast final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAbilityTask_WaitDelay*                 CallFunc_WaitDelay_ReturnValue;                    // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0010(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IGameplayTaskOwnerInterface> CallFunc_TaskWaitDelay_TaskOwner_CastInput;        // 0x0028(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class UGameplayTask_WaitDelay*                CallFunc_TaskWaitDelay_ReturnValue;                // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x3];                                       // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x0044(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_CommitAbility_ReturnValue;             // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bWasCancelled;                        // 0x0055(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0056(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_PopGunBlast_C_ExecuteUbergraph_GA_PopGunBlast) == 0x000008, "Wrong alignment on GA_PopGunBlast_C_ExecuteUbergraph_GA_PopGunBlast");
static_assert(sizeof(GA_PopGunBlast_C_ExecuteUbergraph_GA_PopGunBlast) == 0x000058, "Wrong size on GA_PopGunBlast_C_ExecuteUbergraph_GA_PopGunBlast");
static_assert(offsetof(GA_PopGunBlast_C_ExecuteUbergraph_GA_PopGunBlast, EntryPoint) == 0x000000, "Member 'GA_PopGunBlast_C_ExecuteUbergraph_GA_PopGunBlast::EntryPoint' has a wrong offset!");
static_assert(offsetof(GA_PopGunBlast_C_ExecuteUbergraph_GA_PopGunBlast, CallFunc_WaitDelay_ReturnValue) == 0x000008, "Member 'GA_PopGunBlast_C_ExecuteUbergraph_GA_PopGunBlast::CallFunc_WaitDelay_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_PopGunBlast_C_ExecuteUbergraph_GA_PopGunBlast, K2Node_CreateDelegate_OutputDelegate) == 0x000010, "Member 'GA_PopGunBlast_C_ExecuteUbergraph_GA_PopGunBlast::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(GA_PopGunBlast_C_ExecuteUbergraph_GA_PopGunBlast, CallFunc_IsValid_ReturnValue) == 0x000020, "Member 'GA_PopGunBlast_C_ExecuteUbergraph_GA_PopGunBlast::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_PopGunBlast_C_ExecuteUbergraph_GA_PopGunBlast, CallFunc_TaskWaitDelay_TaskOwner_CastInput) == 0x000028, "Member 'GA_PopGunBlast_C_ExecuteUbergraph_GA_PopGunBlast::CallFunc_TaskWaitDelay_TaskOwner_CastInput' has a wrong offset!");
static_assert(offsetof(GA_PopGunBlast_C_ExecuteUbergraph_GA_PopGunBlast, CallFunc_TaskWaitDelay_ReturnValue) == 0x000038, "Member 'GA_PopGunBlast_C_ExecuteUbergraph_GA_PopGunBlast::CallFunc_TaskWaitDelay_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_PopGunBlast_C_ExecuteUbergraph_GA_PopGunBlast, CallFunc_IsValid_ReturnValue_1) == 0x000040, "Member 'GA_PopGunBlast_C_ExecuteUbergraph_GA_PopGunBlast::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_PopGunBlast_C_ExecuteUbergraph_GA_PopGunBlast, K2Node_CreateDelegate_OutputDelegate_1) == 0x000044, "Member 'GA_PopGunBlast_C_ExecuteUbergraph_GA_PopGunBlast::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(GA_PopGunBlast_C_ExecuteUbergraph_GA_PopGunBlast, CallFunc_K2_CommitAbility_ReturnValue) == 0x000054, "Member 'GA_PopGunBlast_C_ExecuteUbergraph_GA_PopGunBlast::CallFunc_K2_CommitAbility_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_PopGunBlast_C_ExecuteUbergraph_GA_PopGunBlast, K2Node_Event_bWasCancelled) == 0x000055, "Member 'GA_PopGunBlast_C_ExecuteUbergraph_GA_PopGunBlast::K2Node_Event_bWasCancelled' has a wrong offset!");
static_assert(offsetof(GA_PopGunBlast_C_ExecuteUbergraph_GA_PopGunBlast, CallFunc_IsValid_ReturnValue_2) == 0x000056, "Member 'GA_PopGunBlast_C_ExecuteUbergraph_GA_PopGunBlast::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");

// Function GA_PopGunBlast.GA_PopGunBlast_C.GetHoldingPopGun
// 0x0130 (0x0130 - 0x0000)
struct GA_PopGunBlast_C_GetHoldingPopGun final
{
public:
	class ABP_PopGun_Equipable_C*                 HoldingPopGun;                                     // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UEquipmentInstance*                     CallFunc_GetAssociatedEquipment_ReturnValue;       // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<struct FSpawnedActorData>              CallFunc_GetSpawnedActors_ReturnValue;             // 0x0010(0x0010)(ReferenceParm)
	struct FSpawnedActorData                      CallFunc_Array_Get_Item;                           // 0x0020(0x0100)(NoDestructor)
	class ABP_PopGun_Equipable_C*                 K2Node_DynamicCast_AsBP_Pop_Gun_Equipable;         // 0x0120(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0128(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_PopGunBlast_C_GetHoldingPopGun) == 0x000010, "Wrong alignment on GA_PopGunBlast_C_GetHoldingPopGun");
static_assert(sizeof(GA_PopGunBlast_C_GetHoldingPopGun) == 0x000130, "Wrong size on GA_PopGunBlast_C_GetHoldingPopGun");
static_assert(offsetof(GA_PopGunBlast_C_GetHoldingPopGun, HoldingPopGun) == 0x000000, "Member 'GA_PopGunBlast_C_GetHoldingPopGun::HoldingPopGun' has a wrong offset!");
static_assert(offsetof(GA_PopGunBlast_C_GetHoldingPopGun, CallFunc_GetAssociatedEquipment_ReturnValue) == 0x000008, "Member 'GA_PopGunBlast_C_GetHoldingPopGun::CallFunc_GetAssociatedEquipment_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_PopGunBlast_C_GetHoldingPopGun, CallFunc_GetSpawnedActors_ReturnValue) == 0x000010, "Member 'GA_PopGunBlast_C_GetHoldingPopGun::CallFunc_GetSpawnedActors_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_PopGunBlast_C_GetHoldingPopGun, CallFunc_Array_Get_Item) == 0x000020, "Member 'GA_PopGunBlast_C_GetHoldingPopGun::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(GA_PopGunBlast_C_GetHoldingPopGun, K2Node_DynamicCast_AsBP_Pop_Gun_Equipable) == 0x000120, "Member 'GA_PopGunBlast_C_GetHoldingPopGun::K2Node_DynamicCast_AsBP_Pop_Gun_Equipable' has a wrong offset!");
static_assert(offsetof(GA_PopGunBlast_C_GetHoldingPopGun, K2Node_DynamicCast_bSuccess) == 0x000128, "Member 'GA_PopGunBlast_C_GetHoldingPopGun::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function GA_PopGunBlast.GA_PopGunBlast_C.K2_OnEndAbility
// 0x0001 (0x0001 - 0x0000)
struct GA_PopGunBlast_C_K2_OnEndAbility final
{
public:
	bool                                          bWasCancelled;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_PopGunBlast_C_K2_OnEndAbility) == 0x000001, "Wrong alignment on GA_PopGunBlast_C_K2_OnEndAbility");
static_assert(sizeof(GA_PopGunBlast_C_K2_OnEndAbility) == 0x000001, "Wrong size on GA_PopGunBlast_C_K2_OnEndAbility");
static_assert(offsetof(GA_PopGunBlast_C_K2_OnEndAbility, bWasCancelled) == 0x000000, "Member 'GA_PopGunBlast_C_K2_OnEndAbility::bWasCancelled' has a wrong offset!");

}

