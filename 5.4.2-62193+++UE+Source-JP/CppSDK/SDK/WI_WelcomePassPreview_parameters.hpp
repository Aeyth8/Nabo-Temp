#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WI_WelcomePassPreview

#include "Basic.hpp"

#include "JP_structs.hpp"


namespace SDK::Params
{

// Function WI_WelcomePassPreview.WI_WelcomePassPreview_C.ApplyViewModel
// 0x0004 (0x0004 - 0x0000)
struct WI_WelcomePassPreview_C_ApplyViewModel final
{
public:
	struct FSeasonPassContainerViewModel          ViewModel;                                         // 0x0000(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)
};
static_assert(alignof(WI_WelcomePassPreview_C_ApplyViewModel) == 0x000004, "Wrong alignment on WI_WelcomePassPreview_C_ApplyViewModel");
static_assert(sizeof(WI_WelcomePassPreview_C_ApplyViewModel) == 0x000004, "Wrong size on WI_WelcomePassPreview_C_ApplyViewModel");
static_assert(offsetof(WI_WelcomePassPreview_C_ApplyViewModel, ViewModel) == 0x000000, "Member 'WI_WelcomePassPreview_C_ApplyViewModel::ViewModel' has a wrong offset!");

// Function WI_WelcomePassPreview.WI_WelcomePassPreview_C.ExecuteUbergraph_WI_WelcomePassPreview
// 0x0048 (0x0048 - 0x0000)
struct WI_WelcomePassPreview_C_ExecuteUbergraph_WI_WelcomePassPreview final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSeasonPassContainerViewModel          K2Node_Event_ViewModel;                            // 0x0004(0x0004)(ConstParm, NoDestructor)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSeasonPassTierViewModel               CallFunc_Array_Get_Item;                           // 0x0018(0x0028)()
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WI_WelcomePassPreview_C_ExecuteUbergraph_WI_WelcomePassPreview) == 0x000008, "Wrong alignment on WI_WelcomePassPreview_C_ExecuteUbergraph_WI_WelcomePassPreview");
static_assert(sizeof(WI_WelcomePassPreview_C_ExecuteUbergraph_WI_WelcomePassPreview) == 0x000048, "Wrong size on WI_WelcomePassPreview_C_ExecuteUbergraph_WI_WelcomePassPreview");
static_assert(offsetof(WI_WelcomePassPreview_C_ExecuteUbergraph_WI_WelcomePassPreview, EntryPoint) == 0x000000, "Member 'WI_WelcomePassPreview_C_ExecuteUbergraph_WI_WelcomePassPreview::EntryPoint' has a wrong offset!");
static_assert(offsetof(WI_WelcomePassPreview_C_ExecuteUbergraph_WI_WelcomePassPreview, K2Node_Event_ViewModel) == 0x000004, "Member 'WI_WelcomePassPreview_C_ExecuteUbergraph_WI_WelcomePassPreview::K2Node_Event_ViewModel' has a wrong offset!");
static_assert(offsetof(WI_WelcomePassPreview_C_ExecuteUbergraph_WI_WelcomePassPreview, Temp_int_Array_Index_Variable) == 0x000008, "Member 'WI_WelcomePassPreview_C_ExecuteUbergraph_WI_WelcomePassPreview::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WI_WelcomePassPreview_C_ExecuteUbergraph_WI_WelcomePassPreview, Temp_int_Loop_Counter_Variable) == 0x00000C, "Member 'WI_WelcomePassPreview_C_ExecuteUbergraph_WI_WelcomePassPreview::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WI_WelcomePassPreview_C_ExecuteUbergraph_WI_WelcomePassPreview, CallFunc_Add_IntInt_ReturnValue) == 0x000010, "Member 'WI_WelcomePassPreview_C_ExecuteUbergraph_WI_WelcomePassPreview::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WI_WelcomePassPreview_C_ExecuteUbergraph_WI_WelcomePassPreview, K2Node_Event_IsDesignTime) == 0x000014, "Member 'WI_WelcomePassPreview_C_ExecuteUbergraph_WI_WelcomePassPreview::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(WI_WelcomePassPreview_C_ExecuteUbergraph_WI_WelcomePassPreview, CallFunc_Array_Get_Item) == 0x000018, "Member 'WI_WelcomePassPreview_C_ExecuteUbergraph_WI_WelcomePassPreview::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WI_WelcomePassPreview_C_ExecuteUbergraph_WI_WelcomePassPreview, CallFunc_Array_Length_ReturnValue) == 0x000040, "Member 'WI_WelcomePassPreview_C_ExecuteUbergraph_WI_WelcomePassPreview::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WI_WelcomePassPreview_C_ExecuteUbergraph_WI_WelcomePassPreview, CallFunc_Less_IntInt_ReturnValue) == 0x000044, "Member 'WI_WelcomePassPreview_C_ExecuteUbergraph_WI_WelcomePassPreview::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function WI_WelcomePassPreview.WI_WelcomePassPreview_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct WI_WelcomePassPreview_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WI_WelcomePassPreview_C_PreConstruct) == 0x000001, "Wrong alignment on WI_WelcomePassPreview_C_PreConstruct");
static_assert(sizeof(WI_WelcomePassPreview_C_PreConstruct) == 0x000001, "Wrong size on WI_WelcomePassPreview_C_PreConstruct");
static_assert(offsetof(WI_WelcomePassPreview_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'WI_WelcomePassPreview_C_PreConstruct::IsDesignTime' has a wrong offset!");

}

