#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_WinscreenPawn

#include "Basic.hpp"

#include "JP_structs.hpp"


namespace SDK::Params
{

// Function BP_WinscreenPawn.BP_WinscreenPawn_C.ExecuteUbergraph_BP_WinscreenPawn
// 0x0168 (0x0168 - 0x0000)
struct BP_WinscreenPawn_C_ExecuteUbergraph_BP_WinscreenPawn final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_8;                   // 0x0004(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_7;                   // 0x000C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate;              // 0x0014(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_6;                   // 0x0024(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_1;            // 0x002C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_5;                   // 0x003C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_2;            // 0x0044(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable;                                // 0x0054(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_3;            // 0x005C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_4;                   // 0x006C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_3;                   // 0x0074(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_4;            // 0x007C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_2;                   // 0x008C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_5;            // 0x0094(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_1;                   // 0x00A4(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_6;            // 0x00AC(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName;                     // 0x00BC(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_7;            // 0x00C4(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_1;                              // 0x00D4(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x00DC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_DD[0x3];                                       // 0x00DD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class USkeletalMesh*                          K2Node_CustomEvent_NewMesh;                        // 0x00E0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	ECharacterName                                K2Node_CustomEvent_CharacterName;                  // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E9[0x7];                                       // 0x00E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue;              // 0x00F0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UABP_JP_TPP_Preview_C*                  K2Node_DynamicCast_AsABP_JP_TPP_Preview;           // 0x00F8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0101(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_102[0x2];                                      // 0x0102(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_8;            // 0x0104(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_114[0x4];                                      // 0x0114(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimMontage*                           K2Node_CustomEvent_MontageToPlay;                  // 0x0118(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPlayMontageCallbackProxy*              CallFunc_CreateProxyObjectForPlayMontage_ReturnValue; // 0x0120(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_9;            // 0x0128(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0138(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_139[0x3];                                      // 0x0139(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_CustomEvent_NotifyName_9;                   // 0x013C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECharacterName                                CallFunc_GetBaseAnimationValues_Character;         // 0x0144(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_145[0x3];                                      // 0x0145(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimMontage*                           CallFunc_GetBaseAnimationValues_MontageToPlay;     // 0x0148(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_Visible;                        // 0x0150(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_151[0x7];                                      // 0x0151(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPlayMontageCallbackProxy*              CallFunc_CreateProxyObjectForPlayMontage_ReturnValue_1; // 0x0158(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0160(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_WinscreenPawn_C_ExecuteUbergraph_BP_WinscreenPawn) == 0x000008, "Wrong alignment on BP_WinscreenPawn_C_ExecuteUbergraph_BP_WinscreenPawn");
static_assert(sizeof(BP_WinscreenPawn_C_ExecuteUbergraph_BP_WinscreenPawn) == 0x000168, "Wrong size on BP_WinscreenPawn_C_ExecuteUbergraph_BP_WinscreenPawn");
static_assert(offsetof(BP_WinscreenPawn_C_ExecuteUbergraph_BP_WinscreenPawn, EntryPoint) == 0x000000, "Member 'BP_WinscreenPawn_C_ExecuteUbergraph_BP_WinscreenPawn::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_WinscreenPawn_C_ExecuteUbergraph_BP_WinscreenPawn, K2Node_CustomEvent_NotifyName_8) == 0x000004, "Member 'BP_WinscreenPawn_C_ExecuteUbergraph_BP_WinscreenPawn::K2Node_CustomEvent_NotifyName_8' has a wrong offset!");
static_assert(offsetof(BP_WinscreenPawn_C_ExecuteUbergraph_BP_WinscreenPawn, K2Node_CustomEvent_NotifyName_7) == 0x00000C, "Member 'BP_WinscreenPawn_C_ExecuteUbergraph_BP_WinscreenPawn::K2Node_CustomEvent_NotifyName_7' has a wrong offset!");
static_assert(offsetof(BP_WinscreenPawn_C_ExecuteUbergraph_BP_WinscreenPawn, K2Node_CreateDelegate_OutputDelegate) == 0x000014, "Member 'BP_WinscreenPawn_C_ExecuteUbergraph_BP_WinscreenPawn::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_WinscreenPawn_C_ExecuteUbergraph_BP_WinscreenPawn, K2Node_CustomEvent_NotifyName_6) == 0x000024, "Member 'BP_WinscreenPawn_C_ExecuteUbergraph_BP_WinscreenPawn::K2Node_CustomEvent_NotifyName_6' has a wrong offset!");
static_assert(offsetof(BP_WinscreenPawn_C_ExecuteUbergraph_BP_WinscreenPawn, K2Node_CreateDelegate_OutputDelegate_1) == 0x00002C, "Member 'BP_WinscreenPawn_C_ExecuteUbergraph_BP_WinscreenPawn::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(BP_WinscreenPawn_C_ExecuteUbergraph_BP_WinscreenPawn, K2Node_CustomEvent_NotifyName_5) == 0x00003C, "Member 'BP_WinscreenPawn_C_ExecuteUbergraph_BP_WinscreenPawn::K2Node_CustomEvent_NotifyName_5' has a wrong offset!");
static_assert(offsetof(BP_WinscreenPawn_C_ExecuteUbergraph_BP_WinscreenPawn, K2Node_CreateDelegate_OutputDelegate_2) == 0x000044, "Member 'BP_WinscreenPawn_C_ExecuteUbergraph_BP_WinscreenPawn::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(BP_WinscreenPawn_C_ExecuteUbergraph_BP_WinscreenPawn, Temp_name_Variable) == 0x000054, "Member 'BP_WinscreenPawn_C_ExecuteUbergraph_BP_WinscreenPawn::Temp_name_Variable' has a wrong offset!");
static_assert(offsetof(BP_WinscreenPawn_C_ExecuteUbergraph_BP_WinscreenPawn, K2Node_CreateDelegate_OutputDelegate_3) == 0x00005C, "Member 'BP_WinscreenPawn_C_ExecuteUbergraph_BP_WinscreenPawn::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(BP_WinscreenPawn_C_ExecuteUbergraph_BP_WinscreenPawn, K2Node_CustomEvent_NotifyName_4) == 0x00006C, "Member 'BP_WinscreenPawn_C_ExecuteUbergraph_BP_WinscreenPawn::K2Node_CustomEvent_NotifyName_4' has a wrong offset!");
static_assert(offsetof(BP_WinscreenPawn_C_ExecuteUbergraph_BP_WinscreenPawn, K2Node_CustomEvent_NotifyName_3) == 0x000074, "Member 'BP_WinscreenPawn_C_ExecuteUbergraph_BP_WinscreenPawn::K2Node_CustomEvent_NotifyName_3' has a wrong offset!");
static_assert(offsetof(BP_WinscreenPawn_C_ExecuteUbergraph_BP_WinscreenPawn, K2Node_CreateDelegate_OutputDelegate_4) == 0x00007C, "Member 'BP_WinscreenPawn_C_ExecuteUbergraph_BP_WinscreenPawn::K2Node_CreateDelegate_OutputDelegate_4' has a wrong offset!");
static_assert(offsetof(BP_WinscreenPawn_C_ExecuteUbergraph_BP_WinscreenPawn, K2Node_CustomEvent_NotifyName_2) == 0x00008C, "Member 'BP_WinscreenPawn_C_ExecuteUbergraph_BP_WinscreenPawn::K2Node_CustomEvent_NotifyName_2' has a wrong offset!");
static_assert(offsetof(BP_WinscreenPawn_C_ExecuteUbergraph_BP_WinscreenPawn, K2Node_CreateDelegate_OutputDelegate_5) == 0x000094, "Member 'BP_WinscreenPawn_C_ExecuteUbergraph_BP_WinscreenPawn::K2Node_CreateDelegate_OutputDelegate_5' has a wrong offset!");
static_assert(offsetof(BP_WinscreenPawn_C_ExecuteUbergraph_BP_WinscreenPawn, K2Node_CustomEvent_NotifyName_1) == 0x0000A4, "Member 'BP_WinscreenPawn_C_ExecuteUbergraph_BP_WinscreenPawn::K2Node_CustomEvent_NotifyName_1' has a wrong offset!");
static_assert(offsetof(BP_WinscreenPawn_C_ExecuteUbergraph_BP_WinscreenPawn, K2Node_CreateDelegate_OutputDelegate_6) == 0x0000AC, "Member 'BP_WinscreenPawn_C_ExecuteUbergraph_BP_WinscreenPawn::K2Node_CreateDelegate_OutputDelegate_6' has a wrong offset!");
static_assert(offsetof(BP_WinscreenPawn_C_ExecuteUbergraph_BP_WinscreenPawn, K2Node_CustomEvent_NotifyName) == 0x0000BC, "Member 'BP_WinscreenPawn_C_ExecuteUbergraph_BP_WinscreenPawn::K2Node_CustomEvent_NotifyName' has a wrong offset!");
static_assert(offsetof(BP_WinscreenPawn_C_ExecuteUbergraph_BP_WinscreenPawn, K2Node_CreateDelegate_OutputDelegate_7) == 0x0000C4, "Member 'BP_WinscreenPawn_C_ExecuteUbergraph_BP_WinscreenPawn::K2Node_CreateDelegate_OutputDelegate_7' has a wrong offset!");
static_assert(offsetof(BP_WinscreenPawn_C_ExecuteUbergraph_BP_WinscreenPawn, Temp_name_Variable_1) == 0x0000D4, "Member 'BP_WinscreenPawn_C_ExecuteUbergraph_BP_WinscreenPawn::Temp_name_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_WinscreenPawn_C_ExecuteUbergraph_BP_WinscreenPawn, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x0000DC, "Member 'BP_WinscreenPawn_C_ExecuteUbergraph_BP_WinscreenPawn::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WinscreenPawn_C_ExecuteUbergraph_BP_WinscreenPawn, K2Node_CustomEvent_NewMesh) == 0x0000E0, "Member 'BP_WinscreenPawn_C_ExecuteUbergraph_BP_WinscreenPawn::K2Node_CustomEvent_NewMesh' has a wrong offset!");
static_assert(offsetof(BP_WinscreenPawn_C_ExecuteUbergraph_BP_WinscreenPawn, K2Node_CustomEvent_CharacterName) == 0x0000E8, "Member 'BP_WinscreenPawn_C_ExecuteUbergraph_BP_WinscreenPawn::K2Node_CustomEvent_CharacterName' has a wrong offset!");
static_assert(offsetof(BP_WinscreenPawn_C_ExecuteUbergraph_BP_WinscreenPawn, CallFunc_GetAnimInstance_ReturnValue) == 0x0000F0, "Member 'BP_WinscreenPawn_C_ExecuteUbergraph_BP_WinscreenPawn::CallFunc_GetAnimInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WinscreenPawn_C_ExecuteUbergraph_BP_WinscreenPawn, K2Node_DynamicCast_AsABP_JP_TPP_Preview) == 0x0000F8, "Member 'BP_WinscreenPawn_C_ExecuteUbergraph_BP_WinscreenPawn::K2Node_DynamicCast_AsABP_JP_TPP_Preview' has a wrong offset!");
static_assert(offsetof(BP_WinscreenPawn_C_ExecuteUbergraph_BP_WinscreenPawn, K2Node_DynamicCast_bSuccess) == 0x000100, "Member 'BP_WinscreenPawn_C_ExecuteUbergraph_BP_WinscreenPawn::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_WinscreenPawn_C_ExecuteUbergraph_BP_WinscreenPawn, CallFunc_IsValid_ReturnValue) == 0x000101, "Member 'BP_WinscreenPawn_C_ExecuteUbergraph_BP_WinscreenPawn::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WinscreenPawn_C_ExecuteUbergraph_BP_WinscreenPawn, K2Node_CreateDelegate_OutputDelegate_8) == 0x000104, "Member 'BP_WinscreenPawn_C_ExecuteUbergraph_BP_WinscreenPawn::K2Node_CreateDelegate_OutputDelegate_8' has a wrong offset!");
static_assert(offsetof(BP_WinscreenPawn_C_ExecuteUbergraph_BP_WinscreenPawn, K2Node_CustomEvent_MontageToPlay) == 0x000118, "Member 'BP_WinscreenPawn_C_ExecuteUbergraph_BP_WinscreenPawn::K2Node_CustomEvent_MontageToPlay' has a wrong offset!");
static_assert(offsetof(BP_WinscreenPawn_C_ExecuteUbergraph_BP_WinscreenPawn, CallFunc_CreateProxyObjectForPlayMontage_ReturnValue) == 0x000120, "Member 'BP_WinscreenPawn_C_ExecuteUbergraph_BP_WinscreenPawn::CallFunc_CreateProxyObjectForPlayMontage_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WinscreenPawn_C_ExecuteUbergraph_BP_WinscreenPawn, K2Node_CreateDelegate_OutputDelegate_9) == 0x000128, "Member 'BP_WinscreenPawn_C_ExecuteUbergraph_BP_WinscreenPawn::K2Node_CreateDelegate_OutputDelegate_9' has a wrong offset!");
static_assert(offsetof(BP_WinscreenPawn_C_ExecuteUbergraph_BP_WinscreenPawn, CallFunc_IsValid_ReturnValue_1) == 0x000138, "Member 'BP_WinscreenPawn_C_ExecuteUbergraph_BP_WinscreenPawn::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_WinscreenPawn_C_ExecuteUbergraph_BP_WinscreenPawn, K2Node_CustomEvent_NotifyName_9) == 0x00013C, "Member 'BP_WinscreenPawn_C_ExecuteUbergraph_BP_WinscreenPawn::K2Node_CustomEvent_NotifyName_9' has a wrong offset!");
static_assert(offsetof(BP_WinscreenPawn_C_ExecuteUbergraph_BP_WinscreenPawn, CallFunc_GetBaseAnimationValues_Character) == 0x000144, "Member 'BP_WinscreenPawn_C_ExecuteUbergraph_BP_WinscreenPawn::CallFunc_GetBaseAnimationValues_Character' has a wrong offset!");
static_assert(offsetof(BP_WinscreenPawn_C_ExecuteUbergraph_BP_WinscreenPawn, CallFunc_GetBaseAnimationValues_MontageToPlay) == 0x000148, "Member 'BP_WinscreenPawn_C_ExecuteUbergraph_BP_WinscreenPawn::CallFunc_GetBaseAnimationValues_MontageToPlay' has a wrong offset!");
static_assert(offsetof(BP_WinscreenPawn_C_ExecuteUbergraph_BP_WinscreenPawn, K2Node_CustomEvent_Visible) == 0x000150, "Member 'BP_WinscreenPawn_C_ExecuteUbergraph_BP_WinscreenPawn::K2Node_CustomEvent_Visible' has a wrong offset!");
static_assert(offsetof(BP_WinscreenPawn_C_ExecuteUbergraph_BP_WinscreenPawn, CallFunc_CreateProxyObjectForPlayMontage_ReturnValue_1) == 0x000158, "Member 'BP_WinscreenPawn_C_ExecuteUbergraph_BP_WinscreenPawn::CallFunc_CreateProxyObjectForPlayMontage_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_WinscreenPawn_C_ExecuteUbergraph_BP_WinscreenPawn, CallFunc_IsValid_ReturnValue_2) == 0x000160, "Member 'BP_WinscreenPawn_C_ExecuteUbergraph_BP_WinscreenPawn::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");

// Function BP_WinscreenPawn.BP_WinscreenPawn_C.GetBaseAnimationValues
// 0x00E0 (0x00E0 - 0x0000)
struct BP_WinscreenPawn_C_GetBaseAnimationValues final
{
public:
	ECharacterName                                CharacterName;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECharacterName                                Character;                                         // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimMontage*                           MontageToPlay;                                     // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimMontage*                           Temp_object_Variable;                              // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           Temp_object_Variable_1;                            // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimMontage*                           Temp_object_Variable_2;                            // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           Temp_object_Variable_3;                            // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimMontage*                           Temp_object_Variable_4;                            // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           Temp_object_Variable_5;                            // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_3;                              // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimMontage*                           Temp_object_Variable_6;                            // 0x0060(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           Temp_object_Variable_7;                            // 0x0068(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_4;                              // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_71[0x7];                                       // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimMontage*                           Temp_object_Variable_8;                            // 0x0078(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           Temp_object_Variable_9;                            // 0x0080(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	ECharacterName                                Temp_byte_Variable;                                // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_89[0x7];                                       // 0x0089(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimMontage*                           Temp_object_Variable_10;                           // 0x0090(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           Temp_object_Variable_11;                           // 0x0098(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           Temp_object_Variable_12;                           // 0x00A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           Temp_object_Variable_13;                           // 0x00A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           K2Node_Select_Default;                             // 0x00B0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           K2Node_Select_Default_1;                           // 0x00B8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           K2Node_Select_Default_2;                           // 0x00C0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           K2Node_Select_Default_3;                           // 0x00C8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           K2Node_Select_Default_4;                           // 0x00D0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           K2Node_Select_Default_5;                           // 0x00D8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_WinscreenPawn_C_GetBaseAnimationValues) == 0x000008, "Wrong alignment on BP_WinscreenPawn_C_GetBaseAnimationValues");
static_assert(sizeof(BP_WinscreenPawn_C_GetBaseAnimationValues) == 0x0000E0, "Wrong size on BP_WinscreenPawn_C_GetBaseAnimationValues");
static_assert(offsetof(BP_WinscreenPawn_C_GetBaseAnimationValues, CharacterName) == 0x000000, "Member 'BP_WinscreenPawn_C_GetBaseAnimationValues::CharacterName' has a wrong offset!");
static_assert(offsetof(BP_WinscreenPawn_C_GetBaseAnimationValues, Character) == 0x000001, "Member 'BP_WinscreenPawn_C_GetBaseAnimationValues::Character' has a wrong offset!");
static_assert(offsetof(BP_WinscreenPawn_C_GetBaseAnimationValues, MontageToPlay) == 0x000008, "Member 'BP_WinscreenPawn_C_GetBaseAnimationValues::MontageToPlay' has a wrong offset!");
static_assert(offsetof(BP_WinscreenPawn_C_GetBaseAnimationValues, Temp_bool_Variable) == 0x000010, "Member 'BP_WinscreenPawn_C_GetBaseAnimationValues::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_WinscreenPawn_C_GetBaseAnimationValues, Temp_object_Variable) == 0x000018, "Member 'BP_WinscreenPawn_C_GetBaseAnimationValues::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BP_WinscreenPawn_C_GetBaseAnimationValues, Temp_object_Variable_1) == 0x000020, "Member 'BP_WinscreenPawn_C_GetBaseAnimationValues::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_WinscreenPawn_C_GetBaseAnimationValues, Temp_bool_Variable_1) == 0x000028, "Member 'BP_WinscreenPawn_C_GetBaseAnimationValues::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_WinscreenPawn_C_GetBaseAnimationValues, Temp_object_Variable_2) == 0x000030, "Member 'BP_WinscreenPawn_C_GetBaseAnimationValues::Temp_object_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_WinscreenPawn_C_GetBaseAnimationValues, Temp_object_Variable_3) == 0x000038, "Member 'BP_WinscreenPawn_C_GetBaseAnimationValues::Temp_object_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_WinscreenPawn_C_GetBaseAnimationValues, Temp_bool_Variable_2) == 0x000040, "Member 'BP_WinscreenPawn_C_GetBaseAnimationValues::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_WinscreenPawn_C_GetBaseAnimationValues, Temp_object_Variable_4) == 0x000048, "Member 'BP_WinscreenPawn_C_GetBaseAnimationValues::Temp_object_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_WinscreenPawn_C_GetBaseAnimationValues, Temp_object_Variable_5) == 0x000050, "Member 'BP_WinscreenPawn_C_GetBaseAnimationValues::Temp_object_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_WinscreenPawn_C_GetBaseAnimationValues, Temp_bool_Variable_3) == 0x000058, "Member 'BP_WinscreenPawn_C_GetBaseAnimationValues::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_WinscreenPawn_C_GetBaseAnimationValues, Temp_object_Variable_6) == 0x000060, "Member 'BP_WinscreenPawn_C_GetBaseAnimationValues::Temp_object_Variable_6' has a wrong offset!");
static_assert(offsetof(BP_WinscreenPawn_C_GetBaseAnimationValues, Temp_object_Variable_7) == 0x000068, "Member 'BP_WinscreenPawn_C_GetBaseAnimationValues::Temp_object_Variable_7' has a wrong offset!");
static_assert(offsetof(BP_WinscreenPawn_C_GetBaseAnimationValues, Temp_bool_Variable_4) == 0x000070, "Member 'BP_WinscreenPawn_C_GetBaseAnimationValues::Temp_bool_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_WinscreenPawn_C_GetBaseAnimationValues, Temp_object_Variable_8) == 0x000078, "Member 'BP_WinscreenPawn_C_GetBaseAnimationValues::Temp_object_Variable_8' has a wrong offset!");
static_assert(offsetof(BP_WinscreenPawn_C_GetBaseAnimationValues, Temp_object_Variable_9) == 0x000080, "Member 'BP_WinscreenPawn_C_GetBaseAnimationValues::Temp_object_Variable_9' has a wrong offset!");
static_assert(offsetof(BP_WinscreenPawn_C_GetBaseAnimationValues, Temp_byte_Variable) == 0x000088, "Member 'BP_WinscreenPawn_C_GetBaseAnimationValues::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_WinscreenPawn_C_GetBaseAnimationValues, Temp_object_Variable_10) == 0x000090, "Member 'BP_WinscreenPawn_C_GetBaseAnimationValues::Temp_object_Variable_10' has a wrong offset!");
static_assert(offsetof(BP_WinscreenPawn_C_GetBaseAnimationValues, Temp_object_Variable_11) == 0x000098, "Member 'BP_WinscreenPawn_C_GetBaseAnimationValues::Temp_object_Variable_11' has a wrong offset!");
static_assert(offsetof(BP_WinscreenPawn_C_GetBaseAnimationValues, Temp_object_Variable_12) == 0x0000A0, "Member 'BP_WinscreenPawn_C_GetBaseAnimationValues::Temp_object_Variable_12' has a wrong offset!");
static_assert(offsetof(BP_WinscreenPawn_C_GetBaseAnimationValues, Temp_object_Variable_13) == 0x0000A8, "Member 'BP_WinscreenPawn_C_GetBaseAnimationValues::Temp_object_Variable_13' has a wrong offset!");
static_assert(offsetof(BP_WinscreenPawn_C_GetBaseAnimationValues, K2Node_Select_Default) == 0x0000B0, "Member 'BP_WinscreenPawn_C_GetBaseAnimationValues::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_WinscreenPawn_C_GetBaseAnimationValues, K2Node_Select_Default_1) == 0x0000B8, "Member 'BP_WinscreenPawn_C_GetBaseAnimationValues::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BP_WinscreenPawn_C_GetBaseAnimationValues, K2Node_Select_Default_2) == 0x0000C0, "Member 'BP_WinscreenPawn_C_GetBaseAnimationValues::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(BP_WinscreenPawn_C_GetBaseAnimationValues, K2Node_Select_Default_3) == 0x0000C8, "Member 'BP_WinscreenPawn_C_GetBaseAnimationValues::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(BP_WinscreenPawn_C_GetBaseAnimationValues, K2Node_Select_Default_4) == 0x0000D0, "Member 'BP_WinscreenPawn_C_GetBaseAnimationValues::K2Node_Select_Default_4' has a wrong offset!");
static_assert(offsetof(BP_WinscreenPawn_C_GetBaseAnimationValues, K2Node_Select_Default_5) == 0x0000D8, "Member 'BP_WinscreenPawn_C_GetBaseAnimationValues::K2Node_Select_Default_5' has a wrong offset!");

// Function BP_WinscreenPawn.BP_WinscreenPawn_C.GetCorrectPortrait
// 0x0070 (0x0070 - 0x0000)
struct BP_WinscreenPawn_C_GetCorrectPortrait final
{
public:
	class UTexture2D*                             Texture;                                           // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	ECharacterName                                Temp_byte_Variable;                                // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             Temp_object_Variable;                              // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_1;                            // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_2;                            // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_3;                            // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_4;                            // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_5;                            // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_6;                            // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_7;                            // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_8;                            // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_9;                            // 0x0058(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_10;                           // 0x0060(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             K2Node_Select_Default;                             // 0x0068(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_WinscreenPawn_C_GetCorrectPortrait) == 0x000008, "Wrong alignment on BP_WinscreenPawn_C_GetCorrectPortrait");
static_assert(sizeof(BP_WinscreenPawn_C_GetCorrectPortrait) == 0x000070, "Wrong size on BP_WinscreenPawn_C_GetCorrectPortrait");
static_assert(offsetof(BP_WinscreenPawn_C_GetCorrectPortrait, Texture) == 0x000000, "Member 'BP_WinscreenPawn_C_GetCorrectPortrait::Texture' has a wrong offset!");
static_assert(offsetof(BP_WinscreenPawn_C_GetCorrectPortrait, Temp_byte_Variable) == 0x000008, "Member 'BP_WinscreenPawn_C_GetCorrectPortrait::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_WinscreenPawn_C_GetCorrectPortrait, Temp_object_Variable) == 0x000010, "Member 'BP_WinscreenPawn_C_GetCorrectPortrait::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BP_WinscreenPawn_C_GetCorrectPortrait, Temp_object_Variable_1) == 0x000018, "Member 'BP_WinscreenPawn_C_GetCorrectPortrait::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_WinscreenPawn_C_GetCorrectPortrait, Temp_object_Variable_2) == 0x000020, "Member 'BP_WinscreenPawn_C_GetCorrectPortrait::Temp_object_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_WinscreenPawn_C_GetCorrectPortrait, Temp_object_Variable_3) == 0x000028, "Member 'BP_WinscreenPawn_C_GetCorrectPortrait::Temp_object_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_WinscreenPawn_C_GetCorrectPortrait, Temp_object_Variable_4) == 0x000030, "Member 'BP_WinscreenPawn_C_GetCorrectPortrait::Temp_object_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_WinscreenPawn_C_GetCorrectPortrait, Temp_object_Variable_5) == 0x000038, "Member 'BP_WinscreenPawn_C_GetCorrectPortrait::Temp_object_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_WinscreenPawn_C_GetCorrectPortrait, Temp_object_Variable_6) == 0x000040, "Member 'BP_WinscreenPawn_C_GetCorrectPortrait::Temp_object_Variable_6' has a wrong offset!");
static_assert(offsetof(BP_WinscreenPawn_C_GetCorrectPortrait, Temp_object_Variable_7) == 0x000048, "Member 'BP_WinscreenPawn_C_GetCorrectPortrait::Temp_object_Variable_7' has a wrong offset!");
static_assert(offsetof(BP_WinscreenPawn_C_GetCorrectPortrait, Temp_object_Variable_8) == 0x000050, "Member 'BP_WinscreenPawn_C_GetCorrectPortrait::Temp_object_Variable_8' has a wrong offset!");
static_assert(offsetof(BP_WinscreenPawn_C_GetCorrectPortrait, Temp_object_Variable_9) == 0x000058, "Member 'BP_WinscreenPawn_C_GetCorrectPortrait::Temp_object_Variable_9' has a wrong offset!");
static_assert(offsetof(BP_WinscreenPawn_C_GetCorrectPortrait, Temp_object_Variable_10) == 0x000060, "Member 'BP_WinscreenPawn_C_GetCorrectPortrait::Temp_object_Variable_10' has a wrong offset!");
static_assert(offsetof(BP_WinscreenPawn_C_GetCorrectPortrait, K2Node_Select_Default) == 0x000068, "Member 'BP_WinscreenPawn_C_GetCorrectPortrait::K2Node_Select_Default' has a wrong offset!");

// Function BP_WinscreenPawn.BP_WinscreenPawn_C.OnBlendOut_1E0A6A17493AA66BD82A258F852A0F22
// 0x0008 (0x0008 - 0x0000)
struct BP_WinscreenPawn_C_OnBlendOut_1E0A6A17493AA66BD82A258F852A0F22 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_WinscreenPawn_C_OnBlendOut_1E0A6A17493AA66BD82A258F852A0F22) == 0x000004, "Wrong alignment on BP_WinscreenPawn_C_OnBlendOut_1E0A6A17493AA66BD82A258F852A0F22");
static_assert(sizeof(BP_WinscreenPawn_C_OnBlendOut_1E0A6A17493AA66BD82A258F852A0F22) == 0x000008, "Wrong size on BP_WinscreenPawn_C_OnBlendOut_1E0A6A17493AA66BD82A258F852A0F22");
static_assert(offsetof(BP_WinscreenPawn_C_OnBlendOut_1E0A6A17493AA66BD82A258F852A0F22, NotifyName) == 0x000000, "Member 'BP_WinscreenPawn_C_OnBlendOut_1E0A6A17493AA66BD82A258F852A0F22::NotifyName' has a wrong offset!");

// Function BP_WinscreenPawn.BP_WinscreenPawn_C.OnBlendOut_5789175740702D29E05F5F92C3839077
// 0x0008 (0x0008 - 0x0000)
struct BP_WinscreenPawn_C_OnBlendOut_5789175740702D29E05F5F92C3839077 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_WinscreenPawn_C_OnBlendOut_5789175740702D29E05F5F92C3839077) == 0x000004, "Wrong alignment on BP_WinscreenPawn_C_OnBlendOut_5789175740702D29E05F5F92C3839077");
static_assert(sizeof(BP_WinscreenPawn_C_OnBlendOut_5789175740702D29E05F5F92C3839077) == 0x000008, "Wrong size on BP_WinscreenPawn_C_OnBlendOut_5789175740702D29E05F5F92C3839077");
static_assert(offsetof(BP_WinscreenPawn_C_OnBlendOut_5789175740702D29E05F5F92C3839077, NotifyName) == 0x000000, "Member 'BP_WinscreenPawn_C_OnBlendOut_5789175740702D29E05F5F92C3839077::NotifyName' has a wrong offset!");

// Function BP_WinscreenPawn.BP_WinscreenPawn_C.OnCompleted_1E0A6A17493AA66BD82A258F852A0F22
// 0x0008 (0x0008 - 0x0000)
struct BP_WinscreenPawn_C_OnCompleted_1E0A6A17493AA66BD82A258F852A0F22 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_WinscreenPawn_C_OnCompleted_1E0A6A17493AA66BD82A258F852A0F22) == 0x000004, "Wrong alignment on BP_WinscreenPawn_C_OnCompleted_1E0A6A17493AA66BD82A258F852A0F22");
static_assert(sizeof(BP_WinscreenPawn_C_OnCompleted_1E0A6A17493AA66BD82A258F852A0F22) == 0x000008, "Wrong size on BP_WinscreenPawn_C_OnCompleted_1E0A6A17493AA66BD82A258F852A0F22");
static_assert(offsetof(BP_WinscreenPawn_C_OnCompleted_1E0A6A17493AA66BD82A258F852A0F22, NotifyName) == 0x000000, "Member 'BP_WinscreenPawn_C_OnCompleted_1E0A6A17493AA66BD82A258F852A0F22::NotifyName' has a wrong offset!");

// Function BP_WinscreenPawn.BP_WinscreenPawn_C.OnCompleted_5789175740702D29E05F5F92C3839077
// 0x0008 (0x0008 - 0x0000)
struct BP_WinscreenPawn_C_OnCompleted_5789175740702D29E05F5F92C3839077 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_WinscreenPawn_C_OnCompleted_5789175740702D29E05F5F92C3839077) == 0x000004, "Wrong alignment on BP_WinscreenPawn_C_OnCompleted_5789175740702D29E05F5F92C3839077");
static_assert(sizeof(BP_WinscreenPawn_C_OnCompleted_5789175740702D29E05F5F92C3839077) == 0x000008, "Wrong size on BP_WinscreenPawn_C_OnCompleted_5789175740702D29E05F5F92C3839077");
static_assert(offsetof(BP_WinscreenPawn_C_OnCompleted_5789175740702D29E05F5F92C3839077, NotifyName) == 0x000000, "Member 'BP_WinscreenPawn_C_OnCompleted_5789175740702D29E05F5F92C3839077::NotifyName' has a wrong offset!");

// Function BP_WinscreenPawn.BP_WinscreenPawn_C.OnInterrupted_1E0A6A17493AA66BD82A258F852A0F22
// 0x0008 (0x0008 - 0x0000)
struct BP_WinscreenPawn_C_OnInterrupted_1E0A6A17493AA66BD82A258F852A0F22 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_WinscreenPawn_C_OnInterrupted_1E0A6A17493AA66BD82A258F852A0F22) == 0x000004, "Wrong alignment on BP_WinscreenPawn_C_OnInterrupted_1E0A6A17493AA66BD82A258F852A0F22");
static_assert(sizeof(BP_WinscreenPawn_C_OnInterrupted_1E0A6A17493AA66BD82A258F852A0F22) == 0x000008, "Wrong size on BP_WinscreenPawn_C_OnInterrupted_1E0A6A17493AA66BD82A258F852A0F22");
static_assert(offsetof(BP_WinscreenPawn_C_OnInterrupted_1E0A6A17493AA66BD82A258F852A0F22, NotifyName) == 0x000000, "Member 'BP_WinscreenPawn_C_OnInterrupted_1E0A6A17493AA66BD82A258F852A0F22::NotifyName' has a wrong offset!");

// Function BP_WinscreenPawn.BP_WinscreenPawn_C.OnInterrupted_5789175740702D29E05F5F92C3839077
// 0x0008 (0x0008 - 0x0000)
struct BP_WinscreenPawn_C_OnInterrupted_5789175740702D29E05F5F92C3839077 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_WinscreenPawn_C_OnInterrupted_5789175740702D29E05F5F92C3839077) == 0x000004, "Wrong alignment on BP_WinscreenPawn_C_OnInterrupted_5789175740702D29E05F5F92C3839077");
static_assert(sizeof(BP_WinscreenPawn_C_OnInterrupted_5789175740702D29E05F5F92C3839077) == 0x000008, "Wrong size on BP_WinscreenPawn_C_OnInterrupted_5789175740702D29E05F5F92C3839077");
static_assert(offsetof(BP_WinscreenPawn_C_OnInterrupted_5789175740702D29E05F5F92C3839077, NotifyName) == 0x000000, "Member 'BP_WinscreenPawn_C_OnInterrupted_5789175740702D29E05F5F92C3839077::NotifyName' has a wrong offset!");

// Function BP_WinscreenPawn.BP_WinscreenPawn_C.OnNotifyBegin_1E0A6A17493AA66BD82A258F852A0F22
// 0x0008 (0x0008 - 0x0000)
struct BP_WinscreenPawn_C_OnNotifyBegin_1E0A6A17493AA66BD82A258F852A0F22 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_WinscreenPawn_C_OnNotifyBegin_1E0A6A17493AA66BD82A258F852A0F22) == 0x000004, "Wrong alignment on BP_WinscreenPawn_C_OnNotifyBegin_1E0A6A17493AA66BD82A258F852A0F22");
static_assert(sizeof(BP_WinscreenPawn_C_OnNotifyBegin_1E0A6A17493AA66BD82A258F852A0F22) == 0x000008, "Wrong size on BP_WinscreenPawn_C_OnNotifyBegin_1E0A6A17493AA66BD82A258F852A0F22");
static_assert(offsetof(BP_WinscreenPawn_C_OnNotifyBegin_1E0A6A17493AA66BD82A258F852A0F22, NotifyName) == 0x000000, "Member 'BP_WinscreenPawn_C_OnNotifyBegin_1E0A6A17493AA66BD82A258F852A0F22::NotifyName' has a wrong offset!");

// Function BP_WinscreenPawn.BP_WinscreenPawn_C.OnNotifyBegin_5789175740702D29E05F5F92C3839077
// 0x0008 (0x0008 - 0x0000)
struct BP_WinscreenPawn_C_OnNotifyBegin_5789175740702D29E05F5F92C3839077 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_WinscreenPawn_C_OnNotifyBegin_5789175740702D29E05F5F92C3839077) == 0x000004, "Wrong alignment on BP_WinscreenPawn_C_OnNotifyBegin_5789175740702D29E05F5F92C3839077");
static_assert(sizeof(BP_WinscreenPawn_C_OnNotifyBegin_5789175740702D29E05F5F92C3839077) == 0x000008, "Wrong size on BP_WinscreenPawn_C_OnNotifyBegin_5789175740702D29E05F5F92C3839077");
static_assert(offsetof(BP_WinscreenPawn_C_OnNotifyBegin_5789175740702D29E05F5F92C3839077, NotifyName) == 0x000000, "Member 'BP_WinscreenPawn_C_OnNotifyBegin_5789175740702D29E05F5F92C3839077::NotifyName' has a wrong offset!");

// Function BP_WinscreenPawn.BP_WinscreenPawn_C.OnNotifyEnd_1E0A6A17493AA66BD82A258F852A0F22
// 0x0008 (0x0008 - 0x0000)
struct BP_WinscreenPawn_C_OnNotifyEnd_1E0A6A17493AA66BD82A258F852A0F22 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_WinscreenPawn_C_OnNotifyEnd_1E0A6A17493AA66BD82A258F852A0F22) == 0x000004, "Wrong alignment on BP_WinscreenPawn_C_OnNotifyEnd_1E0A6A17493AA66BD82A258F852A0F22");
static_assert(sizeof(BP_WinscreenPawn_C_OnNotifyEnd_1E0A6A17493AA66BD82A258F852A0F22) == 0x000008, "Wrong size on BP_WinscreenPawn_C_OnNotifyEnd_1E0A6A17493AA66BD82A258F852A0F22");
static_assert(offsetof(BP_WinscreenPawn_C_OnNotifyEnd_1E0A6A17493AA66BD82A258F852A0F22, NotifyName) == 0x000000, "Member 'BP_WinscreenPawn_C_OnNotifyEnd_1E0A6A17493AA66BD82A258F852A0F22::NotifyName' has a wrong offset!");

// Function BP_WinscreenPawn.BP_WinscreenPawn_C.OnNotifyEnd_5789175740702D29E05F5F92C3839077
// 0x0008 (0x0008 - 0x0000)
struct BP_WinscreenPawn_C_OnNotifyEnd_5789175740702D29E05F5F92C3839077 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_WinscreenPawn_C_OnNotifyEnd_5789175740702D29E05F5F92C3839077) == 0x000004, "Wrong alignment on BP_WinscreenPawn_C_OnNotifyEnd_5789175740702D29E05F5F92C3839077");
static_assert(sizeof(BP_WinscreenPawn_C_OnNotifyEnd_5789175740702D29E05F5F92C3839077) == 0x000008, "Wrong size on BP_WinscreenPawn_C_OnNotifyEnd_5789175740702D29E05F5F92C3839077");
static_assert(offsetof(BP_WinscreenPawn_C_OnNotifyEnd_5789175740702D29E05F5F92C3839077, NotifyName) == 0x000000, "Member 'BP_WinscreenPawn_C_OnNotifyEnd_5789175740702D29E05F5F92C3839077::NotifyName' has a wrong offset!");

// Function BP_WinscreenPawn.BP_WinscreenPawn_C.Play Player Input Montage
// 0x0008 (0x0008 - 0x0000)
struct BP_WinscreenPawn_C_Play_Player_Input_Montage final
{
public:
	class UAnimMontage*                           MontageToPlay;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_WinscreenPawn_C_Play_Player_Input_Montage) == 0x000008, "Wrong alignment on BP_WinscreenPawn_C_Play_Player_Input_Montage");
static_assert(sizeof(BP_WinscreenPawn_C_Play_Player_Input_Montage) == 0x000008, "Wrong size on BP_WinscreenPawn_C_Play_Player_Input_Montage");
static_assert(offsetof(BP_WinscreenPawn_C_Play_Player_Input_Montage, MontageToPlay) == 0x000000, "Member 'BP_WinscreenPawn_C_Play_Player_Input_Montage::MontageToPlay' has a wrong offset!");

// Function BP_WinscreenPawn.BP_WinscreenPawn_C.Set Mesh
// 0x0010 (0x0010 - 0x0000)
struct BP_WinscreenPawn_C_Set_Mesh final
{
public:
	class USkeletalMesh*                          NewMesh;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	ECharacterName                                CharacterName;                                     // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_WinscreenPawn_C_Set_Mesh) == 0x000008, "Wrong alignment on BP_WinscreenPawn_C_Set_Mesh");
static_assert(sizeof(BP_WinscreenPawn_C_Set_Mesh) == 0x000010, "Wrong size on BP_WinscreenPawn_C_Set_Mesh");
static_assert(offsetof(BP_WinscreenPawn_C_Set_Mesh, NewMesh) == 0x000000, "Member 'BP_WinscreenPawn_C_Set_Mesh::NewMesh' has a wrong offset!");
static_assert(offsetof(BP_WinscreenPawn_C_Set_Mesh, CharacterName) == 0x000008, "Member 'BP_WinscreenPawn_C_Set_Mesh::CharacterName' has a wrong offset!");

// Function BP_WinscreenPawn.BP_WinscreenPawn_C.SetNameplateVisibility
// 0x0001 (0x0001 - 0x0000)
struct BP_WinscreenPawn_C_SetNameplateVisibility final
{
public:
	bool                                          Visible;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_WinscreenPawn_C_SetNameplateVisibility) == 0x000001, "Wrong alignment on BP_WinscreenPawn_C_SetNameplateVisibility");
static_assert(sizeof(BP_WinscreenPawn_C_SetNameplateVisibility) == 0x000001, "Wrong size on BP_WinscreenPawn_C_SetNameplateVisibility");
static_assert(offsetof(BP_WinscreenPawn_C_SetNameplateVisibility, Visible) == 0x000000, "Member 'BP_WinscreenPawn_C_SetNameplateVisibility::Visible' has a wrong offset!");

}

