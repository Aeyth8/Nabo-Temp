#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GA_Base_Heal

#include "Basic.hpp"

#include "GA_Base_Heal_classes.hpp"
#include "GA_Base_Heal_parameters.hpp"


namespace SDK
{

// Function GA_Base_Heal.GA_Base_Heal_C.ApplyBuff
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UGA_Base_Heal_C::ApplyBuff()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_Base_Heal_C", "ApplyBuff");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GA_Base_Heal.GA_Base_Heal_C.ExecuteUbergraph_GA_Base_Heal
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UGA_Base_Heal_C::ExecuteUbergraph_GA_Base_Heal(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_Base_Heal_C", "ExecuteUbergraph_GA_Base_Heal");

	Params::GA_Base_Heal_C_ExecuteUbergraph_GA_Base_Heal Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function GA_Base_Heal.GA_Base_Heal_C.GetEffectCauser
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Actor                                                  (Parm, OutParm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)

void UGA_Base_Heal_C::GetEffectCauser(class AActor** Actor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_Base_Heal_C", "GetEffectCauser");

	Params::GA_Base_Heal_C_GetEffectCauser Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Actor != nullptr)
		*Actor = Parms.Actor;
}


// Function GA_Base_Heal.GA_Base_Heal_C.GetSpawnedActor
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class AActor*                           Actor                                                  (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UGA_Base_Heal_C::GetSpawnedActor(class AActor** Actor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_Base_Heal_C", "GetSpawnedActor");

	Params::GA_Base_Heal_C_GetSpawnedActor Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Actor != nullptr)
		*Actor = Parms.Actor;
}


// Function GA_Base_Heal.GA_Base_Heal_C.K2_ActivateAbility
// (Event, Protected, BlueprintEvent)

void UGA_Base_Heal_C::K2_ActivateAbility()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_Base_Heal_C", "K2_ActivateAbility");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GA_Base_Heal.GA_Base_Heal_C.K2_OnEndAbility
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bWasCancelled                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UGA_Base_Heal_C::K2_OnEndAbility(bool bWasCancelled)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_Base_Heal_C", "K2_OnEndAbility");

	Params::GA_Base_Heal_C_K2_OnEndAbility Parms{};

	Parms.bWasCancelled = bWasCancelled;

	UObject::ProcessEvent(Func, &Parms);
}


// Function GA_Base_Heal.GA_Base_Heal_C.OnFinish_86E05DF34657309C51B499BF29742411
// (BlueprintCallable, BlueprintEvent)

void UGA_Base_Heal_C::OnFinish_86E05DF34657309C51B499BF29742411()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_Base_Heal_C", "OnFinish_86E05DF34657309C51B499BF29742411");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GA_Base_Heal.GA_Base_Heal_C.CanApplyHeal
// (Private, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// class UAbilitySystemComponent*          Actor_ACS                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool UGA_Base_Heal_C::CanApplyHeal(class UAbilitySystemComponent* Actor_ACS) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_Base_Heal_C", "CanApplyHeal");

	Params::GA_Base_Heal_C_CanApplyHeal Parms{};

	Parms.Actor_ACS = Actor_ACS;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function GA_Base_Heal.GA_Base_Heal_C.CheckTagStackExists
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// struct FGameplayTag                     Tag                                                    (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
// bool                                    DoesExist                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UGA_Base_Heal_C::CheckTagStackExists(const struct FGameplayTag& Tag, bool* DoesExist) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_Base_Heal_C", "CheckTagStackExists");

	Params::GA_Base_Heal_C_CheckTagStackExists Parms{};

	Parms.Tag = std::move(Tag);

	UObject::ProcessEvent(Func, &Parms);

	if (DoesExist != nullptr)
		*DoesExist = Parms.DoesExist;
}


// Function GA_Base_Heal.GA_Base_Heal_C.DisplayFullHealthMessage_Auth
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// class ABP_ResidentCharacter_C*          BP_ResidentCharacter                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UGA_Base_Heal_C::DisplayFullHealthMessage_Auth(class ABP_ResidentCharacter_C* BP_ResidentCharacter) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_Base_Heal_C", "DisplayFullHealthMessage_Auth");

	Params::GA_Base_Heal_C_DisplayFullHealthMessage_Auth Parms{};

	Parms.BP_ResidentCharacter = BP_ResidentCharacter;

	UObject::ProcessEvent(Func, &Parms);
}

}

