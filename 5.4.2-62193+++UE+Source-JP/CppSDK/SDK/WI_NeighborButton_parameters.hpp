#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WI_NeighborButton

#include "Basic.hpp"

#include "UMG_structs.hpp"
#include "JP_structs.hpp"
#include "SlateCore_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function WI_NeighborButton.WI_NeighborButton_C.ExecuteUbergraph_WI_NeighborButton
// 0x02C0 (0x02C0 - 0x0000)
struct WI_NeighborButton_C_ExecuteUbergraph_WI_NeighborButton final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                K2Node_CustomEvent_Loaded;                         // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_TryGetNeighborDefinition_Succeeded;       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UNeighborDefinition>     CallFunc_TryGetNeighborDefinition_ReturnValue;     // 0x0018(0x0028)(UObjectWrapper, HasGetValueTypeHash)
	bool                                          CallFunc_MatchesTag_ReturnValue;                   // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                Temp_object_Variable;                              // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBattlePassMetaData*                    K2Node_DynamicCast_AsBattle_Pass_Meta_Data;        // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EOnlineItemUnlockRequirement                  Temp_byte_Variable;                                // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x005A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5B[0x5];                                       // 0x005B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0060(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UObject* Loaded)>        K2Node_CreateDelegate_OutputDelegate;              // 0x0068(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_1;              // 0x0078(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           K2Node_CustomEvent_NeighborID;                     // 0x0080(0x0008)(NoDestructor, HasGetValueTypeHash)
	class UObject*                                Temp_object_Variable_1;                            // 0x0088(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UNeighborDefinition*                    K2Node_DynamicCast_AsNeighbor_Definition;          // 0x0090(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_99[0x7];                                       // 0x0099(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FString>                         K2Node_MakeArray_Array;                            // 0x00A0(0x0010)(ConstParm, ReferenceParm)
	struct FOnlineStoreItemData                   CallFunc_MakeOnlineStoreItemDataNoUnlock_ReturnValue; // 0x00B0(0x0048)()
	struct FOnlineStoreItemBattlePassRequirement  K2Node_CustomEvent_BattlePassRequirement;          // 0x00F8(0x0010)(NoDestructor)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UObject* Loaded)>        K2Node_CreateDelegate_OutputDelegate_1;            // 0x010C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11C[0x4];                                      // 0x011C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	int64                                         CallFunc_Conv_IntToInt64_ReturnValue;              // 0x0120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0128(0x0048)(HasGetValueTypeHash)
	TSoftObjectPtr<class UBattlePassMetaData>     CallFunc_TryGetBattlePassMetaData_OutSoftBattlePassMetaData; // 0x0170(0x0028)(UObjectWrapper, HasGetValueTypeHash)
	bool                                          CallFunc_TryGetBattlePassMetaData_ReturnValue;     // 0x0198(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_199[0x7];                                      // 0x0199(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_1;                          // 0x01A0(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x01B0(0x0010)()
	class UObject*                                K2Node_CustomEvent_Loaded_1;                       // 0x01C0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FOnlineStoreItemCost                   CallFunc_MakeOnlineStoreItemCostStruct_ReturnValue; // 0x01C8(0x000C)(NoDestructor)
	uint8                                         Pad_1D4[0x4];                                      // 0x01D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FOnlineStoreItemData                   CallFunc_MakeOnlineStoreItemDataVirtualCurrencyUnlock_ReturnValue; // 0x01D8(0x0048)()
	struct FOnlineStoreItemBattlePassRequirement  CallFunc_MakeOnlineStoreItemBattlePassRequirementStruct_ReturnValue; // 0x0220(0x0010)(NoDestructor)
	struct FOnlineStoreItemData                   CallFunc_MakeOnlineStoreItemDataBattlePassUnlock_ReturnValue; // 0x0230(0x0048)()
	struct FOnlineStoreItemData                   K2Node_Select_Default;                             // 0x0278(0x0048)()
};
static_assert(alignof(WI_NeighborButton_C_ExecuteUbergraph_WI_NeighborButton) == 0x000008, "Wrong alignment on WI_NeighborButton_C_ExecuteUbergraph_WI_NeighborButton");
static_assert(sizeof(WI_NeighborButton_C_ExecuteUbergraph_WI_NeighborButton) == 0x0002C0, "Wrong size on WI_NeighborButton_C_ExecuteUbergraph_WI_NeighborButton");
static_assert(offsetof(WI_NeighborButton_C_ExecuteUbergraph_WI_NeighborButton, EntryPoint) == 0x000000, "Member 'WI_NeighborButton_C_ExecuteUbergraph_WI_NeighborButton::EntryPoint' has a wrong offset!");
static_assert(offsetof(WI_NeighborButton_C_ExecuteUbergraph_WI_NeighborButton, K2Node_CustomEvent_Loaded) == 0x000008, "Member 'WI_NeighborButton_C_ExecuteUbergraph_WI_NeighborButton::K2Node_CustomEvent_Loaded' has a wrong offset!");
static_assert(offsetof(WI_NeighborButton_C_ExecuteUbergraph_WI_NeighborButton, CallFunc_TryGetNeighborDefinition_Succeeded) == 0x000010, "Member 'WI_NeighborButton_C_ExecuteUbergraph_WI_NeighborButton::CallFunc_TryGetNeighborDefinition_Succeeded' has a wrong offset!");
static_assert(offsetof(WI_NeighborButton_C_ExecuteUbergraph_WI_NeighborButton, CallFunc_TryGetNeighborDefinition_ReturnValue) == 0x000018, "Member 'WI_NeighborButton_C_ExecuteUbergraph_WI_NeighborButton::CallFunc_TryGetNeighborDefinition_ReturnValue' has a wrong offset!");
static_assert(offsetof(WI_NeighborButton_C_ExecuteUbergraph_WI_NeighborButton, CallFunc_MatchesTag_ReturnValue) == 0x000040, "Member 'WI_NeighborButton_C_ExecuteUbergraph_WI_NeighborButton::CallFunc_MatchesTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(WI_NeighborButton_C_ExecuteUbergraph_WI_NeighborButton, Temp_object_Variable) == 0x000048, "Member 'WI_NeighborButton_C_ExecuteUbergraph_WI_NeighborButton::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(WI_NeighborButton_C_ExecuteUbergraph_WI_NeighborButton, K2Node_DynamicCast_AsBattle_Pass_Meta_Data) == 0x000050, "Member 'WI_NeighborButton_C_ExecuteUbergraph_WI_NeighborButton::K2Node_DynamicCast_AsBattle_Pass_Meta_Data' has a wrong offset!");
static_assert(offsetof(WI_NeighborButton_C_ExecuteUbergraph_WI_NeighborButton, K2Node_DynamicCast_bSuccess) == 0x000058, "Member 'WI_NeighborButton_C_ExecuteUbergraph_WI_NeighborButton::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WI_NeighborButton_C_ExecuteUbergraph_WI_NeighborButton, Temp_byte_Variable) == 0x000059, "Member 'WI_NeighborButton_C_ExecuteUbergraph_WI_NeighborButton::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WI_NeighborButton_C_ExecuteUbergraph_WI_NeighborButton, K2Node_Event_IsDesignTime) == 0x00005A, "Member 'WI_NeighborButton_C_ExecuteUbergraph_WI_NeighborButton::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(WI_NeighborButton_C_ExecuteUbergraph_WI_NeighborButton, CallFunc_PlayAnimation_ReturnValue) == 0x000060, "Member 'WI_NeighborButton_C_ExecuteUbergraph_WI_NeighborButton::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(WI_NeighborButton_C_ExecuteUbergraph_WI_NeighborButton, K2Node_CreateDelegate_OutputDelegate) == 0x000068, "Member 'WI_NeighborButton_C_ExecuteUbergraph_WI_NeighborButton::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WI_NeighborButton_C_ExecuteUbergraph_WI_NeighborButton, CallFunc_PlayAnimation_ReturnValue_1) == 0x000078, "Member 'WI_NeighborButton_C_ExecuteUbergraph_WI_NeighborButton::CallFunc_PlayAnimation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WI_NeighborButton_C_ExecuteUbergraph_WI_NeighborButton, K2Node_CustomEvent_NeighborID) == 0x000080, "Member 'WI_NeighborButton_C_ExecuteUbergraph_WI_NeighborButton::K2Node_CustomEvent_NeighborID' has a wrong offset!");
static_assert(offsetof(WI_NeighborButton_C_ExecuteUbergraph_WI_NeighborButton, Temp_object_Variable_1) == 0x000088, "Member 'WI_NeighborButton_C_ExecuteUbergraph_WI_NeighborButton::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(WI_NeighborButton_C_ExecuteUbergraph_WI_NeighborButton, K2Node_DynamicCast_AsNeighbor_Definition) == 0x000090, "Member 'WI_NeighborButton_C_ExecuteUbergraph_WI_NeighborButton::K2Node_DynamicCast_AsNeighbor_Definition' has a wrong offset!");
static_assert(offsetof(WI_NeighborButton_C_ExecuteUbergraph_WI_NeighborButton, K2Node_DynamicCast_bSuccess_1) == 0x000098, "Member 'WI_NeighborButton_C_ExecuteUbergraph_WI_NeighborButton::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(WI_NeighborButton_C_ExecuteUbergraph_WI_NeighborButton, K2Node_MakeArray_Array) == 0x0000A0, "Member 'WI_NeighborButton_C_ExecuteUbergraph_WI_NeighborButton::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(WI_NeighborButton_C_ExecuteUbergraph_WI_NeighborButton, CallFunc_MakeOnlineStoreItemDataNoUnlock_ReturnValue) == 0x0000B0, "Member 'WI_NeighborButton_C_ExecuteUbergraph_WI_NeighborButton::CallFunc_MakeOnlineStoreItemDataNoUnlock_ReturnValue' has a wrong offset!");
static_assert(offsetof(WI_NeighborButton_C_ExecuteUbergraph_WI_NeighborButton, K2Node_CustomEvent_BattlePassRequirement) == 0x0000F8, "Member 'WI_NeighborButton_C_ExecuteUbergraph_WI_NeighborButton::K2Node_CustomEvent_BattlePassRequirement' has a wrong offset!");
static_assert(offsetof(WI_NeighborButton_C_ExecuteUbergraph_WI_NeighborButton, CallFunc_Add_IntInt_ReturnValue) == 0x000108, "Member 'WI_NeighborButton_C_ExecuteUbergraph_WI_NeighborButton::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WI_NeighborButton_C_ExecuteUbergraph_WI_NeighborButton, K2Node_CreateDelegate_OutputDelegate_1) == 0x00010C, "Member 'WI_NeighborButton_C_ExecuteUbergraph_WI_NeighborButton::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(WI_NeighborButton_C_ExecuteUbergraph_WI_NeighborButton, CallFunc_Conv_IntToInt64_ReturnValue) == 0x000120, "Member 'WI_NeighborButton_C_ExecuteUbergraph_WI_NeighborButton::CallFunc_Conv_IntToInt64_ReturnValue' has a wrong offset!");
static_assert(offsetof(WI_NeighborButton_C_ExecuteUbergraph_WI_NeighborButton, K2Node_MakeStruct_FormatArgumentData) == 0x000128, "Member 'WI_NeighborButton_C_ExecuteUbergraph_WI_NeighborButton::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(WI_NeighborButton_C_ExecuteUbergraph_WI_NeighborButton, CallFunc_TryGetBattlePassMetaData_OutSoftBattlePassMetaData) == 0x000170, "Member 'WI_NeighborButton_C_ExecuteUbergraph_WI_NeighborButton::CallFunc_TryGetBattlePassMetaData_OutSoftBattlePassMetaData' has a wrong offset!");
static_assert(offsetof(WI_NeighborButton_C_ExecuteUbergraph_WI_NeighborButton, CallFunc_TryGetBattlePassMetaData_ReturnValue) == 0x000198, "Member 'WI_NeighborButton_C_ExecuteUbergraph_WI_NeighborButton::CallFunc_TryGetBattlePassMetaData_ReturnValue' has a wrong offset!");
static_assert(offsetof(WI_NeighborButton_C_ExecuteUbergraph_WI_NeighborButton, K2Node_MakeArray_Array_1) == 0x0001A0, "Member 'WI_NeighborButton_C_ExecuteUbergraph_WI_NeighborButton::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(WI_NeighborButton_C_ExecuteUbergraph_WI_NeighborButton, CallFunc_Format_ReturnValue) == 0x0001B0, "Member 'WI_NeighborButton_C_ExecuteUbergraph_WI_NeighborButton::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(WI_NeighborButton_C_ExecuteUbergraph_WI_NeighborButton, K2Node_CustomEvent_Loaded_1) == 0x0001C0, "Member 'WI_NeighborButton_C_ExecuteUbergraph_WI_NeighborButton::K2Node_CustomEvent_Loaded_1' has a wrong offset!");
static_assert(offsetof(WI_NeighborButton_C_ExecuteUbergraph_WI_NeighborButton, CallFunc_MakeOnlineStoreItemCostStruct_ReturnValue) == 0x0001C8, "Member 'WI_NeighborButton_C_ExecuteUbergraph_WI_NeighborButton::CallFunc_MakeOnlineStoreItemCostStruct_ReturnValue' has a wrong offset!");
static_assert(offsetof(WI_NeighborButton_C_ExecuteUbergraph_WI_NeighborButton, CallFunc_MakeOnlineStoreItemDataVirtualCurrencyUnlock_ReturnValue) == 0x0001D8, "Member 'WI_NeighborButton_C_ExecuteUbergraph_WI_NeighborButton::CallFunc_MakeOnlineStoreItemDataVirtualCurrencyUnlock_ReturnValue' has a wrong offset!");
static_assert(offsetof(WI_NeighborButton_C_ExecuteUbergraph_WI_NeighborButton, CallFunc_MakeOnlineStoreItemBattlePassRequirementStruct_ReturnValue) == 0x000220, "Member 'WI_NeighborButton_C_ExecuteUbergraph_WI_NeighborButton::CallFunc_MakeOnlineStoreItemBattlePassRequirementStruct_ReturnValue' has a wrong offset!");
static_assert(offsetof(WI_NeighborButton_C_ExecuteUbergraph_WI_NeighborButton, CallFunc_MakeOnlineStoreItemDataBattlePassUnlock_ReturnValue) == 0x000230, "Member 'WI_NeighborButton_C_ExecuteUbergraph_WI_NeighborButton::CallFunc_MakeOnlineStoreItemDataBattlePassUnlock_ReturnValue' has a wrong offset!");
static_assert(offsetof(WI_NeighborButton_C_ExecuteUbergraph_WI_NeighborButton, K2Node_Select_Default) == 0x000278, "Member 'WI_NeighborButton_C_ExecuteUbergraph_WI_NeighborButton::K2Node_Select_Default' has a wrong offset!");

// Function WI_NeighborButton.WI_NeighborButton_C.GetNameAndIcon
// 0x0090 (0x0090 - 0x0000)
struct WI_NeighborButton_C_GetNameAndIcon final
{
public:
	struct FGameplayTag                           NeighborID_0;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	class FText                                   Name_0;                                            // 0x0008(0x0010)(Parm, OutParm)
	TSoftObjectPtr<class UTexture2D>              Icon;                                              // 0x0018(0x0028)(Parm, OutParm, HasGetValueTypeHash)
	bool                                          CallFunc_TryGetNeighborDefinition_Succeeded;       // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UNeighborDefinition>     CallFunc_TryGetNeighborDefinition_ReturnValue;     // 0x0048(0x0028)(UObjectWrapper, HasGetValueTypeHash)
	bool                                          CallFunc_IsGameplayTagValid_ReturnValue;           // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_71[0x7];                                       // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue; // 0x0078(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UNeighborDefinition*                    K2Node_DynamicCast_AsNeighbor_Definition;          // 0x0080(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WI_NeighborButton_C_GetNameAndIcon) == 0x000008, "Wrong alignment on WI_NeighborButton_C_GetNameAndIcon");
static_assert(sizeof(WI_NeighborButton_C_GetNameAndIcon) == 0x000090, "Wrong size on WI_NeighborButton_C_GetNameAndIcon");
static_assert(offsetof(WI_NeighborButton_C_GetNameAndIcon, NeighborID_0) == 0x000000, "Member 'WI_NeighborButton_C_GetNameAndIcon::NeighborID_0' has a wrong offset!");
static_assert(offsetof(WI_NeighborButton_C_GetNameAndIcon, Name_0) == 0x000008, "Member 'WI_NeighborButton_C_GetNameAndIcon::Name_0' has a wrong offset!");
static_assert(offsetof(WI_NeighborButton_C_GetNameAndIcon, Icon) == 0x000018, "Member 'WI_NeighborButton_C_GetNameAndIcon::Icon' has a wrong offset!");
static_assert(offsetof(WI_NeighborButton_C_GetNameAndIcon, CallFunc_TryGetNeighborDefinition_Succeeded) == 0x000040, "Member 'WI_NeighborButton_C_GetNameAndIcon::CallFunc_TryGetNeighborDefinition_Succeeded' has a wrong offset!");
static_assert(offsetof(WI_NeighborButton_C_GetNameAndIcon, CallFunc_TryGetNeighborDefinition_ReturnValue) == 0x000048, "Member 'WI_NeighborButton_C_GetNameAndIcon::CallFunc_TryGetNeighborDefinition_ReturnValue' has a wrong offset!");
static_assert(offsetof(WI_NeighborButton_C_GetNameAndIcon, CallFunc_IsGameplayTagValid_ReturnValue) == 0x000070, "Member 'WI_NeighborButton_C_GetNameAndIcon::CallFunc_IsGameplayTagValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WI_NeighborButton_C_GetNameAndIcon, CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue) == 0x000078, "Member 'WI_NeighborButton_C_GetNameAndIcon::CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(WI_NeighborButton_C_GetNameAndIcon, K2Node_DynamicCast_AsNeighbor_Definition) == 0x000080, "Member 'WI_NeighborButton_C_GetNameAndIcon::K2Node_DynamicCast_AsNeighbor_Definition' has a wrong offset!");
static_assert(offsetof(WI_NeighborButton_C_GetNameAndIcon, K2Node_DynamicCast_bSuccess) == 0x000088, "Member 'WI_NeighborButton_C_GetNameAndIcon::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function WI_NeighborButton.WI_NeighborButton_C.GetNameFromNeighborID
// 0x0048 (0x0048 - 0x0000)
struct WI_NeighborButton_C_GetNameFromNeighborID final
{
public:
	struct FGameplayTag                           NeighborID_0;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	class FString                                 NeighborName;                                      // 0x0008(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)
	class FName                                   CallFunc_GetTagName_ReturnValue;                   // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_NameToString_ReturnValue;            // 0x0020(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	TArray<class FString>                         CallFunc_ParseIntoArray_ReturnValue;               // 0x0030(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_LastIndex_ReturnValue;              // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WI_NeighborButton_C_GetNameFromNeighborID) == 0x000008, "Wrong alignment on WI_NeighborButton_C_GetNameFromNeighborID");
static_assert(sizeof(WI_NeighborButton_C_GetNameFromNeighborID) == 0x000048, "Wrong size on WI_NeighborButton_C_GetNameFromNeighborID");
static_assert(offsetof(WI_NeighborButton_C_GetNameFromNeighborID, NeighborID_0) == 0x000000, "Member 'WI_NeighborButton_C_GetNameFromNeighborID::NeighborID_0' has a wrong offset!");
static_assert(offsetof(WI_NeighborButton_C_GetNameFromNeighborID, NeighborName) == 0x000008, "Member 'WI_NeighborButton_C_GetNameFromNeighborID::NeighborName' has a wrong offset!");
static_assert(offsetof(WI_NeighborButton_C_GetNameFromNeighborID, CallFunc_GetTagName_ReturnValue) == 0x000018, "Member 'WI_NeighborButton_C_GetNameFromNeighborID::CallFunc_GetTagName_ReturnValue' has a wrong offset!");
static_assert(offsetof(WI_NeighborButton_C_GetNameFromNeighborID, CallFunc_Conv_NameToString_ReturnValue) == 0x000020, "Member 'WI_NeighborButton_C_GetNameFromNeighborID::CallFunc_Conv_NameToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(WI_NeighborButton_C_GetNameFromNeighborID, CallFunc_ParseIntoArray_ReturnValue) == 0x000030, "Member 'WI_NeighborButton_C_GetNameFromNeighborID::CallFunc_ParseIntoArray_ReturnValue' has a wrong offset!");
static_assert(offsetof(WI_NeighborButton_C_GetNameFromNeighborID, CallFunc_Array_LastIndex_ReturnValue) == 0x000040, "Member 'WI_NeighborButton_C_GetNameFromNeighborID::CallFunc_Array_LastIndex_ReturnValue' has a wrong offset!");

// Function WI_NeighborButton.WI_NeighborButton_C.OnClickedEventDispatcher__DelegateSignature
// 0x0004 (0x0004 - 0x0000)
struct WI_NeighborButton_C_OnClickedEventDispatcher__DelegateSignature final
{
public:
	int32                                         Index_0;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WI_NeighborButton_C_OnClickedEventDispatcher__DelegateSignature) == 0x000004, "Wrong alignment on WI_NeighborButton_C_OnClickedEventDispatcher__DelegateSignature");
static_assert(sizeof(WI_NeighborButton_C_OnClickedEventDispatcher__DelegateSignature) == 0x000004, "Wrong size on WI_NeighborButton_C_OnClickedEventDispatcher__DelegateSignature");
static_assert(offsetof(WI_NeighborButton_C_OnClickedEventDispatcher__DelegateSignature, Index_0) == 0x000000, "Member 'WI_NeighborButton_C_OnClickedEventDispatcher__DelegateSignature::Index_0' has a wrong offset!");

// Function WI_NeighborButton.WI_NeighborButton_C.OnLoaded_38A939B04DC8A529401B48902723274B
// 0x0008 (0x0008 - 0x0000)
struct WI_NeighborButton_C_OnLoaded_38A939B04DC8A529401B48902723274B final
{
public:
	class UObject*                                Loaded;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WI_NeighborButton_C_OnLoaded_38A939B04DC8A529401B48902723274B) == 0x000008, "Wrong alignment on WI_NeighborButton_C_OnLoaded_38A939B04DC8A529401B48902723274B");
static_assert(sizeof(WI_NeighborButton_C_OnLoaded_38A939B04DC8A529401B48902723274B) == 0x000008, "Wrong size on WI_NeighborButton_C_OnLoaded_38A939B04DC8A529401B48902723274B");
static_assert(offsetof(WI_NeighborButton_C_OnLoaded_38A939B04DC8A529401B48902723274B, Loaded) == 0x000000, "Member 'WI_NeighborButton_C_OnLoaded_38A939B04DC8A529401B48902723274B::Loaded' has a wrong offset!");

// Function WI_NeighborButton.WI_NeighborButton_C.OnLoaded_CCA746F24EDA6D5C3E4A9AA90EB212AB
// 0x0008 (0x0008 - 0x0000)
struct WI_NeighborButton_C_OnLoaded_CCA746F24EDA6D5C3E4A9AA90EB212AB final
{
public:
	class UObject*                                Loaded;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WI_NeighborButton_C_OnLoaded_CCA746F24EDA6D5C3E4A9AA90EB212AB) == 0x000008, "Wrong alignment on WI_NeighborButton_C_OnLoaded_CCA746F24EDA6D5C3E4A9AA90EB212AB");
static_assert(sizeof(WI_NeighborButton_C_OnLoaded_CCA746F24EDA6D5C3E4A9AA90EB212AB) == 0x000008, "Wrong size on WI_NeighborButton_C_OnLoaded_CCA746F24EDA6D5C3E4A9AA90EB212AB");
static_assert(offsetof(WI_NeighborButton_C_OnLoaded_CCA746F24EDA6D5C3E4A9AA90EB212AB, Loaded) == 0x000000, "Member 'WI_NeighborButton_C_OnLoaded_CCA746F24EDA6D5C3E4A9AA90EB212AB::Loaded' has a wrong offset!");

// Function WI_NeighborButton.WI_NeighborButton_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct WI_NeighborButton_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WI_NeighborButton_C_PreConstruct) == 0x000001, "Wrong alignment on WI_NeighborButton_C_PreConstruct");
static_assert(sizeof(WI_NeighborButton_C_PreConstruct) == 0x000001, "Wrong size on WI_NeighborButton_C_PreConstruct");
static_assert(offsetof(WI_NeighborButton_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'WI_NeighborButton_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function WI_NeighborButton.WI_NeighborButton_C.SetBattlePassRequirement
// 0x0010 (0x0010 - 0x0000)
struct WI_NeighborButton_C_SetBattlePassRequirement final
{
public:
	struct FOnlineStoreItemBattlePassRequirement  BattlePassRequirement;                             // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
};
static_assert(alignof(WI_NeighborButton_C_SetBattlePassRequirement) == 0x000004, "Wrong alignment on WI_NeighborButton_C_SetBattlePassRequirement");
static_assert(sizeof(WI_NeighborButton_C_SetBattlePassRequirement) == 0x000010, "Wrong size on WI_NeighborButton_C_SetBattlePassRequirement");
static_assert(offsetof(WI_NeighborButton_C_SetBattlePassRequirement, BattlePassRequirement) == 0x000000, "Member 'WI_NeighborButton_C_SetBattlePassRequirement::BattlePassRequirement' has a wrong offset!");

// Function WI_NeighborButton.WI_NeighborButton_C.SetCharacterName
// 0x0010 (0x0010 - 0x0000)
struct WI_NeighborButton_C_SetCharacterName final
{
public:
	class FText                                   CharacterName;                                     // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(WI_NeighborButton_C_SetCharacterName) == 0x000008, "Wrong alignment on WI_NeighborButton_C_SetCharacterName");
static_assert(sizeof(WI_NeighborButton_C_SetCharacterName) == 0x000010, "Wrong size on WI_NeighborButton_C_SetCharacterName");
static_assert(offsetof(WI_NeighborButton_C_SetCharacterName, CharacterName) == 0x000000, "Member 'WI_NeighborButton_C_SetCharacterName::CharacterName' has a wrong offset!");

// Function WI_NeighborButton.WI_NeighborButton_C.SetIconMode
// 0x0005 (0x0005 - 0x0000)
struct WI_NeighborButton_C_SetIconMode final
{
public:
	bool                                          IconMode_0;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WI_NeighborButton_C_SetIconMode) == 0x000001, "Wrong alignment on WI_NeighborButton_C_SetIconMode");
static_assert(sizeof(WI_NeighborButton_C_SetIconMode) == 0x000005, "Wrong size on WI_NeighborButton_C_SetIconMode");
static_assert(offsetof(WI_NeighborButton_C_SetIconMode, IconMode_0) == 0x000000, "Member 'WI_NeighborButton_C_SetIconMode::IconMode_0' has a wrong offset!");
static_assert(offsetof(WI_NeighborButton_C_SetIconMode, Temp_bool_Variable) == 0x000001, "Member 'WI_NeighborButton_C_SetIconMode::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WI_NeighborButton_C_SetIconMode, Temp_byte_Variable) == 0x000002, "Member 'WI_NeighborButton_C_SetIconMode::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WI_NeighborButton_C_SetIconMode, Temp_byte_Variable_1) == 0x000003, "Member 'WI_NeighborButton_C_SetIconMode::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WI_NeighborButton_C_SetIconMode, K2Node_Select_Default) == 0x000004, "Member 'WI_NeighborButton_C_SetIconMode::K2Node_Select_Default' has a wrong offset!");

// Function WI_NeighborButton.WI_NeighborButton_C.SetIndex
// 0x0004 (0x0004 - 0x0000)
struct WI_NeighborButton_C_SetIndex final
{
public:
	int32                                         Index_0;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WI_NeighborButton_C_SetIndex) == 0x000004, "Wrong alignment on WI_NeighborButton_C_SetIndex");
static_assert(sizeof(WI_NeighborButton_C_SetIndex) == 0x000004, "Wrong size on WI_NeighborButton_C_SetIndex");
static_assert(offsetof(WI_NeighborButton_C_SetIndex, Index_0) == 0x000000, "Member 'WI_NeighborButton_C_SetIndex::Index_0' has a wrong offset!");

// Function WI_NeighborButton.WI_NeighborButton_C.SetIsOwned
// 0x0044 (0x0044 - 0x0000)
struct WI_NeighborButton_C_SetIsOwned final
{
public:
	bool                                          IsOwned;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_2;                              // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_3;                              // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_3;                              // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_4;                              // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_4;                              // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_5;                              // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_5;                              // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_6;                              // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_7;                              // 0x000E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanNOR_ReturnValue;                   // 0x000F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanNOR_ReturnValue_1;                 // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_1;                           // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0013(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_2;                           // 0x0016(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_3;                           // 0x0017(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateColor                            K2Node_Select_Default_4;                           // 0x001C(0x0014)()
	struct FSlateColor                            K2Node_Select_Default_5;                           // 0x0030(0x0014)()
};
static_assert(alignof(WI_NeighborButton_C_SetIsOwned) == 0x000004, "Wrong alignment on WI_NeighborButton_C_SetIsOwned");
static_assert(sizeof(WI_NeighborButton_C_SetIsOwned) == 0x000044, "Wrong size on WI_NeighborButton_C_SetIsOwned");
static_assert(offsetof(WI_NeighborButton_C_SetIsOwned, IsOwned) == 0x000000, "Member 'WI_NeighborButton_C_SetIsOwned::IsOwned' has a wrong offset!");
static_assert(offsetof(WI_NeighborButton_C_SetIsOwned, Temp_bool_Variable) == 0x000001, "Member 'WI_NeighborButton_C_SetIsOwned::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WI_NeighborButton_C_SetIsOwned, Temp_byte_Variable) == 0x000002, "Member 'WI_NeighborButton_C_SetIsOwned::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WI_NeighborButton_C_SetIsOwned, Temp_byte_Variable_1) == 0x000003, "Member 'WI_NeighborButton_C_SetIsOwned::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WI_NeighborButton_C_SetIsOwned, Temp_bool_Variable_1) == 0x000004, "Member 'WI_NeighborButton_C_SetIsOwned::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(WI_NeighborButton_C_SetIsOwned, Temp_byte_Variable_2) == 0x000005, "Member 'WI_NeighborButton_C_SetIsOwned::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(WI_NeighborButton_C_SetIsOwned, Temp_byte_Variable_3) == 0x000006, "Member 'WI_NeighborButton_C_SetIsOwned::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(WI_NeighborButton_C_SetIsOwned, Temp_bool_Variable_2) == 0x000007, "Member 'WI_NeighborButton_C_SetIsOwned::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(WI_NeighborButton_C_SetIsOwned, Temp_bool_Variable_3) == 0x000008, "Member 'WI_NeighborButton_C_SetIsOwned::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(WI_NeighborButton_C_SetIsOwned, Temp_bool_Variable_4) == 0x000009, "Member 'WI_NeighborButton_C_SetIsOwned::Temp_bool_Variable_4' has a wrong offset!");
static_assert(offsetof(WI_NeighborButton_C_SetIsOwned, Temp_byte_Variable_4) == 0x00000A, "Member 'WI_NeighborButton_C_SetIsOwned::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(WI_NeighborButton_C_SetIsOwned, Temp_byte_Variable_5) == 0x00000B, "Member 'WI_NeighborButton_C_SetIsOwned::Temp_byte_Variable_5' has a wrong offset!");
static_assert(offsetof(WI_NeighborButton_C_SetIsOwned, Temp_bool_Variable_5) == 0x00000C, "Member 'WI_NeighborButton_C_SetIsOwned::Temp_bool_Variable_5' has a wrong offset!");
static_assert(offsetof(WI_NeighborButton_C_SetIsOwned, Temp_byte_Variable_6) == 0x00000D, "Member 'WI_NeighborButton_C_SetIsOwned::Temp_byte_Variable_6' has a wrong offset!");
static_assert(offsetof(WI_NeighborButton_C_SetIsOwned, Temp_byte_Variable_7) == 0x00000E, "Member 'WI_NeighborButton_C_SetIsOwned::Temp_byte_Variable_7' has a wrong offset!");
static_assert(offsetof(WI_NeighborButton_C_SetIsOwned, CallFunc_BooleanNOR_ReturnValue) == 0x00000F, "Member 'WI_NeighborButton_C_SetIsOwned::CallFunc_BooleanNOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(WI_NeighborButton_C_SetIsOwned, CallFunc_BooleanNOR_ReturnValue_1) == 0x000010, "Member 'WI_NeighborButton_C_SetIsOwned::CallFunc_BooleanNOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WI_NeighborButton_C_SetIsOwned, K2Node_Select_Default) == 0x000011, "Member 'WI_NeighborButton_C_SetIsOwned::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WI_NeighborButton_C_SetIsOwned, K2Node_Select_Default_1) == 0x000012, "Member 'WI_NeighborButton_C_SetIsOwned::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(WI_NeighborButton_C_SetIsOwned, CallFunc_Not_PreBool_ReturnValue) == 0x000013, "Member 'WI_NeighborButton_C_SetIsOwned::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WI_NeighborButton_C_SetIsOwned, CallFunc_BooleanAND_ReturnValue) == 0x000014, "Member 'WI_NeighborButton_C_SetIsOwned::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(WI_NeighborButton_C_SetIsOwned, CallFunc_BooleanOR_ReturnValue) == 0x000015, "Member 'WI_NeighborButton_C_SetIsOwned::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(WI_NeighborButton_C_SetIsOwned, K2Node_Select_Default_2) == 0x000016, "Member 'WI_NeighborButton_C_SetIsOwned::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(WI_NeighborButton_C_SetIsOwned, K2Node_Select_Default_3) == 0x000017, "Member 'WI_NeighborButton_C_SetIsOwned::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(WI_NeighborButton_C_SetIsOwned, CallFunc_BooleanOR_ReturnValue_1) == 0x000018, "Member 'WI_NeighborButton_C_SetIsOwned::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WI_NeighborButton_C_SetIsOwned, K2Node_Select_Default_4) == 0x00001C, "Member 'WI_NeighborButton_C_SetIsOwned::K2Node_Select_Default_4' has a wrong offset!");
static_assert(offsetof(WI_NeighborButton_C_SetIsOwned, K2Node_Select_Default_5) == 0x000030, "Member 'WI_NeighborButton_C_SetIsOwned::K2Node_Select_Default_5' has a wrong offset!");

// Function WI_NeighborButton.WI_NeighborButton_C.SetLevel
// 0x0018 (0x0018 - 0x0000)
struct WI_NeighborButton_C_SetLevel final
{
public:
	int32                                         Level_0;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0008(0x0010)()
};
static_assert(alignof(WI_NeighborButton_C_SetLevel) == 0x000008, "Wrong alignment on WI_NeighborButton_C_SetLevel");
static_assert(sizeof(WI_NeighborButton_C_SetLevel) == 0x000018, "Wrong size on WI_NeighborButton_C_SetLevel");
static_assert(offsetof(WI_NeighborButton_C_SetLevel, Level_0) == 0x000000, "Member 'WI_NeighborButton_C_SetLevel::Level_0' has a wrong offset!");
static_assert(offsetof(WI_NeighborButton_C_SetLevel, CallFunc_Conv_IntToText_ReturnValue) == 0x000008, "Member 'WI_NeighborButton_C_SetLevel::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");

// Function WI_NeighborButton.WI_NeighborButton_C.SetLockedPortraitSoftTexture
// 0x0030 (0x0030 - 0x0000)
struct WI_NeighborButton_C_SetLockedPortraitSoftTexture final
{
public:
	TSoftObjectPtr<class UTexture2D>              NewParam;                                          // 0x0000(0x0028)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x002B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WI_NeighborButton_C_SetLockedPortraitSoftTexture) == 0x000008, "Wrong alignment on WI_NeighborButton_C_SetLockedPortraitSoftTexture");
static_assert(sizeof(WI_NeighborButton_C_SetLockedPortraitSoftTexture) == 0x000030, "Wrong size on WI_NeighborButton_C_SetLockedPortraitSoftTexture");
static_assert(offsetof(WI_NeighborButton_C_SetLockedPortraitSoftTexture, NewParam) == 0x000000, "Member 'WI_NeighborButton_C_SetLockedPortraitSoftTexture::NewParam' has a wrong offset!");
static_assert(offsetof(WI_NeighborButton_C_SetLockedPortraitSoftTexture, Temp_bool_Variable) == 0x000028, "Member 'WI_NeighborButton_C_SetLockedPortraitSoftTexture::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WI_NeighborButton_C_SetLockedPortraitSoftTexture, Temp_byte_Variable) == 0x000029, "Member 'WI_NeighborButton_C_SetLockedPortraitSoftTexture::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WI_NeighborButton_C_SetLockedPortraitSoftTexture, Temp_byte_Variable_1) == 0x00002A, "Member 'WI_NeighborButton_C_SetLockedPortraitSoftTexture::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WI_NeighborButton_C_SetLockedPortraitSoftTexture, K2Node_Select_Default) == 0x00002B, "Member 'WI_NeighborButton_C_SetLockedPortraitSoftTexture::K2Node_Select_Default' has a wrong offset!");

// Function WI_NeighborButton.WI_NeighborButton_C.SetNeighborID
// 0x0008 (0x0008 - 0x0000)
struct WI_NeighborButton_C_SetNeighborID final
{
public:
	struct FGameplayTag                           NeighborID_0;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WI_NeighborButton_C_SetNeighborID) == 0x000004, "Wrong alignment on WI_NeighborButton_C_SetNeighborID");
static_assert(sizeof(WI_NeighborButton_C_SetNeighborID) == 0x000008, "Wrong size on WI_NeighborButton_C_SetNeighborID");
static_assert(offsetof(WI_NeighborButton_C_SetNeighborID, NeighborID_0) == 0x000000, "Member 'WI_NeighborButton_C_SetNeighborID::NeighborID_0' has a wrong offset!");

// Function WI_NeighborButton.WI_NeighborButton_C.SetNeighborXP
// 0x0018 (0x0018 - 0x0000)
struct WI_NeighborButton_C_SetNeighborXP final
{
public:
	class USeasonPassGameInstanceSubsystem*       CallFunc_GetGameInstanceSubsystem_ReturnValue;     // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetNeighborLevel_ReturnValue;             // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetProgressTowardNextNeighborLevel_ReturnValue; // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SetNextLevelProgress_NextLevelProgress_ImplicitCast; // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WI_NeighborButton_C_SetNeighborXP) == 0x000008, "Wrong alignment on WI_NeighborButton_C_SetNeighborXP");
static_assert(sizeof(WI_NeighborButton_C_SetNeighborXP) == 0x000018, "Wrong size on WI_NeighborButton_C_SetNeighborXP");
static_assert(offsetof(WI_NeighborButton_C_SetNeighborXP, CallFunc_GetGameInstanceSubsystem_ReturnValue) == 0x000000, "Member 'WI_NeighborButton_C_SetNeighborXP::CallFunc_GetGameInstanceSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(WI_NeighborButton_C_SetNeighborXP, CallFunc_GetNeighborLevel_ReturnValue) == 0x000008, "Member 'WI_NeighborButton_C_SetNeighborXP::CallFunc_GetNeighborLevel_ReturnValue' has a wrong offset!");
static_assert(offsetof(WI_NeighborButton_C_SetNeighborXP, CallFunc_GetProgressTowardNextNeighborLevel_ReturnValue) == 0x00000C, "Member 'WI_NeighborButton_C_SetNeighborXP::CallFunc_GetProgressTowardNextNeighborLevel_ReturnValue' has a wrong offset!");
static_assert(offsetof(WI_NeighborButton_C_SetNeighborXP, CallFunc_SetNextLevelProgress_NextLevelProgress_ImplicitCast) == 0x000010, "Member 'WI_NeighborButton_C_SetNeighborXP::CallFunc_SetNextLevelProgress_NextLevelProgress_ImplicitCast' has a wrong offset!");

// Function WI_NeighborButton.WI_NeighborButton_C.SetNextLevelProgress
// 0x0008 (0x0008 - 0x0000)
struct WI_NeighborButton_C_SetNextLevelProgress final
{
public:
	double                                        NextLevelProgress;                                 // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WI_NeighborButton_C_SetNextLevelProgress) == 0x000008, "Wrong alignment on WI_NeighborButton_C_SetNextLevelProgress");
static_assert(sizeof(WI_NeighborButton_C_SetNextLevelProgress) == 0x000008, "Wrong size on WI_NeighborButton_C_SetNextLevelProgress");
static_assert(offsetof(WI_NeighborButton_C_SetNextLevelProgress, NextLevelProgress) == 0x000000, "Member 'WI_NeighborButton_C_SetNextLevelProgress::NextLevelProgress' has a wrong offset!");

// Function WI_NeighborButton.WI_NeighborButton_C.SetPortraitSoftTexture
// 0x0030 (0x0030 - 0x0000)
struct WI_NeighborButton_C_SetPortraitSoftTexture final
{
public:
	TSoftObjectPtr<class UTexture2D>              NewParam;                                          // 0x0000(0x0028)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x002B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WI_NeighborButton_C_SetPortraitSoftTexture) == 0x000008, "Wrong alignment on WI_NeighborButton_C_SetPortraitSoftTexture");
static_assert(sizeof(WI_NeighborButton_C_SetPortraitSoftTexture) == 0x000030, "Wrong size on WI_NeighborButton_C_SetPortraitSoftTexture");
static_assert(offsetof(WI_NeighborButton_C_SetPortraitSoftTexture, NewParam) == 0x000000, "Member 'WI_NeighborButton_C_SetPortraitSoftTexture::NewParam' has a wrong offset!");
static_assert(offsetof(WI_NeighborButton_C_SetPortraitSoftTexture, Temp_bool_Variable) == 0x000028, "Member 'WI_NeighborButton_C_SetPortraitSoftTexture::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WI_NeighborButton_C_SetPortraitSoftTexture, Temp_byte_Variable) == 0x000029, "Member 'WI_NeighborButton_C_SetPortraitSoftTexture::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WI_NeighborButton_C_SetPortraitSoftTexture, Temp_byte_Variable_1) == 0x00002A, "Member 'WI_NeighborButton_C_SetPortraitSoftTexture::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WI_NeighborButton_C_SetPortraitSoftTexture, K2Node_Select_Default) == 0x00002B, "Member 'WI_NeighborButton_C_SetPortraitSoftTexture::K2Node_Select_Default' has a wrong offset!");

// Function WI_NeighborButton.WI_NeighborButton_C.SetUnlockRequirement
// 0x0030 (0x0030 - 0x0000)
struct WI_NeighborButton_C_SetUnlockRequirement final
{
public:
	EOnlineItemUnlockRequirement                  UnlockRequirement;                                 // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FOnlineStoreItemCost                   VirtualCurrencyCost;                               // 0x0004(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	struct FOnlineStoreItemBattlePassRequirement  BattlePassRequirement;                             // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_2;        // 0x0023(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0025(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0026(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0027(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_2;                              // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_3;                              // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_1;                           // 0x002B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_4;                              // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_5;                              // 0x002D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x002E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_2;                           // 0x002F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WI_NeighborButton_C_SetUnlockRequirement) == 0x000004, "Wrong alignment on WI_NeighborButton_C_SetUnlockRequirement");
static_assert(sizeof(WI_NeighborButton_C_SetUnlockRequirement) == 0x000030, "Wrong size on WI_NeighborButton_C_SetUnlockRequirement");
static_assert(offsetof(WI_NeighborButton_C_SetUnlockRequirement, UnlockRequirement) == 0x000000, "Member 'WI_NeighborButton_C_SetUnlockRequirement::UnlockRequirement' has a wrong offset!");
static_assert(offsetof(WI_NeighborButton_C_SetUnlockRequirement, VirtualCurrencyCost) == 0x000004, "Member 'WI_NeighborButton_C_SetUnlockRequirement::VirtualCurrencyCost' has a wrong offset!");
static_assert(offsetof(WI_NeighborButton_C_SetUnlockRequirement, BattlePassRequirement) == 0x000010, "Member 'WI_NeighborButton_C_SetUnlockRequirement::BattlePassRequirement' has a wrong offset!");
static_assert(offsetof(WI_NeighborButton_C_SetUnlockRequirement, Temp_bool_Variable) == 0x000020, "Member 'WI_NeighborButton_C_SetUnlockRequirement::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WI_NeighborButton_C_SetUnlockRequirement, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000021, "Member 'WI_NeighborButton_C_SetUnlockRequirement::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(WI_NeighborButton_C_SetUnlockRequirement, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000022, "Member 'WI_NeighborButton_C_SetUnlockRequirement::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WI_NeighborButton_C_SetUnlockRequirement, CallFunc_EqualEqual_ByteByte_ReturnValue_2) == 0x000023, "Member 'WI_NeighborButton_C_SetUnlockRequirement::CallFunc_EqualEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WI_NeighborButton_C_SetUnlockRequirement, K2Node_SwitchEnum_CmpSuccess) == 0x000024, "Member 'WI_NeighborButton_C_SetUnlockRequirement::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(WI_NeighborButton_C_SetUnlockRequirement, Temp_byte_Variable) == 0x000025, "Member 'WI_NeighborButton_C_SetUnlockRequirement::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WI_NeighborButton_C_SetUnlockRequirement, Temp_byte_Variable_1) == 0x000026, "Member 'WI_NeighborButton_C_SetUnlockRequirement::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WI_NeighborButton_C_SetUnlockRequirement, Temp_bool_Variable_1) == 0x000027, "Member 'WI_NeighborButton_C_SetUnlockRequirement::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(WI_NeighborButton_C_SetUnlockRequirement, K2Node_Select_Default) == 0x000028, "Member 'WI_NeighborButton_C_SetUnlockRequirement::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WI_NeighborButton_C_SetUnlockRequirement, Temp_byte_Variable_2) == 0x000029, "Member 'WI_NeighborButton_C_SetUnlockRequirement::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(WI_NeighborButton_C_SetUnlockRequirement, Temp_byte_Variable_3) == 0x00002A, "Member 'WI_NeighborButton_C_SetUnlockRequirement::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(WI_NeighborButton_C_SetUnlockRequirement, K2Node_Select_Default_1) == 0x00002B, "Member 'WI_NeighborButton_C_SetUnlockRequirement::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(WI_NeighborButton_C_SetUnlockRequirement, Temp_byte_Variable_4) == 0x00002C, "Member 'WI_NeighborButton_C_SetUnlockRequirement::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(WI_NeighborButton_C_SetUnlockRequirement, Temp_byte_Variable_5) == 0x00002D, "Member 'WI_NeighborButton_C_SetUnlockRequirement::Temp_byte_Variable_5' has a wrong offset!");
static_assert(offsetof(WI_NeighborButton_C_SetUnlockRequirement, Temp_bool_Variable_2) == 0x00002E, "Member 'WI_NeighborButton_C_SetUnlockRequirement::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(WI_NeighborButton_C_SetUnlockRequirement, K2Node_Select_Default_2) == 0x00002F, "Member 'WI_NeighborButton_C_SetUnlockRequirement::K2Node_Select_Default_2' has a wrong offset!");

// Function WI_NeighborButton.WI_NeighborButton_C.SetWithOnlineStoreItem
// 0x0050 (0x0050 - 0x0000)
struct WI_NeighborButton_C_SetWithOnlineStoreItem final
{
public:
	struct FOnlineStoreItemData                   OnlineStoreItem;                                   // 0x0000(0x0048)(BlueprintVisible, BlueprintReadOnly, Parm)
	bool                                          CallFunc_MatchesTag_ReturnValue;                   // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_MatchesTag_ReturnValue_1;                 // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WI_NeighborButton_C_SetWithOnlineStoreItem) == 0x000008, "Wrong alignment on WI_NeighborButton_C_SetWithOnlineStoreItem");
static_assert(sizeof(WI_NeighborButton_C_SetWithOnlineStoreItem) == 0x000050, "Wrong size on WI_NeighborButton_C_SetWithOnlineStoreItem");
static_assert(offsetof(WI_NeighborButton_C_SetWithOnlineStoreItem, OnlineStoreItem) == 0x000000, "Member 'WI_NeighborButton_C_SetWithOnlineStoreItem::OnlineStoreItem' has a wrong offset!");
static_assert(offsetof(WI_NeighborButton_C_SetWithOnlineStoreItem, CallFunc_MatchesTag_ReturnValue) == 0x000048, "Member 'WI_NeighborButton_C_SetWithOnlineStoreItem::CallFunc_MatchesTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(WI_NeighborButton_C_SetWithOnlineStoreItem, CallFunc_MatchesTag_ReturnValue_1) == 0x000049, "Member 'WI_NeighborButton_C_SetWithOnlineStoreItem::CallFunc_MatchesTag_ReturnValue_1' has a wrong offset!");

}

