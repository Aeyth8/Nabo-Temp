#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WI_ExperiencePanel

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "SlateCore_structs.hpp"
#include "CommonUI_classes.hpp"
#include "JP_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WI_ExperiencePanel.WI_ExperiencePanel_C
// 0x0098 (0x04C8 - 0x0430)
class UWI_ExperiencePanel_C final : public UCommonActivatableWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0430(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       DecrementXPAnim;                                   // 0x0438(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UHorizontalBox*                         RewardEntriesHorizontalBox;                        // 0x0440(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	double                                        TempExp;                                           // 0x0448(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           ReduceTimer;                                       // 0x0450(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	TArray<class UWI_ExperiencePanel_RewardEntry_C*> RewardEntryInstances;                              // 0x0458(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	struct FMargin                                RewardEntryPadding;                                // 0x0468(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IsNeighborXP;                                      // 0x0478(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          DesignerPreviewGainedXP;                           // 0x0479(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          DesignerPreviewGainedCardboards;                   // 0x047A(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          DesignerPreviewGainedFixits;                       // 0x047B(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_47C[0x4];                                      // 0x047C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   MatchWonText;                                      // 0x0480(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	class FText                                   MatchLostText;                                     // 0x0490(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	bool                                          IsOnWinningTeam;                                   // 0x04A0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A1[0x7];                                      // 0x04A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMatchRewards                          MatchRewards;                                      // 0x04A8(0x0020)(Edit, BlueprintVisible, DisableEditOnInstance)

public:
	void AddRewardEntry(class UWI_ExperiencePanel_RewardEntry_C* RewardEntryWidget, class UWI_ExperiencePanel_RewardEntry_C** OutRewardEntryWidget, class UHorizontalBoxSlot** OutPanelSlot);
	void Create_Profile_XPEntry();
	void CreateCurrencyRewardWidget(const struct FGameplayTag& CurrencyTag, int32 CurrencyAmount, class UWI_ExperiencePanel_RewardEntry_C** CurrencyRewardWidget);
	void CreateXPRewardWidget(bool IsOnWinningTeam_0, bool IsNeighborXP_0, const class FText& NeighborName, int32 XP_Value, class UWI_ExperiencePanel_RewardEntry_C** XPRewardWidget);
	void EditorOnlyCreateRewardWidgets();
	void ExecuteUbergraph_WI_ExperiencePanel(int32 EntryPoint);
	void GetNeighborNameFromPlayerState(class APlayerStateJP* PlayerStateJP, class FText* Name_0);
	class FText GetReasonText();
	void GetUserFacingReason(bool IsOnWinningTeam_0, uint8* UserFacingReason);
	void PreConstruct(bool IsDesignTime);
	void ReduceXP();
	void RemoveAllRewardEntries();
	void SetIsOnWinningTeam(bool IsOnWinningTeam_0);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WI_ExperiencePanel_C">();
	}
	static class UWI_ExperiencePanel_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWI_ExperiencePanel_C>();
	}
};
static_assert(alignof(UWI_ExperiencePanel_C) == 0x000008, "Wrong alignment on UWI_ExperiencePanel_C");
static_assert(sizeof(UWI_ExperiencePanel_C) == 0x0004C8, "Wrong size on UWI_ExperiencePanel_C");
static_assert(offsetof(UWI_ExperiencePanel_C, UberGraphFrame) == 0x000430, "Member 'UWI_ExperiencePanel_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWI_ExperiencePanel_C, DecrementXPAnim) == 0x000438, "Member 'UWI_ExperiencePanel_C::DecrementXPAnim' has a wrong offset!");
static_assert(offsetof(UWI_ExperiencePanel_C, RewardEntriesHorizontalBox) == 0x000440, "Member 'UWI_ExperiencePanel_C::RewardEntriesHorizontalBox' has a wrong offset!");
static_assert(offsetof(UWI_ExperiencePanel_C, TempExp) == 0x000448, "Member 'UWI_ExperiencePanel_C::TempExp' has a wrong offset!");
static_assert(offsetof(UWI_ExperiencePanel_C, ReduceTimer) == 0x000450, "Member 'UWI_ExperiencePanel_C::ReduceTimer' has a wrong offset!");
static_assert(offsetof(UWI_ExperiencePanel_C, RewardEntryInstances) == 0x000458, "Member 'UWI_ExperiencePanel_C::RewardEntryInstances' has a wrong offset!");
static_assert(offsetof(UWI_ExperiencePanel_C, RewardEntryPadding) == 0x000468, "Member 'UWI_ExperiencePanel_C::RewardEntryPadding' has a wrong offset!");
static_assert(offsetof(UWI_ExperiencePanel_C, IsNeighborXP) == 0x000478, "Member 'UWI_ExperiencePanel_C::IsNeighborXP' has a wrong offset!");
static_assert(offsetof(UWI_ExperiencePanel_C, DesignerPreviewGainedXP) == 0x000479, "Member 'UWI_ExperiencePanel_C::DesignerPreviewGainedXP' has a wrong offset!");
static_assert(offsetof(UWI_ExperiencePanel_C, DesignerPreviewGainedCardboards) == 0x00047A, "Member 'UWI_ExperiencePanel_C::DesignerPreviewGainedCardboards' has a wrong offset!");
static_assert(offsetof(UWI_ExperiencePanel_C, DesignerPreviewGainedFixits) == 0x00047B, "Member 'UWI_ExperiencePanel_C::DesignerPreviewGainedFixits' has a wrong offset!");
static_assert(offsetof(UWI_ExperiencePanel_C, MatchWonText) == 0x000480, "Member 'UWI_ExperiencePanel_C::MatchWonText' has a wrong offset!");
static_assert(offsetof(UWI_ExperiencePanel_C, MatchLostText) == 0x000490, "Member 'UWI_ExperiencePanel_C::MatchLostText' has a wrong offset!");
static_assert(offsetof(UWI_ExperiencePanel_C, IsOnWinningTeam) == 0x0004A0, "Member 'UWI_ExperiencePanel_C::IsOnWinningTeam' has a wrong offset!");
static_assert(offsetof(UWI_ExperiencePanel_C, MatchRewards) == 0x0004A8, "Member 'UWI_ExperiencePanel_C::MatchRewards' has a wrong offset!");

}

