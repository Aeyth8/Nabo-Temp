#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WI_WarmupCountdown

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "UMG_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WI_WarmupCountdown.WI_WarmupCountdown_C
// 0x0028 (0x0308 - 0x02E0)
class UWI_WarmupCountdown_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02E0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UBorder*                                Border_0;                                          // 0x02E8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             TextBlock_53;                                      // 0x02F0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	double                                        UpdateOnRemainder;                                 // 0x02F8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWarmupComponent*                       WarmupComponent;                                   // 0x0300(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)

public:
	void Check_Time_Remaining();
	void Construct();
	void Destruct();
	void ExecuteUbergraph_WI_WarmupCountdown(int32 EntryPoint);
	void OnEnded_6E22F62E473E5174C4C0D4BC63A858FB();
	bool ShouldUpdate();
	void Tick(const struct FGeometry& MyGeometry, float InDeltaTime);
	void UpdateUI();

	void GetTimeLeft(double* TimeLeft) const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WI_WarmupCountdown_C">();
	}
	static class UWI_WarmupCountdown_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWI_WarmupCountdown_C>();
	}
};
static_assert(alignof(UWI_WarmupCountdown_C) == 0x000008, "Wrong alignment on UWI_WarmupCountdown_C");
static_assert(sizeof(UWI_WarmupCountdown_C) == 0x000308, "Wrong size on UWI_WarmupCountdown_C");
static_assert(offsetof(UWI_WarmupCountdown_C, UberGraphFrame) == 0x0002E0, "Member 'UWI_WarmupCountdown_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWI_WarmupCountdown_C, Border_0) == 0x0002E8, "Member 'UWI_WarmupCountdown_C::Border_0' has a wrong offset!");
static_assert(offsetof(UWI_WarmupCountdown_C, TextBlock_53) == 0x0002F0, "Member 'UWI_WarmupCountdown_C::TextBlock_53' has a wrong offset!");
static_assert(offsetof(UWI_WarmupCountdown_C, UpdateOnRemainder) == 0x0002F8, "Member 'UWI_WarmupCountdown_C::UpdateOnRemainder' has a wrong offset!");
static_assert(offsetof(UWI_WarmupCountdown_C, WarmupComponent) == 0x000300, "Member 'UWI_WarmupCountdown_C::WarmupComponent' has a wrong offset!");

}

