#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_WinScreenStage

#include "Basic.hpp"

#include "GameplayTags_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "E_WinscreenState_structs.hpp"
#include "JP_structs.hpp"


namespace SDK::Params
{

// Function BP_WinScreenStage.BP_WinScreenStage_C.Activate New State
// 0x0018 (0x0018 - 0x0000)
struct BP_WinScreenStage_C_Activate_New_State final
{
public:
	E_WinscreenState                              NewState;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class USceneComponent*                        CallFunc_K2_GetRootComponent_ReturnValue;          // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_WinScreenStage_C_Activate_New_State) == 0x000008, "Wrong alignment on BP_WinScreenStage_C_Activate_New_State");
static_assert(sizeof(BP_WinScreenStage_C_Activate_New_State) == 0x000018, "Wrong size on BP_WinScreenStage_C_Activate_New_State");
static_assert(offsetof(BP_WinScreenStage_C_Activate_New_State, NewState) == 0x000000, "Member 'BP_WinScreenStage_C_Activate_New_State::NewState' has a wrong offset!");
static_assert(offsetof(BP_WinScreenStage_C_Activate_New_State, K2Node_SwitchEnum_CmpSuccess) == 0x000001, "Member 'BP_WinScreenStage_C_Activate_New_State::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_WinScreenStage_C_Activate_New_State, CallFunc_K2_GetRootComponent_ReturnValue) == 0x000008, "Member 'BP_WinScreenStage_C_Activate_New_State::CallFunc_K2_GetRootComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WinScreenStage_C_Activate_New_State, CallFunc_GetPlayerController_ReturnValue) == 0x000010, "Member 'BP_WinScreenStage_C_Activate_New_State::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");

// Function BP_WinScreenStage.BP_WinScreenStage_C.AttachListenerToCameraRig
// 0x0020 (0x0020 - 0x0000)
struct BP_WinScreenStage_C_AttachListenerToCameraRig final
{
public:
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<class UCineCameraComponent*>           CallFunc_K2_GetComponentsByClass_ReturnValue;      // 0x0008(0x0010)(ReferenceParm, ContainsInstancedReference)
	class UCineCameraComponent*                   CallFunc_Array_Get_Item;                           // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_WinScreenStage_C_AttachListenerToCameraRig) == 0x000008, "Wrong alignment on BP_WinScreenStage_C_AttachListenerToCameraRig");
static_assert(sizeof(BP_WinScreenStage_C_AttachListenerToCameraRig) == 0x000020, "Wrong size on BP_WinScreenStage_C_AttachListenerToCameraRig");
static_assert(offsetof(BP_WinScreenStage_C_AttachListenerToCameraRig, CallFunc_GetPlayerController_ReturnValue) == 0x000000, "Member 'BP_WinScreenStage_C_AttachListenerToCameraRig::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WinScreenStage_C_AttachListenerToCameraRig, CallFunc_K2_GetComponentsByClass_ReturnValue) == 0x000008, "Member 'BP_WinScreenStage_C_AttachListenerToCameraRig::CallFunc_K2_GetComponentsByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WinScreenStage_C_AttachListenerToCameraRig, CallFunc_Array_Get_Item) == 0x000018, "Member 'BP_WinScreenStage_C_AttachListenerToCameraRig::CallFunc_Array_Get_Item' has a wrong offset!");

// Function BP_WinScreenStage.BP_WinScreenStage_C.CheckAchievement
// 0x0078 (0x0078 - 0x0000)
struct BP_WinScreenStage_C_CheckAchievement final
{
public:
	bool                                          FriendlyEssentialDestroyed;                        // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerState*                           CallFunc_GetPlayerState_ReturnValue;               // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APlayerState*                           CallFunc_GetPlayerState_ReturnValue_1;             // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAC_AchievementTracker_C*               CallFunc_GetComponentByClass_ReturnValue;          // 0x0020(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class APlayerStateJP*                         K2Node_DynamicCast_AsPlayer_State_JP;              // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetTeamID_ReturnValue;                    // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_32[0x6];                                       // 0x0032(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ABP_HouseEssential_Cube_C*>      CallFunc_GetAllActorsOfClass_OutActors;            // 0x0038(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_HouseEssential_Cube_C*              CallFunc_Array_Get_Item;                           // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class ITeamableInterface>    CallFunc_GetTeamID_self_CastInput;                 // 0x0060(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetTeamID_ReturnValue_1;                  // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_WinScreenStage_C_CheckAchievement) == 0x000008, "Wrong alignment on BP_WinScreenStage_C_CheckAchievement");
static_assert(sizeof(BP_WinScreenStage_C_CheckAchievement) == 0x000078, "Wrong size on BP_WinScreenStage_C_CheckAchievement");
static_assert(offsetof(BP_WinScreenStage_C_CheckAchievement, FriendlyEssentialDestroyed) == 0x000000, "Member 'BP_WinScreenStage_C_CheckAchievement::FriendlyEssentialDestroyed' has a wrong offset!");
static_assert(offsetof(BP_WinScreenStage_C_CheckAchievement, Temp_int_Array_Index_Variable) == 0x000004, "Member 'BP_WinScreenStage_C_CheckAchievement::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_WinScreenStage_C_CheckAchievement, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'BP_WinScreenStage_C_CheckAchievement::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_WinScreenStage_C_CheckAchievement, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'BP_WinScreenStage_C_CheckAchievement::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WinScreenStage_C_CheckAchievement, CallFunc_GetPlayerState_ReturnValue) == 0x000010, "Member 'BP_WinScreenStage_C_CheckAchievement::CallFunc_GetPlayerState_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WinScreenStage_C_CheckAchievement, CallFunc_GetPlayerState_ReturnValue_1) == 0x000018, "Member 'BP_WinScreenStage_C_CheckAchievement::CallFunc_GetPlayerState_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_WinScreenStage_C_CheckAchievement, CallFunc_GetComponentByClass_ReturnValue) == 0x000020, "Member 'BP_WinScreenStage_C_CheckAchievement::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WinScreenStage_C_CheckAchievement, K2Node_DynamicCast_AsPlayer_State_JP) == 0x000028, "Member 'BP_WinScreenStage_C_CheckAchievement::K2Node_DynamicCast_AsPlayer_State_JP' has a wrong offset!");
static_assert(offsetof(BP_WinScreenStage_C_CheckAchievement, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'BP_WinScreenStage_C_CheckAchievement::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_WinScreenStage_C_CheckAchievement, CallFunc_GetTeamID_ReturnValue) == 0x000031, "Member 'BP_WinScreenStage_C_CheckAchievement::CallFunc_GetTeamID_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WinScreenStage_C_CheckAchievement, CallFunc_GetAllActorsOfClass_OutActors) == 0x000038, "Member 'BP_WinScreenStage_C_CheckAchievement::CallFunc_GetAllActorsOfClass_OutActors' has a wrong offset!");
static_assert(offsetof(BP_WinScreenStage_C_CheckAchievement, CallFunc_Array_Length_ReturnValue) == 0x000048, "Member 'BP_WinScreenStage_C_CheckAchievement::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WinScreenStage_C_CheckAchievement, CallFunc_Array_Get_Item) == 0x000050, "Member 'BP_WinScreenStage_C_CheckAchievement::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_WinScreenStage_C_CheckAchievement, CallFunc_Less_IntInt_ReturnValue) == 0x000058, "Member 'BP_WinScreenStage_C_CheckAchievement::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WinScreenStage_C_CheckAchievement, CallFunc_GetTeamID_self_CastInput) == 0x000060, "Member 'BP_WinScreenStage_C_CheckAchievement::CallFunc_GetTeamID_self_CastInput' has a wrong offset!");
static_assert(offsetof(BP_WinScreenStage_C_CheckAchievement, CallFunc_GetTeamID_ReturnValue_1) == 0x000070, "Member 'BP_WinScreenStage_C_CheckAchievement::CallFunc_GetTeamID_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_WinScreenStage_C_CheckAchievement, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000071, "Member 'BP_WinScreenStage_C_CheckAchievement::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function BP_WinScreenStage.BP_WinScreenStage_C.ExecuteUbergraph_BP_WinScreenStage
// 0x03D0 (0x03D0 - 0x0000)
struct BP_WinScreenStage_C_ExecuteUbergraph_BP_WinScreenStage final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable;                 // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable;                       // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7[0x1];                                        // 0x0007(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0008(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0020(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_FindLookAtRotation_ReturnValue;           // 0x0038(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_K2_SetActorRotation_ReturnValue;          // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51[0x3];                                       // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0054(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_64[0x4];                                       // 0x0064(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Get_Focused_Camera_End_Location_ReturnValue; // 0x0068(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue_1;    // 0x0080(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue_2;    // 0x0098(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue_3;    // 0x00B0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_VLerp_ReturnValue;                        // 0x00C8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E1[0x7];                                       // 0x00E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_K2_SetActorLocation_SweepHitResult;       // 0x00E8(0x00F8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_SetActorLocation_ReturnValue;          // 0x01E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue_1;          // 0x01E1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E2[0x6];                                      // 0x01E2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_VLerp_ReturnValue_1;                      // 0x01E8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetActorLocation_SweepHitResult_1;     // 0x0200(0x00F8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_SetActorLocation_ReturnValue_1;        // 0x02F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2F9[0x7];                                      // 0x02F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 K2Node_CustomEvent_House;                          // 0x0300(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_308[0x8];                                      // 0x0308(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             K2Node_CustomEvent_Transform;                      // 0x0310(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x0370(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UCommonActivatableWidget*               CallFunc_PushWidgetToLayerStack_ReturnValue;       // 0x0378(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_FinishSpawningActor_ReturnValue;          // 0x0380(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UWI_WinScreen_C*                        K2Node_DynamicCast_AsWI_Win_Screen;                // 0x0388(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0390(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_391[0x3];                                      // 0x0391(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(E_WinscreenState State)>       K2Node_CreateDelegate_OutputDelegate_1;            // 0x0394(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A4[0x4];                                      // 0x03A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x03A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue_1;        // 0x03B0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_HouseEssential_Cube_C*              CallFunc_FindEssentialToFocus_Essential;           // 0x03B8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x03C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C1[0x7];                                      // 0x03C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Greater_DoubleDouble_A_ImplicitCast;      // 0x03C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_WinScreenStage_C_ExecuteUbergraph_BP_WinScreenStage) == 0x000010, "Wrong alignment on BP_WinScreenStage_C_ExecuteUbergraph_BP_WinScreenStage");
static_assert(sizeof(BP_WinScreenStage_C_ExecuteUbergraph_BP_WinScreenStage) == 0x0003D0, "Wrong size on BP_WinScreenStage_C_ExecuteUbergraph_BP_WinScreenStage");
static_assert(offsetof(BP_WinScreenStage_C_ExecuteUbergraph_BP_WinScreenStage, EntryPoint) == 0x000000, "Member 'BP_WinScreenStage_C_ExecuteUbergraph_BP_WinScreenStage::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_WinScreenStage_C_ExecuteUbergraph_BP_WinScreenStage, Temp_bool_Has_Been_Initd_Variable) == 0x000004, "Member 'BP_WinScreenStage_C_ExecuteUbergraph_BP_WinScreenStage::Temp_bool_Has_Been_Initd_Variable' has a wrong offset!");
static_assert(offsetof(BP_WinScreenStage_C_ExecuteUbergraph_BP_WinScreenStage, CallFunc_IsDedicatedServer_ReturnValue) == 0x000005, "Member 'BP_WinScreenStage_C_ExecuteUbergraph_BP_WinScreenStage::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WinScreenStage_C_ExecuteUbergraph_BP_WinScreenStage, Temp_bool_IsClosed_Variable) == 0x000006, "Member 'BP_WinScreenStage_C_ExecuteUbergraph_BP_WinScreenStage::Temp_bool_IsClosed_Variable' has a wrong offset!");
static_assert(offsetof(BP_WinScreenStage_C_ExecuteUbergraph_BP_WinScreenStage, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000008, "Member 'BP_WinScreenStage_C_ExecuteUbergraph_BP_WinScreenStage::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WinScreenStage_C_ExecuteUbergraph_BP_WinScreenStage, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000020, "Member 'BP_WinScreenStage_C_ExecuteUbergraph_BP_WinScreenStage::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WinScreenStage_C_ExecuteUbergraph_BP_WinScreenStage, CallFunc_FindLookAtRotation_ReturnValue) == 0x000038, "Member 'BP_WinScreenStage_C_ExecuteUbergraph_BP_WinScreenStage::CallFunc_FindLookAtRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WinScreenStage_C_ExecuteUbergraph_BP_WinScreenStage, CallFunc_K2_SetActorRotation_ReturnValue) == 0x000050, "Member 'BP_WinScreenStage_C_ExecuteUbergraph_BP_WinScreenStage::CallFunc_K2_SetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WinScreenStage_C_ExecuteUbergraph_BP_WinScreenStage, K2Node_CreateDelegate_OutputDelegate) == 0x000054, "Member 'BP_WinScreenStage_C_ExecuteUbergraph_BP_WinScreenStage::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_WinScreenStage_C_ExecuteUbergraph_BP_WinScreenStage, CallFunc_Get_Focused_Camera_End_Location_ReturnValue) == 0x000068, "Member 'BP_WinScreenStage_C_ExecuteUbergraph_BP_WinScreenStage::CallFunc_Get_Focused_Camera_End_Location_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WinScreenStage_C_ExecuteUbergraph_BP_WinScreenStage, CallFunc_K2_GetComponentLocation_ReturnValue_1) == 0x000080, "Member 'BP_WinScreenStage_C_ExecuteUbergraph_BP_WinScreenStage::CallFunc_K2_GetComponentLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_WinScreenStage_C_ExecuteUbergraph_BP_WinScreenStage, CallFunc_K2_GetComponentLocation_ReturnValue_2) == 0x000098, "Member 'BP_WinScreenStage_C_ExecuteUbergraph_BP_WinScreenStage::CallFunc_K2_GetComponentLocation_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_WinScreenStage_C_ExecuteUbergraph_BP_WinScreenStage, CallFunc_K2_GetComponentLocation_ReturnValue_3) == 0x0000B0, "Member 'BP_WinScreenStage_C_ExecuteUbergraph_BP_WinScreenStage::CallFunc_K2_GetComponentLocation_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_WinScreenStage_C_ExecuteUbergraph_BP_WinScreenStage, CallFunc_VLerp_ReturnValue) == 0x0000C8, "Member 'BP_WinScreenStage_C_ExecuteUbergraph_BP_WinScreenStage::CallFunc_VLerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WinScreenStage_C_ExecuteUbergraph_BP_WinScreenStage, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x0000E0, "Member 'BP_WinScreenStage_C_ExecuteUbergraph_BP_WinScreenStage::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WinScreenStage_C_ExecuteUbergraph_BP_WinScreenStage, CallFunc_K2_SetActorLocation_SweepHitResult) == 0x0000E8, "Member 'BP_WinScreenStage_C_ExecuteUbergraph_BP_WinScreenStage::CallFunc_K2_SetActorLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_WinScreenStage_C_ExecuteUbergraph_BP_WinScreenStage, CallFunc_K2_SetActorLocation_ReturnValue) == 0x0001E0, "Member 'BP_WinScreenStage_C_ExecuteUbergraph_BP_WinScreenStage::CallFunc_K2_SetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WinScreenStage_C_ExecuteUbergraph_BP_WinScreenStage, CallFunc_IsDedicatedServer_ReturnValue_1) == 0x0001E1, "Member 'BP_WinScreenStage_C_ExecuteUbergraph_BP_WinScreenStage::CallFunc_IsDedicatedServer_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_WinScreenStage_C_ExecuteUbergraph_BP_WinScreenStage, CallFunc_VLerp_ReturnValue_1) == 0x0001E8, "Member 'BP_WinScreenStage_C_ExecuteUbergraph_BP_WinScreenStage::CallFunc_VLerp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_WinScreenStage_C_ExecuteUbergraph_BP_WinScreenStage, CallFunc_K2_SetActorLocation_SweepHitResult_1) == 0x000200, "Member 'BP_WinScreenStage_C_ExecuteUbergraph_BP_WinScreenStage::CallFunc_K2_SetActorLocation_SweepHitResult_1' has a wrong offset!");
static_assert(offsetof(BP_WinScreenStage_C_ExecuteUbergraph_BP_WinScreenStage, CallFunc_K2_SetActorLocation_ReturnValue_1) == 0x0002F8, "Member 'BP_WinScreenStage_C_ExecuteUbergraph_BP_WinScreenStage::CallFunc_K2_SetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_WinScreenStage_C_ExecuteUbergraph_BP_WinScreenStage, K2Node_CustomEvent_House) == 0x000300, "Member 'BP_WinScreenStage_C_ExecuteUbergraph_BP_WinScreenStage::K2Node_CustomEvent_House' has a wrong offset!");
static_assert(offsetof(BP_WinScreenStage_C_ExecuteUbergraph_BP_WinScreenStage, K2Node_CustomEvent_Transform) == 0x000310, "Member 'BP_WinScreenStage_C_ExecuteUbergraph_BP_WinScreenStage::K2Node_CustomEvent_Transform' has a wrong offset!");
static_assert(offsetof(BP_WinScreenStage_C_ExecuteUbergraph_BP_WinScreenStage, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x000370, "Member 'BP_WinScreenStage_C_ExecuteUbergraph_BP_WinScreenStage::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WinScreenStage_C_ExecuteUbergraph_BP_WinScreenStage, CallFunc_PushWidgetToLayerStack_ReturnValue) == 0x000378, "Member 'BP_WinScreenStage_C_ExecuteUbergraph_BP_WinScreenStage::CallFunc_PushWidgetToLayerStack_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WinScreenStage_C_ExecuteUbergraph_BP_WinScreenStage, CallFunc_FinishSpawningActor_ReturnValue) == 0x000380, "Member 'BP_WinScreenStage_C_ExecuteUbergraph_BP_WinScreenStage::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WinScreenStage_C_ExecuteUbergraph_BP_WinScreenStage, K2Node_DynamicCast_AsWI_Win_Screen) == 0x000388, "Member 'BP_WinScreenStage_C_ExecuteUbergraph_BP_WinScreenStage::K2Node_DynamicCast_AsWI_Win_Screen' has a wrong offset!");
static_assert(offsetof(BP_WinScreenStage_C_ExecuteUbergraph_BP_WinScreenStage, K2Node_DynamicCast_bSuccess) == 0x000390, "Member 'BP_WinScreenStage_C_ExecuteUbergraph_BP_WinScreenStage::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_WinScreenStage_C_ExecuteUbergraph_BP_WinScreenStage, K2Node_CreateDelegate_OutputDelegate_1) == 0x000394, "Member 'BP_WinScreenStage_C_ExecuteUbergraph_BP_WinScreenStage::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(BP_WinScreenStage_C_ExecuteUbergraph_BP_WinScreenStage, CallFunc_GetPlayerController_ReturnValue) == 0x0003A8, "Member 'BP_WinScreenStage_C_ExecuteUbergraph_BP_WinScreenStage::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WinScreenStage_C_ExecuteUbergraph_BP_WinScreenStage, CallFunc_GetPlayerController_ReturnValue_1) == 0x0003B0, "Member 'BP_WinScreenStage_C_ExecuteUbergraph_BP_WinScreenStage::CallFunc_GetPlayerController_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_WinScreenStage_C_ExecuteUbergraph_BP_WinScreenStage, CallFunc_FindEssentialToFocus_Essential) == 0x0003B8, "Member 'BP_WinScreenStage_C_ExecuteUbergraph_BP_WinScreenStage::CallFunc_FindEssentialToFocus_Essential' has a wrong offset!");
static_assert(offsetof(BP_WinScreenStage_C_ExecuteUbergraph_BP_WinScreenStage, CallFunc_IsValid_ReturnValue) == 0x0003C0, "Member 'BP_WinScreenStage_C_ExecuteUbergraph_BP_WinScreenStage::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WinScreenStage_C_ExecuteUbergraph_BP_WinScreenStage, CallFunc_Greater_DoubleDouble_A_ImplicitCast) == 0x0003C8, "Member 'BP_WinScreenStage_C_ExecuteUbergraph_BP_WinScreenStage::CallFunc_Greater_DoubleDouble_A_ImplicitCast' has a wrong offset!");

// Function BP_WinScreenStage.BP_WinScreenStage_C.FindEssentialToFocus
// 0x0080 (0x0080 - 0x0000)
struct BP_WinScreenStage_C_FindEssentialToFocus final
{
public:
	class ABP_HouseEssential_Cube_C*              Essential;                                         // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<double>                                TimeStamps;                                        // 0x0008(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	TArray<class ABP_HouseEssential_Cube_C*>      Essentials;                                        // 0x0018(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_MaxOfFloatArray_IndexOfMaxValue;          // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MaxOfFloatArray_MaxValue;                 // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_HouseEssential_Cube_C*              CallFunc_Array_Get_Item;                           // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<class ABP_HouseEssential_Cube_C*>      CallFunc_GetAllActorsOfClass_OutActors;            // 0x0048(0x0010)(ReferenceParm)
	class ABP_HouseEssential_Cube_C*              CallFunc_Array_Get_Item_1;                         // 0x0058(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_69[0x3];                                       // 0x0069(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<float>                                 CallFunc_MaxOfFloatArray_FloatArray_ImplicitCast;  // 0x0070(0x0010)(ConstParm, ReferenceParm)
};
static_assert(alignof(BP_WinScreenStage_C_FindEssentialToFocus) == 0x000008, "Wrong alignment on BP_WinScreenStage_C_FindEssentialToFocus");
static_assert(sizeof(BP_WinScreenStage_C_FindEssentialToFocus) == 0x000080, "Wrong size on BP_WinScreenStage_C_FindEssentialToFocus");
static_assert(offsetof(BP_WinScreenStage_C_FindEssentialToFocus, Essential) == 0x000000, "Member 'BP_WinScreenStage_C_FindEssentialToFocus::Essential' has a wrong offset!");
static_assert(offsetof(BP_WinScreenStage_C_FindEssentialToFocus, TimeStamps) == 0x000008, "Member 'BP_WinScreenStage_C_FindEssentialToFocus::TimeStamps' has a wrong offset!");
static_assert(offsetof(BP_WinScreenStage_C_FindEssentialToFocus, Essentials) == 0x000018, "Member 'BP_WinScreenStage_C_FindEssentialToFocus::Essentials' has a wrong offset!");
static_assert(offsetof(BP_WinScreenStage_C_FindEssentialToFocus, Temp_int_Array_Index_Variable) == 0x000028, "Member 'BP_WinScreenStage_C_FindEssentialToFocus::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_WinScreenStage_C_FindEssentialToFocus, Temp_int_Loop_Counter_Variable) == 0x00002C, "Member 'BP_WinScreenStage_C_FindEssentialToFocus::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_WinScreenStage_C_FindEssentialToFocus, CallFunc_Add_IntInt_ReturnValue) == 0x000030, "Member 'BP_WinScreenStage_C_FindEssentialToFocus::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WinScreenStage_C_FindEssentialToFocus, CallFunc_MaxOfFloatArray_IndexOfMaxValue) == 0x000034, "Member 'BP_WinScreenStage_C_FindEssentialToFocus::CallFunc_MaxOfFloatArray_IndexOfMaxValue' has a wrong offset!");
static_assert(offsetof(BP_WinScreenStage_C_FindEssentialToFocus, CallFunc_MaxOfFloatArray_MaxValue) == 0x000038, "Member 'BP_WinScreenStage_C_FindEssentialToFocus::CallFunc_MaxOfFloatArray_MaxValue' has a wrong offset!");
static_assert(offsetof(BP_WinScreenStage_C_FindEssentialToFocus, CallFunc_Array_Get_Item) == 0x000040, "Member 'BP_WinScreenStage_C_FindEssentialToFocus::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_WinScreenStage_C_FindEssentialToFocus, CallFunc_GetAllActorsOfClass_OutActors) == 0x000048, "Member 'BP_WinScreenStage_C_FindEssentialToFocus::CallFunc_GetAllActorsOfClass_OutActors' has a wrong offset!");
static_assert(offsetof(BP_WinScreenStage_C_FindEssentialToFocus, CallFunc_Array_Get_Item_1) == 0x000058, "Member 'BP_WinScreenStage_C_FindEssentialToFocus::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_WinScreenStage_C_FindEssentialToFocus, CallFunc_Array_Length_ReturnValue) == 0x000060, "Member 'BP_WinScreenStage_C_FindEssentialToFocus::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WinScreenStage_C_FindEssentialToFocus, CallFunc_Array_Add_ReturnValue) == 0x000064, "Member 'BP_WinScreenStage_C_FindEssentialToFocus::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WinScreenStage_C_FindEssentialToFocus, CallFunc_Less_IntInt_ReturnValue) == 0x000068, "Member 'BP_WinScreenStage_C_FindEssentialToFocus::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WinScreenStage_C_FindEssentialToFocus, CallFunc_Array_Add_ReturnValue_1) == 0x00006C, "Member 'BP_WinScreenStage_C_FindEssentialToFocus::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_WinScreenStage_C_FindEssentialToFocus, CallFunc_MaxOfFloatArray_FloatArray_ImplicitCast) == 0x000070, "Member 'BP_WinScreenStage_C_FindEssentialToFocus::CallFunc_MaxOfFloatArray_FloatArray_ImplicitCast' has a wrong offset!");

// Function BP_WinScreenStage.BP_WinScreenStage_C.Get Focused Camera End Location
// 0x0030 (0x0030 - 0x0000)
struct BP_WinScreenStage_C_Get_Focused_Camera_End_Location final
{
public:
	struct FVector                                ReturnValue;                                       // 0x0000(0x0018)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0018(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_WinScreenStage_C_Get_Focused_Camera_End_Location) == 0x000008, "Wrong alignment on BP_WinScreenStage_C_Get_Focused_Camera_End_Location");
static_assert(sizeof(BP_WinScreenStage_C_Get_Focused_Camera_End_Location) == 0x000030, "Wrong size on BP_WinScreenStage_C_Get_Focused_Camera_End_Location");
static_assert(offsetof(BP_WinScreenStage_C_Get_Focused_Camera_End_Location, ReturnValue) == 0x000000, "Member 'BP_WinScreenStage_C_Get_Focused_Camera_End_Location::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WinScreenStage_C_Get_Focused_Camera_End_Location, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000018, "Member 'BP_WinScreenStage_C_Get_Focused_Camera_End_Location::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");

// Function BP_WinScreenStage.BP_WinScreenStage_C.Get House Spawn Transform for Team
// 0x0100 (0x0100 - 0x0000)
struct BP_WinScreenStage_C_Get_House_Spawn_Transform_for_Team final
{
public:
	uint8                                         Team;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0xF];                                        // 0x0001(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             Transform;                                         // 0x0010(0x0060)(Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Temp_byte_Variable;                                // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_71[0x7];                                       // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSubclassOf<class AActor>                     Temp_class_Variable;                               // 0x0078(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	TSubclassOf<class AActor>                     Temp_class_Variable_1;                             // 0x0080(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	TSubclassOf<class AActor>                     Temp_class_Variable_2;                             // 0x0088(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	TSubclassOf<class AActor>                     K2Node_Select_Default;                             // 0x0090(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetActorOfClass_ReturnValue;              // 0x0098(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x00A0(0x0060)(ConstParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_WinScreenStage_C_Get_House_Spawn_Transform_for_Team) == 0x000010, "Wrong alignment on BP_WinScreenStage_C_Get_House_Spawn_Transform_for_Team");
static_assert(sizeof(BP_WinScreenStage_C_Get_House_Spawn_Transform_for_Team) == 0x000100, "Wrong size on BP_WinScreenStage_C_Get_House_Spawn_Transform_for_Team");
static_assert(offsetof(BP_WinScreenStage_C_Get_House_Spawn_Transform_for_Team, Team) == 0x000000, "Member 'BP_WinScreenStage_C_Get_House_Spawn_Transform_for_Team::Team' has a wrong offset!");
static_assert(offsetof(BP_WinScreenStage_C_Get_House_Spawn_Transform_for_Team, Transform) == 0x000010, "Member 'BP_WinScreenStage_C_Get_House_Spawn_Transform_for_Team::Transform' has a wrong offset!");
static_assert(offsetof(BP_WinScreenStage_C_Get_House_Spawn_Transform_for_Team, Temp_byte_Variable) == 0x000070, "Member 'BP_WinScreenStage_C_Get_House_Spawn_Transform_for_Team::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_WinScreenStage_C_Get_House_Spawn_Transform_for_Team, Temp_class_Variable) == 0x000078, "Member 'BP_WinScreenStage_C_Get_House_Spawn_Transform_for_Team::Temp_class_Variable' has a wrong offset!");
static_assert(offsetof(BP_WinScreenStage_C_Get_House_Spawn_Transform_for_Team, Temp_class_Variable_1) == 0x000080, "Member 'BP_WinScreenStage_C_Get_House_Spawn_Transform_for_Team::Temp_class_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_WinScreenStage_C_Get_House_Spawn_Transform_for_Team, Temp_class_Variable_2) == 0x000088, "Member 'BP_WinScreenStage_C_Get_House_Spawn_Transform_for_Team::Temp_class_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_WinScreenStage_C_Get_House_Spawn_Transform_for_Team, K2Node_Select_Default) == 0x000090, "Member 'BP_WinScreenStage_C_Get_House_Spawn_Transform_for_Team::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_WinScreenStage_C_Get_House_Spawn_Transform_for_Team, CallFunc_GetActorOfClass_ReturnValue) == 0x000098, "Member 'BP_WinScreenStage_C_Get_House_Spawn_Transform_for_Team::CallFunc_GetActorOfClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WinScreenStage_C_Get_House_Spawn_Transform_for_Team, CallFunc_GetTransform_ReturnValue) == 0x0000A0, "Member 'BP_WinScreenStage_C_Get_House_Spawn_Transform_for_Team::CallFunc_GetTransform_ReturnValue' has a wrong offset!");

// Function BP_WinScreenStage.BP_WinScreenStage_C.GetHouseDefinitionForTeam
// 0x0110 (0x0110 - 0x0000)
struct BP_WinScreenStage_C_GetHouseDefinitionForTeam final
{
public:
	uint8                                         Team;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 HouseToSpawn;                                      // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 Temp_class_Variable;                               // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FTeam                                  CallFunc_GetTeam_ReturnValue;                      // 0x0018(0x0038)(ConstParm, NoDestructor)
	class UClass*                                 Temp_class_Variable_1;                             // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TSoftObjectPtr<class UHouseDefinition>        CallFunc_TryGetHouseDefinition_OutSoftHouseDefinition; // 0x0058(0x0028)(UObjectWrapper, HasGetValueTypeHash)
	bool                                          CallFunc_TryGetHouseDefinition_ReturnValue;        // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_81[0x7];                                       // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_LoadAsset_Blocking_ReturnValue;           // 0x0088(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_91[0x7];                                       // 0x0091(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UHouseDefinition*                       K2Node_DynamicCast_AsHouse_Definition;             // 0x0098(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x00A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A2[0x6];                                       // 0x00A2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateJP*                           CallFunc_GetGameStateJP_ReturnValue;               // 0x00A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetWinningTeam_ReturnValue;               // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B1[0x7];                                       // 0x00B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateJP*                           CallFunc_GetGameStateJP_ReturnValue_1;             // 0x00B8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetWinningTeam_ReturnValue_1;             // 0x00C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x00C2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C3[0x5];                                       // 0x00C3(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 K2Node_Select_Default;                             // 0x00C8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TSoftClassPtr<class UClass>                   K2Node_Select_Default_1;                           // 0x00D0(0x0028)(UObjectWrapper, HasGetValueTypeHash)
	class UClass*                                 CallFunc_LoadClassAsset_Blocking_ReturnValue;      // 0x00F8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 K2Node_ClassDynamicCast_AsActor;                   // 0x0100(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ClassDynamicCast_bSuccess;                  // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_WinScreenStage_C_GetHouseDefinitionForTeam) == 0x000008, "Wrong alignment on BP_WinScreenStage_C_GetHouseDefinitionForTeam");
static_assert(sizeof(BP_WinScreenStage_C_GetHouseDefinitionForTeam) == 0x000110, "Wrong size on BP_WinScreenStage_C_GetHouseDefinitionForTeam");
static_assert(offsetof(BP_WinScreenStage_C_GetHouseDefinitionForTeam, Team) == 0x000000, "Member 'BP_WinScreenStage_C_GetHouseDefinitionForTeam::Team' has a wrong offset!");
static_assert(offsetof(BP_WinScreenStage_C_GetHouseDefinitionForTeam, HouseToSpawn) == 0x000008, "Member 'BP_WinScreenStage_C_GetHouseDefinitionForTeam::HouseToSpawn' has a wrong offset!");
static_assert(offsetof(BP_WinScreenStage_C_GetHouseDefinitionForTeam, Temp_class_Variable) == 0x000010, "Member 'BP_WinScreenStage_C_GetHouseDefinitionForTeam::Temp_class_Variable' has a wrong offset!");
static_assert(offsetof(BP_WinScreenStage_C_GetHouseDefinitionForTeam, CallFunc_GetTeam_ReturnValue) == 0x000018, "Member 'BP_WinScreenStage_C_GetHouseDefinitionForTeam::CallFunc_GetTeam_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WinScreenStage_C_GetHouseDefinitionForTeam, Temp_class_Variable_1) == 0x000050, "Member 'BP_WinScreenStage_C_GetHouseDefinitionForTeam::Temp_class_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_WinScreenStage_C_GetHouseDefinitionForTeam, CallFunc_TryGetHouseDefinition_OutSoftHouseDefinition) == 0x000058, "Member 'BP_WinScreenStage_C_GetHouseDefinitionForTeam::CallFunc_TryGetHouseDefinition_OutSoftHouseDefinition' has a wrong offset!");
static_assert(offsetof(BP_WinScreenStage_C_GetHouseDefinitionForTeam, CallFunc_TryGetHouseDefinition_ReturnValue) == 0x000080, "Member 'BP_WinScreenStage_C_GetHouseDefinitionForTeam::CallFunc_TryGetHouseDefinition_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WinScreenStage_C_GetHouseDefinitionForTeam, CallFunc_LoadAsset_Blocking_ReturnValue) == 0x000088, "Member 'BP_WinScreenStage_C_GetHouseDefinitionForTeam::CallFunc_LoadAsset_Blocking_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WinScreenStage_C_GetHouseDefinitionForTeam, Temp_bool_Variable) == 0x000090, "Member 'BP_WinScreenStage_C_GetHouseDefinitionForTeam::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_WinScreenStage_C_GetHouseDefinitionForTeam, K2Node_DynamicCast_AsHouse_Definition) == 0x000098, "Member 'BP_WinScreenStage_C_GetHouseDefinitionForTeam::K2Node_DynamicCast_AsHouse_Definition' has a wrong offset!");
static_assert(offsetof(BP_WinScreenStage_C_GetHouseDefinitionForTeam, K2Node_DynamicCast_bSuccess) == 0x0000A0, "Member 'BP_WinScreenStage_C_GetHouseDefinitionForTeam::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_WinScreenStage_C_GetHouseDefinitionForTeam, Temp_bool_Variable_1) == 0x0000A1, "Member 'BP_WinScreenStage_C_GetHouseDefinitionForTeam::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_WinScreenStage_C_GetHouseDefinitionForTeam, CallFunc_GetGameStateJP_ReturnValue) == 0x0000A8, "Member 'BP_WinScreenStage_C_GetHouseDefinitionForTeam::CallFunc_GetGameStateJP_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WinScreenStage_C_GetHouseDefinitionForTeam, CallFunc_GetWinningTeam_ReturnValue) == 0x0000B0, "Member 'BP_WinScreenStage_C_GetHouseDefinitionForTeam::CallFunc_GetWinningTeam_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WinScreenStage_C_GetHouseDefinitionForTeam, CallFunc_GetGameStateJP_ReturnValue_1) == 0x0000B8, "Member 'BP_WinScreenStage_C_GetHouseDefinitionForTeam::CallFunc_GetGameStateJP_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_WinScreenStage_C_GetHouseDefinitionForTeam, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x0000C0, "Member 'BP_WinScreenStage_C_GetHouseDefinitionForTeam::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WinScreenStage_C_GetHouseDefinitionForTeam, CallFunc_GetWinningTeam_ReturnValue_1) == 0x0000C1, "Member 'BP_WinScreenStage_C_GetHouseDefinitionForTeam::CallFunc_GetWinningTeam_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_WinScreenStage_C_GetHouseDefinitionForTeam, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x0000C2, "Member 'BP_WinScreenStage_C_GetHouseDefinitionForTeam::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_WinScreenStage_C_GetHouseDefinitionForTeam, K2Node_Select_Default) == 0x0000C8, "Member 'BP_WinScreenStage_C_GetHouseDefinitionForTeam::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_WinScreenStage_C_GetHouseDefinitionForTeam, K2Node_Select_Default_1) == 0x0000D0, "Member 'BP_WinScreenStage_C_GetHouseDefinitionForTeam::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BP_WinScreenStage_C_GetHouseDefinitionForTeam, CallFunc_LoadClassAsset_Blocking_ReturnValue) == 0x0000F8, "Member 'BP_WinScreenStage_C_GetHouseDefinitionForTeam::CallFunc_LoadClassAsset_Blocking_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WinScreenStage_C_GetHouseDefinitionForTeam, K2Node_ClassDynamicCast_AsActor) == 0x000100, "Member 'BP_WinScreenStage_C_GetHouseDefinitionForTeam::K2Node_ClassDynamicCast_AsActor' has a wrong offset!");
static_assert(offsetof(BP_WinScreenStage_C_GetHouseDefinitionForTeam, K2Node_ClassDynamicCast_bSuccess) == 0x000108, "Member 'BP_WinScreenStage_C_GetHouseDefinitionForTeam::K2Node_ClassDynamicCast_bSuccess' has a wrong offset!");

// Function BP_WinScreenStage.BP_WinScreenStage_C.GetPlayerSpawnData
// 0x0110 (0x0110 - 0x0000)
struct BP_WinScreenStage_C_GetPlayerSpawnData final
{
public:
	class APlayerStateJP*                         PlayerState;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Index_0;                                           // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Team;                                              // 0x000C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             Transform;                                         // 0x0010(0x0060)(Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          WinningTeam;                                       // 0x0070(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Temp_byte_Variable;                                // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_72[0x6];                                       // 0x0072(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FVector>                        Temp_struct_Variable;                              // 0x0078(0x0010)(ReferenceParm)
	class AGameStateJP*                           CallFunc_GetGameStateJP_ReturnValue;               // 0x0088(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetWinningTeam_ReturnValue;               // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_91[0x7];                                       // 0x0091(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FVector>                        K2Node_Select_Default;                             // 0x0098(0x0010)(ReferenceParm)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A9[0x7];                                       // 0x00A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetSpawnTransform_ReturnValue;            // 0x00B0(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_WinScreenStage_C_GetPlayerSpawnData) == 0x000010, "Wrong alignment on BP_WinScreenStage_C_GetPlayerSpawnData");
static_assert(sizeof(BP_WinScreenStage_C_GetPlayerSpawnData) == 0x000110, "Wrong size on BP_WinScreenStage_C_GetPlayerSpawnData");
static_assert(offsetof(BP_WinScreenStage_C_GetPlayerSpawnData, PlayerState) == 0x000000, "Member 'BP_WinScreenStage_C_GetPlayerSpawnData::PlayerState' has a wrong offset!");
static_assert(offsetof(BP_WinScreenStage_C_GetPlayerSpawnData, Index_0) == 0x000008, "Member 'BP_WinScreenStage_C_GetPlayerSpawnData::Index_0' has a wrong offset!");
static_assert(offsetof(BP_WinScreenStage_C_GetPlayerSpawnData, Team) == 0x00000C, "Member 'BP_WinScreenStage_C_GetPlayerSpawnData::Team' has a wrong offset!");
static_assert(offsetof(BP_WinScreenStage_C_GetPlayerSpawnData, Transform) == 0x000010, "Member 'BP_WinScreenStage_C_GetPlayerSpawnData::Transform' has a wrong offset!");
static_assert(offsetof(BP_WinScreenStage_C_GetPlayerSpawnData, WinningTeam) == 0x000070, "Member 'BP_WinScreenStage_C_GetPlayerSpawnData::WinningTeam' has a wrong offset!");
static_assert(offsetof(BP_WinScreenStage_C_GetPlayerSpawnData, Temp_byte_Variable) == 0x000071, "Member 'BP_WinScreenStage_C_GetPlayerSpawnData::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_WinScreenStage_C_GetPlayerSpawnData, Temp_struct_Variable) == 0x000078, "Member 'BP_WinScreenStage_C_GetPlayerSpawnData::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(BP_WinScreenStage_C_GetPlayerSpawnData, CallFunc_GetGameStateJP_ReturnValue) == 0x000088, "Member 'BP_WinScreenStage_C_GetPlayerSpawnData::CallFunc_GetGameStateJP_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WinScreenStage_C_GetPlayerSpawnData, CallFunc_GetWinningTeam_ReturnValue) == 0x000090, "Member 'BP_WinScreenStage_C_GetPlayerSpawnData::CallFunc_GetWinningTeam_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WinScreenStage_C_GetPlayerSpawnData, K2Node_Select_Default) == 0x000098, "Member 'BP_WinScreenStage_C_GetPlayerSpawnData::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_WinScreenStage_C_GetPlayerSpawnData, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x0000A8, "Member 'BP_WinScreenStage_C_GetPlayerSpawnData::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WinScreenStage_C_GetPlayerSpawnData, CallFunc_GetSpawnTransform_ReturnValue) == 0x0000B0, "Member 'BP_WinScreenStage_C_GetPlayerSpawnData::CallFunc_GetSpawnTransform_ReturnValue' has a wrong offset!");

// Function BP_WinScreenStage.BP_WinScreenStage_C.GetSpawnTransform
// 0x00E0 (0x00E0 - 0x0000)
struct BP_WinScreenStage_C_GetSpawnTransform final
{
public:
	struct FVector                                InVec;                                             // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_18[0x8];                                       // 0x0018(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             ReturnValue;                                       // 0x0020(0x0060)(Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0080(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_WinScreenStage_C_GetSpawnTransform) == 0x000010, "Wrong alignment on BP_WinScreenStage_C_GetSpawnTransform");
static_assert(sizeof(BP_WinScreenStage_C_GetSpawnTransform) == 0x0000E0, "Wrong size on BP_WinScreenStage_C_GetSpawnTransform");
static_assert(offsetof(BP_WinScreenStage_C_GetSpawnTransform, InVec) == 0x000000, "Member 'BP_WinScreenStage_C_GetSpawnTransform::InVec' has a wrong offset!");
static_assert(offsetof(BP_WinScreenStage_C_GetSpawnTransform, ReturnValue) == 0x000020, "Member 'BP_WinScreenStage_C_GetSpawnTransform::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WinScreenStage_C_GetSpawnTransform, CallFunc_MakeTransform_ReturnValue) == 0x000080, "Member 'BP_WinScreenStage_C_GetSpawnTransform::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");

// Function BP_WinScreenStage.BP_WinScreenStage_C.MakeHouseForSpecificTeam
// 0x0080 (0x0080 - 0x0000)
struct BP_WinScreenStage_C_MakeHouseForSpecificTeam final
{
public:
	uint8                                         SpecificTeamID;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         TeamHouseIndex;                                    // 0x0001(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0xE];                                        // 0x0002(0x000E)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_Get_House_Spawn_Transform_for_Team_Transform; // 0x0010(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 CallFunc_GetHouseDefinitionForTeam_HouseToSpawn;   // 0x0070(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_WinScreenStage_C_MakeHouseForSpecificTeam) == 0x000010, "Wrong alignment on BP_WinScreenStage_C_MakeHouseForSpecificTeam");
static_assert(sizeof(BP_WinScreenStage_C_MakeHouseForSpecificTeam) == 0x000080, "Wrong size on BP_WinScreenStage_C_MakeHouseForSpecificTeam");
static_assert(offsetof(BP_WinScreenStage_C_MakeHouseForSpecificTeam, SpecificTeamID) == 0x000000, "Member 'BP_WinScreenStage_C_MakeHouseForSpecificTeam::SpecificTeamID' has a wrong offset!");
static_assert(offsetof(BP_WinScreenStage_C_MakeHouseForSpecificTeam, TeamHouseIndex) == 0x000001, "Member 'BP_WinScreenStage_C_MakeHouseForSpecificTeam::TeamHouseIndex' has a wrong offset!");
static_assert(offsetof(BP_WinScreenStage_C_MakeHouseForSpecificTeam, CallFunc_Get_House_Spawn_Transform_for_Team_Transform) == 0x000010, "Member 'BP_WinScreenStage_C_MakeHouseForSpecificTeam::CallFunc_Get_House_Spawn_Transform_for_Team_Transform' has a wrong offset!");
static_assert(offsetof(BP_WinScreenStage_C_MakeHouseForSpecificTeam, CallFunc_GetHouseDefinitionForTeam_HouseToSpawn) == 0x000070, "Member 'BP_WinScreenStage_C_MakeHouseForSpecificTeam::CallFunc_GetHouseDefinitionForTeam_HouseToSpawn' has a wrong offset!");

// Function BP_WinScreenStage.BP_WinScreenStage_C.MakeHouses
// 0x0003 (0x0003 - 0x0000)
struct BP_WinScreenStage_C_MakeHouses final
{
public:
	uint8                                         Team2HouseIndex;                                   // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Team1HouseIndex;                                   // 0x0001(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_WinScreenStage_C_MakeHouses) == 0x000001, "Wrong alignment on BP_WinScreenStage_C_MakeHouses");
static_assert(sizeof(BP_WinScreenStage_C_MakeHouses) == 0x000003, "Wrong size on BP_WinScreenStage_C_MakeHouses");
static_assert(offsetof(BP_WinScreenStage_C_MakeHouses, Team2HouseIndex) == 0x000000, "Member 'BP_WinScreenStage_C_MakeHouses::Team2HouseIndex' has a wrong offset!");
static_assert(offsetof(BP_WinScreenStage_C_MakeHouses, Team1HouseIndex) == 0x000001, "Member 'BP_WinScreenStage_C_MakeHouses::Team1HouseIndex' has a wrong offset!");
static_assert(offsetof(BP_WinScreenStage_C_MakeHouses, CallFunc_HasAuthority_ReturnValue) == 0x000002, "Member 'BP_WinScreenStage_C_MakeHouses::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");

// Function BP_WinScreenStage.BP_WinScreenStage_C.Multi_SpawnPreviewHouse
// 0x0070 (0x0070 - 0x0000)
struct BP_WinScreenStage_C_Multi_SpawnPreviewHouse final
{
public:
	class UClass*                                 House;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8[0x8];                                        // 0x0008(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             Transform;                                         // 0x0010(0x0060)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_WinScreenStage_C_Multi_SpawnPreviewHouse) == 0x000010, "Wrong alignment on BP_WinScreenStage_C_Multi_SpawnPreviewHouse");
static_assert(sizeof(BP_WinScreenStage_C_Multi_SpawnPreviewHouse) == 0x000070, "Wrong size on BP_WinScreenStage_C_Multi_SpawnPreviewHouse");
static_assert(offsetof(BP_WinScreenStage_C_Multi_SpawnPreviewHouse, House) == 0x000000, "Member 'BP_WinScreenStage_C_Multi_SpawnPreviewHouse::House' has a wrong offset!");
static_assert(offsetof(BP_WinScreenStage_C_Multi_SpawnPreviewHouse, Transform) == 0x000010, "Member 'BP_WinScreenStage_C_Multi_SpawnPreviewHouse::Transform' has a wrong offset!");

// Function BP_WinScreenStage.BP_WinScreenStage_C.PlaceActorsForTeam
// 0x0120 (0x0120 - 0x0000)
struct BP_WinScreenStage_C_PlaceActorsForTeam final
{
public:
	uint8                                         Team;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ABP_WinscreenPawn_C*>            LPawns;                                            // 0x0008(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	TArray<class USkeletalMesh*>                  LMeshes;                                           // 0x0018(0x0010)(Edit, BlueprintVisible)
	TArray<ECharacterName>                        LNames;                                            // 0x0028(0x0010)(Edit, BlueprintVisible)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class APlayerStateJP*>                 CallFunc_GetPlayersOfTeam_ReturnValue;             // 0x0040(0x0010)(ReferenceParm)
	class APlayerStateJP*                         CallFunc_Array_Get_Item;                           // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           CallFunc_GetNeighborIdentifier_ReturnValue;        // 0x005C(0x0008)(NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_64[0x4];                                       // 0x0064(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0068(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_74[0x4];                                       // 0x0074(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue_1;        // 0x0078(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0081(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_82[0x2];                                       // 0x0082(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_89[0x7];                                       // 0x0089(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetPlayerSpawnData_Transform;             // 0x0090(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetPlayerSpawnData_WinningTeam;           // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F1[0x7];                                       // 0x00F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x00F8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_Winscreen_CharacterWorldSlot_C*     CallFunc_FinishSpawningActor_ReturnValue;          // 0x0100(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<class ABP_Winscreen_CharacterWorldSlot_C*> K2Node_Select_Default;                             // 0x0108(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0118(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_WinScreenStage_C_PlaceActorsForTeam) == 0x000010, "Wrong alignment on BP_WinScreenStage_C_PlaceActorsForTeam");
static_assert(sizeof(BP_WinScreenStage_C_PlaceActorsForTeam) == 0x000120, "Wrong size on BP_WinScreenStage_C_PlaceActorsForTeam");
static_assert(offsetof(BP_WinScreenStage_C_PlaceActorsForTeam, Team) == 0x000000, "Member 'BP_WinScreenStage_C_PlaceActorsForTeam::Team' has a wrong offset!");
static_assert(offsetof(BP_WinScreenStage_C_PlaceActorsForTeam, LPawns) == 0x000008, "Member 'BP_WinScreenStage_C_PlaceActorsForTeam::LPawns' has a wrong offset!");
static_assert(offsetof(BP_WinScreenStage_C_PlaceActorsForTeam, LMeshes) == 0x000018, "Member 'BP_WinScreenStage_C_PlaceActorsForTeam::LMeshes' has a wrong offset!");
static_assert(offsetof(BP_WinScreenStage_C_PlaceActorsForTeam, LNames) == 0x000028, "Member 'BP_WinScreenStage_C_PlaceActorsForTeam::LNames' has a wrong offset!");
static_assert(offsetof(BP_WinScreenStage_C_PlaceActorsForTeam, Temp_int_Array_Index_Variable) == 0x000038, "Member 'BP_WinScreenStage_C_PlaceActorsForTeam::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_WinScreenStage_C_PlaceActorsForTeam, CallFunc_GetPlayersOfTeam_ReturnValue) == 0x000040, "Member 'BP_WinScreenStage_C_PlaceActorsForTeam::CallFunc_GetPlayersOfTeam_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WinScreenStage_C_PlaceActorsForTeam, CallFunc_Array_Get_Item) == 0x000050, "Member 'BP_WinScreenStage_C_PlaceActorsForTeam::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_WinScreenStage_C_PlaceActorsForTeam, CallFunc_Array_Length_ReturnValue) == 0x000058, "Member 'BP_WinScreenStage_C_PlaceActorsForTeam::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WinScreenStage_C_PlaceActorsForTeam, CallFunc_GetNeighborIdentifier_ReturnValue) == 0x00005C, "Member 'BP_WinScreenStage_C_PlaceActorsForTeam::CallFunc_GetNeighborIdentifier_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WinScreenStage_C_PlaceActorsForTeam, CallFunc_GetPlayerController_ReturnValue) == 0x000068, "Member 'BP_WinScreenStage_C_PlaceActorsForTeam::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WinScreenStage_C_PlaceActorsForTeam, Temp_int_Loop_Counter_Variable) == 0x000070, "Member 'BP_WinScreenStage_C_PlaceActorsForTeam::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_WinScreenStage_C_PlaceActorsForTeam, CallFunc_GetPlayerController_ReturnValue_1) == 0x000078, "Member 'BP_WinScreenStage_C_PlaceActorsForTeam::CallFunc_GetPlayerController_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_WinScreenStage_C_PlaceActorsForTeam, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000080, "Member 'BP_WinScreenStage_C_PlaceActorsForTeam::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WinScreenStage_C_PlaceActorsForTeam, CallFunc_Less_IntInt_ReturnValue) == 0x000081, "Member 'BP_WinScreenStage_C_PlaceActorsForTeam::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WinScreenStage_C_PlaceActorsForTeam, CallFunc_Add_IntInt_ReturnValue) == 0x000084, "Member 'BP_WinScreenStage_C_PlaceActorsForTeam::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WinScreenStage_C_PlaceActorsForTeam, Temp_bool_Variable) == 0x000088, "Member 'BP_WinScreenStage_C_PlaceActorsForTeam::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_WinScreenStage_C_PlaceActorsForTeam, CallFunc_GetPlayerSpawnData_Transform) == 0x000090, "Member 'BP_WinScreenStage_C_PlaceActorsForTeam::CallFunc_GetPlayerSpawnData_Transform' has a wrong offset!");
static_assert(offsetof(BP_WinScreenStage_C_PlaceActorsForTeam, CallFunc_GetPlayerSpawnData_WinningTeam) == 0x0000F0, "Member 'BP_WinScreenStage_C_PlaceActorsForTeam::CallFunc_GetPlayerSpawnData_WinningTeam' has a wrong offset!");
static_assert(offsetof(BP_WinScreenStage_C_PlaceActorsForTeam, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x0000F8, "Member 'BP_WinScreenStage_C_PlaceActorsForTeam::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WinScreenStage_C_PlaceActorsForTeam, CallFunc_FinishSpawningActor_ReturnValue) == 0x000100, "Member 'BP_WinScreenStage_C_PlaceActorsForTeam::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WinScreenStage_C_PlaceActorsForTeam, K2Node_Select_Default) == 0x000108, "Member 'BP_WinScreenStage_C_PlaceActorsForTeam::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_WinScreenStage_C_PlaceActorsForTeam, CallFunc_Array_Add_ReturnValue) == 0x000118, "Member 'BP_WinScreenStage_C_PlaceActorsForTeam::CallFunc_Array_Add_ReturnValue' has a wrong offset!");

// Function BP_WinScreenStage.BP_WinScreenStage_C.PlayWinLoseAnimations
// 0x0040 (0x0040 - 0x0000)
struct BP_WinScreenStage_C_PlayWinLoseAnimations final
{
public:
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_Winscreen_CharacterWorldSlot_C*     CallFunc_Array_Get_Item;                           // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_25[0x3];                                       // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_Winscreen_CharacterWorldSlot_C*     CallFunc_Array_Get_Item_1;                         // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_WinScreenStage_C_PlayWinLoseAnimations) == 0x000008, "Wrong alignment on BP_WinScreenStage_C_PlayWinLoseAnimations");
static_assert(sizeof(BP_WinScreenStage_C_PlayWinLoseAnimations) == 0x000040, "Wrong size on BP_WinScreenStage_C_PlayWinLoseAnimations");
static_assert(offsetof(BP_WinScreenStage_C_PlayWinLoseAnimations, Temp_int_Loop_Counter_Variable) == 0x000000, "Member 'BP_WinScreenStage_C_PlayWinLoseAnimations::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_WinScreenStage_C_PlayWinLoseAnimations, CallFunc_Add_IntInt_ReturnValue) == 0x000004, "Member 'BP_WinScreenStage_C_PlayWinLoseAnimations::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WinScreenStage_C_PlayWinLoseAnimations, Temp_int_Array_Index_Variable) == 0x000008, "Member 'BP_WinScreenStage_C_PlayWinLoseAnimations::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_WinScreenStage_C_PlayWinLoseAnimations, Temp_int_Array_Index_Variable_1) == 0x00000C, "Member 'BP_WinScreenStage_C_PlayWinLoseAnimations::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_WinScreenStage_C_PlayWinLoseAnimations, Temp_int_Loop_Counter_Variable_1) == 0x000010, "Member 'BP_WinScreenStage_C_PlayWinLoseAnimations::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_WinScreenStage_C_PlayWinLoseAnimations, CallFunc_Array_Get_Item) == 0x000018, "Member 'BP_WinScreenStage_C_PlayWinLoseAnimations::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_WinScreenStage_C_PlayWinLoseAnimations, CallFunc_Array_Length_ReturnValue) == 0x000020, "Member 'BP_WinScreenStage_C_PlayWinLoseAnimations::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WinScreenStage_C_PlayWinLoseAnimations, CallFunc_Less_IntInt_ReturnValue) == 0x000024, "Member 'BP_WinScreenStage_C_PlayWinLoseAnimations::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WinScreenStage_C_PlayWinLoseAnimations, CallFunc_Add_IntInt_ReturnValue_1) == 0x000028, "Member 'BP_WinScreenStage_C_PlayWinLoseAnimations::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_WinScreenStage_C_PlayWinLoseAnimations, CallFunc_Array_Length_ReturnValue_1) == 0x00002C, "Member 'BP_WinScreenStage_C_PlayWinLoseAnimations::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_WinScreenStage_C_PlayWinLoseAnimations, CallFunc_Array_Get_Item_1) == 0x000030, "Member 'BP_WinScreenStage_C_PlayWinLoseAnimations::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_WinScreenStage_C_PlayWinLoseAnimations, CallFunc_Less_IntInt_ReturnValue_1) == 0x000038, "Member 'BP_WinScreenStage_C_PlayWinLoseAnimations::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");

// Function BP_WinScreenStage.BP_WinScreenStage_C.Save Cameras
// 0x0128 (0x0128 - 0x0000)
struct BP_WinScreenStage_C_Save_Cameras final
{
public:
	class ACameraRig_Rail*                        CallFunc_GetActorOfClass_ReturnValue;              // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0008(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetActorLocation_SweepHitResult;       // 0x0020(0x00F8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_SetActorLocation_ReturnValue;          // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_119[0x7];                                      // 0x0119(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_EndOfGameCamera_C*                  CallFunc_GetActorOfClass_ReturnValue_1;            // 0x0120(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_WinScreenStage_C_Save_Cameras) == 0x000008, "Wrong alignment on BP_WinScreenStage_C_Save_Cameras");
static_assert(sizeof(BP_WinScreenStage_C_Save_Cameras) == 0x000128, "Wrong size on BP_WinScreenStage_C_Save_Cameras");
static_assert(offsetof(BP_WinScreenStage_C_Save_Cameras, CallFunc_GetActorOfClass_ReturnValue) == 0x000000, "Member 'BP_WinScreenStage_C_Save_Cameras::CallFunc_GetActorOfClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WinScreenStage_C_Save_Cameras, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000008, "Member 'BP_WinScreenStage_C_Save_Cameras::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WinScreenStage_C_Save_Cameras, CallFunc_K2_SetActorLocation_SweepHitResult) == 0x000020, "Member 'BP_WinScreenStage_C_Save_Cameras::CallFunc_K2_SetActorLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_WinScreenStage_C_Save_Cameras, CallFunc_K2_SetActorLocation_ReturnValue) == 0x000118, "Member 'BP_WinScreenStage_C_Save_Cameras::CallFunc_K2_SetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WinScreenStage_C_Save_Cameras, CallFunc_GetActorOfClass_ReturnValue_1) == 0x000120, "Member 'BP_WinScreenStage_C_Save_Cameras::CallFunc_GetActorOfClass_ReturnValue_1' has a wrong offset!");

// Function BP_WinScreenStage.BP_WinScreenStage_C.Set Nameplate Visibility
// 0x0038 (0x0038 - 0x0000)
struct BP_WinScreenStage_C_Set_Nameplate_Visibility final
{
public:
	bool                                          Visible;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class ABP_WinscreenPawn_C*>            CallFunc_GetAllActorsOfClass_OutActors;            // 0x0010(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_WinscreenPawn_C*                    CallFunc_Array_Get_Item;                           // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_WinScreenStage_C_Set_Nameplate_Visibility) == 0x000008, "Wrong alignment on BP_WinScreenStage_C_Set_Nameplate_Visibility");
static_assert(sizeof(BP_WinScreenStage_C_Set_Nameplate_Visibility) == 0x000038, "Wrong size on BP_WinScreenStage_C_Set_Nameplate_Visibility");
static_assert(offsetof(BP_WinScreenStage_C_Set_Nameplate_Visibility, Visible) == 0x000000, "Member 'BP_WinScreenStage_C_Set_Nameplate_Visibility::Visible' has a wrong offset!");
static_assert(offsetof(BP_WinScreenStage_C_Set_Nameplate_Visibility, Temp_int_Array_Index_Variable) == 0x000004, "Member 'BP_WinScreenStage_C_Set_Nameplate_Visibility::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_WinScreenStage_C_Set_Nameplate_Visibility, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'BP_WinScreenStage_C_Set_Nameplate_Visibility::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_WinScreenStage_C_Set_Nameplate_Visibility, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'BP_WinScreenStage_C_Set_Nameplate_Visibility::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WinScreenStage_C_Set_Nameplate_Visibility, CallFunc_GetAllActorsOfClass_OutActors) == 0x000010, "Member 'BP_WinScreenStage_C_Set_Nameplate_Visibility::CallFunc_GetAllActorsOfClass_OutActors' has a wrong offset!");
static_assert(offsetof(BP_WinScreenStage_C_Set_Nameplate_Visibility, CallFunc_Array_Length_ReturnValue) == 0x000020, "Member 'BP_WinScreenStage_C_Set_Nameplate_Visibility::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WinScreenStage_C_Set_Nameplate_Visibility, CallFunc_Array_Get_Item) == 0x000028, "Member 'BP_WinScreenStage_C_Set_Nameplate_Visibility::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_WinScreenStage_C_Set_Nameplate_Visibility, CallFunc_Less_IntInt_ReturnValue) == 0x000030, "Member 'BP_WinScreenStage_C_Set_Nameplate_Visibility::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function BP_WinScreenStage.BP_WinScreenStage_C.Set New Camera View
// 0x0008 (0x0008 - 0x0000)
struct BP_WinScreenStage_C_Set_New_Camera_View final
{
public:
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_WinScreenStage_C_Set_New_Camera_View) == 0x000008, "Wrong alignment on BP_WinScreenStage_C_Set_New_Camera_View");
static_assert(sizeof(BP_WinScreenStage_C_Set_New_Camera_View) == 0x000008, "Wrong size on BP_WinScreenStage_C_Set_New_Camera_View");
static_assert(offsetof(BP_WinScreenStage_C_Set_New_Camera_View, CallFunc_GetPlayerController_ReturnValue) == 0x000000, "Member 'BP_WinScreenStage_C_Set_New_Camera_View::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");

// Function BP_WinScreenStage.BP_WinScreenStage_C.SetSpawnLocations
// 0x0110 (0x0110 - 0x0000)
struct BP_WinScreenStage_C_SetSpawnLocations final
{
public:
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0000(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue_1;    // 0x0018(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue_2;    // 0x0030(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue_3;    // 0x0048(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue_4;    // 0x0060(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue_5;    // 0x0078(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue_6;    // 0x0090(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue_7;    // 0x00A8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FVector>                        K2Node_MakeArray_Array;                            // 0x00C0(0x0010)(ReferenceParm)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue_8;    // 0x00D0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue_9;    // 0x00E8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FVector>                        K2Node_MakeArray_Array_1;                          // 0x0100(0x0010)(ReferenceParm)
};
static_assert(alignof(BP_WinScreenStage_C_SetSpawnLocations) == 0x000008, "Wrong alignment on BP_WinScreenStage_C_SetSpawnLocations");
static_assert(sizeof(BP_WinScreenStage_C_SetSpawnLocations) == 0x000110, "Wrong size on BP_WinScreenStage_C_SetSpawnLocations");
static_assert(offsetof(BP_WinScreenStage_C_SetSpawnLocations, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000000, "Member 'BP_WinScreenStage_C_SetSpawnLocations::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WinScreenStage_C_SetSpawnLocations, CallFunc_K2_GetComponentLocation_ReturnValue_1) == 0x000018, "Member 'BP_WinScreenStage_C_SetSpawnLocations::CallFunc_K2_GetComponentLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_WinScreenStage_C_SetSpawnLocations, CallFunc_K2_GetComponentLocation_ReturnValue_2) == 0x000030, "Member 'BP_WinScreenStage_C_SetSpawnLocations::CallFunc_K2_GetComponentLocation_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_WinScreenStage_C_SetSpawnLocations, CallFunc_K2_GetComponentLocation_ReturnValue_3) == 0x000048, "Member 'BP_WinScreenStage_C_SetSpawnLocations::CallFunc_K2_GetComponentLocation_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_WinScreenStage_C_SetSpawnLocations, CallFunc_K2_GetComponentLocation_ReturnValue_4) == 0x000060, "Member 'BP_WinScreenStage_C_SetSpawnLocations::CallFunc_K2_GetComponentLocation_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_WinScreenStage_C_SetSpawnLocations, CallFunc_K2_GetComponentLocation_ReturnValue_5) == 0x000078, "Member 'BP_WinScreenStage_C_SetSpawnLocations::CallFunc_K2_GetComponentLocation_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_WinScreenStage_C_SetSpawnLocations, CallFunc_K2_GetComponentLocation_ReturnValue_6) == 0x000090, "Member 'BP_WinScreenStage_C_SetSpawnLocations::CallFunc_K2_GetComponentLocation_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_WinScreenStage_C_SetSpawnLocations, CallFunc_K2_GetComponentLocation_ReturnValue_7) == 0x0000A8, "Member 'BP_WinScreenStage_C_SetSpawnLocations::CallFunc_K2_GetComponentLocation_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_WinScreenStage_C_SetSpawnLocations, K2Node_MakeArray_Array) == 0x0000C0, "Member 'BP_WinScreenStage_C_SetSpawnLocations::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_WinScreenStage_C_SetSpawnLocations, CallFunc_K2_GetComponentLocation_ReturnValue_8) == 0x0000D0, "Member 'BP_WinScreenStage_C_SetSpawnLocations::CallFunc_K2_GetComponentLocation_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_WinScreenStage_C_SetSpawnLocations, CallFunc_K2_GetComponentLocation_ReturnValue_9) == 0x0000E8, "Member 'BP_WinScreenStage_C_SetSpawnLocations::CallFunc_K2_GetComponentLocation_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BP_WinScreenStage_C_SetSpawnLocations, K2Node_MakeArray_Array_1) == 0x000100, "Member 'BP_WinScreenStage_C_SetSpawnLocations::K2Node_MakeArray_Array_1' has a wrong offset!");

// Function BP_WinScreenStage.BP_WinScreenStage_C.ShowWinningTeamEffects
// 0x0018 (0x0018 - 0x0000)
struct BP_WinScreenStage_C_ShowWinningTeamEffects final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateJP*                           CallFunc_GetGameStateJP_ReturnValue;               // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetWinningTeam_ReturnValue;               // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_WinScreenStage_C_ShowWinningTeamEffects) == 0x000008, "Wrong alignment on BP_WinScreenStage_C_ShowWinningTeamEffects");
static_assert(sizeof(BP_WinScreenStage_C_ShowWinningTeamEffects) == 0x000018, "Wrong size on BP_WinScreenStage_C_ShowWinningTeamEffects");
static_assert(offsetof(BP_WinScreenStage_C_ShowWinningTeamEffects, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'BP_WinScreenStage_C_ShowWinningTeamEffects::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WinScreenStage_C_ShowWinningTeamEffects, CallFunc_IsValid_ReturnValue_1) == 0x000001, "Member 'BP_WinScreenStage_C_ShowWinningTeamEffects::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_WinScreenStage_C_ShowWinningTeamEffects, CallFunc_IsValid_ReturnValue_2) == 0x000002, "Member 'BP_WinScreenStage_C_ShowWinningTeamEffects::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_WinScreenStage_C_ShowWinningTeamEffects, CallFunc_IsValid_ReturnValue_3) == 0x000003, "Member 'BP_WinScreenStage_C_ShowWinningTeamEffects::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_WinScreenStage_C_ShowWinningTeamEffects, CallFunc_GetGameStateJP_ReturnValue) == 0x000008, "Member 'BP_WinScreenStage_C_ShowWinningTeamEffects::CallFunc_GetGameStateJP_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WinScreenStage_C_ShowWinningTeamEffects, CallFunc_GetWinningTeam_ReturnValue) == 0x000010, "Member 'BP_WinScreenStage_C_ShowWinningTeamEffects::CallFunc_GetWinningTeam_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WinScreenStage_C_ShowWinningTeamEffects, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000011, "Member 'BP_WinScreenStage_C_ShowWinningTeamEffects::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function BP_WinScreenStage.BP_WinScreenStage_C.UserConstructionScript
// 0x03B0 (0x03B0 - 0x0000)
struct BP_WinScreenStage_C_UserConstructionScript final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class USkeletalMeshComponent*>         K2Node_MakeArray_Array;                            // 0x0010(0x0010)(ReferenceParm, ContainsInstancedReference)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0020(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 CallFunc_Array_Get_Item;                           // 0x0038(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_K2_GetComponentRotation_ReturnValue;      // 0x0048(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_ComposeRotators_ReturnValue;              // 0x0068(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_K2_SetWorldRotation_SweepHitResult;       // 0x0080(0x00F8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue_1;    // 0x0178(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue_2;    // 0x0190(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_FindLookAtRotation_ReturnValue;           // 0x01A8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_K2_SetWorldLocation_SweepHitResult;       // 0x01C0(0x00F8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FHitResult                             CallFunc_K2_SetWorldRotation_SweepHitResult_1;     // 0x02B8(0x00F8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_WinScreenStage_C_UserConstructionScript) == 0x000008, "Wrong alignment on BP_WinScreenStage_C_UserConstructionScript");
static_assert(sizeof(BP_WinScreenStage_C_UserConstructionScript) == 0x0003B0, "Wrong size on BP_WinScreenStage_C_UserConstructionScript");
static_assert(offsetof(BP_WinScreenStage_C_UserConstructionScript, Temp_int_Array_Index_Variable) == 0x000000, "Member 'BP_WinScreenStage_C_UserConstructionScript::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_WinScreenStage_C_UserConstructionScript, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'BP_WinScreenStage_C_UserConstructionScript::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_WinScreenStage_C_UserConstructionScript, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'BP_WinScreenStage_C_UserConstructionScript::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WinScreenStage_C_UserConstructionScript, K2Node_MakeArray_Array) == 0x000010, "Member 'BP_WinScreenStage_C_UserConstructionScript::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_WinScreenStage_C_UserConstructionScript, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000020, "Member 'BP_WinScreenStage_C_UserConstructionScript::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WinScreenStage_C_UserConstructionScript, CallFunc_Array_Get_Item) == 0x000038, "Member 'BP_WinScreenStage_C_UserConstructionScript::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_WinScreenStage_C_UserConstructionScript, CallFunc_Array_Length_ReturnValue) == 0x000040, "Member 'BP_WinScreenStage_C_UserConstructionScript::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WinScreenStage_C_UserConstructionScript, CallFunc_K2_GetComponentRotation_ReturnValue) == 0x000048, "Member 'BP_WinScreenStage_C_UserConstructionScript::CallFunc_K2_GetComponentRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WinScreenStage_C_UserConstructionScript, CallFunc_Less_IntInt_ReturnValue) == 0x000060, "Member 'BP_WinScreenStage_C_UserConstructionScript::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WinScreenStage_C_UserConstructionScript, CallFunc_ComposeRotators_ReturnValue) == 0x000068, "Member 'BP_WinScreenStage_C_UserConstructionScript::CallFunc_ComposeRotators_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WinScreenStage_C_UserConstructionScript, CallFunc_K2_SetWorldRotation_SweepHitResult) == 0x000080, "Member 'BP_WinScreenStage_C_UserConstructionScript::CallFunc_K2_SetWorldRotation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_WinScreenStage_C_UserConstructionScript, CallFunc_K2_GetComponentLocation_ReturnValue_1) == 0x000178, "Member 'BP_WinScreenStage_C_UserConstructionScript::CallFunc_K2_GetComponentLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_WinScreenStage_C_UserConstructionScript, CallFunc_K2_GetComponentLocation_ReturnValue_2) == 0x000190, "Member 'BP_WinScreenStage_C_UserConstructionScript::CallFunc_K2_GetComponentLocation_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_WinScreenStage_C_UserConstructionScript, CallFunc_FindLookAtRotation_ReturnValue) == 0x0001A8, "Member 'BP_WinScreenStage_C_UserConstructionScript::CallFunc_FindLookAtRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WinScreenStage_C_UserConstructionScript, CallFunc_K2_SetWorldLocation_SweepHitResult) == 0x0001C0, "Member 'BP_WinScreenStage_C_UserConstructionScript::CallFunc_K2_SetWorldLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_WinScreenStage_C_UserConstructionScript, CallFunc_K2_SetWorldRotation_SweepHitResult_1) == 0x0002B8, "Member 'BP_WinScreenStage_C_UserConstructionScript::CallFunc_K2_SetWorldRotation_SweepHitResult_1' has a wrong offset!");

}

