#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_SeagullProjectile_Primary

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "BP_ProjectileBase_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_SeagullProjectile_Primary.BP_SeagullProjectile_Primary_C
// 0x0068 (0x0590 - 0x0528)
class ABP_SeagullProjectile_Primary_C final : public ABP_ProjectileBase_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_BP_SeagullProjectile_Primary_C;     // 0x0528(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class URotatingMovementComponent*             RotatingMovement;                                  // 0x0530(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UNiagaraComponent*                      P_Projectile_2;                                    // 0x0538(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	double                                        Knockback_Force_Max;                               // 0x0540(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Explosion_Radius_Max;                              // 0x0548(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Explosion_Radius_Mid;                              // 0x0550(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Explosion_Radius_Min;                              // 0x0558(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Damage_Max;                                        // 0x0560(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Damage_Mid;                                        // 0x0568(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Damage_Min;                                        // 0x0570(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Knockback_Force_Mid;                               // 0x0578(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Knockback_Force_Min;                               // 0x0580(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Friendly_Fire_Divider;                             // 0x0588(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_SeagullProjectile_Primary(int32 EntryPoint);
	void HandleProjectileStop(const struct FHitResult& Hit);
	void PooledBeginPlay();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_SeagullProjectile_Primary_C">();
	}
	static class ABP_SeagullProjectile_Primary_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_SeagullProjectile_Primary_C>();
	}
};
static_assert(alignof(ABP_SeagullProjectile_Primary_C) == 0x000008, "Wrong alignment on ABP_SeagullProjectile_Primary_C");
static_assert(sizeof(ABP_SeagullProjectile_Primary_C) == 0x000590, "Wrong size on ABP_SeagullProjectile_Primary_C");
static_assert(offsetof(ABP_SeagullProjectile_Primary_C, UberGraphFrame_BP_SeagullProjectile_Primary_C) == 0x000528, "Member 'ABP_SeagullProjectile_Primary_C::UberGraphFrame_BP_SeagullProjectile_Primary_C' has a wrong offset!");
static_assert(offsetof(ABP_SeagullProjectile_Primary_C, RotatingMovement) == 0x000530, "Member 'ABP_SeagullProjectile_Primary_C::RotatingMovement' has a wrong offset!");
static_assert(offsetof(ABP_SeagullProjectile_Primary_C, P_Projectile_2) == 0x000538, "Member 'ABP_SeagullProjectile_Primary_C::P_Projectile_2' has a wrong offset!");
static_assert(offsetof(ABP_SeagullProjectile_Primary_C, Knockback_Force_Max) == 0x000540, "Member 'ABP_SeagullProjectile_Primary_C::Knockback_Force_Max' has a wrong offset!");
static_assert(offsetof(ABP_SeagullProjectile_Primary_C, Explosion_Radius_Max) == 0x000548, "Member 'ABP_SeagullProjectile_Primary_C::Explosion_Radius_Max' has a wrong offset!");
static_assert(offsetof(ABP_SeagullProjectile_Primary_C, Explosion_Radius_Mid) == 0x000550, "Member 'ABP_SeagullProjectile_Primary_C::Explosion_Radius_Mid' has a wrong offset!");
static_assert(offsetof(ABP_SeagullProjectile_Primary_C, Explosion_Radius_Min) == 0x000558, "Member 'ABP_SeagullProjectile_Primary_C::Explosion_Radius_Min' has a wrong offset!");
static_assert(offsetof(ABP_SeagullProjectile_Primary_C, Damage_Max) == 0x000560, "Member 'ABP_SeagullProjectile_Primary_C::Damage_Max' has a wrong offset!");
static_assert(offsetof(ABP_SeagullProjectile_Primary_C, Damage_Mid) == 0x000568, "Member 'ABP_SeagullProjectile_Primary_C::Damage_Mid' has a wrong offset!");
static_assert(offsetof(ABP_SeagullProjectile_Primary_C, Damage_Min) == 0x000570, "Member 'ABP_SeagullProjectile_Primary_C::Damage_Min' has a wrong offset!");
static_assert(offsetof(ABP_SeagullProjectile_Primary_C, Knockback_Force_Mid) == 0x000578, "Member 'ABP_SeagullProjectile_Primary_C::Knockback_Force_Mid' has a wrong offset!");
static_assert(offsetof(ABP_SeagullProjectile_Primary_C, Knockback_Force_Min) == 0x000580, "Member 'ABP_SeagullProjectile_Primary_C::Knockback_Force_Min' has a wrong offset!");
static_assert(offsetof(ABP_SeagullProjectile_Primary_C, Friendly_Fire_Divider) == 0x000588, "Member 'ABP_SeagullProjectile_Primary_C::Friendly_Fire_Divider' has a wrong offset!");

}

