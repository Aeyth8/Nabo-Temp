#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_MessReceptacleComponent

#include "Basic.hpp"

#include "BP_MessReceptacleComponent_classes.hpp"
#include "BP_MessReceptacleComponent_parameters.hpp"


namespace SDK
{

// Function BP_MessReceptacleComponent.BP_MessReceptacleComponent_C.CLAIMED
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    Is_Claimed                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_MessReceptacleComponent_C::CLAIMED(bool* Is_Claimed)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MessReceptacleComponent_C", "CLAIMED");

	Params::BP_MessReceptacleComponent_C_CLAIMED Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Is_Claimed != nullptr)
		*Is_Claimed = Parms.Is_Claimed;
}


// Function BP_MessReceptacleComponent.BP_MessReceptacleComponent_C.Cosmetics_Overlap Begin
// (BlueprintCallable, BlueprintEvent)

void UBP_MessReceptacleComponent_C::Cosmetics_Overlap_Begin()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MessReceptacleComponent_C", "Cosmetics_Overlap Begin");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MessReceptacleComponent.BP_MessReceptacleComponent_C.Cosmetics_Overlap End
// (BlueprintCallable, BlueprintEvent)

void UBP_MessReceptacleComponent_C::Cosmetics_Overlap_End()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MessReceptacleComponent_C", "Cosmetics_Overlap End");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MessReceptacleComponent.BP_MessReceptacleComponent_C.EditorVisualizationConstruct
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UBP_MessReceptacleComponent_C::EditorVisualizationConstruct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MessReceptacleComponent_C", "EditorVisualizationConstruct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MessReceptacleComponent.BP_MessReceptacleComponent_C.Emptied__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UBP_MessReceptacleComponent_C*    Caller                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UBP_MessReceptacleComponent_C::Emptied__DelegateSignature(class UBP_MessReceptacleComponent_C* Caller)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MessReceptacleComponent_C", "Emptied__DelegateSignature");

	Params::BP_MessReceptacleComponent_C_Emptied__DelegateSignature Parms{};

	Parms.Caller = Caller;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MessReceptacleComponent.BP_MessReceptacleComponent_C.ExecuteUbergraph_BP_MessReceptacleComponent
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_MessReceptacleComponent_C::ExecuteUbergraph_BP_MessReceptacleComponent(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MessReceptacleComponent_C", "ExecuteUbergraph_BP_MessReceptacleComponent");

	Params::BP_MessReceptacleComponent_C_ExecuteUbergraph_BP_MessReceptacleComponent Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MessReceptacleComponent.BP_MessReceptacleComponent_C.Filled__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UBP_MessReceptacleComponent_C*    Caller                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UBP_MessReceptacleComponent_C::Filled__DelegateSignature(class UBP_MessReceptacleComponent_C* Caller)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MessReceptacleComponent_C", "Filled__DelegateSignature");

	Params::BP_MessReceptacleComponent_C_Filled__DelegateSignature Parms{};

	Parms.Caller = Caller;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MessReceptacleComponent.BP_MessReceptacleComponent_C.HandleIncomingItem
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          Object                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    Continue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_MessReceptacleComponent_C::HandleIncomingItem(class UObject* Object, bool* Continue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MessReceptacleComponent_C", "HandleIncomingItem");

	Params::BP_MessReceptacleComponent_C_HandleIncomingItem Parms{};

	Parms.Object = Object;

	UObject::ProcessEvent(Func, &Parms);

	if (Continue != nullptr)
		*Continue = Parms.Continue;
}


// Function BP_MessReceptacleComponent.BP_MessReceptacleComponent_C.HandleIncomingNoHeldCheck
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          Object                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    Continue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_MessReceptacleComponent_C::HandleIncomingNoHeldCheck(class UObject* Object, bool* Continue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MessReceptacleComponent_C", "HandleIncomingNoHeldCheck");

	Params::BP_MessReceptacleComponent_C_HandleIncomingNoHeldCheck Parms{};

	Parms.Object = Object;

	UObject::ProcessEvent(Func, &Parms);

	if (Continue != nullptr)
		*Continue = Parms.Continue;
}


// Function BP_MessReceptacleComponent.BP_MessReceptacleComponent_C.HandleOutgoingItem
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          Object                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    Continue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_MessReceptacleComponent_C::HandleOutgoingItem(class UObject* Object, bool* Continue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MessReceptacleComponent_C", "HandleOutgoingItem");

	Params::BP_MessReceptacleComponent_C_HandleOutgoingItem Parms{};

	Parms.Object = Object;

	UObject::ProcessEvent(Func, &Parms);

	if (Continue != nullptr)
		*Continue = Parms.Continue;
}


// Function BP_MessReceptacleComponent.BP_MessReceptacleComponent_C.HandleOutgoingItemHeldCheck
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          Object                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    Continue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_MessReceptacleComponent_C::HandleOutgoingItemHeldCheck(class UObject* Object, bool* Continue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MessReceptacleComponent_C", "HandleOutgoingItemHeldCheck");

	Params::BP_MessReceptacleComponent_C_HandleOutgoingItemHeldCheck Parms{};

	Parms.Object = Object;

	UObject::ProcessEvent(Func, &Parms);

	if (Continue != nullptr)
		*Continue = Parms.Continue;
}


// Function BP_MessReceptacleComponent.BP_MessReceptacleComponent_C.MoveObjectInPlace
// (BlueprintCallable, BlueprintEvent)

void UBP_MessReceptacleComponent_C::MoveObjectInPlace()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MessReceptacleComponent_C", "MoveObjectInPlace");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MessReceptacleComponent.BP_MessReceptacleComponent_C.On Overlap Begin
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UPrimitiveComponent*              OverlappedComponent                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class AActor*                           OtherActor                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*              OtherComp                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// int32                                   OtherBodyIndex                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bFromSweep                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FHitResult                       SweepResult                                            (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)

void UBP_MessReceptacleComponent_C::On_Overlap_Begin(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MessReceptacleComponent_C", "On Overlap Begin");

	Params::BP_MessReceptacleComponent_C_On_Overlap_Begin Parms{};

	Parms.OverlappedComponent = OverlappedComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.OtherBodyIndex = OtherBodyIndex;
	Parms.bFromSweep = bFromSweep;
	Parms.SweepResult = std::move(SweepResult);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MessReceptacleComponent.BP_MessReceptacleComponent_C.OnOverlapEnd
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UPrimitiveComponent*              OverlappedComponent                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class AActor*                           OtherActor                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*              OtherComp                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// int32                                   OtherBodyIndex                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_MessReceptacleComponent_C::OnOverlapEnd(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MessReceptacleComponent_C", "OnOverlapEnd");

	Params::BP_MessReceptacleComponent_C_OnOverlapEnd Parms{};

	Parms.OverlappedComponent = OverlappedComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.OtherBodyIndex = OtherBodyIndex;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MessReceptacleComponent.BP_MessReceptacleComponent_C.ReceiveBeginPlay
// (Event, Public, BlueprintEvent)

void UBP_MessReceptacleComponent_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MessReceptacleComponent_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MessReceptacleComponent.BP_MessReceptacleComponent_C.RetriggerOverlapBegin
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           MessItem                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UBP_MessReceptacleComponent_C::RetriggerOverlapBegin(class AActor* MessItem)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MessReceptacleComponent_C", "RetriggerOverlapBegin");

	Params::BP_MessReceptacleComponent_C_RetriggerOverlapBegin Parms{};

	Parms.MessItem = MessItem;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MessReceptacleComponent.BP_MessReceptacleComponent_C.RetriggerOverlapEnd
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Mess_Item                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UBP_MessReceptacleComponent_C::RetriggerOverlapEnd(class AActor* Mess_Item)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MessReceptacleComponent_C", "RetriggerOverlapEnd");

	Params::BP_MessReceptacleComponent_C_RetriggerOverlapEnd Parms{};

	Parms.Mess_Item = Mess_Item;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MessReceptacleComponent.BP_MessReceptacleComponent_C.Set Active
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Active_status                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_MessReceptacleComponent_C::Set_Active(bool Active_status)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MessReceptacleComponent_C", "Set Active");

	Params::BP_MessReceptacleComponent_C_Set_Active Parms{};

	Parms.Active_status = Active_status;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MessReceptacleComponent.BP_MessReceptacleComponent_C.SetPhysicsForMessItem
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    ShouldSimulate                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_MessReceptacleComponent_C::SetPhysicsForMessItem(bool ShouldSimulate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MessReceptacleComponent_C", "SetPhysicsForMessItem");

	Params::BP_MessReceptacleComponent_C_SetPhysicsForMessItem Parms{};

	Parms.ShouldSimulate = ShouldSimulate;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MessReceptacleComponent.BP_MessReceptacleComponent_C.SetVisible
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Visible                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_MessReceptacleComponent_C::SetVisible(bool Visible)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MessReceptacleComponent_C", "SetVisible");

	Params::BP_MessReceptacleComponent_C_SetVisible Parms{};

	Parms.Visible = Visible;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MessReceptacleComponent.BP_MessReceptacleComponent_C.StopLerpTimer
// (BlueprintCallable, BlueprintEvent)

void UBP_MessReceptacleComponent_C::StopLerpTimer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MessReceptacleComponent_C", "StopLerpTimer");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MessReceptacleComponent.BP_MessReceptacleComponent_C.UpdateEmissiveOnMessItem
// (BlueprintCallable, BlueprintEvent)

void UBP_MessReceptacleComponent_C::UpdateEmissiveOnMessItem()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MessReceptacleComponent_C", "UpdateEmissiveOnMessItem");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MessReceptacleComponent.BP_MessReceptacleComponent_C.UpdateVisiblity
// (BlueprintCallable, BlueprintEvent)

void UBP_MessReceptacleComponent_C::UpdateVisiblity()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MessReceptacleComponent_C", "UpdateVisiblity");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MessReceptacleComponent.BP_MessReceptacleComponent_C.VisibleChanged__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Visibility                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_MessReceptacleComponent_C::VisibleChanged__DelegateSignature(bool Visibility)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MessReceptacleComponent_C", "VisibleChanged__DelegateSignature");

	Params::BP_MessReceptacleComponent_C_VisibleChanged__DelegateSignature Parms{};

	Parms.Visibility = Visibility;

	UObject::ProcessEvent(Func, &Parms);
}

}

