#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_RadialInputPlayerController

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_classes.hpp"
#include "EJoystickTypes_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_RadialInputPlayerController.BP_RadialInputPlayerController_C
// 0x0018 (0x0870 - 0x0858)
class ABP_RadialInputPlayerController_C final : public APlayerController
{
public:
	struct FVector2D                              JoystickLookInput;                                 // 0x0858(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bUsingJoystick;                                    // 0x0868(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void GetJoystickDirection(EJoystickTypes Stick, struct FVector2D* StickInput);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_RadialInputPlayerController_C">();
	}
	static class ABP_RadialInputPlayerController_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_RadialInputPlayerController_C>();
	}
};
static_assert(alignof(ABP_RadialInputPlayerController_C) == 0x000008, "Wrong alignment on ABP_RadialInputPlayerController_C");
static_assert(sizeof(ABP_RadialInputPlayerController_C) == 0x000870, "Wrong size on ABP_RadialInputPlayerController_C");
static_assert(offsetof(ABP_RadialInputPlayerController_C, JoystickLookInput) == 0x000858, "Member 'ABP_RadialInputPlayerController_C::JoystickLookInput' has a wrong offset!");
static_assert(offsetof(ABP_RadialInputPlayerController_C, bUsingJoystick) == 0x000868, "Member 'ABP_RadialInputPlayerController_C::bUsingJoystick' has a wrong offset!");

}

