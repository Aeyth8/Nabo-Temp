#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GA_Jump

#include "Basic.hpp"

#include "GameplayAbilities_structs.hpp"
#include "Engine_structs.hpp"
#include "GASIW_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass GA_Jump.GA_Jump_C
// 0x0030 (0x0490 - 0x0460)
class UGA_Jump_C final : public UGameplayAbilityIW
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0460(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct FActiveGameplayEffectHandle            JumpEffectHandle;                                  // 0x0468(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UAbilityTask_WaitInputRelease*          Async_Task;                                        // 0x0470(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UAbilityTask_RepeatContinuous*          LandedCheckTimer;                                  // 0x0478(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class ACharacter*                             OwningCharacter;                                   // 0x0480(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                          BlockFirstTimerCall;                               // 0x0488(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_GA_Jump(int32 EntryPoint);
	void InvalidHandle_0876B68B48C1169D5C8AD0940CE60BAC(const struct FGameplayEffectRemovalInfo& GameplayEffectRemovalInfo);
	void K2_ActivateAbility();
	void K2_OnAbilityAdded();
	void K2_OnAbilityFailed(const struct FGameplayTagContainer& FailureReason);
	void K2_OnEndAbility(bool bWasCancelled);
	void OnFinished_5375BC104575A2FD8B96DB8064DBB2ED(int32 ActionNumber);
	void OnPerformAction_5375BC104575A2FD8B96DB8064DBB2ED(int32 ActionNumber);
	void OnRelease_B13E73C1477753C838499FBA4B115F16(float TimeHeld);
	void OnRemoved_0876B68B48C1169D5C8AD0940CE60BAC(const struct FGameplayEffectRemovalInfo& GameplayEffectRemovalInfo);
	void ToggleJumpOnCharacter(bool Enabled);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"GA_Jump_C">();
	}
	static class UGA_Jump_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGA_Jump_C>();
	}
};
static_assert(alignof(UGA_Jump_C) == 0x000010, "Wrong alignment on UGA_Jump_C");
static_assert(sizeof(UGA_Jump_C) == 0x000490, "Wrong size on UGA_Jump_C");
static_assert(offsetof(UGA_Jump_C, UberGraphFrame) == 0x000460, "Member 'UGA_Jump_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UGA_Jump_C, JumpEffectHandle) == 0x000468, "Member 'UGA_Jump_C::JumpEffectHandle' has a wrong offset!");
static_assert(offsetof(UGA_Jump_C, Async_Task) == 0x000470, "Member 'UGA_Jump_C::Async_Task' has a wrong offset!");
static_assert(offsetof(UGA_Jump_C, LandedCheckTimer) == 0x000478, "Member 'UGA_Jump_C::LandedCheckTimer' has a wrong offset!");
static_assert(offsetof(UGA_Jump_C, OwningCharacter) == 0x000480, "Member 'UGA_Jump_C::OwningCharacter' has a wrong offset!");
static_assert(offsetof(UGA_Jump_C, BlockFirstTimerCall) == 0x000488, "Member 'UGA_Jump_C::BlockFirstTimerCall' has a wrong offset!");

}

