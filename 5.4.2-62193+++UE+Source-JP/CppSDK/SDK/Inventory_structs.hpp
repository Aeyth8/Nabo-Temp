#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Inventory

#include "Basic.hpp"

#include "NetCore_structs.hpp"


namespace SDK
{

// ScriptStruct Inventory.ItemInstanceArrayEntry
// 0x0014 (0x0020 - 0x000C)
struct FItemInstanceArrayEntry final : public FFastArraySerializerItem
{
public:
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UItemInstance*                          Instance;                                          // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         StackCount;                                        // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         LastObservedCount;                                 // 0x001C(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FItemInstanceArrayEntry) == 0x000008, "Wrong alignment on FItemInstanceArrayEntry");
static_assert(sizeof(FItemInstanceArrayEntry) == 0x000020, "Wrong size on FItemInstanceArrayEntry");
static_assert(offsetof(FItemInstanceArrayEntry, Instance) == 0x000010, "Member 'FItemInstanceArrayEntry::Instance' has a wrong offset!");
static_assert(offsetof(FItemInstanceArrayEntry, StackCount) == 0x000018, "Member 'FItemInstanceArrayEntry::StackCount' has a wrong offset!");
static_assert(offsetof(FItemInstanceArrayEntry, LastObservedCount) == 0x00001C, "Member 'FItemInstanceArrayEntry::LastObservedCount' has a wrong offset!");

// ScriptStruct Inventory.ItemInstanceArray
// 0x0038 (0x0140 - 0x0108)
struct FItemInstanceArray final : public FFastArraySerializer
{
public:
	uint8                                         Pad_108[0x20];                                     // 0x0108(0x0020)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FItemInstanceArrayEntry>        Items;                                             // 0x0128(0x0010)(ZeroConstructor, NativeAccessSpecifierPrivate)
	class UActorComponent*                        Owner;                                             // 0x0138(0x0008)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
};
static_assert(alignof(FItemInstanceArray) == 0x000008, "Wrong alignment on FItemInstanceArray");
static_assert(sizeof(FItemInstanceArray) == 0x000140, "Wrong size on FItemInstanceArray");
static_assert(offsetof(FItemInstanceArray, Items) == 0x000128, "Member 'FItemInstanceArray::Items' has a wrong offset!");
static_assert(offsetof(FItemInstanceArray, Owner) == 0x000138, "Member 'FItemInstanceArray::Owner' has a wrong offset!");

// ScriptStruct Inventory.InventoryChangedGameplayMessage
// 0x0038 (0x0038 - 0x0000)
struct FInventoryChangedGameplayMessage final
{
public:
	TWeakObjectPtr<class UInventoryComponent>     InventoryComponent;                                // 0x0000(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UItemDefinition>         ChangedItem;                                       // 0x0008(0x0028)(BlueprintVisible, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          InventoryFull;                                     // 0x0030(0x0001)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          AmmoFull;                                          // 0x0031(0x0001)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_32[0x6];                                       // 0x0032(0x0006)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FInventoryChangedGameplayMessage) == 0x000008, "Wrong alignment on FInventoryChangedGameplayMessage");
static_assert(sizeof(FInventoryChangedGameplayMessage) == 0x000038, "Wrong size on FInventoryChangedGameplayMessage");
static_assert(offsetof(FInventoryChangedGameplayMessage, InventoryComponent) == 0x000000, "Member 'FInventoryChangedGameplayMessage::InventoryComponent' has a wrong offset!");
static_assert(offsetof(FInventoryChangedGameplayMessage, ChangedItem) == 0x000008, "Member 'FInventoryChangedGameplayMessage::ChangedItem' has a wrong offset!");
static_assert(offsetof(FInventoryChangedGameplayMessage, InventoryFull) == 0x000030, "Member 'FInventoryChangedGameplayMessage::InventoryFull' has a wrong offset!");
static_assert(offsetof(FInventoryChangedGameplayMessage, AmmoFull) == 0x000031, "Member 'FInventoryChangedGameplayMessage::AmmoFull' has a wrong offset!");

}

