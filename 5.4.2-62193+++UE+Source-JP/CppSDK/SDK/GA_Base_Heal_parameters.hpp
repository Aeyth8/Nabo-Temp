#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GA_Base_Heal

#include "Basic.hpp"

#include "GASIW_structs.hpp"
#include "JP_structs.hpp"
#include "GameplayAbilities_structs.hpp"
#include "Engine_structs.hpp"
#include "GameplayTags_structs.hpp"


namespace SDK::Params
{

// Function GA_Base_Heal.GA_Base_Heal_C.ApplyBuff
// 0x0278 (0x0278 - 0x0000)
struct GA_Base_Heal_C_ApplyBuff final
{
public:
	struct FGameplayEffectSpecHandle              AdditionalBuffSpecHandle;                          // 0x0000(0x0010)(Edit, BlueprintVisible)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FActiveGameplayEffectHandle            CallFunc_K2_ApplyGameplayEffectSpecToOwner_ReturnValue; // 0x0020(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FGameplayEffectContextHandle           CallFunc_GetEffectContext_ReturnValue;             // 0x0028(0x0018)()
	class AActor*                                 CallFunc_GetOwningActorFromActorInfo_ReturnValue;  // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_MakeHitResult_ReturnValue;                // 0x0048(0x00F8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class APawn*                                  K2Node_DynamicCast_AsPawn;                         // 0x0140(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0148(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_149[0x3];                                      // 0x0149(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetTagStackCount_ReturnValue;             // 0x014C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerStateJP_Match*                   K2Node_DynamicCast_AsPlayer_State_JP_Match;        // 0x0150(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0158(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_159[0x7];                                      // 0x0159(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x0160(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FCombatParticipant                     CallFunc_CreateCombatParticipantFromPlayer_ReturnValue; // 0x0168(0x0060)()
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x01C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x01CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UItemInstance*                          CallFunc_GetAssociatedItem_ReturnValue;            // 0x01D0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_LoadAsset_Blocking_ReturnValue;           // 0x01D8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UItemDefinition*                        K2Node_DynamicCast_AsItem_Definition;              // 0x01E0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x01E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E9[0x3];                                      // 0x01E9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x01EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UItemAction*                            CallFunc_Array_Get_Item;                           // 0x01F0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x01F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1F9[0x7];                                      // 0x01F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UItemAction_AppliedBuffs*               K2Node_DynamicCast_AsItem_Action_Applied_Buffs;    // 0x0200(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0208(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_209[0x3];                                      // 0x0209(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x020C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FAppliedBuffInfo                       CallFunc_Array_Get_Item_1;                         // 0x0210(0x0010)(NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0220(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_221[0x7];                                      // 0x0221(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayEffectSpecHandle              CallFunc_MakeOutgoingGameplayEffectSpec_ReturnValue; // 0x0228(0x0010)()
	class UClass*                                 K2Node_ClassDynamicCast_AsBP_GE_Heal;              // 0x0238(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ClassDynamicCast_bSuccess;                  // 0x0240(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_241[0x7];                                      // 0x0241(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayEffectSpecHandle              CallFunc_MakeOutgoingGameplayEffectSpec_ReturnValue_1; // 0x0248(0x0010)()
	struct FGameplayEffectSpecHandle              CallFunc_AssignTagSetByCallerMagnitude_ReturnValue; // 0x0258(0x0010)()
	struct FActiveGameplayEffectHandle            CallFunc_K2_ApplyGameplayEffectSpecToOwner_ReturnValue_1; // 0x0268(0x0008)(NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_AssignTagSetByCallerMagnitude_Magnitude_ImplicitCast; // 0x0270(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_Base_Heal_C_ApplyBuff) == 0x000008, "Wrong alignment on GA_Base_Heal_C_ApplyBuff");
static_assert(sizeof(GA_Base_Heal_C_ApplyBuff) == 0x000278, "Wrong size on GA_Base_Heal_C_ApplyBuff");
static_assert(offsetof(GA_Base_Heal_C_ApplyBuff, AdditionalBuffSpecHandle) == 0x000000, "Member 'GA_Base_Heal_C_ApplyBuff::AdditionalBuffSpecHandle' has a wrong offset!");
static_assert(offsetof(GA_Base_Heal_C_ApplyBuff, Temp_int_Array_Index_Variable) == 0x000010, "Member 'GA_Base_Heal_C_ApplyBuff::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(GA_Base_Heal_C_ApplyBuff, Temp_int_Loop_Counter_Variable) == 0x000014, "Member 'GA_Base_Heal_C_ApplyBuff::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(GA_Base_Heal_C_ApplyBuff, CallFunc_Add_IntInt_ReturnValue) == 0x000018, "Member 'GA_Base_Heal_C_ApplyBuff::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Base_Heal_C_ApplyBuff, Temp_int_Array_Index_Variable_1) == 0x00001C, "Member 'GA_Base_Heal_C_ApplyBuff::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(GA_Base_Heal_C_ApplyBuff, CallFunc_K2_ApplyGameplayEffectSpecToOwner_ReturnValue) == 0x000020, "Member 'GA_Base_Heal_C_ApplyBuff::CallFunc_K2_ApplyGameplayEffectSpecToOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Base_Heal_C_ApplyBuff, CallFunc_GetEffectContext_ReturnValue) == 0x000028, "Member 'GA_Base_Heal_C_ApplyBuff::CallFunc_GetEffectContext_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Base_Heal_C_ApplyBuff, CallFunc_GetOwningActorFromActorInfo_ReturnValue) == 0x000040, "Member 'GA_Base_Heal_C_ApplyBuff::CallFunc_GetOwningActorFromActorInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Base_Heal_C_ApplyBuff, CallFunc_MakeHitResult_ReturnValue) == 0x000048, "Member 'GA_Base_Heal_C_ApplyBuff::CallFunc_MakeHitResult_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Base_Heal_C_ApplyBuff, K2Node_DynamicCast_AsPawn) == 0x000140, "Member 'GA_Base_Heal_C_ApplyBuff::K2Node_DynamicCast_AsPawn' has a wrong offset!");
static_assert(offsetof(GA_Base_Heal_C_ApplyBuff, K2Node_DynamicCast_bSuccess) == 0x000148, "Member 'GA_Base_Heal_C_ApplyBuff::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(GA_Base_Heal_C_ApplyBuff, CallFunc_GetTagStackCount_ReturnValue) == 0x00014C, "Member 'GA_Base_Heal_C_ApplyBuff::CallFunc_GetTagStackCount_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Base_Heal_C_ApplyBuff, K2Node_DynamicCast_AsPlayer_State_JP_Match) == 0x000150, "Member 'GA_Base_Heal_C_ApplyBuff::K2Node_DynamicCast_AsPlayer_State_JP_Match' has a wrong offset!");
static_assert(offsetof(GA_Base_Heal_C_ApplyBuff, K2Node_DynamicCast_bSuccess_1) == 0x000158, "Member 'GA_Base_Heal_C_ApplyBuff::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(GA_Base_Heal_C_ApplyBuff, CallFunc_Conv_IntToDouble_ReturnValue) == 0x000160, "Member 'GA_Base_Heal_C_ApplyBuff::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Base_Heal_C_ApplyBuff, CallFunc_CreateCombatParticipantFromPlayer_ReturnValue) == 0x000168, "Member 'GA_Base_Heal_C_ApplyBuff::CallFunc_CreateCombatParticipantFromPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Base_Heal_C_ApplyBuff, Temp_int_Loop_Counter_Variable_1) == 0x0001C8, "Member 'GA_Base_Heal_C_ApplyBuff::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(GA_Base_Heal_C_ApplyBuff, CallFunc_Add_IntInt_ReturnValue_1) == 0x0001CC, "Member 'GA_Base_Heal_C_ApplyBuff::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_Base_Heal_C_ApplyBuff, CallFunc_GetAssociatedItem_ReturnValue) == 0x0001D0, "Member 'GA_Base_Heal_C_ApplyBuff::CallFunc_GetAssociatedItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Base_Heal_C_ApplyBuff, CallFunc_LoadAsset_Blocking_ReturnValue) == 0x0001D8, "Member 'GA_Base_Heal_C_ApplyBuff::CallFunc_LoadAsset_Blocking_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Base_Heal_C_ApplyBuff, K2Node_DynamicCast_AsItem_Definition) == 0x0001E0, "Member 'GA_Base_Heal_C_ApplyBuff::K2Node_DynamicCast_AsItem_Definition' has a wrong offset!");
static_assert(offsetof(GA_Base_Heal_C_ApplyBuff, K2Node_DynamicCast_bSuccess_2) == 0x0001E8, "Member 'GA_Base_Heal_C_ApplyBuff::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(GA_Base_Heal_C_ApplyBuff, CallFunc_Array_Length_ReturnValue) == 0x0001EC, "Member 'GA_Base_Heal_C_ApplyBuff::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Base_Heal_C_ApplyBuff, CallFunc_Array_Get_Item) == 0x0001F0, "Member 'GA_Base_Heal_C_ApplyBuff::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(GA_Base_Heal_C_ApplyBuff, CallFunc_Less_IntInt_ReturnValue) == 0x0001F8, "Member 'GA_Base_Heal_C_ApplyBuff::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Base_Heal_C_ApplyBuff, K2Node_DynamicCast_AsItem_Action_Applied_Buffs) == 0x000200, "Member 'GA_Base_Heal_C_ApplyBuff::K2Node_DynamicCast_AsItem_Action_Applied_Buffs' has a wrong offset!");
static_assert(offsetof(GA_Base_Heal_C_ApplyBuff, K2Node_DynamicCast_bSuccess_3) == 0x000208, "Member 'GA_Base_Heal_C_ApplyBuff::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(GA_Base_Heal_C_ApplyBuff, CallFunc_Array_Length_ReturnValue_1) == 0x00020C, "Member 'GA_Base_Heal_C_ApplyBuff::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_Base_Heal_C_ApplyBuff, CallFunc_Array_Get_Item_1) == 0x000210, "Member 'GA_Base_Heal_C_ApplyBuff::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(GA_Base_Heal_C_ApplyBuff, CallFunc_Less_IntInt_ReturnValue_1) == 0x000220, "Member 'GA_Base_Heal_C_ApplyBuff::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_Base_Heal_C_ApplyBuff, CallFunc_MakeOutgoingGameplayEffectSpec_ReturnValue) == 0x000228, "Member 'GA_Base_Heal_C_ApplyBuff::CallFunc_MakeOutgoingGameplayEffectSpec_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Base_Heal_C_ApplyBuff, K2Node_ClassDynamicCast_AsBP_GE_Heal) == 0x000238, "Member 'GA_Base_Heal_C_ApplyBuff::K2Node_ClassDynamicCast_AsBP_GE_Heal' has a wrong offset!");
static_assert(offsetof(GA_Base_Heal_C_ApplyBuff, K2Node_ClassDynamicCast_bSuccess) == 0x000240, "Member 'GA_Base_Heal_C_ApplyBuff::K2Node_ClassDynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(GA_Base_Heal_C_ApplyBuff, CallFunc_MakeOutgoingGameplayEffectSpec_ReturnValue_1) == 0x000248, "Member 'GA_Base_Heal_C_ApplyBuff::CallFunc_MakeOutgoingGameplayEffectSpec_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_Base_Heal_C_ApplyBuff, CallFunc_AssignTagSetByCallerMagnitude_ReturnValue) == 0x000258, "Member 'GA_Base_Heal_C_ApplyBuff::CallFunc_AssignTagSetByCallerMagnitude_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Base_Heal_C_ApplyBuff, CallFunc_K2_ApplyGameplayEffectSpecToOwner_ReturnValue_1) == 0x000268, "Member 'GA_Base_Heal_C_ApplyBuff::CallFunc_K2_ApplyGameplayEffectSpecToOwner_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_Base_Heal_C_ApplyBuff, CallFunc_AssignTagSetByCallerMagnitude_Magnitude_ImplicitCast) == 0x000270, "Member 'GA_Base_Heal_C_ApplyBuff::CallFunc_AssignTagSetByCallerMagnitude_Magnitude_ImplicitCast' has a wrong offset!");

// Function GA_Base_Heal.GA_Base_Heal_C.ExecuteUbergraph_GA_Base_Heal
// 0x0120 (0x0120 - 0x0000)
struct GA_Base_Heal_C_ExecuteUbergraph_GA_Base_Heal final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0004(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAbilityTask_WaitDelay*                 CallFunc_WaitDelay_ReturnValue;                    // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bWasCancelled;                        // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_23[0x5];                                       // 0x0023(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetEffectCauser_Actor;                    // 0x0028(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	struct FGameplayCueParameters                 CallFunc_MakeGameplayCueParameters_ReturnValue;    // 0x0030(0x00D8)(ContainsInstancedReference)
	bool                                          CallFunc_K2_CommitAbility_ReturnValue;             // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_HasAuthority_ReturnValue;              // 0x0109(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_10A[0x6];                                      // 0x010A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimMontage*                           CallFunc_GetMontageFromCount_MontageOutputFPP;     // 0x0110(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           CallFunc_GetMontageFromCount_MontageOutputTPP;     // 0x0118(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_Base_Heal_C_ExecuteUbergraph_GA_Base_Heal) == 0x000008, "Wrong alignment on GA_Base_Heal_C_ExecuteUbergraph_GA_Base_Heal");
static_assert(sizeof(GA_Base_Heal_C_ExecuteUbergraph_GA_Base_Heal) == 0x000120, "Wrong size on GA_Base_Heal_C_ExecuteUbergraph_GA_Base_Heal");
static_assert(offsetof(GA_Base_Heal_C_ExecuteUbergraph_GA_Base_Heal, EntryPoint) == 0x000000, "Member 'GA_Base_Heal_C_ExecuteUbergraph_GA_Base_Heal::EntryPoint' has a wrong offset!");
static_assert(offsetof(GA_Base_Heal_C_ExecuteUbergraph_GA_Base_Heal, K2Node_CreateDelegate_OutputDelegate) == 0x000004, "Member 'GA_Base_Heal_C_ExecuteUbergraph_GA_Base_Heal::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(GA_Base_Heal_C_ExecuteUbergraph_GA_Base_Heal, CallFunc_WaitDelay_ReturnValue) == 0x000018, "Member 'GA_Base_Heal_C_ExecuteUbergraph_GA_Base_Heal::CallFunc_WaitDelay_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Base_Heal_C_ExecuteUbergraph_GA_Base_Heal, CallFunc_IsValid_ReturnValue) == 0x000020, "Member 'GA_Base_Heal_C_ExecuteUbergraph_GA_Base_Heal::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Base_Heal_C_ExecuteUbergraph_GA_Base_Heal, K2Node_Event_bWasCancelled) == 0x000021, "Member 'GA_Base_Heal_C_ExecuteUbergraph_GA_Base_Heal::K2Node_Event_bWasCancelled' has a wrong offset!");
static_assert(offsetof(GA_Base_Heal_C_ExecuteUbergraph_GA_Base_Heal, CallFunc_IsValid_ReturnValue_1) == 0x000022, "Member 'GA_Base_Heal_C_ExecuteUbergraph_GA_Base_Heal::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_Base_Heal_C_ExecuteUbergraph_GA_Base_Heal, CallFunc_GetEffectCauser_Actor) == 0x000028, "Member 'GA_Base_Heal_C_ExecuteUbergraph_GA_Base_Heal::CallFunc_GetEffectCauser_Actor' has a wrong offset!");
static_assert(offsetof(GA_Base_Heal_C_ExecuteUbergraph_GA_Base_Heal, CallFunc_MakeGameplayCueParameters_ReturnValue) == 0x000030, "Member 'GA_Base_Heal_C_ExecuteUbergraph_GA_Base_Heal::CallFunc_MakeGameplayCueParameters_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Base_Heal_C_ExecuteUbergraph_GA_Base_Heal, CallFunc_K2_CommitAbility_ReturnValue) == 0x000108, "Member 'GA_Base_Heal_C_ExecuteUbergraph_GA_Base_Heal::CallFunc_K2_CommitAbility_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Base_Heal_C_ExecuteUbergraph_GA_Base_Heal, CallFunc_K2_HasAuthority_ReturnValue) == 0x000109, "Member 'GA_Base_Heal_C_ExecuteUbergraph_GA_Base_Heal::CallFunc_K2_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Base_Heal_C_ExecuteUbergraph_GA_Base_Heal, CallFunc_GetMontageFromCount_MontageOutputFPP) == 0x000110, "Member 'GA_Base_Heal_C_ExecuteUbergraph_GA_Base_Heal::CallFunc_GetMontageFromCount_MontageOutputFPP' has a wrong offset!");
static_assert(offsetof(GA_Base_Heal_C_ExecuteUbergraph_GA_Base_Heal, CallFunc_GetMontageFromCount_MontageOutputTPP) == 0x000118, "Member 'GA_Base_Heal_C_ExecuteUbergraph_GA_Base_Heal::CallFunc_GetMontageFromCount_MontageOutputTPP' has a wrong offset!");

// Function GA_Base_Heal.GA_Base_Heal_C.GetEffectCauser
// 0x0130 (0x0130 - 0x0000)
struct GA_Base_Heal_C_GetEffectCauser final
{
public:
	class AActor*                                 Actor;                                             // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class UEquipmentInstance*                     CallFunc_GetAssociatedEquipment_ReturnValue;       // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBP_EquipmentInstance_C*                K2Node_DynamicCast_AsBP_Equipment_Instance;        // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FSpawnedActorData>              CallFunc_GetSpawnedActors_ReturnValue;             // 0x0020(0x0010)(ReferenceParm)
	struct FSpawnedActorData                      CallFunc_Array_Get_Item;                           // 0x0030(0x0100)(NoDestructor)
};
static_assert(alignof(GA_Base_Heal_C_GetEffectCauser) == 0x000010, "Wrong alignment on GA_Base_Heal_C_GetEffectCauser");
static_assert(sizeof(GA_Base_Heal_C_GetEffectCauser) == 0x000130, "Wrong size on GA_Base_Heal_C_GetEffectCauser");
static_assert(offsetof(GA_Base_Heal_C_GetEffectCauser, Actor) == 0x000000, "Member 'GA_Base_Heal_C_GetEffectCauser::Actor' has a wrong offset!");
static_assert(offsetof(GA_Base_Heal_C_GetEffectCauser, CallFunc_GetAssociatedEquipment_ReturnValue) == 0x000008, "Member 'GA_Base_Heal_C_GetEffectCauser::CallFunc_GetAssociatedEquipment_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Base_Heal_C_GetEffectCauser, K2Node_DynamicCast_AsBP_Equipment_Instance) == 0x000010, "Member 'GA_Base_Heal_C_GetEffectCauser::K2Node_DynamicCast_AsBP_Equipment_Instance' has a wrong offset!");
static_assert(offsetof(GA_Base_Heal_C_GetEffectCauser, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'GA_Base_Heal_C_GetEffectCauser::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(GA_Base_Heal_C_GetEffectCauser, CallFunc_GetSpawnedActors_ReturnValue) == 0x000020, "Member 'GA_Base_Heal_C_GetEffectCauser::CallFunc_GetSpawnedActors_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Base_Heal_C_GetEffectCauser, CallFunc_Array_Get_Item) == 0x000030, "Member 'GA_Base_Heal_C_GetEffectCauser::CallFunc_Array_Get_Item' has a wrong offset!");

// Function GA_Base_Heal.GA_Base_Heal_C.GetSpawnedActor
// 0x0120 (0x0120 - 0x0000)
struct GA_Base_Heal_C_GetSpawnedActor final
{
public:
	class AActor*                                 Actor;                                             // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UEquipmentInstance*                     CallFunc_GetAssociatedEquipment_ReturnValue;       // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<struct FSpawnedActorData>              CallFunc_GetSpawnedActors_ReturnValue;             // 0x0010(0x0010)(ReferenceParm)
	struct FSpawnedActorData                      CallFunc_Array_Get_Item;                           // 0x0020(0x0100)(NoDestructor)
};
static_assert(alignof(GA_Base_Heal_C_GetSpawnedActor) == 0x000010, "Wrong alignment on GA_Base_Heal_C_GetSpawnedActor");
static_assert(sizeof(GA_Base_Heal_C_GetSpawnedActor) == 0x000120, "Wrong size on GA_Base_Heal_C_GetSpawnedActor");
static_assert(offsetof(GA_Base_Heal_C_GetSpawnedActor, Actor) == 0x000000, "Member 'GA_Base_Heal_C_GetSpawnedActor::Actor' has a wrong offset!");
static_assert(offsetof(GA_Base_Heal_C_GetSpawnedActor, CallFunc_GetAssociatedEquipment_ReturnValue) == 0x000008, "Member 'GA_Base_Heal_C_GetSpawnedActor::CallFunc_GetAssociatedEquipment_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Base_Heal_C_GetSpawnedActor, CallFunc_GetSpawnedActors_ReturnValue) == 0x000010, "Member 'GA_Base_Heal_C_GetSpawnedActor::CallFunc_GetSpawnedActors_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Base_Heal_C_GetSpawnedActor, CallFunc_Array_Get_Item) == 0x000020, "Member 'GA_Base_Heal_C_GetSpawnedActor::CallFunc_Array_Get_Item' has a wrong offset!");

// Function GA_Base_Heal.GA_Base_Heal_C.K2_OnEndAbility
// 0x0001 (0x0001 - 0x0000)
struct GA_Base_Heal_C_K2_OnEndAbility final
{
public:
	bool                                          bWasCancelled;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_Base_Heal_C_K2_OnEndAbility) == 0x000001, "Wrong alignment on GA_Base_Heal_C_K2_OnEndAbility");
static_assert(sizeof(GA_Base_Heal_C_K2_OnEndAbility) == 0x000001, "Wrong size on GA_Base_Heal_C_K2_OnEndAbility");
static_assert(offsetof(GA_Base_Heal_C_K2_OnEndAbility, bWasCancelled) == 0x000000, "Member 'GA_Base_Heal_C_K2_OnEndAbility::bWasCancelled' has a wrong offset!");

// Function GA_Base_Heal.GA_Base_Heal_C.CanApplyHeal
// 0x0030 (0x0030 - 0x0000)
struct GA_Base_Heal_C_CanApplyHeal final
{
public:
	class UAbilitySystemComponent*                Actor_ACS;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetFloatAttributeBaseFromAbilitySystemComponent_bSuccessfullyFoundAttribute; // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A[0x2];                                        // 0x000A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetFloatAttributeBaseFromAbilitySystemComponent_ReturnValue; // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetFloatAttributeFromAbilitySystemComponent_bSuccessfullyFoundAttribute; // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetFloatAttributeFromAbilitySystemComponent_ReturnValue; // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Less_DoubleDouble_B_ImplicitCast;         // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Less_DoubleDouble_A_ImplicitCast;         // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_Base_Heal_C_CanApplyHeal) == 0x000008, "Wrong alignment on GA_Base_Heal_C_CanApplyHeal");
static_assert(sizeof(GA_Base_Heal_C_CanApplyHeal) == 0x000030, "Wrong size on GA_Base_Heal_C_CanApplyHeal");
static_assert(offsetof(GA_Base_Heal_C_CanApplyHeal, Actor_ACS) == 0x000000, "Member 'GA_Base_Heal_C_CanApplyHeal::Actor_ACS' has a wrong offset!");
static_assert(offsetof(GA_Base_Heal_C_CanApplyHeal, ReturnValue) == 0x000008, "Member 'GA_Base_Heal_C_CanApplyHeal::ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Base_Heal_C_CanApplyHeal, CallFunc_GetFloatAttributeBaseFromAbilitySystemComponent_bSuccessfullyFoundAttribute) == 0x000009, "Member 'GA_Base_Heal_C_CanApplyHeal::CallFunc_GetFloatAttributeBaseFromAbilitySystemComponent_bSuccessfullyFoundAttribute' has a wrong offset!");
static_assert(offsetof(GA_Base_Heal_C_CanApplyHeal, CallFunc_GetFloatAttributeBaseFromAbilitySystemComponent_ReturnValue) == 0x00000C, "Member 'GA_Base_Heal_C_CanApplyHeal::CallFunc_GetFloatAttributeBaseFromAbilitySystemComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Base_Heal_C_CanApplyHeal, CallFunc_GetFloatAttributeFromAbilitySystemComponent_bSuccessfullyFoundAttribute) == 0x000010, "Member 'GA_Base_Heal_C_CanApplyHeal::CallFunc_GetFloatAttributeFromAbilitySystemComponent_bSuccessfullyFoundAttribute' has a wrong offset!");
static_assert(offsetof(GA_Base_Heal_C_CanApplyHeal, CallFunc_GetFloatAttributeFromAbilitySystemComponent_ReturnValue) == 0x000014, "Member 'GA_Base_Heal_C_CanApplyHeal::CallFunc_GetFloatAttributeFromAbilitySystemComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Base_Heal_C_CanApplyHeal, CallFunc_Less_DoubleDouble_ReturnValue) == 0x000018, "Member 'GA_Base_Heal_C_CanApplyHeal::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Base_Heal_C_CanApplyHeal, CallFunc_Less_DoubleDouble_B_ImplicitCast) == 0x000020, "Member 'GA_Base_Heal_C_CanApplyHeal::CallFunc_Less_DoubleDouble_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(GA_Base_Heal_C_CanApplyHeal, CallFunc_Less_DoubleDouble_A_ImplicitCast) == 0x000028, "Member 'GA_Base_Heal_C_CanApplyHeal::CallFunc_Less_DoubleDouble_A_ImplicitCast' has a wrong offset!");

// Function GA_Base_Heal.GA_Base_Heal_C.CheckTagStackExists
// 0x0060 (0x0060 - 0x0000)
struct GA_Base_Heal_C_CheckTagStackExists final
{
public:
	struct FGameplayTag                           Tag;                                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	bool                                          DoesExist;                                         // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_GetTagName_ReturnValue;                   // 0x000C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UItemInstance*                          CallFunc_GetAssociatedItem_ReturnValue;            // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_NameToString_ReturnValue;            // 0x0020(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetTagStackCount_ReturnValue;             // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0038(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0050(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_Base_Heal_C_CheckTagStackExists) == 0x000008, "Wrong alignment on GA_Base_Heal_C_CheckTagStackExists");
static_assert(sizeof(GA_Base_Heal_C_CheckTagStackExists) == 0x000060, "Wrong size on GA_Base_Heal_C_CheckTagStackExists");
static_assert(offsetof(GA_Base_Heal_C_CheckTagStackExists, Tag) == 0x000000, "Member 'GA_Base_Heal_C_CheckTagStackExists::Tag' has a wrong offset!");
static_assert(offsetof(GA_Base_Heal_C_CheckTagStackExists, DoesExist) == 0x000008, "Member 'GA_Base_Heal_C_CheckTagStackExists::DoesExist' has a wrong offset!");
static_assert(offsetof(GA_Base_Heal_C_CheckTagStackExists, CallFunc_GetTagName_ReturnValue) == 0x00000C, "Member 'GA_Base_Heal_C_CheckTagStackExists::CallFunc_GetTagName_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Base_Heal_C_CheckTagStackExists, CallFunc_GetAssociatedItem_ReturnValue) == 0x000018, "Member 'GA_Base_Heal_C_CheckTagStackExists::CallFunc_GetAssociatedItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Base_Heal_C_CheckTagStackExists, CallFunc_Conv_NameToString_ReturnValue) == 0x000020, "Member 'GA_Base_Heal_C_CheckTagStackExists::CallFunc_Conv_NameToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Base_Heal_C_CheckTagStackExists, CallFunc_GetTagStackCount_ReturnValue) == 0x000030, "Member 'GA_Base_Heal_C_CheckTagStackExists::CallFunc_GetTagStackCount_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Base_Heal_C_CheckTagStackExists, CallFunc_Concat_StrStr_ReturnValue) == 0x000038, "Member 'GA_Base_Heal_C_CheckTagStackExists::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Base_Heal_C_CheckTagStackExists, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000048, "Member 'GA_Base_Heal_C_CheckTagStackExists::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Base_Heal_C_CheckTagStackExists, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000050, "Member 'GA_Base_Heal_C_CheckTagStackExists::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");

// Function GA_Base_Heal.GA_Base_Heal_C.DisplayFullHealthMessage_Auth
// 0x0040 (0x0040 - 0x0000)
struct GA_Base_Heal_C_DisplayFullHealthMessage_Auth final
{
public:
	class ABP_ResidentCharacter_C*                BP_ResidentCharacter;                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_MakeLiteralText_ReturnValue;              // 0x0008(0x0010)()
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x0018(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class AController*                            CallFunc_GetController_ReturnValue;                // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      K2Node_DynamicCast_AsPlayer_Controller;            // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_Base_Heal_C_DisplayFullHealthMessage_Auth) == 0x000008, "Wrong alignment on GA_Base_Heal_C_DisplayFullHealthMessage_Auth");
static_assert(sizeof(GA_Base_Heal_C_DisplayFullHealthMessage_Auth) == 0x000040, "Wrong size on GA_Base_Heal_C_DisplayFullHealthMessage_Auth");
static_assert(offsetof(GA_Base_Heal_C_DisplayFullHealthMessage_Auth, BP_ResidentCharacter) == 0x000000, "Member 'GA_Base_Heal_C_DisplayFullHealthMessage_Auth::BP_ResidentCharacter' has a wrong offset!");
static_assert(offsetof(GA_Base_Heal_C_DisplayFullHealthMessage_Auth, CallFunc_MakeLiteralText_ReturnValue) == 0x000008, "Member 'GA_Base_Heal_C_DisplayFullHealthMessage_Auth::CallFunc_MakeLiteralText_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Base_Heal_C_DisplayFullHealthMessage_Auth, CallFunc_Conv_TextToString_ReturnValue) == 0x000018, "Member 'GA_Base_Heal_C_DisplayFullHealthMessage_Auth::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Base_Heal_C_DisplayFullHealthMessage_Auth, CallFunc_GetController_ReturnValue) == 0x000028, "Member 'GA_Base_Heal_C_DisplayFullHealthMessage_Auth::CallFunc_GetController_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Base_Heal_C_DisplayFullHealthMessage_Auth, K2Node_DynamicCast_AsPlayer_Controller) == 0x000030, "Member 'GA_Base_Heal_C_DisplayFullHealthMessage_Auth::K2Node_DynamicCast_AsPlayer_Controller' has a wrong offset!");
static_assert(offsetof(GA_Base_Heal_C_DisplayFullHealthMessage_Auth, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'GA_Base_Heal_C_DisplayFullHealthMessage_Auth::K2Node_DynamicCast_bSuccess' has a wrong offset!");

}

