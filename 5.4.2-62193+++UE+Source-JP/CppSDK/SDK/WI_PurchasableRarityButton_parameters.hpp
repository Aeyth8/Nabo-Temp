#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WI_PurchasableRarityButton

#include "Basic.hpp"

#include "JP_structs.hpp"
#include "UMG_structs.hpp"
#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function WI_PurchasableRarityButton.WI_PurchasableRarityButton_C.ExecuteUbergraph_WI_PurchasableRarityButton
// 0x0038 (0x0038 - 0x0000)
struct WI_PurchasableRarityButton_C_ExecuteUbergraph_WI_PurchasableRarityButton final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_GetText_ReturnValue;                      // 0x0008(0x0010)()
	class FText                                   CallFunc_TextToUpper_ReturnValue;                  // 0x0018(0x0010)()
	struct FOnlineStoreItemCost                   CallFunc_MakeOnlineStoreItemCostStruct_ReturnValue; // 0x0028(0x000C)(NoDestructor)
};
static_assert(alignof(WI_PurchasableRarityButton_C_ExecuteUbergraph_WI_PurchasableRarityButton) == 0x000008, "Wrong alignment on WI_PurchasableRarityButton_C_ExecuteUbergraph_WI_PurchasableRarityButton");
static_assert(sizeof(WI_PurchasableRarityButton_C_ExecuteUbergraph_WI_PurchasableRarityButton) == 0x000038, "Wrong size on WI_PurchasableRarityButton_C_ExecuteUbergraph_WI_PurchasableRarityButton");
static_assert(offsetof(WI_PurchasableRarityButton_C_ExecuteUbergraph_WI_PurchasableRarityButton, EntryPoint) == 0x000000, "Member 'WI_PurchasableRarityButton_C_ExecuteUbergraph_WI_PurchasableRarityButton::EntryPoint' has a wrong offset!");
static_assert(offsetof(WI_PurchasableRarityButton_C_ExecuteUbergraph_WI_PurchasableRarityButton, K2Node_Event_IsDesignTime) == 0x000004, "Member 'WI_PurchasableRarityButton_C_ExecuteUbergraph_WI_PurchasableRarityButton::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(WI_PurchasableRarityButton_C_ExecuteUbergraph_WI_PurchasableRarityButton, CallFunc_GetText_ReturnValue) == 0x000008, "Member 'WI_PurchasableRarityButton_C_ExecuteUbergraph_WI_PurchasableRarityButton::CallFunc_GetText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WI_PurchasableRarityButton_C_ExecuteUbergraph_WI_PurchasableRarityButton, CallFunc_TextToUpper_ReturnValue) == 0x000018, "Member 'WI_PurchasableRarityButton_C_ExecuteUbergraph_WI_PurchasableRarityButton::CallFunc_TextToUpper_ReturnValue' has a wrong offset!");
static_assert(offsetof(WI_PurchasableRarityButton_C_ExecuteUbergraph_WI_PurchasableRarityButton, CallFunc_MakeOnlineStoreItemCostStruct_ReturnValue) == 0x000028, "Member 'WI_PurchasableRarityButton_C_ExecuteUbergraph_WI_PurchasableRarityButton::CallFunc_MakeOnlineStoreItemCostStruct_ReturnValue' has a wrong offset!");

// Function WI_PurchasableRarityButton.WI_PurchasableRarityButton_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct WI_PurchasableRarityButton_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WI_PurchasableRarityButton_C_PreConstruct) == 0x000001, "Wrong alignment on WI_PurchasableRarityButton_C_PreConstruct");
static_assert(sizeof(WI_PurchasableRarityButton_C_PreConstruct) == 0x000001, "Wrong size on WI_PurchasableRarityButton_C_PreConstruct");
static_assert(offsetof(WI_PurchasableRarityButton_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'WI_PurchasableRarityButton_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function WI_PurchasableRarityButton.WI_PurchasableRarityButton_C.SetBattlePassInfo
// 0x0058 (0x0058 - 0x0000)
struct WI_PurchasableRarityButton_C_SetBattlePassInfo final
{
public:
	struct FOnlineStoreItemBattlePassRequirement  OnlineStoreItemBattlePassRequirement;              // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)
	TSoftObjectPtr<class UBattlePassMetaData>     CallFunc_TryGetBattlePassMetaData_OutSoftBattlePassMetaData; // 0x0010(0x0028)(UObjectWrapper, HasGetValueTypeHash)
	bool                                          CallFunc_TryGetBattlePassMetaData_ReturnValue;     // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_LoadAsset_Blocking_ReturnValue;           // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBattlePassMetaData*                    K2Node_DynamicCast_AsBattle_Pass_Meta_Data;        // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WI_PurchasableRarityButton_C_SetBattlePassInfo) == 0x000008, "Wrong alignment on WI_PurchasableRarityButton_C_SetBattlePassInfo");
static_assert(sizeof(WI_PurchasableRarityButton_C_SetBattlePassInfo) == 0x000058, "Wrong size on WI_PurchasableRarityButton_C_SetBattlePassInfo");
static_assert(offsetof(WI_PurchasableRarityButton_C_SetBattlePassInfo, OnlineStoreItemBattlePassRequirement) == 0x000000, "Member 'WI_PurchasableRarityButton_C_SetBattlePassInfo::OnlineStoreItemBattlePassRequirement' has a wrong offset!");
static_assert(offsetof(WI_PurchasableRarityButton_C_SetBattlePassInfo, CallFunc_TryGetBattlePassMetaData_OutSoftBattlePassMetaData) == 0x000010, "Member 'WI_PurchasableRarityButton_C_SetBattlePassInfo::CallFunc_TryGetBattlePassMetaData_OutSoftBattlePassMetaData' has a wrong offset!");
static_assert(offsetof(WI_PurchasableRarityButton_C_SetBattlePassInfo, CallFunc_TryGetBattlePassMetaData_ReturnValue) == 0x000038, "Member 'WI_PurchasableRarityButton_C_SetBattlePassInfo::CallFunc_TryGetBattlePassMetaData_ReturnValue' has a wrong offset!");
static_assert(offsetof(WI_PurchasableRarityButton_C_SetBattlePassInfo, CallFunc_LoadAsset_Blocking_ReturnValue) == 0x000040, "Member 'WI_PurchasableRarityButton_C_SetBattlePassInfo::CallFunc_LoadAsset_Blocking_ReturnValue' has a wrong offset!");
static_assert(offsetof(WI_PurchasableRarityButton_C_SetBattlePassInfo, K2Node_DynamicCast_AsBattle_Pass_Meta_Data) == 0x000048, "Member 'WI_PurchasableRarityButton_C_SetBattlePassInfo::K2Node_DynamicCast_AsBattle_Pass_Meta_Data' has a wrong offset!");
static_assert(offsetof(WI_PurchasableRarityButton_C_SetBattlePassInfo, K2Node_DynamicCast_bSuccess) == 0x000050, "Member 'WI_PurchasableRarityButton_C_SetBattlePassInfo::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function WI_PurchasableRarityButton.WI_PurchasableRarityButton_C.SetCost
// 0x000C (0x000C - 0x0000)
struct WI_PurchasableRarityButton_C_SetCost final
{
public:
	struct FOnlineStoreItemCost                   Cost_0;                                            // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
};
static_assert(alignof(WI_PurchasableRarityButton_C_SetCost) == 0x000004, "Wrong alignment on WI_PurchasableRarityButton_C_SetCost");
static_assert(sizeof(WI_PurchasableRarityButton_C_SetCost) == 0x00000C, "Wrong size on WI_PurchasableRarityButton_C_SetCost");
static_assert(offsetof(WI_PurchasableRarityButton_C_SetCost, Cost_0) == 0x000000, "Member 'WI_PurchasableRarityButton_C_SetCost::Cost_0' has a wrong offset!");

// Function WI_PurchasableRarityButton.WI_PurchasableRarityButton_C.SetLabelVisibilities
// 0x005C (0x005C - 0x0000)
struct WI_PurchasableRarityButton_C_SetLabelVisibilities final
{
public:
	bool                                          IsOwned;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EOnlineItemUnlockRequirement                  UnlockRequirement;                                 // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_2;        // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_2;                              // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_3;                              // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x000E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x000F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_4;                              // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_5;                              // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_1;                           // 0x0013(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_6;                              // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_7;                              // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_16[0x2];                                       // 0x0016(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x0018(0x0014)()
	ESlateVisibility                              K2Node_Select_Default_2;                           // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2D[0x3];                                       // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateColor                            K2Node_MakeStruct_SlateColor_1;                    // 0x0030(0x0014)()
	bool                                          Temp_bool_Variable_3;                              // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_4;                              // 0x0045(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_3;                           // 0x0046(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_47[0x1];                                       // 0x0047(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateColor                            K2Node_Select_Default_4;                           // 0x0048(0x0014)()
};
static_assert(alignof(WI_PurchasableRarityButton_C_SetLabelVisibilities) == 0x000004, "Wrong alignment on WI_PurchasableRarityButton_C_SetLabelVisibilities");
static_assert(sizeof(WI_PurchasableRarityButton_C_SetLabelVisibilities) == 0x00005C, "Wrong size on WI_PurchasableRarityButton_C_SetLabelVisibilities");
static_assert(offsetof(WI_PurchasableRarityButton_C_SetLabelVisibilities, IsOwned) == 0x000000, "Member 'WI_PurchasableRarityButton_C_SetLabelVisibilities::IsOwned' has a wrong offset!");
static_assert(offsetof(WI_PurchasableRarityButton_C_SetLabelVisibilities, UnlockRequirement) == 0x000001, "Member 'WI_PurchasableRarityButton_C_SetLabelVisibilities::UnlockRequirement' has a wrong offset!");
static_assert(offsetof(WI_PurchasableRarityButton_C_SetLabelVisibilities, Temp_byte_Variable) == 0x000002, "Member 'WI_PurchasableRarityButton_C_SetLabelVisibilities::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WI_PurchasableRarityButton_C_SetLabelVisibilities, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000003, "Member 'WI_PurchasableRarityButton_C_SetLabelVisibilities::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(WI_PurchasableRarityButton_C_SetLabelVisibilities, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000004, "Member 'WI_PurchasableRarityButton_C_SetLabelVisibilities::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WI_PurchasableRarityButton_C_SetLabelVisibilities, CallFunc_EqualEqual_ByteByte_ReturnValue_2) == 0x000005, "Member 'WI_PurchasableRarityButton_C_SetLabelVisibilities::CallFunc_EqualEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WI_PurchasableRarityButton_C_SetLabelVisibilities, CallFunc_Not_PreBool_ReturnValue) == 0x000006, "Member 'WI_PurchasableRarityButton_C_SetLabelVisibilities::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WI_PurchasableRarityButton_C_SetLabelVisibilities, CallFunc_Not_PreBool_ReturnValue_1) == 0x000007, "Member 'WI_PurchasableRarityButton_C_SetLabelVisibilities::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WI_PurchasableRarityButton_C_SetLabelVisibilities, CallFunc_BooleanAND_ReturnValue) == 0x000008, "Member 'WI_PurchasableRarityButton_C_SetLabelVisibilities::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(WI_PurchasableRarityButton_C_SetLabelVisibilities, CallFunc_BooleanAND_ReturnValue_1) == 0x000009, "Member 'WI_PurchasableRarityButton_C_SetLabelVisibilities::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WI_PurchasableRarityButton_C_SetLabelVisibilities, Temp_byte_Variable_1) == 0x00000A, "Member 'WI_PurchasableRarityButton_C_SetLabelVisibilities::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WI_PurchasableRarityButton_C_SetLabelVisibilities, Temp_bool_Variable) == 0x00000B, "Member 'WI_PurchasableRarityButton_C_SetLabelVisibilities::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WI_PurchasableRarityButton_C_SetLabelVisibilities, Temp_byte_Variable_2) == 0x00000C, "Member 'WI_PurchasableRarityButton_C_SetLabelVisibilities::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(WI_PurchasableRarityButton_C_SetLabelVisibilities, Temp_byte_Variable_3) == 0x00000D, "Member 'WI_PurchasableRarityButton_C_SetLabelVisibilities::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(WI_PurchasableRarityButton_C_SetLabelVisibilities, Temp_bool_Variable_1) == 0x00000E, "Member 'WI_PurchasableRarityButton_C_SetLabelVisibilities::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(WI_PurchasableRarityButton_C_SetLabelVisibilities, K2Node_Select_Default) == 0x00000F, "Member 'WI_PurchasableRarityButton_C_SetLabelVisibilities::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WI_PurchasableRarityButton_C_SetLabelVisibilities, Temp_byte_Variable_4) == 0x000010, "Member 'WI_PurchasableRarityButton_C_SetLabelVisibilities::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(WI_PurchasableRarityButton_C_SetLabelVisibilities, Temp_byte_Variable_5) == 0x000011, "Member 'WI_PurchasableRarityButton_C_SetLabelVisibilities::Temp_byte_Variable_5' has a wrong offset!");
static_assert(offsetof(WI_PurchasableRarityButton_C_SetLabelVisibilities, Temp_bool_Variable_2) == 0x000012, "Member 'WI_PurchasableRarityButton_C_SetLabelVisibilities::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(WI_PurchasableRarityButton_C_SetLabelVisibilities, K2Node_Select_Default_1) == 0x000013, "Member 'WI_PurchasableRarityButton_C_SetLabelVisibilities::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(WI_PurchasableRarityButton_C_SetLabelVisibilities, Temp_byte_Variable_6) == 0x000014, "Member 'WI_PurchasableRarityButton_C_SetLabelVisibilities::Temp_byte_Variable_6' has a wrong offset!");
static_assert(offsetof(WI_PurchasableRarityButton_C_SetLabelVisibilities, Temp_byte_Variable_7) == 0x000015, "Member 'WI_PurchasableRarityButton_C_SetLabelVisibilities::Temp_byte_Variable_7' has a wrong offset!");
static_assert(offsetof(WI_PurchasableRarityButton_C_SetLabelVisibilities, K2Node_MakeStruct_SlateColor) == 0x000018, "Member 'WI_PurchasableRarityButton_C_SetLabelVisibilities::K2Node_MakeStruct_SlateColor' has a wrong offset!");
static_assert(offsetof(WI_PurchasableRarityButton_C_SetLabelVisibilities, K2Node_Select_Default_2) == 0x00002C, "Member 'WI_PurchasableRarityButton_C_SetLabelVisibilities::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(WI_PurchasableRarityButton_C_SetLabelVisibilities, K2Node_MakeStruct_SlateColor_1) == 0x000030, "Member 'WI_PurchasableRarityButton_C_SetLabelVisibilities::K2Node_MakeStruct_SlateColor_1' has a wrong offset!");
static_assert(offsetof(WI_PurchasableRarityButton_C_SetLabelVisibilities, Temp_bool_Variable_3) == 0x000044, "Member 'WI_PurchasableRarityButton_C_SetLabelVisibilities::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(WI_PurchasableRarityButton_C_SetLabelVisibilities, Temp_bool_Variable_4) == 0x000045, "Member 'WI_PurchasableRarityButton_C_SetLabelVisibilities::Temp_bool_Variable_4' has a wrong offset!");
static_assert(offsetof(WI_PurchasableRarityButton_C_SetLabelVisibilities, K2Node_Select_Default_3) == 0x000046, "Member 'WI_PurchasableRarityButton_C_SetLabelVisibilities::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(WI_PurchasableRarityButton_C_SetLabelVisibilities, K2Node_Select_Default_4) == 0x000048, "Member 'WI_PurchasableRarityButton_C_SetLabelVisibilities::K2Node_Select_Default_4' has a wrong offset!");

// Function WI_PurchasableRarityButton.WI_PurchasableRarityButton_C.SetStoreItemData
// 0x0050 (0x0050 - 0x0000)
struct WI_PurchasableRarityButton_C_SetStoreItemData final
{
public:
	struct FOnlineStoreItemData                   StoreItemData;                                     // 0x0000(0x0048)(BlueprintVisible, BlueprintReadOnly, Parm)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WI_PurchasableRarityButton_C_SetStoreItemData) == 0x000008, "Wrong alignment on WI_PurchasableRarityButton_C_SetStoreItemData");
static_assert(sizeof(WI_PurchasableRarityButton_C_SetStoreItemData) == 0x000050, "Wrong size on WI_PurchasableRarityButton_C_SetStoreItemData");
static_assert(offsetof(WI_PurchasableRarityButton_C_SetStoreItemData, StoreItemData) == 0x000000, "Member 'WI_PurchasableRarityButton_C_SetStoreItemData::StoreItemData' has a wrong offset!");
static_assert(offsetof(WI_PurchasableRarityButton_C_SetStoreItemData, K2Node_SwitchEnum_CmpSuccess) == 0x000048, "Member 'WI_PurchasableRarityButton_C_SetStoreItemData::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

}

