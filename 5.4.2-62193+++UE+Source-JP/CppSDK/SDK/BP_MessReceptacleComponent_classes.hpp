#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_MessReceptacleComponent

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "JP_structs.hpp"
#include "JP_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_MessReceptacleComponent.BP_MessReceptacleComponent_C
// 0x0140 (0x06A0 - 0x0560)
class UBP_MessReceptacleComponent_C final : public UReceptacleComponent
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0560(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	TSet<EReceptacleType>                         ReceptacleCategoriesOverride;                      // 0x0568(0x0050)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	double                                        ElapsedLerpTime;                                   // 0x05B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        TimeToSnap;                                        // 0x05C0(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ShouldSnap;                                        // 0x05C8(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5C9[0x7];                                      // 0x05C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_MessItem_C*                         CurrentMessItem;                                   // 0x05D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	FMulticastInlineDelegateProperty_             Filled;                                            // 0x05D8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_             Emptied;                                           // 0x05E8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	bool                                          Active;                                            // 0x05F8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Irremovable;                                       // 0x05F9(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5FA[0x6];                                      // 0x05FA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        EmissiveDuration;                                  // 0x0600(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        WorldSecondsAtTrigger;                             // 0x0608(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           EmissiveTimer;                                     // 0x0610(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               MessItemDynamicMaterial;                           // 0x0618(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	TArray<class UStaticMesh*>                    PossibleMeshes;                                    // 0x0620(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	class AStaticMeshActor*                       Previewmesh1;                                      // 0x0630(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               Material1;                                         // 0x0638(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class AStaticMeshActor*                       PreviewMesh2;                                      // 0x0640(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               Material2;                                         // 0x0648(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	FMulticastInlineDelegateProperty_             VisibleChanged;                                    // 0x0650(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	bool                                          AddPOI;                                            // 0x0660(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ScoreNotification;                                 // 0x0661(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_662[0x6];                                      // 0x0662(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_IncomeNotificationManager_C*        IncomeNotificationManager;                         // 0x0668(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	int32                                         ID;                                                // 0x0670(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          BigSuccessParticle;                                // 0x0674(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          EditorVisualize;                                   // 0x0675(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_676[0x2];                                      // 0x0676(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<TSoftClassPtr<class UClass>>           CompatibleMessItems;                               // 0x0678(0x0010)(Edit, BlueprintVisible)
	bool                                          TempPillowParticleSelector;                        // 0x0688(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_689[0x7];                                      // 0x0689(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UEconomyDefinition*                     Economy_to_Team_at_point;                          // 0x0690(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UAC_Indicator_C*                        Indicator;                                         // 0x0698(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)

public:
	void CLAIMED(bool* Is_Claimed);
	void Cosmetics_Overlap_Begin();
	void Cosmetics_Overlap_End();
	void EditorVisualizationConstruct();
	void Emptied__DelegateSignature(class UBP_MessReceptacleComponent_C* Caller);
	void ExecuteUbergraph_BP_MessReceptacleComponent(int32 EntryPoint);
	void Filled__DelegateSignature(class UBP_MessReceptacleComponent_C* Caller);
	void HandleIncomingItem(class UObject* Object, bool* Continue);
	void HandleIncomingNoHeldCheck(class UObject* Object, bool* Continue);
	void HandleOutgoingItem(class UObject* Object, bool* Continue);
	void HandleOutgoingItemHeldCheck(class UObject* Object, bool* Continue);
	void MoveObjectInPlace();
	void On_Overlap_Begin(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
	void OnOverlapEnd(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex);
	void ReceiveBeginPlay();
	void RetriggerOverlapBegin(class AActor* MessItem);
	void RetriggerOverlapEnd(class AActor* Mess_Item);
	void Set_Active(bool Active_status);
	void SetPhysicsForMessItem(bool ShouldSimulate);
	void SetVisible(bool Visible);
	void StopLerpTimer();
	void UpdateEmissiveOnMessItem();
	void UpdateVisiblity();
	void VisibleChanged__DelegateSignature(bool Visibility);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_MessReceptacleComponent_C">();
	}
	static class UBP_MessReceptacleComponent_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_MessReceptacleComponent_C>();
	}
};
static_assert(alignof(UBP_MessReceptacleComponent_C) == 0x000010, "Wrong alignment on UBP_MessReceptacleComponent_C");
static_assert(sizeof(UBP_MessReceptacleComponent_C) == 0x0006A0, "Wrong size on UBP_MessReceptacleComponent_C");
static_assert(offsetof(UBP_MessReceptacleComponent_C, UberGraphFrame) == 0x000560, "Member 'UBP_MessReceptacleComponent_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UBP_MessReceptacleComponent_C, ReceptacleCategoriesOverride) == 0x000568, "Member 'UBP_MessReceptacleComponent_C::ReceptacleCategoriesOverride' has a wrong offset!");
static_assert(offsetof(UBP_MessReceptacleComponent_C, ElapsedLerpTime) == 0x0005B8, "Member 'UBP_MessReceptacleComponent_C::ElapsedLerpTime' has a wrong offset!");
static_assert(offsetof(UBP_MessReceptacleComponent_C, TimeToSnap) == 0x0005C0, "Member 'UBP_MessReceptacleComponent_C::TimeToSnap' has a wrong offset!");
static_assert(offsetof(UBP_MessReceptacleComponent_C, ShouldSnap) == 0x0005C8, "Member 'UBP_MessReceptacleComponent_C::ShouldSnap' has a wrong offset!");
static_assert(offsetof(UBP_MessReceptacleComponent_C, CurrentMessItem) == 0x0005D0, "Member 'UBP_MessReceptacleComponent_C::CurrentMessItem' has a wrong offset!");
static_assert(offsetof(UBP_MessReceptacleComponent_C, Filled) == 0x0005D8, "Member 'UBP_MessReceptacleComponent_C::Filled' has a wrong offset!");
static_assert(offsetof(UBP_MessReceptacleComponent_C, Emptied) == 0x0005E8, "Member 'UBP_MessReceptacleComponent_C::Emptied' has a wrong offset!");
static_assert(offsetof(UBP_MessReceptacleComponent_C, Active) == 0x0005F8, "Member 'UBP_MessReceptacleComponent_C::Active' has a wrong offset!");
static_assert(offsetof(UBP_MessReceptacleComponent_C, Irremovable) == 0x0005F9, "Member 'UBP_MessReceptacleComponent_C::Irremovable' has a wrong offset!");
static_assert(offsetof(UBP_MessReceptacleComponent_C, EmissiveDuration) == 0x000600, "Member 'UBP_MessReceptacleComponent_C::EmissiveDuration' has a wrong offset!");
static_assert(offsetof(UBP_MessReceptacleComponent_C, WorldSecondsAtTrigger) == 0x000608, "Member 'UBP_MessReceptacleComponent_C::WorldSecondsAtTrigger' has a wrong offset!");
static_assert(offsetof(UBP_MessReceptacleComponent_C, EmissiveTimer) == 0x000610, "Member 'UBP_MessReceptacleComponent_C::EmissiveTimer' has a wrong offset!");
static_assert(offsetof(UBP_MessReceptacleComponent_C, MessItemDynamicMaterial) == 0x000618, "Member 'UBP_MessReceptacleComponent_C::MessItemDynamicMaterial' has a wrong offset!");
static_assert(offsetof(UBP_MessReceptacleComponent_C, PossibleMeshes) == 0x000620, "Member 'UBP_MessReceptacleComponent_C::PossibleMeshes' has a wrong offset!");
static_assert(offsetof(UBP_MessReceptacleComponent_C, Previewmesh1) == 0x000630, "Member 'UBP_MessReceptacleComponent_C::Previewmesh1' has a wrong offset!");
static_assert(offsetof(UBP_MessReceptacleComponent_C, Material1) == 0x000638, "Member 'UBP_MessReceptacleComponent_C::Material1' has a wrong offset!");
static_assert(offsetof(UBP_MessReceptacleComponent_C, PreviewMesh2) == 0x000640, "Member 'UBP_MessReceptacleComponent_C::PreviewMesh2' has a wrong offset!");
static_assert(offsetof(UBP_MessReceptacleComponent_C, Material2) == 0x000648, "Member 'UBP_MessReceptacleComponent_C::Material2' has a wrong offset!");
static_assert(offsetof(UBP_MessReceptacleComponent_C, VisibleChanged) == 0x000650, "Member 'UBP_MessReceptacleComponent_C::VisibleChanged' has a wrong offset!");
static_assert(offsetof(UBP_MessReceptacleComponent_C, AddPOI) == 0x000660, "Member 'UBP_MessReceptacleComponent_C::AddPOI' has a wrong offset!");
static_assert(offsetof(UBP_MessReceptacleComponent_C, ScoreNotification) == 0x000661, "Member 'UBP_MessReceptacleComponent_C::ScoreNotification' has a wrong offset!");
static_assert(offsetof(UBP_MessReceptacleComponent_C, IncomeNotificationManager) == 0x000668, "Member 'UBP_MessReceptacleComponent_C::IncomeNotificationManager' has a wrong offset!");
static_assert(offsetof(UBP_MessReceptacleComponent_C, ID) == 0x000670, "Member 'UBP_MessReceptacleComponent_C::ID' has a wrong offset!");
static_assert(offsetof(UBP_MessReceptacleComponent_C, BigSuccessParticle) == 0x000674, "Member 'UBP_MessReceptacleComponent_C::BigSuccessParticle' has a wrong offset!");
static_assert(offsetof(UBP_MessReceptacleComponent_C, EditorVisualize) == 0x000675, "Member 'UBP_MessReceptacleComponent_C::EditorVisualize' has a wrong offset!");
static_assert(offsetof(UBP_MessReceptacleComponent_C, CompatibleMessItems) == 0x000678, "Member 'UBP_MessReceptacleComponent_C::CompatibleMessItems' has a wrong offset!");
static_assert(offsetof(UBP_MessReceptacleComponent_C, TempPillowParticleSelector) == 0x000688, "Member 'UBP_MessReceptacleComponent_C::TempPillowParticleSelector' has a wrong offset!");
static_assert(offsetof(UBP_MessReceptacleComponent_C, Economy_to_Team_at_point) == 0x000690, "Member 'UBP_MessReceptacleComponent_C::Economy_to_Team_at_point' has a wrong offset!");
static_assert(offsetof(UBP_MessReceptacleComponent_C, Indicator) == 0x000698, "Member 'UBP_MessReceptacleComponent_C::Indicator' has a wrong offset!");

}

