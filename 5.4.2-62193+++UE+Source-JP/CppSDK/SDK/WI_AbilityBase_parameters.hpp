#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WI_AbilityBase

#include "Basic.hpp"

#include "GameplayTags_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function WI_AbilityBase.WI_AbilityBase_C.ExecuteUbergraph_WI_AbilityBase
// 0x0030 (0x0030 - 0x0000)
struct WI_AbilityBase_C_ExecuteUbergraph_WI_AbilityBase final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameplayAbilityIW*                     K2Node_Event_Source;                               // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UNeighborSpecialAbilityDefinition*      CallFunc_GetDefinitionFromAbilitySourceObject_ReturnValue; // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0018(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0028(0x0008)(NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WI_AbilityBase_C_ExecuteUbergraph_WI_AbilityBase) == 0x000008, "Wrong alignment on WI_AbilityBase_C_ExecuteUbergraph_WI_AbilityBase");
static_assert(sizeof(WI_AbilityBase_C_ExecuteUbergraph_WI_AbilityBase) == 0x000030, "Wrong size on WI_AbilityBase_C_ExecuteUbergraph_WI_AbilityBase");
static_assert(offsetof(WI_AbilityBase_C_ExecuteUbergraph_WI_AbilityBase, EntryPoint) == 0x000000, "Member 'WI_AbilityBase_C_ExecuteUbergraph_WI_AbilityBase::EntryPoint' has a wrong offset!");
static_assert(offsetof(WI_AbilityBase_C_ExecuteUbergraph_WI_AbilityBase, K2Node_Event_Source) == 0x000008, "Member 'WI_AbilityBase_C_ExecuteUbergraph_WI_AbilityBase::K2Node_Event_Source' has a wrong offset!");
static_assert(offsetof(WI_AbilityBase_C_ExecuteUbergraph_WI_AbilityBase, CallFunc_GetDefinitionFromAbilitySourceObject_ReturnValue) == 0x000010, "Member 'WI_AbilityBase_C_ExecuteUbergraph_WI_AbilityBase::CallFunc_GetDefinitionFromAbilitySourceObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(WI_AbilityBase_C_ExecuteUbergraph_WI_AbilityBase, K2Node_CreateDelegate_OutputDelegate) == 0x000018, "Member 'WI_AbilityBase_C_ExecuteUbergraph_WI_AbilityBase::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WI_AbilityBase_C_ExecuteUbergraph_WI_AbilityBase, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000028, "Member 'WI_AbilityBase_C_ExecuteUbergraph_WI_AbilityBase::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");

// Function WI_AbilityBase.WI_AbilityBase_C.GetDefinitionFromAbilitySourceObject
// 0x0030 (0x0030 - 0x0000)
struct WI_AbilityBase_C_GetDefinitionFromAbilitySourceObject final
{
public:
	class UNeighborSpecialAbilityDefinition*      ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash)
	class UGameplayAbility_NeighborSpecialAbilityBase* K2Node_DynamicCast_AsGameplay_Ability_Neighbor_Special_Ability_Base; // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_LoadAsset_Blocking_ReturnValue;           // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UNeighborSpecialAbilityDefinition*      K2Node_DynamicCast_AsNeighbor_Special_Ability_Definition; // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WI_AbilityBase_C_GetDefinitionFromAbilitySourceObject) == 0x000008, "Wrong alignment on WI_AbilityBase_C_GetDefinitionFromAbilitySourceObject");
static_assert(sizeof(WI_AbilityBase_C_GetDefinitionFromAbilitySourceObject) == 0x000030, "Wrong size on WI_AbilityBase_C_GetDefinitionFromAbilitySourceObject");
static_assert(offsetof(WI_AbilityBase_C_GetDefinitionFromAbilitySourceObject, ReturnValue) == 0x000000, "Member 'WI_AbilityBase_C_GetDefinitionFromAbilitySourceObject::ReturnValue' has a wrong offset!");
static_assert(offsetof(WI_AbilityBase_C_GetDefinitionFromAbilitySourceObject, K2Node_DynamicCast_AsGameplay_Ability_Neighbor_Special_Ability_Base) == 0x000008, "Member 'WI_AbilityBase_C_GetDefinitionFromAbilitySourceObject::K2Node_DynamicCast_AsGameplay_Ability_Neighbor_Special_Ability_Base' has a wrong offset!");
static_assert(offsetof(WI_AbilityBase_C_GetDefinitionFromAbilitySourceObject, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'WI_AbilityBase_C_GetDefinitionFromAbilitySourceObject::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WI_AbilityBase_C_GetDefinitionFromAbilitySourceObject, CallFunc_LoadAsset_Blocking_ReturnValue) == 0x000018, "Member 'WI_AbilityBase_C_GetDefinitionFromAbilitySourceObject::CallFunc_LoadAsset_Blocking_ReturnValue' has a wrong offset!");
static_assert(offsetof(WI_AbilityBase_C_GetDefinitionFromAbilitySourceObject, K2Node_DynamicCast_AsNeighbor_Special_Ability_Definition) == 0x000020, "Member 'WI_AbilityBase_C_GetDefinitionFromAbilitySourceObject::K2Node_DynamicCast_AsNeighbor_Special_Ability_Definition' has a wrong offset!");
static_assert(offsetof(WI_AbilityBase_C_GetDefinitionFromAbilitySourceObject, K2Node_DynamicCast_bSuccess_1) == 0x000028, "Member 'WI_AbilityBase_C_GetDefinitionFromAbilitySourceObject::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");

// Function WI_AbilityBase.WI_AbilityBase_C.Internal_CanActivate
// 0x0030 (0x0030 - 0x0000)
struct WI_AbilityBase_C_Internal_CanActivate final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsOnCooldown_0;                                    // 0x0001(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsActive;                                          // 0x0002(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CanActivate;                                       // 0x0003(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagContainer                  RelevantTags;                                      // 0x0008(0x0020)(Edit, BlueprintVisible)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x002B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsOnCooldown_ReturnValue;                 // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x002D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_IsActive_ReturnValue;                  // 0x002E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_CanActivate_ReturnValue;               // 0x002F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WI_AbilityBase_C_Internal_CanActivate) == 0x000008, "Wrong alignment on WI_AbilityBase_C_Internal_CanActivate");
static_assert(sizeof(WI_AbilityBase_C_Internal_CanActivate) == 0x000030, "Wrong size on WI_AbilityBase_C_Internal_CanActivate");
static_assert(offsetof(WI_AbilityBase_C_Internal_CanActivate, ReturnValue) == 0x000000, "Member 'WI_AbilityBase_C_Internal_CanActivate::ReturnValue' has a wrong offset!");
static_assert(offsetof(WI_AbilityBase_C_Internal_CanActivate, IsOnCooldown_0) == 0x000001, "Member 'WI_AbilityBase_C_Internal_CanActivate::IsOnCooldown_0' has a wrong offset!");
static_assert(offsetof(WI_AbilityBase_C_Internal_CanActivate, IsActive) == 0x000002, "Member 'WI_AbilityBase_C_Internal_CanActivate::IsActive' has a wrong offset!");
static_assert(offsetof(WI_AbilityBase_C_Internal_CanActivate, CanActivate) == 0x000003, "Member 'WI_AbilityBase_C_Internal_CanActivate::CanActivate' has a wrong offset!");
static_assert(offsetof(WI_AbilityBase_C_Internal_CanActivate, RelevantTags) == 0x000008, "Member 'WI_AbilityBase_C_Internal_CanActivate::RelevantTags' has a wrong offset!");
static_assert(offsetof(WI_AbilityBase_C_Internal_CanActivate, CallFunc_IsValid_ReturnValue) == 0x000028, "Member 'WI_AbilityBase_C_Internal_CanActivate::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WI_AbilityBase_C_Internal_CanActivate, CallFunc_Not_PreBool_ReturnValue) == 0x000029, "Member 'WI_AbilityBase_C_Internal_CanActivate::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WI_AbilityBase_C_Internal_CanActivate, CallFunc_Not_PreBool_ReturnValue_1) == 0x00002A, "Member 'WI_AbilityBase_C_Internal_CanActivate::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WI_AbilityBase_C_Internal_CanActivate, CallFunc_BooleanAND_ReturnValue) == 0x00002B, "Member 'WI_AbilityBase_C_Internal_CanActivate::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(WI_AbilityBase_C_Internal_CanActivate, CallFunc_IsOnCooldown_ReturnValue) == 0x00002C, "Member 'WI_AbilityBase_C_Internal_CanActivate::CallFunc_IsOnCooldown_ReturnValue' has a wrong offset!");
static_assert(offsetof(WI_AbilityBase_C_Internal_CanActivate, CallFunc_BooleanAND_ReturnValue_1) == 0x00002D, "Member 'WI_AbilityBase_C_Internal_CanActivate::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WI_AbilityBase_C_Internal_CanActivate, CallFunc_K2_IsActive_ReturnValue) == 0x00002E, "Member 'WI_AbilityBase_C_Internal_CanActivate::CallFunc_K2_IsActive_ReturnValue' has a wrong offset!");
static_assert(offsetof(WI_AbilityBase_C_Internal_CanActivate, CallFunc_K2_CanActivate_ReturnValue) == 0x00002F, "Member 'WI_AbilityBase_C_Internal_CanActivate::CallFunc_K2_CanActivate_ReturnValue' has a wrong offset!");

// Function WI_AbilityBase.WI_AbilityBase_C.Internal_GetCooldownData
// 0x0050 (0x0050 - 0x0000)
struct WI_AbilityBase_C_Internal_GetCooldownData final
{
public:
	bool                                          IsOnCooldown_0;                                    // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         TimeRemaining;                                     // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CooldownDuration;                                  // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        PercentageDone;                                    // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_K2_GetCooldownTimeRemainingAndDuration_TimeRemaining; // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_K2_GetCooldownTimeRemainingAndDuration_CooldownDuration; // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_GetCooldownTimeRemainingAndDuration_ReturnValue; // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NearlyEqual_FloatFloat_ReturnValue;       // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_22[0x6];                                       // 0x0022(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SafeDivide_ReturnValue;                   // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_NearlyEqual_FloatFloat_A_ImplicitCast;    // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SafeDivide_A_ImplicitCast;                // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SafeDivide_B_ImplicitCast;                // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WI_AbilityBase_C_Internal_GetCooldownData) == 0x000008, "Wrong alignment on WI_AbilityBase_C_Internal_GetCooldownData");
static_assert(sizeof(WI_AbilityBase_C_Internal_GetCooldownData) == 0x000050, "Wrong size on WI_AbilityBase_C_Internal_GetCooldownData");
static_assert(offsetof(WI_AbilityBase_C_Internal_GetCooldownData, IsOnCooldown_0) == 0x000000, "Member 'WI_AbilityBase_C_Internal_GetCooldownData::IsOnCooldown_0' has a wrong offset!");
static_assert(offsetof(WI_AbilityBase_C_Internal_GetCooldownData, TimeRemaining) == 0x000004, "Member 'WI_AbilityBase_C_Internal_GetCooldownData::TimeRemaining' has a wrong offset!");
static_assert(offsetof(WI_AbilityBase_C_Internal_GetCooldownData, CooldownDuration) == 0x000008, "Member 'WI_AbilityBase_C_Internal_GetCooldownData::CooldownDuration' has a wrong offset!");
static_assert(offsetof(WI_AbilityBase_C_Internal_GetCooldownData, PercentageDone) == 0x000010, "Member 'WI_AbilityBase_C_Internal_GetCooldownData::PercentageDone' has a wrong offset!");
static_assert(offsetof(WI_AbilityBase_C_Internal_GetCooldownData, CallFunc_K2_GetCooldownTimeRemainingAndDuration_TimeRemaining) == 0x000018, "Member 'WI_AbilityBase_C_Internal_GetCooldownData::CallFunc_K2_GetCooldownTimeRemainingAndDuration_TimeRemaining' has a wrong offset!");
static_assert(offsetof(WI_AbilityBase_C_Internal_GetCooldownData, CallFunc_K2_GetCooldownTimeRemainingAndDuration_CooldownDuration) == 0x00001C, "Member 'WI_AbilityBase_C_Internal_GetCooldownData::CallFunc_K2_GetCooldownTimeRemainingAndDuration_CooldownDuration' has a wrong offset!");
static_assert(offsetof(WI_AbilityBase_C_Internal_GetCooldownData, CallFunc_K2_GetCooldownTimeRemainingAndDuration_ReturnValue) == 0x000020, "Member 'WI_AbilityBase_C_Internal_GetCooldownData::CallFunc_K2_GetCooldownTimeRemainingAndDuration_ReturnValue' has a wrong offset!");
static_assert(offsetof(WI_AbilityBase_C_Internal_GetCooldownData, CallFunc_NearlyEqual_FloatFloat_ReturnValue) == 0x000021, "Member 'WI_AbilityBase_C_Internal_GetCooldownData::CallFunc_NearlyEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WI_AbilityBase_C_Internal_GetCooldownData, CallFunc_SafeDivide_ReturnValue) == 0x000028, "Member 'WI_AbilityBase_C_Internal_GetCooldownData::CallFunc_SafeDivide_ReturnValue' has a wrong offset!");
static_assert(offsetof(WI_AbilityBase_C_Internal_GetCooldownData, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000030, "Member 'WI_AbilityBase_C_Internal_GetCooldownData::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WI_AbilityBase_C_Internal_GetCooldownData, CallFunc_NearlyEqual_FloatFloat_A_ImplicitCast) == 0x000038, "Member 'WI_AbilityBase_C_Internal_GetCooldownData::CallFunc_NearlyEqual_FloatFloat_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WI_AbilityBase_C_Internal_GetCooldownData, CallFunc_SafeDivide_A_ImplicitCast) == 0x000040, "Member 'WI_AbilityBase_C_Internal_GetCooldownData::CallFunc_SafeDivide_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WI_AbilityBase_C_Internal_GetCooldownData, CallFunc_SafeDivide_B_ImplicitCast) == 0x000048, "Member 'WI_AbilityBase_C_Internal_GetCooldownData::CallFunc_SafeDivide_B_ImplicitCast' has a wrong offset!");

// Function WI_AbilityBase.WI_AbilityBase_C.Internal_OnTick
// 0x0028 (0x0028 - 0x0000)
struct WI_AbilityBase_C_Internal_OnTick final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsOnCooldown_ReturnValue;                 // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Internal_GetCooldownData_IsOnCooldown;    // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3[0x1];                                        // 0x0003(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Internal_GetCooldownData_TimeRemaining;   // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Internal_GetCooldownData_CooldownDuration; // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Internal_GetCooldownData_PercentageDone;  // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_OnCooldownTick_TimeRemaining_ImplicitCast; // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_OnCooldownTick_CooldownDuration_ImplicitCast; // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WI_AbilityBase_C_Internal_OnTick) == 0x000008, "Wrong alignment on WI_AbilityBase_C_Internal_OnTick");
static_assert(sizeof(WI_AbilityBase_C_Internal_OnTick) == 0x000028, "Wrong size on WI_AbilityBase_C_Internal_OnTick");
static_assert(offsetof(WI_AbilityBase_C_Internal_OnTick, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'WI_AbilityBase_C_Internal_OnTick::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WI_AbilityBase_C_Internal_OnTick, CallFunc_IsOnCooldown_ReturnValue) == 0x000001, "Member 'WI_AbilityBase_C_Internal_OnTick::CallFunc_IsOnCooldown_ReturnValue' has a wrong offset!");
static_assert(offsetof(WI_AbilityBase_C_Internal_OnTick, CallFunc_Internal_GetCooldownData_IsOnCooldown) == 0x000002, "Member 'WI_AbilityBase_C_Internal_OnTick::CallFunc_Internal_GetCooldownData_IsOnCooldown' has a wrong offset!");
static_assert(offsetof(WI_AbilityBase_C_Internal_OnTick, CallFunc_Internal_GetCooldownData_TimeRemaining) == 0x000004, "Member 'WI_AbilityBase_C_Internal_OnTick::CallFunc_Internal_GetCooldownData_TimeRemaining' has a wrong offset!");
static_assert(offsetof(WI_AbilityBase_C_Internal_OnTick, CallFunc_Internal_GetCooldownData_CooldownDuration) == 0x000008, "Member 'WI_AbilityBase_C_Internal_OnTick::CallFunc_Internal_GetCooldownData_CooldownDuration' has a wrong offset!");
static_assert(offsetof(WI_AbilityBase_C_Internal_OnTick, CallFunc_Internal_GetCooldownData_PercentageDone) == 0x000010, "Member 'WI_AbilityBase_C_Internal_OnTick::CallFunc_Internal_GetCooldownData_PercentageDone' has a wrong offset!");
static_assert(offsetof(WI_AbilityBase_C_Internal_OnTick, CallFunc_OnCooldownTick_TimeRemaining_ImplicitCast) == 0x000018, "Member 'WI_AbilityBase_C_Internal_OnTick::CallFunc_OnCooldownTick_TimeRemaining_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WI_AbilityBase_C_Internal_OnTick, CallFunc_OnCooldownTick_CooldownDuration_ImplicitCast) == 0x000020, "Member 'WI_AbilityBase_C_Internal_OnTick::CallFunc_OnCooldownTick_CooldownDuration_ImplicitCast' has a wrong offset!");

// Function WI_AbilityBase.WI_AbilityBase_C.Internal_UpdateIsOnCooldown
// 0x0030 (0x0030 - 0x0000)
struct WI_AbilityBase_C_Internal_UpdateIsOnCooldown final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Internal_GetCooldownData_IsOnCooldown;    // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x2];                                        // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Internal_GetCooldownData_TimeRemaining;   // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Internal_GetCooldownData_CooldownDuration; // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Internal_GetCooldownData_PercentageDone;  // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsOnCooldown_ReturnValue;                 // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue;            // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A[0x6];                                       // 0x001A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_OnAbilityCooldownStarted_TimeRemaining_ImplicitCast; // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_OnAbilityCooldownStarted_CooldownDuration_ImplicitCast; // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WI_AbilityBase_C_Internal_UpdateIsOnCooldown) == 0x000008, "Wrong alignment on WI_AbilityBase_C_Internal_UpdateIsOnCooldown");
static_assert(sizeof(WI_AbilityBase_C_Internal_UpdateIsOnCooldown) == 0x000030, "Wrong size on WI_AbilityBase_C_Internal_UpdateIsOnCooldown");
static_assert(offsetof(WI_AbilityBase_C_Internal_UpdateIsOnCooldown, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'WI_AbilityBase_C_Internal_UpdateIsOnCooldown::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WI_AbilityBase_C_Internal_UpdateIsOnCooldown, CallFunc_Internal_GetCooldownData_IsOnCooldown) == 0x000001, "Member 'WI_AbilityBase_C_Internal_UpdateIsOnCooldown::CallFunc_Internal_GetCooldownData_IsOnCooldown' has a wrong offset!");
static_assert(offsetof(WI_AbilityBase_C_Internal_UpdateIsOnCooldown, CallFunc_Internal_GetCooldownData_TimeRemaining) == 0x000004, "Member 'WI_AbilityBase_C_Internal_UpdateIsOnCooldown::CallFunc_Internal_GetCooldownData_TimeRemaining' has a wrong offset!");
static_assert(offsetof(WI_AbilityBase_C_Internal_UpdateIsOnCooldown, CallFunc_Internal_GetCooldownData_CooldownDuration) == 0x000008, "Member 'WI_AbilityBase_C_Internal_UpdateIsOnCooldown::CallFunc_Internal_GetCooldownData_CooldownDuration' has a wrong offset!");
static_assert(offsetof(WI_AbilityBase_C_Internal_UpdateIsOnCooldown, CallFunc_Internal_GetCooldownData_PercentageDone) == 0x000010, "Member 'WI_AbilityBase_C_Internal_UpdateIsOnCooldown::CallFunc_Internal_GetCooldownData_PercentageDone' has a wrong offset!");
static_assert(offsetof(WI_AbilityBase_C_Internal_UpdateIsOnCooldown, CallFunc_IsOnCooldown_ReturnValue) == 0x000018, "Member 'WI_AbilityBase_C_Internal_UpdateIsOnCooldown::CallFunc_IsOnCooldown_ReturnValue' has a wrong offset!");
static_assert(offsetof(WI_AbilityBase_C_Internal_UpdateIsOnCooldown, CallFunc_NotEqual_BoolBool_ReturnValue) == 0x000019, "Member 'WI_AbilityBase_C_Internal_UpdateIsOnCooldown::CallFunc_NotEqual_BoolBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WI_AbilityBase_C_Internal_UpdateIsOnCooldown, CallFunc_OnAbilityCooldownStarted_TimeRemaining_ImplicitCast) == 0x000020, "Member 'WI_AbilityBase_C_Internal_UpdateIsOnCooldown::CallFunc_OnAbilityCooldownStarted_TimeRemaining_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WI_AbilityBase_C_Internal_UpdateIsOnCooldown, CallFunc_OnAbilityCooldownStarted_CooldownDuration_ImplicitCast) == 0x000028, "Member 'WI_AbilityBase_C_Internal_UpdateIsOnCooldown::CallFunc_OnAbilityCooldownStarted_CooldownDuration_ImplicitCast' has a wrong offset!");

// Function WI_AbilityBase.WI_AbilityBase_C.IsOnCooldown
// 0x0018 (0x0018 - 0x0000)
struct WI_AbilityBase_C_IsOnCooldown final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetCooldownTimeRemaining_ReturnValue;     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NearlyEqual_FloatFloat_ReturnValue;       // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A[0x6];                                        // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_NearlyEqual_FloatFloat_A_ImplicitCast;    // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WI_AbilityBase_C_IsOnCooldown) == 0x000008, "Wrong alignment on WI_AbilityBase_C_IsOnCooldown");
static_assert(sizeof(WI_AbilityBase_C_IsOnCooldown) == 0x000018, "Wrong size on WI_AbilityBase_C_IsOnCooldown");
static_assert(offsetof(WI_AbilityBase_C_IsOnCooldown, ReturnValue) == 0x000000, "Member 'WI_AbilityBase_C_IsOnCooldown::ReturnValue' has a wrong offset!");
static_assert(offsetof(WI_AbilityBase_C_IsOnCooldown, CallFunc_GetCooldownTimeRemaining_ReturnValue) == 0x000004, "Member 'WI_AbilityBase_C_IsOnCooldown::CallFunc_GetCooldownTimeRemaining_ReturnValue' has a wrong offset!");
static_assert(offsetof(WI_AbilityBase_C_IsOnCooldown, CallFunc_NearlyEqual_FloatFloat_ReturnValue) == 0x000008, "Member 'WI_AbilityBase_C_IsOnCooldown::CallFunc_NearlyEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WI_AbilityBase_C_IsOnCooldown, CallFunc_Not_PreBool_ReturnValue) == 0x000009, "Member 'WI_AbilityBase_C_IsOnCooldown::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WI_AbilityBase_C_IsOnCooldown, CallFunc_NearlyEqual_FloatFloat_A_ImplicitCast) == 0x000010, "Member 'WI_AbilityBase_C_IsOnCooldown::CallFunc_NearlyEqual_FloatFloat_A_ImplicitCast' has a wrong offset!");

// Function WI_AbilityBase.WI_AbilityBase_C.OnAbilityCooldownStarted
// 0x0018 (0x0018 - 0x0000)
struct WI_AbilityBase_C_OnAbilityCooldownStarted final
{
public:
	double                                        TimeRemaining;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CooldownDuration;                                  // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        PercentageDone;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WI_AbilityBase_C_OnAbilityCooldownStarted) == 0x000008, "Wrong alignment on WI_AbilityBase_C_OnAbilityCooldownStarted");
static_assert(sizeof(WI_AbilityBase_C_OnAbilityCooldownStarted) == 0x000018, "Wrong size on WI_AbilityBase_C_OnAbilityCooldownStarted");
static_assert(offsetof(WI_AbilityBase_C_OnAbilityCooldownStarted, TimeRemaining) == 0x000000, "Member 'WI_AbilityBase_C_OnAbilityCooldownStarted::TimeRemaining' has a wrong offset!");
static_assert(offsetof(WI_AbilityBase_C_OnAbilityCooldownStarted, CooldownDuration) == 0x000008, "Member 'WI_AbilityBase_C_OnAbilityCooldownStarted::CooldownDuration' has a wrong offset!");
static_assert(offsetof(WI_AbilityBase_C_OnAbilityCooldownStarted, PercentageDone) == 0x000010, "Member 'WI_AbilityBase_C_OnAbilityCooldownStarted::PercentageDone' has a wrong offset!");

// Function WI_AbilityBase.WI_AbilityBase_C.OnCooldownTick
// 0x0018 (0x0018 - 0x0000)
struct WI_AbilityBase_C_OnCooldownTick final
{
public:
	double                                        TimeRemaining;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CooldownDuration;                                  // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        PercentageDone;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WI_AbilityBase_C_OnCooldownTick) == 0x000008, "Wrong alignment on WI_AbilityBase_C_OnCooldownTick");
static_assert(sizeof(WI_AbilityBase_C_OnCooldownTick) == 0x000018, "Wrong size on WI_AbilityBase_C_OnCooldownTick");
static_assert(offsetof(WI_AbilityBase_C_OnCooldownTick, TimeRemaining) == 0x000000, "Member 'WI_AbilityBase_C_OnCooldownTick::TimeRemaining' has a wrong offset!");
static_assert(offsetof(WI_AbilityBase_C_OnCooldownTick, CooldownDuration) == 0x000008, "Member 'WI_AbilityBase_C_OnCooldownTick::CooldownDuration' has a wrong offset!");
static_assert(offsetof(WI_AbilityBase_C_OnCooldownTick, PercentageDone) == 0x000010, "Member 'WI_AbilityBase_C_OnCooldownTick::PercentageDone' has a wrong offset!");

// Function WI_AbilityBase.WI_AbilityBase_C.SetSourceAbility
// 0x0008 (0x0008 - 0x0000)
struct WI_AbilityBase_C_SetSourceAbility final
{
public:
	class UGameplayAbilityIW*                     Source;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WI_AbilityBase_C_SetSourceAbility) == 0x000008, "Wrong alignment on WI_AbilityBase_C_SetSourceAbility");
static_assert(sizeof(WI_AbilityBase_C_SetSourceAbility) == 0x000008, "Wrong size on WI_AbilityBase_C_SetSourceAbility");
static_assert(offsetof(WI_AbilityBase_C_SetSourceAbility, Source) == 0x000000, "Member 'WI_AbilityBase_C_SetSourceAbility::Source' has a wrong offset!");

// Function WI_AbilityBase.WI_AbilityBase_C.UpdateActivatableState
// 0x0004 (0x0004 - 0x0000)
struct WI_AbilityBase_C_UpdateActivatableState final
{
public:
	bool                                          ForceUpdate;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Internal_CanActivate_ReturnValue;         // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue;            // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WI_AbilityBase_C_UpdateActivatableState) == 0x000001, "Wrong alignment on WI_AbilityBase_C_UpdateActivatableState");
static_assert(sizeof(WI_AbilityBase_C_UpdateActivatableState) == 0x000004, "Wrong size on WI_AbilityBase_C_UpdateActivatableState");
static_assert(offsetof(WI_AbilityBase_C_UpdateActivatableState, ForceUpdate) == 0x000000, "Member 'WI_AbilityBase_C_UpdateActivatableState::ForceUpdate' has a wrong offset!");
static_assert(offsetof(WI_AbilityBase_C_UpdateActivatableState, CallFunc_Internal_CanActivate_ReturnValue) == 0x000001, "Member 'WI_AbilityBase_C_UpdateActivatableState::CallFunc_Internal_CanActivate_ReturnValue' has a wrong offset!");
static_assert(offsetof(WI_AbilityBase_C_UpdateActivatableState, CallFunc_NotEqual_BoolBool_ReturnValue) == 0x000002, "Member 'WI_AbilityBase_C_UpdateActivatableState::CallFunc_NotEqual_BoolBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WI_AbilityBase_C_UpdateActivatableState, CallFunc_BooleanOR_ReturnValue) == 0x000003, "Member 'WI_AbilityBase_C_UpdateActivatableState::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

}

