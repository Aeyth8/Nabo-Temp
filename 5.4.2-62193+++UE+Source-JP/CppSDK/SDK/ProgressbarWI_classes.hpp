#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ProgressbarWI

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass ProgressbarWI.ProgressbarWI_C
// 0x00B8 (0x0398 - 0x02E0)
class UProgressbarWI_C : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02E0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UImage*                                 Image_BG;                                          // 0x02E8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_Frame;                                       // 0x02F0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_HP;                                          // 0x02F8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_HP_Delayed;                                  // 0x0300(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               Overlay_0;                                         // 0x0308(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	double                                        Delay;                                             // 0x0310(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        DelayInterpSpeed;                                  // 0x0318(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        HitAnimationStrength;                              // 0x0320(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        HitAnimationRotationMultiplier;                    // 0x0328(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVectorSpringState                     SpringState;                                       // 0x0330(0x0038)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor)
	struct FVector                                SpringOffset;                                      // 0x0368(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        SetTimestamp;                                      // 0x0380(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        DelayedPercentage;                                 // 0x0388(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Percentage;                                        // 0x0390(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void Construct();
	void ExecuteUbergraph_ProgressbarWI(int32 EntryPoint);
	void PreConstruct(bool IsDesignTime);
	void Tick(const struct FGeometry& MyGeometry, float InDeltaTime);
	void Update_Delayed_Progressbar_Instant(double DelayedPercentage_0);
	void Update_Progressbar_Percentage(double InPercent);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"ProgressbarWI_C">();
	}
	static class UProgressbarWI_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UProgressbarWI_C>();
	}
};
static_assert(alignof(UProgressbarWI_C) == 0x000008, "Wrong alignment on UProgressbarWI_C");
static_assert(sizeof(UProgressbarWI_C) == 0x000398, "Wrong size on UProgressbarWI_C");
static_assert(offsetof(UProgressbarWI_C, UberGraphFrame) == 0x0002E0, "Member 'UProgressbarWI_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UProgressbarWI_C, Image_BG) == 0x0002E8, "Member 'UProgressbarWI_C::Image_BG' has a wrong offset!");
static_assert(offsetof(UProgressbarWI_C, Image_Frame) == 0x0002F0, "Member 'UProgressbarWI_C::Image_Frame' has a wrong offset!");
static_assert(offsetof(UProgressbarWI_C, Image_HP) == 0x0002F8, "Member 'UProgressbarWI_C::Image_HP' has a wrong offset!");
static_assert(offsetof(UProgressbarWI_C, Image_HP_Delayed) == 0x000300, "Member 'UProgressbarWI_C::Image_HP_Delayed' has a wrong offset!");
static_assert(offsetof(UProgressbarWI_C, Overlay_0) == 0x000308, "Member 'UProgressbarWI_C::Overlay_0' has a wrong offset!");
static_assert(offsetof(UProgressbarWI_C, Delay) == 0x000310, "Member 'UProgressbarWI_C::Delay' has a wrong offset!");
static_assert(offsetof(UProgressbarWI_C, DelayInterpSpeed) == 0x000318, "Member 'UProgressbarWI_C::DelayInterpSpeed' has a wrong offset!");
static_assert(offsetof(UProgressbarWI_C, HitAnimationStrength) == 0x000320, "Member 'UProgressbarWI_C::HitAnimationStrength' has a wrong offset!");
static_assert(offsetof(UProgressbarWI_C, HitAnimationRotationMultiplier) == 0x000328, "Member 'UProgressbarWI_C::HitAnimationRotationMultiplier' has a wrong offset!");
static_assert(offsetof(UProgressbarWI_C, SpringState) == 0x000330, "Member 'UProgressbarWI_C::SpringState' has a wrong offset!");
static_assert(offsetof(UProgressbarWI_C, SpringOffset) == 0x000368, "Member 'UProgressbarWI_C::SpringOffset' has a wrong offset!");
static_assert(offsetof(UProgressbarWI_C, SetTimestamp) == 0x000380, "Member 'UProgressbarWI_C::SetTimestamp' has a wrong offset!");
static_assert(offsetof(UProgressbarWI_C, DelayedPercentage) == 0x000388, "Member 'UProgressbarWI_C::DelayedPercentage' has a wrong offset!");
static_assert(offsetof(UProgressbarWI_C, Percentage) == 0x000390, "Member 'UProgressbarWI_C::Percentage' has a wrong offset!");

}

