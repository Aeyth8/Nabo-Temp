#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Deployable_Magpie_Nest

#include "Basic.hpp"

#include "BP_Deployable_Magpie_Nest_classes.hpp"
#include "BP_Deployable_Magpie_Nest_parameters.hpp"


namespace SDK
{

// Function BP_Deployable_Magpie_Nest.BP_Deployable_Magpie_Nest_C.AbilitySystemComponentIsPlayer
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UAbilitySystemComponent*          TargetASC                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// bool                                    IsPlayer                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class ABP_ResidentCharacter_C*          ResidentCharacter                                      (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_Deployable_Magpie_Nest_C::AbilitySystemComponentIsPlayer(class UAbilitySystemComponent* TargetASC, bool* IsPlayer, class ABP_ResidentCharacter_C** ResidentCharacter)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Deployable_Magpie_Nest_C", "AbilitySystemComponentIsPlayer");

	Params::BP_Deployable_Magpie_Nest_C_AbilitySystemComponentIsPlayer Parms{};

	Parms.TargetASC = TargetASC;

	UObject::ProcessEvent(Func, &Parms);

	if (IsPlayer != nullptr)
		*IsPlayer = Parms.IsPlayer;

	if (ResidentCharacter != nullptr)
		*ResidentCharacter = Parms.ResidentCharacter;
}


// Function BP_Deployable_Magpie_Nest.BP_Deployable_Magpie_Nest_C.BelongsToEnemyTeam
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class AActor*                           TargetASC                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    IsEnemy                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Deployable_Magpie_Nest_C::BelongsToEnemyTeam(class AActor* TargetASC, bool* IsEnemy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Deployable_Magpie_Nest_C", "BelongsToEnemyTeam");

	Params::BP_Deployable_Magpie_Nest_C_BelongsToEnemyTeam Parms{};

	Parms.TargetASC = TargetASC;

	UObject::ProcessEvent(Func, &Parms);

	if (IsEnemy != nullptr)
		*IsEnemy = Parms.IsEnemy;
}


// Function BP_Deployable_Magpie_Nest.BP_Deployable_Magpie_Nest_C.CleanPairFollowingState
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_Magpie_Projectile_C*          Bird                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_Deployable_Magpie_Nest_C::CleanPairFollowingState(class ABP_Magpie_Projectile_C* Bird)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Deployable_Magpie_Nest_C", "CleanPairFollowingState");

	Params::BP_Deployable_Magpie_Nest_C_CleanPairFollowingState Parms{};

	Parms.Bird = Bird;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Deployable_Magpie_Nest.BP_Deployable_Magpie_Nest_C.Contains Bird
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class ABP_Magpie_Projectile_C*          Bird                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// TArray<struct FS_MagpieTargetPair>      List                                                   (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
// bool                                    Return                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FS_MagpieTargetPair              MagpieTargetPair                                       (Parm, OutParm, ZeroConstructor, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)

void ABP_Deployable_Magpie_Nest_C::Contains_Bird(class ABP_Magpie_Projectile_C* Bird, TArray<struct FS_MagpieTargetPair>& List, bool* Return, struct FS_MagpieTargetPair* MagpieTargetPair)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Deployable_Magpie_Nest_C", "Contains Bird");

	Params::BP_Deployable_Magpie_Nest_C_Contains_Bird Parms{};

	Parms.Bird = Bird;
	Parms.List = std::move(List);

	UObject::ProcessEvent(Func, &Parms);

	List = std::move(Parms.List);

	if (Return != nullptr)
		*Return = Parms.Return;

	if (MagpieTargetPair != nullptr)
		*MagpieTargetPair = std::move(Parms.MagpieTargetPair);
}


// Function BP_Deployable_Magpie_Nest.BP_Deployable_Magpie_Nest_C.ContainsTarget
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// TArray<struct FS_MagpieTargetPair>      List                                                   (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
// class AActor*                           TargetASC                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    Return                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FS_MagpieTargetPair              MagpieTargetPair                                       (Parm, OutParm, ZeroConstructor, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)

void ABP_Deployable_Magpie_Nest_C::ContainsTarget(TArray<struct FS_MagpieTargetPair>& List, class AActor* TargetASC, bool* Return, struct FS_MagpieTargetPair* MagpieTargetPair)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Deployable_Magpie_Nest_C", "ContainsTarget");

	Params::BP_Deployable_Magpie_Nest_C_ContainsTarget Parms{};

	Parms.List = std::move(List);
	Parms.TargetASC = TargetASC;

	UObject::ProcessEvent(Func, &Parms);

	List = std::move(Parms.List);

	if (Return != nullptr)
		*Return = Parms.Return;

	if (MagpieTargetPair != nullptr)
		*MagpieTargetPair = std::move(Parms.MagpieTargetPair);
}


// Function BP_Deployable_Magpie_Nest.BP_Deployable_Magpie_Nest_C.CreateNewBird
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           TargetASC                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class USceneComponent*                  StartPosition                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void ABP_Deployable_Magpie_Nest_C::CreateNewBird(class AActor* TargetASC, class USceneComponent* StartPosition)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Deployable_Magpie_Nest_C", "CreateNewBird");

	Params::BP_Deployable_Magpie_Nest_C_CreateNewBird Parms{};

	Parms.TargetASC = TargetASC;
	Parms.StartPosition = StartPosition;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Deployable_Magpie_Nest.BP_Deployable_Magpie_Nest_C.ExecuteUbergraph_BP_Deployable_Magpie_Nest
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Deployable_Magpie_Nest_C::ExecuteUbergraph_BP_Deployable_Magpie_Nest(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Deployable_Magpie_Nest_C", "ExecuteUbergraph_BP_Deployable_Magpie_Nest");

	Params::BP_Deployable_Magpie_Nest_C_ExecuteUbergraph_BP_Deployable_Magpie_Nest Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Deployable_Magpie_Nest.BP_Deployable_Magpie_Nest_C.GetActiveBirdCount
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// TArray<struct FS_MagpieTargetPair>      List                                                   (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
// int32                                   Amount                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Deployable_Magpie_Nest_C::GetActiveBirdCount(TArray<struct FS_MagpieTargetPair>& List, int32* Amount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Deployable_Magpie_Nest_C", "GetActiveBirdCount");

	Params::BP_Deployable_Magpie_Nest_C_GetActiveBirdCount Parms{};

	Parms.List = std::move(List);

	UObject::ProcessEvent(Func, &Parms);

	List = std::move(Parms.List);

	if (Amount != nullptr)
		*Amount = Parms.Amount;
}


// Function BP_Deployable_Magpie_Nest.BP_Deployable_Magpie_Nest_C.GetHomingTarget
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           ActorComponent                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    FoundTarget                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class USceneComponent*                  HomingTarget                                           (Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void ABP_Deployable_Magpie_Nest_C::GetHomingTarget(class AActor* ActorComponent, bool* FoundTarget, class USceneComponent** HomingTarget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Deployable_Magpie_Nest_C", "GetHomingTarget");

	Params::BP_Deployable_Magpie_Nest_C_GetHomingTarget Parms{};

	Parms.ActorComponent = ActorComponent;

	UObject::ProcessEvent(Func, &Parms);

	if (FoundTarget != nullptr)
		*FoundTarget = Parms.FoundTarget;

	if (HomingTarget != nullptr)
		*HomingTarget = Parms.HomingTarget;
}


// Function BP_Deployable_Magpie_Nest.BP_Deployable_Magpie_Nest_C.GetNextAvailableBird
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// TArray<struct FS_MagpieTargetPair>      List                                                   (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
// struct FS_MagpieTargetPair              Pair                                                   (Parm, OutParm, ZeroConstructor, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
// bool                                    FoundAvailableBird                                     (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Deployable_Magpie_Nest_C::GetNextAvailableBird(TArray<struct FS_MagpieTargetPair>& List, struct FS_MagpieTargetPair* Pair, bool* FoundAvailableBird)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Deployable_Magpie_Nest_C", "GetNextAvailableBird");

	Params::BP_Deployable_Magpie_Nest_C_GetNextAvailableBird Parms{};

	Parms.List = std::move(List);

	UObject::ProcessEvent(Func, &Parms);

	List = std::move(Parms.List);

	if (Pair != nullptr)
		*Pair = std::move(Parms.Pair);

	if (FoundAvailableBird != nullptr)
		*FoundAvailableBird = Parms.FoundAvailableBird;
}


// Function BP_Deployable_Magpie_Nest.BP_Deployable_Magpie_Nest_C.GetPairFromBird
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class ABP_Magpie_Projectile_C*          Bird                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// TArray<struct FS_MagpieTargetPair>      List                                                   (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
// bool                                    FoundMatch                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FS_MagpieTargetPair              Pair                                                   (Parm, OutParm, ZeroConstructor, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)

void ABP_Deployable_Magpie_Nest_C::GetPairFromBird(class ABP_Magpie_Projectile_C* Bird, TArray<struct FS_MagpieTargetPair>& List, bool* FoundMatch, struct FS_MagpieTargetPair* Pair)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Deployable_Magpie_Nest_C", "GetPairFromBird");

	Params::BP_Deployable_Magpie_Nest_C_GetPairFromBird Parms{};

	Parms.Bird = Bird;
	Parms.List = std::move(List);

	UObject::ProcessEvent(Func, &Parms);

	List = std::move(Parms.List);

	if (FoundMatch != nullptr)
		*FoundMatch = Parms.FoundMatch;

	if (Pair != nullptr)
		*Pair = std::move(Parms.Pair);
}


// Function BP_Deployable_Magpie_Nest.BP_Deployable_Magpie_Nest_C.GetPairFromTarget
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// TArray<struct FS_MagpieTargetPair>      List                                                   (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
// class UAbilitySystemComponent*          TargetASC                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// bool                                    FoundMatch                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FS_MagpieTargetPair              Pair                                                   (Parm, OutParm, ZeroConstructor, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)

void ABP_Deployable_Magpie_Nest_C::GetPairFromTarget(TArray<struct FS_MagpieTargetPair>& List, class UAbilitySystemComponent* TargetASC, bool* FoundMatch, struct FS_MagpieTargetPair* Pair)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Deployable_Magpie_Nest_C", "GetPairFromTarget");

	Params::BP_Deployable_Magpie_Nest_C_GetPairFromTarget Parms{};

	Parms.List = std::move(List);
	Parms.TargetASC = TargetASC;

	UObject::ProcessEvent(Func, &Parms);

	List = std::move(Parms.List);

	if (FoundMatch != nullptr)
		*FoundMatch = Parms.FoundMatch;

	if (Pair != nullptr)
		*Pair = std::move(Parms.Pair);
}


// Function BP_Deployable_Magpie_Nest.BP_Deployable_Magpie_Nest_C.HasLineOfSightOver
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class AActor*                           TargetCharacter                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    HasLineOfSite                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Deployable_Magpie_Nest_C::HasLineOfSightOver(class AActor* TargetCharacter, bool* HasLineOfSite)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Deployable_Magpie_Nest_C", "HasLineOfSightOver");

	Params::BP_Deployable_Magpie_Nest_C_HasLineOfSightOver Parms{};

	Parms.TargetCharacter = TargetCharacter;

	UObject::ProcessEvent(Func, &Parms);

	if (HasLineOfSite != nullptr)
		*HasLineOfSite = Parms.HasLineOfSite;
}


// Function BP_Deployable_Magpie_Nest.BP_Deployable_Magpie_Nest_C.IsWithinTriggerZone
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class USphereComponent*                 SphereCollision                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class AActor*                           TargetActor                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    ToReturn                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Deployable_Magpie_Nest_C::IsWithinTriggerZone(class USphereComponent* SphereCollision, class AActor* TargetActor, bool* ToReturn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Deployable_Magpie_Nest_C", "IsWithinTriggerZone");

	Params::BP_Deployable_Magpie_Nest_C_IsWithinTriggerZone Parms{};

	Parms.SphereCollision = SphereCollision;
	Parms.TargetActor = TargetActor;

	UObject::ProcessEvent(Func, &Parms);

	if (ToReturn != nullptr)
		*ToReturn = Parms.ToReturn;
}


// Function BP_Deployable_Magpie_Nest.BP_Deployable_Magpie_Nest_C.LogMessage
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FText                             Text                                                   (BlueprintVisible, BlueprintReadOnly, Parm)
// bool                                    IsError                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  Duration                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Deployable_Magpie_Nest_C::LogMessage(const class FText& Text, bool IsError, double Duration)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Deployable_Magpie_Nest_C", "LogMessage");

	Params::BP_Deployable_Magpie_Nest_C_LogMessage Parms{};

	Parms.Text = std::move(Text);
	Parms.IsError = IsError;
	Parms.Duration = Duration;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Deployable_Magpie_Nest.BP_Deployable_Magpie_Nest_C.OnBirdReturnedToNest
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_Magpie_Projectile_C*          ReturningBird                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_Deployable_Magpie_Nest_C::OnBirdReturnedToNest(class ABP_Magpie_Projectile_C* ReturningBird)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Deployable_Magpie_Nest_C", "OnBirdReturnedToNest");

	Params::BP_Deployable_Magpie_Nest_C_OnBirdReturnedToNest Parms{};

	Parms.ReturningBird = ReturningBird;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Deployable_Magpie_Nest.BP_Deployable_Magpie_Nest_C.ProcessInvalidTarget
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           TargetCharacter                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_Deployable_Magpie_Nest_C::ProcessInvalidTarget(class AActor* TargetCharacter)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Deployable_Magpie_Nest_C", "ProcessInvalidTarget");

	Params::BP_Deployable_Magpie_Nest_C_ProcessInvalidTarget Parms{};

	Parms.TargetCharacter = TargetCharacter;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Deployable_Magpie_Nest.BP_Deployable_Magpie_Nest_C.ProcessValidTarget
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           TargetCharacter                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    IsPriorityTarget                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Deployable_Magpie_Nest_C::ProcessValidTarget(class AActor* TargetCharacter, bool IsPriorityTarget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Deployable_Magpie_Nest_C", "ProcessValidTarget");

	Params::BP_Deployable_Magpie_Nest_C_ProcessValidTarget Parms{};

	Parms.TargetCharacter = TargetCharacter;
	Parms.IsPriorityTarget = IsPriorityTarget;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Deployable_Magpie_Nest.BP_Deployable_Magpie_Nest_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ABP_Deployable_Magpie_Nest_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Deployable_Magpie_Nest_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Deployable_Magpie_Nest.BP_Deployable_Magpie_Nest_C.ReceiveDestroyed
// (Event, Public, BlueprintEvent)

void ABP_Deployable_Magpie_Nest_C::ReceiveDestroyed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Deployable_Magpie_Nest_C", "ReceiveDestroyed");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Deployable_Magpie_Nest.BP_Deployable_Magpie_Nest_C.Remove Pair From List
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UAbilitySystemComponent*          TargetASC                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class ABP_Magpie_Projectile_C*          Bird                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_Deployable_Magpie_Nest_C::Remove_Pair_From_List(class UAbilitySystemComponent* TargetASC, class ABP_Magpie_Projectile_C* Bird)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Deployable_Magpie_Nest_C", "Remove Pair From List");

	Params::BP_Deployable_Magpie_Nest_C_Remove_Pair_From_List Parms{};

	Parms.TargetASC = TargetASC;
	Parms.Bird = Bird;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Deployable_Magpie_Nest.BP_Deployable_Magpie_Nest_C.ScanForTargets
// (BlueprintCallable, BlueprintEvent)

void ABP_Deployable_Magpie_Nest_C::ScanForTargets()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Deployable_Magpie_Nest_C", "ScanForTargets");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Deployable_Magpie_Nest.BP_Deployable_Magpie_Nest_C.SendBirdAfterTarget
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Target_ASC                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class ABP_Magpie_Projectile_C*          Bird                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_Deployable_Magpie_Nest_C::SendBirdAfterTarget(class AActor* Target_ASC, class ABP_Magpie_Projectile_C* Bird)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Deployable_Magpie_Nest_C", "SendBirdAfterTarget");

	Params::BP_Deployable_Magpie_Nest_C_SendBirdAfterTarget Parms{};

	Parms.Target_ASC = Target_ASC;
	Parms.Bird = Bird;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Deployable_Magpie_Nest.BP_Deployable_Magpie_Nest_C.SendBirdBackToNest
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_Magpie_Projectile_C*          BirdToReturn                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_Deployable_Magpie_Nest_C::SendBirdBackToNest(class ABP_Magpie_Projectile_C* BirdToReturn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Deployable_Magpie_Nest_C", "SendBirdBackToNest");

	Params::BP_Deployable_Magpie_Nest_C_SendBirdBackToNest Parms{};

	Parms.BirdToReturn = BirdToReturn;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Deployable_Magpie_Nest.BP_Deployable_Magpie_Nest_C.SetIdleBirdState
// (Net, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// class USceneComponent*                  StartPosition                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// bool                                    Visibility                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Deployable_Magpie_Nest_C::SetIdleBirdState(class USceneComponent* StartPosition, bool Visibility)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Deployable_Magpie_Nest_C", "SetIdleBirdState");

	Params::BP_Deployable_Magpie_Nest_C_SetIdleBirdState Parms{};

	Parms.StartPosition = StartPosition;
	Parms.Visibility = Visibility;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Deployable_Magpie_Nest.BP_Deployable_Magpie_Nest_C.SetTargetForExistingBird
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UAbilitySystemComponent*          TargetASC                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class ABP_Magpie_Projectile_C*          Bird                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class USceneComponent*                  StartPosition                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void ABP_Deployable_Magpie_Nest_C::SetTargetForExistingBird(class UAbilitySystemComponent* TargetASC, class ABP_Magpie_Projectile_C* Bird, class USceneComponent* StartPosition)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Deployable_Magpie_Nest_C", "SetTargetForExistingBird");

	Params::BP_Deployable_Magpie_Nest_C_SetTargetForExistingBird Parms{};

	Parms.TargetASC = TargetASC;
	Parms.Bird = Bird;
	Parms.StartPosition = StartPosition;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Deployable_Magpie_Nest.BP_Deployable_Magpie_Nest_C.ThrowProjectile
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FTransform                       SpawnTransform                                         (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  ProjectileSpeed                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class APawn*                            Owner_0                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class USceneComponent*                  HomingTarget                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class AActor*                           TargetASC                                              (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class USceneComponent*                  StartPosition                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// double                                  Damage_0                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Deployable_Magpie_Nest_C::ThrowProjectile(const struct FTransform& SpawnTransform, double ProjectileSpeed, class APawn* Owner_0, class USceneComponent* HomingTarget, const class AActor* TargetASC, class USceneComponent* StartPosition, double Damage_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Deployable_Magpie_Nest_C", "ThrowProjectile");

	Params::BP_Deployable_Magpie_Nest_C_ThrowProjectile Parms{};

	Parms.SpawnTransform = std::move(SpawnTransform);
	Parms.ProjectileSpeed = ProjectileSpeed;
	Parms.Owner_0 = Owner_0;
	Parms.HomingTarget = HomingTarget;
	Parms.TargetASC = TargetASC;
	Parms.StartPosition = StartPosition;
	Parms.Damage_0 = Damage_0;

	UObject::ProcessEvent(Func, &Parms);
}

}

