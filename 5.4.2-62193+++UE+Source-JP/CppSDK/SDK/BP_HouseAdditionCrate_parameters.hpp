#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_HouseAdditionCrate

#include "Basic.hpp"

#include "JP_structs.hpp"
#include "GameplayAbilities_structs.hpp"
#include "SlateCore_structs.hpp"
#include "Engine_structs.hpp"
#include "EAmmoState_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function BP_HouseAdditionCrate.BP_HouseAdditionCrate_C.CheckIfItemAlreadyInInventory
// 0x0020 (0x0020 - 0x0000)
struct BP_HouseAdditionCrate_C_CheckIfItemAlreadyInInventory final
{
public:
	class UInventoryComponent*                    Inventory_0;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          ItemAlreadyInInventory;                            // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UItemInstance*                          CallFunc_GetFirstItemOfType_ReturnValue;           // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_HouseAdditionCrate_C_CheckIfItemAlreadyInInventory) == 0x000008, "Wrong alignment on BP_HouseAdditionCrate_C_CheckIfItemAlreadyInInventory");
static_assert(sizeof(BP_HouseAdditionCrate_C_CheckIfItemAlreadyInInventory) == 0x000020, "Wrong size on BP_HouseAdditionCrate_C_CheckIfItemAlreadyInInventory");
static_assert(offsetof(BP_HouseAdditionCrate_C_CheckIfItemAlreadyInInventory, Inventory_0) == 0x000000, "Member 'BP_HouseAdditionCrate_C_CheckIfItemAlreadyInInventory::Inventory_0' has a wrong offset!");
static_assert(offsetof(BP_HouseAdditionCrate_C_CheckIfItemAlreadyInInventory, ItemAlreadyInInventory) == 0x000008, "Member 'BP_HouseAdditionCrate_C_CheckIfItemAlreadyInInventory::ItemAlreadyInInventory' has a wrong offset!");
static_assert(offsetof(BP_HouseAdditionCrate_C_CheckIfItemAlreadyInInventory, CallFunc_GetFirstItemOfType_ReturnValue) == 0x000010, "Member 'BP_HouseAdditionCrate_C_CheckIfItemAlreadyInInventory::CallFunc_GetFirstItemOfType_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HouseAdditionCrate_C_CheckIfItemAlreadyInInventory, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'BP_HouseAdditionCrate_C_CheckIfItemAlreadyInInventory::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_HouseAdditionCrate.BP_HouseAdditionCrate_C.ExecuteUbergraph_BP_HouseAdditionCrate
// 0x00D0 (0x00D0 - 0x0000)
struct BP_HouseAdditionCrate_C_ExecuteUbergraph_BP_HouseAdditionCrate final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_Event_Focusing_Actor;                       // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UInitializationStateEnded*              CallFunc_ListenToInitializationStateEnded_ReturnValue; // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x001C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UInitializationStateEnded*              CallFunc_ListenToInitializationStateEnded_ReturnValue_1; // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x0038(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A[0x6];                                       // 0x004A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetActorForwardVector_ReturnValue;        // 0x0050(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0068(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_Event_InteractingActor;                     // 0x0080(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_Event_InteractionComponent;                 // 0x0088(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class ABP_ResidentCharacter_C*                K2Node_DynamicCast_AsBP_Resident_Character;        // 0x0090(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Try_Grant_Ammo_Success;                   // 0x0099(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EAmmoState                                    CallFunc_Try_Grant_Ammo_State;                     // 0x009A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLocallyControlled_ReturnValue;          // 0x009B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x009C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue_1;               // 0x009D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9E[0x2];                                       // 0x009E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_2;            // 0x00A0(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue_2;               // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B1[0x3];                                       // 0x00B1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateColor                            CallFunc_GetItemColor_SlateColor;                  // 0x00B4(0x0014)()
	int32                                         CallFunc_GetItemColor_StencilValue;                // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_HouseAdditionCrate_C_ExecuteUbergraph_BP_HouseAdditionCrate) == 0x000008, "Wrong alignment on BP_HouseAdditionCrate_C_ExecuteUbergraph_BP_HouseAdditionCrate");
static_assert(sizeof(BP_HouseAdditionCrate_C_ExecuteUbergraph_BP_HouseAdditionCrate) == 0x0000D0, "Wrong size on BP_HouseAdditionCrate_C_ExecuteUbergraph_BP_HouseAdditionCrate");
static_assert(offsetof(BP_HouseAdditionCrate_C_ExecuteUbergraph_BP_HouseAdditionCrate, EntryPoint) == 0x000000, "Member 'BP_HouseAdditionCrate_C_ExecuteUbergraph_BP_HouseAdditionCrate::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_HouseAdditionCrate_C_ExecuteUbergraph_BP_HouseAdditionCrate, K2Node_Event_Focusing_Actor) == 0x000008, "Member 'BP_HouseAdditionCrate_C_ExecuteUbergraph_BP_HouseAdditionCrate::K2Node_Event_Focusing_Actor' has a wrong offset!");
static_assert(offsetof(BP_HouseAdditionCrate_C_ExecuteUbergraph_BP_HouseAdditionCrate, CallFunc_ListenToInitializationStateEnded_ReturnValue) == 0x000010, "Member 'BP_HouseAdditionCrate_C_ExecuteUbergraph_BP_HouseAdditionCrate::CallFunc_ListenToInitializationStateEnded_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HouseAdditionCrate_C_ExecuteUbergraph_BP_HouseAdditionCrate, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'BP_HouseAdditionCrate_C_ExecuteUbergraph_BP_HouseAdditionCrate::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HouseAdditionCrate_C_ExecuteUbergraph_BP_HouseAdditionCrate, K2Node_CreateDelegate_OutputDelegate) == 0x00001C, "Member 'BP_HouseAdditionCrate_C_ExecuteUbergraph_BP_HouseAdditionCrate::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_HouseAdditionCrate_C_ExecuteUbergraph_BP_HouseAdditionCrate, CallFunc_ListenToInitializationStateEnded_ReturnValue_1) == 0x000030, "Member 'BP_HouseAdditionCrate_C_ExecuteUbergraph_BP_HouseAdditionCrate::CallFunc_ListenToInitializationStateEnded_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_HouseAdditionCrate_C_ExecuteUbergraph_BP_HouseAdditionCrate, K2Node_CreateDelegate_OutputDelegate_1) == 0x000038, "Member 'BP_HouseAdditionCrate_C_ExecuteUbergraph_BP_HouseAdditionCrate::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(BP_HouseAdditionCrate_C_ExecuteUbergraph_BP_HouseAdditionCrate, CallFunc_IsValid_ReturnValue_1) == 0x000048, "Member 'BP_HouseAdditionCrate_C_ExecuteUbergraph_BP_HouseAdditionCrate::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_HouseAdditionCrate_C_ExecuteUbergraph_BP_HouseAdditionCrate, CallFunc_HasAuthority_ReturnValue) == 0x000049, "Member 'BP_HouseAdditionCrate_C_ExecuteUbergraph_BP_HouseAdditionCrate::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HouseAdditionCrate_C_ExecuteUbergraph_BP_HouseAdditionCrate, CallFunc_GetActorForwardVector_ReturnValue) == 0x000050, "Member 'BP_HouseAdditionCrate_C_ExecuteUbergraph_BP_HouseAdditionCrate::CallFunc_GetActorForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HouseAdditionCrate_C_ExecuteUbergraph_BP_HouseAdditionCrate, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000068, "Member 'BP_HouseAdditionCrate_C_ExecuteUbergraph_BP_HouseAdditionCrate::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HouseAdditionCrate_C_ExecuteUbergraph_BP_HouseAdditionCrate, K2Node_Event_InteractingActor) == 0x000080, "Member 'BP_HouseAdditionCrate_C_ExecuteUbergraph_BP_HouseAdditionCrate::K2Node_Event_InteractingActor' has a wrong offset!");
static_assert(offsetof(BP_HouseAdditionCrate_C_ExecuteUbergraph_BP_HouseAdditionCrate, K2Node_Event_InteractionComponent) == 0x000088, "Member 'BP_HouseAdditionCrate_C_ExecuteUbergraph_BP_HouseAdditionCrate::K2Node_Event_InteractionComponent' has a wrong offset!");
static_assert(offsetof(BP_HouseAdditionCrate_C_ExecuteUbergraph_BP_HouseAdditionCrate, K2Node_DynamicCast_AsBP_Resident_Character) == 0x000090, "Member 'BP_HouseAdditionCrate_C_ExecuteUbergraph_BP_HouseAdditionCrate::K2Node_DynamicCast_AsBP_Resident_Character' has a wrong offset!");
static_assert(offsetof(BP_HouseAdditionCrate_C_ExecuteUbergraph_BP_HouseAdditionCrate, K2Node_DynamicCast_bSuccess) == 0x000098, "Member 'BP_HouseAdditionCrate_C_ExecuteUbergraph_BP_HouseAdditionCrate::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_HouseAdditionCrate_C_ExecuteUbergraph_BP_HouseAdditionCrate, CallFunc_Try_Grant_Ammo_Success) == 0x000099, "Member 'BP_HouseAdditionCrate_C_ExecuteUbergraph_BP_HouseAdditionCrate::CallFunc_Try_Grant_Ammo_Success' has a wrong offset!");
static_assert(offsetof(BP_HouseAdditionCrate_C_ExecuteUbergraph_BP_HouseAdditionCrate, CallFunc_Try_Grant_Ammo_State) == 0x00009A, "Member 'BP_HouseAdditionCrate_C_ExecuteUbergraph_BP_HouseAdditionCrate::CallFunc_Try_Grant_Ammo_State' has a wrong offset!");
static_assert(offsetof(BP_HouseAdditionCrate_C_ExecuteUbergraph_BP_HouseAdditionCrate, CallFunc_IsLocallyControlled_ReturnValue) == 0x00009B, "Member 'BP_HouseAdditionCrate_C_ExecuteUbergraph_BP_HouseAdditionCrate::CallFunc_IsLocallyControlled_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HouseAdditionCrate_C_ExecuteUbergraph_BP_HouseAdditionCrate, K2Node_SwitchEnum_CmpSuccess) == 0x00009C, "Member 'BP_HouseAdditionCrate_C_ExecuteUbergraph_BP_HouseAdditionCrate::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_HouseAdditionCrate_C_ExecuteUbergraph_BP_HouseAdditionCrate, CallFunc_HasAuthority_ReturnValue_1) == 0x00009D, "Member 'BP_HouseAdditionCrate_C_ExecuteUbergraph_BP_HouseAdditionCrate::CallFunc_HasAuthority_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_HouseAdditionCrate_C_ExecuteUbergraph_BP_HouseAdditionCrate, K2Node_CreateDelegate_OutputDelegate_2) == 0x0000A0, "Member 'BP_HouseAdditionCrate_C_ExecuteUbergraph_BP_HouseAdditionCrate::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(BP_HouseAdditionCrate_C_ExecuteUbergraph_BP_HouseAdditionCrate, CallFunc_HasAuthority_ReturnValue_2) == 0x0000B0, "Member 'BP_HouseAdditionCrate_C_ExecuteUbergraph_BP_HouseAdditionCrate::CallFunc_HasAuthority_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_HouseAdditionCrate_C_ExecuteUbergraph_BP_HouseAdditionCrate, CallFunc_GetItemColor_SlateColor) == 0x0000B4, "Member 'BP_HouseAdditionCrate_C_ExecuteUbergraph_BP_HouseAdditionCrate::CallFunc_GetItemColor_SlateColor' has a wrong offset!");
static_assert(offsetof(BP_HouseAdditionCrate_C_ExecuteUbergraph_BP_HouseAdditionCrate, CallFunc_GetItemColor_StencilValue) == 0x0000C8, "Member 'BP_HouseAdditionCrate_C_ExecuteUbergraph_BP_HouseAdditionCrate::CallFunc_GetItemColor_StencilValue' has a wrong offset!");

// Function BP_HouseAdditionCrate.BP_HouseAdditionCrate_C.GetItemColor
// 0x0100 (0x0100 - 0x0000)
struct BP_HouseAdditionCrate_C_GetItemColor final
{
public:
	struct FSlateColor                            SlateColor;                                        // 0x0000(0x0014)(Parm, OutParm)
	int32                                         StencilValue;                                      // 0x0014(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EShopItemCategory                             Temp_byte_Variable;                                // 0x0018(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EShopItemCategory                             Temp_byte_Variable_1;                              // 0x0019(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EShopItemCategory                             Temp_byte_Variable_2;                              // 0x001A(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EShopItemCategory                             Temp_byte_Variable_3;                              // 0x001B(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_TweakableData_C*                    CallFunc_Get_BP_Tweakable_Data_AsBP_Tweakable_Data; // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_LoadAsset_Blocking_ReturnValue;           // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UItemDefinition*                        K2Node_DynamicCast_AsItem_Definition;              // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x3];                                       // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           CallFunc_Map_Find_Value;                           // 0x003C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EShopItemCategory                             CallFunc_GetShopItemCategoryForItemDefinition_ShopItemCategory; // 0x004D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetShopItemCategoryForItemDefinition_Success; // 0x004E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4F[0x1];                                       // 0x004F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetShopItemCategoryForItemDefinition_StencilValue; // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x0054(0x0014)()
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_69[0x7];                                       // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_TweakableData_C*                    CallFunc_Get_BP_Tweakable_Data_AsBP_Tweakable_Data_1; // 0x0070(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBP_TweakableData_C*                    CallFunc_Get_BP_Tweakable_Data_AsBP_Tweakable_Data_2; // 0x0078(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Map_Find_Value_1;                         // 0x0080(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue_1;                   // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_91[0x3];                                       // 0x0091(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           CallFunc_Map_Find_Value_2;                         // 0x0094(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue_2;                   // 0x00A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A5[0x3];                                       // 0x00A5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateColor                            K2Node_MakeStruct_SlateColor_1;                    // 0x00A8(0x0014)()
	struct FSlateColor                            K2Node_MakeStruct_SlateColor_2;                    // 0x00BC(0x0014)()
	class UBP_TweakableData_C*                    CallFunc_Get_BP_Tweakable_Data_AsBP_Tweakable_Data_3; // 0x00D0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Map_Find_Value_3;                         // 0x00D8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue_3;                   // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E9[0x3];                                       // 0x00E9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateColor                            K2Node_MakeStruct_SlateColor_3;                    // 0x00EC(0x0014)()
};
static_assert(alignof(BP_HouseAdditionCrate_C_GetItemColor) == 0x000008, "Wrong alignment on BP_HouseAdditionCrate_C_GetItemColor");
static_assert(sizeof(BP_HouseAdditionCrate_C_GetItemColor) == 0x000100, "Wrong size on BP_HouseAdditionCrate_C_GetItemColor");
static_assert(offsetof(BP_HouseAdditionCrate_C_GetItemColor, SlateColor) == 0x000000, "Member 'BP_HouseAdditionCrate_C_GetItemColor::SlateColor' has a wrong offset!");
static_assert(offsetof(BP_HouseAdditionCrate_C_GetItemColor, StencilValue) == 0x000014, "Member 'BP_HouseAdditionCrate_C_GetItemColor::StencilValue' has a wrong offset!");
static_assert(offsetof(BP_HouseAdditionCrate_C_GetItemColor, Temp_byte_Variable) == 0x000018, "Member 'BP_HouseAdditionCrate_C_GetItemColor::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_HouseAdditionCrate_C_GetItemColor, Temp_byte_Variable_1) == 0x000019, "Member 'BP_HouseAdditionCrate_C_GetItemColor::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_HouseAdditionCrate_C_GetItemColor, Temp_byte_Variable_2) == 0x00001A, "Member 'BP_HouseAdditionCrate_C_GetItemColor::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_HouseAdditionCrate_C_GetItemColor, Temp_byte_Variable_3) == 0x00001B, "Member 'BP_HouseAdditionCrate_C_GetItemColor::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_HouseAdditionCrate_C_GetItemColor, CallFunc_Get_BP_Tweakable_Data_AsBP_Tweakable_Data) == 0x000020, "Member 'BP_HouseAdditionCrate_C_GetItemColor::CallFunc_Get_BP_Tweakable_Data_AsBP_Tweakable_Data' has a wrong offset!");
static_assert(offsetof(BP_HouseAdditionCrate_C_GetItemColor, CallFunc_LoadAsset_Blocking_ReturnValue) == 0x000028, "Member 'BP_HouseAdditionCrate_C_GetItemColor::CallFunc_LoadAsset_Blocking_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HouseAdditionCrate_C_GetItemColor, K2Node_DynamicCast_AsItem_Definition) == 0x000030, "Member 'BP_HouseAdditionCrate_C_GetItemColor::K2Node_DynamicCast_AsItem_Definition' has a wrong offset!");
static_assert(offsetof(BP_HouseAdditionCrate_C_GetItemColor, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'BP_HouseAdditionCrate_C_GetItemColor::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_HouseAdditionCrate_C_GetItemColor, CallFunc_Map_Find_Value) == 0x00003C, "Member 'BP_HouseAdditionCrate_C_GetItemColor::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BP_HouseAdditionCrate_C_GetItemColor, CallFunc_Map_Find_ReturnValue) == 0x00004C, "Member 'BP_HouseAdditionCrate_C_GetItemColor::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HouseAdditionCrate_C_GetItemColor, CallFunc_GetShopItemCategoryForItemDefinition_ShopItemCategory) == 0x00004D, "Member 'BP_HouseAdditionCrate_C_GetItemColor::CallFunc_GetShopItemCategoryForItemDefinition_ShopItemCategory' has a wrong offset!");
static_assert(offsetof(BP_HouseAdditionCrate_C_GetItemColor, CallFunc_GetShopItemCategoryForItemDefinition_Success) == 0x00004E, "Member 'BP_HouseAdditionCrate_C_GetItemColor::CallFunc_GetShopItemCategoryForItemDefinition_Success' has a wrong offset!");
static_assert(offsetof(BP_HouseAdditionCrate_C_GetItemColor, CallFunc_GetShopItemCategoryForItemDefinition_StencilValue) == 0x000050, "Member 'BP_HouseAdditionCrate_C_GetItemColor::CallFunc_GetShopItemCategoryForItemDefinition_StencilValue' has a wrong offset!");
static_assert(offsetof(BP_HouseAdditionCrate_C_GetItemColor, K2Node_MakeStruct_SlateColor) == 0x000054, "Member 'BP_HouseAdditionCrate_C_GetItemColor::K2Node_MakeStruct_SlateColor' has a wrong offset!");
static_assert(offsetof(BP_HouseAdditionCrate_C_GetItemColor, K2Node_SwitchEnum_CmpSuccess) == 0x000068, "Member 'BP_HouseAdditionCrate_C_GetItemColor::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_HouseAdditionCrate_C_GetItemColor, CallFunc_Get_BP_Tweakable_Data_AsBP_Tweakable_Data_1) == 0x000070, "Member 'BP_HouseAdditionCrate_C_GetItemColor::CallFunc_Get_BP_Tweakable_Data_AsBP_Tweakable_Data_1' has a wrong offset!");
static_assert(offsetof(BP_HouseAdditionCrate_C_GetItemColor, CallFunc_Get_BP_Tweakable_Data_AsBP_Tweakable_Data_2) == 0x000078, "Member 'BP_HouseAdditionCrate_C_GetItemColor::CallFunc_Get_BP_Tweakable_Data_AsBP_Tweakable_Data_2' has a wrong offset!");
static_assert(offsetof(BP_HouseAdditionCrate_C_GetItemColor, CallFunc_Map_Find_Value_1) == 0x000080, "Member 'BP_HouseAdditionCrate_C_GetItemColor::CallFunc_Map_Find_Value_1' has a wrong offset!");
static_assert(offsetof(BP_HouseAdditionCrate_C_GetItemColor, CallFunc_Map_Find_ReturnValue_1) == 0x000090, "Member 'BP_HouseAdditionCrate_C_GetItemColor::CallFunc_Map_Find_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_HouseAdditionCrate_C_GetItemColor, CallFunc_Map_Find_Value_2) == 0x000094, "Member 'BP_HouseAdditionCrate_C_GetItemColor::CallFunc_Map_Find_Value_2' has a wrong offset!");
static_assert(offsetof(BP_HouseAdditionCrate_C_GetItemColor, CallFunc_Map_Find_ReturnValue_2) == 0x0000A4, "Member 'BP_HouseAdditionCrate_C_GetItemColor::CallFunc_Map_Find_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_HouseAdditionCrate_C_GetItemColor, K2Node_MakeStruct_SlateColor_1) == 0x0000A8, "Member 'BP_HouseAdditionCrate_C_GetItemColor::K2Node_MakeStruct_SlateColor_1' has a wrong offset!");
static_assert(offsetof(BP_HouseAdditionCrate_C_GetItemColor, K2Node_MakeStruct_SlateColor_2) == 0x0000BC, "Member 'BP_HouseAdditionCrate_C_GetItemColor::K2Node_MakeStruct_SlateColor_2' has a wrong offset!");
static_assert(offsetof(BP_HouseAdditionCrate_C_GetItemColor, CallFunc_Get_BP_Tweakable_Data_AsBP_Tweakable_Data_3) == 0x0000D0, "Member 'BP_HouseAdditionCrate_C_GetItemColor::CallFunc_Get_BP_Tweakable_Data_AsBP_Tweakable_Data_3' has a wrong offset!");
static_assert(offsetof(BP_HouseAdditionCrate_C_GetItemColor, CallFunc_Map_Find_Value_3) == 0x0000D8, "Member 'BP_HouseAdditionCrate_C_GetItemColor::CallFunc_Map_Find_Value_3' has a wrong offset!");
static_assert(offsetof(BP_HouseAdditionCrate_C_GetItemColor, CallFunc_Map_Find_ReturnValue_3) == 0x0000E8, "Member 'BP_HouseAdditionCrate_C_GetItemColor::CallFunc_Map_Find_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_HouseAdditionCrate_C_GetItemColor, K2Node_MakeStruct_SlateColor_3) == 0x0000EC, "Member 'BP_HouseAdditionCrate_C_GetItemColor::K2Node_MakeStruct_SlateColor_3' has a wrong offset!");

// Function BP_HouseAdditionCrate.BP_HouseAdditionCrate_C.GetNewWidgetColor
// 0x0014 (0x0014 - 0x0000)
struct BP_HouseAdditionCrate_C_GetNewWidgetColor final
{
public:
	struct FSlateColor                            NewColor;                                          // 0x0000(0x0014)(Parm, OutParm)
};
static_assert(alignof(BP_HouseAdditionCrate_C_GetNewWidgetColor) == 0x000004, "Wrong alignment on BP_HouseAdditionCrate_C_GetNewWidgetColor");
static_assert(sizeof(BP_HouseAdditionCrate_C_GetNewWidgetColor) == 0x000014, "Wrong size on BP_HouseAdditionCrate_C_GetNewWidgetColor");
static_assert(offsetof(BP_HouseAdditionCrate_C_GetNewWidgetColor, NewColor) == 0x000000, "Member 'BP_HouseAdditionCrate_C_GetNewWidgetColor::NewColor' has a wrong offset!");

// Function BP_HouseAdditionCrate.BP_HouseAdditionCrate_C.GetOptionalText
// 0x0020 (0x0020 - 0x0000)
struct BP_HouseAdditionCrate_C_GetOptionalText final
{
public:
	class FText                                   Return;                                            // 0x0000(0x0010)(Parm, OutParm)
	class FText                                   Optional_Second_Line;                              // 0x0010(0x0010)(Parm, OutParm)
};
static_assert(alignof(BP_HouseAdditionCrate_C_GetOptionalText) == 0x000008, "Wrong alignment on BP_HouseAdditionCrate_C_GetOptionalText");
static_assert(sizeof(BP_HouseAdditionCrate_C_GetOptionalText) == 0x000020, "Wrong size on BP_HouseAdditionCrate_C_GetOptionalText");
static_assert(offsetof(BP_HouseAdditionCrate_C_GetOptionalText, Return) == 0x000000, "Member 'BP_HouseAdditionCrate_C_GetOptionalText::Return' has a wrong offset!");
static_assert(offsetof(BP_HouseAdditionCrate_C_GetOptionalText, Optional_Second_Line) == 0x000010, "Member 'BP_HouseAdditionCrate_C_GetOptionalText::Optional_Second_Line' has a wrong offset!");

// Function BP_HouseAdditionCrate.BP_HouseAdditionCrate_C.GetWidgetLocation
// 0x0030 (0x0030 - 0x0000)
struct BP_HouseAdditionCrate_C_GetWidgetLocation final
{
public:
	struct FVector                                Location;                                          // 0x0000(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0018(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_HouseAdditionCrate_C_GetWidgetLocation) == 0x000008, "Wrong alignment on BP_HouseAdditionCrate_C_GetWidgetLocation");
static_assert(sizeof(BP_HouseAdditionCrate_C_GetWidgetLocation) == 0x000030, "Wrong size on BP_HouseAdditionCrate_C_GetWidgetLocation");
static_assert(offsetof(BP_HouseAdditionCrate_C_GetWidgetLocation, Location) == 0x000000, "Member 'BP_HouseAdditionCrate_C_GetWidgetLocation::Location' has a wrong offset!");
static_assert(offsetof(BP_HouseAdditionCrate_C_GetWidgetLocation, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000018, "Member 'BP_HouseAdditionCrate_C_GetWidgetLocation::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");

// Function BP_HouseAdditionCrate.BP_HouseAdditionCrate_C.HideInteractionWidget
// 0x0001 (0x0001 - 0x0000)
struct BP_HouseAdditionCrate_C_HideInteractionWidget final
{
public:
	bool                                          Return;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_HouseAdditionCrate_C_HideInteractionWidget) == 0x000001, "Wrong alignment on BP_HouseAdditionCrate_C_HideInteractionWidget");
static_assert(sizeof(BP_HouseAdditionCrate_C_HideInteractionWidget) == 0x000001, "Wrong size on BP_HouseAdditionCrate_C_HideInteractionWidget");
static_assert(offsetof(BP_HouseAdditionCrate_C_HideInteractionWidget, Return) == 0x000000, "Member 'BP_HouseAdditionCrate_C_HideInteractionWidget::Return' has a wrong offset!");

// Function BP_HouseAdditionCrate.BP_HouseAdditionCrate_C.IsInFocus
// 0x0008 (0x0008 - 0x0000)
struct BP_HouseAdditionCrate_C_IsInFocus final
{
public:
	class AActor*                                 Focusing_Actor;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_HouseAdditionCrate_C_IsInFocus) == 0x000008, "Wrong alignment on BP_HouseAdditionCrate_C_IsInFocus");
static_assert(sizeof(BP_HouseAdditionCrate_C_IsInFocus) == 0x000008, "Wrong size on BP_HouseAdditionCrate_C_IsInFocus");
static_assert(offsetof(BP_HouseAdditionCrate_C_IsInFocus, Focusing_Actor) == 0x000000, "Member 'BP_HouseAdditionCrate_C_IsInFocus::Focusing_Actor' has a wrong offset!");

// Function BP_HouseAdditionCrate.BP_HouseAdditionCrate_C.IsInteractable
// 0x0001 (0x0001 - 0x0000)
struct BP_HouseAdditionCrate_C_IsInteractable final
{
public:
	bool                                          Interactable;                                      // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_HouseAdditionCrate_C_IsInteractable) == 0x000001, "Wrong alignment on BP_HouseAdditionCrate_C_IsInteractable");
static_assert(sizeof(BP_HouseAdditionCrate_C_IsInteractable) == 0x000001, "Wrong size on BP_HouseAdditionCrate_C_IsInteractable");
static_assert(offsetof(BP_HouseAdditionCrate_C_IsInteractable, Interactable) == 0x000000, "Member 'BP_HouseAdditionCrate_C_IsInteractable::Interactable' has a wrong offset!");

// Function BP_HouseAdditionCrate.BP_HouseAdditionCrate_C.IsInventoryNotFull
// 0x0048 (0x0048 - 0x0000)
struct BP_HouseAdditionCrate_C_IsInventoryNotFull final
{
public:
	class UInventoryComponent*                    Inventory_0;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UItemInstance*>                  CallFunc_GetAllItemsWithAction_ReturnValue;        // 0x0010(0x0010)(ReferenceParm)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  K2Node_DynamicCast_AsPawn;                         // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x3];                                       // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetInventorySize_ModifiedSize;            // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_HouseAdditionCrate_C_IsInventoryNotFull) == 0x000008, "Wrong alignment on BP_HouseAdditionCrate_C_IsInventoryNotFull");
static_assert(sizeof(BP_HouseAdditionCrate_C_IsInventoryNotFull) == 0x000048, "Wrong size on BP_HouseAdditionCrate_C_IsInventoryNotFull");
static_assert(offsetof(BP_HouseAdditionCrate_C_IsInventoryNotFull, Inventory_0) == 0x000000, "Member 'BP_HouseAdditionCrate_C_IsInventoryNotFull::Inventory_0' has a wrong offset!");
static_assert(offsetof(BP_HouseAdditionCrate_C_IsInventoryNotFull, ReturnValue) == 0x000008, "Member 'BP_HouseAdditionCrate_C_IsInventoryNotFull::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HouseAdditionCrate_C_IsInventoryNotFull, CallFunc_GetAllItemsWithAction_ReturnValue) == 0x000010, "Member 'BP_HouseAdditionCrate_C_IsInventoryNotFull::CallFunc_GetAllItemsWithAction_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HouseAdditionCrate_C_IsInventoryNotFull, CallFunc_GetOwner_ReturnValue) == 0x000020, "Member 'BP_HouseAdditionCrate_C_IsInventoryNotFull::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HouseAdditionCrate_C_IsInventoryNotFull, CallFunc_Array_Length_ReturnValue) == 0x000028, "Member 'BP_HouseAdditionCrate_C_IsInventoryNotFull::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HouseAdditionCrate_C_IsInventoryNotFull, K2Node_DynamicCast_AsPawn) == 0x000030, "Member 'BP_HouseAdditionCrate_C_IsInventoryNotFull::K2Node_DynamicCast_AsPawn' has a wrong offset!");
static_assert(offsetof(BP_HouseAdditionCrate_C_IsInventoryNotFull, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'BP_HouseAdditionCrate_C_IsInventoryNotFull::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_HouseAdditionCrate_C_IsInventoryNotFull, CallFunc_GetInventorySize_ModifiedSize) == 0x00003C, "Member 'BP_HouseAdditionCrate_C_IsInventoryNotFull::CallFunc_GetInventorySize_ModifiedSize' has a wrong offset!");
static_assert(offsetof(BP_HouseAdditionCrate_C_IsInventoryNotFull, CallFunc_Less_IntInt_ReturnValue) == 0x000040, "Member 'BP_HouseAdditionCrate_C_IsInventoryNotFull::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function BP_HouseAdditionCrate.BP_HouseAdditionCrate_C.MakePOIVisibleForOwningTeam
// 0x0018 (0x0018 - 0x0000)
struct BP_HouseAdditionCrate_C_MakePOIVisibleForOwningTeam final
{
public:
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerStateJP*                         CallFunc_GetFirstPlayerStateJP_ReturnValue;        // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetTeamID_ReturnValue;                    // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_HouseAdditionCrate_C_MakePOIVisibleForOwningTeam) == 0x000008, "Wrong alignment on BP_HouseAdditionCrate_C_MakePOIVisibleForOwningTeam");
static_assert(sizeof(BP_HouseAdditionCrate_C_MakePOIVisibleForOwningTeam) == 0x000018, "Wrong size on BP_HouseAdditionCrate_C_MakePOIVisibleForOwningTeam");
static_assert(offsetof(BP_HouseAdditionCrate_C_MakePOIVisibleForOwningTeam, CallFunc_IsDedicatedServer_ReturnValue) == 0x000000, "Member 'BP_HouseAdditionCrate_C_MakePOIVisibleForOwningTeam::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HouseAdditionCrate_C_MakePOIVisibleForOwningTeam, CallFunc_GetFirstPlayerStateJP_ReturnValue) == 0x000008, "Member 'BP_HouseAdditionCrate_C_MakePOIVisibleForOwningTeam::CallFunc_GetFirstPlayerStateJP_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HouseAdditionCrate_C_MakePOIVisibleForOwningTeam, CallFunc_GetTeamID_ReturnValue) == 0x000010, "Member 'BP_HouseAdditionCrate_C_MakePOIVisibleForOwningTeam::CallFunc_GetTeamID_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HouseAdditionCrate_C_MakePOIVisibleForOwningTeam, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000011, "Member 'BP_HouseAdditionCrate_C_MakePOIVisibleForOwningTeam::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function BP_HouseAdditionCrate.BP_HouseAdditionCrate_C.PostInteract
// 0x0010 (0x0010 - 0x0000)
struct BP_HouseAdditionCrate_C_PostInteract final
{
public:
	class AActor*                                 InteractingActor;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    InteractionComponent;                              // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_HouseAdditionCrate_C_PostInteract) == 0x000008, "Wrong alignment on BP_HouseAdditionCrate_C_PostInteract");
static_assert(sizeof(BP_HouseAdditionCrate_C_PostInteract) == 0x000010, "Wrong size on BP_HouseAdditionCrate_C_PostInteract");
static_assert(offsetof(BP_HouseAdditionCrate_C_PostInteract, InteractingActor) == 0x000000, "Member 'BP_HouseAdditionCrate_C_PostInteract::InteractingActor' has a wrong offset!");
static_assert(offsetof(BP_HouseAdditionCrate_C_PostInteract, InteractionComponent) == 0x000008, "Member 'BP_HouseAdditionCrate_C_PostInteract::InteractionComponent' has a wrong offset!");

// Function BP_HouseAdditionCrate.BP_HouseAdditionCrate_C.ReloadAfterHousesLoaded
// 0x0001 (0x0001 - 0x0000)
struct BP_HouseAdditionCrate_C_ReloadAfterHousesLoaded final
{
public:
	bool                                          Return;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_HouseAdditionCrate_C_ReloadAfterHousesLoaded) == 0x000001, "Wrong alignment on BP_HouseAdditionCrate_C_ReloadAfterHousesLoaded");
static_assert(sizeof(BP_HouseAdditionCrate_C_ReloadAfterHousesLoaded) == 0x000001, "Wrong size on BP_HouseAdditionCrate_C_ReloadAfterHousesLoaded");
static_assert(offsetof(BP_HouseAdditionCrate_C_ReloadAfterHousesLoaded, Return) == 0x000000, "Member 'BP_HouseAdditionCrate_C_ReloadAfterHousesLoaded::Return' has a wrong offset!");

// Function BP_HouseAdditionCrate.BP_HouseAdditionCrate_C.SetTeamFromGroundskeeper
// 0x0040 (0x0040 - 0x0000)
struct BP_HouseAdditionCrate_C_SetTeamFromGroundskeeper final
{
public:
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTeam                                  CallFunc_GetTeam_ReturnValue;                      // 0x0008(0x0038)(ConstParm, NoDestructor)
};
static_assert(alignof(BP_HouseAdditionCrate_C_SetTeamFromGroundskeeper) == 0x000008, "Wrong alignment on BP_HouseAdditionCrate_C_SetTeamFromGroundskeeper");
static_assert(sizeof(BP_HouseAdditionCrate_C_SetTeamFromGroundskeeper) == 0x000040, "Wrong size on BP_HouseAdditionCrate_C_SetTeamFromGroundskeeper");
static_assert(offsetof(BP_HouseAdditionCrate_C_SetTeamFromGroundskeeper, CallFunc_HasAuthority_ReturnValue) == 0x000000, "Member 'BP_HouseAdditionCrate_C_SetTeamFromGroundskeeper::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HouseAdditionCrate_C_SetTeamFromGroundskeeper, CallFunc_GetTeam_ReturnValue) == 0x000008, "Member 'BP_HouseAdditionCrate_C_SetTeamFromGroundskeeper::CallFunc_GetTeam_ReturnValue' has a wrong offset!");

// Function BP_HouseAdditionCrate.BP_HouseAdditionCrate_C.UpdateInventoryWidget
// 0x0118 (0x0118 - 0x0000)
struct BP_HouseAdditionCrate_C_UpdateInventoryWidget final
{
public:
	class AActor*                                 InteractingActor;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x0008(0x0014)()
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UInventoryComponent*                    CallFunc_GetComponentByClass_ReturnValue;          // 0x0020(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckIfItemAlreadyInInventory_ItemAlreadyInInventory; // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsInventoryNotFull_ReturnValue;           // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2A[0x2];                                       // 0x002A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateColor                            K2Node_MakeStruct_SlateColor_1;                    // 0x002C(0x0014)()
	bool                                          Temp_bool_Variable;                                // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable;                                // 0x0048(0x0010)()
	class FText                                   Temp_text_Variable_1;                              // 0x0058(0x0010)()
	class FText                                   K2Node_Select_Default;                             // 0x0068(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0078(0x0048)(HasGetValueTypeHash)
	class FText                                   CallFunc_TextToUpper_ReturnValue;                  // 0x00C0(0x0010)()
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x00D0(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x00E0(0x0010)()
	struct FSlateColor                            K2Node_MakeStruct_SlateColor_2;                    // 0x00F0(0x0014)()
	uint8                                         Pad_104[0x4];                                      // 0x0104(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_TextToUpper_ReturnValue_1;                // 0x0108(0x0010)()
};
static_assert(alignof(BP_HouseAdditionCrate_C_UpdateInventoryWidget) == 0x000008, "Wrong alignment on BP_HouseAdditionCrate_C_UpdateInventoryWidget");
static_assert(sizeof(BP_HouseAdditionCrate_C_UpdateInventoryWidget) == 0x000118, "Wrong size on BP_HouseAdditionCrate_C_UpdateInventoryWidget");
static_assert(offsetof(BP_HouseAdditionCrate_C_UpdateInventoryWidget, InteractingActor) == 0x000000, "Member 'BP_HouseAdditionCrate_C_UpdateInventoryWidget::InteractingActor' has a wrong offset!");
static_assert(offsetof(BP_HouseAdditionCrate_C_UpdateInventoryWidget, K2Node_MakeStruct_SlateColor) == 0x000008, "Member 'BP_HouseAdditionCrate_C_UpdateInventoryWidget::K2Node_MakeStruct_SlateColor' has a wrong offset!");
static_assert(offsetof(BP_HouseAdditionCrate_C_UpdateInventoryWidget, CallFunc_GetComponentByClass_ReturnValue) == 0x000020, "Member 'BP_HouseAdditionCrate_C_UpdateInventoryWidget::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HouseAdditionCrate_C_UpdateInventoryWidget, CallFunc_CheckIfItemAlreadyInInventory_ItemAlreadyInInventory) == 0x000028, "Member 'BP_HouseAdditionCrate_C_UpdateInventoryWidget::CallFunc_CheckIfItemAlreadyInInventory_ItemAlreadyInInventory' has a wrong offset!");
static_assert(offsetof(BP_HouseAdditionCrate_C_UpdateInventoryWidget, CallFunc_IsInventoryNotFull_ReturnValue) == 0x000029, "Member 'BP_HouseAdditionCrate_C_UpdateInventoryWidget::CallFunc_IsInventoryNotFull_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HouseAdditionCrate_C_UpdateInventoryWidget, K2Node_MakeStruct_SlateColor_1) == 0x00002C, "Member 'BP_HouseAdditionCrate_C_UpdateInventoryWidget::K2Node_MakeStruct_SlateColor_1' has a wrong offset!");
static_assert(offsetof(BP_HouseAdditionCrate_C_UpdateInventoryWidget, Temp_bool_Variable) == 0x000040, "Member 'BP_HouseAdditionCrate_C_UpdateInventoryWidget::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_HouseAdditionCrate_C_UpdateInventoryWidget, Temp_text_Variable) == 0x000048, "Member 'BP_HouseAdditionCrate_C_UpdateInventoryWidget::Temp_text_Variable' has a wrong offset!");
static_assert(offsetof(BP_HouseAdditionCrate_C_UpdateInventoryWidget, Temp_text_Variable_1) == 0x000058, "Member 'BP_HouseAdditionCrate_C_UpdateInventoryWidget::Temp_text_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_HouseAdditionCrate_C_UpdateInventoryWidget, K2Node_Select_Default) == 0x000068, "Member 'BP_HouseAdditionCrate_C_UpdateInventoryWidget::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_HouseAdditionCrate_C_UpdateInventoryWidget, K2Node_MakeStruct_FormatArgumentData) == 0x000078, "Member 'BP_HouseAdditionCrate_C_UpdateInventoryWidget::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BP_HouseAdditionCrate_C_UpdateInventoryWidget, CallFunc_TextToUpper_ReturnValue) == 0x0000C0, "Member 'BP_HouseAdditionCrate_C_UpdateInventoryWidget::CallFunc_TextToUpper_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HouseAdditionCrate_C_UpdateInventoryWidget, K2Node_MakeArray_Array) == 0x0000D0, "Member 'BP_HouseAdditionCrate_C_UpdateInventoryWidget::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_HouseAdditionCrate_C_UpdateInventoryWidget, CallFunc_Format_ReturnValue) == 0x0000E0, "Member 'BP_HouseAdditionCrate_C_UpdateInventoryWidget::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HouseAdditionCrate_C_UpdateInventoryWidget, K2Node_MakeStruct_SlateColor_2) == 0x0000F0, "Member 'BP_HouseAdditionCrate_C_UpdateInventoryWidget::K2Node_MakeStruct_SlateColor_2' has a wrong offset!");
static_assert(offsetof(BP_HouseAdditionCrate_C_UpdateInventoryWidget, CallFunc_TextToUpper_ReturnValue_1) == 0x000108, "Member 'BP_HouseAdditionCrate_C_UpdateInventoryWidget::CallFunc_TextToUpper_ReturnValue_1' has a wrong offset!");

// Function BP_HouseAdditionCrate.BP_HouseAdditionCrate_C.GetInteractionDuration
// 0x0010 (0x0010 - 0x0000)
struct BP_HouseAdditionCrate_C_GetInteractionDuration final
{
public:
	class UPrimitiveComponent*                    InteractionComponent;                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	float                                         ReturnValue;                                       // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_HouseAdditionCrate_C_GetInteractionDuration) == 0x000008, "Wrong alignment on BP_HouseAdditionCrate_C_GetInteractionDuration");
static_assert(sizeof(BP_HouseAdditionCrate_C_GetInteractionDuration) == 0x000010, "Wrong size on BP_HouseAdditionCrate_C_GetInteractionDuration");
static_assert(offsetof(BP_HouseAdditionCrate_C_GetInteractionDuration, InteractionComponent) == 0x000000, "Member 'BP_HouseAdditionCrate_C_GetInteractionDuration::InteractionComponent' has a wrong offset!");
static_assert(offsetof(BP_HouseAdditionCrate_C_GetInteractionDuration, ReturnValue) == 0x000008, "Member 'BP_HouseAdditionCrate_C_GetInteractionDuration::ReturnValue' has a wrong offset!");

// Function BP_HouseAdditionCrate.BP_HouseAdditionCrate_C.GetPostInteractSyncType
// 0x0010 (0x0010 - 0x0000)
struct BP_HouseAdditionCrate_C_GetPostInteractSyncType final
{
public:
	bool                                          bShouldSync;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EAbilityTaskNetSyncType                       Type;                                              // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    InteractionComponent;                              // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_HouseAdditionCrate_C_GetPostInteractSyncType) == 0x000008, "Wrong alignment on BP_HouseAdditionCrate_C_GetPostInteractSyncType");
static_assert(sizeof(BP_HouseAdditionCrate_C_GetPostInteractSyncType) == 0x000010, "Wrong size on BP_HouseAdditionCrate_C_GetPostInteractSyncType");
static_assert(offsetof(BP_HouseAdditionCrate_C_GetPostInteractSyncType, bShouldSync) == 0x000000, "Member 'BP_HouseAdditionCrate_C_GetPostInteractSyncType::bShouldSync' has a wrong offset!");
static_assert(offsetof(BP_HouseAdditionCrate_C_GetPostInteractSyncType, Type) == 0x000001, "Member 'BP_HouseAdditionCrate_C_GetPostInteractSyncType::Type' has a wrong offset!");
static_assert(offsetof(BP_HouseAdditionCrate_C_GetPostInteractSyncType, InteractionComponent) == 0x000008, "Member 'BP_HouseAdditionCrate_C_GetPostInteractSyncType::InteractionComponent' has a wrong offset!");

// Function BP_HouseAdditionCrate.BP_HouseAdditionCrate_C.GetPreInteractSyncType
// 0x0010 (0x0010 - 0x0000)
struct BP_HouseAdditionCrate_C_GetPreInteractSyncType final
{
public:
	bool                                          bShouldSync;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EAbilityTaskNetSyncType                       Type;                                              // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    InteractionComponent;                              // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_HouseAdditionCrate_C_GetPreInteractSyncType) == 0x000008, "Wrong alignment on BP_HouseAdditionCrate_C_GetPreInteractSyncType");
static_assert(sizeof(BP_HouseAdditionCrate_C_GetPreInteractSyncType) == 0x000010, "Wrong size on BP_HouseAdditionCrate_C_GetPreInteractSyncType");
static_assert(offsetof(BP_HouseAdditionCrate_C_GetPreInteractSyncType, bShouldSync) == 0x000000, "Member 'BP_HouseAdditionCrate_C_GetPreInteractSyncType::bShouldSync' has a wrong offset!");
static_assert(offsetof(BP_HouseAdditionCrate_C_GetPreInteractSyncType, Type) == 0x000001, "Member 'BP_HouseAdditionCrate_C_GetPreInteractSyncType::Type' has a wrong offset!");
static_assert(offsetof(BP_HouseAdditionCrate_C_GetPreInteractSyncType, InteractionComponent) == 0x000008, "Member 'BP_HouseAdditionCrate_C_GetPreInteractSyncType::InteractionComponent' has a wrong offset!");

// Function BP_HouseAdditionCrate.BP_HouseAdditionCrate_C.GetTeam
// 0x0038 (0x0038 - 0x0000)
struct BP_HouseAdditionCrate_C_GetTeam final
{
public:
	struct FTeam                                  ReturnValue;                                       // 0x0000(0x0038)(Parm, OutParm, ReturnParm, NoDestructor)
};
static_assert(alignof(BP_HouseAdditionCrate_C_GetTeam) == 0x000008, "Wrong alignment on BP_HouseAdditionCrate_C_GetTeam");
static_assert(sizeof(BP_HouseAdditionCrate_C_GetTeam) == 0x000038, "Wrong size on BP_HouseAdditionCrate_C_GetTeam");
static_assert(offsetof(BP_HouseAdditionCrate_C_GetTeam, ReturnValue) == 0x000000, "Member 'BP_HouseAdditionCrate_C_GetTeam::ReturnValue' has a wrong offset!");

// Function BP_HouseAdditionCrate.BP_HouseAdditionCrate_C.GetTeamID
// 0x0001 (0x0001 - 0x0000)
struct BP_HouseAdditionCrate_C_GetTeamID final
{
public:
	uint8                                         ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_HouseAdditionCrate_C_GetTeamID) == 0x000001, "Wrong alignment on BP_HouseAdditionCrate_C_GetTeamID");
static_assert(sizeof(BP_HouseAdditionCrate_C_GetTeamID) == 0x000001, "Wrong size on BP_HouseAdditionCrate_C_GetTeamID");
static_assert(offsetof(BP_HouseAdditionCrate_C_GetTeamID, ReturnValue) == 0x000000, "Member 'BP_HouseAdditionCrate_C_GetTeamID::ReturnValue' has a wrong offset!");

// Function BP_HouseAdditionCrate.BP_HouseAdditionCrate_C.HasTeam
// 0x0003 (0x0003 - 0x0000)
struct BP_HouseAdditionCrate_C_HasTeam final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_HouseAdditionCrate_C_HasTeam) == 0x000001, "Wrong alignment on BP_HouseAdditionCrate_C_HasTeam");
static_assert(sizeof(BP_HouseAdditionCrate_C_HasTeam) == 0x000003, "Wrong size on BP_HouseAdditionCrate_C_HasTeam");
static_assert(offsetof(BP_HouseAdditionCrate_C_HasTeam, ReturnValue) == 0x000000, "Member 'BP_HouseAdditionCrate_C_HasTeam::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HouseAdditionCrate_C_HasTeam, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000001, "Member 'BP_HouseAdditionCrate_C_HasTeam::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HouseAdditionCrate_C_HasTeam, CallFunc_Not_PreBool_ReturnValue) == 0x000002, "Member 'BP_HouseAdditionCrate_C_HasTeam::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function BP_HouseAdditionCrate.BP_HouseAdditionCrate_C.IsAvailableForEnemyTeam
// 0x0010 (0x0010 - 0x0000)
struct BP_HouseAdditionCrate_C_IsAvailableForEnemyTeam final
{
public:
	class UPrimitiveComponent*                    InteractionComponent;                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_HouseAdditionCrate_C_IsAvailableForEnemyTeam) == 0x000008, "Wrong alignment on BP_HouseAdditionCrate_C_IsAvailableForEnemyTeam");
static_assert(sizeof(BP_HouseAdditionCrate_C_IsAvailableForEnemyTeam) == 0x000010, "Wrong size on BP_HouseAdditionCrate_C_IsAvailableForEnemyTeam");
static_assert(offsetof(BP_HouseAdditionCrate_C_IsAvailableForEnemyTeam, InteractionComponent) == 0x000000, "Member 'BP_HouseAdditionCrate_C_IsAvailableForEnemyTeam::InteractionComponent' has a wrong offset!");
static_assert(offsetof(BP_HouseAdditionCrate_C_IsAvailableForEnemyTeam, ReturnValue) == 0x000008, "Member 'BP_HouseAdditionCrate_C_IsAvailableForEnemyTeam::ReturnValue' has a wrong offset!");

// Function BP_HouseAdditionCrate.BP_HouseAdditionCrate_C.IsAvailableForInteraction
// 0x0018 (0x0018 - 0x0000)
struct BP_HouseAdditionCrate_C_IsAvailableForInteraction final
{
public:
	class AActor*                                 InteractingActor;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    InteractionComponent;                              // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_HouseAdditionCrate_C_IsAvailableForInteraction) == 0x000008, "Wrong alignment on BP_HouseAdditionCrate_C_IsAvailableForInteraction");
static_assert(sizeof(BP_HouseAdditionCrate_C_IsAvailableForInteraction) == 0x000018, "Wrong size on BP_HouseAdditionCrate_C_IsAvailableForInteraction");
static_assert(offsetof(BP_HouseAdditionCrate_C_IsAvailableForInteraction, InteractingActor) == 0x000000, "Member 'BP_HouseAdditionCrate_C_IsAvailableForInteraction::InteractingActor' has a wrong offset!");
static_assert(offsetof(BP_HouseAdditionCrate_C_IsAvailableForInteraction, InteractionComponent) == 0x000008, "Member 'BP_HouseAdditionCrate_C_IsAvailableForInteraction::InteractionComponent' has a wrong offset!");
static_assert(offsetof(BP_HouseAdditionCrate_C_IsAvailableForInteraction, ReturnValue) == 0x000010, "Member 'BP_HouseAdditionCrate_C_IsAvailableForInteraction::ReturnValue' has a wrong offset!");

// Function BP_HouseAdditionCrate.BP_HouseAdditionCrate_C.TakeDamageFromAllTeams
// 0x0001 (0x0001 - 0x0000)
struct BP_HouseAdditionCrate_C_TakeDamageFromAllTeams final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_HouseAdditionCrate_C_TakeDamageFromAllTeams) == 0x000001, "Wrong alignment on BP_HouseAdditionCrate_C_TakeDamageFromAllTeams");
static_assert(sizeof(BP_HouseAdditionCrate_C_TakeDamageFromAllTeams) == 0x000001, "Wrong size on BP_HouseAdditionCrate_C_TakeDamageFromAllTeams");
static_assert(offsetof(BP_HouseAdditionCrate_C_TakeDamageFromAllTeams, ReturnValue) == 0x000000, "Member 'BP_HouseAdditionCrate_C_TakeDamageFromAllTeams::ReturnValue' has a wrong offset!");

}

