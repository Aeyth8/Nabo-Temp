#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_BaseballBat_ProjectileOverlapVolume

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_BaseballBat_ProjectileOverlapVolume.BP_BaseballBat_ProjectileOverlapVolume_C
// 0x0068 (0x02F8 - 0x0290)
class ABP_BaseballBat_ProjectileOverlapVolume_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0290(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UStaticMeshComponent*                   Cube;                                              // 0x0298(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x02A0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	double                                        LifetimeInSec;                                     // 0x02A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  InstigatorPawn;                                    // 0x02B0(0x0008)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	double                                        ForwardOffset;                                     // 0x02B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        UpOffset;                                          // 0x02C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        AimPointDistance;                                  // 0x02C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 Other_Actor;                                       // 0x02D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UProjectileMovementComponent*           ProjectileMovementComponent;                       // 0x02D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	double                                        NewProjectileVelocity;                             // 0x02E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        AimPointUppOffset;                                 // 0x02E8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          VolumeIsActive;                                    // 0x02F0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ActivateCollision();
	void DeactivateCollisions();
	void ExecuteUbergraph_BP_BaseballBat_ProjectileOverlapVolume(int32 EntryPoint);
	void InitializeOverlapVolume(class APawn* InstigatorPawn_0);
	void ReceiveActorBeginOverlap(class AActor* OtherActor);
	void UpdateVolumePositionLocation();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_BaseballBat_ProjectileOverlapVolume_C">();
	}
	static class ABP_BaseballBat_ProjectileOverlapVolume_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_BaseballBat_ProjectileOverlapVolume_C>();
	}
};
static_assert(alignof(ABP_BaseballBat_ProjectileOverlapVolume_C) == 0x000008, "Wrong alignment on ABP_BaseballBat_ProjectileOverlapVolume_C");
static_assert(sizeof(ABP_BaseballBat_ProjectileOverlapVolume_C) == 0x0002F8, "Wrong size on ABP_BaseballBat_ProjectileOverlapVolume_C");
static_assert(offsetof(ABP_BaseballBat_ProjectileOverlapVolume_C, UberGraphFrame) == 0x000290, "Member 'ABP_BaseballBat_ProjectileOverlapVolume_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_BaseballBat_ProjectileOverlapVolume_C, Cube) == 0x000298, "Member 'ABP_BaseballBat_ProjectileOverlapVolume_C::Cube' has a wrong offset!");
static_assert(offsetof(ABP_BaseballBat_ProjectileOverlapVolume_C, DefaultSceneRoot) == 0x0002A0, "Member 'ABP_BaseballBat_ProjectileOverlapVolume_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ABP_BaseballBat_ProjectileOverlapVolume_C, LifetimeInSec) == 0x0002A8, "Member 'ABP_BaseballBat_ProjectileOverlapVolume_C::LifetimeInSec' has a wrong offset!");
static_assert(offsetof(ABP_BaseballBat_ProjectileOverlapVolume_C, InstigatorPawn) == 0x0002B0, "Member 'ABP_BaseballBat_ProjectileOverlapVolume_C::InstigatorPawn' has a wrong offset!");
static_assert(offsetof(ABP_BaseballBat_ProjectileOverlapVolume_C, ForwardOffset) == 0x0002B8, "Member 'ABP_BaseballBat_ProjectileOverlapVolume_C::ForwardOffset' has a wrong offset!");
static_assert(offsetof(ABP_BaseballBat_ProjectileOverlapVolume_C, UpOffset) == 0x0002C0, "Member 'ABP_BaseballBat_ProjectileOverlapVolume_C::UpOffset' has a wrong offset!");
static_assert(offsetof(ABP_BaseballBat_ProjectileOverlapVolume_C, AimPointDistance) == 0x0002C8, "Member 'ABP_BaseballBat_ProjectileOverlapVolume_C::AimPointDistance' has a wrong offset!");
static_assert(offsetof(ABP_BaseballBat_ProjectileOverlapVolume_C, Other_Actor) == 0x0002D0, "Member 'ABP_BaseballBat_ProjectileOverlapVolume_C::Other_Actor' has a wrong offset!");
static_assert(offsetof(ABP_BaseballBat_ProjectileOverlapVolume_C, ProjectileMovementComponent) == 0x0002D8, "Member 'ABP_BaseballBat_ProjectileOverlapVolume_C::ProjectileMovementComponent' has a wrong offset!");
static_assert(offsetof(ABP_BaseballBat_ProjectileOverlapVolume_C, NewProjectileVelocity) == 0x0002E0, "Member 'ABP_BaseballBat_ProjectileOverlapVolume_C::NewProjectileVelocity' has a wrong offset!");
static_assert(offsetof(ABP_BaseballBat_ProjectileOverlapVolume_C, AimPointUppOffset) == 0x0002E8, "Member 'ABP_BaseballBat_ProjectileOverlapVolume_C::AimPointUppOffset' has a wrong offset!");
static_assert(offsetof(ABP_BaseballBat_ProjectileOverlapVolume_C, VolumeIsActive) == 0x0002F0, "Member 'ABP_BaseballBat_ProjectileOverlapVolume_C::VolumeIsActive' has a wrong offset!");

}

