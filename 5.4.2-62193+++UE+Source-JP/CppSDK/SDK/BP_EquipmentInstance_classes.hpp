#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_EquipmentInstance

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "GASIW_classes.hpp"
#include "JP_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_EquipmentInstance.BP_EquipmentInstance_C
// 0x0098 (0x0140 - 0x00A8)
class UBP_EquipmentInstance_C : public UEquipmentInstance
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x00A8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	EItemsJP                                      AnimOverlayState;                                  // 0x00B0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B1[0x7];                                       // 0x00B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimMontage*                           EquipMontageFPP;                                   // 0x00B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           UnequipMontageFPP;                                 // 0x00C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           EquipMontageTPP;                                   // 0x00C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           UnequipMontageTPP;                                 // 0x00D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	float                                         UnequippedPlayRate;                                // 0x00D8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         EquippedPlayRate;                                  // 0x00DC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           Last_Equip_Montage_TPP;                            // 0x00E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           Last_Equip_Montage_FPP;                            // 0x00E8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	FMulticastInlineDelegateProperty_             On_Unequipped;                                     // 0x00F0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	class UDA_AnimSizeSelector_C*                 AnimSizeSelectorMontage;                           // 0x0100(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UCharacterItemAnimDefinition*           MontageTPPDataAsset;                               // 0x0108(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UCharacterItemAnimDefinition*           MontageFPPDataAsset;                               // 0x0110(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	TArray<class UAnimMontage*>                   UseEquipMontageTPP;                                // 0x0118(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<class UAnimMontage*>                   UseEquipMontageFPP;                                // 0x0128(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	int32                                         EquipCount;                                        // 0x0138(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void AddItemTooltip();
	void DoesPlayerHaveTooltip(const struct FGameplayTag& TooltipTag, class AActor* PlayerState, bool* HasTooltip);
	void ExecuteUbergraph_BP_EquipmentInstance(int32 EntryPoint);
	void GetFPPMesh(class USkeletalMeshComponent** Mesh1P);
	void GetTPPMesh(class USkeletalMeshComponent** Mesh);
	void IsFPPMontageDataAssetValid(class UCharacterItemAnimDefinition* MontageFPPDataAsset_0);
	void IsTPPMontageDataAssetValid(class UCharacterItemAnimDefinition* MontageTPPDataAsset_0);
	void K2_OnEquipped();
	void K2_OnUnequipped();
	void On_Unequipped__DelegateSignature();
	void OnBlendOut_22C8F72A4707A5842D9F828A938A9C5B(class FName NotifyName);
	void OnBlendOut_47952827479B20B869AED4ABD5CBCD3D(class FName NotifyName);
	void OnCompleted_22C8F72A4707A5842D9F828A938A9C5B(class FName NotifyName);
	void OnCompleted_47952827479B20B869AED4ABD5CBCD3D(class FName NotifyName);
	void OnInterrupted_22C8F72A4707A5842D9F828A938A9C5B(class FName NotifyName);
	void OnInterrupted_47952827479B20B869AED4ABD5CBCD3D(class FName NotifyName);
	void OnNotifyBegin_22C8F72A4707A5842D9F828A938A9C5B(class FName NotifyName);
	void OnNotifyBegin_47952827479B20B869AED4ABD5CBCD3D(class FName NotifyName);
	void OnNotifyEnd_22C8F72A4707A5842D9F828A938A9C5B(class FName NotifyName);
	void OnNotifyEnd_47952827479B20B869AED4ABD5CBCD3D(class FName NotifyName);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_EquipmentInstance_C">();
	}
	static class UBP_EquipmentInstance_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_EquipmentInstance_C>();
	}
};
static_assert(alignof(UBP_EquipmentInstance_C) == 0x000008, "Wrong alignment on UBP_EquipmentInstance_C");
static_assert(sizeof(UBP_EquipmentInstance_C) == 0x000140, "Wrong size on UBP_EquipmentInstance_C");
static_assert(offsetof(UBP_EquipmentInstance_C, UberGraphFrame) == 0x0000A8, "Member 'UBP_EquipmentInstance_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UBP_EquipmentInstance_C, AnimOverlayState) == 0x0000B0, "Member 'UBP_EquipmentInstance_C::AnimOverlayState' has a wrong offset!");
static_assert(offsetof(UBP_EquipmentInstance_C, EquipMontageFPP) == 0x0000B8, "Member 'UBP_EquipmentInstance_C::EquipMontageFPP' has a wrong offset!");
static_assert(offsetof(UBP_EquipmentInstance_C, UnequipMontageFPP) == 0x0000C0, "Member 'UBP_EquipmentInstance_C::UnequipMontageFPP' has a wrong offset!");
static_assert(offsetof(UBP_EquipmentInstance_C, EquipMontageTPP) == 0x0000C8, "Member 'UBP_EquipmentInstance_C::EquipMontageTPP' has a wrong offset!");
static_assert(offsetof(UBP_EquipmentInstance_C, UnequipMontageTPP) == 0x0000D0, "Member 'UBP_EquipmentInstance_C::UnequipMontageTPP' has a wrong offset!");
static_assert(offsetof(UBP_EquipmentInstance_C, UnequippedPlayRate) == 0x0000D8, "Member 'UBP_EquipmentInstance_C::UnequippedPlayRate' has a wrong offset!");
static_assert(offsetof(UBP_EquipmentInstance_C, EquippedPlayRate) == 0x0000DC, "Member 'UBP_EquipmentInstance_C::EquippedPlayRate' has a wrong offset!");
static_assert(offsetof(UBP_EquipmentInstance_C, Last_Equip_Montage_TPP) == 0x0000E0, "Member 'UBP_EquipmentInstance_C::Last_Equip_Montage_TPP' has a wrong offset!");
static_assert(offsetof(UBP_EquipmentInstance_C, Last_Equip_Montage_FPP) == 0x0000E8, "Member 'UBP_EquipmentInstance_C::Last_Equip_Montage_FPP' has a wrong offset!");
static_assert(offsetof(UBP_EquipmentInstance_C, On_Unequipped) == 0x0000F0, "Member 'UBP_EquipmentInstance_C::On_Unequipped' has a wrong offset!");
static_assert(offsetof(UBP_EquipmentInstance_C, AnimSizeSelectorMontage) == 0x000100, "Member 'UBP_EquipmentInstance_C::AnimSizeSelectorMontage' has a wrong offset!");
static_assert(offsetof(UBP_EquipmentInstance_C, MontageTPPDataAsset) == 0x000108, "Member 'UBP_EquipmentInstance_C::MontageTPPDataAsset' has a wrong offset!");
static_assert(offsetof(UBP_EquipmentInstance_C, MontageFPPDataAsset) == 0x000110, "Member 'UBP_EquipmentInstance_C::MontageFPPDataAsset' has a wrong offset!");
static_assert(offsetof(UBP_EquipmentInstance_C, UseEquipMontageTPP) == 0x000118, "Member 'UBP_EquipmentInstance_C::UseEquipMontageTPP' has a wrong offset!");
static_assert(offsetof(UBP_EquipmentInstance_C, UseEquipMontageFPP) == 0x000128, "Member 'UBP_EquipmentInstance_C::UseEquipMontageFPP' has a wrong offset!");
static_assert(offsetof(UBP_EquipmentInstance_C, EquipCount) == 0x000138, "Member 'UBP_EquipmentInstance_C::EquipCount' has a wrong offset!");

}

