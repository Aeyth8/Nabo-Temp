#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Leloi

#include "Basic.hpp"

#include "ELeloiIdleStates_structs.hpp"
#include "E_LeloiStates_structs.hpp"
#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "JP_structs.hpp"
#include "GameplayAbilities_structs.hpp"
#include "ELeloiStates_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_Leloi.BP_Leloi_C
// 0x0160 (0x07D0 - 0x0670)
class ABP_Leloi_C final : public ACharacter
{
public:
	uint8                                         Pad_668[0x8];                                      // 0x0668(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0670(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UBoxComponent*                          CanInteractBox;                                    // 0x0678(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        PetTheDogTarget;                                   // 0x0680(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          BoxInteract;                                       // 0x0688(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBP_PingableComponent_C*                BP_PingableComponent;                              // 0x0690(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USphereComponent*                       SphereBlockDeployables;                            // 0x0698(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Sphere_Eye1;                                       // 0x06A0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   BlobShadow;                                        // 0x06A8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        MS_Dog_Footstep;                                   // 0x06B0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        AudioState;                                        // 0x06B8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Sphere_Eye;                                        // 0x06C0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          BoxLookAt;                                         // 0x06C8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UNiagaraComponent*                      StateParticles;                                    // 0x06D0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class ADowntimeManager_C*                     DowntimeManager;                                   // 0x06D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	class ABP_TeamVolume_C*                       TeamVolume;                                        // 0x06E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	class ABP_DogHouse_V2_C*                      DogHouse;                                          // 0x06E8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	FMulticastInlineDelegateProperty_             On_BiteAttackFinish;                               // 0x06F0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	E_LeloiStates                                 LeloiState;                                        // 0x0700(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_701[0x3];                                      // 0x0701(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         HuntSpeed;                                         // 0x0704(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         NonHuntSpeed;                                      // 0x0708(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_70C[0x4];                                      // 0x070C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	FMulticastInlineDelegateProperty_             On_GnarlFinish;                                    // 0x0710(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	double                                        JumpZOffset;                                       // 0x0720(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	FMulticastInlineDelegateProperty_             On_LeapAttackFinish;                               // 0x0728(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	struct FTeam                                  Team;                                              // 0x0738(0x0038)(Edit, BlueprintVisible, Net, NoDestructor, ExposeOnSpawn)
	E_LeloiStates                                 LeloiAnimationBehaviorState;                       // 0x0770(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_771[0x7];                                      // 0x0771(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimMontage*                           LeapAttackMontage;                                 // 0x0778(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           GnarlMontage;                                      // 0x0780(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           EatSteakMontage;                                   // 0x0788(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	TArray<ECharacterName>                        CharactersAllowedToPet;                            // 0x0790(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	bool                                          bCanInteract;                                      // 0x07A0(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bBeingPet;                                         // 0x07A1(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7A2[0x6];                                      // 0x07A2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_ResidentCharacter_C*                As_BP_Resident_Character;                          // 0x07A8(0x0008)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	FMulticastInlineDelegateProperty_             On_PettingMontageEnded;                            // 0x07B0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	class FName                                   PettedKeyName;                                     // 0x07C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           LeloiPettingMontage;                               // 0x07C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)

public:
	void AnimInstanceDogActor(class ABP_MovementCharacter_C* Target, bool Condition);
	void BndEvt__BP_GuardDog_Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
	void BndEvt__BP_GuardDog_Box_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex);
	void BndEvt__BP_Leloi_CanInteractBox_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
	void BndEvt__BP_Leloi_CanInteractBox_K2Node_ComponentBoundEvent_3_ComponentEndOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex);
	void CancelInteraction(class UPrimitiveComponent* InteractionComponent);
	void DealDamage(class AActor* Target);
	void EnableGlowingEyes(bool Enable);
	void ExecuteUbergraph_BP_Leloi(int32 EntryPoint);
	void GetBBTargetActor(class AActor** Actor);
	void GetDogHouse(class ABP_DogHouse_V2_C** DogHouse_0);
	void GetEQSPropertyBlocker(class AActor** Actor);
	void GetInteractSound();
	void GetNewWidgetColor(struct FSlateColor* NewColor);
	void GetOptionalText(class FText* Return, class FText* Optional_Second_Line);
	void GetPriority(int32* Priority);
	void GetWidgetLocation(struct FVector* Location);
	void HideInteractionWidget(bool* Return);
	void HighConstrastModeChanged(bool IsEnabled);
	void InteractableCancelInteraction(class UPrimitiveComponent* InteractionComponent);
	void InteractPressed(class AActor* InteractingActor);
	void InteractReleased(class AActor* InteractingActor);
	void InView(bool InView_0);
	void IsInFocus(class AActor* Focusing_Actor);
	void IsInteractable(bool* Interactable);
	void JumpToLocation(const struct FVector& Location);
	void Leloi_Interact(class AActor* InteractingActor);
	void Multi_Eat_Steak();
	void Multi_Gnarl();
	void Multi_Leap_Attack_Animation(double VectorLength);
	void Multi_PetTheDogMontage();
	void Multi_stopPetting();
	void Multi_Teleported_Cosmetics();
	void On_BiteAttackFinish__DelegateSignature();
	void On_GnarlFinish__DelegateSignature();
	void On_LeapAttackFinish__DelegateSignature();
	void On_PettingMontageEnded__DelegateSignature();
	void OnBlendOut_0127D2E64356528CAC18A387685BCAAB(class FName NotifyName);
	void OnBlendOut_93A4C49B4FD8DF18A1098BA37F4B8F2A(class FName NotifyName);
	void OnBlendOut_955EB29E4FEFC39DB39E77A7E976A091(class FName NotifyName);
	void OnBlendOut_F813E04F4F1B614F4C8CF6A16C8F82FA(class FName NotifyName);
	void OnCompleted_0127D2E64356528CAC18A387685BCAAB(class FName NotifyName);
	void OnCompleted_93A4C49B4FD8DF18A1098BA37F4B8F2A(class FName NotifyName);
	void OnCompleted_955EB29E4FEFC39DB39E77A7E976A091(class FName NotifyName);
	void OnCompleted_F813E04F4F1B614F4C8CF6A16C8F82FA(class FName NotifyName);
	void OnInterrupted_0127D2E64356528CAC18A387685BCAAB(class FName NotifyName);
	void OnInterrupted_93A4C49B4FD8DF18A1098BA37F4B8F2A(class FName NotifyName);
	void OnInterrupted_955EB29E4FEFC39DB39E77A7E976A091(class FName NotifyName);
	void OnInterrupted_F813E04F4F1B614F4C8CF6A16C8F82FA(class FName NotifyName);
	void OnNotifyBegin_0127D2E64356528CAC18A387685BCAAB(class FName NotifyName);
	void OnNotifyBegin_93A4C49B4FD8DF18A1098BA37F4B8F2A(class FName NotifyName);
	void OnNotifyBegin_955EB29E4FEFC39DB39E77A7E976A091(class FName NotifyName);
	void OnNotifyBegin_F813E04F4F1B614F4C8CF6A16C8F82FA(class FName NotifyName);
	void OnNotifyEnd_0127D2E64356528CAC18A387685BCAAB(class FName NotifyName);
	void OnNotifyEnd_93A4C49B4FD8DF18A1098BA37F4B8F2A(class FName NotifyName);
	void OnNotifyEnd_955EB29E4FEFC39DB39E77A7E976A091(class FName NotifyName);
	void OnNotifyEnd_F813E04F4F1B614F4C8CF6A16C8F82FA(class FName NotifyName);
	void OnRep_LeloiAnimationBehaviorState();
	void OnRep_LeloiState();
	void PetTheDogCosmetics(class ABP_MovementCharacter_C* ResidentCharacter, bool bEnabled);
	void PlayLeloiFootstep();
	void PostInteract(class AActor* InteractingActor, class UPrimitiveComponent* InteractionComponent);
	void PreInteract(class AActor* InteractingActor, class UPrimitiveComponent* InteractionComponent);
	void ReceiveBeginPlay();
	void RegisterInteracter(class UPrimitiveComponent* InteractionComponent, class AActor* InteractingActor);
	void Server_Eat_Steak();
	void Server_Gnarl();
	void Server_Leap_Attack();
	void Server_PetTheDogMontage();
	void Server_StopPetting();
	void Set_Leloi_State_Cosmetics(E_LeloiStates Input);
	void SetBarkingAlpha(double Barking);
	void SetBehaviourState(E_LeloiStates BehaviourState);
	void SetBeingPet(bool bBeingPet_0);
	void SetBeingPetted(bool BoolValue);
	void SetBreathingAlpha(double Breathing);
	void SetHighContrastMode(bool Enabled);
	void SetHoveredComponent(class UInteractionComponent_C* HoveredComponent, bool* Void);
	void SetIdleState(ELeloiIdleStates IdleState);
	void SetInteractable(bool Interactable);
	void SetInteractablePlayer(class ABP_MovementCharacter_C* PlayerRef);
	void SetMovementSpeed(E_LeloiStates State, bool* Void);
	void SetPlayerInView(bool InView_0);
	void SetSitting(bool Sitting);
	void SetState(ELeloiStates State);
	void SetupOutlines();
	void SetupPings();
	void StopAllLeloiMontages();
	void StopBeingPetFromTimer();
	void Teleport_Leloi_To_Dog_House();
	void Teleport_Leloi_To_Target(const struct FVector& DestLocation);
	void Teleport_To_Location(const struct FVector& DestLocation);
	void UnregisterInteracter(class UPrimitiveComponent* InteractionComponent, class AActor* InteractingActor);

	float GetInteractionDuration(class UPrimitiveComponent* InteractionComponent) const;
	void GetPostInteractSyncType(bool* bShouldSync, EAbilityTaskNetSyncType* Type, class UPrimitiveComponent* InteractionComponent) const;
	void GetPreInteractSyncType(bool* bShouldSync, EAbilityTaskNetSyncType* Type, class UPrimitiveComponent* InteractionComponent) const;
	struct FTeam GetTeam() const;
	uint8 GetTeamID() const;
	bool HasTeam() const;
	bool IsAvailableForEnemyTeam(class UPrimitiveComponent* InteractionComponent) const;
	bool IsAvailableForInteraction(class AActor* InteractingActor, class UPrimitiveComponent* InteractionComponent) const;
	bool TakeDamageFromAllTeams() const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_Leloi_C">();
	}
	static class ABP_Leloi_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_Leloi_C>();
	}
};
static_assert(alignof(ABP_Leloi_C) == 0x000010, "Wrong alignment on ABP_Leloi_C");
static_assert(sizeof(ABP_Leloi_C) == 0x0007D0, "Wrong size on ABP_Leloi_C");
static_assert(offsetof(ABP_Leloi_C, UberGraphFrame) == 0x000670, "Member 'ABP_Leloi_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_Leloi_C, CanInteractBox) == 0x000678, "Member 'ABP_Leloi_C::CanInteractBox' has a wrong offset!");
static_assert(offsetof(ABP_Leloi_C, PetTheDogTarget) == 0x000680, "Member 'ABP_Leloi_C::PetTheDogTarget' has a wrong offset!");
static_assert(offsetof(ABP_Leloi_C, BoxInteract) == 0x000688, "Member 'ABP_Leloi_C::BoxInteract' has a wrong offset!");
static_assert(offsetof(ABP_Leloi_C, BP_PingableComponent) == 0x000690, "Member 'ABP_Leloi_C::BP_PingableComponent' has a wrong offset!");
static_assert(offsetof(ABP_Leloi_C, SphereBlockDeployables) == 0x000698, "Member 'ABP_Leloi_C::SphereBlockDeployables' has a wrong offset!");
static_assert(offsetof(ABP_Leloi_C, Sphere_Eye1) == 0x0006A0, "Member 'ABP_Leloi_C::Sphere_Eye1' has a wrong offset!");
static_assert(offsetof(ABP_Leloi_C, BlobShadow) == 0x0006A8, "Member 'ABP_Leloi_C::BlobShadow' has a wrong offset!");
static_assert(offsetof(ABP_Leloi_C, MS_Dog_Footstep) == 0x0006B0, "Member 'ABP_Leloi_C::MS_Dog_Footstep' has a wrong offset!");
static_assert(offsetof(ABP_Leloi_C, AudioState) == 0x0006B8, "Member 'ABP_Leloi_C::AudioState' has a wrong offset!");
static_assert(offsetof(ABP_Leloi_C, Sphere_Eye) == 0x0006C0, "Member 'ABP_Leloi_C::Sphere_Eye' has a wrong offset!");
static_assert(offsetof(ABP_Leloi_C, BoxLookAt) == 0x0006C8, "Member 'ABP_Leloi_C::BoxLookAt' has a wrong offset!");
static_assert(offsetof(ABP_Leloi_C, StateParticles) == 0x0006D0, "Member 'ABP_Leloi_C::StateParticles' has a wrong offset!");
static_assert(offsetof(ABP_Leloi_C, DowntimeManager) == 0x0006D8, "Member 'ABP_Leloi_C::DowntimeManager' has a wrong offset!");
static_assert(offsetof(ABP_Leloi_C, TeamVolume) == 0x0006E0, "Member 'ABP_Leloi_C::TeamVolume' has a wrong offset!");
static_assert(offsetof(ABP_Leloi_C, DogHouse) == 0x0006E8, "Member 'ABP_Leloi_C::DogHouse' has a wrong offset!");
static_assert(offsetof(ABP_Leloi_C, On_BiteAttackFinish) == 0x0006F0, "Member 'ABP_Leloi_C::On_BiteAttackFinish' has a wrong offset!");
static_assert(offsetof(ABP_Leloi_C, LeloiState) == 0x000700, "Member 'ABP_Leloi_C::LeloiState' has a wrong offset!");
static_assert(offsetof(ABP_Leloi_C, HuntSpeed) == 0x000704, "Member 'ABP_Leloi_C::HuntSpeed' has a wrong offset!");
static_assert(offsetof(ABP_Leloi_C, NonHuntSpeed) == 0x000708, "Member 'ABP_Leloi_C::NonHuntSpeed' has a wrong offset!");
static_assert(offsetof(ABP_Leloi_C, On_GnarlFinish) == 0x000710, "Member 'ABP_Leloi_C::On_GnarlFinish' has a wrong offset!");
static_assert(offsetof(ABP_Leloi_C, JumpZOffset) == 0x000720, "Member 'ABP_Leloi_C::JumpZOffset' has a wrong offset!");
static_assert(offsetof(ABP_Leloi_C, On_LeapAttackFinish) == 0x000728, "Member 'ABP_Leloi_C::On_LeapAttackFinish' has a wrong offset!");
static_assert(offsetof(ABP_Leloi_C, Team) == 0x000738, "Member 'ABP_Leloi_C::Team' has a wrong offset!");
static_assert(offsetof(ABP_Leloi_C, LeloiAnimationBehaviorState) == 0x000770, "Member 'ABP_Leloi_C::LeloiAnimationBehaviorState' has a wrong offset!");
static_assert(offsetof(ABP_Leloi_C, LeapAttackMontage) == 0x000778, "Member 'ABP_Leloi_C::LeapAttackMontage' has a wrong offset!");
static_assert(offsetof(ABP_Leloi_C, GnarlMontage) == 0x000780, "Member 'ABP_Leloi_C::GnarlMontage' has a wrong offset!");
static_assert(offsetof(ABP_Leloi_C, EatSteakMontage) == 0x000788, "Member 'ABP_Leloi_C::EatSteakMontage' has a wrong offset!");
static_assert(offsetof(ABP_Leloi_C, CharactersAllowedToPet) == 0x000790, "Member 'ABP_Leloi_C::CharactersAllowedToPet' has a wrong offset!");
static_assert(offsetof(ABP_Leloi_C, bCanInteract) == 0x0007A0, "Member 'ABP_Leloi_C::bCanInteract' has a wrong offset!");
static_assert(offsetof(ABP_Leloi_C, bBeingPet) == 0x0007A1, "Member 'ABP_Leloi_C::bBeingPet' has a wrong offset!");
static_assert(offsetof(ABP_Leloi_C, As_BP_Resident_Character) == 0x0007A8, "Member 'ABP_Leloi_C::As_BP_Resident_Character' has a wrong offset!");
static_assert(offsetof(ABP_Leloi_C, On_PettingMontageEnded) == 0x0007B0, "Member 'ABP_Leloi_C::On_PettingMontageEnded' has a wrong offset!");
static_assert(offsetof(ABP_Leloi_C, PettedKeyName) == 0x0007C0, "Member 'ABP_Leloi_C::PettedKeyName' has a wrong offset!");
static_assert(offsetof(ABP_Leloi_C, LeloiPettingMontage) == 0x0007C8, "Member 'ABP_Leloi_C::LeloiPettingMontage' has a wrong offset!");

}

