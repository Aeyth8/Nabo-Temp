#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: IWCore

#include "Basic.hpp"

#include "NetCore_structs.hpp"
#include "GameplayTags_structs.hpp"


namespace SDK
{

// ScriptStruct IWCore.GameplayTagStack
// 0x000C (0x0018 - 0x000C)
struct FGameplayTagStack final : public FFastArraySerializerItem
{
public:
	struct FGameplayTag                           Tag;                                               // 0x000C(0x0008)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Count;                                             // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FGameplayTagStack) == 0x000004, "Wrong alignment on FGameplayTagStack");
static_assert(sizeof(FGameplayTagStack) == 0x000018, "Wrong size on FGameplayTagStack");
static_assert(offsetof(FGameplayTagStack, Tag) == 0x00000C, "Member 'FGameplayTagStack::Tag' has a wrong offset!");
static_assert(offsetof(FGameplayTagStack, Count) == 0x000014, "Member 'FGameplayTagStack::Count' has a wrong offset!");

// ScriptStruct IWCore.GameplayTagStackContainer
// 0x0078 (0x0180 - 0x0108)
struct FGameplayTagStackContainer final : public FFastArraySerializer
{
public:
	uint8                                         Pad_108[0x18];                                     // 0x0108(0x0018)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FGameplayTagStack>              ReplicatedStacks;                                  // 0x0120(0x0010)(ZeroConstructor, NativeAccessSpecifierPrivate)
	TMap<struct FGameplayTag, int32>              StackCountLookup;                                  // 0x0130(0x0050)(BlueprintVisible, BlueprintReadOnly, RepSkip, NativeAccessSpecifierPrivate)
};
static_assert(alignof(FGameplayTagStackContainer) == 0x000008, "Wrong alignment on FGameplayTagStackContainer");
static_assert(sizeof(FGameplayTagStackContainer) == 0x000180, "Wrong size on FGameplayTagStackContainer");
static_assert(offsetof(FGameplayTagStackContainer, ReplicatedStacks) == 0x000120, "Member 'FGameplayTagStackContainer::ReplicatedStacks' has a wrong offset!");
static_assert(offsetof(FGameplayTagStackContainer, StackCountLookup) == 0x000130, "Member 'FGameplayTagStackContainer::StackCountLookup' has a wrong offset!");

}

