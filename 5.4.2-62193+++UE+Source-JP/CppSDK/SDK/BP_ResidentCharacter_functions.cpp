#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_ResidentCharacter

#include "Basic.hpp"

#include "BP_ResidentCharacter_classes.hpp"
#include "BP_ResidentCharacter_parameters.hpp"


namespace SDK
{

// Function BP_ResidentCharacter.BP_ResidentCharacter_C.AbilityFailedAttributeCost
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           OwningActor                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_ResidentCharacter_C::AbilityFailedAttributeCost(class AActor* OwningActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ResidentCharacter_C", "AbilityFailedAttributeCost");

	Params::BP_ResidentCharacter_C_AbilityFailedAttributeCost Parms{};

	Parms.OwningActor = OwningActor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ResidentCharacter.BP_ResidentCharacter_C.ActivatePickUpAbility
// (Net, NetServer, BlueprintCallable, BlueprintEvent)

void ABP_ResidentCharacter_C::ActivatePickUpAbility()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ResidentCharacter_C", "ActivatePickUpAbility");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ResidentCharacter.BP_ResidentCharacter_C.ActivateTrappedScreenEffect
// (BlueprintCallable, BlueprintEvent)

void ABP_ResidentCharacter_C::ActivateTrappedScreenEffect()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ResidentCharacter_C", "ActivateTrappedScreenEffect");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ResidentCharacter.BP_ResidentCharacter_C.AddHomeRegenEffect
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_ResidentCharacter_C::AddHomeRegenEffect()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ResidentCharacter_C", "AddHomeRegenEffect");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ResidentCharacter.BP_ResidentCharacter_C.AddOnHealthChangedListener
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// TScriptInterface<class II_ActorWithHealth_HealthChangedReceiver_C>Listener                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_ResidentCharacter_C::AddOnHealthChangedListener(TScriptInterface<class II_ActorWithHealth_HealthChangedReceiver_C> Listener)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ResidentCharacter_C", "AddOnHealthChangedListener");

	Params::BP_ResidentCharacter_C_AddOnHealthChangedListener Parms{};

	Parms.Listener = Listener;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ResidentCharacter.BP_ResidentCharacter_C.AddOnTeamChangedListener
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// TScriptInterface<class II_ActorWithChangeableTeam_TeamChangedReceiver_C>Listener                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_ResidentCharacter_C::AddOnTeamChangedListener(TScriptInterface<class II_ActorWithChangeableTeam_TeamChangedReceiver_C> Listener)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ResidentCharacter_C", "AddOnTeamChangedListener");

	Params::BP_ResidentCharacter_C_AddOnTeamChangedListener Parms{};

	Parms.Listener = Listener;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ResidentCharacter.BP_ResidentCharacter_C.ApplyCombatGameplayEffectToTargetAndInstigator
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Causer                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// double                                  Damage                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_ResidentCharacter_C::ApplyCombatGameplayEffectToTargetAndInstigator(class AActor* Causer, double Damage)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ResidentCharacter_C", "ApplyCombatGameplayEffectToTargetAndInstigator");

	Params::BP_ResidentCharacter_C_ApplyCombatGameplayEffectToTargetAndInstigator Parms{};

	Parms.Causer = Causer;
	Parms.Damage = Damage;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ResidentCharacter.BP_ResidentCharacter_C.ApplyInteractionAudioMultiplier
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UAudioComponent*                  Audio_Component                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void ABP_ResidentCharacter_C::ApplyInteractionAudioMultiplier(class UAudioComponent* Audio_Component)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ResidentCharacter_C", "ApplyInteractionAudioMultiplier");

	Params::BP_ResidentCharacter_C_ApplyInteractionAudioMultiplier Parms{};

	Parms.Audio_Component = Audio_Component;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ResidentCharacter.BP_ResidentCharacter_C.ApplyKillEffect
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_ResidentCharacter_C::ApplyKillEffect()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ResidentCharacter_C", "ApplyKillEffect");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ResidentCharacter.BP_ResidentCharacter_C.ApplyPassiveHealthRegenEffect
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_ResidentCharacter_C::ApplyPassiveHealthRegenEffect()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ResidentCharacter_C", "ApplyPassiveHealthRegenEffect");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ResidentCharacter.BP_ResidentCharacter_C.ApplyPerkActionsOnPossessed
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_ResidentCharacter_C::ApplyPerkActionsOnPossessed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ResidentCharacter_C", "ApplyPerkActionsOnPossessed");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ResidentCharacter.BP_ResidentCharacter_C.ApplyPerkActionsOnRespawn
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_ResidentCharacter_C::ApplyPerkActionsOnRespawn()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ResidentCharacter_C", "ApplyPerkActionsOnRespawn");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ResidentCharacter.BP_ResidentCharacter_C.ApplyVitalInstinctPerkEffects
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  CurrentHealth                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  MaxHealth                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_ResidentCharacter_C::ApplyVitalInstinctPerkEffects(double CurrentHealth, double MaxHealth)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ResidentCharacter_C", "ApplyVitalInstinctPerkEffects");

	Params::BP_ResidentCharacter_C_ApplyVitalInstinctPerkEffects Parms{};

	Parms.CurrentHealth = CurrentHealth;
	Parms.MaxHealth = MaxHealth;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ResidentCharacter.BP_ResidentCharacter_C.AssignLocationTag
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_ResidentCharacter_C::AssignLocationTag()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ResidentCharacter_C", "AssignLocationTag");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ResidentCharacter.BP_ResidentCharacter_C.AssignSocketParents
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_ResidentCharacter_C::AssignSocketParents()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ResidentCharacter_C", "AssignSocketParents");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ResidentCharacter.BP_ResidentCharacter_C.Audio Footstep
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// EGaitJP                                 Gait                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_ResidentCharacter_C::Audio_Footstep(EGaitJP Gait)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ResidentCharacter_C", "Audio Footstep");

	Params::BP_ResidentCharacter_C_Audio_Footstep Parms{};

	Parms.Gait = Gait;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ResidentCharacter.BP_ResidentCharacter_C.Audio Jump
// (BlueprintCallable, BlueprintEvent)

void ABP_ResidentCharacter_C::Audio_Jump()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ResidentCharacter_C", "Audio Jump");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ResidentCharacter.BP_ResidentCharacter_C.Auth Grant Starting Item
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_ResidentCharacter_C::Auth_Grant_Starting_Item()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ResidentCharacter_C", "Auth Grant Starting Item");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ResidentCharacter.BP_ResidentCharacter_C.BeginGripRotationLerp
// (BlueprintCallable, BlueprintEvent)

void ABP_ResidentCharacter_C::BeginGripRotationLerp()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ResidentCharacter_C", "BeginGripRotationLerp");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ResidentCharacter.BP_ResidentCharacter_C.Bind on Player State
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class APlayerState*                     PlayerState_0                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_ResidentCharacter_C::Bind_on_Player_State(class APlayerState* PlayerState_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ResidentCharacter_C", "Bind on Player State");

	Params::BP_ResidentCharacter_C_Bind_on_Player_State Parms{};

	Parms.PlayerState_0 = PlayerState_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ResidentCharacter.BP_ResidentCharacter_C.BndEvt__BP_ResidentCharacter_EquipmentManager_K2Node_ComponentBoundEvent_1_OnEquipmentChanged__DelegateSignature
// (BlueprintEvent)
// Parameters:
// class UEquipmentInstance*               Instance                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_ResidentCharacter_C::BndEvt__BP_ResidentCharacter_EquipmentManager_K2Node_ComponentBoundEvent_1_OnEquipmentChanged__DelegateSignature(class UEquipmentInstance* Instance)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ResidentCharacter_C", "BndEvt__BP_ResidentCharacter_EquipmentManager_K2Node_ComponentBoundEvent_1_OnEquipmentChanged__DelegateSignature");

	Params::BP_ResidentCharacter_C_BndEvt__BP_ResidentCharacter_EquipmentManager_K2Node_ComponentBoundEvent_1_OnEquipmentChanged__DelegateSignature Parms{};

	Parms.Instance = Instance;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ResidentCharacter.BP_ResidentCharacter_C.BreakBarricadeCheck
// (BlueprintCallable, BlueprintEvent)

void ABP_ResidentCharacter_C::BreakBarricadeCheck()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ResidentCharacter_C", "BreakBarricadeCheck");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ResidentCharacter.BP_ResidentCharacter_C.BreakBarricadeUnderCharacter
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_ResidentCharacter_C::BreakBarricadeUnderCharacter()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ResidentCharacter_C", "BreakBarricadeUnderCharacter");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ResidentCharacter.BP_ResidentCharacter_C.BroadcastInventoryChange
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FItemInstanceArrayEntry          ItemInstanceArrayEntry                                 (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)

void ABP_ResidentCharacter_C::BroadcastInventoryChange(const struct FItemInstanceArrayEntry& ItemInstanceArrayEntry)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ResidentCharacter_C", "BroadcastInventoryChange");

	Params::BP_ResidentCharacter_C_BroadcastInventoryChange Parms{};

	Parms.ItemInstanceArrayEntry = std::move(ItemInstanceArrayEntry);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ResidentCharacter.BP_ResidentCharacter_C.BroadcastKillfeedGameplayMessage
// (Net, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FKillInfo                        KillInfo                                               (BlueprintVisible, BlueprintReadOnly, Parm)

void ABP_ResidentCharacter_C::BroadcastKillfeedGameplayMessage(const struct FKillInfo& KillInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ResidentCharacter_C", "BroadcastKillfeedGameplayMessage");

	Params::BP_ResidentCharacter_C_BroadcastKillfeedGameplayMessage Parms{};

	Parms.KillInfo = std::move(KillInfo);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ResidentCharacter.BP_ResidentCharacter_C.CacheTeamID
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AController*                      Controller_0                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_ResidentCharacter_C::CacheTeamID(class AController* Controller_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ResidentCharacter_C", "CacheTeamID");

	Params::BP_ResidentCharacter_C_CacheTeamID Parms{};

	Parms.Controller_0 = Controller_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ResidentCharacter.BP_ResidentCharacter_C.CanActivateTrap
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool ABP_ResidentCharacter_C::CanActivateTrap()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ResidentCharacter_C", "CanActivateTrap");

	Params::BP_ResidentCharacter_C_CanActivateTrap Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_ResidentCharacter.BP_ResidentCharacter_C.CancelAbilitiesOnDeath
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_ResidentCharacter_C::CancelAbilitiesOnDeath()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ResidentCharacter_C", "CancelAbilitiesOnDeath");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ResidentCharacter.BP_ResidentCharacter_C.CanRestartPlayer
// (Protected, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class AController*                      Controller_0                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    Return_Value                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_ResidentCharacter_C::CanRestartPlayer(class AController* Controller_0, bool* Return_Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ResidentCharacter_C", "CanRestartPlayer");

	Params::BP_ResidentCharacter_C_CanRestartPlayer Parms{};

	Parms.Controller_0 = Controller_0;

	UObject::ProcessEvent(Func, &Parms);

	if (Return_Value != nullptr)
		*Return_Value = Parms.Return_Value;
}


// Function BP_ResidentCharacter.BP_ResidentCharacter_C.ChangeSpecialAbilityPerkOnPossesion
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_ResidentCharacter_C::ChangeSpecialAbilityPerkOnPossesion()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ResidentCharacter_C", "ChangeSpecialAbilityPerkOnPossesion");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ResidentCharacter.BP_ResidentCharacter_C.Client_HealthAttributeChanged
// (Net, NetClient, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  OldValue                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  NewValue                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_ResidentCharacter_C::Client_HealthAttributeChanged(double OldValue, double NewValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ResidentCharacter_C", "Client_HealthAttributeChanged");

	Params::BP_ResidentCharacter_C_Client_HealthAttributeChanged Parms{};

	Parms.OldValue = OldValue;
	Parms.NewValue = NewValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ResidentCharacter.BP_ResidentCharacter_C.CreateDeathTimerDetails
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FS_DeathTimerDetails             DeathTimerDetails                                      (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_ResidentCharacter_C::CreateDeathTimerDetails(struct FS_DeathTimerDetails* DeathTimerDetails)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ResidentCharacter_C", "CreateDeathTimerDetails");

	Params::BP_ResidentCharacter_C_CreateDeathTimerDetails Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (DeathTimerDetails != nullptr)
		*DeathTimerDetails = std::move(Parms.DeathTimerDetails);
}


// Function BP_ResidentCharacter.BP_ResidentCharacter_C.CreateKillInfo
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FCombatParticipant               Killer                                                 (BlueprintVisible, BlueprintReadOnly, Parm)
// struct FKillMethod                      Method                                                 (BlueprintVisible, BlueprintReadOnly, Parm)
// struct FKillInfo                        KillInfo                                               (Parm, OutParm)

void ABP_ResidentCharacter_C::CreateKillInfo(const struct FCombatParticipant& Killer, const struct FKillMethod& Method, struct FKillInfo* KillInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ResidentCharacter_C", "CreateKillInfo");

	Params::BP_ResidentCharacter_C_CreateKillInfo Parms{};

	Parms.Killer = std::move(Killer);
	Parms.Method = std::move(Method);

	UObject::ProcessEvent(Func, &Parms);

	if (KillInfo != nullptr)
		*KillInfo = std::move(Parms.KillInfo);
}


// Function BP_ResidentCharacter.BP_ResidentCharacter_C.DamageCosmetics
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_ResidentCharacter_C::DamageCosmetics()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ResidentCharacter_C", "DamageCosmetics");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ResidentCharacter.BP_ResidentCharacter_C.DeactivateTrappedScreenEffect
// (BlueprintCallable, BlueprintEvent)

void ABP_ResidentCharacter_C::DeactivateTrappedScreenEffect()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ResidentCharacter_C", "DeactivateTrappedScreenEffect");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ResidentCharacter.BP_ResidentCharacter_C.DeathChangeItemDurability
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_ResidentCharacter_C::DeathChangeItemDurability()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ResidentCharacter_C", "DeathChangeItemDurability");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ResidentCharacter.BP_ResidentCharacter_C.DEBUGONLY_SERVER_Set Is Dead
// (Net, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Dead_0                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          OptionalVelocity                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_ResidentCharacter_C::DEBUGONLY_SERVER_Set_Is_Dead(bool Dead_0, const struct FVector& OptionalVelocity)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ResidentCharacter_C", "DEBUGONLY_SERVER_Set Is Dead");

	Params::BP_ResidentCharacter_C_DEBUGONLY_SERVER_Set_Is_Dead Parms{};

	Parms.Dead_0 = Dead_0;
	Parms.OptionalVelocity = std::move(OptionalVelocity);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ResidentCharacter.BP_ResidentCharacter_C.DestroyNameplate
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_ResidentCharacter_C::DestroyNameplate()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ResidentCharacter_C", "DestroyNameplate");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ResidentCharacter.BP_ResidentCharacter_C.DropPhysicsObject
// (BlueprintCallable, BlueprintEvent)

void ABP_ResidentCharacter_C::DropPhysicsObject()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ResidentCharacter_C", "DropPhysicsObject");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ResidentCharacter.BP_ResidentCharacter_C.DropResourceCrateCue
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_ResidentCharacter_C::DropResourceCrateCue()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ResidentCharacter_C", "DropResourceCrateCue");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ResidentCharacter.BP_ResidentCharacter_C.Enable High Contrast
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_ResidentCharacter_C::Enable_High_Contrast()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ResidentCharacter_C", "Enable High Contrast");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ResidentCharacter.BP_ResidentCharacter_C.EndAllOwnedAbilities
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_ResidentCharacter_C::EndAllOwnedAbilities()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ResidentCharacter_C", "EndAllOwnedAbilities");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ResidentCharacter.BP_ResidentCharacter_C.EnterKillVolume
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Void                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_ResidentCharacter_C::EnterKillVolume(bool* Void)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ResidentCharacter_C", "EnterKillVolume");

	Params::BP_ResidentCharacter_C_EnterKillVolume Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Void != nullptr)
		*Void = Parms.Void;
}


// Function BP_ResidentCharacter.BP_ResidentCharacter_C.EquipItemOverlay
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UBP_EquipmentInstance_C*          NewParam                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_ResidentCharacter_C::EquipItemOverlay(class UBP_EquipmentInstance_C* NewParam)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ResidentCharacter_C", "EquipItemOverlay");

	Params::BP_ResidentCharacter_C_EquipItemOverlay Parms{};

	Parms.NewParam = NewParam;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ResidentCharacter.BP_ResidentCharacter_C.Event On Apperance Changed
// (BlueprintCallable, BlueprintEvent)

void ABP_ResidentCharacter_C::Event_On_Apperance_Changed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ResidentCharacter_C", "Event On Apperance Changed");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ResidentCharacter.BP_ResidentCharacter_C.ExecuteUbergraph_BP_ResidentCharacter
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_ResidentCharacter_C::ExecuteUbergraph_BP_ResidentCharacter(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ResidentCharacter_C", "ExecuteUbergraph_BP_ResidentCharacter");

	Params::BP_ResidentCharacter_C_ExecuteUbergraph_BP_ResidentCharacter Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ResidentCharacter.BP_ResidentCharacter_C.FindDropLocation
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          Location                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_ResidentCharacter_C::FindDropLocation(struct FVector* Location)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ResidentCharacter_C", "FindDropLocation");

	Params::BP_ResidentCharacter_C_FindDropLocation Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Location != nullptr)
		*Location = std::move(Parms.Location);
}


// Function BP_ResidentCharacter.BP_ResidentCharacter_C.ForceEquipHands
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_ResidentCharacter_C::ForceEquipHands()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ResidentCharacter_C", "ForceEquipHands");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ResidentCharacter.BP_ResidentCharacter_C.FullyRechargeRechargableItems
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UInventoryComponent*              Inventory_0                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void ABP_ResidentCharacter_C::FullyRechargeRechargableItems(class UInventoryComponent* Inventory_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ResidentCharacter_C", "FullyRechargeRechargableItems");

	Params::BP_ResidentCharacter_C_FullyRechargeRechargableItems Parms{};

	Parms.Inventory_0 = Inventory_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ResidentCharacter.BP_ResidentCharacter_C.Get Perk Actions for Action Type
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UClass*                           ActionType                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// TArray<class UPerkAction*>              PerkActions                                            (Parm, OutParm, ContainsInstancedReference)

void ABP_ResidentCharacter_C::Get_Perk_Actions_for_Action_Type(class UClass* ActionType, TArray<class UPerkAction*>* PerkActions)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ResidentCharacter_C", "Get Perk Actions for Action Type");

	Params::BP_ResidentCharacter_C_Get_Perk_Actions_for_Action_Type Parms{};

	Parms.ActionType = ActionType;

	UObject::ProcessEvent(Func, &Parms);

	if (PerkActions != nullptr)
		*PerkActions = std::move(Parms.PerkActions);
}


// Function BP_ResidentCharacter.BP_ResidentCharacter_C.GetAppropriateSpawn
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FTransform                       Transform                                              (Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class APlayerStartJP_C*                 NewParam                                               (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_ResidentCharacter_C::GetAppropriateSpawn(struct FTransform* Transform, class APlayerStartJP_C** NewParam)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ResidentCharacter_C", "GetAppropriateSpawn");

	Params::BP_ResidentCharacter_C_GetAppropriateSpawn Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Transform != nullptr)
		*Transform = std::move(Parms.Transform);

	if (NewParam != nullptr)
		*NewParam = Parms.NewParam;
}


// Function BP_ResidentCharacter.BP_ResidentCharacter_C.GetCameraFOV
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  FOV                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_ResidentCharacter_C::GetCameraFOV(double* FOV)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ResidentCharacter_C", "GetCameraFOV");

	Params::BP_ResidentCharacter_C_GetCameraFOV Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (FOV != nullptr)
		*FOV = Parms.FOV;
}


// Function BP_ResidentCharacter.BP_ResidentCharacter_C.GetCharacterRole
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FCharacterRoleData               ReturnValue                                            (Parm, OutParm, ReturnParm)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

struct FCharacterRoleData ABP_ResidentCharacter_C::GetCharacterRole(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ResidentCharacter_C", "GetCharacterRole");

	Params::BP_ResidentCharacter_C_GetCharacterRole Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function BP_ResidentCharacter.BP_ResidentCharacter_C.GetCharacterTag
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGameplayTag                     Return                                                 (Parm, OutParm, NoDestructor, HasGetValueTypeHash)

void ABP_ResidentCharacter_C::GetCharacterTag(struct FGameplayTag* Return)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ResidentCharacter_C", "GetCharacterTag");

	Params::BP_ResidentCharacter_C_GetCharacterTag Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Return != nullptr)
		*Return = std::move(Parms.Return);
}


// Function BP_ResidentCharacter.BP_ResidentCharacter_C.GetCharacterWI
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UWI_Character_C*                  CharacterWI                                            (Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void ABP_ResidentCharacter_C::GetCharacterWI(class UWI_Character_C** CharacterWI)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ResidentCharacter_C", "GetCharacterWI");

	Params::BP_ResidentCharacter_C_GetCharacterWI Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (CharacterWI != nullptr)
		*CharacterWI = Parms.CharacterWI;
}


// Function BP_ResidentCharacter.BP_ResidentCharacter_C.GetComponentToAttachGameplayCueTo
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class USceneComponent*                  SceneComponent                                         (Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void ABP_ResidentCharacter_C::GetComponentToAttachGameplayCueTo(class USceneComponent** SceneComponent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ResidentCharacter_C", "GetComponentToAttachGameplayCueTo");

	Params::BP_ResidentCharacter_C_GetComponentToAttachGameplayCueTo Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (SceneComponent != nullptr)
		*SceneComponent = Parms.SceneComponent;
}


// Function BP_ResidentCharacter.BP_ResidentCharacter_C.GetCurrentHealth
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  Current_Health                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_ResidentCharacter_C::GetCurrentHealth(double* Current_Health)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ResidentCharacter_C", "GetCurrentHealth");

	Params::BP_ResidentCharacter_C_GetCurrentHealth Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Current_Health != nullptr)
		*Current_Health = Parms.Current_Health;
}


// Function BP_ResidentCharacter.BP_ResidentCharacter_C.GetCurrentHealthFraction
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  Current_Health_Fraction                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_ResidentCharacter_C::GetCurrentHealthFraction(double* Current_Health_Fraction)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ResidentCharacter_C", "GetCurrentHealthFraction");

	Params::BP_ResidentCharacter_C_GetCurrentHealthFraction Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Current_Health_Fraction != nullptr)
		*Current_Health_Fraction = Parms.Current_Health_Fraction;
}


// Function BP_ResidentCharacter.BP_ResidentCharacter_C.GetCurrentHealthFromASC
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

float ABP_ResidentCharacter_C::GetCurrentHealthFromASC()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ResidentCharacter_C", "GetCurrentHealthFromASC");

	Params::BP_ResidentCharacter_C_GetCurrentHealthFromASC Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_ResidentCharacter.BP_ResidentCharacter_C.GetDeathLocationMultiplier
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

double ABP_ResidentCharacter_C::GetDeathLocationMultiplier()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ResidentCharacter_C", "GetDeathLocationMultiplier");

	Params::BP_ResidentCharacter_C_GetDeathLocationMultiplier Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_ResidentCharacter.BP_ResidentCharacter_C.GetDeathTimer
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    HasPerkBonus                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  Duration                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  Details_ByDeath                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  Details_ByGameTime                                     (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  Details_SubTotalPrePerkTime                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  Details_SubTotalPostPerkTime                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  Details_LocationMultiplier                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  Details_MatchConfigMultiplier                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_ResidentCharacter_C::GetDeathTimer(bool* HasPerkBonus, double* Duration, double* Details_ByDeath, double* Details_ByGameTime, double* Details_SubTotalPrePerkTime, double* Details_SubTotalPostPerkTime, double* Details_LocationMultiplier, double* Details_MatchConfigMultiplier)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ResidentCharacter_C", "GetDeathTimer");

	Params::BP_ResidentCharacter_C_GetDeathTimer Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (HasPerkBonus != nullptr)
		*HasPerkBonus = Parms.HasPerkBonus;

	if (Duration != nullptr)
		*Duration = Parms.Duration;

	if (Details_ByDeath != nullptr)
		*Details_ByDeath = Parms.Details_ByDeath;

	if (Details_ByGameTime != nullptr)
		*Details_ByGameTime = Parms.Details_ByGameTime;

	if (Details_SubTotalPrePerkTime != nullptr)
		*Details_SubTotalPrePerkTime = Parms.Details_SubTotalPrePerkTime;

	if (Details_SubTotalPostPerkTime != nullptr)
		*Details_SubTotalPostPerkTime = Parms.Details_SubTotalPostPerkTime;

	if (Details_LocationMultiplier != nullptr)
		*Details_LocationMultiplier = Parms.Details_LocationMultiplier;

	if (Details_MatchConfigMultiplier != nullptr)
		*Details_MatchConfigMultiplier = Parms.Details_MatchConfigMultiplier;
}


// Function BP_ResidentCharacter.BP_ResidentCharacter_C.GetDeathVelocity
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FCombatParticipant               CombatParticipant                                      (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// class AActor*                           DamageCauser                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// struct FVector                          Velocity                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_ResidentCharacter_C::GetDeathVelocity(const struct FCombatParticipant& CombatParticipant, class AActor* DamageCauser, struct FVector* Velocity)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ResidentCharacter_C", "GetDeathVelocity");

	Params::BP_ResidentCharacter_C_GetDeathVelocity Parms{};

	Parms.CombatParticipant = std::move(CombatParticipant);
	Parms.DamageCauser = DamageCauser;

	UObject::ProcessEvent(Func, &Parms);

	if (Velocity != nullptr)
		*Velocity = std::move(Parms.Velocity);
}


// Function BP_ResidentCharacter.BP_ResidentCharacter_C.GetExistingOrCreatePrintMessageWI
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UPrintMessageWI_C*                PrintMessageWI                                         (Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void ABP_ResidentCharacter_C::GetExistingOrCreatePrintMessageWI(class UPrintMessageWI_C** PrintMessageWI)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ResidentCharacter_C", "GetExistingOrCreatePrintMessageWI");

	Params::BP_ResidentCharacter_C_GetExistingOrCreatePrintMessageWI Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (PrintMessageWI != nullptr)
		*PrintMessageWI = Parms.PrintMessageWI;
}


// Function BP_ResidentCharacter.BP_ResidentCharacter_C.GetGooseController
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           ControllingActor                                       (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_ResidentCharacter_C::GetGooseController(class AActor** ControllingActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ResidentCharacter_C", "GetGooseController");

	Params::BP_ResidentCharacter_C_GetGooseController Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (ControllingActor != nullptr)
		*ControllingActor = Parms.ControllingActor;
}


// Function BP_ResidentCharacter.BP_ResidentCharacter_C.GetGripPoint
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class USceneComponent*                  ComponentToGrip                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// struct FVector                          GripLocation                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FRotator                         GripRotation                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_ResidentCharacter_C::GetGripPoint(class USceneComponent* ComponentToGrip, struct FVector* GripLocation, struct FRotator* GripRotation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ResidentCharacter_C", "GetGripPoint");

	Params::BP_ResidentCharacter_C_GetGripPoint Parms{};

	Parms.ComponentToGrip = ComponentToGrip;

	UObject::ProcessEvent(Func, &Parms);

	if (GripLocation != nullptr)
		*GripLocation = std::move(Parms.GripLocation);

	if (GripRotation != nullptr)
		*GripRotation = std::move(Parms.GripRotation);
}


// Function BP_ResidentCharacter.BP_ResidentCharacter_C.GetHomeDamageMultiplier
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class AController*                      Instigator_0                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// double                                  AtHomeDamageMultiplier_0                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_ResidentCharacter_C::GetHomeDamageMultiplier(class AController* Instigator_0, double* AtHomeDamageMultiplier_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ResidentCharacter_C", "GetHomeDamageMultiplier");

	Params::BP_ResidentCharacter_C_GetHomeDamageMultiplier Parms{};

	Parms.Instigator_0 = Instigator_0;

	UObject::ProcessEvent(Func, &Parms);

	if (AtHomeDamageMultiplier_0 != nullptr)
		*AtHomeDamageMultiplier_0 = Parms.AtHomeDamageMultiplier_0;
}


// Function BP_ResidentCharacter.BP_ResidentCharacter_C.GetInCombatDuration
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class AActor*                           Actor                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// double                                  Return                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_ResidentCharacter_C::GetInCombatDuration(class AActor* Actor, double* Return)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ResidentCharacter_C", "GetInCombatDuration");

	Params::BP_ResidentCharacter_C_GetInCombatDuration Parms{};

	Parms.Actor = Actor;

	UObject::ProcessEvent(Func, &Parms);

	if (Return != nullptr)
		*Return = Parms.Return;
}


// Function BP_ResidentCharacter.BP_ResidentCharacter_C.GetInteractButtonWI
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UInteractButtonWI_C*              PrintMessageWI                                         (Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void ABP_ResidentCharacter_C::GetInteractButtonWI(class UInteractButtonWI_C** PrintMessageWI)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ResidentCharacter_C", "GetInteractButtonWI");

	Params::BP_ResidentCharacter_C_GetInteractButtonWI Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (PrintMessageWI != nullptr)
		*PrintMessageWI = Parms.PrintMessageWI;
}


// Function BP_ResidentCharacter.BP_ResidentCharacter_C.GetInteractionTraceLength
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  Return                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_ResidentCharacter_C::GetInteractionTraceLength(double* Return)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ResidentCharacter_C", "GetInteractionTraceLength");

	Params::BP_ResidentCharacter_C_GetInteractionTraceLength Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Return != nullptr)
		*Return = Parms.Return;
}


// Function BP_ResidentCharacter.BP_ResidentCharacter_C.GetInteractionTraceOffset
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          Return                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_ResidentCharacter_C::GetInteractionTraceOffset(struct FVector* Return)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ResidentCharacter_C", "GetInteractionTraceOffset");

	Params::BP_ResidentCharacter_C_GetInteractionTraceOffset Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Return != nullptr)
		*Return = std::move(Parms.Return);
}


// Function BP_ResidentCharacter.BP_ResidentCharacter_C.GetInteractSound
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_ResidentCharacter_C::GetInteractSound()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ResidentCharacter_C", "GetInteractSound");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ResidentCharacter.BP_ResidentCharacter_C.GetItemWheelComponent
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UCharacterItemWheelComponent_C*   Return                                                 (Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void ABP_ResidentCharacter_C::GetItemWheelComponent(class UCharacterItemWheelComponent_C** Return)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ResidentCharacter_C", "GetItemWheelComponent");

	Params::BP_ResidentCharacter_C_GetItemWheelComponent Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Return != nullptr)
		*Return = Parms.Return;
}


// Function BP_ResidentCharacter.BP_ResidentCharacter_C.GetLeloiTarget
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Return                                                 (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_ResidentCharacter_C::GetLeloiTarget(class AActor** Return)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ResidentCharacter_C", "GetLeloiTarget");

	Params::BP_ResidentCharacter_C_GetLeloiTarget Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Return != nullptr)
		*Return = Parms.Return;
}


// Function BP_ResidentCharacter.BP_ResidentCharacter_C.GetMaxHealth
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  Max_Health                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_ResidentCharacter_C::GetMaxHealth(double* Max_Health)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ResidentCharacter_C", "GetMaxHealth");

	Params::BP_ResidentCharacter_C_GetMaxHealth Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Max_Health != nullptr)
		*Max_Health = Parms.Max_Health;
}


// Function BP_ResidentCharacter.BP_ResidentCharacter_C.GetMaxHealthFromASC
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

float ABP_ResidentCharacter_C::GetMaxHealthFromASC()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ResidentCharacter_C", "GetMaxHealthFromASC");

	Params::BP_ResidentCharacter_C_GetMaxHealthFromASC Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_ResidentCharacter.BP_ResidentCharacter_C.GetName
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           Name_0                                                 (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)

void ABP_ResidentCharacter_C::GetName(class FString* Name_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ResidentCharacter_C", "GetName");

	Params::BP_ResidentCharacter_C_GetName Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Name_0 != nullptr)
		*Name_0 = std::move(Parms.Name_0);
}


// Function BP_ResidentCharacter.BP_ResidentCharacter_C.GetNewWidgetColor
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FSlateColor                      NewColor                                               (Parm, OutParm)

void ABP_ResidentCharacter_C::GetNewWidgetColor(struct FSlateColor* NewColor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ResidentCharacter_C", "GetNewWidgetColor");

	Params::BP_ResidentCharacter_C_GetNewWidgetColor Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (NewColor != nullptr)
		*NewColor = std::move(Parms.NewColor);
}


// Function BP_ResidentCharacter.BP_ResidentCharacter_C.GetOptionalText
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FText                             Return                                                 (Parm, OutParm)
// class FText                             Optional_Second_Line                                   (Parm, OutParm)

void ABP_ResidentCharacter_C::GetOptionalText(class FText* Return, class FText* Optional_Second_Line)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ResidentCharacter_C", "GetOptionalText");

	Params::BP_ResidentCharacter_C_GetOptionalText Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Return != nullptr)
		*Return = std::move(Parms.Return);

	if (Optional_Second_Line != nullptr)
		*Optional_Second_Line = std::move(Parms.Optional_Second_Line);
}


// Function BP_ResidentCharacter.BP_ResidentCharacter_C.GetOutOfStaminaSound
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class USoundBase*                       Return                                                 (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_ResidentCharacter_C::GetOutOfStaminaSound(class USoundBase** Return)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ResidentCharacter_C", "GetOutOfStaminaSound");

	Params::BP_ResidentCharacter_C_GetOutOfStaminaSound Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Return != nullptr)
		*Return = Parms.Return;
}


// Function BP_ResidentCharacter.BP_ResidentCharacter_C.GetPlayerCamera
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UCameraComponent*                 Return                                                 (Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void ABP_ResidentCharacter_C::GetPlayerCamera(class UCameraComponent** Return)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ResidentCharacter_C", "GetPlayerCamera");

	Params::BP_ResidentCharacter_C_GetPlayerCamera Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Return != nullptr)
		*Return = Parms.Return;
}


// Function BP_ResidentCharacter.BP_ResidentCharacter_C.GetPlayerStartTeamIdOrDefault
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class APlayerStartJP_C*                 PlayerStartJP                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// uint8                                   DefaultTeamId                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// uint8                                   TeamId                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_ResidentCharacter_C::GetPlayerStartTeamIdOrDefault(class APlayerStartJP_C* PlayerStartJP, uint8 DefaultTeamId, uint8* TeamId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ResidentCharacter_C", "GetPlayerStartTeamIdOrDefault");

	Params::BP_ResidentCharacter_C_GetPlayerStartTeamIdOrDefault Parms{};

	Parms.PlayerStartJP = PlayerStartJP;
	Parms.DefaultTeamId = DefaultTeamId;

	UObject::ProcessEvent(Func, &Parms);

	if (TeamId != nullptr)
		*TeamId = Parms.TeamId;
}


// Function BP_ResidentCharacter.BP_ResidentCharacter_C.GetPriority
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Priority                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_ResidentCharacter_C::GetPriority(int32* Priority)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ResidentCharacter_C", "GetPriority");

	Params::BP_ResidentCharacter_C_GetPriority Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Priority != nullptr)
		*Priority = Parms.Priority;
}


// Function BP_ResidentCharacter.BP_ResidentCharacter_C.GetRespawnTimeByDeaths
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

double ABP_ResidentCharacter_C::GetRespawnTimeByDeaths()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ResidentCharacter_C", "GetRespawnTimeByDeaths");

	Params::BP_ResidentCharacter_C_GetRespawnTimeByDeaths Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_ResidentCharacter.BP_ResidentCharacter_C.GetRespawnTimeByGameTime
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

double ABP_ResidentCharacter_C::GetRespawnTimeByGameTime()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ResidentCharacter_C", "GetRespawnTimeByGameTime");

	Params::BP_ResidentCharacter_C_GetRespawnTimeByGameTime Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_ResidentCharacter.BP_ResidentCharacter_C.GetSoundFromSurfaceBelowCharacter
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class USoundBase*                       Sound                                                  (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_ResidentCharacter_C::GetSoundFromSurfaceBelowCharacter(class USoundBase** Sound)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ResidentCharacter_C", "GetSoundFromSurfaceBelowCharacter");

	Params::BP_ResidentCharacter_C_GetSoundFromSurfaceBelowCharacter Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Sound != nullptr)
		*Sound = Parms.Sound;
}


// Function BP_ResidentCharacter.BP_ResidentCharacter_C.GetSoundVolumeMultiplier
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// double                                  Volume                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_ResidentCharacter_C::GetSoundVolumeMultiplier(double* Volume)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ResidentCharacter_C", "GetSoundVolumeMultiplier");

	Params::BP_ResidentCharacter_C_GetSoundVolumeMultiplier Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Volume != nullptr)
		*Volume = Parms.Volume;
}


// Function BP_ResidentCharacter.BP_ResidentCharacter_C.GetStealthActive
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Return                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_ResidentCharacter_C::GetStealthActive(bool* Return)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ResidentCharacter_C", "GetStealthActive");

	Params::BP_ResidentCharacter_C_GetStealthActive Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Return != nullptr)
		*Return = Parms.Return;
}


// Function BP_ResidentCharacter.BP_ResidentCharacter_C.GetTeamColor
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FLinearColor                     Color                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_ResidentCharacter_C::GetTeamColor(struct FLinearColor* Color)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ResidentCharacter_C", "GetTeamColor");

	Params::BP_ResidentCharacter_C_GetTeamColor Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Color != nullptr)
		*Color = std::move(Parms.Color);
}


// Function BP_ResidentCharacter.BP_ResidentCharacter_C.GetTraceFrom
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          Location                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FRotator                         Rotation                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_ResidentCharacter_C::GetTraceFrom(struct FVector* Location, struct FRotator* Rotation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ResidentCharacter_C", "GetTraceFrom");

	Params::BP_ResidentCharacter_C_GetTraceFrom Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Location != nullptr)
		*Location = std::move(Parms.Location);

	if (Rotation != nullptr)
		*Rotation = std::move(Parms.Rotation);
}


// Function BP_ResidentCharacter.BP_ResidentCharacter_C.GetTraceFromPosition
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          Location                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FRotator                         Rotation                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_ResidentCharacter_C::GetTraceFromPosition(struct FVector* Location, struct FRotator* Rotation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ResidentCharacter_C", "GetTraceFromPosition");

	Params::BP_ResidentCharacter_C_GetTraceFromPosition Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Location != nullptr)
		*Location = std::move(Parms.Location);

	if (Rotation != nullptr)
		*Rotation = std::move(Parms.Rotation);
}


// Function BP_ResidentCharacter.BP_ResidentCharacter_C.GetTurretTargetHighPriority
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Return                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_ResidentCharacter_C::GetTurretTargetHighPriority(bool* Return)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ResidentCharacter_C", "GetTurretTargetHighPriority");

	Params::BP_ResidentCharacter_C_GetTurretTargetHighPriority Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Return != nullptr)
		*Return = Parms.Return;
}


// Function BP_ResidentCharacter.BP_ResidentCharacter_C.GetTurretTargetSceneComponent
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class USceneComponent*                  Return                                                 (Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void ABP_ResidentCharacter_C::GetTurretTargetSceneComponent(class USceneComponent** Return)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ResidentCharacter_C", "GetTurretTargetSceneComponent");

	Params::BP_ResidentCharacter_C_GetTurretTargetSceneComponent Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Return != nullptr)
		*Return = Parms.Return;
}


// Function BP_ResidentCharacter.BP_ResidentCharacter_C.GetVisibilityComponentToTraceFor
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class USceneComponent*                  Component                                              (Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void ABP_ResidentCharacter_C::GetVisibilityComponentToTraceFor(class USceneComponent** Component)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ResidentCharacter_C", "GetVisibilityComponentToTraceFor");

	Params::BP_ResidentCharacter_C_GetVisibilityComponentToTraceFor Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Component != nullptr)
		*Component = Parms.Component;
}


// Function BP_ResidentCharacter.BP_ResidentCharacter_C.GetWidgetLocation
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          Location                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_ResidentCharacter_C::GetWidgetLocation(struct FVector* Location)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ResidentCharacter_C", "GetWidgetLocation");

	Params::BP_ResidentCharacter_C_GetWidgetLocation Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Location != nullptr)
		*Location = std::move(Parms.Location);
}


// Function BP_ResidentCharacter.BP_ResidentCharacter_C.GrabPhysicsObject
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UPrimitiveComponent*              ComponentToGrab                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void ABP_ResidentCharacter_C::GrabPhysicsObject(class UPrimitiveComponent* ComponentToGrab)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ResidentCharacter_C", "GrabPhysicsObject");

	Params::BP_ResidentCharacter_C_GrabPhysicsObject Parms{};

	Parms.ComponentToGrab = ComponentToGrab;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ResidentCharacter.BP_ResidentCharacter_C.GrantCharacterSpecificGameplaySets
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_ResidentCharacter_C::GrantCharacterSpecificGameplaySets()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ResidentCharacter_C", "GrantCharacterSpecificGameplaySets");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ResidentCharacter.BP_ResidentCharacter_C.GrantGameplaySetsOnPossessedFromPerk
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_ResidentCharacter_C::GrantGameplaySetsOnPossessedFromPerk()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ResidentCharacter_C", "GrantGameplaySetsOnPossessedFromPerk");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ResidentCharacter.BP_ResidentCharacter_C.GripSpeedLerp__FinishedFunc
// (BlueprintEvent)

void ABP_ResidentCharacter_C::GripSpeedLerp__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ResidentCharacter_C", "GripSpeedLerp__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ResidentCharacter.BP_ResidentCharacter_C.GripSpeedLerp__UpdateFunc
// (BlueprintEvent)

void ABP_ResidentCharacter_C::GripSpeedLerp__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ResidentCharacter_C", "GripSpeedLerp__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ResidentCharacter.BP_ResidentCharacter_C.Handle Game State Created
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_ResidentCharacter_C::Handle_Game_State_Created()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ResidentCharacter_C", "Handle Game State Created");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ResidentCharacter.BP_ResidentCharacter_C.HideInteractionWidget
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Return                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_ResidentCharacter_C::HideInteractionWidget(bool* Return)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ResidentCharacter_C", "HideInteractionWidget");

	Params::BP_ResidentCharacter_C_HideInteractionWidget Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Return != nullptr)
		*Return = Parms.Return;
}


// Function BP_ResidentCharacter.BP_ResidentCharacter_C.HighConstrastModeChanged
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsEnabled                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_ResidentCharacter_C::HighConstrastModeChanged(bool IsEnabled)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ResidentCharacter_C", "HighConstrastModeChanged");

	Params::BP_ResidentCharacter_C_HighConstrastModeChanged Parms{};

	Parms.IsEnabled = IsEnabled;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ResidentCharacter.BP_ResidentCharacter_C.HitByDeliveryTruck
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          LaunchVelocity                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_ResidentCharacter_C::HitByDeliveryTruck(const struct FVector& LaunchVelocity)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ResidentCharacter_C", "HitByDeliveryTruck");

	Params::BP_ResidentCharacter_C_HitByDeliveryTruck Parms{};

	Parms.LaunchVelocity = std::move(LaunchVelocity);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ResidentCharacter.BP_ResidentCharacter_C.HitCosmeticTimeline__FinishedFunc
// (BlueprintEvent)

void ABP_ResidentCharacter_C::HitCosmeticTimeline__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ResidentCharacter_C", "HitCosmeticTimeline__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ResidentCharacter.BP_ResidentCharacter_C.HitCosmeticTimeline__UpdateFunc
// (BlueprintEvent)

void ABP_ResidentCharacter_C::HitCosmeticTimeline__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ResidentCharacter_C", "HitCosmeticTimeline__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ResidentCharacter.BP_ResidentCharacter_C.HitInterface
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          Direction                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_ResidentCharacter_C::HitInterface(const struct FVector& Direction)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ResidentCharacter_C", "HitInterface");

	Params::BP_ResidentCharacter_C_HitInterface Parms{};

	Parms.Direction = std::move(Direction);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ResidentCharacter.BP_ResidentCharacter_C.Impact Cosmetics
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          Location                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          HitImpulse                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FName                             BoneName                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// E_ImpactEffect                          ImpactEffect                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_ResidentCharacter_C::Impact_Cosmetics(const struct FVector& Location, const struct FVector& HitImpulse, class FName BoneName, E_ImpactEffect ImpactEffect)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ResidentCharacter_C", "Impact Cosmetics");

	Params::BP_ResidentCharacter_C_Impact_Cosmetics Parms{};

	Parms.Location = std::move(Location);
	Parms.HitImpulse = std::move(HitImpulse);
	Parms.BoneName = BoneName;
	Parms.ImpactEffect = ImpactEffect;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ResidentCharacter.BP_ResidentCharacter_C.Init Interaction
// (BlueprintCallable, BlueprintEvent)

void ABP_ResidentCharacter_C::Init_Interaction()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ResidentCharacter_C", "Init Interaction");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ResidentCharacter.BP_ResidentCharacter_C.InitializeAudioListener
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class APlayerState*                     PlayerState_0                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_ResidentCharacter_C::InitializeAudioListener(class APlayerState* PlayerState_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ResidentCharacter_C", "InitializeAudioListener");

	Params::BP_ResidentCharacter_C_InitializeAudioListener Parms{};

	Parms.PlayerState_0 = PlayerState_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ResidentCharacter.BP_ResidentCharacter_C.InpActEvt_IA_Interact_K2Node_EnhancedInputActionEvent_0
// (BlueprintEvent)
// Parameters:
// struct FInputActionValue                ActionValue                                            (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
// float                                   ElapsedTime                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   TriggeredTime                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UInputAction*                     SourceAction                                           (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_ResidentCharacter_C::InpActEvt_IA_Interact_K2Node_EnhancedInputActionEvent_0(const struct FInputActionValue& ActionValue, float ElapsedTime, float TriggeredTime, const class UInputAction* SourceAction)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ResidentCharacter_C", "InpActEvt_IA_Interact_K2Node_EnhancedInputActionEvent_0");

	Params::BP_ResidentCharacter_C_InpActEvt_IA_Interact_K2Node_EnhancedInputActionEvent_0 Parms{};

	Parms.ActionValue = std::move(ActionValue);
	Parms.ElapsedTime = ElapsedTime;
	Parms.TriggeredTime = TriggeredTime;
	Parms.SourceAction = SourceAction;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ResidentCharacter.BP_ResidentCharacter_C.InpActEvt_IA_Jump_K2Node_EnhancedInputActionEvent_9
// (BlueprintEvent)
// Parameters:
// struct FInputActionValue                ActionValue                                            (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
// float                                   ElapsedTime                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   TriggeredTime                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UInputAction*                     SourceAction                                           (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_ResidentCharacter_C::InpActEvt_IA_Jump_K2Node_EnhancedInputActionEvent_9(const struct FInputActionValue& ActionValue, float ElapsedTime, float TriggeredTime, const class UInputAction* SourceAction)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ResidentCharacter_C", "InpActEvt_IA_Jump_K2Node_EnhancedInputActionEvent_9");

	Params::BP_ResidentCharacter_C_InpActEvt_IA_Jump_K2Node_EnhancedInputActionEvent_9 Parms{};

	Parms.ActionValue = std::move(ActionValue);
	Parms.ElapsedTime = ElapsedTime;
	Parms.TriggeredTime = TriggeredTime;
	Parms.SourceAction = SourceAction;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ResidentCharacter.BP_ResidentCharacter_C.InpActEvt_IA_Move_K2Node_EnhancedInputActionEvent_10
// (BlueprintEvent)
// Parameters:
// struct FInputActionValue                ActionValue                                            (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
// float                                   ElapsedTime                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   TriggeredTime                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UInputAction*                     SourceAction                                           (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_ResidentCharacter_C::InpActEvt_IA_Move_K2Node_EnhancedInputActionEvent_10(const struct FInputActionValue& ActionValue, float ElapsedTime, float TriggeredTime, const class UInputAction* SourceAction)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ResidentCharacter_C", "InpActEvt_IA_Move_K2Node_EnhancedInputActionEvent_10");

	Params::BP_ResidentCharacter_C_InpActEvt_IA_Move_K2Node_EnhancedInputActionEvent_10 Parms{};

	Parms.ActionValue = std::move(ActionValue);
	Parms.ElapsedTime = ElapsedTime;
	Parms.TriggeredTime = TriggeredTime;
	Parms.SourceAction = SourceAction;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ResidentCharacter.BP_ResidentCharacter_C.InpActEvt_IA_Move_K2Node_EnhancedInputActionEvent_11
// (BlueprintEvent)
// Parameters:
// struct FInputActionValue                ActionValue                                            (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
// float                                   ElapsedTime                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   TriggeredTime                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UInputAction*                     SourceAction                                           (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_ResidentCharacter_C::InpActEvt_IA_Move_K2Node_EnhancedInputActionEvent_11(const struct FInputActionValue& ActionValue, float ElapsedTime, float TriggeredTime, const class UInputAction* SourceAction)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ResidentCharacter_C", "InpActEvt_IA_Move_K2Node_EnhancedInputActionEvent_11");

	Params::BP_ResidentCharacter_C_InpActEvt_IA_Move_K2Node_EnhancedInputActionEvent_11 Parms{};

	Parms.ActionValue = std::move(ActionValue);
	Parms.ElapsedTime = ElapsedTime;
	Parms.TriggeredTime = TriggeredTime;
	Parms.SourceAction = SourceAction;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ResidentCharacter.BP_ResidentCharacter_C.InpActEvt_IA_MoveBackwards_K2Node_EnhancedInputActionEvent_3
// (BlueprintEvent)
// Parameters:
// struct FInputActionValue                ActionValue                                            (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
// float                                   ElapsedTime                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   TriggeredTime                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UInputAction*                     SourceAction                                           (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_ResidentCharacter_C::InpActEvt_IA_MoveBackwards_K2Node_EnhancedInputActionEvent_3(const struct FInputActionValue& ActionValue, float ElapsedTime, float TriggeredTime, const class UInputAction* SourceAction)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ResidentCharacter_C", "InpActEvt_IA_MoveBackwards_K2Node_EnhancedInputActionEvent_3");

	Params::BP_ResidentCharacter_C_InpActEvt_IA_MoveBackwards_K2Node_EnhancedInputActionEvent_3 Parms{};

	Parms.ActionValue = std::move(ActionValue);
	Parms.ElapsedTime = ElapsedTime;
	Parms.TriggeredTime = TriggeredTime;
	Parms.SourceAction = SourceAction;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ResidentCharacter.BP_ResidentCharacter_C.InpActEvt_IA_MoveForward_K2Node_EnhancedInputActionEvent_4
// (BlueprintEvent)
// Parameters:
// struct FInputActionValue                ActionValue                                            (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
// float                                   ElapsedTime                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   TriggeredTime                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UInputAction*                     SourceAction                                           (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_ResidentCharacter_C::InpActEvt_IA_MoveForward_K2Node_EnhancedInputActionEvent_4(const struct FInputActionValue& ActionValue, float ElapsedTime, float TriggeredTime, const class UInputAction* SourceAction)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ResidentCharacter_C", "InpActEvt_IA_MoveForward_K2Node_EnhancedInputActionEvent_4");

	Params::BP_ResidentCharacter_C_InpActEvt_IA_MoveForward_K2Node_EnhancedInputActionEvent_4 Parms{};

	Parms.ActionValue = std::move(ActionValue);
	Parms.ElapsedTime = ElapsedTime;
	Parms.TriggeredTime = TriggeredTime;
	Parms.SourceAction = SourceAction;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ResidentCharacter.BP_ResidentCharacter_C.InpActEvt_IA_MoveHorizontal_K2Node_EnhancedInputActionEvent_7
// (BlueprintEvent)
// Parameters:
// struct FInputActionValue                ActionValue                                            (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
// float                                   ElapsedTime                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   TriggeredTime                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UInputAction*                     SourceAction                                           (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_ResidentCharacter_C::InpActEvt_IA_MoveHorizontal_K2Node_EnhancedInputActionEvent_7(const struct FInputActionValue& ActionValue, float ElapsedTime, float TriggeredTime, const class UInputAction* SourceAction)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ResidentCharacter_C", "InpActEvt_IA_MoveHorizontal_K2Node_EnhancedInputActionEvent_7");

	Params::BP_ResidentCharacter_C_InpActEvt_IA_MoveHorizontal_K2Node_EnhancedInputActionEvent_7 Parms{};

	Parms.ActionValue = std::move(ActionValue);
	Parms.ElapsedTime = ElapsedTime;
	Parms.TriggeredTime = TriggeredTime;
	Parms.SourceAction = SourceAction;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ResidentCharacter.BP_ResidentCharacter_C.InpActEvt_IA_MoveHorizontal_K2Node_EnhancedInputActionEvent_8
// (BlueprintEvent)
// Parameters:
// struct FInputActionValue                ActionValue                                            (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
// float                                   ElapsedTime                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   TriggeredTime                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UInputAction*                     SourceAction                                           (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_ResidentCharacter_C::InpActEvt_IA_MoveHorizontal_K2Node_EnhancedInputActionEvent_8(const struct FInputActionValue& ActionValue, float ElapsedTime, float TriggeredTime, const class UInputAction* SourceAction)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ResidentCharacter_C", "InpActEvt_IA_MoveHorizontal_K2Node_EnhancedInputActionEvent_8");

	Params::BP_ResidentCharacter_C_InpActEvt_IA_MoveHorizontal_K2Node_EnhancedInputActionEvent_8 Parms{};

	Parms.ActionValue = std::move(ActionValue);
	Parms.ElapsedTime = ElapsedTime;
	Parms.TriggeredTime = TriggeredTime;
	Parms.SourceAction = SourceAction;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ResidentCharacter.BP_ResidentCharacter_C.InpActEvt_IA_MoveLeft_K2Node_EnhancedInputActionEvent_2
// (BlueprintEvent)
// Parameters:
// struct FInputActionValue                ActionValue                                            (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
// float                                   ElapsedTime                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   TriggeredTime                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UInputAction*                     SourceAction                                           (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_ResidentCharacter_C::InpActEvt_IA_MoveLeft_K2Node_EnhancedInputActionEvent_2(const struct FInputActionValue& ActionValue, float ElapsedTime, float TriggeredTime, const class UInputAction* SourceAction)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ResidentCharacter_C", "InpActEvt_IA_MoveLeft_K2Node_EnhancedInputActionEvent_2");

	Params::BP_ResidentCharacter_C_InpActEvt_IA_MoveLeft_K2Node_EnhancedInputActionEvent_2 Parms{};

	Parms.ActionValue = std::move(ActionValue);
	Parms.ElapsedTime = ElapsedTime;
	Parms.TriggeredTime = TriggeredTime;
	Parms.SourceAction = SourceAction;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ResidentCharacter.BP_ResidentCharacter_C.InpActEvt_IA_MoveRight_K2Node_EnhancedInputActionEvent_1
// (BlueprintEvent)
// Parameters:
// struct FInputActionValue                ActionValue                                            (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
// float                                   ElapsedTime                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   TriggeredTime                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UInputAction*                     SourceAction                                           (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_ResidentCharacter_C::InpActEvt_IA_MoveRight_K2Node_EnhancedInputActionEvent_1(const struct FInputActionValue& ActionValue, float ElapsedTime, float TriggeredTime, const class UInputAction* SourceAction)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ResidentCharacter_C", "InpActEvt_IA_MoveRight_K2Node_EnhancedInputActionEvent_1");

	Params::BP_ResidentCharacter_C_InpActEvt_IA_MoveRight_K2Node_EnhancedInputActionEvent_1 Parms{};

	Parms.ActionValue = std::move(ActionValue);
	Parms.ElapsedTime = ElapsedTime;
	Parms.TriggeredTime = TriggeredTime;
	Parms.SourceAction = SourceAction;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ResidentCharacter.BP_ResidentCharacter_C.InpActEvt_IA_MoveVertical_K2Node_EnhancedInputActionEvent_5
// (BlueprintEvent)
// Parameters:
// struct FInputActionValue                ActionValue                                            (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
// float                                   ElapsedTime                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   TriggeredTime                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UInputAction*                     SourceAction                                           (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_ResidentCharacter_C::InpActEvt_IA_MoveVertical_K2Node_EnhancedInputActionEvent_5(const struct FInputActionValue& ActionValue, float ElapsedTime, float TriggeredTime, const class UInputAction* SourceAction)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ResidentCharacter_C", "InpActEvt_IA_MoveVertical_K2Node_EnhancedInputActionEvent_5");

	Params::BP_ResidentCharacter_C_InpActEvt_IA_MoveVertical_K2Node_EnhancedInputActionEvent_5 Parms{};

	Parms.ActionValue = std::move(ActionValue);
	Parms.ElapsedTime = ElapsedTime;
	Parms.TriggeredTime = TriggeredTime;
	Parms.SourceAction = SourceAction;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ResidentCharacter.BP_ResidentCharacter_C.InpActEvt_IA_MoveVertical_K2Node_EnhancedInputActionEvent_6
// (BlueprintEvent)
// Parameters:
// struct FInputActionValue                ActionValue                                            (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
// float                                   ElapsedTime                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   TriggeredTime                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UInputAction*                     SourceAction                                           (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_ResidentCharacter_C::InpActEvt_IA_MoveVertical_K2Node_EnhancedInputActionEvent_6(const struct FInputActionValue& ActionValue, float ElapsedTime, float TriggeredTime, const class UInputAction* SourceAction)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ResidentCharacter_C", "InpActEvt_IA_MoveVertical_K2Node_EnhancedInputActionEvent_6");

	Params::BP_ResidentCharacter_C_InpActEvt_IA_MoveVertical_K2Node_EnhancedInputActionEvent_6 Parms{};

	Parms.ActionValue = std::move(ActionValue);
	Parms.ElapsedTime = ElapsedTime;
	Parms.TriggeredTime = TriggeredTime;
	Parms.SourceAction = SourceAction;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ResidentCharacter.BP_ResidentCharacter_C.InpActEvt_M_K2Node_InputDebugKeyEvent_3
// (BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
// struct FInputActionValue                ActionValue                                            (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)

void ABP_ResidentCharacter_C::InpActEvt_M_K2Node_InputDebugKeyEvent_3(const struct FKey& Key, const struct FInputActionValue& ActionValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ResidentCharacter_C", "InpActEvt_M_K2Node_InputDebugKeyEvent_3");

	Params::BP_ResidentCharacter_C_InpActEvt_M_K2Node_InputDebugKeyEvent_3 Parms{};

	Parms.Key = std::move(Key);
	Parms.ActionValue = std::move(ActionValue);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ResidentCharacter.BP_ResidentCharacter_C.InpActEvt_NumPadOne_K2Node_InputDebugKeyEvent_2
// (BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
// struct FInputActionValue                ActionValue                                            (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)

void ABP_ResidentCharacter_C::InpActEvt_NumPadOne_K2Node_InputDebugKeyEvent_2(const struct FKey& Key, const struct FInputActionValue& ActionValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ResidentCharacter_C", "InpActEvt_NumPadOne_K2Node_InputDebugKeyEvent_2");

	Params::BP_ResidentCharacter_C_InpActEvt_NumPadOne_K2Node_InputDebugKeyEvent_2 Parms{};

	Parms.Key = std::move(Key);
	Parms.ActionValue = std::move(ActionValue);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ResidentCharacter.BP_ResidentCharacter_C.InpActEvt_NumPadThree_K2Node_InputDebugKeyEvent_0
// (BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
// struct FInputActionValue                ActionValue                                            (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)

void ABP_ResidentCharacter_C::InpActEvt_NumPadThree_K2Node_InputDebugKeyEvent_0(const struct FKey& Key, const struct FInputActionValue& ActionValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ResidentCharacter_C", "InpActEvt_NumPadThree_K2Node_InputDebugKeyEvent_0");

	Params::BP_ResidentCharacter_C_InpActEvt_NumPadThree_K2Node_InputDebugKeyEvent_0 Parms{};

	Parms.Key = std::move(Key);
	Parms.ActionValue = std::move(ActionValue);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ResidentCharacter.BP_ResidentCharacter_C.InpActEvt_NumPadTwo_K2Node_InputDebugKeyEvent_1
// (BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
// struct FInputActionValue                ActionValue                                            (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)

void ABP_ResidentCharacter_C::InpActEvt_NumPadTwo_K2Node_InputDebugKeyEvent_1(const struct FKey& Key, const struct FInputActionValue& ActionValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ResidentCharacter_C", "InpActEvt_NumPadTwo_K2Node_InputDebugKeyEvent_1");

	Params::BP_ResidentCharacter_C_InpActEvt_NumPadTwo_K2Node_InputDebugKeyEvent_1 Parms{};

	Parms.Key = std::move(Key);
	Parms.ActionValue = std::move(ActionValue);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ResidentCharacter.BP_ResidentCharacter_C.InpActEvt_P_K2Node_InputKeyEvent_0
// (BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ABP_ResidentCharacter_C::InpActEvt_P_K2Node_InputKeyEvent_0(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ResidentCharacter_C", "InpActEvt_P_K2Node_InputKeyEvent_0");

	Params::BP_ResidentCharacter_C_InpActEvt_P_K2Node_InputKeyEvent_0 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ResidentCharacter.BP_ResidentCharacter_C.InteractionTrace
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Actor                                                  (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// struct FGameplayAbilityTargetDataHandle Target_Data                                            (Parm, OutParm)

void ABP_ResidentCharacter_C::InteractionTrace(class AActor** Actor, struct FGameplayAbilityTargetDataHandle* Target_Data)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ResidentCharacter_C", "InteractionTrace");

	Params::BP_ResidentCharacter_C_InteractionTrace Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Actor != nullptr)
		*Actor = Parms.Actor;

	if (Target_Data != nullptr)
		*Target_Data = std::move(Parms.Target_Data);
}


// Function BP_ResidentCharacter.BP_ResidentCharacter_C.InteractPressed
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           InteractingActor                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_ResidentCharacter_C::InteractPressed(class AActor* InteractingActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ResidentCharacter_C", "InteractPressed");

	Params::BP_ResidentCharacter_C_InteractPressed Parms{};

	Parms.InteractingActor = InteractingActor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ResidentCharacter.BP_ResidentCharacter_C.InteractReleased
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           InteractingActor                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_ResidentCharacter_C::InteractReleased(class AActor* InteractingActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ResidentCharacter_C", "InteractReleased");

	Params::BP_ResidentCharacter_C_InteractReleased Parms{};

	Parms.InteractingActor = InteractingActor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ResidentCharacter.BP_ResidentCharacter_C.InteruptGripRotationLerp
// (BlueprintCallable, BlueprintEvent)

void ABP_ResidentCharacter_C::InteruptGripRotationLerp()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ResidentCharacter_C", "InteruptGripRotationLerp");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ResidentCharacter.BP_ResidentCharacter_C.IsActorDead
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Return                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_ResidentCharacter_C::IsActorDead(bool* Return)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ResidentCharacter_C", "IsActorDead");

	Params::BP_ResidentCharacter_C_IsActorDead Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Return != nullptr)
		*Return = Parms.Return;
}


// Function BP_ResidentCharacter.BP_ResidentCharacter_C.IsAlreadyDead
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool ABP_ResidentCharacter_C::IsAlreadyDead()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ResidentCharacter_C", "IsAlreadyDead");

	Params::BP_ResidentCharacter_C_IsAlreadyDead Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_ResidentCharacter.BP_ResidentCharacter_C.IsAtHome
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    AtHome                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_ResidentCharacter_C::IsAtHome(bool* AtHome)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ResidentCharacter_C", "IsAtHome");

	Params::BP_ResidentCharacter_C_IsAtHome Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (AtHome != nullptr)
		*AtHome = Parms.AtHome;
}


// Function BP_ResidentCharacter.BP_ResidentCharacter_C.IsGooseTargetAlive
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Return                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_ResidentCharacter_C::IsGooseTargetAlive(bool* Return)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ResidentCharacter_C", "IsGooseTargetAlive");

	Params::BP_ResidentCharacter_C_IsGooseTargetAlive Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Return != nullptr)
		*Return = Parms.Return;
}


// Function BP_ResidentCharacter.BP_ResidentCharacter_C.IsInFocus
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Focusing_Actor                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_ResidentCharacter_C::IsInFocus(class AActor* Focusing_Actor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ResidentCharacter_C", "IsInFocus");

	Params::BP_ResidentCharacter_C_IsInFocus Parms{};

	Parms.Focusing_Actor = Focusing_Actor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ResidentCharacter.BP_ResidentCharacter_C.IsInteractable
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Interactable                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_ResidentCharacter_C::IsInteractable(bool* Interactable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ResidentCharacter_C", "IsInteractable");

	Params::BP_ResidentCharacter_C_IsInteractable Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Interactable != nullptr)
		*Interactable = Parms.Interactable;
}


// Function BP_ResidentCharacter.BP_ResidentCharacter_C.IsInteractionAllowedByTeam
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          ActorIn                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    Return                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_ResidentCharacter_C::IsInteractionAllowedByTeam(class UObject* ActorIn, bool* Return)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ResidentCharacter_C", "IsInteractionAllowedByTeam");

	Params::BP_ResidentCharacter_C_IsInteractionAllowedByTeam Parms{};

	Parms.ActorIn = ActorIn;

	UObject::ProcessEvent(Func, &Parms);

	if (Return != nullptr)
		*Return = Parms.Return;
}


// Function BP_ResidentCharacter.BP_ResidentCharacter_C.IsPlayerHoldingResource
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsPlayerHoldingResource_0                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_ResidentCharacter_C::IsPlayerHoldingResource(bool* IsPlayerHoldingResource_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ResidentCharacter_C", "IsPlayerHoldingResource");

	Params::BP_ResidentCharacter_C_IsPlayerHoldingResource Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (IsPlayerHoldingResource_0 != nullptr)
		*IsPlayerHoldingResource_0 = Parms.IsPlayerHoldingResource_0;
}


// Function BP_ResidentCharacter.BP_ResidentCharacter_C.IsTrespassing
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool ABP_ResidentCharacter_C::IsTrespassing()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ResidentCharacter_C", "IsTrespassing");

	Params::BP_ResidentCharacter_C_IsTrespassing Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_ResidentCharacter.BP_ResidentCharacter_C.IsTrespassingAtNight
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  RemainingNight                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool ABP_ResidentCharacter_C::IsTrespassingAtNight(double* RemainingNight)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ResidentCharacter_C", "IsTrespassingAtNight");

	Params::BP_ResidentCharacter_C_IsTrespassingAtNight Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (RemainingNight != nullptr)
		*RemainingNight = Parms.RemainingNight;

	return Parms.ReturnValue;
}


// Function BP_ResidentCharacter.BP_ResidentCharacter_C.IsValidTurretTarget
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_ResidentCharacter_C::IsValidTurretTarget(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ResidentCharacter_C", "IsValidTurretTarget");

	Params::BP_ResidentCharacter_C_IsValidTurretTarget Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;
}


// Function BP_ResidentCharacter.BP_ResidentCharacter_C.K2_FellOutOfWorld
// (Event, Public, BlueprintEvent)

void ABP_ResidentCharacter_C::K2_FellOutOfWorld()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ResidentCharacter_C", "K2_FellOutOfWorld");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ResidentCharacter.BP_ResidentCharacter_C.K2_HealthAttributeChanged
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   OldValue                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   NewValue                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_ResidentCharacter_C::K2_HealthAttributeChanged(float OldValue, float NewValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ResidentCharacter_C", "K2_HealthAttributeChanged");

	Params::BP_ResidentCharacter_C_K2_HealthAttributeChanged Parms{};

	Parms.OldValue = OldValue;
	Parms.NewValue = NewValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ResidentCharacter.BP_ResidentCharacter_C.K2_OnRep_PlayerState
// (Event, Public, BlueprintEvent)
// Parameters:
// class APlayerStateJP_Match*             PlayerStateJP_Match                                    (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_ResidentCharacter_C::K2_OnRep_PlayerState(const class APlayerStateJP_Match* PlayerStateJP_Match)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ResidentCharacter_C", "K2_OnRep_PlayerState");

	Params::BP_ResidentCharacter_C_K2_OnRep_PlayerState Parms{};

	Parms.PlayerStateJP_Match = PlayerStateJP_Match;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ResidentCharacter.BP_ResidentCharacter_C.Knockback
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          Velocity                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    XYOverride                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ZOverride                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  AirControlMultiplier                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Void                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_ResidentCharacter_C::Knockback(const struct FVector& Velocity, bool XYOverride, bool ZOverride, double AirControlMultiplier, bool* Void)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ResidentCharacter_C", "Knockback");

	Params::BP_ResidentCharacter_C_Knockback Parms{};

	Parms.Velocity = std::move(Velocity);
	Parms.XYOverride = XYOverride;
	Parms.ZOverride = ZOverride;
	Parms.AirControlMultiplier = AirControlMultiplier;

	UObject::ProcessEvent(Func, &Parms);

	if (Void != nullptr)
		*Void = Parms.Void;
}


// Function BP_ResidentCharacter.BP_ResidentCharacter_C.LerpGrippedObjectRotation__FinishedFunc
// (BlueprintEvent)

void ABP_ResidentCharacter_C::LerpGrippedObjectRotation__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ResidentCharacter_C", "LerpGrippedObjectRotation__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ResidentCharacter.BP_ResidentCharacter_C.LerpGrippedObjectRotation__UpdateFunc
// (BlueprintEvent)

void ABP_ResidentCharacter_C::LerpGrippedObjectRotation__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ResidentCharacter_C", "LerpGrippedObjectRotation__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ResidentCharacter.BP_ResidentCharacter_C.LocalAddBuff
// (Net, NetClient, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UClass*                           Class_0                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_ResidentCharacter_C::LocalAddBuff(class UClass* Class_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ResidentCharacter_C", "LocalAddBuff");

	Params::BP_ResidentCharacter_C_LocalAddBuff Parms{};

	Parms.Class_0 = Class_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ResidentCharacter.BP_ResidentCharacter_C.MeleeHit
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           AttackingActor                                         (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash)

void ABP_ResidentCharacter_C::MeleeHit(const class AActor*& AttackingActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ResidentCharacter_C", "MeleeHit");

	Params::BP_ResidentCharacter_C_MeleeHit Parms{};

	Parms.AttackingActor = AttackingActor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ResidentCharacter.BP_ResidentCharacter_C.MicrophoneStateChanged
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsMicrophoneOn                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_ResidentCharacter_C::MicrophoneStateChanged(bool IsMicrophoneOn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ResidentCharacter_C", "MicrophoneStateChanged");

	Params::BP_ResidentCharacter_C_MicrophoneStateChanged Parms{};

	Parms.IsMicrophoneOn = IsMicrophoneOn;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ResidentCharacter.BP_ResidentCharacter_C.Modify Noise from Perk
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  Outgoing_Volume                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  NewParam                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_ResidentCharacter_C::Modify_Noise_from_Perk(double Outgoing_Volume, double* NewParam)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ResidentCharacter_C", "Modify Noise from Perk");

	Params::BP_ResidentCharacter_C_Modify_Noise_from_Perk Parms{};

	Parms.Outgoing_Volume = Outgoing_Volume;

	UObject::ProcessEvent(Func, &Parms);

	if (NewParam != nullptr)
		*NewParam = Parms.NewParam;
}


// Function BP_ResidentCharacter.BP_ResidentCharacter_C.ModifyCritValuesFromPerk
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_ResidentCharacter_C::ModifyCritValuesFromPerk()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ResidentCharacter_C", "ModifyCritValuesFromPerk");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ResidentCharacter.BP_ResidentCharacter_C.ModifyEquippedItemAbilities
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UEquipmentInstance*               Instance                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_ResidentCharacter_C::ModifyEquippedItemAbilities(class UEquipmentInstance* Instance)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ResidentCharacter_C", "ModifyEquippedItemAbilities");

	Params::BP_ResidentCharacter_C_ModifyEquippedItemAbilities Parms{};

	Parms.Instance = Instance;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ResidentCharacter.BP_ResidentCharacter_C.ModifyRespawnTimeFromPerk
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  RespawnTime                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  ModifiedRespawnTime                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    HasPerkBonus                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_ResidentCharacter_C::ModifyRespawnTimeFromPerk(double RespawnTime, double* ModifiedRespawnTime, bool* HasPerkBonus)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ResidentCharacter_C", "ModifyRespawnTimeFromPerk");

	Params::BP_ResidentCharacter_C_ModifyRespawnTimeFromPerk Parms{};

	Parms.RespawnTime = RespawnTime;

	UObject::ProcessEvent(Func, &Parms);

	if (ModifiedRespawnTime != nullptr)
		*ModifiedRespawnTime = Parms.ModifiedRespawnTime;

	if (HasPerkBonus != nullptr)
		*HasPerkBonus = Parms.HasPerkBonus;
}


// Function BP_ResidentCharacter.BP_ResidentCharacter_C.ModifyScaleFromPerk
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          Scale                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          ModifiedScale                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_ResidentCharacter_C::ModifyScaleFromPerk(const struct FVector& Scale, struct FVector* ModifiedScale)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ResidentCharacter_C", "ModifyScaleFromPerk");

	Params::BP_ResidentCharacter_C_ModifyScaleFromPerk Parms{};

	Parms.Scale = std::move(Scale);

	UObject::ProcessEvent(Func, &Parms);

	if (ModifiedScale != nullptr)
		*ModifiedScale = std::move(Parms.ModifiedScale);
}


// Function BP_ResidentCharacter.BP_ResidentCharacter_C.MSG_AVP_GetPlayerUsername
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Success_                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FText                             Username                                               (Parm, OutParm)

void ABP_ResidentCharacter_C::MSG_AVP_GetPlayerUsername(bool* Success_, class FText* Username)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ResidentCharacter_C", "MSG_AVP_GetPlayerUsername");

	Params::BP_ResidentCharacter_C_MSG_AVP_GetPlayerUsername Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Success_ != nullptr)
		*Success_ = Parms.Success_;

	if (Username != nullptr)
		*Username = std::move(Parms.Username);
}


// Function BP_ResidentCharacter.BP_ResidentCharacter_C.MSG_AVP_GetVOIPComponent
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UBP_AntizeVOIPComponent_C*        VOIPComponentRef                                       (Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void ABP_ResidentCharacter_C::MSG_AVP_GetVOIPComponent(class UBP_AntizeVOIPComponent_C** VOIPComponentRef)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ResidentCharacter_C", "MSG_AVP_GetVOIPComponent");

	Params::BP_ResidentCharacter_C_MSG_AVP_GetVOIPComponent Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (VOIPComponentRef != nullptr)
		*VOIPComponentRef = Parms.VOIPComponentRef;
}


// Function BP_ResidentCharacter.BP_ResidentCharacter_C.MSG_AVP_GetWidgetVoice
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UWidgetComponent*                 WidgetVoiceRef                                         (Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void ABP_ResidentCharacter_C::MSG_AVP_GetWidgetVoice(class UWidgetComponent** WidgetVoiceRef)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ResidentCharacter_C", "MSG_AVP_GetWidgetVoice");

	Params::BP_ResidentCharacter_C_MSG_AVP_GetWidgetVoice Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (WidgetVoiceRef != nullptr)
		*WidgetVoiceRef = Parms.WidgetVoiceRef;
}


// Function BP_ResidentCharacter.BP_ResidentCharacter_C.Multi_CriticalHitSound
// (Net, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          Location                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_ResidentCharacter_C::Multi_CriticalHitSound(const struct FVector& Location)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ResidentCharacter_C", "Multi_CriticalHitSound");

	Params::BP_ResidentCharacter_C_Multi_CriticalHitSound Parms{};

	Parms.Location = std::move(Location);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ResidentCharacter.BP_ResidentCharacter_C.Multi_Death Cosmetics
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)

void ABP_ResidentCharacter_C::Multi_Death_Cosmetics()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ResidentCharacter_C", "Multi_Death Cosmetics");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ResidentCharacter.BP_ResidentCharacter_C.Multi_Impact Cosmetics
// (Net, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// class APawn*                            ImpactCauser                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// struct FVector                          Location                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          HitImpulse                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FName                             BoneName                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// E_ImpactEffect                          ImpactEffect                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_ResidentCharacter_C::Multi_Impact_Cosmetics(class APawn* ImpactCauser, const struct FVector& Location, const struct FVector& HitImpulse, class FName BoneName, E_ImpactEffect ImpactEffect)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ResidentCharacter_C", "Multi_Impact Cosmetics");

	Params::BP_ResidentCharacter_C_Multi_Impact_Cosmetics Parms{};

	Parms.ImpactCauser = ImpactCauser;
	Parms.Location = std::move(Location);
	Parms.HitImpulse = std::move(HitImpulse);
	Parms.BoneName = BoneName;
	Parms.ImpactEffect = ImpactEffect;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ResidentCharacter.BP_ResidentCharacter_C.Multi_PainFacialCosmetic
// (Net, NetMulticast, BlueprintCallable, BlueprintEvent)

void ABP_ResidentCharacter_C::Multi_PainFacialCosmetic()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ResidentCharacter_C", "Multi_PainFacialCosmetic");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ResidentCharacter.BP_ResidentCharacter_C.Multi_Respawn Cosmetics
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)

void ABP_ResidentCharacter_C::Multi_Respawn_Cosmetics()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ResidentCharacter_C", "Multi_Respawn Cosmetics");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ResidentCharacter.BP_ResidentCharacter_C.Notify On Health Changed Listeners
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  CurrentHealth                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  MaxHealth                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  CurrentHealthFraction                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_ResidentCharacter_C::Notify_On_Health_Changed_Listeners(double CurrentHealth, double MaxHealth, double CurrentHealthFraction)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ResidentCharacter_C", "Notify On Health Changed Listeners");

	Params::BP_ResidentCharacter_C_Notify_On_Health_Changed_Listeners Parms{};

	Parms.CurrentHealth = CurrentHealth;
	Parms.MaxHealth = MaxHealth;
	Parms.CurrentHealthFraction = CurrentHealthFraction;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ResidentCharacter.BP_ResidentCharacter_C.Notify On Team Changed Listeners
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// uint8                                   Team_ID                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// ETeamType                               Team_Type                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_ResidentCharacter_C::Notify_On_Team_Changed_Listeners(uint8 Team_ID, ETeamType Team_Type)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ResidentCharacter_C", "Notify On Team Changed Listeners");

	Params::BP_ResidentCharacter_C_Notify_On_Team_Changed_Listeners Parms{};

	Parms.Team_ID = Team_ID;
	Parms.Team_Type = Team_Type;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ResidentCharacter.BP_ResidentCharacter_C.On Death Timer Complete
// (BlueprintCallable, BlueprintEvent)

void ABP_ResidentCharacter_C::On_Death_Timer_Complete()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ResidentCharacter_C", "On Death Timer Complete");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ResidentCharacter.BP_ResidentCharacter_C.On Team Change
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class APlayerStateJP*                   PlayerState_0                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// struct FTeam                            NewTeam                                                (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)

void ABP_ResidentCharacter_C::On_Team_Change(class APlayerStateJP* PlayerState_0, const struct FTeam& NewTeam)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ResidentCharacter_C", "On Team Change");

	Params::BP_ResidentCharacter_C_On_Team_Change Parms{};

	Parms.PlayerState_0 = PlayerState_0;
	Parms.NewTeam = std::move(NewTeam);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ResidentCharacter.BP_ResidentCharacter_C.On_DamageTaken__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)

void ABP_ResidentCharacter_C::On_DamageTaken__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ResidentCharacter_C", "On_DamageTaken__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ResidentCharacter.BP_ResidentCharacter_C.On_Dead__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ACharacter*                       Character                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_ResidentCharacter_C::On_Dead__DelegateSignature(class ACharacter* Character)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ResidentCharacter_C", "On_Dead__DelegateSignature");

	Params::BP_ResidentCharacter_C_On_Dead__DelegateSignature Parms{};

	Parms.Character = Character;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ResidentCharacter.BP_ResidentCharacter_C.On_Footstep__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)

void ABP_ResidentCharacter_C::On_Footstep__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ResidentCharacter_C", "On_Footstep__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ResidentCharacter.BP_ResidentCharacter_C.On_InteractableInWorldSetToNull__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)

void ABP_ResidentCharacter_C::On_InteractableInWorldSetToNull__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ResidentCharacter_C", "On_InteractableInWorldSetToNull__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ResidentCharacter.BP_ResidentCharacter_C.OnDamaged
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   Delta                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           Causer                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// struct FCombatParticipant               CombatParticipant                                      (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm)
// struct FKillMethod                      KillMethod                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm)
// struct FVector_NetQuantize              Location                                               (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)

void ABP_ResidentCharacter_C::OnDamaged(float Delta, class AActor* Causer, const struct FCombatParticipant& CombatParticipant, const struct FKillMethod& KillMethod, const struct FVector_NetQuantize& Location)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ResidentCharacter_C", "OnDamaged");

	Params::BP_ResidentCharacter_C_OnDamaged Parms{};

	Parms.Delta = Delta;
	Parms.Causer = Causer;
	Parms.CombatParticipant = std::move(CombatParticipant);
	Parms.KillMethod = std::move(KillMethod);
	Parms.Location = std::move(Location);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ResidentCharacter.BP_ResidentCharacter_C.OnEnded_76DFBBD24F2A869D02CB218F3BC3C28E
// (BlueprintCallable, BlueprintEvent)

void ABP_ResidentCharacter_C::OnEnded_76DFBBD24F2A869D02CB218F3BC3C28E()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ResidentCharacter_C", "OnEnded_76DFBBD24F2A869D02CB218F3BC3C28E");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ResidentCharacter.BP_ResidentCharacter_C.OnEnded_7AB6B7AC47E7205646C9FD9E2092DFC0
// (BlueprintCallable, BlueprintEvent)

void ABP_ResidentCharacter_C::OnEnded_7AB6B7AC47E7205646C9FD9E2092DFC0()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ResidentCharacter_C", "OnEnded_7AB6B7AC47E7205646C9FD9E2092DFC0");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ResidentCharacter.BP_ResidentCharacter_C.OnEnded_85475DC04188D8FA0441B2B2FA1003E6
// (BlueprintCallable, BlueprintEvent)

void ABP_ResidentCharacter_C::OnEnded_85475DC04188D8FA0441B2B2FA1003E6()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ResidentCharacter_C", "OnEnded_85475DC04188D8FA0441B2B2FA1003E6");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ResidentCharacter.BP_ResidentCharacter_C.OnEnded_944A4AE7448517EAE3D9E49D3166CF9B
// (BlueprintCallable, BlueprintEvent)

void ABP_ResidentCharacter_C::OnEnded_944A4AE7448517EAE3D9E49D3166CF9B()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ResidentCharacter_C", "OnEnded_944A4AE7448517EAE3D9E49D3166CF9B");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ResidentCharacter.BP_ResidentCharacter_C.OnEnded_961F2AAA4B9843FE36B28FBCE9763DC4
// (BlueprintCallable, BlueprintEvent)

void ABP_ResidentCharacter_C::OnEnded_961F2AAA4B9843FE36B28FBCE9763DC4()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ResidentCharacter_C", "OnEnded_961F2AAA4B9843FE36B28FBCE9763DC4");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ResidentCharacter.BP_ResidentCharacter_C.OnEnded_96FD18704E9AF75A109211AA841D5CEC
// (BlueprintCallable, BlueprintEvent)

void ABP_ResidentCharacter_C::OnEnded_96FD18704E9AF75A109211AA841D5CEC()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ResidentCharacter_C", "OnEnded_96FD18704E9AF75A109211AA841D5CEC");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ResidentCharacter.BP_ResidentCharacter_C.OnEnded_DDDD2246453FB0A2A653C789D154DF7D
// (BlueprintCallable, BlueprintEvent)

void ABP_ResidentCharacter_C::OnEnded_DDDD2246453FB0A2A653C789D154DF7D()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ResidentCharacter_C", "OnEnded_DDDD2246453FB0A2A653C789D154DF7D");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ResidentCharacter.BP_ResidentCharacter_C.OnHealthChanged
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   Health                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   MaxHealth                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_ResidentCharacter_C::OnHealthChanged(float Health, float MaxHealth)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ResidentCharacter_C", "OnHealthChanged");

	Params::BP_ResidentCharacter_C_OnHealthChanged Parms{};

	Parms.Health = Health;
	Parms.MaxHealth = MaxHealth;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ResidentCharacter.BP_ResidentCharacter_C.OnInventoryChangedLocal
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FItemInstanceArrayEntry          ItemInstanceArrayEntry                                 (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)

void ABP_ResidentCharacter_C::OnInventoryChangedLocal(const struct FItemInstanceArrayEntry& ItemInstanceArrayEntry)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ResidentCharacter_C", "OnInventoryChangedLocal");

	Params::BP_ResidentCharacter_C_OnInventoryChangedLocal Parms{};

	Parms.ItemInstanceArrayEntry = std::move(ItemInstanceArrayEntry);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ResidentCharacter.BP_ResidentCharacter_C.OnItemAdded
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UItemInstance*                    ItemInstance                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_ResidentCharacter_C::OnItemAdded(class UItemInstance* ItemInstance)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ResidentCharacter_C", "OnItemAdded");

	Params::BP_ResidentCharacter_C_OnItemAdded Parms{};

	Parms.ItemInstance = ItemInstance;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ResidentCharacter.BP_ResidentCharacter_C.OnItemRemoved
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// TSoftObjectPtr<class UItemDefinition>   ItemDefinition                                         (BlueprintVisible, BlueprintReadOnly, Parm, UObjectWrapper, HasGetValueTypeHash)

void ABP_ResidentCharacter_C::OnItemRemoved(TSoftObjectPtr<class UItemDefinition> ItemDefinition)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ResidentCharacter_C", "OnItemRemoved");

	Params::BP_ResidentCharacter_C_OnItemRemoved Parms{};

	Parms.ItemDefinition = ItemDefinition;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ResidentCharacter.BP_ResidentCharacter_C.OnMessageReceived_647D55FB4EE325D5E5865AB127B12738
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UAsyncAction_ListenForGameplayMessage*ProxyObject                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// struct FGameplayTag                     ActualChannel                                          (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)

void ABP_ResidentCharacter_C::OnMessageReceived_647D55FB4EE325D5E5865AB127B12738(class UAsyncAction_ListenForGameplayMessage* ProxyObject, const struct FGameplayTag& ActualChannel)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ResidentCharacter_C", "OnMessageReceived_647D55FB4EE325D5E5865AB127B12738");

	Params::BP_ResidentCharacter_C_OnMessageReceived_647D55FB4EE325D5E5865AB127B12738 Parms{};

	Parms.ProxyObject = ProxyObject;
	Parms.ActualChannel = std::move(ActualChannel);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ResidentCharacter.BP_ResidentCharacter_C.OnMessageReceived_F9F199964147C7664F8C12A3C5FCA6B6
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UAsyncAction_ListenForGameplayMessage*ProxyObject                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// struct FGameplayTag                     ActualChannel                                          (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)

void ABP_ResidentCharacter_C::OnMessageReceived_F9F199964147C7664F8C12A3C5FCA6B6(class UAsyncAction_ListenForGameplayMessage* ProxyObject, const struct FGameplayTag& ActualChannel)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ResidentCharacter_C", "OnMessageReceived_F9F199964147C7664F8C12A3C5FCA6B6");

	Params::BP_ResidentCharacter_C_OnMessageReceived_F9F199964147C7664F8C12A3C5FCA6B6 Parms{};

	Parms.ProxyObject = ProxyObject;
	Parms.ActualChannel = std::move(ActualChannel);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ResidentCharacter.BP_ResidentCharacter_C.OnNameChanged
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class APlayerStateJP*                   PlayerState_0                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class FString                           NewName                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void ABP_ResidentCharacter_C::OnNameChanged(class APlayerStateJP* PlayerState_0, const class FString& NewName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ResidentCharacter_C", "OnNameChanged");

	Params::BP_ResidentCharacter_C_OnNameChanged Parms{};

	Parms.PlayerState_0 = PlayerState_0;
	Parms.NewName = std::move(NewName);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ResidentCharacter.BP_ResidentCharacter_C.OnRep_Dead
// (HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_ResidentCharacter_C::OnRep_Dead()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ResidentCharacter_C", "OnRep_Dead");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ResidentCharacter.BP_ResidentCharacter_C.OnRep_IsTalking
// (BlueprintCallable, BlueprintEvent)

void ABP_ResidentCharacter_C::OnRep_IsTalking()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ResidentCharacter_C", "OnRep_IsTalking");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ResidentCharacter.BP_ResidentCharacter_C.OnRep_RoleData
// (BlueprintCallable, BlueprintEvent)

void ABP_ResidentCharacter_C::OnRep_RoleData()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ResidentCharacter_C", "OnRep_RoleData");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ResidentCharacter.BP_ResidentCharacter_C.OnStaminaChanged
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   Stamina                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   MaxStamina                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_ResidentCharacter_C::OnStaminaChanged(float Stamina, float MaxStamina)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ResidentCharacter_C", "OnStaminaChanged");

	Params::BP_ResidentCharacter_C_OnStaminaChanged Parms{};

	Parms.Stamina = Stamina;
	Parms.MaxStamina = MaxStamina;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ResidentCharacter.BP_ResidentCharacter_C.OnStealthToggle
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    StealthActive                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    IsEnemyToLocalPlayer                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_ResidentCharacter_C::OnStealthToggle(bool StealthActive, bool IsEnemyToLocalPlayer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ResidentCharacter_C", "OnStealthToggle");

	Params::BP_ResidentCharacter_C_OnStealthToggle Parms{};

	Parms.StealthActive = StealthActive;
	Parms.IsEnemyToLocalPlayer = IsEnemyToLocalPlayer;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ResidentCharacter.BP_ResidentCharacter_C.Owner_CreateKnockedOutWidget
// (Net, NetReliable, NetClient, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  Deathtimer                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    TempEliminated                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FS_DeathTimerDetails             Death_Timer_Details                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FKillInfo                        LatestKillInfo                                         (BlueprintVisible, BlueprintReadOnly, Parm)

void ABP_ResidentCharacter_C::Owner_CreateKnockedOutWidget(double Deathtimer, bool TempEliminated, const struct FS_DeathTimerDetails& Death_Timer_Details, const struct FKillInfo& LatestKillInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ResidentCharacter_C", "Owner_CreateKnockedOutWidget");

	Params::BP_ResidentCharacter_C_Owner_CreateKnockedOutWidget Parms{};

	Parms.Deathtimer = Deathtimer;
	Parms.TempEliminated = TempEliminated;
	Parms.Death_Timer_Details = std::move(Death_Timer_Details);
	Parms.LatestKillInfo = std::move(LatestKillInfo);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ResidentCharacter.BP_ResidentCharacter_C.Owner_NoSee
// (Net, NetClient, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UMeshComponent*                   Mesh_0                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// bool                                    NoSee                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_ResidentCharacter_C::Owner_NoSee(class UMeshComponent* Mesh_0, bool NoSee)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ResidentCharacter_C", "Owner_NoSee");

	Params::BP_ResidentCharacter_C_Owner_NoSee Parms{};

	Parms.Mesh_0 = Mesh_0;
	Parms.NoSee = NoSee;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ResidentCharacter.BP_ResidentCharacter_C.Owner_Play Camera Shake
// (Net, NetClient, BlueprintCallable, BlueprintEvent)
// Parameters:
// TSubclassOf<class UCameraShakeBase>     ShakeClass                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
// float                                   Scale                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_ResidentCharacter_C::Owner_Play_Camera_Shake(TSubclassOf<class UCameraShakeBase> ShakeClass, float Scale)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ResidentCharacter_C", "Owner_Play Camera Shake");

	Params::BP_ResidentCharacter_C_Owner_Play_Camera_Shake Parms{};

	Parms.ShakeClass = ShakeClass;
	Parms.Scale = Scale;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ResidentCharacter.BP_ResidentCharacter_C.Owner_Play Local Sound
// (Net, NetReliable, NetClient, BlueprintCallable, BlueprintEvent)
// Parameters:
// class USoundBase*                       Sound                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_ResidentCharacter_C::Owner_Play_Local_Sound(class USoundBase* Sound)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ResidentCharacter_C", "Owner_Play Local Sound");

	Params::BP_ResidentCharacter_C_Owner_Play_Local_Sound Parms{};

	Parms.Sound = Sound;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ResidentCharacter.BP_ResidentCharacter_C.Owner_PlayTakeDamageSoundEffect
// (Net, NetClient, BlueprintCallable, BlueprintEvent)

void ABP_ResidentCharacter_C::Owner_PlayTakeDamageSoundEffect()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ResidentCharacter_C", "Owner_PlayTakeDamageSoundEffect");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ResidentCharacter.BP_ResidentCharacter_C.Owner_RemoveHighlights
// (Net, NetClient, BlueprintCallable, BlueprintEvent)

void ABP_ResidentCharacter_C::Owner_RemoveHighlights()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ResidentCharacter_C", "Owner_RemoveHighlights");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ResidentCharacter.BP_ResidentCharacter_C.Owner_RemoveKnockedOutWidget
// (Net, NetReliable, NetClient, BlueprintCallable, BlueprintEvent)

void ABP_ResidentCharacter_C::Owner_RemoveKnockedOutWidget()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ResidentCharacter_C", "Owner_RemoveKnockedOutWidget");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ResidentCharacter.BP_ResidentCharacter_C.Owner_ResetCameraFOV
// (Net, NetClient, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  Speed_0                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_ResidentCharacter_C::Owner_ResetCameraFOV(double Speed_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ResidentCharacter_C", "Owner_ResetCameraFOV");

	Params::BP_ResidentCharacter_C_Owner_ResetCameraFOV Parms{};

	Parms.Speed_0 = Speed_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ResidentCharacter.BP_ResidentCharacter_C.Owner_SendKillDataToAchievementComp
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FKillInfo                        KillInfo                                               (BlueprintVisible, BlueprintReadOnly, Parm)
// struct FVector                          Location                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_ResidentCharacter_C::Owner_SendKillDataToAchievementComp(const struct FKillInfo& KillInfo, const struct FVector& Location)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ResidentCharacter_C", "Owner_SendKillDataToAchievementComp");

	Params::BP_ResidentCharacter_C_Owner_SendKillDataToAchievementComp Parms{};

	Parms.KillInfo = std::move(KillInfo);
	Parms.Location = std::move(Location);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ResidentCharacter.BP_ResidentCharacter_C.Owner_Set Camera FOV
// (Net, NetClient, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  Amount                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  Speed_0                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TSubclassOf<class UCameraShakeBase>     ShakeClass                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
// double                                  ShakeScale                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_ResidentCharacter_C::Owner_Set_Camera_FOV(double Amount, double Speed_0, TSubclassOf<class UCameraShakeBase> ShakeClass, double ShakeScale)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ResidentCharacter_C", "Owner_Set Camera FOV");

	Params::BP_ResidentCharacter_C_Owner_Set_Camera_FOV Parms{};

	Parms.Amount = Amount;
	Parms.Speed_0 = Speed_0;
	Parms.ShakeClass = ShakeClass;
	Parms.ShakeScale = ShakeScale;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ResidentCharacter.BP_ResidentCharacter_C.Owner_Spawn Widget
// (Net, NetReliable, NetClient, BlueprintCallable, BlueprintEvent)
// Parameters:
// E_ServerWidgetType                      Class_0                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_ResidentCharacter_C::Owner_Spawn_Widget(E_ServerWidgetType Class_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ResidentCharacter_C", "Owner_Spawn Widget");

	Params::BP_ResidentCharacter_C_Owner_Spawn_Widget Parms{};

	Parms.Class_0 = Class_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ResidentCharacter.BP_ResidentCharacter_C.Owner_SpawnDamageValueAndHitMarkers
// (Net, NetClient, BlueprintCallable, BlueprintEvent)
// Parameters:
// class APlayerController*                OwningPlayer                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// double                                  IncomingHealthDelta                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          WorldLocation                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    CriticalHit                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_ResidentCharacter_C::Owner_SpawnDamageValueAndHitMarkers(class APlayerController* OwningPlayer, double IncomingHealthDelta, const struct FVector& WorldLocation, bool CriticalHit)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ResidentCharacter_C", "Owner_SpawnDamageValueAndHitMarkers");

	Params::BP_ResidentCharacter_C_Owner_SpawnDamageValueAndHitMarkers Parms{};

	Parms.OwningPlayer = OwningPlayer;
	Parms.IncomingHealthDelta = IncomingHealthDelta;
	Parms.WorldLocation = std::move(WorldLocation);
	Parms.CriticalHit = CriticalHit;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ResidentCharacter.BP_ResidentCharacter_C.Owner_Take Damage Screen Effect
// (Net, NetClient, BlueprintCallable, BlueprintEvent)

void ABP_ResidentCharacter_C::Owner_Take_Damage_Screen_Effect()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ResidentCharacter_C", "Owner_Take Damage Screen Effect");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ResidentCharacter.BP_ResidentCharacter_C.PlayCameraShake
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UClass*                           CameraShake                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// double                                  Scale                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_ResidentCharacter_C::PlayCameraShake(class UClass* CameraShake, double Scale)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ResidentCharacter_C", "PlayCameraShake");

	Params::BP_ResidentCharacter_C_PlayCameraShake Parms{};

	Parms.CameraShake = CameraShake;
	Parms.Scale = Scale;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ResidentCharacter.BP_ResidentCharacter_C.PlayDamagedSoundEffect
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_ResidentCharacter_C::PlayDamagedSoundEffect()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ResidentCharacter_C", "PlayDamagedSoundEffect");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ResidentCharacter.BP_ResidentCharacter_C.PlayDamageScreenEffect
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  Delta                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_ResidentCharacter_C::PlayDamageScreenEffect(double Delta)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ResidentCharacter_C", "PlayDamageScreenEffect");

	Params::BP_ResidentCharacter_C_PlayDamageScreenEffect Parms{};

	Parms.Delta = Delta;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ResidentCharacter.BP_ResidentCharacter_C.PlayFootstepCharacterLayerSound
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  VolumeMultiplier                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_ResidentCharacter_C::PlayFootstepCharacterLayerSound(double VolumeMultiplier)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ResidentCharacter_C", "PlayFootstepCharacterLayerSound");

	Params::BP_ResidentCharacter_C_PlayFootstepCharacterLayerSound Parms{};

	Parms.VolumeMultiplier = VolumeMultiplier;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ResidentCharacter.BP_ResidentCharacter_C.PlayFootstepSound
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class USoundBase*                       Sound                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// double                                  VolumeMultiplier                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    IgnoreSpeedModifier                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Volume_Multiplier                                      (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_ResidentCharacter_C::PlayFootstepSound(class USoundBase* Sound, double VolumeMultiplier, bool IgnoreSpeedModifier, float* Volume_Multiplier)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ResidentCharacter_C", "PlayFootstepSound");

	Params::BP_ResidentCharacter_C_PlayFootstepSound Parms{};

	Parms.Sound = Sound;
	Parms.VolumeMultiplier = VolumeMultiplier;
	Parms.IgnoreSpeedModifier = IgnoreSpeedModifier;

	UObject::ProcessEvent(Func, &Parms);

	if (Volume_Multiplier != nullptr)
		*Volume_Multiplier = Parms.Volume_Multiplier;
}


// Function BP_ResidentCharacter.BP_ResidentCharacter_C.QueryInitializeHealthBar
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_ResidentCharacter_C::QueryInitializeHealthBar()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ResidentCharacter_C", "QueryInitializeHealthBar");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ResidentCharacter.BP_ResidentCharacter_C.QueryInitializeStaminaBar
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_ResidentCharacter_C::QueryInitializeStaminaBar()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ResidentCharacter_C", "QueryInitializeStaminaBar");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ResidentCharacter.BP_ResidentCharacter_C.RemoveEffectsOnDeath
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_ResidentCharacter_C::RemoveEffectsOnDeath()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ResidentCharacter_C", "RemoveEffectsOnDeath");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ResidentCharacter.BP_ResidentCharacter_C.RemoveGameplayAbilitiesFromPerk
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_ResidentCharacter_C::RemoveGameplayAbilitiesFromPerk()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ResidentCharacter_C", "RemoveGameplayAbilitiesFromPerk");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ResidentCharacter.BP_ResidentCharacter_C.RemoveOnHealthChangedListener
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// TScriptInterface<class II_ActorWithHealth_HealthChangedReceiver_C>Listener                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_ResidentCharacter_C::RemoveOnHealthChangedListener(TScriptInterface<class II_ActorWithHealth_HealthChangedReceiver_C> Listener)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ResidentCharacter_C", "RemoveOnHealthChangedListener");

	Params::BP_ResidentCharacter_C_RemoveOnHealthChangedListener Parms{};

	Parms.Listener = Listener;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ResidentCharacter.BP_ResidentCharacter_C.RemoveOnTeamChangedListener
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// TScriptInterface<class II_ActorWithChangeableTeam_TeamChangedReceiver_C>Listener                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_ResidentCharacter_C::RemoveOnTeamChangedListener(TScriptInterface<class II_ActorWithChangeableTeam_TeamChangedReceiver_C> Listener)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ResidentCharacter_C", "RemoveOnTeamChangedListener");

	Params::BP_ResidentCharacter_C_RemoveOnTeamChangedListener Parms{};

	Parms.Listener = Listener;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ResidentCharacter.BP_ResidentCharacter_C.RequestDeath
// (Net, NetServer, BlueprintCallable, BlueprintEvent)

void ABP_ResidentCharacter_C::RequestDeath()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ResidentCharacter_C", "RequestDeath");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ResidentCharacter.BP_ResidentCharacter_C.RescaleCapsuleComponent
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_ResidentCharacter_C::RescaleCapsuleComponent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ResidentCharacter_C", "RescaleCapsuleComponent");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ResidentCharacter.BP_ResidentCharacter_C.ResetCameraFOV
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  Speed_0                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_ResidentCharacter_C::ResetCameraFOV(double Speed_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ResidentCharacter_C", "ResetCameraFOV");

	Params::BP_ResidentCharacter_C_ResetCameraFOV Parms{};

	Parms.Speed_0 = Speed_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ResidentCharacter.BP_ResidentCharacter_C.ResetOnPossessedDoOnce
// (BlueprintCallable, BlueprintEvent)

void ABP_ResidentCharacter_C::ResetOnPossessedDoOnce()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ResidentCharacter_C", "ResetOnPossessedDoOnce");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ResidentCharacter.BP_ResidentCharacter_C.RetrieveCustomization
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_ResidentCharacter_C::RetrieveCustomization()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ResidentCharacter_C", "RetrieveCustomization");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ResidentCharacter.BP_ResidentCharacter_C.ReturnHighestPrioInter
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<struct FHitResult>               InteractableHits                                       (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
// class AActor*                           Actor                                                  (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class UActorComponent*                  Component                                              (Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void ABP_ResidentCharacter_C::ReturnHighestPrioInter(TArray<struct FHitResult>& InteractableHits, class AActor** Actor, class UActorComponent** Component)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ResidentCharacter_C", "ReturnHighestPrioInter");

	Params::BP_ResidentCharacter_C_ReturnHighestPrioInter Parms{};

	Parms.InteractableHits = std::move(InteractableHits);

	UObject::ProcessEvent(Func, &Parms);

	InteractableHits = std::move(Parms.InteractableHits);

	if (Actor != nullptr)
		*Actor = Parms.Actor;

	if (Component != nullptr)
		*Component = Parms.Component;
}


// Function BP_ResidentCharacter.BP_ResidentCharacter_C.ReviveActor
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          Location                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Void                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_ResidentCharacter_C::ReviveActor(const struct FVector& Location, bool* Void)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ResidentCharacter_C", "ReviveActor");

	Params::BP_ResidentCharacter_C_ReviveActor Parms{};

	Parms.Location = std::move(Location);

	UObject::ProcessEvent(Func, &Parms);

	if (Void != nullptr)
		*Void = Parms.Void;
}


// Function BP_ResidentCharacter.BP_ResidentCharacter_C.SelectCharacterById
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// TSoftObjectPtr<class UPawnDefinitionJP> CharacterDefinition                                    (Parm, OutParm, HasGetValueTypeHash)

void ABP_ResidentCharacter_C::SelectCharacterById(TSoftObjectPtr<class UPawnDefinitionJP>* CharacterDefinition)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ResidentCharacter_C", "SelectCharacterById");

	Params::BP_ResidentCharacter_C_SelectCharacterById Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (CharacterDefinition != nullptr)
		*CharacterDefinition = Parms.CharacterDefinition;
}


// Function BP_ResidentCharacter.BP_ResidentCharacter_C.SendPickUpActionToClient
// (Net, NetClient, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABp_ThrowableProp_Base_C*         Throwable                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_ResidentCharacter_C::SendPickUpActionToClient(class ABp_ThrowableProp_Base_C* Throwable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ResidentCharacter_C", "SendPickUpActionToClient");

	Params::BP_ResidentCharacter_C_SendPickUpActionToClient Parms{};

	Parms.Throwable = Throwable;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ResidentCharacter.BP_ResidentCharacter_C.Server_Kill Character
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Dead_0                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          OptionalImpulse                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    TempEliminated                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FKillInfo                        KillInfo                                               (BlueprintVisible, BlueprintReadOnly, Parm)

void ABP_ResidentCharacter_C::Server_Kill_Character(bool Dead_0, const struct FVector& OptionalImpulse, bool TempEliminated, const struct FKillInfo& KillInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ResidentCharacter_C", "Server_Kill Character");

	Params::BP_ResidentCharacter_C_Server_Kill_Character Parms{};

	Parms.Dead_0 = Dead_0;
	Parms.OptionalImpulse = std::move(OptionalImpulse);
	Parms.TempEliminated = TempEliminated;
	Parms.KillInfo = std::move(KillInfo);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ResidentCharacter.BP_ResidentCharacter_C.Server_Respawn Character
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AController*                      Target                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class APlayerStartJP_C*                 PlayerStartToUse_0                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_ResidentCharacter_C::Server_Respawn_Character(class AController* Target, class APlayerStartJP_C* PlayerStartToUse_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ResidentCharacter_C", "Server_Respawn Character");

	Params::BP_ResidentCharacter_C_Server_Respawn_Character Parms{};

	Parms.Target = Target;
	Parms.PlayerStartToUse_0 = PlayerStartToUse_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ResidentCharacter.BP_ResidentCharacter_C.Server_Struggle
// (Net, NetServer, BlueprintCallable, BlueprintEvent)

void ABP_ResidentCharacter_C::Server_Struggle()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ResidentCharacter_C", "Server_Struggle");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ResidentCharacter.BP_ResidentCharacter_C.Server_Teleport Emergency
// (Net, NetServer, BlueprintCallable, BlueprintEvent)

void ABP_ResidentCharacter_C::Server_Teleport_Emergency()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ResidentCharacter_C", "Server_Teleport Emergency");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ResidentCharacter.BP_ResidentCharacter_C.ServerSyncPhysicsGrabRotation
// (Net, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FRotator                         GrabbedPhysicsObjectRotation                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_ResidentCharacter_C::ServerSyncPhysicsGrabRotation(const struct FRotator& GrabbedPhysicsObjectRotation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ResidentCharacter_C", "ServerSyncPhysicsGrabRotation");

	Params::BP_ResidentCharacter_C_ServerSyncPhysicsGrabRotation Parms{};

	Parms.GrabbedPhysicsObjectRotation = std::move(GrabbedPhysicsObjectRotation);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ResidentCharacter.BP_ResidentCharacter_C.ServerSyncPhysicsGrabRotationReliable
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FRotator                         GrabbedPhysicsObjectRotation                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_ResidentCharacter_C::ServerSyncPhysicsGrabRotationReliable(const struct FRotator& GrabbedPhysicsObjectRotation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ResidentCharacter_C", "ServerSyncPhysicsGrabRotationReliable");

	Params::BP_ResidentCharacter_C_ServerSyncPhysicsGrabRotationReliable Parms{};

	Parms.GrabbedPhysicsObjectRotation = std::move(GrabbedPhysicsObjectRotation);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ResidentCharacter.BP_ResidentCharacter_C.SetCameraFOV
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  Amount                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  Speed_0                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UClass*                           OptionalCameraShake                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// double                                  Scale                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_ResidentCharacter_C::SetCameraFOV(double Amount, double Speed_0, class UClass* OptionalCameraShake, double Scale)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ResidentCharacter_C", "SetCameraFOV");

	Params::BP_ResidentCharacter_C_SetCameraFOV Parms{};

	Parms.Amount = Amount;
	Parms.Speed_0 = Speed_0;
	Parms.OptionalCameraShake = OptionalCameraShake;
	Parms.Scale = Scale;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ResidentCharacter.BP_ResidentCharacter_C.SetCharacterStats
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_ResidentCharacter_C::SetCharacterStats()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ResidentCharacter_C", "SetCharacterStats");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ResidentCharacter.BP_ResidentCharacter_C.SetDeathCamera
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Dead_0                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_ResidentCharacter_C::SetDeathCamera(bool Dead_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ResidentCharacter_C", "SetDeathCamera");

	Params::BP_ResidentCharacter_C_SetDeathCamera Parms{};

	Parms.Dead_0 = Dead_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ResidentCharacter.BP_ResidentCharacter_C.SetForcedStealth
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Enable                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_ResidentCharacter_C::SetForcedStealth(bool Enable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ResidentCharacter_C", "SetForcedStealth");

	Params::BP_ResidentCharacter_C_SetForcedStealth Parms{};

	Parms.Enable = Enable;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ResidentCharacter.BP_ResidentCharacter_C.SetHighContrastMode
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Enabled                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_ResidentCharacter_C::SetHighContrastMode(bool Enabled)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ResidentCharacter_C", "SetHighContrastMode");

	Params::BP_ResidentCharacter_C_SetHighContrastMode Parms{};

	Parms.Enabled = Enabled;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ResidentCharacter.BP_ResidentCharacter_C.SetHoveredComponent
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UInteractionComponent_C*          HoveredComponent                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// bool                                    Void                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_ResidentCharacter_C::SetHoveredComponent(class UInteractionComponent_C* HoveredComponent, bool* Void)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ResidentCharacter_C", "SetHoveredComponent");

	Params::BP_ResidentCharacter_C_SetHoveredComponent Parms{};

	Parms.HoveredComponent = HoveredComponent;

	UObject::ProcessEvent(Func, &Parms);

	if (Void != nullptr)
		*Void = Parms.Void;
}


// Function BP_ResidentCharacter.BP_ResidentCharacter_C.SetInteractable
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Interactable                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_ResidentCharacter_C::SetInteractable(bool Interactable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ResidentCharacter_C", "SetInteractable");

	Params::BP_ResidentCharacter_C_SetInteractable Parms{};

	Parms.Interactable = Interactable;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ResidentCharacter.BP_ResidentCharacter_C.SetIsValidTurretTarget
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Valid                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Void                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_ResidentCharacter_C::SetIsValidTurretTarget(bool Valid, bool* Void)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ResidentCharacter_C", "SetIsValidTurretTarget");

	Params::BP_ResidentCharacter_C_SetIsValidTurretTarget Parms{};

	Parms.Valid = Valid;

	UObject::ProcessEvent(Func, &Parms);

	if (Void != nullptr)
		*Void = Parms.Void;
}


// Function BP_ResidentCharacter.BP_ResidentCharacter_C.SlowPlayerDownAfterDamage
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_ResidentCharacter_C::SlowPlayerDownAfterDamage()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ResidentCharacter_C", "SlowPlayerDownAfterDamage");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ResidentCharacter.BP_ResidentCharacter_C.SpawnInstigatorHitMark
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_ResidentCharacter_C::SpawnInstigatorHitMark()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ResidentCharacter_C", "SpawnInstigatorHitMark");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ResidentCharacter.BP_ResidentCharacter_C.SpawnReviveStatue
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_ResidentCharacter_C::SpawnReviveStatue()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ResidentCharacter_C", "SpawnReviveStatue");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ResidentCharacter.BP_ResidentCharacter_C.StartGripLerpSpeed
// (BlueprintCallable, BlueprintEvent)

void ABP_ResidentCharacter_C::StartGripLerpSpeed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ResidentCharacter_C", "StartGripLerpSpeed");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ResidentCharacter.BP_ResidentCharacter_C.TakeDamage
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_ResidentCharacter_C::TakeDamage()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ResidentCharacter_C", "TakeDamage");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ResidentCharacter.BP_ResidentCharacter_C.TargetingCompleted
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FTargetingRequestHandle          TargetingRequestHandle                                 (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)

void ABP_ResidentCharacter_C::TargetingCompleted(const struct FTargetingRequestHandle& TargetingRequestHandle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ResidentCharacter_C", "TargetingCompleted");

	Params::BP_ResidentCharacter_C_TargetingCompleted Parms{};

	Parms.TargetingRequestHandle = std::move(TargetingRequestHandle);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ResidentCharacter.BP_ResidentCharacter_C.TeamWasEliminated
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool ABP_ResidentCharacter_C::TeamWasEliminated()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ResidentCharacter_C", "TeamWasEliminated");

	Params::BP_ResidentCharacter_C_TeamWasEliminated Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_ResidentCharacter.BP_ResidentCharacter_C.Trace For Interactable
// (BlueprintCallable, BlueprintEvent)

void ABP_ResidentCharacter_C::Trace_For_Interactable()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ResidentCharacter_C", "Trace For Interactable");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ResidentCharacter.BP_ResidentCharacter_C.TransferAmmoOnDeath
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_ResidentCharacter_C*          NewCharacter                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_ResidentCharacter_C::TransferAmmoOnDeath(class ABP_ResidentCharacter_C* NewCharacter)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ResidentCharacter_C", "TransferAmmoOnDeath");

	Params::BP_ResidentCharacter_C_TransferAmmoOnDeath Parms{};

	Parms.NewCharacter = NewCharacter;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ResidentCharacter.BP_ResidentCharacter_C.Try Disable Camera Look
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Disabled                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_ResidentCharacter_C::Try_Disable_Camera_Look(bool Disabled)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ResidentCharacter_C", "Try Disable Camera Look");

	Params::BP_ResidentCharacter_C_Try_Disable_Camera_Look Parms{};

	Parms.Disabled = Disabled;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ResidentCharacter.BP_ResidentCharacter_C.TryDeactivateScreenEffect
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_ResidentCharacter_C::TryDeactivateScreenEffect()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ResidentCharacter_C", "TryDeactivateScreenEffect");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ResidentCharacter.BP_ResidentCharacter_C.TryPlayFoliageRustle
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_ResidentCharacter_C::TryPlayFoliageRustle()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ResidentCharacter_C", "TryPlayFoliageRustle");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ResidentCharacter.BP_ResidentCharacter_C.Update Apperance
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_ResidentCharacter_C::Update_Apperance()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ResidentCharacter_C", "Update Apperance");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ResidentCharacter.BP_ResidentCharacter_C.Update FPP FOV
// (BlueprintCallable, BlueprintEvent)

void ABP_ResidentCharacter_C::Update_FPP_FOV()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ResidentCharacter_C", "Update FPP FOV");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ResidentCharacter.BP_ResidentCharacter_C.Update UI and Interaction
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_ResidentCharacter_C::Update_UI_and_Interaction()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ResidentCharacter_C", "Update UI and Interaction");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ResidentCharacter.BP_ResidentCharacter_C.UpdateDesiredMovementDirection
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector2D                        InVector2D                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_ResidentCharacter_C::UpdateDesiredMovementDirection(const struct FVector2D& InVector2D)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ResidentCharacter_C", "UpdateDesiredMovementDirection");

	Params::BP_ResidentCharacter_C_UpdateDesiredMovementDirection Parms{};

	Parms.InVector2D = std::move(InVector2D);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ResidentCharacter.BP_ResidentCharacter_C.UpdateEquipmentManagerFromPerk
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_ResidentCharacter_C::UpdateEquipmentManagerFromPerk()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ResidentCharacter_C", "UpdateEquipmentManagerFromPerk");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ResidentCharacter.BP_ResidentCharacter_C.UpdatePhysicsHandle
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_ResidentCharacter_C::UpdatePhysicsHandle()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ResidentCharacter_C", "UpdatePhysicsHandle");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ResidentCharacter.BP_ResidentCharacter_C.UpdateShowLowHealth
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_ResidentCharacter_C::UpdateShowLowHealth()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ResidentCharacter_C", "UpdateShowLowHealth");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ResidentCharacter.BP_ResidentCharacter_C.UpdateXRay
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_ResidentCharacter_C::UpdateXRay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ResidentCharacter_C", "UpdateXRay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ResidentCharacter.BP_ResidentCharacter_C.VoiceActorSet
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_PlayerVoiceChatActorJP_C*     VoiceActor                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_ResidentCharacter_C::VoiceActorSet(class ABP_PlayerVoiceChatActorJP_C* VoiceActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ResidentCharacter_C", "VoiceActorSet");

	Params::BP_ResidentCharacter_C_VoiceActorSet Parms{};

	Parms.VoiceActor = VoiceActor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ResidentCharacter.BP_ResidentCharacter_C.GetDurabilityCostWhenHit
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  Amount                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_ResidentCharacter_C::GetDurabilityCostWhenHit(double* Amount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ResidentCharacter_C", "GetDurabilityCostWhenHit");

	Params::BP_ResidentCharacter_C_GetDurabilityCostWhenHit Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Amount != nullptr)
		*Amount = Parms.Amount;
}


// Function BP_ResidentCharacter.BP_ResidentCharacter_C.GetGuardDogTargetOffset
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          TargetOffset                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_ResidentCharacter_C::GetGuardDogTargetOffset(struct FVector* TargetOffset)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ResidentCharacter_C", "GetGuardDogTargetOffset");

	Params::BP_ResidentCharacter_C_GetGuardDogTargetOffset Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (TargetOffset != nullptr)
		*TargetOffset = std::move(Parms.TargetOffset);
}


// Function BP_ResidentCharacter.BP_ResidentCharacter_C.GetIsDead
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Dead_0                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_ResidentCharacter_C::GetIsDead(bool* Dead_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ResidentCharacter_C", "GetIsDead");

	Params::BP_ResidentCharacter_C_GetIsDead Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Dead_0 != nullptr)
		*Dead_0 = Parms.Dead_0;
}


// Function BP_ResidentCharacter.BP_ResidentCharacter_C.GetJPPlayerController
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class APlayerControllerJP*              PlayerController                                       (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_ResidentCharacter_C::GetJPPlayerController(class APlayerControllerJP** PlayerController)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ResidentCharacter_C", "GetJPPlayerController");

	Params::BP_ResidentCharacter_C_GetJPPlayerController Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (PlayerController != nullptr)
		*PlayerController = Parms.PlayerController;
}


// Function BP_ResidentCharacter.BP_ResidentCharacter_C.GetMaterialType
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// E_MaterialTypes                         MaterialType                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_ResidentCharacter_C::GetMaterialType(E_MaterialTypes* MaterialType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ResidentCharacter_C", "GetMaterialType");

	Params::BP_ResidentCharacter_C_GetMaterialType Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (MaterialType != nullptr)
		*MaterialType = Parms.MaterialType;
}


// Function BP_ResidentCharacter.BP_ResidentCharacter_C.ImpactCosmetics
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class APawn*                            ImpactCauser                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// struct FVector                          Location                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          HitImpulse                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// E_ImpactEffect                          ImpactEffect                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FName                             BoneName                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ChangedAttributes                                      (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_ResidentCharacter_C::ImpactCosmetics(class APawn* ImpactCauser, const struct FVector& Location, const struct FVector& HitImpulse, E_ImpactEffect ImpactEffect, class FName BoneName, bool* ChangedAttributes)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ResidentCharacter_C", "ImpactCosmetics");

	Params::BP_ResidentCharacter_C_ImpactCosmetics Parms{};

	Parms.ImpactCauser = ImpactCauser;
	Parms.Location = std::move(Location);
	Parms.HitImpulse = std::move(HitImpulse);
	Parms.ImpactEffect = ImpactEffect;
	Parms.BoneName = BoneName;

	UObject::ProcessEvent(Func, &Parms);

	if (ChangedAttributes != nullptr)
		*ChangedAttributes = Parms.ChangedAttributes;
}


// Function BP_ResidentCharacter.BP_ResidentCharacter_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ABP_ResidentCharacter_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ResidentCharacter_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ResidentCharacter.BP_ResidentCharacter_C.ReceivePossessed
// (BlueprintAuthorityOnly, Event, Public, BlueprintEvent)
// Parameters:
// class AController*                      NewController                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_ResidentCharacter_C::ReceivePossessed(class AController* NewController)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ResidentCharacter_C", "ReceivePossessed");

	Params::BP_ResidentCharacter_C_ReceivePossessed Parms{};

	Parms.NewController = NewController;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ResidentCharacter.BP_ResidentCharacter_C.ReceiveTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_ResidentCharacter_C::ReceiveTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ResidentCharacter_C", "ReceiveTick");

	Params::BP_ResidentCharacter_C_ReceiveTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ResidentCharacter.BP_ResidentCharacter_C.SetIsDead
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Dead_0                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          OptionalVelocity                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FKillInfo                        KillInfo                                               (BlueprintVisible, BlueprintReadOnly, Parm)

void ABP_ResidentCharacter_C::SetIsDead(bool Dead_0, const struct FVector& OptionalVelocity, const struct FKillInfo& KillInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ResidentCharacter_C", "SetIsDead");

	Params::BP_ResidentCharacter_C_SetIsDead Parms{};

	Parms.Dead_0 = Dead_0;
	Parms.OptionalVelocity = std::move(OptionalVelocity);
	Parms.KillInfo = std::move(KillInfo);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ResidentCharacter.BP_ResidentCharacter_C.UserConstructionScript
// (Event, Public, BlueprintCallable, BlueprintEvent)

void ABP_ResidentCharacter_C::UserConstructionScript()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ResidentCharacter_C", "UserConstructionScript");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ResidentCharacter.BP_ResidentCharacter_C.CalculateRagdollImpulse
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// struct FVector                          HitFromDirection                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UDamageType*                      DamageType                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// struct FVector                          Return                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_ResidentCharacter_C::CalculateRagdollImpulse(const struct FVector& HitFromDirection, const class UDamageType* DamageType, struct FVector* Return) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ResidentCharacter_C", "CalculateRagdollImpulse");

	Params::BP_ResidentCharacter_C_CalculateRagdollImpulse Parms{};

	Parms.HitFromDirection = std::move(HitFromDirection);
	Parms.DamageType = DamageType;

	UObject::ProcessEvent(Func, &Parms);

	if (Return != nullptr)
		*Return = std::move(Parms.Return);
}


// Function BP_ResidentCharacter.BP_ResidentCharacter_C.GetControllerReference
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// class AController*                      OGPlayerController                                     (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_ResidentCharacter_C::GetControllerReference(class AController** OGPlayerController) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ResidentCharacter_C", "GetControllerReference");

	Params::BP_ResidentCharacter_C_GetControllerReference Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (OGPlayerController != nullptr)
		*OGPlayerController = Parms.OGPlayerController;
}


// Function BP_ResidentCharacter.BP_ResidentCharacter_C.GetLevelScaling
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// double                                  ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

double ABP_ResidentCharacter_C::GetLevelScaling() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ResidentCharacter_C", "GetLevelScaling");

	Params::BP_ResidentCharacter_C_GetLevelScaling Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_ResidentCharacter.BP_ResidentCharacter_C.GetPlayerStateJP
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// class APlayerStateJP*                   AsPlayer_State_JP                                      (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_ResidentCharacter_C::GetPlayerStateJP(class APlayerStateJP** AsPlayer_State_JP) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ResidentCharacter_C", "GetPlayerStateJP");

	Params::BP_ResidentCharacter_C_GetPlayerStateJP Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (AsPlayer_State_JP != nullptr)
		*AsPlayer_State_JP = Parms.AsPlayer_State_JP;
}


// Function BP_ResidentCharacter.BP_ResidentCharacter_C.GetTeam
// (Event, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// struct FTeam                            ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor)

struct FTeam ABP_ResidentCharacter_C::GetTeam() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ResidentCharacter_C", "GetTeam");

	Params::BP_ResidentCharacter_C_GetTeam Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_ResidentCharacter.BP_ResidentCharacter_C.GetTeam_Internal
// (Private, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// struct FTeam                            Return                                                 (ConstParm, Parm, OutParm, NoDestructor)
// bool                                    Valid                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_ResidentCharacter_C::GetTeam_Internal(const struct FTeam* Return, bool* Valid) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ResidentCharacter_C", "GetTeam_Internal");

	Params::BP_ResidentCharacter_C_GetTeam_Internal Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Return != nullptr)
		*Return = std::move(Parms.Return);

	if (Valid != nullptr)
		*Valid = Parms.Valid;
}


// Function BP_ResidentCharacter.BP_ResidentCharacter_C.GetTeamID
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// uint8                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

uint8 ABP_ResidentCharacter_C::GetTeamID() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ResidentCharacter_C", "GetTeamID");

	Params::BP_ResidentCharacter_C_GetTeamID Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_ResidentCharacter.BP_ResidentCharacter_C.HasInfiniteHealth
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool ABP_ResidentCharacter_C::HasInfiniteHealth() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ResidentCharacter_C", "HasInfiniteHealth");

	Params::BP_ResidentCharacter_C_HasInfiniteHealth Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_ResidentCharacter.BP_ResidentCharacter_C.HasTeam
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool ABP_ResidentCharacter_C::HasTeam() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ResidentCharacter_C", "HasTeam");

	Params::BP_ResidentCharacter_C_HasTeam Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_ResidentCharacter.BP_ResidentCharacter_C.TakeDamageFromAllTeams
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool ABP_ResidentCharacter_C::TakeDamageFromAllTeams() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ResidentCharacter_C", "TakeDamageFromAllTeams");

	Params::BP_ResidentCharacter_C_TakeDamageFromAllTeams Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}

}

