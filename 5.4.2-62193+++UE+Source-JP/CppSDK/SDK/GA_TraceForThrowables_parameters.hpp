#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GA_TraceForThrowables

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "GameplayAbilities_structs.hpp"


namespace SDK::Params
{

// Function GA_TraceForThrowables.GA_TraceForThrowables_C.ExecuteUbergraph_GA_TraceForThrowables
// 0x0050 (0x0050 - 0x0000)
struct GA_TraceForThrowables_C_ExecuteUbergraph_GA_TraceForThrowables final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UGA_ContinuousTraceHitables_C*          CallFunc_GetReferenceForContinuousTraceForHitablesAbility_AsGA_Continuous_Trace_for_Hitables; // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(int32 ActionNumber)>           K2Node_CreateDelegate_OutputDelegate;              // 0x0010(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_ActionNumber_1;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_ActionNumber;                   // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(int32 ActionNumber)>           K2Node_CreateDelegate_OutputDelegate_1;            // 0x0028(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAbilityTask_RepeatContinuous*          CallFunc_RepeatContinuousAction_ReturnValue;       // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_TraceForThrowables_C_ExecuteUbergraph_GA_TraceForThrowables) == 0x000008, "Wrong alignment on GA_TraceForThrowables_C_ExecuteUbergraph_GA_TraceForThrowables");
static_assert(sizeof(GA_TraceForThrowables_C_ExecuteUbergraph_GA_TraceForThrowables) == 0x000050, "Wrong size on GA_TraceForThrowables_C_ExecuteUbergraph_GA_TraceForThrowables");
static_assert(offsetof(GA_TraceForThrowables_C_ExecuteUbergraph_GA_TraceForThrowables, EntryPoint) == 0x000000, "Member 'GA_TraceForThrowables_C_ExecuteUbergraph_GA_TraceForThrowables::EntryPoint' has a wrong offset!");
static_assert(offsetof(GA_TraceForThrowables_C_ExecuteUbergraph_GA_TraceForThrowables, CallFunc_GetReferenceForContinuousTraceForHitablesAbility_AsGA_Continuous_Trace_for_Hitables) == 0x000008, "Member 'GA_TraceForThrowables_C_ExecuteUbergraph_GA_TraceForThrowables::CallFunc_GetReferenceForContinuousTraceForHitablesAbility_AsGA_Continuous_Trace_for_Hitables' has a wrong offset!");
static_assert(offsetof(GA_TraceForThrowables_C_ExecuteUbergraph_GA_TraceForThrowables, K2Node_CreateDelegate_OutputDelegate) == 0x000010, "Member 'GA_TraceForThrowables_C_ExecuteUbergraph_GA_TraceForThrowables::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(GA_TraceForThrowables_C_ExecuteUbergraph_GA_TraceForThrowables, K2Node_CustomEvent_ActionNumber_1) == 0x000020, "Member 'GA_TraceForThrowables_C_ExecuteUbergraph_GA_TraceForThrowables::K2Node_CustomEvent_ActionNumber_1' has a wrong offset!");
static_assert(offsetof(GA_TraceForThrowables_C_ExecuteUbergraph_GA_TraceForThrowables, K2Node_CustomEvent_ActionNumber) == 0x000024, "Member 'GA_TraceForThrowables_C_ExecuteUbergraph_GA_TraceForThrowables::K2Node_CustomEvent_ActionNumber' has a wrong offset!");
static_assert(offsetof(GA_TraceForThrowables_C_ExecuteUbergraph_GA_TraceForThrowables, K2Node_CreateDelegate_OutputDelegate_1) == 0x000028, "Member 'GA_TraceForThrowables_C_ExecuteUbergraph_GA_TraceForThrowables::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(GA_TraceForThrowables_C_ExecuteUbergraph_GA_TraceForThrowables, Temp_int_Variable) == 0x000038, "Member 'GA_TraceForThrowables_C_ExecuteUbergraph_GA_TraceForThrowables::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(GA_TraceForThrowables_C_ExecuteUbergraph_GA_TraceForThrowables, CallFunc_RepeatContinuousAction_ReturnValue) == 0x000040, "Member 'GA_TraceForThrowables_C_ExecuteUbergraph_GA_TraceForThrowables::CallFunc_RepeatContinuousAction_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_TraceForThrowables_C_ExecuteUbergraph_GA_TraceForThrowables, CallFunc_IsValid_ReturnValue) == 0x000048, "Member 'GA_TraceForThrowables_C_ExecuteUbergraph_GA_TraceForThrowables::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function GA_TraceForThrowables.GA_TraceForThrowables_C.FilterForThrowable
// 0x0208 (0x0208 - 0x0000)
struct GA_TraceForThrowables_C_FilterForThrowable final
{
public:
	class ABp_ThrowableProp_Base_C*               Return_Value;                                      // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<struct FHitResult>                     Filtered_Hits;                                     // 0x0008(0x0010)(Edit, BlueprintVisible, ContainsInstancedReference)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_Array_Get_Item;                           // 0x0028(0x00F8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x0121(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x0122(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_123[0x1];                                      // 0x0123(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x0124(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x0128(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12C[0x4];                                      // 0x012C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x0130(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x0148(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x0160(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x0178(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0190(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0198(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x01A0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x01A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_BoneName;                  // 0x01B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x01B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x01BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x01C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C4[0x4];                                      // 0x01C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x01C8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x01E0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABp_ThrowableProp_Base_C*               K2Node_DynamicCast_AsBp_Throwable_Prop_Base;       // 0x01F8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0200(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0201(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_TraceForThrowables_C_FilterForThrowable) == 0x000008, "Wrong alignment on GA_TraceForThrowables_C_FilterForThrowable");
static_assert(sizeof(GA_TraceForThrowables_C_FilterForThrowable) == 0x000208, "Wrong size on GA_TraceForThrowables_C_FilterForThrowable");
static_assert(offsetof(GA_TraceForThrowables_C_FilterForThrowable, Return_Value) == 0x000000, "Member 'GA_TraceForThrowables_C_FilterForThrowable::Return_Value' has a wrong offset!");
static_assert(offsetof(GA_TraceForThrowables_C_FilterForThrowable, Filtered_Hits) == 0x000008, "Member 'GA_TraceForThrowables_C_FilterForThrowable::Filtered_Hits' has a wrong offset!");
static_assert(offsetof(GA_TraceForThrowables_C_FilterForThrowable, Temp_int_Array_Index_Variable) == 0x000018, "Member 'GA_TraceForThrowables_C_FilterForThrowable::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(GA_TraceForThrowables_C_FilterForThrowable, Temp_int_Loop_Counter_Variable) == 0x00001C, "Member 'GA_TraceForThrowables_C_FilterForThrowable::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(GA_TraceForThrowables_C_FilterForThrowable, CallFunc_Add_IntInt_ReturnValue) == 0x000020, "Member 'GA_TraceForThrowables_C_FilterForThrowable::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_TraceForThrowables_C_FilterForThrowable, CallFunc_Array_Length_ReturnValue) == 0x000024, "Member 'GA_TraceForThrowables_C_FilterForThrowable::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_TraceForThrowables_C_FilterForThrowable, CallFunc_Array_Get_Item) == 0x000028, "Member 'GA_TraceForThrowables_C_FilterForThrowable::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(GA_TraceForThrowables_C_FilterForThrowable, CallFunc_Less_IntInt_ReturnValue) == 0x000120, "Member 'GA_TraceForThrowables_C_FilterForThrowable::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_TraceForThrowables_C_FilterForThrowable, CallFunc_BreakHitResult_bBlockingHit) == 0x000121, "Member 'GA_TraceForThrowables_C_FilterForThrowable::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(GA_TraceForThrowables_C_FilterForThrowable, CallFunc_BreakHitResult_bInitialOverlap) == 0x000122, "Member 'GA_TraceForThrowables_C_FilterForThrowable::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(GA_TraceForThrowables_C_FilterForThrowable, CallFunc_BreakHitResult_Time) == 0x000124, "Member 'GA_TraceForThrowables_C_FilterForThrowable::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(GA_TraceForThrowables_C_FilterForThrowable, CallFunc_BreakHitResult_Distance) == 0x000128, "Member 'GA_TraceForThrowables_C_FilterForThrowable::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(GA_TraceForThrowables_C_FilterForThrowable, CallFunc_BreakHitResult_Location) == 0x000130, "Member 'GA_TraceForThrowables_C_FilterForThrowable::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(GA_TraceForThrowables_C_FilterForThrowable, CallFunc_BreakHitResult_ImpactPoint) == 0x000148, "Member 'GA_TraceForThrowables_C_FilterForThrowable::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(GA_TraceForThrowables_C_FilterForThrowable, CallFunc_BreakHitResult_Normal) == 0x000160, "Member 'GA_TraceForThrowables_C_FilterForThrowable::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(GA_TraceForThrowables_C_FilterForThrowable, CallFunc_BreakHitResult_ImpactNormal) == 0x000178, "Member 'GA_TraceForThrowables_C_FilterForThrowable::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(GA_TraceForThrowables_C_FilterForThrowable, CallFunc_BreakHitResult_PhysMat) == 0x000190, "Member 'GA_TraceForThrowables_C_FilterForThrowable::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(GA_TraceForThrowables_C_FilterForThrowable, CallFunc_BreakHitResult_HitActor) == 0x000198, "Member 'GA_TraceForThrowables_C_FilterForThrowable::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(GA_TraceForThrowables_C_FilterForThrowable, CallFunc_BreakHitResult_HitComponent) == 0x0001A0, "Member 'GA_TraceForThrowables_C_FilterForThrowable::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(GA_TraceForThrowables_C_FilterForThrowable, CallFunc_BreakHitResult_HitBoneName) == 0x0001A8, "Member 'GA_TraceForThrowables_C_FilterForThrowable::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(GA_TraceForThrowables_C_FilterForThrowable, CallFunc_BreakHitResult_BoneName) == 0x0001B0, "Member 'GA_TraceForThrowables_C_FilterForThrowable::CallFunc_BreakHitResult_BoneName' has a wrong offset!");
static_assert(offsetof(GA_TraceForThrowables_C_FilterForThrowable, CallFunc_BreakHitResult_HitItem) == 0x0001B8, "Member 'GA_TraceForThrowables_C_FilterForThrowable::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(GA_TraceForThrowables_C_FilterForThrowable, CallFunc_BreakHitResult_ElementIndex) == 0x0001BC, "Member 'GA_TraceForThrowables_C_FilterForThrowable::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(GA_TraceForThrowables_C_FilterForThrowable, CallFunc_BreakHitResult_FaceIndex) == 0x0001C0, "Member 'GA_TraceForThrowables_C_FilterForThrowable::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(GA_TraceForThrowables_C_FilterForThrowable, CallFunc_BreakHitResult_TraceStart) == 0x0001C8, "Member 'GA_TraceForThrowables_C_FilterForThrowable::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(GA_TraceForThrowables_C_FilterForThrowable, CallFunc_BreakHitResult_TraceEnd) == 0x0001E0, "Member 'GA_TraceForThrowables_C_FilterForThrowable::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(GA_TraceForThrowables_C_FilterForThrowable, K2Node_DynamicCast_AsBp_Throwable_Prop_Base) == 0x0001F8, "Member 'GA_TraceForThrowables_C_FilterForThrowable::K2Node_DynamicCast_AsBp_Throwable_Prop_Base' has a wrong offset!");
static_assert(offsetof(GA_TraceForThrowables_C_FilterForThrowable, K2Node_DynamicCast_bSuccess) == 0x000200, "Member 'GA_TraceForThrowables_C_FilterForThrowable::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(GA_TraceForThrowables_C_FilterForThrowable, CallFunc_IsValid_ReturnValue) == 0x000201, "Member 'GA_TraceForThrowables_C_FilterForThrowable::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function GA_TraceForThrowables.GA_TraceForThrowables_C.GetReferenceForContinuousTraceForHitablesAbility
// 0x0050 (0x0050 - 0x0000)
struct GA_TraceForThrowables_C_GetReferenceForContinuousTraceForHitablesAbility final
{
public:
	class UGA_ContinuousTraceHitables_C*          AsGA_Continuous_Trace_for_Hitables;                // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetAvatarActorFromActorInfo_ReturnValue;  // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAbilitySystemComponent*                CallFunc_GetAbilitySystemComponent_ReturnValue;    // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TArray<struct FGameplayAbilitySpecHandle>     CallFunc_FindAllAbilitiesWithTags_OutAbilityHandles; // 0x0020(0x0010)(ReferenceParm)
	struct FGameplayAbilitySpecHandle             CallFunc_Array_Get_Item;                           // 0x0030(0x0004)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetGameplayAbilityFromSpecHandle_bIsInstance; // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_35[0x3];                                       // 0x0035(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	const class UGameplayAbility*                 CallFunc_GetGameplayAbilityFromSpecHandle_ReturnValue; // 0x0038(0x0008)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UGA_ContinuousTraceHitables_C*          K2Node_DynamicCast_AsGA_Continuous_Trace_Hitables; // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_TraceForThrowables_C_GetReferenceForContinuousTraceForHitablesAbility) == 0x000008, "Wrong alignment on GA_TraceForThrowables_C_GetReferenceForContinuousTraceForHitablesAbility");
static_assert(sizeof(GA_TraceForThrowables_C_GetReferenceForContinuousTraceForHitablesAbility) == 0x000050, "Wrong size on GA_TraceForThrowables_C_GetReferenceForContinuousTraceForHitablesAbility");
static_assert(offsetof(GA_TraceForThrowables_C_GetReferenceForContinuousTraceForHitablesAbility, AsGA_Continuous_Trace_for_Hitables) == 0x000000, "Member 'GA_TraceForThrowables_C_GetReferenceForContinuousTraceForHitablesAbility::AsGA_Continuous_Trace_for_Hitables' has a wrong offset!");
static_assert(offsetof(GA_TraceForThrowables_C_GetReferenceForContinuousTraceForHitablesAbility, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'GA_TraceForThrowables_C_GetReferenceForContinuousTraceForHitablesAbility::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_TraceForThrowables_C_GetReferenceForContinuousTraceForHitablesAbility, CallFunc_GetAvatarActorFromActorInfo_ReturnValue) == 0x000010, "Member 'GA_TraceForThrowables_C_GetReferenceForContinuousTraceForHitablesAbility::CallFunc_GetAvatarActorFromActorInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_TraceForThrowables_C_GetReferenceForContinuousTraceForHitablesAbility, CallFunc_GetAbilitySystemComponent_ReturnValue) == 0x000018, "Member 'GA_TraceForThrowables_C_GetReferenceForContinuousTraceForHitablesAbility::CallFunc_GetAbilitySystemComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_TraceForThrowables_C_GetReferenceForContinuousTraceForHitablesAbility, CallFunc_FindAllAbilitiesWithTags_OutAbilityHandles) == 0x000020, "Member 'GA_TraceForThrowables_C_GetReferenceForContinuousTraceForHitablesAbility::CallFunc_FindAllAbilitiesWithTags_OutAbilityHandles' has a wrong offset!");
static_assert(offsetof(GA_TraceForThrowables_C_GetReferenceForContinuousTraceForHitablesAbility, CallFunc_Array_Get_Item) == 0x000030, "Member 'GA_TraceForThrowables_C_GetReferenceForContinuousTraceForHitablesAbility::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(GA_TraceForThrowables_C_GetReferenceForContinuousTraceForHitablesAbility, CallFunc_GetGameplayAbilityFromSpecHandle_bIsInstance) == 0x000034, "Member 'GA_TraceForThrowables_C_GetReferenceForContinuousTraceForHitablesAbility::CallFunc_GetGameplayAbilityFromSpecHandle_bIsInstance' has a wrong offset!");
static_assert(offsetof(GA_TraceForThrowables_C_GetReferenceForContinuousTraceForHitablesAbility, CallFunc_GetGameplayAbilityFromSpecHandle_ReturnValue) == 0x000038, "Member 'GA_TraceForThrowables_C_GetReferenceForContinuousTraceForHitablesAbility::CallFunc_GetGameplayAbilityFromSpecHandle_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_TraceForThrowables_C_GetReferenceForContinuousTraceForHitablesAbility, K2Node_DynamicCast_AsGA_Continuous_Trace_Hitables) == 0x000040, "Member 'GA_TraceForThrowables_C_GetReferenceForContinuousTraceForHitablesAbility::K2Node_DynamicCast_AsGA_Continuous_Trace_Hitables' has a wrong offset!");
static_assert(offsetof(GA_TraceForThrowables_C_GetReferenceForContinuousTraceForHitablesAbility, K2Node_DynamicCast_bSuccess) == 0x000048, "Member 'GA_TraceForThrowables_C_GetReferenceForContinuousTraceForHitablesAbility::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function GA_TraceForThrowables.GA_TraceForThrowables_C.OnFinished_F7CC6FEA40931DE74D6F4D9E5D383422
// 0x0004 (0x0004 - 0x0000)
struct GA_TraceForThrowables_C_OnFinished_F7CC6FEA40931DE74D6F4D9E5D383422 final
{
public:
	int32                                         ActionNumber;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_TraceForThrowables_C_OnFinished_F7CC6FEA40931DE74D6F4D9E5D383422) == 0x000004, "Wrong alignment on GA_TraceForThrowables_C_OnFinished_F7CC6FEA40931DE74D6F4D9E5D383422");
static_assert(sizeof(GA_TraceForThrowables_C_OnFinished_F7CC6FEA40931DE74D6F4D9E5D383422) == 0x000004, "Wrong size on GA_TraceForThrowables_C_OnFinished_F7CC6FEA40931DE74D6F4D9E5D383422");
static_assert(offsetof(GA_TraceForThrowables_C_OnFinished_F7CC6FEA40931DE74D6F4D9E5D383422, ActionNumber) == 0x000000, "Member 'GA_TraceForThrowables_C_OnFinished_F7CC6FEA40931DE74D6F4D9E5D383422::ActionNumber' has a wrong offset!");

// Function GA_TraceForThrowables.GA_TraceForThrowables_C.OnPerformAction_F7CC6FEA40931DE74D6F4D9E5D383422
// 0x0004 (0x0004 - 0x0000)
struct GA_TraceForThrowables_C_OnPerformAction_F7CC6FEA40931DE74D6F4D9E5D383422 final
{
public:
	int32                                         ActionNumber;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_TraceForThrowables_C_OnPerformAction_F7CC6FEA40931DE74D6F4D9E5D383422) == 0x000004, "Wrong alignment on GA_TraceForThrowables_C_OnPerformAction_F7CC6FEA40931DE74D6F4D9E5D383422");
static_assert(sizeof(GA_TraceForThrowables_C_OnPerformAction_F7CC6FEA40931DE74D6F4D9E5D383422) == 0x000004, "Wrong size on GA_TraceForThrowables_C_OnPerformAction_F7CC6FEA40931DE74D6F4D9E5D383422");
static_assert(offsetof(GA_TraceForThrowables_C_OnPerformAction_F7CC6FEA40931DE74D6F4D9E5D383422, ActionNumber) == 0x000000, "Member 'GA_TraceForThrowables_C_OnPerformAction_F7CC6FEA40931DE74D6F4D9E5D383422::ActionNumber' has a wrong offset!");

// Function GA_TraceForThrowables.GA_TraceForThrowables_C.SetThrowable
// 0x0008 (0x0008 - 0x0000)
struct GA_TraceForThrowables_C_SetThrowable final
{
public:
	class ABp_ThrowableProp_Base_C*               Throwable;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_TraceForThrowables_C_SetThrowable) == 0x000008, "Wrong alignment on GA_TraceForThrowables_C_SetThrowable");
static_assert(sizeof(GA_TraceForThrowables_C_SetThrowable) == 0x000008, "Wrong size on GA_TraceForThrowables_C_SetThrowable");
static_assert(offsetof(GA_TraceForThrowables_C_SetThrowable, Throwable) == 0x000000, "Member 'GA_TraceForThrowables_C_SetThrowable::Throwable' has a wrong offset!");

// Function GA_TraceForThrowables.GA_TraceForThrowables_C.TraceForThrowable
// 0x0008 (0x0008 - 0x0000)
struct GA_TraceForThrowables_C_TraceForThrowable final
{
public:
	class ABp_ThrowableProp_Base_C*               CallFunc_FilterForThrowable_Return_Value;          // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_TraceForThrowables_C_TraceForThrowable) == 0x000008, "Wrong alignment on GA_TraceForThrowables_C_TraceForThrowable");
static_assert(sizeof(GA_TraceForThrowables_C_TraceForThrowable) == 0x000008, "Wrong size on GA_TraceForThrowables_C_TraceForThrowable");
static_assert(offsetof(GA_TraceForThrowables_C_TraceForThrowable, CallFunc_FilterForThrowable_Return_Value) == 0x000000, "Member 'GA_TraceForThrowables_C_TraceForThrowable::CallFunc_FilterForThrowable_Return_Value' has a wrong offset!");

// Function GA_TraceForThrowables.GA_TraceForThrowables_C.GetAvatarResidentCharacter
// 0x0068 (0x0068 - 0x0000)
struct GA_TraceForThrowables_C_GetAvatarResidentCharacter final
{
public:
	class ABP_ResidentCharacter_C*                As_Resident;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetAvatarActorFromActorInfo_ReturnValue;  // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Get_ClassLog_Name_name;                   // 0x0010(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class UClass*                                 CallFunc_GetObjectClass_ReturnValue;               // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_ResidentCharacter_C*                K2Node_DynamicCast_AsBP_Resident_Character;        // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetClassDisplayName_ReturnValue;          // 0x0038(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0048(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0058(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_TraceForThrowables_C_GetAvatarResidentCharacter) == 0x000008, "Wrong alignment on GA_TraceForThrowables_C_GetAvatarResidentCharacter");
static_assert(sizeof(GA_TraceForThrowables_C_GetAvatarResidentCharacter) == 0x000068, "Wrong size on GA_TraceForThrowables_C_GetAvatarResidentCharacter");
static_assert(offsetof(GA_TraceForThrowables_C_GetAvatarResidentCharacter, As_Resident) == 0x000000, "Member 'GA_TraceForThrowables_C_GetAvatarResidentCharacter::As_Resident' has a wrong offset!");
static_assert(offsetof(GA_TraceForThrowables_C_GetAvatarResidentCharacter, CallFunc_GetAvatarActorFromActorInfo_ReturnValue) == 0x000008, "Member 'GA_TraceForThrowables_C_GetAvatarResidentCharacter::CallFunc_GetAvatarActorFromActorInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_TraceForThrowables_C_GetAvatarResidentCharacter, CallFunc_Get_ClassLog_Name_name) == 0x000010, "Member 'GA_TraceForThrowables_C_GetAvatarResidentCharacter::CallFunc_Get_ClassLog_Name_name' has a wrong offset!");
static_assert(offsetof(GA_TraceForThrowables_C_GetAvatarResidentCharacter, CallFunc_GetObjectClass_ReturnValue) == 0x000020, "Member 'GA_TraceForThrowables_C_GetAvatarResidentCharacter::CallFunc_GetObjectClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_TraceForThrowables_C_GetAvatarResidentCharacter, K2Node_DynamicCast_AsBP_Resident_Character) == 0x000028, "Member 'GA_TraceForThrowables_C_GetAvatarResidentCharacter::K2Node_DynamicCast_AsBP_Resident_Character' has a wrong offset!");
static_assert(offsetof(GA_TraceForThrowables_C_GetAvatarResidentCharacter, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'GA_TraceForThrowables_C_GetAvatarResidentCharacter::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(GA_TraceForThrowables_C_GetAvatarResidentCharacter, CallFunc_GetClassDisplayName_ReturnValue) == 0x000038, "Member 'GA_TraceForThrowables_C_GetAvatarResidentCharacter::CallFunc_GetClassDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_TraceForThrowables_C_GetAvatarResidentCharacter, CallFunc_Concat_StrStr_ReturnValue) == 0x000048, "Member 'GA_TraceForThrowables_C_GetAvatarResidentCharacter::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_TraceForThrowables_C_GetAvatarResidentCharacter, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000058, "Member 'GA_TraceForThrowables_C_GetAvatarResidentCharacter::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");

// Function GA_TraceForThrowables.GA_TraceForThrowables_C.GetTraceInput
// 0x00F0 (0x00F0 - 0x0000)
struct GA_TraceForThrowables_C_GetTraceInput final
{
public:
	struct FVector                                Start;                                             // 0x0000(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                End;                                               // 0x0018(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<EObjectTypeQuery>                      ObjectTypes;                                       // 0x0030(0x0010)(Parm, OutParm)
	TArray<class ABP_ResidentCharacter_C*>        ActorsToIgnore;                                    // 0x0040(0x0010)(Parm, OutParm)
	class ABP_ResidentCharacter_C*                CallFunc_GetAvatarResidentCharacter_As_Resident;   // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_IntToVector_ReturnValue;             // 0x0058(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0070(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue;             // 0x0088(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class ABP_ResidentCharacter_C*>        K2Node_MakeArray_Array;                            // 0x00A0(0x0010)(ReferenceParm)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue;        // 0x00B0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<EObjectTypeQuery>                      K2Node_MakeArray_Array_1;                          // 0x00C8(0x0010)(ReferenceParm)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x00D8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_TraceForThrowables_C_GetTraceInput) == 0x000008, "Wrong alignment on GA_TraceForThrowables_C_GetTraceInput");
static_assert(sizeof(GA_TraceForThrowables_C_GetTraceInput) == 0x0000F0, "Wrong size on GA_TraceForThrowables_C_GetTraceInput");
static_assert(offsetof(GA_TraceForThrowables_C_GetTraceInput, Start) == 0x000000, "Member 'GA_TraceForThrowables_C_GetTraceInput::Start' has a wrong offset!");
static_assert(offsetof(GA_TraceForThrowables_C_GetTraceInput, End) == 0x000018, "Member 'GA_TraceForThrowables_C_GetTraceInput::End' has a wrong offset!");
static_assert(offsetof(GA_TraceForThrowables_C_GetTraceInput, ObjectTypes) == 0x000030, "Member 'GA_TraceForThrowables_C_GetTraceInput::ObjectTypes' has a wrong offset!");
static_assert(offsetof(GA_TraceForThrowables_C_GetTraceInput, ActorsToIgnore) == 0x000040, "Member 'GA_TraceForThrowables_C_GetTraceInput::ActorsToIgnore' has a wrong offset!");
static_assert(offsetof(GA_TraceForThrowables_C_GetTraceInput, CallFunc_GetAvatarResidentCharacter_As_Resident) == 0x000050, "Member 'GA_TraceForThrowables_C_GetTraceInput::CallFunc_GetAvatarResidentCharacter_As_Resident' has a wrong offset!");
static_assert(offsetof(GA_TraceForThrowables_C_GetTraceInput, CallFunc_Conv_IntToVector_ReturnValue) == 0x000058, "Member 'GA_TraceForThrowables_C_GetTraceInput::CallFunc_Conv_IntToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_TraceForThrowables_C_GetTraceInput, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000070, "Member 'GA_TraceForThrowables_C_GetTraceInput::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_TraceForThrowables_C_GetTraceInput, CallFunc_GetForwardVector_ReturnValue) == 0x000088, "Member 'GA_TraceForThrowables_C_GetTraceInput::CallFunc_GetForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_TraceForThrowables_C_GetTraceInput, K2Node_MakeArray_Array) == 0x0000A0, "Member 'GA_TraceForThrowables_C_GetTraceInput::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(GA_TraceForThrowables_C_GetTraceInput, CallFunc_Multiply_VectorVector_ReturnValue) == 0x0000B0, "Member 'GA_TraceForThrowables_C_GetTraceInput::CallFunc_Multiply_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_TraceForThrowables_C_GetTraceInput, K2Node_MakeArray_Array_1) == 0x0000C8, "Member 'GA_TraceForThrowables_C_GetTraceInput::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(GA_TraceForThrowables_C_GetTraceInput, CallFunc_Add_VectorVector_ReturnValue) == 0x0000D8, "Member 'GA_TraceForThrowables_C_GetTraceInput::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");

}

