#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: DoorBase

#include "Basic.hpp"

#include "DoorBase_classes.hpp"
#include "DoorBase_parameters.hpp"


namespace SDK
{

// Function DoorBase.DoorBase_C.Attempt Auto Close
// (BlueprintCallable, BlueprintEvent)

void ADoorBase_C::Attempt_Auto_Close()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DoorBase_C", "Attempt Auto Close");

	UObject::ProcessEvent(Func, nullptr);
}


// Function DoorBase.DoorBase_C.Audio Close
// (BlueprintCallable, BlueprintEvent)

void ADoorBase_C::Audio_Close()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DoorBase_C", "Audio Close");

	UObject::ProcessEvent(Func, nullptr);
}


// Function DoorBase.DoorBase_C.Audio Closed
// (BlueprintCallable, BlueprintEvent)

void ADoorBase_C::Audio_Closed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DoorBase_C", "Audio Closed");

	UObject::ProcessEvent(Func, nullptr);
}


// Function DoorBase.DoorBase_C.Audio Door Knock
// (BlueprintCallable, BlueprintEvent)

void ADoorBase_C::Audio_Door_Knock()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DoorBase_C", "Audio Door Knock");

	UObject::ProcessEvent(Func, nullptr);
}


// Function DoorBase.DoorBase_C.Audio Locked
// (Net, NetMulticast, BlueprintCallable, BlueprintEvent)

void ADoorBase_C::Audio_Locked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DoorBase_C", "Audio Locked");

	UObject::ProcessEvent(Func, nullptr);
}


// Function DoorBase.DoorBase_C.Audio Open
// (BlueprintCallable, BlueprintEvent)

void ADoorBase_C::Audio_Open()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DoorBase_C", "Audio Open");

	UObject::ProcessEvent(Func, nullptr);
}


// Function DoorBase.DoorBase_C.Audio Opened
// (BlueprintCallable, BlueprintEvent)

void ADoorBase_C::Audio_Opened()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DoorBase_C", "Audio Opened");

	UObject::ProcessEvent(Func, nullptr);
}


// Function DoorBase.DoorBase_C.Close Door
// (BlueprintCallable, BlueprintEvent)

void ADoorBase_C::Close_Door()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DoorBase_C", "Close Door");

	UObject::ProcessEvent(Func, nullptr);
}


// Function DoorBase.DoorBase_C.Closed
// (BlueprintCallable, BlueprintEvent)

void ADoorBase_C::Closed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DoorBase_C", "Closed");

	UObject::ProcessEvent(Func, nullptr);
}


// Function DoorBase.DoorBase_C.Cosmetics State Sabotaged
// (BlueprintCallable, BlueprintEvent)

void ADoorBase_C::Cosmetics_State_Sabotaged()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DoorBase_C", "Cosmetics State Sabotaged");

	UObject::ProcessEvent(Func, nullptr);
}


// Function DoorBase.DoorBase_C.Destroy All Components With Door Tag
// (BlueprintCallable, BlueprintEvent)

void ADoorBase_C::Destroy_All_Components_With_Door_Tag()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DoorBase_C", "Destroy All Components With Door Tag");

	UObject::ProcessEvent(Func, nullptr);
}


// Function DoorBase.DoorBase_C.DestroyDoorMesh
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ADoorBase_C::DestroyDoorMesh()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DoorBase_C", "DestroyDoorMesh");

	UObject::ProcessEvent(Func, nullptr);
}


// Function DoorBase.DoorBase_C.DisableSkeletalMeshTick
// (BlueprintCallable, BlueprintEvent)

void ADoorBase_C::DisableSkeletalMeshTick()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DoorBase_C", "DisableSkeletalMeshTick");

	UObject::ProcessEvent(Func, nullptr);
}


// Function DoorBase.DoorBase_C.Door Timeline__FinishedFunc
// (BlueprintEvent)

void ADoorBase_C::Door_Timeline__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DoorBase_C", "Door Timeline__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function DoorBase.DoorBase_C.Door Timeline__UpdateFunc
// (BlueprintEvent)

void ADoorBase_C::Door_Timeline__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DoorBase_C", "Door Timeline__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function DoorBase.DoorBase_C.Event Apply Audio Multiplier
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           InteractingActor                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ADoorBase_C::Event_Apply_Audio_Multiplier(class AActor* InteractingActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DoorBase_C", "Event Apply Audio Multiplier");

	Params::DoorBase_C_Event_Apply_Audio_Multiplier Parms{};

	Parms.InteractingActor = InteractingActor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function DoorBase.DoorBase_C.ExecuteUbergraph_DoorBase
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ADoorBase_C::ExecuteUbergraph_DoorBase(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DoorBase_C", "ExecuteUbergraph_DoorBase");

	Params::DoorBase_C_ExecuteUbergraph_DoorBase Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function DoorBase.DoorBase_C.GetCenterLocation
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          Location                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ADoorBase_C::GetCenterLocation(struct FVector* Location)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DoorBase_C", "GetCenterLocation");

	Params::DoorBase_C_GetCenterLocation Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Location != nullptr)
		*Location = std::move(Parms.Location);
}


// Function DoorBase.DoorBase_C.GetInteractableLockedCosmetics
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Return                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ADoorBase_C::GetInteractableLockedCosmetics(bool* Return)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DoorBase_C", "GetInteractableLockedCosmetics");

	Params::DoorBase_C_GetInteractableLockedCosmetics Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Return != nullptr)
		*Return = Parms.Return;
}


// Function DoorBase.DoorBase_C.ImpactBounce
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          HitLocation                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          HitImpact                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ADoorBase_C::ImpactBounce(const struct FVector& HitLocation, const struct FVector& HitImpact)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DoorBase_C", "ImpactBounce");

	Params::DoorBase_C_ImpactBounce Parms{};

	Parms.HitLocation = std::move(HitLocation);
	Parms.HitImpact = std::move(HitImpact);

	UObject::ProcessEvent(Func, &Parms);
}


// Function DoorBase.DoorBase_C.Init Door
// (BlueprintCallable, BlueprintEvent)

void ADoorBase_C::Init_Door()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DoorBase_C", "Init Door");

	UObject::ProcessEvent(Func, nullptr);
}


// Function DoorBase.DoorBase_C.IsActorSameTeam
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          FocusingActor                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool ADoorBase_C::IsActorSameTeam(class UObject* FocusingActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DoorBase_C", "IsActorSameTeam");

	Params::DoorBase_C_IsActorSameTeam Parms{};

	Parms.FocusingActor = FocusingActor;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function DoorBase.DoorBase_C.IsInteractingActorTeamMember
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class AActor*                           Actor                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    Return                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ADoorBase_C::IsInteractingActorTeamMember(class AActor* Actor, bool* Return)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DoorBase_C", "IsInteractingActorTeamMember");

	Params::DoorBase_C_IsInteractingActorTeamMember Parms{};

	Parms.Actor = Actor;

	UObject::ProcessEvent(Func, &Parms);

	if (Return != nullptr)
		*Return = Parms.Return;
}


// Function DoorBase.DoorBase_C.IsLockedToPlayer
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           FocusingActor                                          (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ADoorBase_C::IsLockedToPlayer(const class AActor* FocusingActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DoorBase_C", "IsLockedToPlayer");

	Params::DoorBase_C_IsLockedToPlayer Parms{};

	Parms.FocusingActor = FocusingActor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function DoorBase.DoorBase_C.Leloi_Interact
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           InteractingActor                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ADoorBase_C::Leloi_Interact(class AActor* InteractingActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DoorBase_C", "Leloi_Interact");

	Params::DoorBase_C_Leloi_Interact Parms{};

	Parms.InteractingActor = InteractingActor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function DoorBase.DoorBase_C.OnClosed__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)

void ADoorBase_C::OnClosed__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DoorBase_C", "OnClosed__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function DoorBase.DoorBase_C.OnEnded_1C4709354CF3622E31A89BA44F184D91
// (BlueprintCallable, BlueprintEvent)

void ADoorBase_C::OnEnded_1C4709354CF3622E31A89BA44F184D91()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DoorBase_C", "OnEnded_1C4709354CF3622E31A89BA44F184D91");

	UObject::ProcessEvent(Func, nullptr);
}


// Function DoorBase.DoorBase_C.OnOpen__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Open_0                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ADoorBase_C::OnOpen__DelegateSignature(bool Open_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DoorBase_C", "OnOpen__DelegateSignature");

	Params::DoorBase_C_OnOpen__DelegateSignature Parms{};

	Parms.Open_0 = Open_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function DoorBase.DoorBase_C.OnRep_CollisionEnabled
// (BlueprintCallable, BlueprintEvent)

void ADoorBase_C::OnRep_CollisionEnabled()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DoorBase_C", "OnRep_CollisionEnabled");

	UObject::ProcessEvent(Func, nullptr);
}


// Function DoorBase.DoorBase_C.OnRep_CollisionEnabledImplementation
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ADoorBase_C::OnRep_CollisionEnabledImplementation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DoorBase_C", "OnRep_CollisionEnabledImplementation");

	UObject::ProcessEvent(Func, nullptr);
}


// Function DoorBase.DoorBase_C.OnRep_Open
// (HasDefaults, BlueprintCallable, BlueprintEvent)

void ADoorBase_C::OnRep_Open()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DoorBase_C", "OnRep_Open");

	UObject::ProcessEvent(Func, nullptr);
}


// Function DoorBase.DoorBase_C.Open Door
// (BlueprintCallable, BlueprintEvent)

void ADoorBase_C::Open_Door()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DoorBase_C", "Open Door");

	UObject::ProcessEvent(Func, nullptr);
}


// Function DoorBase.DoorBase_C.Opened
// (BlueprintCallable, BlueprintEvent)

void ADoorBase_C::Opened()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DoorBase_C", "Opened");

	UObject::ProcessEvent(Func, nullptr);
}


// Function DoorBase.DoorBase_C.PingTeamOnDestruction
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ADoorBase_C::PingTeamOnDestruction()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DoorBase_C", "PingTeamOnDestruction");

	UObject::ProcessEvent(Func, nullptr);
}


// Function DoorBase.DoorBase_C.SpawnDestroyedDoor
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ADoorBase_C::SpawnDestroyedDoor()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DoorBase_C", "SpawnDestroyedDoor");

	UObject::ProcessEvent(Func, nullptr);
}


// Function DoorBase.DoorBase_C.Start Auto Close Timer
// (BlueprintCallable, BlueprintEvent)

void ADoorBase_C::Start_Auto_Close_Timer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DoorBase_C", "Start Auto Close Timer");

	UObject::ProcessEvent(Func, nullptr);
}


// Function DoorBase.DoorBase_C.Toggle
// (BlueprintCallable, BlueprintEvent)

void ADoorBase_C::Toggle()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DoorBase_C", "Toggle");

	UObject::ProcessEvent(Func, nullptr);
}


// Function DoorBase.DoorBase_C.ToggleCollision
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    CollisionOn                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ADoorBase_C::ToggleCollision(bool CollisionOn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DoorBase_C", "ToggleCollision");

	Params::DoorBase_C_ToggleCollision Parms{};

	Parms.CollisionOn = CollisionOn;

	UObject::ProcessEvent(Func, &Parms);
}


// Function DoorBase.DoorBase_C.Update Alpha
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  Alpha                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ADoorBase_C::Update_Alpha(double Alpha)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DoorBase_C", "Update Alpha");

	Params::DoorBase_C_Update_Alpha Parms{};

	Parms.Alpha = Alpha;

	UObject::ProcessEvent(Func, &Parms);
}


// Function DoorBase.DoorBase_C.Update Health Status
// (BlueprintCallable, BlueprintEvent)

void ADoorBase_C::Update_Health_Status()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DoorBase_C", "Update Health Status");

	UObject::ProcessEvent(Func, nullptr);
}


// Function DoorBase.DoorBase_C.GetWidgetLocation
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          Location                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ADoorBase_C::GetWidgetLocation(struct FVector* Location)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DoorBase_C", "GetWidgetLocation");

	Params::DoorBase_C_GetWidgetLocation Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Location != nullptr)
		*Location = std::move(Parms.Location);
}


// Function DoorBase.DoorBase_C.House Actor Impact Cosmetics
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          Location                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          HitImpulse                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// E_ImpactEffect                          ImpactEffect                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ADoorBase_C::House_Actor_Impact_Cosmetics(const struct FVector& Location, const struct FVector& HitImpulse, E_ImpactEffect ImpactEffect)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DoorBase_C", "House Actor Impact Cosmetics");

	Params::DoorBase_C_House_Actor_Impact_Cosmetics Parms{};

	Parms.Location = std::move(Location);
	Parms.HitImpulse = std::move(HitImpulse);
	Parms.ImpactEffect = ImpactEffect;

	UObject::ProcessEvent(Func, &Parms);
}


// Function DoorBase.DoorBase_C.IsInFocus
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Focusing_Actor                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ADoorBase_C::IsInFocus(class AActor* Focusing_Actor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DoorBase_C", "IsInFocus");

	Params::DoorBase_C_IsInFocus Parms{};

	Parms.Focusing_Actor = Focusing_Actor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function DoorBase.DoorBase_C.Multi_Cosmetic Break
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)

void ADoorBase_C::Multi_Cosmetic_Break()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DoorBase_C", "Multi_Cosmetic Break");

	UObject::ProcessEvent(Func, nullptr);
}


// Function DoorBase.DoorBase_C.OnDamaged
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   Delta                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           Causer                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// struct FCombatParticipant               CombatParticipant                                      (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm)
// struct FKillMethod                      KillMethod                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm)
// struct FVector_NetQuantize              Location                                               (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)

void ADoorBase_C::OnDamaged(float Delta, class AActor* Causer, const struct FCombatParticipant& CombatParticipant, const struct FKillMethod& KillMethod, const struct FVector_NetQuantize& Location)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DoorBase_C", "OnDamaged");

	Params::DoorBase_C_OnDamaged Parms{};

	Parms.Delta = Delta;
	Parms.Causer = Causer;
	Parms.CombatParticipant = std::move(CombatParticipant);
	Parms.KillMethod = std::move(KillMethod);
	Parms.Location = std::move(Location);

	UObject::ProcessEvent(Func, &Parms);
}


// Function DoorBase.DoorBase_C.PostInteract
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           InteractingActor                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*              InteractionComponent                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void ADoorBase_C::PostInteract(class AActor* InteractingActor, class UPrimitiveComponent* InteractionComponent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DoorBase_C", "PostInteract");

	Params::DoorBase_C_PostInteract Parms{};

	Parms.InteractingActor = InteractingActor;
	Parms.InteractionComponent = InteractionComponent;

	UObject::ProcessEvent(Func, &Parms);
}


// Function DoorBase.DoorBase_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ADoorBase_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DoorBase_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function DoorBase.DoorBase_C.ReloadAfterHousesLoaded
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Return                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ADoorBase_C::ReloadAfterHousesLoaded(bool* Return)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DoorBase_C", "ReloadAfterHousesLoaded");

	Params::DoorBase_C_ReloadAfterHousesLoaded Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Return != nullptr)
		*Return = Parms.Return;
}


// Function DoorBase.DoorBase_C.GetTeamID
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// uint8                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

uint8 ADoorBase_C::GetTeamID() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DoorBase_C", "GetTeamID");

	Params::DoorBase_C_GetTeamID Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function DoorBase.DoorBase_C.IsAvailableForInteraction
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// class AActor*                           InteractingActor                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*              InteractionComponent                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool ADoorBase_C::IsAvailableForInteraction(class AActor* InteractingActor, class UPrimitiveComponent* InteractionComponent) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DoorBase_C", "IsAvailableForInteraction");

	Params::DoorBase_C_IsAvailableForInteraction Parms{};

	Parms.InteractingActor = InteractingActor;
	Parms.InteractionComponent = InteractionComponent;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}

}

