#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Benchmark

#include "Basic.hpp"

#include "MovieScene_structs.hpp"
#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function BP_Benchmark.BP_Benchmark_C.AddToLowest1Percent
// 0x0058 (0x0058 - 0x0000)
struct BP_Benchmark_C_AddToLowest1Percent final
{
public:
	bool                                          AddedToLowestPercent;                              // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetFrameDuration_ReturnValue;             // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_MinOfFloatArray_IndexOfMinValue;          // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MinOfFloatArray_MinValue;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Conv_IntToDouble_ReturnValue_1;           // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<float>                                 CallFunc_MinOfFloatArray_FloatArray_ImplicitCast;  // 0x0040(0x0010)(ConstParm, ReferenceParm)
	double                                        CallFunc_Greater_DoubleDouble_B_ImplicitCast;      // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Benchmark_C_AddToLowest1Percent) == 0x000008, "Wrong alignment on BP_Benchmark_C_AddToLowest1Percent");
static_assert(sizeof(BP_Benchmark_C_AddToLowest1Percent) == 0x000058, "Wrong size on BP_Benchmark_C_AddToLowest1Percent");
static_assert(offsetof(BP_Benchmark_C_AddToLowest1Percent, AddedToLowestPercent) == 0x000000, "Member 'BP_Benchmark_C_AddToLowest1Percent::AddedToLowestPercent' has a wrong offset!");
static_assert(offsetof(BP_Benchmark_C_AddToLowest1Percent, CallFunc_GetFrameDuration_ReturnValue) == 0x000004, "Member 'BP_Benchmark_C_AddToLowest1Percent::CallFunc_GetFrameDuration_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Benchmark_C_AddToLowest1Percent, CallFunc_Conv_IntToDouble_ReturnValue) == 0x000008, "Member 'BP_Benchmark_C_AddToLowest1Percent::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Benchmark_C_AddToLowest1Percent, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000010, "Member 'BP_Benchmark_C_AddToLowest1Percent::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Benchmark_C_AddToLowest1Percent, CallFunc_Array_Add_ReturnValue) == 0x000018, "Member 'BP_Benchmark_C_AddToLowest1Percent::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Benchmark_C_AddToLowest1Percent, CallFunc_MinOfFloatArray_IndexOfMinValue) == 0x00001C, "Member 'BP_Benchmark_C_AddToLowest1Percent::CallFunc_MinOfFloatArray_IndexOfMinValue' has a wrong offset!");
static_assert(offsetof(BP_Benchmark_C_AddToLowest1Percent, CallFunc_MinOfFloatArray_MinValue) == 0x000020, "Member 'BP_Benchmark_C_AddToLowest1Percent::CallFunc_MinOfFloatArray_MinValue' has a wrong offset!");
static_assert(offsetof(BP_Benchmark_C_AddToLowest1Percent, CallFunc_Array_Length_ReturnValue) == 0x000024, "Member 'BP_Benchmark_C_AddToLowest1Percent::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Benchmark_C_AddToLowest1Percent, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000028, "Member 'BP_Benchmark_C_AddToLowest1Percent::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Benchmark_C_AddToLowest1Percent, CallFunc_Conv_IntToDouble_ReturnValue_1) == 0x000030, "Member 'BP_Benchmark_C_AddToLowest1Percent::CallFunc_Conv_IntToDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Benchmark_C_AddToLowest1Percent, CallFunc_Less_DoubleDouble_ReturnValue) == 0x000038, "Member 'BP_Benchmark_C_AddToLowest1Percent::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Benchmark_C_AddToLowest1Percent, CallFunc_MinOfFloatArray_FloatArray_ImplicitCast) == 0x000040, "Member 'BP_Benchmark_C_AddToLowest1Percent::CallFunc_MinOfFloatArray_FloatArray_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_Benchmark_C_AddToLowest1Percent, CallFunc_Greater_DoubleDouble_B_ImplicitCast) == 0x000050, "Member 'BP_Benchmark_C_AddToLowest1Percent::CallFunc_Greater_DoubleDouble_B_ImplicitCast' has a wrong offset!");

// Function BP_Benchmark.BP_Benchmark_C.BenchmarkFinished
// 0x0050 (0x0050 - 0x0000)
struct BP_Benchmark_C_BenchmarkFinished final
{
public:
	TMap<class FString, class FString>            Benchmark_Results;                                 // 0x0000(0x0050)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(BP_Benchmark_C_BenchmarkFinished) == 0x000008, "Wrong alignment on BP_Benchmark_C_BenchmarkFinished");
static_assert(sizeof(BP_Benchmark_C_BenchmarkFinished) == 0x000050, "Wrong size on BP_Benchmark_C_BenchmarkFinished");
static_assert(offsetof(BP_Benchmark_C_BenchmarkFinished, Benchmark_Results) == 0x000000, "Member 'BP_Benchmark_C_BenchmarkFinished::Benchmark_Results' has a wrong offset!");

// Function BP_Benchmark.BP_Benchmark_C.CalculateAverageFps
// 0x0038 (0x0038 - 0x0000)
struct BP_Benchmark_C_CalculateAverageFps final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Array_Get_Item;                           // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Benchmark_C_CalculateAverageFps) == 0x000008, "Wrong alignment on BP_Benchmark_C_CalculateAverageFps");
static_assert(sizeof(BP_Benchmark_C_CalculateAverageFps) == 0x000038, "Wrong size on BP_Benchmark_C_CalculateAverageFps");
static_assert(offsetof(BP_Benchmark_C_CalculateAverageFps, Temp_int_Array_Index_Variable) == 0x000000, "Member 'BP_Benchmark_C_CalculateAverageFps::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_Benchmark_C_CalculateAverageFps, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'BP_Benchmark_C_CalculateAverageFps::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_Benchmark_C_CalculateAverageFps, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'BP_Benchmark_C_CalculateAverageFps::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Benchmark_C_CalculateAverageFps, CallFunc_Array_Length_ReturnValue) == 0x00000C, "Member 'BP_Benchmark_C_CalculateAverageFps::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Benchmark_C_CalculateAverageFps, CallFunc_Array_Get_Item) == 0x000010, "Member 'BP_Benchmark_C_CalculateAverageFps::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_Benchmark_C_CalculateAverageFps, CallFunc_Conv_IntToDouble_ReturnValue) == 0x000018, "Member 'BP_Benchmark_C_CalculateAverageFps::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Benchmark_C_CalculateAverageFps, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000020, "Member 'BP_Benchmark_C_CalculateAverageFps::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Benchmark_C_CalculateAverageFps, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000028, "Member 'BP_Benchmark_C_CalculateAverageFps::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Benchmark_C_CalculateAverageFps, CallFunc_Array_Length_ReturnValue_1) == 0x000030, "Member 'BP_Benchmark_C_CalculateAverageFps::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Benchmark_C_CalculateAverageFps, CallFunc_Less_IntInt_ReturnValue) == 0x000034, "Member 'BP_Benchmark_C_CalculateAverageFps::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function BP_Benchmark.BP_Benchmark_C.CalculateAverageFrameTime
// 0x0050 (0x0050 - 0x0000)
struct BP_Benchmark_C_CalculateAverageFrameTime final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_1;        // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Array_Get_Item;                           // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_35[0x3];                                       // 0x0035(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_2;        // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Benchmark_C_CalculateAverageFrameTime) == 0x000008, "Wrong alignment on BP_Benchmark_C_CalculateAverageFrameTime");
static_assert(sizeof(BP_Benchmark_C_CalculateAverageFrameTime) == 0x000050, "Wrong size on BP_Benchmark_C_CalculateAverageFrameTime");
static_assert(offsetof(BP_Benchmark_C_CalculateAverageFrameTime, Temp_int_Array_Index_Variable) == 0x000000, "Member 'BP_Benchmark_C_CalculateAverageFrameTime::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_Benchmark_C_CalculateAverageFrameTime, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'BP_Benchmark_C_CalculateAverageFrameTime::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_Benchmark_C_CalculateAverageFrameTime, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'BP_Benchmark_C_CalculateAverageFrameTime::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Benchmark_C_CalculateAverageFrameTime, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000010, "Member 'BP_Benchmark_C_CalculateAverageFrameTime::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Benchmark_C_CalculateAverageFrameTime, CallFunc_Divide_DoubleDouble_ReturnValue_1) == 0x000018, "Member 'BP_Benchmark_C_CalculateAverageFrameTime::CallFunc_Divide_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Benchmark_C_CalculateAverageFrameTime, CallFunc_Array_Get_Item) == 0x000020, "Member 'BP_Benchmark_C_CalculateAverageFrameTime::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_Benchmark_C_CalculateAverageFrameTime, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000028, "Member 'BP_Benchmark_C_CalculateAverageFrameTime::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Benchmark_C_CalculateAverageFrameTime, CallFunc_Array_Length_ReturnValue) == 0x000030, "Member 'BP_Benchmark_C_CalculateAverageFrameTime::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Benchmark_C_CalculateAverageFrameTime, CallFunc_Less_IntInt_ReturnValue) == 0x000034, "Member 'BP_Benchmark_C_CalculateAverageFrameTime::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Benchmark_C_CalculateAverageFrameTime, CallFunc_Array_Length_ReturnValue_1) == 0x000038, "Member 'BP_Benchmark_C_CalculateAverageFrameTime::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Benchmark_C_CalculateAverageFrameTime, CallFunc_Conv_IntToDouble_ReturnValue) == 0x000040, "Member 'BP_Benchmark_C_CalculateAverageFrameTime::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Benchmark_C_CalculateAverageFrameTime, CallFunc_Divide_DoubleDouble_ReturnValue_2) == 0x000048, "Member 'BP_Benchmark_C_CalculateAverageFrameTime::CallFunc_Divide_DoubleDouble_ReturnValue_2' has a wrong offset!");

// Function BP_Benchmark.BP_Benchmark_C.CalculateLowestAverage1Perenct
// 0x0050 (0x0050 - 0x0000)
struct BP_Benchmark_C_CalculateLowestAverage1Perenct final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_1;        // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Array_Get_Item;                           // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_35[0x3];                                       // 0x0035(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_2;        // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Benchmark_C_CalculateLowestAverage1Perenct) == 0x000008, "Wrong alignment on BP_Benchmark_C_CalculateLowestAverage1Perenct");
static_assert(sizeof(BP_Benchmark_C_CalculateLowestAverage1Perenct) == 0x000050, "Wrong size on BP_Benchmark_C_CalculateLowestAverage1Perenct");
static_assert(offsetof(BP_Benchmark_C_CalculateLowestAverage1Perenct, Temp_int_Array_Index_Variable) == 0x000000, "Member 'BP_Benchmark_C_CalculateLowestAverage1Perenct::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_Benchmark_C_CalculateLowestAverage1Perenct, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'BP_Benchmark_C_CalculateLowestAverage1Perenct::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_Benchmark_C_CalculateLowestAverage1Perenct, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'BP_Benchmark_C_CalculateLowestAverage1Perenct::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Benchmark_C_CalculateLowestAverage1Perenct, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000010, "Member 'BP_Benchmark_C_CalculateLowestAverage1Perenct::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Benchmark_C_CalculateLowestAverage1Perenct, CallFunc_Divide_DoubleDouble_ReturnValue_1) == 0x000018, "Member 'BP_Benchmark_C_CalculateLowestAverage1Perenct::CallFunc_Divide_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Benchmark_C_CalculateLowestAverage1Perenct, CallFunc_Array_Get_Item) == 0x000020, "Member 'BP_Benchmark_C_CalculateLowestAverage1Perenct::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_Benchmark_C_CalculateLowestAverage1Perenct, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000028, "Member 'BP_Benchmark_C_CalculateLowestAverage1Perenct::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Benchmark_C_CalculateLowestAverage1Perenct, CallFunc_Array_Length_ReturnValue) == 0x000030, "Member 'BP_Benchmark_C_CalculateLowestAverage1Perenct::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Benchmark_C_CalculateLowestAverage1Perenct, CallFunc_Less_IntInt_ReturnValue) == 0x000034, "Member 'BP_Benchmark_C_CalculateLowestAverage1Perenct::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Benchmark_C_CalculateLowestAverage1Perenct, CallFunc_Array_Length_ReturnValue_1) == 0x000038, "Member 'BP_Benchmark_C_CalculateLowestAverage1Perenct::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Benchmark_C_CalculateLowestAverage1Perenct, CallFunc_Conv_IntToDouble_ReturnValue) == 0x000040, "Member 'BP_Benchmark_C_CalculateLowestAverage1Perenct::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Benchmark_C_CalculateLowestAverage1Perenct, CallFunc_Divide_DoubleDouble_ReturnValue_2) == 0x000048, "Member 'BP_Benchmark_C_CalculateLowestAverage1Perenct::CallFunc_Divide_DoubleDouble_ReturnValue_2' has a wrong offset!");

// Function BP_Benchmark.BP_Benchmark_C.ConvertToFPS
// 0x0048 (0x0048 - 0x0000)
struct BP_Benchmark_C_ConvertToFPS final
{
public:
	double                                        CallFunc_FClamp_ReturnValue;                       // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue_1;                     // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_1;        // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_2;        // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_3;        // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue_2;                     // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_4;        // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_5;        // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Benchmark_C_ConvertToFPS) == 0x000008, "Wrong alignment on BP_Benchmark_C_ConvertToFPS");
static_assert(sizeof(BP_Benchmark_C_ConvertToFPS) == 0x000048, "Wrong size on BP_Benchmark_C_ConvertToFPS");
static_assert(offsetof(BP_Benchmark_C_ConvertToFPS, CallFunc_FClamp_ReturnValue) == 0x000000, "Member 'BP_Benchmark_C_ConvertToFPS::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Benchmark_C_ConvertToFPS, CallFunc_FClamp_ReturnValue_1) == 0x000008, "Member 'BP_Benchmark_C_ConvertToFPS::CallFunc_FClamp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Benchmark_C_ConvertToFPS, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000010, "Member 'BP_Benchmark_C_ConvertToFPS::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Benchmark_C_ConvertToFPS, CallFunc_Divide_DoubleDouble_ReturnValue_1) == 0x000018, "Member 'BP_Benchmark_C_ConvertToFPS::CallFunc_Divide_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Benchmark_C_ConvertToFPS, CallFunc_Divide_DoubleDouble_ReturnValue_2) == 0x000020, "Member 'BP_Benchmark_C_ConvertToFPS::CallFunc_Divide_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Benchmark_C_ConvertToFPS, CallFunc_Divide_DoubleDouble_ReturnValue_3) == 0x000028, "Member 'BP_Benchmark_C_ConvertToFPS::CallFunc_Divide_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Benchmark_C_ConvertToFPS, CallFunc_FClamp_ReturnValue_2) == 0x000030, "Member 'BP_Benchmark_C_ConvertToFPS::CallFunc_FClamp_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Benchmark_C_ConvertToFPS, CallFunc_Divide_DoubleDouble_ReturnValue_4) == 0x000038, "Member 'BP_Benchmark_C_ConvertToFPS::CallFunc_Divide_DoubleDouble_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_Benchmark_C_ConvertToFPS, CallFunc_Divide_DoubleDouble_ReturnValue_5) == 0x000040, "Member 'BP_Benchmark_C_ConvertToFPS::CallFunc_Divide_DoubleDouble_ReturnValue_5' has a wrong offset!");

// Function BP_Benchmark.BP_Benchmark_C.CreateBenchmarksResults
// 0x0280 (0x0280 - 0x0000)
struct BP_Benchmark_C_CreateBenchmarksResults final
{
public:
	TMap<class FString, class FString>            BenchmarkResults_0;                                // 0x0000(0x0050)(Parm, OutParm)
	class FString                                 Temp_string_Variable;                              // 0x0050(0x0010)(ConstParm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable_1;                            // 0x0060(0x0010)(ConstParm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable_2;                            // 0x0070(0x0010)(ConstParm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable_3;                            // 0x0080(0x0010)(ConstParm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable_4;                            // 0x0090(0x0010)(ConstParm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable_5;                            // 0x00A0(0x0010)(ConstParm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable_6;                            // 0x00B0(0x0010)(ConstParm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable_7;                            // 0x00C0(0x0010)(ConstParm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable_8;                            // 0x00D0(0x0010)(ConstParm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x00E0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x00F0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_DoubleToText_ReturnValue;            // 0x0100(0x0010)()
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x0110(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_DoubleToText_ReturnValue_1;          // 0x0120(0x0010)()
	class FString                                 CallFunc_Replace_ReturnValue;                      // 0x0130(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_TextToString_ReturnValue_1;          // 0x0140(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0150(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Replace_ReturnValue_1;                    // 0x0160(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x0170(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_DoubleToText_ReturnValue_2;          // 0x0180(0x0010)()
	class FString                                 CallFunc_Conv_TextToString_ReturnValue_2;          // 0x0190(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_DoubleToText_ReturnValue_3;          // 0x01A0(0x0010)()
	class FString                                 CallFunc_Replace_ReturnValue_2;                    // 0x01B0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_TextToString_ReturnValue_3;          // 0x01C0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_3;              // 0x01D0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Replace_ReturnValue_3;                    // 0x01E0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_4;              // 0x01F0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_DoubleToText_ReturnValue_4;          // 0x0200(0x0010)()
	class FString                                 CallFunc_Conv_TextToString_ReturnValue_4;          // 0x0210(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Replace_ReturnValue_4;                    // 0x0220(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_5;              // 0x0230(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_DoubleToText_ReturnValue_5;          // 0x0240(0x0010)()
	class FString                                 CallFunc_Conv_TextToString_ReturnValue_5;          // 0x0250(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Replace_ReturnValue_5;                    // 0x0260(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_6;              // 0x0270(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Benchmark_C_CreateBenchmarksResults) == 0x000008, "Wrong alignment on BP_Benchmark_C_CreateBenchmarksResults");
static_assert(sizeof(BP_Benchmark_C_CreateBenchmarksResults) == 0x000280, "Wrong size on BP_Benchmark_C_CreateBenchmarksResults");
static_assert(offsetof(BP_Benchmark_C_CreateBenchmarksResults, BenchmarkResults_0) == 0x000000, "Member 'BP_Benchmark_C_CreateBenchmarksResults::BenchmarkResults_0' has a wrong offset!");
static_assert(offsetof(BP_Benchmark_C_CreateBenchmarksResults, Temp_string_Variable) == 0x000050, "Member 'BP_Benchmark_C_CreateBenchmarksResults::Temp_string_Variable' has a wrong offset!");
static_assert(offsetof(BP_Benchmark_C_CreateBenchmarksResults, Temp_string_Variable_1) == 0x000060, "Member 'BP_Benchmark_C_CreateBenchmarksResults::Temp_string_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_Benchmark_C_CreateBenchmarksResults, Temp_string_Variable_2) == 0x000070, "Member 'BP_Benchmark_C_CreateBenchmarksResults::Temp_string_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_Benchmark_C_CreateBenchmarksResults, Temp_string_Variable_3) == 0x000080, "Member 'BP_Benchmark_C_CreateBenchmarksResults::Temp_string_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_Benchmark_C_CreateBenchmarksResults, Temp_string_Variable_4) == 0x000090, "Member 'BP_Benchmark_C_CreateBenchmarksResults::Temp_string_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_Benchmark_C_CreateBenchmarksResults, Temp_string_Variable_5) == 0x0000A0, "Member 'BP_Benchmark_C_CreateBenchmarksResults::Temp_string_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_Benchmark_C_CreateBenchmarksResults, Temp_string_Variable_6) == 0x0000B0, "Member 'BP_Benchmark_C_CreateBenchmarksResults::Temp_string_Variable_6' has a wrong offset!");
static_assert(offsetof(BP_Benchmark_C_CreateBenchmarksResults, Temp_string_Variable_7) == 0x0000C0, "Member 'BP_Benchmark_C_CreateBenchmarksResults::Temp_string_Variable_7' has a wrong offset!");
static_assert(offsetof(BP_Benchmark_C_CreateBenchmarksResults, Temp_string_Variable_8) == 0x0000D0, "Member 'BP_Benchmark_C_CreateBenchmarksResults::Temp_string_Variable_8' has a wrong offset!");
static_assert(offsetof(BP_Benchmark_C_CreateBenchmarksResults, CallFunc_Conv_IntToString_ReturnValue) == 0x0000E0, "Member 'BP_Benchmark_C_CreateBenchmarksResults::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Benchmark_C_CreateBenchmarksResults, CallFunc_Concat_StrStr_ReturnValue) == 0x0000F0, "Member 'BP_Benchmark_C_CreateBenchmarksResults::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Benchmark_C_CreateBenchmarksResults, CallFunc_Conv_DoubleToText_ReturnValue) == 0x000100, "Member 'BP_Benchmark_C_CreateBenchmarksResults::CallFunc_Conv_DoubleToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Benchmark_C_CreateBenchmarksResults, CallFunc_Conv_TextToString_ReturnValue) == 0x000110, "Member 'BP_Benchmark_C_CreateBenchmarksResults::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Benchmark_C_CreateBenchmarksResults, CallFunc_Conv_DoubleToText_ReturnValue_1) == 0x000120, "Member 'BP_Benchmark_C_CreateBenchmarksResults::CallFunc_Conv_DoubleToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Benchmark_C_CreateBenchmarksResults, CallFunc_Replace_ReturnValue) == 0x000130, "Member 'BP_Benchmark_C_CreateBenchmarksResults::CallFunc_Replace_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Benchmark_C_CreateBenchmarksResults, CallFunc_Conv_TextToString_ReturnValue_1) == 0x000140, "Member 'BP_Benchmark_C_CreateBenchmarksResults::CallFunc_Conv_TextToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Benchmark_C_CreateBenchmarksResults, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000150, "Member 'BP_Benchmark_C_CreateBenchmarksResults::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Benchmark_C_CreateBenchmarksResults, CallFunc_Replace_ReturnValue_1) == 0x000160, "Member 'BP_Benchmark_C_CreateBenchmarksResults::CallFunc_Replace_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Benchmark_C_CreateBenchmarksResults, CallFunc_Concat_StrStr_ReturnValue_2) == 0x000170, "Member 'BP_Benchmark_C_CreateBenchmarksResults::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Benchmark_C_CreateBenchmarksResults, CallFunc_Conv_DoubleToText_ReturnValue_2) == 0x000180, "Member 'BP_Benchmark_C_CreateBenchmarksResults::CallFunc_Conv_DoubleToText_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Benchmark_C_CreateBenchmarksResults, CallFunc_Conv_TextToString_ReturnValue_2) == 0x000190, "Member 'BP_Benchmark_C_CreateBenchmarksResults::CallFunc_Conv_TextToString_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Benchmark_C_CreateBenchmarksResults, CallFunc_Conv_DoubleToText_ReturnValue_3) == 0x0001A0, "Member 'BP_Benchmark_C_CreateBenchmarksResults::CallFunc_Conv_DoubleToText_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Benchmark_C_CreateBenchmarksResults, CallFunc_Replace_ReturnValue_2) == 0x0001B0, "Member 'BP_Benchmark_C_CreateBenchmarksResults::CallFunc_Replace_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Benchmark_C_CreateBenchmarksResults, CallFunc_Conv_TextToString_ReturnValue_3) == 0x0001C0, "Member 'BP_Benchmark_C_CreateBenchmarksResults::CallFunc_Conv_TextToString_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Benchmark_C_CreateBenchmarksResults, CallFunc_Concat_StrStr_ReturnValue_3) == 0x0001D0, "Member 'BP_Benchmark_C_CreateBenchmarksResults::CallFunc_Concat_StrStr_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Benchmark_C_CreateBenchmarksResults, CallFunc_Replace_ReturnValue_3) == 0x0001E0, "Member 'BP_Benchmark_C_CreateBenchmarksResults::CallFunc_Replace_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Benchmark_C_CreateBenchmarksResults, CallFunc_Concat_StrStr_ReturnValue_4) == 0x0001F0, "Member 'BP_Benchmark_C_CreateBenchmarksResults::CallFunc_Concat_StrStr_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_Benchmark_C_CreateBenchmarksResults, CallFunc_Conv_DoubleToText_ReturnValue_4) == 0x000200, "Member 'BP_Benchmark_C_CreateBenchmarksResults::CallFunc_Conv_DoubleToText_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_Benchmark_C_CreateBenchmarksResults, CallFunc_Conv_TextToString_ReturnValue_4) == 0x000210, "Member 'BP_Benchmark_C_CreateBenchmarksResults::CallFunc_Conv_TextToString_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_Benchmark_C_CreateBenchmarksResults, CallFunc_Replace_ReturnValue_4) == 0x000220, "Member 'BP_Benchmark_C_CreateBenchmarksResults::CallFunc_Replace_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_Benchmark_C_CreateBenchmarksResults, CallFunc_Concat_StrStr_ReturnValue_5) == 0x000230, "Member 'BP_Benchmark_C_CreateBenchmarksResults::CallFunc_Concat_StrStr_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_Benchmark_C_CreateBenchmarksResults, CallFunc_Conv_DoubleToText_ReturnValue_5) == 0x000240, "Member 'BP_Benchmark_C_CreateBenchmarksResults::CallFunc_Conv_DoubleToText_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_Benchmark_C_CreateBenchmarksResults, CallFunc_Conv_TextToString_ReturnValue_5) == 0x000250, "Member 'BP_Benchmark_C_CreateBenchmarksResults::CallFunc_Conv_TextToString_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_Benchmark_C_CreateBenchmarksResults, CallFunc_Replace_ReturnValue_5) == 0x000260, "Member 'BP_Benchmark_C_CreateBenchmarksResults::CallFunc_Replace_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_Benchmark_C_CreateBenchmarksResults, CallFunc_Concat_StrStr_ReturnValue_6) == 0x000270, "Member 'BP_Benchmark_C_CreateBenchmarksResults::CallFunc_Concat_StrStr_ReturnValue_6' has a wrong offset!");

// Function BP_Benchmark.BP_Benchmark_C.CreateBenchmarksResults_Warmup
// 0x00C0 (0x00C0 - 0x0000)
struct BP_Benchmark_C_CreateBenchmarksResults_Warmup final
{
public:
	TMap<class FString, class FString>            BenchmarkResults_0;                                // 0x0000(0x0050)(Parm, OutParm)
	class FString                                 Temp_string_Variable;                              // 0x0050(0x0010)(ConstParm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable_1;                            // 0x0060(0x0010)(ConstParm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable_2;                            // 0x0070(0x0010)(ConstParm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable_3;                            // 0x0080(0x0010)(ConstParm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable_4;                            // 0x0090(0x0010)(ConstParm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x00A0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x00B0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Benchmark_C_CreateBenchmarksResults_Warmup) == 0x000008, "Wrong alignment on BP_Benchmark_C_CreateBenchmarksResults_Warmup");
static_assert(sizeof(BP_Benchmark_C_CreateBenchmarksResults_Warmup) == 0x0000C0, "Wrong size on BP_Benchmark_C_CreateBenchmarksResults_Warmup");
static_assert(offsetof(BP_Benchmark_C_CreateBenchmarksResults_Warmup, BenchmarkResults_0) == 0x000000, "Member 'BP_Benchmark_C_CreateBenchmarksResults_Warmup::BenchmarkResults_0' has a wrong offset!");
static_assert(offsetof(BP_Benchmark_C_CreateBenchmarksResults_Warmup, Temp_string_Variable) == 0x000050, "Member 'BP_Benchmark_C_CreateBenchmarksResults_Warmup::Temp_string_Variable' has a wrong offset!");
static_assert(offsetof(BP_Benchmark_C_CreateBenchmarksResults_Warmup, Temp_string_Variable_1) == 0x000060, "Member 'BP_Benchmark_C_CreateBenchmarksResults_Warmup::Temp_string_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_Benchmark_C_CreateBenchmarksResults_Warmup, Temp_string_Variable_2) == 0x000070, "Member 'BP_Benchmark_C_CreateBenchmarksResults_Warmup::Temp_string_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_Benchmark_C_CreateBenchmarksResults_Warmup, Temp_string_Variable_3) == 0x000080, "Member 'BP_Benchmark_C_CreateBenchmarksResults_Warmup::Temp_string_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_Benchmark_C_CreateBenchmarksResults_Warmup, Temp_string_Variable_4) == 0x000090, "Member 'BP_Benchmark_C_CreateBenchmarksResults_Warmup::Temp_string_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_Benchmark_C_CreateBenchmarksResults_Warmup, CallFunc_Conv_IntToString_ReturnValue) == 0x0000A0, "Member 'BP_Benchmark_C_CreateBenchmarksResults_Warmup::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Benchmark_C_CreateBenchmarksResults_Warmup, CallFunc_Concat_StrStr_ReturnValue) == 0x0000B0, "Member 'BP_Benchmark_C_CreateBenchmarksResults_Warmup::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");

// Function BP_Benchmark.BP_Benchmark_C.CreateBenchmarksResultsSummary
// 0x0320 (0x0320 - 0x0000)
struct BP_Benchmark_C_CreateBenchmarksResultsSummary final
{
public:
	TMap<class FString, class FString>            BenchmarkResults_0;                                // 0x0000(0x0050)(Parm, OutParm)
	class FString                                 Temp_string_Variable;                              // 0x0050(0x0010)(ConstParm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable_1;                            // 0x0060(0x0010)(ConstParm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable_2;                            // 0x0070(0x0010)(ConstParm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable_3;                            // 0x0080(0x0010)(ConstParm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable_4;                            // 0x0090(0x0010)(ConstParm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable_5;                            // 0x00A0(0x0010)(ConstParm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable_6;                            // 0x00B0(0x0010)(ConstParm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable_7;                            // 0x00C0(0x0010)(ConstParm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable_8;                            // 0x00D0(0x0010)(ConstParm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable_9;                            // 0x00E0(0x0010)(ConstParm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable_10;                           // 0x00F0(0x0010)(ConstParm, ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_DoubleToText_ReturnValue;            // 0x0100(0x0010)()
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x0110(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_DoubleToText_ReturnValue_1;          // 0x0120(0x0010)()
	class FString                                 CallFunc_Replace_ReturnValue;                      // 0x0130(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_TextToString_ReturnValue_1;          // 0x0140(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0150(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Replace_ReturnValue_1;                    // 0x0160(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0170(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x0180(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x0190(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_DoubleToText_ReturnValue_2;          // 0x01A0(0x0010)()
	class FString                                 CallFunc_Conv_TextToString_ReturnValue_2;          // 0x01B0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_DoubleToText_ReturnValue_3;          // 0x01C0(0x0010)()
	class FString                                 CallFunc_Replace_ReturnValue_2;                    // 0x01D0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_TextToString_ReturnValue_3;          // 0x01E0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_3;              // 0x01F0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Replace_ReturnValue_3;                    // 0x0200(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_4;              // 0x0210(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_DoubleToText_ReturnValue_4;          // 0x0220(0x0010)()
	class FString                                 CallFunc_Conv_TextToString_ReturnValue_4;          // 0x0230(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Replace_ReturnValue_4;                    // 0x0240(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_5;              // 0x0250(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_DoubleToText_ReturnValue_5;          // 0x0260(0x0010)()
	class FText                                   CallFunc_Conv_DoubleToText_ReturnValue_6;          // 0x0270(0x0010)()
	class FString                                 CallFunc_Conv_TextToString_ReturnValue_5;          // 0x0280(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_TextToString_ReturnValue_6;          // 0x0290(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Replace_ReturnValue_5;                    // 0x02A0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Replace_ReturnValue_6;                    // 0x02B0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_6;              // 0x02C0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_7;              // 0x02D0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_DoubleToText_ReturnValue_7;          // 0x02E0(0x0010)()
	class FString                                 CallFunc_Conv_TextToString_ReturnValue_7;          // 0x02F0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Replace_ReturnValue_7;                    // 0x0300(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_8;              // 0x0310(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Benchmark_C_CreateBenchmarksResultsSummary) == 0x000008, "Wrong alignment on BP_Benchmark_C_CreateBenchmarksResultsSummary");
static_assert(sizeof(BP_Benchmark_C_CreateBenchmarksResultsSummary) == 0x000320, "Wrong size on BP_Benchmark_C_CreateBenchmarksResultsSummary");
static_assert(offsetof(BP_Benchmark_C_CreateBenchmarksResultsSummary, BenchmarkResults_0) == 0x000000, "Member 'BP_Benchmark_C_CreateBenchmarksResultsSummary::BenchmarkResults_0' has a wrong offset!");
static_assert(offsetof(BP_Benchmark_C_CreateBenchmarksResultsSummary, Temp_string_Variable) == 0x000050, "Member 'BP_Benchmark_C_CreateBenchmarksResultsSummary::Temp_string_Variable' has a wrong offset!");
static_assert(offsetof(BP_Benchmark_C_CreateBenchmarksResultsSummary, Temp_string_Variable_1) == 0x000060, "Member 'BP_Benchmark_C_CreateBenchmarksResultsSummary::Temp_string_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_Benchmark_C_CreateBenchmarksResultsSummary, Temp_string_Variable_2) == 0x000070, "Member 'BP_Benchmark_C_CreateBenchmarksResultsSummary::Temp_string_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_Benchmark_C_CreateBenchmarksResultsSummary, Temp_string_Variable_3) == 0x000080, "Member 'BP_Benchmark_C_CreateBenchmarksResultsSummary::Temp_string_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_Benchmark_C_CreateBenchmarksResultsSummary, Temp_string_Variable_4) == 0x000090, "Member 'BP_Benchmark_C_CreateBenchmarksResultsSummary::Temp_string_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_Benchmark_C_CreateBenchmarksResultsSummary, Temp_string_Variable_5) == 0x0000A0, "Member 'BP_Benchmark_C_CreateBenchmarksResultsSummary::Temp_string_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_Benchmark_C_CreateBenchmarksResultsSummary, Temp_string_Variable_6) == 0x0000B0, "Member 'BP_Benchmark_C_CreateBenchmarksResultsSummary::Temp_string_Variable_6' has a wrong offset!");
static_assert(offsetof(BP_Benchmark_C_CreateBenchmarksResultsSummary, Temp_string_Variable_7) == 0x0000C0, "Member 'BP_Benchmark_C_CreateBenchmarksResultsSummary::Temp_string_Variable_7' has a wrong offset!");
static_assert(offsetof(BP_Benchmark_C_CreateBenchmarksResultsSummary, Temp_string_Variable_8) == 0x0000D0, "Member 'BP_Benchmark_C_CreateBenchmarksResultsSummary::Temp_string_Variable_8' has a wrong offset!");
static_assert(offsetof(BP_Benchmark_C_CreateBenchmarksResultsSummary, Temp_string_Variable_9) == 0x0000E0, "Member 'BP_Benchmark_C_CreateBenchmarksResultsSummary::Temp_string_Variable_9' has a wrong offset!");
static_assert(offsetof(BP_Benchmark_C_CreateBenchmarksResultsSummary, Temp_string_Variable_10) == 0x0000F0, "Member 'BP_Benchmark_C_CreateBenchmarksResultsSummary::Temp_string_Variable_10' has a wrong offset!");
static_assert(offsetof(BP_Benchmark_C_CreateBenchmarksResultsSummary, CallFunc_Conv_DoubleToText_ReturnValue) == 0x000100, "Member 'BP_Benchmark_C_CreateBenchmarksResultsSummary::CallFunc_Conv_DoubleToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Benchmark_C_CreateBenchmarksResultsSummary, CallFunc_Conv_TextToString_ReturnValue) == 0x000110, "Member 'BP_Benchmark_C_CreateBenchmarksResultsSummary::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Benchmark_C_CreateBenchmarksResultsSummary, CallFunc_Conv_DoubleToText_ReturnValue_1) == 0x000120, "Member 'BP_Benchmark_C_CreateBenchmarksResultsSummary::CallFunc_Conv_DoubleToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Benchmark_C_CreateBenchmarksResultsSummary, CallFunc_Replace_ReturnValue) == 0x000130, "Member 'BP_Benchmark_C_CreateBenchmarksResultsSummary::CallFunc_Replace_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Benchmark_C_CreateBenchmarksResultsSummary, CallFunc_Conv_TextToString_ReturnValue_1) == 0x000140, "Member 'BP_Benchmark_C_CreateBenchmarksResultsSummary::CallFunc_Conv_TextToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Benchmark_C_CreateBenchmarksResultsSummary, CallFunc_Concat_StrStr_ReturnValue) == 0x000150, "Member 'BP_Benchmark_C_CreateBenchmarksResultsSummary::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Benchmark_C_CreateBenchmarksResultsSummary, CallFunc_Replace_ReturnValue_1) == 0x000160, "Member 'BP_Benchmark_C_CreateBenchmarksResultsSummary::CallFunc_Replace_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Benchmark_C_CreateBenchmarksResultsSummary, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000170, "Member 'BP_Benchmark_C_CreateBenchmarksResultsSummary::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Benchmark_C_CreateBenchmarksResultsSummary, CallFunc_Conv_IntToString_ReturnValue) == 0x000180, "Member 'BP_Benchmark_C_CreateBenchmarksResultsSummary::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Benchmark_C_CreateBenchmarksResultsSummary, CallFunc_Concat_StrStr_ReturnValue_2) == 0x000190, "Member 'BP_Benchmark_C_CreateBenchmarksResultsSummary::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Benchmark_C_CreateBenchmarksResultsSummary, CallFunc_Conv_DoubleToText_ReturnValue_2) == 0x0001A0, "Member 'BP_Benchmark_C_CreateBenchmarksResultsSummary::CallFunc_Conv_DoubleToText_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Benchmark_C_CreateBenchmarksResultsSummary, CallFunc_Conv_TextToString_ReturnValue_2) == 0x0001B0, "Member 'BP_Benchmark_C_CreateBenchmarksResultsSummary::CallFunc_Conv_TextToString_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Benchmark_C_CreateBenchmarksResultsSummary, CallFunc_Conv_DoubleToText_ReturnValue_3) == 0x0001C0, "Member 'BP_Benchmark_C_CreateBenchmarksResultsSummary::CallFunc_Conv_DoubleToText_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Benchmark_C_CreateBenchmarksResultsSummary, CallFunc_Replace_ReturnValue_2) == 0x0001D0, "Member 'BP_Benchmark_C_CreateBenchmarksResultsSummary::CallFunc_Replace_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Benchmark_C_CreateBenchmarksResultsSummary, CallFunc_Conv_TextToString_ReturnValue_3) == 0x0001E0, "Member 'BP_Benchmark_C_CreateBenchmarksResultsSummary::CallFunc_Conv_TextToString_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Benchmark_C_CreateBenchmarksResultsSummary, CallFunc_Concat_StrStr_ReturnValue_3) == 0x0001F0, "Member 'BP_Benchmark_C_CreateBenchmarksResultsSummary::CallFunc_Concat_StrStr_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Benchmark_C_CreateBenchmarksResultsSummary, CallFunc_Replace_ReturnValue_3) == 0x000200, "Member 'BP_Benchmark_C_CreateBenchmarksResultsSummary::CallFunc_Replace_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Benchmark_C_CreateBenchmarksResultsSummary, CallFunc_Concat_StrStr_ReturnValue_4) == 0x000210, "Member 'BP_Benchmark_C_CreateBenchmarksResultsSummary::CallFunc_Concat_StrStr_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_Benchmark_C_CreateBenchmarksResultsSummary, CallFunc_Conv_DoubleToText_ReturnValue_4) == 0x000220, "Member 'BP_Benchmark_C_CreateBenchmarksResultsSummary::CallFunc_Conv_DoubleToText_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_Benchmark_C_CreateBenchmarksResultsSummary, CallFunc_Conv_TextToString_ReturnValue_4) == 0x000230, "Member 'BP_Benchmark_C_CreateBenchmarksResultsSummary::CallFunc_Conv_TextToString_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_Benchmark_C_CreateBenchmarksResultsSummary, CallFunc_Replace_ReturnValue_4) == 0x000240, "Member 'BP_Benchmark_C_CreateBenchmarksResultsSummary::CallFunc_Replace_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_Benchmark_C_CreateBenchmarksResultsSummary, CallFunc_Concat_StrStr_ReturnValue_5) == 0x000250, "Member 'BP_Benchmark_C_CreateBenchmarksResultsSummary::CallFunc_Concat_StrStr_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_Benchmark_C_CreateBenchmarksResultsSummary, CallFunc_Conv_DoubleToText_ReturnValue_5) == 0x000260, "Member 'BP_Benchmark_C_CreateBenchmarksResultsSummary::CallFunc_Conv_DoubleToText_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_Benchmark_C_CreateBenchmarksResultsSummary, CallFunc_Conv_DoubleToText_ReturnValue_6) == 0x000270, "Member 'BP_Benchmark_C_CreateBenchmarksResultsSummary::CallFunc_Conv_DoubleToText_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_Benchmark_C_CreateBenchmarksResultsSummary, CallFunc_Conv_TextToString_ReturnValue_5) == 0x000280, "Member 'BP_Benchmark_C_CreateBenchmarksResultsSummary::CallFunc_Conv_TextToString_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_Benchmark_C_CreateBenchmarksResultsSummary, CallFunc_Conv_TextToString_ReturnValue_6) == 0x000290, "Member 'BP_Benchmark_C_CreateBenchmarksResultsSummary::CallFunc_Conv_TextToString_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_Benchmark_C_CreateBenchmarksResultsSummary, CallFunc_Replace_ReturnValue_5) == 0x0002A0, "Member 'BP_Benchmark_C_CreateBenchmarksResultsSummary::CallFunc_Replace_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_Benchmark_C_CreateBenchmarksResultsSummary, CallFunc_Replace_ReturnValue_6) == 0x0002B0, "Member 'BP_Benchmark_C_CreateBenchmarksResultsSummary::CallFunc_Replace_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_Benchmark_C_CreateBenchmarksResultsSummary, CallFunc_Concat_StrStr_ReturnValue_6) == 0x0002C0, "Member 'BP_Benchmark_C_CreateBenchmarksResultsSummary::CallFunc_Concat_StrStr_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_Benchmark_C_CreateBenchmarksResultsSummary, CallFunc_Concat_StrStr_ReturnValue_7) == 0x0002D0, "Member 'BP_Benchmark_C_CreateBenchmarksResultsSummary::CallFunc_Concat_StrStr_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_Benchmark_C_CreateBenchmarksResultsSummary, CallFunc_Conv_DoubleToText_ReturnValue_7) == 0x0002E0, "Member 'BP_Benchmark_C_CreateBenchmarksResultsSummary::CallFunc_Conv_DoubleToText_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_Benchmark_C_CreateBenchmarksResultsSummary, CallFunc_Conv_TextToString_ReturnValue_7) == 0x0002F0, "Member 'BP_Benchmark_C_CreateBenchmarksResultsSummary::CallFunc_Conv_TextToString_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_Benchmark_C_CreateBenchmarksResultsSummary, CallFunc_Replace_ReturnValue_7) == 0x000300, "Member 'BP_Benchmark_C_CreateBenchmarksResultsSummary::CallFunc_Replace_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_Benchmark_C_CreateBenchmarksResultsSummary, CallFunc_Concat_StrStr_ReturnValue_8) == 0x000310, "Member 'BP_Benchmark_C_CreateBenchmarksResultsSummary::CallFunc_Concat_StrStr_ReturnValue_8' has a wrong offset!");

// Function BP_Benchmark.BP_Benchmark_C.ExecuteUbergraph_BP_Benchmark
// 0x03C8 (0x03C8 - 0x0000)
struct BP_Benchmark_C_ExecuteUbergraph_BP_Benchmark final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FMovieSceneSequencePlaybackSettings    K2Node_MakeStruct_MovieSceneSequencePlaybackSettings; // 0x000C(0x0028)(NoDestructor)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ALevelSequenceActor*                    CallFunc_CreateLevelSequencePlayer_OutActor;       // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ULevelSequencePlayer*                   CallFunc_CreateLevelSequencePlayer_ReturnValue;    // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0048(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0058(0x0008)(NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_64[0x4];                                       // 0x0064(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFrameNumber                           K2Node_MakeStruct_FrameNumber;                     // 0x0078(0x0004)(NoDestructor, HasGetValueTypeHash)
	struct FFrameTime                             K2Node_MakeStruct_FrameTime;                       // 0x007C(0x0008)(NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x008C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8D[0x3];                                       // 0x008D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<class FString, class FString>            K2Node_CustomEvent_Benchmark_Results;              // 0x0090(0x0050)()
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x00E0(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<class FString>                         CallFunc_Map_Keys_Keys;                            // 0x00F0(0x0010)(ReferenceParm)
	TArray<class FString>                         CallFunc_Map_Values_Values;                        // 0x0100(0x0010)(ReferenceParm)
	class FString                                 CallFunc_Array_Get_Item;                           // 0x0110(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0120(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0124(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x0125(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_126[0x2];                                      // 0x0126(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_GetResultText_ResultText;                 // 0x0128(0x0010)()
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_2;            // 0x0138(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0148(0x0048)(HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue_1;        // 0x0190(0x0008)(NoDestructor, HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0198(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x01A8(0x0010)()
	TMap<class FString, class FString>            CallFunc_CreateBenchmarksResults_BenchmarkResults; // 0x01B8(0x0050)()
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x0208(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0218(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue_1;        // 0x0220(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0228(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_229[0x7];                                      // 0x0229(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWI_BenchmarkOverlay_C*                 CallFunc_Create_ReturnValue;                       // 0x0230(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TMap<class FString, class FString>            CallFunc_CreateBenchmarksResults_Warmup_BenchmarkResults; // 0x0238(0x0050)()
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0288(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_289[0x3];                                      // 0x0289(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x028C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TMap<class FString, class FString>            CallFunc_CreateBenchmarksResultsSummary_BenchmarkResults; // 0x0290(0x0050)()
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x02E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_DoubleDouble_ReturnValue;    // 0x02E4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_AddToLowest1Percent_AddedToLowestPercent; // 0x02E5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2E6[0x2];                                      // 0x02E6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameModeBase*                          CallFunc_GetGameMode_ReturnValue;                  // 0x02E8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasOption_ReturnValue;                    // 0x02F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LoadLevelInstanceBySoftObjectPtr_bOutSuccess; // 0x02F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2F2[0x6];                                      // 0x02F2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ULevelStreamingDynamic*                 CallFunc_LoadLevelInstanceBySoftObjectPtr_ReturnValue; // 0x02F8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_WarmupBlockerManager_C*             CallFunc_GetActorOfClass_ReturnValue;              // 0x0300(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FQualifiedFrameTime                    CallFunc_GetEndTime_ReturnValue;                   // 0x0308(0x0010)(NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_QualifiedFrameTimeToSeconds_ReturnValue; // 0x0318(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31C[0x4];                                      // 0x031C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetProjectDirectory_ReturnValue;          // 0x0320(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FMovieSceneSequencePlaybackParams      K2Node_MakeStruct_MovieSceneSequencePlaybackParams; // 0x0330(0x0038)()
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0368(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FFilePath                              K2Node_MakeStruct_FilePath;                        // 0x0378(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetField_ReturnValue;                     // 0x0388(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ToFile_ReturnValue;                       // 0x0389(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetField_ReturnValue_1;                   // 0x038A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetField_ReturnValue_2;                   // 0x038B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_MaxOfFloatArray_IndexOfMaxValue;          // 0x038C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MaxOfFloatArray_MaxValue;                 // 0x0390(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0394(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x0398(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_2;                  // 0x039C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_A_ImplicitCast;     // 0x03A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_B_ImplicitCast;          // 0x03A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<float>                                 CallFunc_MaxOfFloatArray_FloatArray_ImplicitCast;  // 0x03B0(0x0010)(ConstParm, ReferenceParm)
	double                                        CallFunc_Array_Add_NewItem_ImplicitCast;           // 0x03C0(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Benchmark_C_ExecuteUbergraph_BP_Benchmark) == 0x000008, "Wrong alignment on BP_Benchmark_C_ExecuteUbergraph_BP_Benchmark");
static_assert(sizeof(BP_Benchmark_C_ExecuteUbergraph_BP_Benchmark) == 0x0003C8, "Wrong size on BP_Benchmark_C_ExecuteUbergraph_BP_Benchmark");
static_assert(offsetof(BP_Benchmark_C_ExecuteUbergraph_BP_Benchmark, EntryPoint) == 0x000000, "Member 'BP_Benchmark_C_ExecuteUbergraph_BP_Benchmark::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_Benchmark_C_ExecuteUbergraph_BP_Benchmark, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'BP_Benchmark_C_ExecuteUbergraph_BP_Benchmark::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_Benchmark_C_ExecuteUbergraph_BP_Benchmark, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'BP_Benchmark_C_ExecuteUbergraph_BP_Benchmark::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Benchmark_C_ExecuteUbergraph_BP_Benchmark, K2Node_MakeStruct_MovieSceneSequencePlaybackSettings) == 0x00000C, "Member 'BP_Benchmark_C_ExecuteUbergraph_BP_Benchmark::K2Node_MakeStruct_MovieSceneSequencePlaybackSettings' has a wrong offset!");
static_assert(offsetof(BP_Benchmark_C_ExecuteUbergraph_BP_Benchmark, CallFunc_CreateLevelSequencePlayer_OutActor) == 0x000038, "Member 'BP_Benchmark_C_ExecuteUbergraph_BP_Benchmark::CallFunc_CreateLevelSequencePlayer_OutActor' has a wrong offset!");
static_assert(offsetof(BP_Benchmark_C_ExecuteUbergraph_BP_Benchmark, CallFunc_CreateLevelSequencePlayer_ReturnValue) == 0x000040, "Member 'BP_Benchmark_C_ExecuteUbergraph_BP_Benchmark::CallFunc_CreateLevelSequencePlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Benchmark_C_ExecuteUbergraph_BP_Benchmark, K2Node_CreateDelegate_OutputDelegate) == 0x000048, "Member 'BP_Benchmark_C_ExecuteUbergraph_BP_Benchmark::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_Benchmark_C_ExecuteUbergraph_BP_Benchmark, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000058, "Member 'BP_Benchmark_C_ExecuteUbergraph_BP_Benchmark::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Benchmark_C_ExecuteUbergraph_BP_Benchmark, K2Node_Event_DeltaSeconds) == 0x000060, "Member 'BP_Benchmark_C_ExecuteUbergraph_BP_Benchmark::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_Benchmark_C_ExecuteUbergraph_BP_Benchmark, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000068, "Member 'BP_Benchmark_C_ExecuteUbergraph_BP_Benchmark::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Benchmark_C_ExecuteUbergraph_BP_Benchmark, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000070, "Member 'BP_Benchmark_C_ExecuteUbergraph_BP_Benchmark::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Benchmark_C_ExecuteUbergraph_BP_Benchmark, K2Node_MakeStruct_FrameNumber) == 0x000078, "Member 'BP_Benchmark_C_ExecuteUbergraph_BP_Benchmark::K2Node_MakeStruct_FrameNumber' has a wrong offset!");
static_assert(offsetof(BP_Benchmark_C_ExecuteUbergraph_BP_Benchmark, K2Node_MakeStruct_FrameTime) == 0x00007C, "Member 'BP_Benchmark_C_ExecuteUbergraph_BP_Benchmark::K2Node_MakeStruct_FrameTime' has a wrong offset!");
static_assert(offsetof(BP_Benchmark_C_ExecuteUbergraph_BP_Benchmark, CallFunc_Array_Length_ReturnValue) == 0x000084, "Member 'BP_Benchmark_C_ExecuteUbergraph_BP_Benchmark::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Benchmark_C_ExecuteUbergraph_BP_Benchmark, Temp_int_Array_Index_Variable) == 0x000088, "Member 'BP_Benchmark_C_ExecuteUbergraph_BP_Benchmark::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_Benchmark_C_ExecuteUbergraph_BP_Benchmark, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x00008C, "Member 'BP_Benchmark_C_ExecuteUbergraph_BP_Benchmark::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Benchmark_C_ExecuteUbergraph_BP_Benchmark, K2Node_CustomEvent_Benchmark_Results) == 0x000090, "Member 'BP_Benchmark_C_ExecuteUbergraph_BP_Benchmark::K2Node_CustomEvent_Benchmark_Results' has a wrong offset!");
static_assert(offsetof(BP_Benchmark_C_ExecuteUbergraph_BP_Benchmark, K2Node_CreateDelegate_OutputDelegate_1) == 0x0000E0, "Member 'BP_Benchmark_C_ExecuteUbergraph_BP_Benchmark::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(BP_Benchmark_C_ExecuteUbergraph_BP_Benchmark, CallFunc_Map_Keys_Keys) == 0x0000F0, "Member 'BP_Benchmark_C_ExecuteUbergraph_BP_Benchmark::CallFunc_Map_Keys_Keys' has a wrong offset!");
static_assert(offsetof(BP_Benchmark_C_ExecuteUbergraph_BP_Benchmark, CallFunc_Map_Values_Values) == 0x000100, "Member 'BP_Benchmark_C_ExecuteUbergraph_BP_Benchmark::CallFunc_Map_Values_Values' has a wrong offset!");
static_assert(offsetof(BP_Benchmark_C_ExecuteUbergraph_BP_Benchmark, CallFunc_Array_Get_Item) == 0x000110, "Member 'BP_Benchmark_C_ExecuteUbergraph_BP_Benchmark::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_Benchmark_C_ExecuteUbergraph_BP_Benchmark, CallFunc_Array_Length_ReturnValue_1) == 0x000120, "Member 'BP_Benchmark_C_ExecuteUbergraph_BP_Benchmark::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Benchmark_C_ExecuteUbergraph_BP_Benchmark, CallFunc_Less_IntInt_ReturnValue) == 0x000124, "Member 'BP_Benchmark_C_ExecuteUbergraph_BP_Benchmark::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Benchmark_C_ExecuteUbergraph_BP_Benchmark, CallFunc_Less_DoubleDouble_ReturnValue) == 0x000125, "Member 'BP_Benchmark_C_ExecuteUbergraph_BP_Benchmark::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Benchmark_C_ExecuteUbergraph_BP_Benchmark, CallFunc_GetResultText_ResultText) == 0x000128, "Member 'BP_Benchmark_C_ExecuteUbergraph_BP_Benchmark::CallFunc_GetResultText_ResultText' has a wrong offset!");
static_assert(offsetof(BP_Benchmark_C_ExecuteUbergraph_BP_Benchmark, K2Node_CreateDelegate_OutputDelegate_2) == 0x000138, "Member 'BP_Benchmark_C_ExecuteUbergraph_BP_Benchmark::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(BP_Benchmark_C_ExecuteUbergraph_BP_Benchmark, K2Node_MakeStruct_FormatArgumentData) == 0x000148, "Member 'BP_Benchmark_C_ExecuteUbergraph_BP_Benchmark::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BP_Benchmark_C_ExecuteUbergraph_BP_Benchmark, CallFunc_K2_SetTimerDelegate_ReturnValue_1) == 0x000190, "Member 'BP_Benchmark_C_ExecuteUbergraph_BP_Benchmark::CallFunc_K2_SetTimerDelegate_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Benchmark_C_ExecuteUbergraph_BP_Benchmark, K2Node_MakeArray_Array) == 0x000198, "Member 'BP_Benchmark_C_ExecuteUbergraph_BP_Benchmark::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_Benchmark_C_ExecuteUbergraph_BP_Benchmark, CallFunc_Format_ReturnValue) == 0x0001A8, "Member 'BP_Benchmark_C_ExecuteUbergraph_BP_Benchmark::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Benchmark_C_ExecuteUbergraph_BP_Benchmark, CallFunc_CreateBenchmarksResults_BenchmarkResults) == 0x0001B8, "Member 'BP_Benchmark_C_ExecuteUbergraph_BP_Benchmark::CallFunc_CreateBenchmarksResults_BenchmarkResults' has a wrong offset!");
static_assert(offsetof(BP_Benchmark_C_ExecuteUbergraph_BP_Benchmark, CallFunc_Conv_TextToString_ReturnValue) == 0x000208, "Member 'BP_Benchmark_C_ExecuteUbergraph_BP_Benchmark::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Benchmark_C_ExecuteUbergraph_BP_Benchmark, CallFunc_GetPlayerController_ReturnValue) == 0x000218, "Member 'BP_Benchmark_C_ExecuteUbergraph_BP_Benchmark::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Benchmark_C_ExecuteUbergraph_BP_Benchmark, CallFunc_GetPlayerController_ReturnValue_1) == 0x000220, "Member 'BP_Benchmark_C_ExecuteUbergraph_BP_Benchmark::CallFunc_GetPlayerController_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Benchmark_C_ExecuteUbergraph_BP_Benchmark, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000228, "Member 'BP_Benchmark_C_ExecuteUbergraph_BP_Benchmark::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Benchmark_C_ExecuteUbergraph_BP_Benchmark, CallFunc_Create_ReturnValue) == 0x000230, "Member 'BP_Benchmark_C_ExecuteUbergraph_BP_Benchmark::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Benchmark_C_ExecuteUbergraph_BP_Benchmark, CallFunc_CreateBenchmarksResults_Warmup_BenchmarkResults) == 0x000238, "Member 'BP_Benchmark_C_ExecuteUbergraph_BP_Benchmark::CallFunc_CreateBenchmarksResults_Warmup_BenchmarkResults' has a wrong offset!");
static_assert(offsetof(BP_Benchmark_C_ExecuteUbergraph_BP_Benchmark, CallFunc_Greater_IntInt_ReturnValue) == 0x000288, "Member 'BP_Benchmark_C_ExecuteUbergraph_BP_Benchmark::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Benchmark_C_ExecuteUbergraph_BP_Benchmark, CallFunc_Subtract_IntInt_ReturnValue) == 0x00028C, "Member 'BP_Benchmark_C_ExecuteUbergraph_BP_Benchmark::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Benchmark_C_ExecuteUbergraph_BP_Benchmark, CallFunc_CreateBenchmarksResultsSummary_BenchmarkResults) == 0x000290, "Member 'BP_Benchmark_C_ExecuteUbergraph_BP_Benchmark::CallFunc_CreateBenchmarksResultsSummary_BenchmarkResults' has a wrong offset!");
static_assert(offsetof(BP_Benchmark_C_ExecuteUbergraph_BP_Benchmark, CallFunc_Add_IntInt_ReturnValue_1) == 0x0002E0, "Member 'BP_Benchmark_C_ExecuteUbergraph_BP_Benchmark::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Benchmark_C_ExecuteUbergraph_BP_Benchmark, CallFunc_GreaterEqual_DoubleDouble_ReturnValue) == 0x0002E4, "Member 'BP_Benchmark_C_ExecuteUbergraph_BP_Benchmark::CallFunc_GreaterEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Benchmark_C_ExecuteUbergraph_BP_Benchmark, CallFunc_AddToLowest1Percent_AddedToLowestPercent) == 0x0002E5, "Member 'BP_Benchmark_C_ExecuteUbergraph_BP_Benchmark::CallFunc_AddToLowest1Percent_AddedToLowestPercent' has a wrong offset!");
static_assert(offsetof(BP_Benchmark_C_ExecuteUbergraph_BP_Benchmark, CallFunc_GetGameMode_ReturnValue) == 0x0002E8, "Member 'BP_Benchmark_C_ExecuteUbergraph_BP_Benchmark::CallFunc_GetGameMode_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Benchmark_C_ExecuteUbergraph_BP_Benchmark, CallFunc_HasOption_ReturnValue) == 0x0002F0, "Member 'BP_Benchmark_C_ExecuteUbergraph_BP_Benchmark::CallFunc_HasOption_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Benchmark_C_ExecuteUbergraph_BP_Benchmark, CallFunc_LoadLevelInstanceBySoftObjectPtr_bOutSuccess) == 0x0002F1, "Member 'BP_Benchmark_C_ExecuteUbergraph_BP_Benchmark::CallFunc_LoadLevelInstanceBySoftObjectPtr_bOutSuccess' has a wrong offset!");
static_assert(offsetof(BP_Benchmark_C_ExecuteUbergraph_BP_Benchmark, CallFunc_LoadLevelInstanceBySoftObjectPtr_ReturnValue) == 0x0002F8, "Member 'BP_Benchmark_C_ExecuteUbergraph_BP_Benchmark::CallFunc_LoadLevelInstanceBySoftObjectPtr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Benchmark_C_ExecuteUbergraph_BP_Benchmark, CallFunc_GetActorOfClass_ReturnValue) == 0x000300, "Member 'BP_Benchmark_C_ExecuteUbergraph_BP_Benchmark::CallFunc_GetActorOfClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Benchmark_C_ExecuteUbergraph_BP_Benchmark, CallFunc_GetEndTime_ReturnValue) == 0x000308, "Member 'BP_Benchmark_C_ExecuteUbergraph_BP_Benchmark::CallFunc_GetEndTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Benchmark_C_ExecuteUbergraph_BP_Benchmark, CallFunc_Conv_QualifiedFrameTimeToSeconds_ReturnValue) == 0x000318, "Member 'BP_Benchmark_C_ExecuteUbergraph_BP_Benchmark::CallFunc_Conv_QualifiedFrameTimeToSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Benchmark_C_ExecuteUbergraph_BP_Benchmark, CallFunc_GetProjectDirectory_ReturnValue) == 0x000320, "Member 'BP_Benchmark_C_ExecuteUbergraph_BP_Benchmark::CallFunc_GetProjectDirectory_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Benchmark_C_ExecuteUbergraph_BP_Benchmark, K2Node_MakeStruct_MovieSceneSequencePlaybackParams) == 0x000330, "Member 'BP_Benchmark_C_ExecuteUbergraph_BP_Benchmark::K2Node_MakeStruct_MovieSceneSequencePlaybackParams' has a wrong offset!");
static_assert(offsetof(BP_Benchmark_C_ExecuteUbergraph_BP_Benchmark, CallFunc_Concat_StrStr_ReturnValue) == 0x000368, "Member 'BP_Benchmark_C_ExecuteUbergraph_BP_Benchmark::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Benchmark_C_ExecuteUbergraph_BP_Benchmark, K2Node_MakeStruct_FilePath) == 0x000378, "Member 'BP_Benchmark_C_ExecuteUbergraph_BP_Benchmark::K2Node_MakeStruct_FilePath' has a wrong offset!");
static_assert(offsetof(BP_Benchmark_C_ExecuteUbergraph_BP_Benchmark, CallFunc_SetField_ReturnValue) == 0x000388, "Member 'BP_Benchmark_C_ExecuteUbergraph_BP_Benchmark::CallFunc_SetField_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Benchmark_C_ExecuteUbergraph_BP_Benchmark, CallFunc_ToFile_ReturnValue) == 0x000389, "Member 'BP_Benchmark_C_ExecuteUbergraph_BP_Benchmark::CallFunc_ToFile_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Benchmark_C_ExecuteUbergraph_BP_Benchmark, CallFunc_SetField_ReturnValue_1) == 0x00038A, "Member 'BP_Benchmark_C_ExecuteUbergraph_BP_Benchmark::CallFunc_SetField_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Benchmark_C_ExecuteUbergraph_BP_Benchmark, CallFunc_SetField_ReturnValue_2) == 0x00038B, "Member 'BP_Benchmark_C_ExecuteUbergraph_BP_Benchmark::CallFunc_SetField_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Benchmark_C_ExecuteUbergraph_BP_Benchmark, CallFunc_MaxOfFloatArray_IndexOfMaxValue) == 0x00038C, "Member 'BP_Benchmark_C_ExecuteUbergraph_BP_Benchmark::CallFunc_MaxOfFloatArray_IndexOfMaxValue' has a wrong offset!");
static_assert(offsetof(BP_Benchmark_C_ExecuteUbergraph_BP_Benchmark, CallFunc_MaxOfFloatArray_MaxValue) == 0x000390, "Member 'BP_Benchmark_C_ExecuteUbergraph_BP_Benchmark::CallFunc_MaxOfFloatArray_MaxValue' has a wrong offset!");
static_assert(offsetof(BP_Benchmark_C_ExecuteUbergraph_BP_Benchmark, CallFunc_Array_Add_ReturnValue) == 0x000394, "Member 'BP_Benchmark_C_ExecuteUbergraph_BP_Benchmark::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Benchmark_C_ExecuteUbergraph_BP_Benchmark, CallFunc_Array_Add_ReturnValue_1) == 0x000398, "Member 'BP_Benchmark_C_ExecuteUbergraph_BP_Benchmark::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Benchmark_C_ExecuteUbergraph_BP_Benchmark, CallFunc_Array_Add_ReturnValue_2) == 0x00039C, "Member 'BP_Benchmark_C_ExecuteUbergraph_BP_Benchmark::CallFunc_Array_Add_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Benchmark_C_ExecuteUbergraph_BP_Benchmark, CallFunc_Multiply_DoubleDouble_A_ImplicitCast) == 0x0003A0, "Member 'BP_Benchmark_C_ExecuteUbergraph_BP_Benchmark::CallFunc_Multiply_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_Benchmark_C_ExecuteUbergraph_BP_Benchmark, CallFunc_Add_DoubleDouble_B_ImplicitCast) == 0x0003A8, "Member 'BP_Benchmark_C_ExecuteUbergraph_BP_Benchmark::CallFunc_Add_DoubleDouble_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_Benchmark_C_ExecuteUbergraph_BP_Benchmark, CallFunc_MaxOfFloatArray_FloatArray_ImplicitCast) == 0x0003B0, "Member 'BP_Benchmark_C_ExecuteUbergraph_BP_Benchmark::CallFunc_MaxOfFloatArray_FloatArray_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_Benchmark_C_ExecuteUbergraph_BP_Benchmark, CallFunc_Array_Add_NewItem_ImplicitCast) == 0x0003C0, "Member 'BP_Benchmark_C_ExecuteUbergraph_BP_Benchmark::CallFunc_Array_Add_NewItem_ImplicitCast' has a wrong offset!");

// Function BP_Benchmark.BP_Benchmark_C.OnBenchmarkFinished__DelegateSignature
// 0x0050 (0x0050 - 0x0000)
struct BP_Benchmark_C_OnBenchmarkFinished__DelegateSignature final
{
public:
	TMap<class FString, class FString>            Benchmark_Results;                                 // 0x0000(0x0050)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(BP_Benchmark_C_OnBenchmarkFinished__DelegateSignature) == 0x000008, "Wrong alignment on BP_Benchmark_C_OnBenchmarkFinished__DelegateSignature");
static_assert(sizeof(BP_Benchmark_C_OnBenchmarkFinished__DelegateSignature) == 0x000050, "Wrong size on BP_Benchmark_C_OnBenchmarkFinished__DelegateSignature");
static_assert(offsetof(BP_Benchmark_C_OnBenchmarkFinished__DelegateSignature, Benchmark_Results) == 0x000000, "Member 'BP_Benchmark_C_OnBenchmarkFinished__DelegateSignature::Benchmark_Results' has a wrong offset!");

// Function BP_Benchmark.BP_Benchmark_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct BP_Benchmark_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Benchmark_C_ReceiveTick) == 0x000004, "Wrong alignment on BP_Benchmark_C_ReceiveTick");
static_assert(sizeof(BP_Benchmark_C_ReceiveTick) == 0x000004, "Wrong size on BP_Benchmark_C_ReceiveTick");
static_assert(offsetof(BP_Benchmark_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'BP_Benchmark_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

}

