#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WI_CheatCommandWithIndicator

#include "Basic.hpp"


namespace SDK::Params
{

// Function WI_CheatCommandWithIndicator.WI_CheatCommandWithIndicator_C.ExecuteUbergraph_WI_CheatCommandWithIndicator
// 0x0018 (0x0018 - 0x0000)
struct WI_CheatCommandWithIndicator_C_ExecuteUbergraph_WI_CheatCommandWithIndicator final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0008(0x0010)()
};
static_assert(alignof(WI_CheatCommandWithIndicator_C_ExecuteUbergraph_WI_CheatCommandWithIndicator) == 0x000008, "Wrong alignment on WI_CheatCommandWithIndicator_C_ExecuteUbergraph_WI_CheatCommandWithIndicator");
static_assert(sizeof(WI_CheatCommandWithIndicator_C_ExecuteUbergraph_WI_CheatCommandWithIndicator) == 0x000018, "Wrong size on WI_CheatCommandWithIndicator_C_ExecuteUbergraph_WI_CheatCommandWithIndicator");
static_assert(offsetof(WI_CheatCommandWithIndicator_C_ExecuteUbergraph_WI_CheatCommandWithIndicator, EntryPoint) == 0x000000, "Member 'WI_CheatCommandWithIndicator_C_ExecuteUbergraph_WI_CheatCommandWithIndicator::EntryPoint' has a wrong offset!");
static_assert(offsetof(WI_CheatCommandWithIndicator_C_ExecuteUbergraph_WI_CheatCommandWithIndicator, K2Node_Event_IsDesignTime) == 0x000004, "Member 'WI_CheatCommandWithIndicator_C_ExecuteUbergraph_WI_CheatCommandWithIndicator::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(WI_CheatCommandWithIndicator_C_ExecuteUbergraph_WI_CheatCommandWithIndicator, CallFunc_Conv_StringToText_ReturnValue) == 0x000008, "Member 'WI_CheatCommandWithIndicator_C_ExecuteUbergraph_WI_CheatCommandWithIndicator::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");

// Function WI_CheatCommandWithIndicator.WI_CheatCommandWithIndicator_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct WI_CheatCommandWithIndicator_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WI_CheatCommandWithIndicator_C_PreConstruct) == 0x000001, "Wrong alignment on WI_CheatCommandWithIndicator_C_PreConstruct");
static_assert(sizeof(WI_CheatCommandWithIndicator_C_PreConstruct) == 0x000001, "Wrong size on WI_CheatCommandWithIndicator_C_PreConstruct");
static_assert(offsetof(WI_CheatCommandWithIndicator_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'WI_CheatCommandWithIndicator_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function WI_CheatCommandWithIndicator.WI_CheatCommandWithIndicator_C.QueryIsEnabled
// 0x0028 (0x0028 - 0x0000)
struct WI_CheatCommandWithIndicator_C_QueryIsEnabled final
{
public:
	bool                                          Temp_bool_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             Temp_object_Variable;                              // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_1;                            // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetIndicatorEnabled_Enabled;              // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             K2Node_Select_Default;                             // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WI_CheatCommandWithIndicator_C_QueryIsEnabled) == 0x000008, "Wrong alignment on WI_CheatCommandWithIndicator_C_QueryIsEnabled");
static_assert(sizeof(WI_CheatCommandWithIndicator_C_QueryIsEnabled) == 0x000028, "Wrong size on WI_CheatCommandWithIndicator_C_QueryIsEnabled");
static_assert(offsetof(WI_CheatCommandWithIndicator_C_QueryIsEnabled, Temp_bool_Variable) == 0x000000, "Member 'WI_CheatCommandWithIndicator_C_QueryIsEnabled::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WI_CheatCommandWithIndicator_C_QueryIsEnabled, Temp_object_Variable) == 0x000008, "Member 'WI_CheatCommandWithIndicator_C_QueryIsEnabled::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(WI_CheatCommandWithIndicator_C_QueryIsEnabled, Temp_object_Variable_1) == 0x000010, "Member 'WI_CheatCommandWithIndicator_C_QueryIsEnabled::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(WI_CheatCommandWithIndicator_C_QueryIsEnabled, CallFunc_GetIndicatorEnabled_Enabled) == 0x000018, "Member 'WI_CheatCommandWithIndicator_C_QueryIsEnabled::CallFunc_GetIndicatorEnabled_Enabled' has a wrong offset!");
static_assert(offsetof(WI_CheatCommandWithIndicator_C_QueryIsEnabled, K2Node_Select_Default) == 0x000020, "Member 'WI_CheatCommandWithIndicator_C_QueryIsEnabled::K2Node_Select_Default' has a wrong offset!");

// Function WI_CheatCommandWithIndicator.WI_CheatCommandWithIndicator_C.GetIndicatorEnabled
// 0x0001 (0x0001 - 0x0000)
struct WI_CheatCommandWithIndicator_C_GetIndicatorEnabled final
{
public:
	bool                                          Enabled;                                           // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WI_CheatCommandWithIndicator_C_GetIndicatorEnabled) == 0x000001, "Wrong alignment on WI_CheatCommandWithIndicator_C_GetIndicatorEnabled");
static_assert(sizeof(WI_CheatCommandWithIndicator_C_GetIndicatorEnabled) == 0x000001, "Wrong size on WI_CheatCommandWithIndicator_C_GetIndicatorEnabled");
static_assert(offsetof(WI_CheatCommandWithIndicator_C_GetIndicatorEnabled, Enabled) == 0x000000, "Member 'WI_CheatCommandWithIndicator_C_GetIndicatorEnabled::Enabled' has a wrong offset!");

}

