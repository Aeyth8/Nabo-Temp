#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WI_PerkAbility

#include "Basic.hpp"

#include "WI_PerkAbility_classes.hpp"
#include "WI_PerkAbility_parameters.hpp"


namespace SDK
{

// Function WI_PerkAbility.WI_PerkAbility_C.AbilityRefreshed
// (BlueprintCallable, BlueprintEvent)

void UWI_PerkAbility_C::AbilityRefreshed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WI_PerkAbility_C", "AbilityRefreshed");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WI_PerkAbility.WI_PerkAbility_C.Construct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UWI_PerkAbility_C::Construct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WI_PerkAbility_C", "Construct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WI_PerkAbility.WI_PerkAbility_C.ExecuteUbergraph_WI_PerkAbility
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWI_PerkAbility_C::ExecuteUbergraph_WI_PerkAbility(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WI_PerkAbility_C", "ExecuteUbergraph_WI_PerkAbility");

	Params::WI_PerkAbility_C_ExecuteUbergraph_WI_PerkAbility Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WI_PerkAbility.WI_PerkAbility_C.GetCooldownText
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  TimeRemaining                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash)

class FString UWI_PerkAbility_C::GetCooldownText(double TimeRemaining)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WI_PerkAbility_C", "GetCooldownText");

	Params::WI_PerkAbility_C_GetCooldownText Parms{};

	Parms.TimeRemaining = TimeRemaining;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function WI_PerkAbility.WI_PerkAbility_C.HasValidCooldownTime
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UGameplayAbilityIW*               Ability                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    ValidCooldownTime                                      (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWI_PerkAbility_C::HasValidCooldownTime(class UGameplayAbilityIW* Ability, bool* ValidCooldownTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WI_PerkAbility_C", "HasValidCooldownTime");

	Params::WI_PerkAbility_C_HasValidCooldownTime Parms{};

	Parms.Ability = Ability;

	UObject::ProcessEvent(Func, &Parms);

	if (ValidCooldownTime != nullptr)
		*ValidCooldownTime = Parms.ValidCooldownTime;
}


// Function WI_PerkAbility.WI_PerkAbility_C.InitializePerkAbilityWidget
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UGameplayAbilityIW*               TargetGameplayAbility                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// double                                  TimeSinceAbilityAdded                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UWI_PerkAbilityContainer_C*       AbilityContainer                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UWI_PerkAbility_C::InitializePerkAbilityWidget(class UGameplayAbilityIW* TargetGameplayAbility, double TimeSinceAbilityAdded, class UWI_PerkAbilityContainer_C* AbilityContainer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WI_PerkAbility_C", "InitializePerkAbilityWidget");

	Params::WI_PerkAbility_C_InitializePerkAbilityWidget Parms{};

	Parms.TargetGameplayAbility = TargetGameplayAbility;
	Parms.TimeSinceAbilityAdded = TimeSinceAbilityAdded;
	Parms.AbilityContainer = AbilityContainer;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WI_PerkAbility.WI_PerkAbility_C.OnCooldownEnded
// (Public, BlueprintCallable, BlueprintEvent)

void UWI_PerkAbility_C::OnCooldownEnded()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WI_PerkAbility_C", "OnCooldownEnded");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WI_PerkAbility.WI_PerkAbility_C.OnCooldownStarted
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  TimeRemaining                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  CooldownDuration_0                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  PercentageDone                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWI_PerkAbility_C::OnCooldownStarted(double TimeRemaining, double CooldownDuration_0, double PercentageDone)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WI_PerkAbility_C", "OnCooldownStarted");

	Params::WI_PerkAbility_C_OnCooldownStarted Parms{};

	Parms.TimeRemaining = TimeRemaining;
	Parms.CooldownDuration_0 = CooldownDuration_0;
	Parms.PercentageDone = PercentageDone;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WI_PerkAbility.WI_PerkAbility_C.OnCooldownTick
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  TimeRemaining                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  CooldownDuration_0                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  PercentageDone                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWI_PerkAbility_C::OnCooldownTick(double TimeRemaining, double CooldownDuration_0, double PercentageDone)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WI_PerkAbility_C", "OnCooldownTick");

	Params::WI_PerkAbility_C_OnCooldownTick Parms{};

	Parms.TimeRemaining = TimeRemaining;
	Parms.CooldownDuration_0 = CooldownDuration_0;
	Parms.PercentageDone = PercentageDone;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WI_PerkAbility.WI_PerkAbility_C.OnMessageReceived_8D62D7AE48C77B20978CD2877453A7F9
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UAsyncAction_ListenForGameplayMessage*ProxyObject                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// struct FGameplayTag                     ActualChannel                                          (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)

void UWI_PerkAbility_C::OnMessageReceived_8D62D7AE48C77B20978CD2877453A7F9(class UAsyncAction_ListenForGameplayMessage* ProxyObject, const struct FGameplayTag& ActualChannel)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WI_PerkAbility_C", "OnMessageReceived_8D62D7AE48C77B20978CD2877453A7F9");

	Params::WI_PerkAbility_C_OnMessageReceived_8D62D7AE48C77B20978CD2877453A7F9 Parms{};

	Parms.ProxyObject = ProxyObject;
	Parms.ActualChannel = std::move(ActualChannel);

	UObject::ProcessEvent(Func, &Parms);
}


// Function WI_PerkAbility.WI_PerkAbility_C.PlayActivationFailAnimation
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UWI_PerkAbility_C::PlayActivationFailAnimation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WI_PerkAbility_C", "PlayActivationFailAnimation");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WI_PerkAbility.WI_PerkAbility_C.PreConstruct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// bool                                    IsDesignTime                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWI_PerkAbility_C::PreConstruct(bool IsDesignTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WI_PerkAbility_C", "PreConstruct");

	Params::WI_PerkAbility_C_PreConstruct Parms{};

	Parms.IsDesignTime = IsDesignTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WI_PerkAbility.WI_PerkAbility_C.Set Icon Tint Color
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FSlateColor                      NewParam                                               (BlueprintVisible, BlueprintReadOnly, Parm)

void UWI_PerkAbility_C::Set_Icon_Tint_Color(const struct FSlateColor& NewParam)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WI_PerkAbility_C", "Set Icon Tint Color");

	Params::WI_PerkAbility_C_Set_Icon_Tint_Color Parms{};

	Parms.NewParam = std::move(NewParam);

	UObject::ProcessEvent(Func, &Parms);
}


// Function WI_PerkAbility.WI_PerkAbility_C.SetCooldownText
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           Cooldown_Text                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void UWI_PerkAbility_C::SetCooldownText(const class FString& Cooldown_Text)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WI_PerkAbility_C", "SetCooldownText");

	Params::WI_PerkAbility_C_SetCooldownText Parms{};

	Parms.Cooldown_Text = std::move(Cooldown_Text);

	UObject::ProcessEvent(Func, &Parms);
}


// Function WI_PerkAbility.WI_PerkAbility_C.SetIconTexture
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// TSoftObjectPtr<class UTexture2D>        SoftTexture                                            (BlueprintVisible, BlueprintReadOnly, Parm, UObjectWrapper, HasGetValueTypeHash)

void UWI_PerkAbility_C::SetIconTexture(TSoftObjectPtr<class UTexture2D> SoftTexture)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WI_PerkAbility_C", "SetIconTexture");

	Params::WI_PerkAbility_C_SetIconTexture Parms{};

	Parms.SoftTexture = SoftTexture;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WI_PerkAbility.WI_PerkAbility_C.SetInputAction
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UInputAction*                     InputAction_0                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UWI_PerkAbility_C::SetInputAction(class UInputAction* InputAction_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WI_PerkAbility_C", "SetInputAction");

	Params::WI_PerkAbility_C_SetInputAction Parms{};

	Parms.InputAction_0 = InputAction_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WI_PerkAbility.WI_PerkAbility_C.SetProgressBarFillFraction
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   InPercent                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWI_PerkAbility_C::SetProgressBarFillFraction(float InPercent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WI_PerkAbility_C", "SetProgressBarFillFraction");

	Params::WI_PerkAbility_C_SetProgressBarFillFraction Parms{};

	Parms.InPercent = InPercent;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WI_PerkAbility.WI_PerkAbility_C.SetShowBoundAction
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Index_0                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWI_PerkAbility_C::SetShowBoundAction(bool Index_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WI_PerkAbility_C", "SetShowBoundAction");

	Params::WI_PerkAbility_C_SetShowBoundAction Parms{};

	Parms.Index_0 = Index_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WI_PerkAbility.WI_PerkAbility_C.SetShowCooldownText
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Show                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWI_PerkAbility_C::SetShowCooldownText(bool Show)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WI_PerkAbility_C", "SetShowCooldownText");

	Params::WI_PerkAbility_C_SetShowCooldownText Parms{};

	Parms.Show = Show;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WI_PerkAbility.WI_PerkAbility_C.SetShowOverlay
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Show                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWI_PerkAbility_C::SetShowOverlay(bool Show)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WI_PerkAbility_C", "SetShowOverlay");

	Params::WI_PerkAbility_C_SetShowOverlay Parms{};

	Parms.Show = Show;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WI_PerkAbility.WI_PerkAbility_C.Tick
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// struct FGeometry                        MyGeometry                                             (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// float                                   InDeltaTime                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWI_PerkAbility_C::Tick(const struct FGeometry& MyGeometry, float InDeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WI_PerkAbility_C", "Tick");

	Params::WI_PerkAbility_C_Tick Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.InDeltaTime = InDeltaTime;

	UObject::ProcessEvent(Func, &Parms);
}

}

