#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_GarbageCollect

#include "Basic.hpp"

#include "BP_GarbageCollect_classes.hpp"
#include "BP_GarbageCollect_parameters.hpp"


namespace SDK
{

// Function BP_GarbageCollect.BP_GarbageCollect_C.BndEvt__BP_DeliveryService_Box_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature
// (HasOutParams, BlueprintEvent)
// Parameters:
// class UPrimitiveComponent*              OverlappedComponent                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class AActor*                           OtherActor                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*              OtherComp                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// int32                                   OtherBodyIndex                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bFromSweep                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FHitResult                       SweepResult                                            (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)

void ABP_GarbageCollect_C::BndEvt__BP_DeliveryService_Box_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GarbageCollect_C", "BndEvt__BP_DeliveryService_Box_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature");

	Params::BP_GarbageCollect_C_BndEvt__BP_DeliveryService_Box_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature Parms{};

	Parms.OverlappedComponent = OverlappedComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.OtherBodyIndex = OtherBodyIndex;
	Parms.bFromSweep = bFromSweep;
	Parms.SweepResult = std::move(SweepResult);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_GarbageCollect.BP_GarbageCollect_C.BndEvt__BP_DeliveryService_SM_Veh_Truck_Delivery_01_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature
// (HasOutParams, BlueprintEvent)
// Parameters:
// class UPrimitiveComponent*              OverlappedComponent                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class AActor*                           OtherActor                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*              OtherComp                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// int32                                   OtherBodyIndex                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bFromSweep                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FHitResult                       SweepResult                                            (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)

void ABP_GarbageCollect_C::BndEvt__BP_DeliveryService_SM_Veh_Truck_Delivery_01_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GarbageCollect_C", "BndEvt__BP_DeliveryService_SM_Veh_Truck_Delivery_01_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature");

	Params::BP_GarbageCollect_C_BndEvt__BP_DeliveryService_SM_Veh_Truck_Delivery_01_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature Parms{};

	Parms.OverlappedComponent = OverlappedComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.OtherBodyIndex = OtherBodyIndex;
	Parms.bFromSweep = bFromSweep;
	Parms.SweepResult = std::move(SweepResult);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_GarbageCollect.BP_GarbageCollect_C.Cosmetics Hit Object
// (BlueprintCallable, BlueprintEvent)

void ABP_GarbageCollect_C::Cosmetics_Hit_Object()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GarbageCollect_C", "Cosmetics Hit Object");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_GarbageCollect.BP_GarbageCollect_C.DealDamage
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Target                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_GarbageCollect_C::DealDamage(class AActor* Target)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GarbageCollect_C", "DealDamage");

	Params::BP_GarbageCollect_C_DealDamage Parms{};

	Parms.Target = Target;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_GarbageCollect.BP_GarbageCollect_C.DisableDelivery
// (BlueprintCallable, BlueprintEvent)

void ABP_GarbageCollect_C::DisableDelivery()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GarbageCollect_C", "DisableDelivery");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_GarbageCollect.BP_GarbageCollect_C.ExecuteUbergraph_BP_GarbageCollect
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_GarbageCollect_C::ExecuteUbergraph_BP_GarbageCollect(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GarbageCollect_C", "ExecuteUbergraph_BP_GarbageCollect");

	Params::BP_GarbageCollect_C_ExecuteUbergraph_BP_GarbageCollect Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_GarbageCollect.BP_GarbageCollect_C.FindNearestTrashCan
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_Trashcan_C*                   ClosestTrashCan                                        (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_GarbageCollect_C::FindNearestTrashCan(class ABP_Trashcan_C** ClosestTrashCan)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GarbageCollect_C", "FindNearestTrashCan");

	Params::BP_GarbageCollect_C_FindNearestTrashCan Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (ClosestTrashCan != nullptr)
		*ClosestTrashCan = Parms.ClosestTrashCan;
}


// Function BP_GarbageCollect.BP_GarbageCollect_C.GetLocationAndRotationAlongSpline
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// double                                  Time                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          Location                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FRotator                         Rotation                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_GarbageCollect_C::GetLocationAndRotationAlongSpline(double Time, struct FVector* Location, struct FRotator* Rotation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GarbageCollect_C", "GetLocationAndRotationAlongSpline");

	Params::BP_GarbageCollect_C_GetLocationAndRotationAlongSpline Parms{};

	Parms.Time = Time;

	UObject::ProcessEvent(Func, &Parms);

	if (Location != nullptr)
		*Location = std::move(Parms.Location);

	if (Rotation != nullptr)
		*Rotation = std::move(Parms.Rotation);
}


// Function BP_GarbageCollect.BP_GarbageCollect_C.Impact
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Actor                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_GarbageCollect_C::Impact(class AActor* Actor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GarbageCollect_C", "Impact");

	Params::BP_GarbageCollect_C_Impact Parms{};

	Parms.Actor = Actor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_GarbageCollect.BP_GarbageCollect_C.LerpTrashToTruck
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_GarbageItem_C*                Garbage                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// uint8                                   CurrentTeamCollected                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_GarbageCollect_C::LerpTrashToTruck(class ABP_GarbageItem_C* Garbage, uint8 CurrentTeamCollected)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GarbageCollect_C", "LerpTrashToTruck");

	Params::BP_GarbageCollect_C_LerpTrashToTruck Parms{};

	Parms.Garbage = Garbage;
	Parms.CurrentTeamCollected = CurrentTeamCollected;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_GarbageCollect.BP_GarbageCollect_C.Multi_Audio Tire Squeal
// (Net, NetMulticast, BlueprintCallable, BlueprintEvent)

void ABP_GarbageCollect_C::Multi_Audio_Tire_Squeal()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GarbageCollect_C", "Multi_Audio Tire Squeal");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_GarbageCollect.BP_GarbageCollect_C.On_WarmupEnded
// (BlueprintCallable, BlueprintEvent)

void ABP_GarbageCollect_C::On_WarmupEnded()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GarbageCollect_C", "On_WarmupEnded");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_GarbageCollect.BP_GarbageCollect_C.OnGameEnded
// (BlueprintCallable, BlueprintEvent)

void ABP_GarbageCollect_C::OnGameEnded()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GarbageCollect_C", "OnGameEnded");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_GarbageCollect.BP_GarbageCollect_C.OnRep_OutForDelivery
// (BlueprintCallable, BlueprintEvent)

void ABP_GarbageCollect_C::OnRep_OutForDelivery()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GarbageCollect_C", "OnRep_OutForDelivery");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_GarbageCollect.BP_GarbageCollect_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ABP_GarbageCollect_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GarbageCollect_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_GarbageCollect.BP_GarbageCollect_C.Server_Start Delevery
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)

void ABP_GarbageCollect_C::Server_Start_Delevery()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GarbageCollect_C", "Server_Start Delevery");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_GarbageCollect.BP_GarbageCollect_C.SetDeadly
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Deadly                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_GarbageCollect_C::SetDeadly(bool Deadly)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GarbageCollect_C", "SetDeadly");

	Params::BP_GarbageCollect_C_SetDeadly Parms{};

	Parms.Deadly = Deadly;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_GarbageCollect.BP_GarbageCollect_C.StopDelivery
// (Net, NetServer, BlueprintCallable, BlueprintEvent)

void ABP_GarbageCollect_C::StopDelivery()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GarbageCollect_C", "StopDelivery");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_GarbageCollect.BP_GarbageCollect_C.TruckLocation__CollectGarbage__EventFunc
// (BlueprintEvent)

void ABP_GarbageCollect_C::TruckLocation__CollectGarbage__EventFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GarbageCollect_C", "TruckLocation__CollectGarbage__EventFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_GarbageCollect.BP_GarbageCollect_C.TruckLocation__FinishedFunc
// (BlueprintEvent)

void ABP_GarbageCollect_C::TruckLocation__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GarbageCollect_C", "TruckLocation__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_GarbageCollect.BP_GarbageCollect_C.TruckLocation__TireSqueal__EventFunc
// (BlueprintEvent)

void ABP_GarbageCollect_C::TruckLocation__TireSqueal__EventFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GarbageCollect_C", "TruckLocation__TireSqueal__EventFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_GarbageCollect.BP_GarbageCollect_C.TruckLocation__UpdateFunc
// (BlueprintEvent)

void ABP_GarbageCollect_C::TruckLocation__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GarbageCollect_C", "TruckLocation__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}

}

