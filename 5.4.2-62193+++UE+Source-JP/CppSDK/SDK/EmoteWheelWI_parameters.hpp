#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: EmoteWheelWI

#include "Basic.hpp"

#include "JP_structs.hpp"
#include "SlateCore_structs.hpp"
#include "CommonInput_structs.hpp"


namespace SDK::Params
{

// Function EmoteWheelWI.EmoteWheelWI_C.AddBuffIcon
// 0x0090 (0x0090 - 0x0000)
struct EmoteWheelWI_C_AddBuffIcon final
{
public:
	class UClass*                                 Class_0;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TSoftObjectPtr<class UTexture2D>              IconToUse;                                         // 0x0008(0x0028)(Edit, BlueprintVisible, UObjectWrapper, HasGetValueTypeHash)
	class UWI_BuffInShop_C*                       CallFunc_Create_ReturnValue;                       // 0x0030(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 K2Node_ClassDynamicCast_AsGameplay_Effect_IW;      // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ClassDynamicCast_bSuccess;                  // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x3];                                       // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetExpectedDuration_ReturnValue;          // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UGameplayEffectComponent*>       CallFunc_FindComponents_ReturnValue;               // 0x0048(0x0010)(ReferenceParm, ContainsInstancedReference)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_64[0x4];                                       // 0x0064(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	const class UGameplayEffectComponent*         CallFunc_Array_Get_Item;                           // 0x0068(0x0008)(ConstParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	const class UGameplayEffectUIData_Icon*       K2Node_DynamicCast_AsGameplay_Effect_UIData_Icon;  // 0x0070(0x0008)(ConstParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0079(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7A[0x2];                                       // 0x007A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPanelSlot*                             CallFunc_AddChild_ReturnValue;                     // 0x0080(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SetDoublePropertyByName_Value_ImplicitCast; // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(EmoteWheelWI_C_AddBuffIcon) == 0x000008, "Wrong alignment on EmoteWheelWI_C_AddBuffIcon");
static_assert(sizeof(EmoteWheelWI_C_AddBuffIcon) == 0x000090, "Wrong size on EmoteWheelWI_C_AddBuffIcon");
static_assert(offsetof(EmoteWheelWI_C_AddBuffIcon, Class_0) == 0x000000, "Member 'EmoteWheelWI_C_AddBuffIcon::Class_0' has a wrong offset!");
static_assert(offsetof(EmoteWheelWI_C_AddBuffIcon, IconToUse) == 0x000008, "Member 'EmoteWheelWI_C_AddBuffIcon::IconToUse' has a wrong offset!");
static_assert(offsetof(EmoteWheelWI_C_AddBuffIcon, CallFunc_Create_ReturnValue) == 0x000030, "Member 'EmoteWheelWI_C_AddBuffIcon::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(EmoteWheelWI_C_AddBuffIcon, K2Node_ClassDynamicCast_AsGameplay_Effect_IW) == 0x000038, "Member 'EmoteWheelWI_C_AddBuffIcon::K2Node_ClassDynamicCast_AsGameplay_Effect_IW' has a wrong offset!");
static_assert(offsetof(EmoteWheelWI_C_AddBuffIcon, K2Node_ClassDynamicCast_bSuccess) == 0x000040, "Member 'EmoteWheelWI_C_AddBuffIcon::K2Node_ClassDynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(EmoteWheelWI_C_AddBuffIcon, CallFunc_GetExpectedDuration_ReturnValue) == 0x000044, "Member 'EmoteWheelWI_C_AddBuffIcon::CallFunc_GetExpectedDuration_ReturnValue' has a wrong offset!");
static_assert(offsetof(EmoteWheelWI_C_AddBuffIcon, CallFunc_FindComponents_ReturnValue) == 0x000048, "Member 'EmoteWheelWI_C_AddBuffIcon::CallFunc_FindComponents_ReturnValue' has a wrong offset!");
static_assert(offsetof(EmoteWheelWI_C_AddBuffIcon, CallFunc_Array_Length_ReturnValue) == 0x000058, "Member 'EmoteWheelWI_C_AddBuffIcon::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(EmoteWheelWI_C_AddBuffIcon, Temp_int_Array_Index_Variable) == 0x00005C, "Member 'EmoteWheelWI_C_AddBuffIcon::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(EmoteWheelWI_C_AddBuffIcon, Temp_int_Loop_Counter_Variable) == 0x000060, "Member 'EmoteWheelWI_C_AddBuffIcon::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(EmoteWheelWI_C_AddBuffIcon, CallFunc_Array_Get_Item) == 0x000068, "Member 'EmoteWheelWI_C_AddBuffIcon::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(EmoteWheelWI_C_AddBuffIcon, K2Node_DynamicCast_AsGameplay_Effect_UIData_Icon) == 0x000070, "Member 'EmoteWheelWI_C_AddBuffIcon::K2Node_DynamicCast_AsGameplay_Effect_UIData_Icon' has a wrong offset!");
static_assert(offsetof(EmoteWheelWI_C_AddBuffIcon, K2Node_DynamicCast_bSuccess) == 0x000078, "Member 'EmoteWheelWI_C_AddBuffIcon::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(EmoteWheelWI_C_AddBuffIcon, CallFunc_Less_IntInt_ReturnValue) == 0x000079, "Member 'EmoteWheelWI_C_AddBuffIcon::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(EmoteWheelWI_C_AddBuffIcon, CallFunc_Add_IntInt_ReturnValue) == 0x00007C, "Member 'EmoteWheelWI_C_AddBuffIcon::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(EmoteWheelWI_C_AddBuffIcon, CallFunc_AddChild_ReturnValue) == 0x000080, "Member 'EmoteWheelWI_C_AddBuffIcon::CallFunc_AddChild_ReturnValue' has a wrong offset!");
static_assert(offsetof(EmoteWheelWI_C_AddBuffIcon, CallFunc_SetDoublePropertyByName_Value_ImplicitCast) == 0x000088, "Member 'EmoteWheelWI_C_AddBuffIcon::CallFunc_SetDoublePropertyByName_Value_ImplicitCast' has a wrong offset!");

// Function EmoteWheelWI.EmoteWheelWI_C.ExecuteUbergraph_EmoteWheelWI
// 0x0208 (0x0208 - 0x0000)
struct EmoteWheelWI_C_ExecuteUbergraph_EmoteWheelWI final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECommonInputType                              CallFunc_GetOwningPlayerInputType_ReturnValue;     // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6[0x2];                                        // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable;                 // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E[0x2];                                        // 0x000E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x0020(0x0038)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_InDeltaTime;                          // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5C[0x4];                                       // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0060(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UEmoteWheelEntryWI_C*                   CallFunc_Create_ReturnValue;                       // 0x0068(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_AddChildToRadialMenu_Success;             // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_71[0x3];                                       // 0x0071(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Get_Selected_Option_OutIndex;             // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FUEmoteWheelEntryData                  CallFunc_Get_Selected_Option_Info;                 // 0x0078(0x0050)()
	bool                                          CallFunc_Get_Selected_Option_Valid;                // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C9[0x7];                                       // 0x00C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x00D0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 K2Node_ClassDynamicCast_AsGA_Montage_Emote;        // 0x00D8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ClassDynamicCast_bSuccess;                  // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E1[0x3];                                       // 0x00E1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Get_Selected_Option_OutIndex_1;           // 0x00E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FUEmoteWheelEntryData                  CallFunc_Get_Selected_Option_Info_1;               // 0x00E8(0x0050)()
	bool                                          CallFunc_Get_Selected_Option_Valid_1;              // 0x0138(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0139(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_13A[0x6];                                      // 0x013A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue_1;            // 0x0140(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UEmoteWheelEntryWI_C*                   CallFunc_Create_ReturnValue_1;                     // 0x0148(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable;                       // 0x0150(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_AddChildToRadialMenu_Success_1;           // 0x0151(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_152[0x6];                                      // 0x0152(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue_1;        // 0x0158(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue_2;        // 0x0160(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsActorDead_Return;                       // 0x0168(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_169[0x7];                                      // 0x0169(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue_3;        // 0x0170(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue_4;        // 0x0178(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UCharacterEmoteComponent*               CallFunc_GetComponentByClass_ReturnValue;          // 0x0180(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FUEmoteWheelEntryData                  CallFunc_Array_Get_Item;                           // 0x0188(0x0050)()
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x01D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x01DC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1DD[0x3];                                      // 0x01DD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x01E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E4[0x4];                                      // 0x01E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue_5;        // 0x01E8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APlayerControllerJP_MatchBP_C*          K2Node_DynamicCast_AsPlayer_Controller_JP_Match_BP; // 0x01F0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x01F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1F9[0x7];                                      // 0x01F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue_6;        // 0x0200(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(EmoteWheelWI_C_ExecuteUbergraph_EmoteWheelWI) == 0x000008, "Wrong alignment on EmoteWheelWI_C_ExecuteUbergraph_EmoteWheelWI");
static_assert(sizeof(EmoteWheelWI_C_ExecuteUbergraph_EmoteWheelWI) == 0x000208, "Wrong size on EmoteWheelWI_C_ExecuteUbergraph_EmoteWheelWI");
static_assert(offsetof(EmoteWheelWI_C_ExecuteUbergraph_EmoteWheelWI, EntryPoint) == 0x000000, "Member 'EmoteWheelWI_C_ExecuteUbergraph_EmoteWheelWI::EntryPoint' has a wrong offset!");
static_assert(offsetof(EmoteWheelWI_C_ExecuteUbergraph_EmoteWheelWI, CallFunc_GetOwningPlayerInputType_ReturnValue) == 0x000004, "Member 'EmoteWheelWI_C_ExecuteUbergraph_EmoteWheelWI::CallFunc_GetOwningPlayerInputType_ReturnValue' has a wrong offset!");
static_assert(offsetof(EmoteWheelWI_C_ExecuteUbergraph_EmoteWheelWI, K2Node_SwitchEnum_CmpSuccess) == 0x000005, "Member 'EmoteWheelWI_C_ExecuteUbergraph_EmoteWheelWI::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(EmoteWheelWI_C_ExecuteUbergraph_EmoteWheelWI, Temp_int_Variable) == 0x000008, "Member 'EmoteWheelWI_C_ExecuteUbergraph_EmoteWheelWI::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(EmoteWheelWI_C_ExecuteUbergraph_EmoteWheelWI, Temp_bool_Has_Been_Initd_Variable) == 0x00000C, "Member 'EmoteWheelWI_C_ExecuteUbergraph_EmoteWheelWI::Temp_bool_Has_Been_Initd_Variable' has a wrong offset!");
static_assert(offsetof(EmoteWheelWI_C_ExecuteUbergraph_EmoteWheelWI, CallFunc_LessEqual_IntInt_ReturnValue) == 0x00000D, "Member 'EmoteWheelWI_C_ExecuteUbergraph_EmoteWheelWI::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(EmoteWheelWI_C_ExecuteUbergraph_EmoteWheelWI, CallFunc_Add_IntInt_ReturnValue) == 0x000010, "Member 'EmoteWheelWI_C_ExecuteUbergraph_EmoteWheelWI::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(EmoteWheelWI_C_ExecuteUbergraph_EmoteWheelWI, Temp_int_Loop_Counter_Variable) == 0x000014, "Member 'EmoteWheelWI_C_ExecuteUbergraph_EmoteWheelWI::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(EmoteWheelWI_C_ExecuteUbergraph_EmoteWheelWI, CallFunc_Add_IntInt_ReturnValue_1) == 0x000018, "Member 'EmoteWheelWI_C_ExecuteUbergraph_EmoteWheelWI::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(EmoteWheelWI_C_ExecuteUbergraph_EmoteWheelWI, Temp_int_Array_Index_Variable) == 0x00001C, "Member 'EmoteWheelWI_C_ExecuteUbergraph_EmoteWheelWI::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(EmoteWheelWI_C_ExecuteUbergraph_EmoteWheelWI, K2Node_Event_MyGeometry) == 0x000020, "Member 'EmoteWheelWI_C_ExecuteUbergraph_EmoteWheelWI::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(EmoteWheelWI_C_ExecuteUbergraph_EmoteWheelWI, K2Node_Event_InDeltaTime) == 0x000058, "Member 'EmoteWheelWI_C_ExecuteUbergraph_EmoteWheelWI::K2Node_Event_InDeltaTime' has a wrong offset!");
static_assert(offsetof(EmoteWheelWI_C_ExecuteUbergraph_EmoteWheelWI, CallFunc_GetOwningPlayer_ReturnValue) == 0x000060, "Member 'EmoteWheelWI_C_ExecuteUbergraph_EmoteWheelWI::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(EmoteWheelWI_C_ExecuteUbergraph_EmoteWheelWI, CallFunc_Create_ReturnValue) == 0x000068, "Member 'EmoteWheelWI_C_ExecuteUbergraph_EmoteWheelWI::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(EmoteWheelWI_C_ExecuteUbergraph_EmoteWheelWI, CallFunc_AddChildToRadialMenu_Success) == 0x000070, "Member 'EmoteWheelWI_C_ExecuteUbergraph_EmoteWheelWI::CallFunc_AddChildToRadialMenu_Success' has a wrong offset!");
static_assert(offsetof(EmoteWheelWI_C_ExecuteUbergraph_EmoteWheelWI, CallFunc_Get_Selected_Option_OutIndex) == 0x000074, "Member 'EmoteWheelWI_C_ExecuteUbergraph_EmoteWheelWI::CallFunc_Get_Selected_Option_OutIndex' has a wrong offset!");
static_assert(offsetof(EmoteWheelWI_C_ExecuteUbergraph_EmoteWheelWI, CallFunc_Get_Selected_Option_Info) == 0x000078, "Member 'EmoteWheelWI_C_ExecuteUbergraph_EmoteWheelWI::CallFunc_Get_Selected_Option_Info' has a wrong offset!");
static_assert(offsetof(EmoteWheelWI_C_ExecuteUbergraph_EmoteWheelWI, CallFunc_Get_Selected_Option_Valid) == 0x0000C8, "Member 'EmoteWheelWI_C_ExecuteUbergraph_EmoteWheelWI::CallFunc_Get_Selected_Option_Valid' has a wrong offset!");
static_assert(offsetof(EmoteWheelWI_C_ExecuteUbergraph_EmoteWheelWI, CallFunc_GetPlayerController_ReturnValue) == 0x0000D0, "Member 'EmoteWheelWI_C_ExecuteUbergraph_EmoteWheelWI::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(EmoteWheelWI_C_ExecuteUbergraph_EmoteWheelWI, K2Node_ClassDynamicCast_AsGA_Montage_Emote) == 0x0000D8, "Member 'EmoteWheelWI_C_ExecuteUbergraph_EmoteWheelWI::K2Node_ClassDynamicCast_AsGA_Montage_Emote' has a wrong offset!");
static_assert(offsetof(EmoteWheelWI_C_ExecuteUbergraph_EmoteWheelWI, K2Node_ClassDynamicCast_bSuccess) == 0x0000E0, "Member 'EmoteWheelWI_C_ExecuteUbergraph_EmoteWheelWI::K2Node_ClassDynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(EmoteWheelWI_C_ExecuteUbergraph_EmoteWheelWI, CallFunc_Get_Selected_Option_OutIndex_1) == 0x0000E4, "Member 'EmoteWheelWI_C_ExecuteUbergraph_EmoteWheelWI::CallFunc_Get_Selected_Option_OutIndex_1' has a wrong offset!");
static_assert(offsetof(EmoteWheelWI_C_ExecuteUbergraph_EmoteWheelWI, CallFunc_Get_Selected_Option_Info_1) == 0x0000E8, "Member 'EmoteWheelWI_C_ExecuteUbergraph_EmoteWheelWI::CallFunc_Get_Selected_Option_Info_1' has a wrong offset!");
static_assert(offsetof(EmoteWheelWI_C_ExecuteUbergraph_EmoteWheelWI, CallFunc_Get_Selected_Option_Valid_1) == 0x000138, "Member 'EmoteWheelWI_C_ExecuteUbergraph_EmoteWheelWI::CallFunc_Get_Selected_Option_Valid_1' has a wrong offset!");
static_assert(offsetof(EmoteWheelWI_C_ExecuteUbergraph_EmoteWheelWI, K2Node_Event_IsDesignTime) == 0x000139, "Member 'EmoteWheelWI_C_ExecuteUbergraph_EmoteWheelWI::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(EmoteWheelWI_C_ExecuteUbergraph_EmoteWheelWI, CallFunc_GetOwningPlayer_ReturnValue_1) == 0x000140, "Member 'EmoteWheelWI_C_ExecuteUbergraph_EmoteWheelWI::CallFunc_GetOwningPlayer_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(EmoteWheelWI_C_ExecuteUbergraph_EmoteWheelWI, CallFunc_Create_ReturnValue_1) == 0x000148, "Member 'EmoteWheelWI_C_ExecuteUbergraph_EmoteWheelWI::CallFunc_Create_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(EmoteWheelWI_C_ExecuteUbergraph_EmoteWheelWI, Temp_bool_IsClosed_Variable) == 0x000150, "Member 'EmoteWheelWI_C_ExecuteUbergraph_EmoteWheelWI::Temp_bool_IsClosed_Variable' has a wrong offset!");
static_assert(offsetof(EmoteWheelWI_C_ExecuteUbergraph_EmoteWheelWI, CallFunc_AddChildToRadialMenu_Success_1) == 0x000151, "Member 'EmoteWheelWI_C_ExecuteUbergraph_EmoteWheelWI::CallFunc_AddChildToRadialMenu_Success_1' has a wrong offset!");
static_assert(offsetof(EmoteWheelWI_C_ExecuteUbergraph_EmoteWheelWI, CallFunc_GetPlayerController_ReturnValue_1) == 0x000158, "Member 'EmoteWheelWI_C_ExecuteUbergraph_EmoteWheelWI::CallFunc_GetPlayerController_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(EmoteWheelWI_C_ExecuteUbergraph_EmoteWheelWI, CallFunc_GetPlayerController_ReturnValue_2) == 0x000160, "Member 'EmoteWheelWI_C_ExecuteUbergraph_EmoteWheelWI::CallFunc_GetPlayerController_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(EmoteWheelWI_C_ExecuteUbergraph_EmoteWheelWI, CallFunc_IsActorDead_Return) == 0x000168, "Member 'EmoteWheelWI_C_ExecuteUbergraph_EmoteWheelWI::CallFunc_IsActorDead_Return' has a wrong offset!");
static_assert(offsetof(EmoteWheelWI_C_ExecuteUbergraph_EmoteWheelWI, CallFunc_GetPlayerController_ReturnValue_3) == 0x000170, "Member 'EmoteWheelWI_C_ExecuteUbergraph_EmoteWheelWI::CallFunc_GetPlayerController_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(EmoteWheelWI_C_ExecuteUbergraph_EmoteWheelWI, CallFunc_GetPlayerController_ReturnValue_4) == 0x000178, "Member 'EmoteWheelWI_C_ExecuteUbergraph_EmoteWheelWI::CallFunc_GetPlayerController_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(EmoteWheelWI_C_ExecuteUbergraph_EmoteWheelWI, CallFunc_GetComponentByClass_ReturnValue) == 0x000180, "Member 'EmoteWheelWI_C_ExecuteUbergraph_EmoteWheelWI::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(EmoteWheelWI_C_ExecuteUbergraph_EmoteWheelWI, CallFunc_Array_Get_Item) == 0x000188, "Member 'EmoteWheelWI_C_ExecuteUbergraph_EmoteWheelWI::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(EmoteWheelWI_C_ExecuteUbergraph_EmoteWheelWI, CallFunc_Array_Length_ReturnValue) == 0x0001D8, "Member 'EmoteWheelWI_C_ExecuteUbergraph_EmoteWheelWI::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(EmoteWheelWI_C_ExecuteUbergraph_EmoteWheelWI, CallFunc_Less_IntInt_ReturnValue) == 0x0001DC, "Member 'EmoteWheelWI_C_ExecuteUbergraph_EmoteWheelWI::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(EmoteWheelWI_C_ExecuteUbergraph_EmoteWheelWI, CallFunc_Array_Add_ReturnValue) == 0x0001E0, "Member 'EmoteWheelWI_C_ExecuteUbergraph_EmoteWheelWI::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(EmoteWheelWI_C_ExecuteUbergraph_EmoteWheelWI, CallFunc_GetPlayerController_ReturnValue_5) == 0x0001E8, "Member 'EmoteWheelWI_C_ExecuteUbergraph_EmoteWheelWI::CallFunc_GetPlayerController_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(EmoteWheelWI_C_ExecuteUbergraph_EmoteWheelWI, K2Node_DynamicCast_AsPlayer_Controller_JP_Match_BP) == 0x0001F0, "Member 'EmoteWheelWI_C_ExecuteUbergraph_EmoteWheelWI::K2Node_DynamicCast_AsPlayer_Controller_JP_Match_BP' has a wrong offset!");
static_assert(offsetof(EmoteWheelWI_C_ExecuteUbergraph_EmoteWheelWI, K2Node_DynamicCast_bSuccess) == 0x0001F8, "Member 'EmoteWheelWI_C_ExecuteUbergraph_EmoteWheelWI::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(EmoteWheelWI_C_ExecuteUbergraph_EmoteWheelWI, CallFunc_GetPlayerController_ReturnValue_6) == 0x000200, "Member 'EmoteWheelWI_C_ExecuteUbergraph_EmoteWheelWI::CallFunc_GetPlayerController_ReturnValue_6' has a wrong offset!");

// Function EmoteWheelWI.EmoteWheelWI_C.Get Selected Option
// 0x0170 (0x0170 - 0x0000)
struct EmoteWheelWI_C_Get_Selected_Option final
{
public:
	int32                                         OutIndex;                                          // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FUEmoteWheelEntryData                  Info;                                              // 0x0008(0x0050)(Parm, OutParm)
	bool                                          Valid;                                             // 0x0058(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FUEmoteWheelEntryData                  K2Node_MakeStruct_UEmoteWheelEntryData;            // 0x0060(0x0050)()
	bool                                          Temp_bool_Variable;                                // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B1[0x3];                                       // 0x00B1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetCurrentIndex_Index;                    // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetCurrentIndex_Valid;                    // 0x00BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_BD[0x3];                                       // 0x00BD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FUEmoteWheelEntryData                  CallFunc_Array_Get_Item;                           // 0x00C0(0x0050)()
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_111[0x7];                                      // 0x0111(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FUEmoteWheelEntryData                  K2Node_Select_Default;                             // 0x0118(0x0050)()
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0168(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(EmoteWheelWI_C_Get_Selected_Option) == 0x000008, "Wrong alignment on EmoteWheelWI_C_Get_Selected_Option");
static_assert(sizeof(EmoteWheelWI_C_Get_Selected_Option) == 0x000170, "Wrong size on EmoteWheelWI_C_Get_Selected_Option");
static_assert(offsetof(EmoteWheelWI_C_Get_Selected_Option, OutIndex) == 0x000000, "Member 'EmoteWheelWI_C_Get_Selected_Option::OutIndex' has a wrong offset!");
static_assert(offsetof(EmoteWheelWI_C_Get_Selected_Option, Info) == 0x000008, "Member 'EmoteWheelWI_C_Get_Selected_Option::Info' has a wrong offset!");
static_assert(offsetof(EmoteWheelWI_C_Get_Selected_Option, Valid) == 0x000058, "Member 'EmoteWheelWI_C_Get_Selected_Option::Valid' has a wrong offset!");
static_assert(offsetof(EmoteWheelWI_C_Get_Selected_Option, K2Node_MakeStruct_UEmoteWheelEntryData) == 0x000060, "Member 'EmoteWheelWI_C_Get_Selected_Option::K2Node_MakeStruct_UEmoteWheelEntryData' has a wrong offset!");
static_assert(offsetof(EmoteWheelWI_C_Get_Selected_Option, Temp_bool_Variable) == 0x0000B0, "Member 'EmoteWheelWI_C_Get_Selected_Option::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(EmoteWheelWI_C_Get_Selected_Option, CallFunc_Array_Length_ReturnValue) == 0x0000B4, "Member 'EmoteWheelWI_C_Get_Selected_Option::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(EmoteWheelWI_C_Get_Selected_Option, CallFunc_GetCurrentIndex_Index) == 0x0000B8, "Member 'EmoteWheelWI_C_Get_Selected_Option::CallFunc_GetCurrentIndex_Index' has a wrong offset!");
static_assert(offsetof(EmoteWheelWI_C_Get_Selected_Option, CallFunc_GetCurrentIndex_Valid) == 0x0000BC, "Member 'EmoteWheelWI_C_Get_Selected_Option::CallFunc_GetCurrentIndex_Valid' has a wrong offset!");
static_assert(offsetof(EmoteWheelWI_C_Get_Selected_Option, CallFunc_Array_Get_Item) == 0x0000C0, "Member 'EmoteWheelWI_C_Get_Selected_Option::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(EmoteWheelWI_C_Get_Selected_Option, CallFunc_Less_IntInt_ReturnValue) == 0x000110, "Member 'EmoteWheelWI_C_Get_Selected_Option::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(EmoteWheelWI_C_Get_Selected_Option, K2Node_Select_Default) == 0x000118, "Member 'EmoteWheelWI_C_Get_Selected_Option::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(EmoteWheelWI_C_Get_Selected_Option, CallFunc_BooleanAND_ReturnValue) == 0x000168, "Member 'EmoteWheelWI_C_Get_Selected_Option::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function EmoteWheelWI.EmoteWheelWI_C.GetDamageMultiplierValues
// 0x0020 (0x0020 - 0x0000)
struct EmoteWheelWI_C_GetDamageMultiplierValues final
{
public:
	class UItemInstance*                          ItemInstance;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          HasMultiplier;                                     // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Damage_Multiplier;                                 // 0x000C(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	const class UItemAction_DamageMultiplierStructures* CallFunc_FindActionByType_ReturnValue;             // 0x0010(0x0008)(ConstParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(EmoteWheelWI_C_GetDamageMultiplierValues) == 0x000008, "Wrong alignment on EmoteWheelWI_C_GetDamageMultiplierValues");
static_assert(sizeof(EmoteWheelWI_C_GetDamageMultiplierValues) == 0x000020, "Wrong size on EmoteWheelWI_C_GetDamageMultiplierValues");
static_assert(offsetof(EmoteWheelWI_C_GetDamageMultiplierValues, ItemInstance) == 0x000000, "Member 'EmoteWheelWI_C_GetDamageMultiplierValues::ItemInstance' has a wrong offset!");
static_assert(offsetof(EmoteWheelWI_C_GetDamageMultiplierValues, HasMultiplier) == 0x000008, "Member 'EmoteWheelWI_C_GetDamageMultiplierValues::HasMultiplier' has a wrong offset!");
static_assert(offsetof(EmoteWheelWI_C_GetDamageMultiplierValues, Damage_Multiplier) == 0x00000C, "Member 'EmoteWheelWI_C_GetDamageMultiplierValues::Damage_Multiplier' has a wrong offset!");
static_assert(offsetof(EmoteWheelWI_C_GetDamageMultiplierValues, CallFunc_FindActionByType_ReturnValue) == 0x000010, "Member 'EmoteWheelWI_C_GetDamageMultiplierValues::CallFunc_FindActionByType_ReturnValue' has a wrong offset!");
static_assert(offsetof(EmoteWheelWI_C_GetDamageMultiplierValues, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'EmoteWheelWI_C_GetDamageMultiplierValues::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function EmoteWheelWI.EmoteWheelWI_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct EmoteWheelWI_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(EmoteWheelWI_C_PreConstruct) == 0x000001, "Wrong alignment on EmoteWheelWI_C_PreConstruct");
static_assert(sizeof(EmoteWheelWI_C_PreConstruct) == 0x000001, "Wrong size on EmoteWheelWI_C_PreConstruct");
static_assert(offsetof(EmoteWheelWI_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'EmoteWheelWI_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function EmoteWheelWI.EmoteWheelWI_C.Tick
// 0x003C (0x003C - 0x0000)
struct EmoteWheelWI_C_Tick final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         InDeltaTime;                                       // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(EmoteWheelWI_C_Tick) == 0x000004, "Wrong alignment on EmoteWheelWI_C_Tick");
static_assert(sizeof(EmoteWheelWI_C_Tick) == 0x00003C, "Wrong size on EmoteWheelWI_C_Tick");
static_assert(offsetof(EmoteWheelWI_C_Tick, MyGeometry) == 0x000000, "Member 'EmoteWheelWI_C_Tick::MyGeometry' has a wrong offset!");
static_assert(offsetof(EmoteWheelWI_C_Tick, InDeltaTime) == 0x000038, "Member 'EmoteWheelWI_C_Tick::InDeltaTime' has a wrong offset!");

}

