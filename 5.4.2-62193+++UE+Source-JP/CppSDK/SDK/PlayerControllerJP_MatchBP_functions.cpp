#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PlayerControllerJP_MatchBP

#include "Basic.hpp"

#include "PlayerControllerJP_MatchBP_classes.hpp"
#include "PlayerControllerJP_MatchBP_parameters.hpp"


namespace SDK
{

// Function PlayerControllerJP_MatchBP.PlayerControllerJP_MatchBP_C.ActivateVoiceChatUponDeath
// (BlueprintCallable, BlueprintEvent)

void APlayerControllerJP_MatchBP_C::ActivateVoiceChatUponDeath()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerControllerJP_MatchBP_C", "ActivateVoiceChatUponDeath");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PlayerControllerJP_MatchBP.PlayerControllerJP_MatchBP_C.AddSelfToTwitchVoteManager
// (Public, BlueprintCallable, BlueprintEvent)

void APlayerControllerJP_MatchBP_C::AddSelfToTwitchVoteManager()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerControllerJP_MatchBP_C", "AddSelfToTwitchVoteManager");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PlayerControllerJP_MatchBP.PlayerControllerJP_MatchBP_C.AddToTwitchVoteManager
// (BlueprintCallable, BlueprintEvent)

void APlayerControllerJP_MatchBP_C::AddToTwitchVoteManager()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerControllerJP_MatchBP_C", "AddToTwitchVoteManager");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PlayerControllerJP_MatchBP.PlayerControllerJP_MatchBP_C.ApplyHighlight
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_HouseEssential_Cube_C*        NewParam                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void APlayerControllerJP_MatchBP_C::ApplyHighlight(class ABP_HouseEssential_Cube_C* NewParam)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerControllerJP_MatchBP_C", "ApplyHighlight");

	Params::PlayerControllerJP_MatchBP_C_ApplyHighlight Parms{};

	Parms.NewParam = NewParam;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PlayerControllerJP_MatchBP.PlayerControllerJP_MatchBP_C.ApplyStamina
// (Exec, Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  StaminaAmount                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void APlayerControllerJP_MatchBP_C::ApplyStamina(double StaminaAmount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerControllerJP_MatchBP_C", "ApplyStamina");

	Params::PlayerControllerJP_MatchBP_C_ApplyStamina Parms{};

	Parms.StaminaAmount = StaminaAmount;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PlayerControllerJP_MatchBP.PlayerControllerJP_MatchBP_C.CheatBecomeSpectator
// (Exec, Public, BlueprintCallable, BlueprintEvent)

void APlayerControllerJP_MatchBP_C::CheatBecomeSpectator()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerControllerJP_MatchBP_C", "CheatBecomeSpectator");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PlayerControllerJP_MatchBP.PlayerControllerJP_MatchBP_C.Cheattoggleoutlines
// (Exec, Public, BlueprintCallable, BlueprintEvent)

void APlayerControllerJP_MatchBP_C::Cheattoggleoutlines()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerControllerJP_MatchBP_C", "Cheattoggleoutlines");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PlayerControllerJP_MatchBP.PlayerControllerJP_MatchBP_C.CheckIfProximityVoiceChatWasPressed
// (Public, BlueprintCallable, BlueprintEvent)

void APlayerControllerJP_MatchBP_C::CheckIfProximityVoiceChatWasPressed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerControllerJP_MatchBP_C", "CheckIfProximityVoiceChatWasPressed");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PlayerControllerJP_MatchBP.PlayerControllerJP_MatchBP_C.CheckIfProximityVoiceChatWasReleased
// (Public, BlueprintCallable, BlueprintEvent)

void APlayerControllerJP_MatchBP_C::CheckIfProximityVoiceChatWasReleased()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerControllerJP_MatchBP_C", "CheckIfProximityVoiceChatWasReleased");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PlayerControllerJP_MatchBP.PlayerControllerJP_MatchBP_C.CheckIfTeamVoiceChatWasPressed
// (Public, BlueprintCallable, BlueprintEvent)

void APlayerControllerJP_MatchBP_C::CheckIfTeamVoiceChatWasPressed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerControllerJP_MatchBP_C", "CheckIfTeamVoiceChatWasPressed");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PlayerControllerJP_MatchBP.PlayerControllerJP_MatchBP_C.CheckIfTeamVoiceChatWasReleased
// (Public, BlueprintCallable, BlueprintEvent)

void APlayerControllerJP_MatchBP_C::CheckIfTeamVoiceChatWasReleased()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerControllerJP_MatchBP_C", "CheckIfTeamVoiceChatWasReleased");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PlayerControllerJP_MatchBP.PlayerControllerJP_MatchBP_C.ClearChat
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void APlayerControllerJP_MatchBP_C::ClearChat()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerControllerJP_MatchBP_C", "ClearChat");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PlayerControllerJP_MatchBP.PlayerControllerJP_MatchBP_C.ClearChatCheat
// (Exec, Public, BlueprintCallable, BlueprintEvent)

void APlayerControllerJP_MatchBP_C::ClearChatCheat()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerControllerJP_MatchBP_C", "ClearChatCheat");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PlayerControllerJP_MatchBP.PlayerControllerJP_MatchBP_C.DisableVans
// (Exec, Public, BlueprintCallable, BlueprintEvent)

void APlayerControllerJP_MatchBP_C::DisableVans()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerControllerJP_MatchBP_C", "DisableVans");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PlayerControllerJP_MatchBP.PlayerControllerJP_MatchBP_C.EndBowie
// (Exec, Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void APlayerControllerJP_MatchBP_C::EndBowie()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerControllerJP_MatchBP_C", "EndBowie");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PlayerControllerJP_MatchBP.PlayerControllerJP_MatchBP_C.EndlessDay
// (Exec, Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void APlayerControllerJP_MatchBP_C::EndlessDay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerControllerJP_MatchBP_C", "EndlessDay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PlayerControllerJP_MatchBP.PlayerControllerJP_MatchBP_C.EndProximityVoiceChat
// (Public, BlueprintCallable, BlueprintEvent)

void APlayerControllerJP_MatchBP_C::EndProximityVoiceChat()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerControllerJP_MatchBP_C", "EndProximityVoiceChat");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PlayerControllerJP_MatchBP.PlayerControllerJP_MatchBP_C.EndTeamVoiceChat
// (Public, BlueprintCallable, BlueprintEvent)

void APlayerControllerJP_MatchBP_C::EndTeamVoiceChat()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerControllerJP_MatchBP_C", "EndTeamVoiceChat");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PlayerControllerJP_MatchBP.PlayerControllerJP_MatchBP_C.ExecuteCommandOnServer
// (Exec, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           Command                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void APlayerControllerJP_MatchBP_C::ExecuteCommandOnServer(const class FString& Command)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerControllerJP_MatchBP_C", "ExecuteCommandOnServer");

	Params::PlayerControllerJP_MatchBP_C_ExecuteCommandOnServer Parms{};

	Parms.Command = std::move(Command);

	UObject::ProcessEvent(Func, &Parms);
}


// Function PlayerControllerJP_MatchBP.PlayerControllerJP_MatchBP_C.ExecuteUbergraph_PlayerControllerJP_MatchBP
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void APlayerControllerJP_MatchBP_C::ExecuteUbergraph_PlayerControllerJP_MatchBP(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerControllerJP_MatchBP_C", "ExecuteUbergraph_PlayerControllerJP_MatchBP");

	Params::PlayerControllerJP_MatchBP_C_ExecuteUbergraph_PlayerControllerJP_MatchBP Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PlayerControllerJP_MatchBP.PlayerControllerJP_MatchBP_C.GetFirstVisibleChatWidget
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UWI_Chat_C*                       Return                                                 (Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void APlayerControllerJP_MatchBP_C::GetFirstVisibleChatWidget(class UWI_Chat_C** Return)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerControllerJP_MatchBP_C", "GetFirstVisibleChatWidget");

	Params::PlayerControllerJP_MatchBP_C_GetFirstVisibleChatWidget Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Return != nullptr)
		*Return = Parms.Return;
}


// Function PlayerControllerJP_MatchBP.PlayerControllerJP_MatchBP_C.GiveAmmoToPlayer
// (Exec, Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void APlayerControllerJP_MatchBP_C::GiveAmmoToPlayer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerControllerJP_MatchBP_C", "GiveAmmoToPlayer");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PlayerControllerJP_MatchBP.PlayerControllerJP_MatchBP_C.Hide Water Tap Marker
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void APlayerControllerJP_MatchBP_C::Hide_Water_Tap_Marker()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerControllerJP_MatchBP_C", "Hide Water Tap Marker");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PlayerControllerJP_MatchBP.PlayerControllerJP_MatchBP_C.HideHUDAndWidgets
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void APlayerControllerJP_MatchBP_C::HideHUDAndWidgets()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerControllerJP_MatchBP_C", "HideHUDAndWidgets");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PlayerControllerJP_MatchBP.PlayerControllerJP_MatchBP_C.HideIndicatorsAndChat
// (Public, BlueprintCallable, BlueprintEvent)

void APlayerControllerJP_MatchBP_C::HideIndicatorsAndChat()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerControllerJP_MatchBP_C", "HideIndicatorsAndChat");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PlayerControllerJP_MatchBP.PlayerControllerJP_MatchBP_C.IndicatorsHidden__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)

void APlayerControllerJP_MatchBP_C::IndicatorsHidden__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerControllerJP_MatchBP_C", "IndicatorsHidden__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PlayerControllerJP_MatchBP.PlayerControllerJP_MatchBP_C.InpActEvt_IA_ActivateVoice_K2Node_EnhancedInputActionEvent_1
// (BlueprintEvent)
// Parameters:
// struct FInputActionValue                ActionValue                                            (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
// float                                   ElapsedTime                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   TriggeredTime                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UInputAction*                     SourceAction                                           (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void APlayerControllerJP_MatchBP_C::InpActEvt_IA_ActivateVoice_K2Node_EnhancedInputActionEvent_1(const struct FInputActionValue& ActionValue, float ElapsedTime, float TriggeredTime, const class UInputAction* SourceAction)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerControllerJP_MatchBP_C", "InpActEvt_IA_ActivateVoice_K2Node_EnhancedInputActionEvent_1");

	Params::PlayerControllerJP_MatchBP_C_InpActEvt_IA_ActivateVoice_K2Node_EnhancedInputActionEvent_1 Parms{};

	Parms.ActionValue = std::move(ActionValue);
	Parms.ElapsedTime = ElapsedTime;
	Parms.TriggeredTime = TriggeredTime;
	Parms.SourceAction = SourceAction;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PlayerControllerJP_MatchBP.PlayerControllerJP_MatchBP_C.InpActEvt_IA_ActivateVoiceTeam_K2Node_EnhancedInputActionEvent_0
// (BlueprintEvent)
// Parameters:
// struct FInputActionValue                ActionValue                                            (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
// float                                   ElapsedTime                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   TriggeredTime                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UInputAction*                     SourceAction                                           (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void APlayerControllerJP_MatchBP_C::InpActEvt_IA_ActivateVoiceTeam_K2Node_EnhancedInputActionEvent_0(const struct FInputActionValue& ActionValue, float ElapsedTime, float TriggeredTime, const class UInputAction* SourceAction)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerControllerJP_MatchBP_C", "InpActEvt_IA_ActivateVoiceTeam_K2Node_EnhancedInputActionEvent_0");

	Params::PlayerControllerJP_MatchBP_C_InpActEvt_IA_ActivateVoiceTeam_K2Node_EnhancedInputActionEvent_0 Parms{};

	Parms.ActionValue = std::move(ActionValue);
	Parms.ElapsedTime = ElapsedTime;
	Parms.TriggeredTime = TriggeredTime;
	Parms.SourceAction = SourceAction;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PlayerControllerJP_MatchBP.PlayerControllerJP_MatchBP_C.InpActEvt_IA_FocusTextChat_K2Node_EnhancedInputActionEvent_2
// (BlueprintEvent)
// Parameters:
// struct FInputActionValue                ActionValue                                            (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
// float                                   ElapsedTime                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   TriggeredTime                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UInputAction*                     SourceAction                                           (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void APlayerControllerJP_MatchBP_C::InpActEvt_IA_FocusTextChat_K2Node_EnhancedInputActionEvent_2(const struct FInputActionValue& ActionValue, float ElapsedTime, float TriggeredTime, const class UInputAction* SourceAction)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerControllerJP_MatchBP_C", "InpActEvt_IA_FocusTextChat_K2Node_EnhancedInputActionEvent_2");

	Params::PlayerControllerJP_MatchBP_C_InpActEvt_IA_FocusTextChat_K2Node_EnhancedInputActionEvent_2 Parms{};

	Parms.ActionValue = std::move(ActionValue);
	Parms.ElapsedTime = ElapsedTime;
	Parms.TriggeredTime = TriggeredTime;
	Parms.SourceAction = SourceAction;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PlayerControllerJP_MatchBP.PlayerControllerJP_MatchBP_C.InpActEvt_IA_HideUI_K2Node_EnhancedInputActionEvent_7
// (BlueprintEvent)
// Parameters:
// struct FInputActionValue                ActionValue                                            (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
// float                                   ElapsedTime                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   TriggeredTime                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UInputAction*                     SourceAction                                           (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void APlayerControllerJP_MatchBP_C::InpActEvt_IA_HideUI_K2Node_EnhancedInputActionEvent_7(const struct FInputActionValue& ActionValue, float ElapsedTime, float TriggeredTime, const class UInputAction* SourceAction)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerControllerJP_MatchBP_C", "InpActEvt_IA_HideUI_K2Node_EnhancedInputActionEvent_7");

	Params::PlayerControllerJP_MatchBP_C_InpActEvt_IA_HideUI_K2Node_EnhancedInputActionEvent_7 Parms{};

	Parms.ActionValue = std::move(ActionValue);
	Parms.ElapsedTime = ElapsedTime;
	Parms.TriggeredTime = TriggeredTime;
	Parms.SourceAction = SourceAction;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PlayerControllerJP_MatchBP.PlayerControllerJP_MatchBP_C.InpActEvt_IA_ItemWheel_K2Node_EnhancedInputActionEvent_3
// (BlueprintEvent)
// Parameters:
// struct FInputActionValue                ActionValue                                            (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
// float                                   ElapsedTime                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   TriggeredTime                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UInputAction*                     SourceAction                                           (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void APlayerControllerJP_MatchBP_C::InpActEvt_IA_ItemWheel_K2Node_EnhancedInputActionEvent_3(const struct FInputActionValue& ActionValue, float ElapsedTime, float TriggeredTime, const class UInputAction* SourceAction)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerControllerJP_MatchBP_C", "InpActEvt_IA_ItemWheel_K2Node_EnhancedInputActionEvent_3");

	Params::PlayerControllerJP_MatchBP_C_InpActEvt_IA_ItemWheel_K2Node_EnhancedInputActionEvent_3 Parms{};

	Parms.ActionValue = std::move(ActionValue);
	Parms.ElapsedTime = ElapsedTime;
	Parms.TriggeredTime = TriggeredTime;
	Parms.SourceAction = SourceAction;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PlayerControllerJP_MatchBP.PlayerControllerJP_MatchBP_C.InpActEvt_IA_ItemWheel_K2Node_EnhancedInputActionEvent_4
// (BlueprintEvent)
// Parameters:
// struct FInputActionValue                ActionValue                                            (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
// float                                   ElapsedTime                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   TriggeredTime                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UInputAction*                     SourceAction                                           (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void APlayerControllerJP_MatchBP_C::InpActEvt_IA_ItemWheel_K2Node_EnhancedInputActionEvent_4(const struct FInputActionValue& ActionValue, float ElapsedTime, float TriggeredTime, const class UInputAction* SourceAction)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerControllerJP_MatchBP_C", "InpActEvt_IA_ItemWheel_K2Node_EnhancedInputActionEvent_4");

	Params::PlayerControllerJP_MatchBP_C_InpActEvt_IA_ItemWheel_K2Node_EnhancedInputActionEvent_4 Parms{};

	Parms.ActionValue = std::move(ActionValue);
	Parms.ElapsedTime = ElapsedTime;
	Parms.TriggeredTime = TriggeredTime;
	Parms.SourceAction = SourceAction;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PlayerControllerJP_MatchBP.PlayerControllerJP_MatchBP_C.InpActEvt_IA_LookStickUI_K2Node_EnhancedInputActionEvent_5
// (BlueprintEvent)
// Parameters:
// struct FInputActionValue                ActionValue                                            (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
// float                                   ElapsedTime                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   TriggeredTime                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UInputAction*                     SourceAction                                           (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void APlayerControllerJP_MatchBP_C::InpActEvt_IA_LookStickUI_K2Node_EnhancedInputActionEvent_5(const struct FInputActionValue& ActionValue, float ElapsedTime, float TriggeredTime, const class UInputAction* SourceAction)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerControllerJP_MatchBP_C", "InpActEvt_IA_LookStickUI_K2Node_EnhancedInputActionEvent_5");

	Params::PlayerControllerJP_MatchBP_C_InpActEvt_IA_LookStickUI_K2Node_EnhancedInputActionEvent_5 Parms{};

	Parms.ActionValue = std::move(ActionValue);
	Parms.ElapsedTime = ElapsedTime;
	Parms.TriggeredTime = TriggeredTime;
	Parms.SourceAction = SourceAction;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PlayerControllerJP_MatchBP.PlayerControllerJP_MatchBP_C.InpActEvt_IA_LookStickUI_K2Node_EnhancedInputActionEvent_6
// (BlueprintEvent)
// Parameters:
// struct FInputActionValue                ActionValue                                            (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
// float                                   ElapsedTime                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   TriggeredTime                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UInputAction*                     SourceAction                                           (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void APlayerControllerJP_MatchBP_C::InpActEvt_IA_LookStickUI_K2Node_EnhancedInputActionEvent_6(const struct FInputActionValue& ActionValue, float ElapsedTime, float TriggeredTime, const class UInputAction* SourceAction)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerControllerJP_MatchBP_C", "InpActEvt_IA_LookStickUI_K2Node_EnhancedInputActionEvent_6");

	Params::PlayerControllerJP_MatchBP_C_InpActEvt_IA_LookStickUI_K2Node_EnhancedInputActionEvent_6 Parms{};

	Parms.ActionValue = std::move(ActionValue);
	Parms.ElapsedTime = ElapsedTime;
	Parms.TriggeredTime = TriggeredTime;
	Parms.SourceAction = SourceAction;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PlayerControllerJP_MatchBP.PlayerControllerJP_MatchBP_C.InpActEvt_NumPadFour_K2Node_InputKeyEvent_2
// (BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void APlayerControllerJP_MatchBP_C::InpActEvt_NumPadFour_K2Node_InputKeyEvent_2(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerControllerJP_MatchBP_C", "InpActEvt_NumPadFour_K2Node_InputKeyEvent_2");

	Params::PlayerControllerJP_MatchBP_C_InpActEvt_NumPadFour_K2Node_InputKeyEvent_2 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function PlayerControllerJP_MatchBP.PlayerControllerJP_MatchBP_C.InpActEvt_NumPadSeven_K2Node_InputKeyEvent_0
// (BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void APlayerControllerJP_MatchBP_C::InpActEvt_NumPadSeven_K2Node_InputKeyEvent_0(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerControllerJP_MatchBP_C", "InpActEvt_NumPadSeven_K2Node_InputKeyEvent_0");

	Params::PlayerControllerJP_MatchBP_C_InpActEvt_NumPadSeven_K2Node_InputKeyEvent_0 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function PlayerControllerJP_MatchBP.PlayerControllerJP_MatchBP_C.InpActEvt_O_K2Node_InputKeyEvent_1
// (BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void APlayerControllerJP_MatchBP_C::InpActEvt_O_K2Node_InputKeyEvent_1(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerControllerJP_MatchBP_C", "InpActEvt_O_K2Node_InputKeyEvent_1");

	Params::PlayerControllerJP_MatchBP_C_InpActEvt_O_K2Node_InputKeyEvent_1 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function PlayerControllerJP_MatchBP.PlayerControllerJP_MatchBP_C.InpActEvt_T_K2Node_InputDebugKeyEvent_1
// (BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
// struct FInputActionValue                ActionValue                                            (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)

void APlayerControllerJP_MatchBP_C::InpActEvt_T_K2Node_InputDebugKeyEvent_1(const struct FKey& Key, const struct FInputActionValue& ActionValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerControllerJP_MatchBP_C", "InpActEvt_T_K2Node_InputDebugKeyEvent_1");

	Params::PlayerControllerJP_MatchBP_C_InpActEvt_T_K2Node_InputDebugKeyEvent_1 Parms{};

	Parms.Key = std::move(Key);
	Parms.ActionValue = std::move(ActionValue);

	UObject::ProcessEvent(Func, &Parms);
}


// Function PlayerControllerJP_MatchBP.PlayerControllerJP_MatchBP_C.InpActEvt_Y_K2Node_InputDebugKeyEvent_0
// (BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
// struct FInputActionValue                ActionValue                                            (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)

void APlayerControllerJP_MatchBP_C::InpActEvt_Y_K2Node_InputDebugKeyEvent_0(const struct FKey& Key, const struct FInputActionValue& ActionValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerControllerJP_MatchBP_C", "InpActEvt_Y_K2Node_InputDebugKeyEvent_0");

	Params::PlayerControllerJP_MatchBP_C_InpActEvt_Y_K2Node_InputDebugKeyEvent_0 Parms{};

	Parms.Key = std::move(Key);
	Parms.ActionValue = std::move(ActionValue);

	UObject::ProcessEvent(Func, &Parms);
}


// Function PlayerControllerJP_MatchBP.PlayerControllerJP_MatchBP_C.InstantRespawnResources
// (Exec, Public, BlueprintCallable, BlueprintEvent)

void APlayerControllerJP_MatchBP_C::InstantRespawnResources()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerControllerJP_MatchBP_C", "InstantRespawnResources");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PlayerControllerJP_MatchBP.PlayerControllerJP_MatchBP_C.IntroHasFinished
// (Private, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    Active                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void APlayerControllerJP_MatchBP_C::IntroHasFinished(bool* Active)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerControllerJP_MatchBP_C", "IntroHasFinished");

	Params::PlayerControllerJP_MatchBP_C_IntroHasFinished Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Active != nullptr)
		*Active = Parms.Active;
}


// Function PlayerControllerJP_MatchBP.PlayerControllerJP_MatchBP_C.InventoryOpened__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)
// Parameters:
// class APlayerController*                PlayerController                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void APlayerControllerJP_MatchBP_C::InventoryOpened__DelegateSignature(class APlayerController* PlayerController)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerControllerJP_MatchBP_C", "InventoryOpened__DelegateSignature");

	Params::PlayerControllerJP_MatchBP_C_InventoryOpened__DelegateSignature Parms{};

	Parms.PlayerController = PlayerController;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PlayerControllerJP_MatchBP.PlayerControllerJP_MatchBP_C.IsHousesLoaded
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool APlayerControllerJP_MatchBP_C::IsHousesLoaded()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerControllerJP_MatchBP_C", "IsHousesLoaded");

	Params::PlayerControllerJP_MatchBP_C_IsHousesLoaded Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function PlayerControllerJP_MatchBP.PlayerControllerJP_MatchBP_C.IsPlayingAsResidentCharacter
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool APlayerControllerJP_MatchBP_C::IsPlayingAsResidentCharacter()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerControllerJP_MatchBP_C", "IsPlayingAsResidentCharacter");

	Params::PlayerControllerJP_MatchBP_C_IsPlayingAsResidentCharacter Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function PlayerControllerJP_MatchBP.PlayerControllerJP_MatchBP_C.IsTutorialSeen
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FText                             Title                                                  (BlueprintVisible, BlueprintReadOnly, Parm)
// bool                                    Already_Seen                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void APlayerControllerJP_MatchBP_C::IsTutorialSeen(const class FText& Title, bool* Already_Seen)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerControllerJP_MatchBP_C", "IsTutorialSeen");

	Params::PlayerControllerJP_MatchBP_C_IsTutorialSeen Parms{};

	Parms.Title = std::move(Title);

	UObject::ProcessEvent(Func, &Parms);

	if (Already_Seen != nullptr)
		*Already_Seen = Parms.Already_Seen;
}


// Function PlayerControllerJP_MatchBP.PlayerControllerJP_MatchBP_C.IsVoiceChatToggle
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool APlayerControllerJP_MatchBP_C::IsVoiceChatToggle()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerControllerJP_MatchBP_C", "IsVoiceChatToggle");

	Params::PlayerControllerJP_MatchBP_C_IsVoiceChatToggle Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function PlayerControllerJP_MatchBP.PlayerControllerJP_MatchBP_C.KillPlayer
// (Event, Protected, BlueprintEvent)

void APlayerControllerJP_MatchBP_C::KillPlayer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerControllerJP_MatchBP_C", "KillPlayer");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PlayerControllerJP_MatchBP.PlayerControllerJP_MatchBP_C.LocallySetViewTarget
// (Net, NetReliable, NetClient, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           NewViewTarget                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// float                                   BlendTime                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EViewTargetBlendFunction                BlendFunc                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void APlayerControllerJP_MatchBP_C::LocallySetViewTarget(class AActor* NewViewTarget, float BlendTime, EViewTargetBlendFunction BlendFunc)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerControllerJP_MatchBP_C", "LocallySetViewTarget");

	Params::PlayerControllerJP_MatchBP_C_LocallySetViewTarget Parms{};

	Parms.NewViewTarget = NewViewTarget;
	Parms.BlendTime = BlendTime;
	Parms.BlendFunc = BlendFunc;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PlayerControllerJP_MatchBP.PlayerControllerJP_MatchBP_C.LoginTwitch
// (Event, Public, BlueprintEvent)

void APlayerControllerJP_MatchBP_C::LoginTwitch()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerControllerJP_MatchBP_C", "LoginTwitch");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PlayerControllerJP_MatchBP.PlayerControllerJP_MatchBP_C.Multicast_Cheat_HideDeliveryWidget
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)

void APlayerControllerJP_MatchBP_C::Multicast_Cheat_HideDeliveryWidget()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerControllerJP_MatchBP_C", "Multicast_Cheat_HideDeliveryWidget");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PlayerControllerJP_MatchBP.PlayerControllerJP_MatchBP_C.MultiplyAttackDamage
// (Exec, Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  New_Attack_Damage_Multiplier                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void APlayerControllerJP_MatchBP_C::MultiplyAttackDamage(double New_Attack_Damage_Multiplier)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerControllerJP_MatchBP_C", "MultiplyAttackDamage");

	Params::PlayerControllerJP_MatchBP_C_MultiplyAttackDamage Parms{};

	Parms.New_Attack_Damage_Multiplier = New_Attack_Damage_Multiplier;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PlayerControllerJP_MatchBP.PlayerControllerJP_MatchBP_C.OnDefaultFOVChanged
// (Event, Public, BlueprintEvent)

void APlayerControllerJP_MatchBP_C::OnDefaultFOVChanged()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerControllerJP_MatchBP_C", "OnDefaultFOVChanged");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PlayerControllerJP_MatchBP.PlayerControllerJP_MatchBP_C.OnEnded_51B04FC04DE09657FF5FDCB12676D1BD
// (BlueprintCallable, BlueprintEvent)

void APlayerControllerJP_MatchBP_C::OnEnded_51B04FC04DE09657FF5FDCB12676D1BD()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerControllerJP_MatchBP_C", "OnEnded_51B04FC04DE09657FF5FDCB12676D1BD");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PlayerControllerJP_MatchBP.PlayerControllerJP_MatchBP_C.OnEnded_CBCD68FE45099CFB60FD048DDFC3F22C
// (BlueprintCallable, BlueprintEvent)

void APlayerControllerJP_MatchBP_C::OnEnded_CBCD68FE45099CFB60FD048DDFC3F22C()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerControllerJP_MatchBP_C", "OnEnded_CBCD68FE45099CFB60FD048DDFC3F22C");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PlayerControllerJP_MatchBP.PlayerControllerJP_MatchBP_C.OnGameEnded
// (BlueprintCallable, BlueprintEvent)

void APlayerControllerJP_MatchBP_C::OnGameEnded()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerControllerJP_MatchBP_C", "OnGameEnded");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PlayerControllerJP_MatchBP.PlayerControllerJP_MatchBP_C.OnLoaded_4E970563495BF36528E877A0AA3D66B4
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// TSubclassOf<class UObject>              Loaded                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)

void APlayerControllerJP_MatchBP_C::OnLoaded_4E970563495BF36528E877A0AA3D66B4(TSubclassOf<class UObject> Loaded)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerControllerJP_MatchBP_C", "OnLoaded_4E970563495BF36528E877A0AA3D66B4");

	Params::PlayerControllerJP_MatchBP_C_OnLoaded_4E970563495BF36528E877A0AA3D66B4 Parms{};

	Parms.Loaded = Loaded;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PlayerControllerJP_MatchBP.PlayerControllerJP_MatchBP_C.OnLoaded_B6C4566948EA4BE690600D9559E672DA
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// TSubclassOf<class UObject>              Loaded                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)

void APlayerControllerJP_MatchBP_C::OnLoaded_B6C4566948EA4BE690600D9559E672DA(TSubclassOf<class UObject> Loaded)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerControllerJP_MatchBP_C", "OnLoaded_B6C4566948EA4BE690600D9559E672DA");

	Params::PlayerControllerJP_MatchBP_C_OnLoaded_B6C4566948EA4BE690600D9559E672DA Parms{};

	Parms.Loaded = Loaded;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PlayerControllerJP_MatchBP.PlayerControllerJP_MatchBP_C.OverrideAllCooldowns
// (Exec, Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  NewCooldown                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void APlayerControllerJP_MatchBP_C::OverrideAllCooldowns(double NewCooldown)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerControllerJP_MatchBP_C", "OverrideAllCooldowns");

	Params::PlayerControllerJP_MatchBP_C_OverrideAllCooldowns Parms{};

	Parms.NewCooldown = NewCooldown;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PlayerControllerJP_MatchBP.PlayerControllerJP_MatchBP_C.Owner_CheatClearChat
// (Net, NetClient, BlueprintCallable, BlueprintEvent)

void APlayerControllerJP_MatchBP_C::Owner_CheatClearChat()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerControllerJP_MatchBP_C", "Owner_CheatClearChat");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PlayerControllerJP_MatchBP.PlayerControllerJP_MatchBP_C.Owner_Send Item Pick Up Message
// (Net, NetClient, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGameplayTag                     ItemTag                                                (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)

void APlayerControllerJP_MatchBP_C::Owner_Send_Item_Pick_Up_Message(const struct FGameplayTag& ItemTag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerControllerJP_MatchBP_C", "Owner_Send Item Pick Up Message");

	Params::PlayerControllerJP_MatchBP_C_Owner_Send_Item_Pick_Up_Message Parms{};

	Parms.ItemTag = std::move(ItemTag);

	UObject::ProcessEvent(Func, &Parms);
}


// Function PlayerControllerJP_MatchBP.PlayerControllerJP_MatchBP_C.Owner_Send Player Left Message
// (Net, NetClient, BlueprintCallable, BlueprintEvent)
// Parameters:
// class APlayerState*                     PlayerWhoLeft                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void APlayerControllerJP_MatchBP_C::Owner_Send_Player_Left_Message(class APlayerState* PlayerWhoLeft)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerControllerJP_MatchBP_C", "Owner_Send Player Left Message");

	Params::PlayerControllerJP_MatchBP_C_Owner_Send_Player_Left_Message Parms{};

	Parms.PlayerWhoLeft = PlayerWhoLeft;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PlayerControllerJP_MatchBP.PlayerControllerJP_MatchBP_C.Owner_SendEvent
// (Net, NetClient, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FS_EventMessageParams            Message                                                (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void APlayerControllerJP_MatchBP_C::Owner_SendEvent(const struct FS_EventMessageParams& Message)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerControllerJP_MatchBP_C", "Owner_SendEvent");

	Params::PlayerControllerJP_MatchBP_C_Owner_SendEvent Parms{};

	Parms.Message = std::move(Message);

	UObject::ProcessEvent(Func, &Parms);
}


// Function PlayerControllerJP_MatchBP.PlayerControllerJP_MatchBP_C.Owner_SendImportantNotification
// (Net, NetClient, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FS_ImportantNotificationReceivedMessageImportantNotification                                  (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void APlayerControllerJP_MatchBP_C::Owner_SendImportantNotification(const struct FS_ImportantNotificationReceivedMessage& ImportantNotification)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerControllerJP_MatchBP_C", "Owner_SendImportantNotification");

	Params::PlayerControllerJP_MatchBP_C_Owner_SendImportantNotification Parms{};

	Parms.ImportantNotification = std::move(ImportantNotification);

	UObject::ProcessEvent(Func, &Parms);
}


// Function PlayerControllerJP_MatchBP.PlayerControllerJP_MatchBP_C.Owner_SendMessage
// (Net, NetClient, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FPlayerMessage                   Message_Specification                                  (BlueprintVisible, BlueprintReadOnly, Parm)

void APlayerControllerJP_MatchBP_C::Owner_SendMessage(const struct FPlayerMessage& Message_Specification)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerControllerJP_MatchBP_C", "Owner_SendMessage");

	Params::PlayerControllerJP_MatchBP_C_Owner_SendMessage Parms{};

	Parms.Message_Specification = std::move(Message_Specification);

	UObject::ProcessEvent(Func, &Parms);
}


// Function PlayerControllerJP_MatchBP.PlayerControllerJP_MatchBP_C.Owner_SetResourceForlateJoin
// (Net, NetReliable, NetClient, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  ResourceAmount                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void APlayerControllerJP_MatchBP_C::Owner_SetResourceForlateJoin(double ResourceAmount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerControllerJP_MatchBP_C", "Owner_SetResourceForlateJoin");

	Params::PlayerControllerJP_MatchBP_C_Owner_SetResourceForlateJoin Parms{};

	Parms.ResourceAmount = ResourceAmount;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PlayerControllerJP_MatchBP.PlayerControllerJP_MatchBP_C.Owner_ToggleOutlines
// (Net, NetClient, BlueprintCallable, BlueprintEvent)

void APlayerControllerJP_MatchBP_C::Owner_ToggleOutlines()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerControllerJP_MatchBP_C", "Owner_ToggleOutlines");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PlayerControllerJP_MatchBP.PlayerControllerJP_MatchBP_C.Owner_UpdateResourcesInTeamBar
// (Net, NetReliable, NetClient, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   ResourceCount                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// uint8                                   Team                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void APlayerControllerJP_MatchBP_C::Owner_UpdateResourcesInTeamBar(int32 ResourceCount, uint8 Team)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerControllerJP_MatchBP_C", "Owner_UpdateResourcesInTeamBar");

	Params::PlayerControllerJP_MatchBP_C_Owner_UpdateResourcesInTeamBar Parms{};

	Parms.ResourceCount = ResourceCount;
	Parms.Team = Team;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PlayerControllerJP_MatchBP.PlayerControllerJP_MatchBP_C.OwnerSendItemPickUpMessageToPlayerController
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGameplayTag                     ItemTag                                                (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)

void APlayerControllerJP_MatchBP_C::OwnerSendItemPickUpMessageToPlayerController(const struct FGameplayTag& ItemTag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerControllerJP_MatchBP_C", "OwnerSendItemPickUpMessageToPlayerController");

	Params::PlayerControllerJP_MatchBP_C_OwnerSendItemPickUpMessageToPlayerController Parms{};

	Parms.ItemTag = std::move(ItemTag);

	UObject::ProcessEvent(Func, &Parms);
}


// Function PlayerControllerJP_MatchBP.PlayerControllerJP_MatchBP_C.OwnerSendMessageToPlayerController
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FPlayerMessage                   Message                                                (BlueprintVisible, BlueprintReadOnly, Parm)

void APlayerControllerJP_MatchBP_C::OwnerSendMessageToPlayerController(const struct FPlayerMessage& Message)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerControllerJP_MatchBP_C", "OwnerSendMessageToPlayerController");

	Params::PlayerControllerJP_MatchBP_C_OwnerSendMessageToPlayerController Parms{};

	Parms.Message = std::move(Message);

	UObject::ProcessEvent(Func, &Parms);
}


// Function PlayerControllerJP_MatchBP.PlayerControllerJP_MatchBP_C.OwnerSendPlayerLeftMessage
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class APlayerState*                     PlayerWhoLeft                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void APlayerControllerJP_MatchBP_C::OwnerSendPlayerLeftMessage(class APlayerState* PlayerWhoLeft)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerControllerJP_MatchBP_C", "OwnerSendPlayerLeftMessage");

	Params::PlayerControllerJP_MatchBP_C_OwnerSendPlayerLeftMessage Parms{};

	Parms.PlayerWhoLeft = PlayerWhoLeft;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PlayerControllerJP_MatchBP.PlayerControllerJP_MatchBP_C.PlayMontage
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UClass*                           MontageEmote                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void APlayerControllerJP_MatchBP_C::PlayMontage(class UClass* MontageEmote)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerControllerJP_MatchBP_C", "PlayMontage");

	Params::PlayerControllerJP_MatchBP_C_PlayMontage Parms{};

	Parms.MontageEmote = MontageEmote;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PlayerControllerJP_MatchBP.PlayerControllerJP_MatchBP_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void APlayerControllerJP_MatchBP_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerControllerJP_MatchBP_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PlayerControllerJP_MatchBP.PlayerControllerJP_MatchBP_C.ReceiveDestroyed
// (Event, Public, BlueprintEvent)

void APlayerControllerJP_MatchBP_C::ReceiveDestroyed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerControllerJP_MatchBP_C", "ReceiveDestroyed");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PlayerControllerJP_MatchBP.PlayerControllerJP_MatchBP_C.ReceivePossess
// (Event, Protected, BlueprintEvent)
// Parameters:
// class APawn*                            PossessedPawn                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void APlayerControllerJP_MatchBP_C::ReceivePossess(class APawn* PossessedPawn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerControllerJP_MatchBP_C", "ReceivePossess");

	Params::PlayerControllerJP_MatchBP_C_ReceivePossess Parms{};

	Parms.PossessedPawn = PossessedPawn;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PlayerControllerJP_MatchBP.PlayerControllerJP_MatchBP_C.ReceiveTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void APlayerControllerJP_MatchBP_C::ReceiveTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerControllerJP_MatchBP_C", "ReceiveTick");

	Params::PlayerControllerJP_MatchBP_C_ReceiveTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PlayerControllerJP_MatchBP.PlayerControllerJP_MatchBP_C.RemoveHighlight
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_HouseEssential_Cube_C*        NewParam                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void APlayerControllerJP_MatchBP_C::RemoveHighlight(class ABP_HouseEssential_Cube_C* NewParam)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerControllerJP_MatchBP_C", "RemoveHighlight");

	Params::PlayerControllerJP_MatchBP_C_RemoveHighlight Parms{};

	Parms.NewParam = NewParam;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PlayerControllerJP_MatchBP.PlayerControllerJP_MatchBP_C.RestartChatIntegration
// (Exec, Public, BlueprintCallable, BlueprintEvent)

void APlayerControllerJP_MatchBP_C::RestartChatIntegration()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerControllerJP_MatchBP_C", "RestartChatIntegration");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PlayerControllerJP_MatchBP.PlayerControllerJP_MatchBP_C.RunTwitchLogin
// (Exec, Public, BlueprintCallable, BlueprintEvent)

void APlayerControllerJP_MatchBP_C::RunTwitchLogin()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerControllerJP_MatchBP_C", "RunTwitchLogin");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PlayerControllerJP_MatchBP.PlayerControllerJP_MatchBP_C.Server_Add Self to Twitch Vote Manager
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)

void APlayerControllerJP_MatchBP_C::Server_Add_Self_to_Twitch_Vote_Manager()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerControllerJP_MatchBP_C", "Server_Add Self to Twitch Vote Manager");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PlayerControllerJP_MatchBP.PlayerControllerJP_MatchBP_C.Server_DisableVans
// (Net, NetServer, BlueprintCallable, BlueprintEvent)

void APlayerControllerJP_MatchBP_C::Server_DisableVans()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerControllerJP_MatchBP_C", "Server_DisableVans");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PlayerControllerJP_MatchBP.PlayerControllerJP_MatchBP_C.Server_Flush Net Dormancy For Actor Instance
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           ActorClass                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)

void APlayerControllerJP_MatchBP_C::Server_Flush_Net_Dormancy_For_Actor_Instance(class AActor* ActorClass)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerControllerJP_MatchBP_C", "Server_Flush Net Dormancy For Actor Instance");

	Params::PlayerControllerJP_MatchBP_C_Server_Flush_Net_Dormancy_For_Actor_Instance Parms{};

	Parms.ActorClass = ActorClass;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PlayerControllerJP_MatchBP.PlayerControllerJP_MatchBP_C.Server_Flush Net Dormancy For All Actors Of Class
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// TSubclassOf<class AActor>               ActorClass                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)

void APlayerControllerJP_MatchBP_C::Server_Flush_Net_Dormancy_For_All_Actors_Of_Class(TSubclassOf<class AActor> ActorClass)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerControllerJP_MatchBP_C", "Server_Flush Net Dormancy For All Actors Of Class");

	Params::PlayerControllerJP_MatchBP_C_Server_Flush_Net_Dormancy_For_All_Actors_Of_Class Parms{};

	Parms.ActorClass = ActorClass;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PlayerControllerJP_MatchBP.PlayerControllerJP_MatchBP_C.Server_InventoryOpened
// (Net, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// class APlayerController*                PC                                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void APlayerControllerJP_MatchBP_C::Server_InventoryOpened(class APlayerController* PC)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerControllerJP_MatchBP_C", "Server_InventoryOpened");

	Params::PlayerControllerJP_MatchBP_C_Server_InventoryOpened Parms{};

	Parms.PC = PC;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PlayerControllerJP_MatchBP.PlayerControllerJP_MatchBP_C.Server_Play Montage
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UClass*                           MontageEmote                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void APlayerControllerJP_MatchBP_C::Server_Play_Montage(class UClass* MontageEmote)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerControllerJP_MatchBP_C", "Server_Play Montage");

	Params::PlayerControllerJP_MatchBP_C_Server_Play_Montage Parms{};

	Parms.MontageEmote = MontageEmote;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PlayerControllerJP_MatchBP.PlayerControllerJP_MatchBP_C.Server_RunTwitchIntegration
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)

void APlayerControllerJP_MatchBP_C::Server_RunTwitchIntegration()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerControllerJP_MatchBP_C", "Server_RunTwitchIntegration");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PlayerControllerJP_MatchBP.PlayerControllerJP_MatchBP_C.Server_RunTwitchVote
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)

void APlayerControllerJP_MatchBP_C::Server_RunTwitchVote()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerControllerJP_MatchBP_C", "Server_RunTwitchVote");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PlayerControllerJP_MatchBP.PlayerControllerJP_MatchBP_C.Server_SpawnTwitchReward
// (Net, NetReliable, NetServer, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class UClass*>                   Rewards                                                (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// struct FTeam                            Team                                                   (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)

void APlayerControllerJP_MatchBP_C::Server_SpawnTwitchReward(const TArray<class UClass*>& Rewards, const struct FTeam& Team)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerControllerJP_MatchBP_C", "Server_SpawnTwitchReward");

	Params::PlayerControllerJP_MatchBP_C_Server_SpawnTwitchReward Parms{};

	Parms.Rewards = std::move(Rewards);
	Parms.Team = std::move(Team);

	UObject::ProcessEvent(Func, &Parms);
}


// Function PlayerControllerJP_MatchBP.PlayerControllerJP_MatchBP_C.Server_Stop Montage
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)

void APlayerControllerJP_MatchBP_C::Server_Stop_Montage()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerControllerJP_MatchBP_C", "Server_Stop Montage");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PlayerControllerJP_MatchBP.PlayerControllerJP_MatchBP_C.Server_UpdateTwitchVotes
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Votes                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// ETeamType                               Team                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void APlayerControllerJP_MatchBP_C::Server_UpdateTwitchVotes(int32 Votes, ETeamType Team)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerControllerJP_MatchBP_C", "Server_UpdateTwitchVotes");

	Params::PlayerControllerJP_MatchBP_C_Server_UpdateTwitchVotes Parms{};

	Parms.Votes = Votes;
	Parms.Team = Team;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PlayerControllerJP_MatchBP.PlayerControllerJP_MatchBP_C.SpawnTwitchReward
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class UClass*>                   Rewards                                                (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// struct FTeam                            Team                                                   (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)

void APlayerControllerJP_MatchBP_C::SpawnTwitchReward(const TArray<class UClass*>& Rewards, const struct FTeam& Team)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerControllerJP_MatchBP_C", "SpawnTwitchReward");

	Params::PlayerControllerJP_MatchBP_C_SpawnTwitchReward Parms{};

	Parms.Rewards = std::move(Rewards);
	Parms.Team = std::move(Team);

	UObject::ProcessEvent(Func, &Parms);
}


// Function PlayerControllerJP_MatchBP.PlayerControllerJP_MatchBP_C.StartBalloonDrop
// (Exec, Public, BlueprintCallable, BlueprintEvent)

void APlayerControllerJP_MatchBP_C::StartBalloonDrop()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerControllerJP_MatchBP_C", "StartBalloonDrop");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PlayerControllerJP_MatchBP.PlayerControllerJP_MatchBP_C.StartDelivery
// (Exec, Public, BlueprintCallable, BlueprintEvent)

void APlayerControllerJP_MatchBP_C::StartDelivery()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerControllerJP_MatchBP_C", "StartDelivery");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PlayerControllerJP_MatchBP.PlayerControllerJP_MatchBP_C.StartDriveBy
// (Exec, Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           TeamToAttackString                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void APlayerControllerJP_MatchBP_C::StartDriveBy(const class FString& TeamToAttackString)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerControllerJP_MatchBP_C", "StartDriveBy");

	Params::PlayerControllerJP_MatchBP_C_StartDriveBy Parms{};

	Parms.TeamToAttackString = std::move(TeamToAttackString);

	UObject::ProcessEvent(Func, &Parms);
}


// Function PlayerControllerJP_MatchBP.PlayerControllerJP_MatchBP_C.StartProximityVoiceChat
// (Public, BlueprintCallable, BlueprintEvent)

void APlayerControllerJP_MatchBP_C::StartProximityVoiceChat()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerControllerJP_MatchBP_C", "StartProximityVoiceChat");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PlayerControllerJP_MatchBP.PlayerControllerJP_MatchBP_C.StartSuddenDeathEvent
// (Exec, Public, BlueprintCallable, BlueprintEvent)

void APlayerControllerJP_MatchBP_C::StartSuddenDeathEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerControllerJP_MatchBP_C", "StartSuddenDeathEvent");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PlayerControllerJP_MatchBP.PlayerControllerJP_MatchBP_C.StartTeamVoiceChat
// (Public, BlueprintCallable, BlueprintEvent)

void APlayerControllerJP_MatchBP_C::StartTeamVoiceChat()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerControllerJP_MatchBP_C", "StartTeamVoiceChat");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PlayerControllerJP_MatchBP.PlayerControllerJP_MatchBP_C.StartTwitchIntegration
// (Event, Public, BlueprintEvent)

void APlayerControllerJP_MatchBP_C::StartTwitchIntegration()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerControllerJP_MatchBP_C", "StartTwitchIntegration");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PlayerControllerJP_MatchBP.PlayerControllerJP_MatchBP_C.StartTwitchVote
// (Exec, Public, BlueprintCallable, BlueprintEvent)

void APlayerControllerJP_MatchBP_C::StartTwitchVote()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerControllerJP_MatchBP_C", "StartTwitchVote");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PlayerControllerJP_MatchBP.PlayerControllerJP_MatchBP_C.StartTwitchVoteFromVoteManager
// (Exec, Public, BlueprintCallable, BlueprintEvent)

void APlayerControllerJP_MatchBP_C::StartTwitchVoteFromVoteManager()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerControllerJP_MatchBP_C", "StartTwitchVoteFromVoteManager");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PlayerControllerJP_MatchBP.PlayerControllerJP_MatchBP_C.StopMontage
// (Public, BlueprintCallable, BlueprintEvent)

void APlayerControllerJP_MatchBP_C::StopMontage()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerControllerJP_MatchBP_C", "StopMontage");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PlayerControllerJP_MatchBP.PlayerControllerJP_MatchBP_C.TakeDamage
// (Exec, Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  DamageAmount                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void APlayerControllerJP_MatchBP_C::TakeDamage(double DamageAmount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerControllerJP_MatchBP_C", "TakeDamage");

	Params::PlayerControllerJP_MatchBP_C_TakeDamage Parms{};

	Parms.DamageAmount = DamageAmount;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PlayerControllerJP_MatchBP.PlayerControllerJP_MatchBP_C.TeamVoiceChatPressed
// (BlueprintCallable, BlueprintEvent)

void APlayerControllerJP_MatchBP_C::TeamVoiceChatPressed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerControllerJP_MatchBP_C", "TeamVoiceChatPressed");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PlayerControllerJP_MatchBP.PlayerControllerJP_MatchBP_C.TeamVoiceChatReleased
// (BlueprintCallable, BlueprintEvent)

void APlayerControllerJP_MatchBP_C::TeamVoiceChatReleased()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerControllerJP_MatchBP_C", "TeamVoiceChatReleased");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PlayerControllerJP_MatchBP.PlayerControllerJP_MatchBP_C.Toggle Decal Highlight
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UAC_POI_C*                        Decal                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// bool                                    Show                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void APlayerControllerJP_MatchBP_C::Toggle_Decal_Highlight(class UAC_POI_C* Decal, bool Show)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerControllerJP_MatchBP_C", "Toggle Decal Highlight");

	Params::PlayerControllerJP_MatchBP_C_Toggle_Decal_Highlight Parms{};

	Parms.Decal = Decal;
	Parms.Show = Show;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PlayerControllerJP_MatchBP.PlayerControllerJP_MatchBP_C.Toggle Flower Highlight
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_Flower_C*                     Flower                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    Show                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void APlayerControllerJP_MatchBP_C::Toggle_Flower_Highlight(class ABP_Flower_C* Flower, bool Show)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerControllerJP_MatchBP_C", "Toggle Flower Highlight");

	Params::PlayerControllerJP_MatchBP_C_Toggle_Flower_Highlight Parms{};

	Parms.Flower = Flower;
	Parms.Show = Show;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PlayerControllerJP_MatchBP.PlayerControllerJP_MatchBP_C.Toggle Garbage Highlight
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_GarbageItem_C*                Garbage                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    Show                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void APlayerControllerJP_MatchBP_C::Toggle_Garbage_Highlight(class ABP_GarbageItem_C* Garbage, bool Show)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerControllerJP_MatchBP_C", "Toggle Garbage Highlight");

	Params::PlayerControllerJP_MatchBP_C_Toggle_Garbage_Highlight Parms{};

	Parms.Garbage = Garbage;
	Parms.Show = Show;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PlayerControllerJP_MatchBP.PlayerControllerJP_MatchBP_C.Toggle Hedge Highlight
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_Hedge_Branch_C*               Hedge                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    Show                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void APlayerControllerJP_MatchBP_C::Toggle_Hedge_Highlight(class ABP_Hedge_Branch_C* Hedge, bool Show)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerControllerJP_MatchBP_C", "Toggle Hedge Highlight");

	Params::PlayerControllerJP_MatchBP_C_Toggle_Hedge_Highlight Parms{};

	Parms.Hedge = Hedge;
	Parms.Show = Show;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PlayerControllerJP_MatchBP.PlayerControllerJP_MatchBP_C.Toggle POI Marker
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UAC_POI_C*                        Marker                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// bool                                    Hide                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void APlayerControllerJP_MatchBP_C::Toggle_POI_Marker(class UAC_POI_C* Marker, bool Hide)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerControllerJP_MatchBP_C", "Toggle POI Marker");

	Params::PlayerControllerJP_MatchBP_C_Toggle_POI_Marker Parms{};

	Parms.Marker = Marker;
	Parms.Hide = Hide;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PlayerControllerJP_MatchBP.PlayerControllerJP_MatchBP_C.ToggleEffect
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UClass*                           Type                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void APlayerControllerJP_MatchBP_C::ToggleEffect(class UClass* Type)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerControllerJP_MatchBP_C", "ToggleEffect");

	Params::PlayerControllerJP_MatchBP_C_ToggleEffect Parms{};

	Parms.Type = Type;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PlayerControllerJP_MatchBP.PlayerControllerJP_MatchBP_C.ToggleInfiniteHealth
// (Exec, Public, BlueprintCallable, BlueprintEvent)

void APlayerControllerJP_MatchBP_C::ToggleInfiniteHealth()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerControllerJP_MatchBP_C", "ToggleInfiniteHealth");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PlayerControllerJP_MatchBP.PlayerControllerJP_MatchBP_C.ToggleInfiniteStamina
// (Exec, Public, BlueprintCallable, BlueprintEvent)

void APlayerControllerJP_MatchBP_C::ToggleInfiniteStamina()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerControllerJP_MatchBP_C", "ToggleInfiniteStamina");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PlayerControllerJP_MatchBP.PlayerControllerJP_MatchBP_C.ToggleSafeHighlight
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_CaptureTheFlagDeedSafe_C*     Safe                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    Show                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void APlayerControllerJP_MatchBP_C::ToggleSafeHighlight(class ABP_CaptureTheFlagDeedSafe_C* Safe, bool Show)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerControllerJP_MatchBP_C", "ToggleSafeHighlight");

	Params::PlayerControllerJP_MatchBP_C_ToggleSafeHighlight Parms{};

	Parms.Safe = Safe;
	Parms.Show = Show;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PlayerControllerJP_MatchBP.PlayerControllerJP_MatchBP_C.ToggleTimeOfDay
// (Exec, Public, BlueprintCallable, BlueprintEvent)

void APlayerControllerJP_MatchBP_C::ToggleTimeOfDay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerControllerJP_MatchBP_C", "ToggleTimeOfDay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PlayerControllerJP_MatchBP.PlayerControllerJP_MatchBP_C.ToggleWatertapHighlight
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_WaterTap_C*                   WaterTap                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    Show                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void APlayerControllerJP_MatchBP_C::ToggleWatertapHighlight(class ABP_WaterTap_C* WaterTap, bool Show)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerControllerJP_MatchBP_C", "ToggleWatertapHighlight");

	Params::PlayerControllerJP_MatchBP_C_ToggleWatertapHighlight Parms{};

	Parms.WaterTap = WaterTap;
	Parms.Show = Show;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PlayerControllerJP_MatchBP.PlayerControllerJP_MatchBP_C.VoiceChatPressed
// (BlueprintCallable, BlueprintEvent)

void APlayerControllerJP_MatchBP_C::VoiceChatPressed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerControllerJP_MatchBP_C", "VoiceChatPressed");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PlayerControllerJP_MatchBP.PlayerControllerJP_MatchBP_C.VoiceChatReleased
// (BlueprintCallable, BlueprintEvent)

void APlayerControllerJP_MatchBP_C::VoiceChatReleased()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerControllerJP_MatchBP_C", "VoiceChatReleased");

	UObject::ProcessEvent(Func, nullptr);
}

}

