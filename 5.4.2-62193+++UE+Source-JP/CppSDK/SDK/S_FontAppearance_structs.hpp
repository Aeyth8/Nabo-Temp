#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: S_FontAppearance

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "E_TransformPolicy_structs.hpp"
#include "Slate_structs.hpp"
#include "S_Shadow_structs.hpp"


namespace SDK
{

// UserDefinedStruct S_FontAppearance.S_FontAppearance
// 0x00A0 (0x00A0 - 0x0000)
struct FS_FontAppearance final
{
public:
	struct FSlateFontInfo                         Font_7_ED2F4FBE415C2470662A4A8251F8919D;           // 0x0000(0x0060)(Edit, BlueprintVisible, HasGetValueTypeHash)
	struct FSlateColor                            ColorAndOpacity_27_54DF38CF4C47F475E2B16CA7F4BF2F50; // 0x0060(0x0014)(Edit, BlueprintVisible)
	uint8                                         Pad_74[0x4];                                       // 0x0074(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_Shadow                              Shadow_14_E292FCA44A547B614539CBBB285CB02C;        // 0x0078(0x0020)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MinimumDesiredWidth_26_03DEF271476CBB13BB0A84BD179C1EFB; // 0x0098(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETextJustify                                  Justification_20_B5E0C5A545B129FC99C6DDB66AE730F8; // 0x009C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_TransformPolicy                             TransformPolicy_29_9B537B7043CE192E7D11208B214F2809; // 0x009D(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FS_FontAppearance) == 0x000008, "Wrong alignment on FS_FontAppearance");
static_assert(sizeof(FS_FontAppearance) == 0x0000A0, "Wrong size on FS_FontAppearance");
static_assert(offsetof(FS_FontAppearance, Font_7_ED2F4FBE415C2470662A4A8251F8919D) == 0x000000, "Member 'FS_FontAppearance::Font_7_ED2F4FBE415C2470662A4A8251F8919D' has a wrong offset!");
static_assert(offsetof(FS_FontAppearance, ColorAndOpacity_27_54DF38CF4C47F475E2B16CA7F4BF2F50) == 0x000060, "Member 'FS_FontAppearance::ColorAndOpacity_27_54DF38CF4C47F475E2B16CA7F4BF2F50' has a wrong offset!");
static_assert(offsetof(FS_FontAppearance, Shadow_14_E292FCA44A547B614539CBBB285CB02C) == 0x000078, "Member 'FS_FontAppearance::Shadow_14_E292FCA44A547B614539CBBB285CB02C' has a wrong offset!");
static_assert(offsetof(FS_FontAppearance, MinimumDesiredWidth_26_03DEF271476CBB13BB0A84BD179C1EFB) == 0x000098, "Member 'FS_FontAppearance::MinimumDesiredWidth_26_03DEF271476CBB13BB0A84BD179C1EFB' has a wrong offset!");
static_assert(offsetof(FS_FontAppearance, Justification_20_B5E0C5A545B129FC99C6DDB66AE730F8) == 0x00009C, "Member 'FS_FontAppearance::Justification_20_B5E0C5A545B129FC99C6DDB66AE730F8' has a wrong offset!");
static_assert(offsetof(FS_FontAppearance, TransformPolicy_29_9B537B7043CE192E7D11208B214F2809) == 0x00009D, "Member 'FS_FontAppearance::TransformPolicy_29_9B537B7043CE192E7D11208B214F2809' has a wrong offset!");

}

