#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: HouseActorBase

#include "Basic.hpp"

#include "JP_structs.hpp"
#include "SlateCore_structs.hpp"
#include "GameplayAbilities_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "E_ImpactEffect_structs.hpp"
#include "E_Tools_structs.hpp"
#include "E_MaterialTypes_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function HouseActorBase.HouseActorBase_C.AddRepairness
// 0x0030 (0x0030 - 0x0000)
struct HouseActorBase_C_AddRepairness final
{
public:
	float                                         Magnitude;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayEffectSpecHandle              CallFunc_MakeOutgoingSpec_ReturnValue;             // 0x0008(0x0010)()
	struct FGameplayEffectSpecHandle              CallFunc_AssignTagSetByCallerMagnitude_ReturnValue; // 0x0018(0x0010)()
	struct FActiveGameplayEffectHandle            CallFunc_BP_ApplyGameplayEffectSpecToSelf_ReturnValue; // 0x0028(0x0008)(NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(HouseActorBase_C_AddRepairness) == 0x000008, "Wrong alignment on HouseActorBase_C_AddRepairness");
static_assert(sizeof(HouseActorBase_C_AddRepairness) == 0x000030, "Wrong size on HouseActorBase_C_AddRepairness");
static_assert(offsetof(HouseActorBase_C_AddRepairness, Magnitude) == 0x000000, "Member 'HouseActorBase_C_AddRepairness::Magnitude' has a wrong offset!");
static_assert(offsetof(HouseActorBase_C_AddRepairness, CallFunc_MakeOutgoingSpec_ReturnValue) == 0x000008, "Member 'HouseActorBase_C_AddRepairness::CallFunc_MakeOutgoingSpec_ReturnValue' has a wrong offset!");
static_assert(offsetof(HouseActorBase_C_AddRepairness, CallFunc_AssignTagSetByCallerMagnitude_ReturnValue) == 0x000018, "Member 'HouseActorBase_C_AddRepairness::CallFunc_AssignTagSetByCallerMagnitude_ReturnValue' has a wrong offset!");
static_assert(offsetof(HouseActorBase_C_AddRepairness, CallFunc_BP_ApplyGameplayEffectSpecToSelf_ReturnValue) == 0x000028, "Member 'HouseActorBase_C_AddRepairness::CallFunc_BP_ApplyGameplayEffectSpecToSelf_ReturnValue' has a wrong offset!");

// Function HouseActorBase.HouseActorBase_C.BndEvt__HouseActorBase_Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature
// 0x0118 (0x0118 - 0x0000)
struct HouseActorBase_C_BndEvt__HouseActorBase_Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bFromSweep;                                        // 0x001C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             SweepResult;                                       // 0x0020(0x00F8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(HouseActorBase_C_BndEvt__HouseActorBase_Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on HouseActorBase_C_BndEvt__HouseActorBase_Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(sizeof(HouseActorBase_C_BndEvt__HouseActorBase_Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature) == 0x000118, "Wrong size on HouseActorBase_C_BndEvt__HouseActorBase_Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(offsetof(HouseActorBase_C_BndEvt__HouseActorBase_Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OverlappedComponent) == 0x000000, "Member 'HouseActorBase_C_BndEvt__HouseActorBase_Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(HouseActorBase_C_BndEvt__HouseActorBase_Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'HouseActorBase_C_BndEvt__HouseActorBase_Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(HouseActorBase_C_BndEvt__HouseActorBase_Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'HouseActorBase_C_BndEvt__HouseActorBase_Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(HouseActorBase_C_BndEvt__HouseActorBase_Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000018, "Member 'HouseActorBase_C_BndEvt__HouseActorBase_Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(HouseActorBase_C_BndEvt__HouseActorBase_Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, bFromSweep) == 0x00001C, "Member 'HouseActorBase_C_BndEvt__HouseActorBase_Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::bFromSweep' has a wrong offset!");
static_assert(offsetof(HouseActorBase_C_BndEvt__HouseActorBase_Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, SweepResult) == 0x000020, "Member 'HouseActorBase_C_BndEvt__HouseActorBase_Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::SweepResult' has a wrong offset!");

// Function HouseActorBase.HouseActorBase_C.BndEvt__HouseActorBase_Sphere_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct HouseActorBase_C_BndEvt__HouseActorBase_Sphere_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(HouseActorBase_C_BndEvt__HouseActorBase_Sphere_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on HouseActorBase_C_BndEvt__HouseActorBase_Sphere_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature");
static_assert(sizeof(HouseActorBase_C_BndEvt__HouseActorBase_Sphere_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature) == 0x000020, "Wrong size on HouseActorBase_C_BndEvt__HouseActorBase_Sphere_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature");
static_assert(offsetof(HouseActorBase_C_BndEvt__HouseActorBase_Sphere_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature, OverlappedComponent) == 0x000000, "Member 'HouseActorBase_C_BndEvt__HouseActorBase_Sphere_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(HouseActorBase_C_BndEvt__HouseActorBase_Sphere_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'HouseActorBase_C_BndEvt__HouseActorBase_Sphere_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(HouseActorBase_C_BndEvt__HouseActorBase_Sphere_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'HouseActorBase_C_BndEvt__HouseActorBase_Sphere_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(HouseActorBase_C_BndEvt__HouseActorBase_Sphere_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000018, "Member 'HouseActorBase_C_BndEvt__HouseActorBase_Sphere_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");

// Function HouseActorBase.HouseActorBase_C.CancelInteraction
// 0x0008 (0x0008 - 0x0000)
struct HouseActorBase_C_CancelInteraction final
{
public:
	class UPrimitiveComponent*                    InteractionComponent;                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(HouseActorBase_C_CancelInteraction) == 0x000008, "Wrong alignment on HouseActorBase_C_CancelInteraction");
static_assert(sizeof(HouseActorBase_C_CancelInteraction) == 0x000008, "Wrong size on HouseActorBase_C_CancelInteraction");
static_assert(offsetof(HouseActorBase_C_CancelInteraction, InteractionComponent) == 0x000000, "Member 'HouseActorBase_C_CancelInteraction::InteractionComponent' has a wrong offset!");

// Function HouseActorBase.HouseActorBase_C.CreateKillInfo
// 0x0F88 (0x0F88 - 0x0000)
struct HouseActorBase_C_CreateKillInfo final
{
public:
	struct FCombatParticipant                     Killer;                                            // 0x0000(0x0060)(BlueprintVisible, BlueprintReadOnly, Parm)
	struct FKillMethod                            Method;                                            // 0x0060(0x02E8)(BlueprintVisible, BlueprintReadOnly, Parm)
	struct FKillGameplayMessage                   KillGameplayMessage;                               // 0x0348(0x03D8)(Parm, OutParm)
	TArray<struct FCombatParticipant>             Heal_Assisters;                                    // 0x0720(0x0010)(Edit, BlueprintVisible)
	TArray<struct FCombatParticipant>             Kill_Assisters;                                    // 0x0730(0x0010)(Edit, BlueprintVisible)
	uint8                                         CallFunc_GetTeamID_ReturnValue;                    // 0x0740(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_741[0x7];                                      // 0x0741(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FCombatParticipant>             CallFunc_Add_Heal_Assisters_Modified;              // 0x0748(0x0010)(ReferenceParm)
	struct FCombatParticipant                     K2Node_MakeStruct_CombatParticipant;               // 0x0758(0x0060)()
	TArray<struct FCombatParticipant>             CallFunc_Add_Kill_Assisters_Modified;              // 0x07B8(0x0010)(ReferenceParm)
	TArray<class UKillCircumstance*>              K2Node_MakeArray_Array;                            // 0x07C8(0x0010)(ReferenceParm)
	struct FKillInfo                              K2Node_MakeStruct_KillInfo;                        // 0x07D8(0x03D8)()
	struct FKillGameplayMessage                   K2Node_MakeStruct_KillGameplayMessage;             // 0x0BB0(0x03D8)()
};
static_assert(alignof(HouseActorBase_C_CreateKillInfo) == 0x000008, "Wrong alignment on HouseActorBase_C_CreateKillInfo");
static_assert(sizeof(HouseActorBase_C_CreateKillInfo) == 0x000F88, "Wrong size on HouseActorBase_C_CreateKillInfo");
static_assert(offsetof(HouseActorBase_C_CreateKillInfo, Killer) == 0x000000, "Member 'HouseActorBase_C_CreateKillInfo::Killer' has a wrong offset!");
static_assert(offsetof(HouseActorBase_C_CreateKillInfo, Method) == 0x000060, "Member 'HouseActorBase_C_CreateKillInfo::Method' has a wrong offset!");
static_assert(offsetof(HouseActorBase_C_CreateKillInfo, KillGameplayMessage) == 0x000348, "Member 'HouseActorBase_C_CreateKillInfo::KillGameplayMessage' has a wrong offset!");
static_assert(offsetof(HouseActorBase_C_CreateKillInfo, Heal_Assisters) == 0x000720, "Member 'HouseActorBase_C_CreateKillInfo::Heal_Assisters' has a wrong offset!");
static_assert(offsetof(HouseActorBase_C_CreateKillInfo, Kill_Assisters) == 0x000730, "Member 'HouseActorBase_C_CreateKillInfo::Kill_Assisters' has a wrong offset!");
static_assert(offsetof(HouseActorBase_C_CreateKillInfo, CallFunc_GetTeamID_ReturnValue) == 0x000740, "Member 'HouseActorBase_C_CreateKillInfo::CallFunc_GetTeamID_ReturnValue' has a wrong offset!");
static_assert(offsetof(HouseActorBase_C_CreateKillInfo, CallFunc_Add_Heal_Assisters_Modified) == 0x000748, "Member 'HouseActorBase_C_CreateKillInfo::CallFunc_Add_Heal_Assisters_Modified' has a wrong offset!");
static_assert(offsetof(HouseActorBase_C_CreateKillInfo, K2Node_MakeStruct_CombatParticipant) == 0x000758, "Member 'HouseActorBase_C_CreateKillInfo::K2Node_MakeStruct_CombatParticipant' has a wrong offset!");
static_assert(offsetof(HouseActorBase_C_CreateKillInfo, CallFunc_Add_Kill_Assisters_Modified) == 0x0007B8, "Member 'HouseActorBase_C_CreateKillInfo::CallFunc_Add_Kill_Assisters_Modified' has a wrong offset!");
static_assert(offsetof(HouseActorBase_C_CreateKillInfo, K2Node_MakeArray_Array) == 0x0007C8, "Member 'HouseActorBase_C_CreateKillInfo::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(HouseActorBase_C_CreateKillInfo, K2Node_MakeStruct_KillInfo) == 0x0007D8, "Member 'HouseActorBase_C_CreateKillInfo::K2Node_MakeStruct_KillInfo' has a wrong offset!");
static_assert(offsetof(HouseActorBase_C_CreateKillInfo, K2Node_MakeStruct_KillGameplayMessage) == 0x000BB0, "Member 'HouseActorBase_C_CreateKillInfo::K2Node_MakeStruct_KillGameplayMessage' has a wrong offset!");

// Function HouseActorBase.HouseActorBase_C.DebugPrintHealth
// 0x0098 (0x0098 - 0x0000)
struct HouseActorBase_C_DebugPrintHealth final
{
public:
	double                                        MinHealth;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        MaxHealth;                                         // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Normalized;                                        // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_DoubleToString_ReturnValue;          // 0x0018(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Get_ClassLog_Name_name;                   // 0x0028(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_DoubleToString_ReturnValue_1;        // 0x0038(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_DoubleToString_ReturnValue_2;        // 0x0048(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0058(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0068(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x0078(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_3;              // 0x0088(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(HouseActorBase_C_DebugPrintHealth) == 0x000008, "Wrong alignment on HouseActorBase_C_DebugPrintHealth");
static_assert(sizeof(HouseActorBase_C_DebugPrintHealth) == 0x000098, "Wrong size on HouseActorBase_C_DebugPrintHealth");
static_assert(offsetof(HouseActorBase_C_DebugPrintHealth, MinHealth) == 0x000000, "Member 'HouseActorBase_C_DebugPrintHealth::MinHealth' has a wrong offset!");
static_assert(offsetof(HouseActorBase_C_DebugPrintHealth, MaxHealth) == 0x000008, "Member 'HouseActorBase_C_DebugPrintHealth::MaxHealth' has a wrong offset!");
static_assert(offsetof(HouseActorBase_C_DebugPrintHealth, Normalized) == 0x000010, "Member 'HouseActorBase_C_DebugPrintHealth::Normalized' has a wrong offset!");
static_assert(offsetof(HouseActorBase_C_DebugPrintHealth, CallFunc_Conv_DoubleToString_ReturnValue) == 0x000018, "Member 'HouseActorBase_C_DebugPrintHealth::CallFunc_Conv_DoubleToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(HouseActorBase_C_DebugPrintHealth, CallFunc_Get_ClassLog_Name_name) == 0x000028, "Member 'HouseActorBase_C_DebugPrintHealth::CallFunc_Get_ClassLog_Name_name' has a wrong offset!");
static_assert(offsetof(HouseActorBase_C_DebugPrintHealth, CallFunc_Conv_DoubleToString_ReturnValue_1) == 0x000038, "Member 'HouseActorBase_C_DebugPrintHealth::CallFunc_Conv_DoubleToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(HouseActorBase_C_DebugPrintHealth, CallFunc_Conv_DoubleToString_ReturnValue_2) == 0x000048, "Member 'HouseActorBase_C_DebugPrintHealth::CallFunc_Conv_DoubleToString_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(HouseActorBase_C_DebugPrintHealth, CallFunc_Concat_StrStr_ReturnValue) == 0x000058, "Member 'HouseActorBase_C_DebugPrintHealth::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(HouseActorBase_C_DebugPrintHealth, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000068, "Member 'HouseActorBase_C_DebugPrintHealth::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(HouseActorBase_C_DebugPrintHealth, CallFunc_Concat_StrStr_ReturnValue_2) == 0x000078, "Member 'HouseActorBase_C_DebugPrintHealth::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(HouseActorBase_C_DebugPrintHealth, CallFunc_Concat_StrStr_ReturnValue_3) == 0x000088, "Member 'HouseActorBase_C_DebugPrintHealth::CallFunc_Concat_StrStr_ReturnValue_3' has a wrong offset!");

// Function HouseActorBase.HouseActorBase_C.Event On Team Replicated Cosmetic
// 0x0038 (0x0038 - 0x0000)
struct HouseActorBase_C_Event_On_Team_Replicated_Cosmetic final
{
public:
	struct FTeam                                  New_Team;                                          // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
};
static_assert(alignof(HouseActorBase_C_Event_On_Team_Replicated_Cosmetic) == 0x000008, "Wrong alignment on HouseActorBase_C_Event_On_Team_Replicated_Cosmetic");
static_assert(sizeof(HouseActorBase_C_Event_On_Team_Replicated_Cosmetic) == 0x000038, "Wrong size on HouseActorBase_C_Event_On_Team_Replicated_Cosmetic");
static_assert(offsetof(HouseActorBase_C_Event_On_Team_Replicated_Cosmetic, New_Team) == 0x000000, "Member 'HouseActorBase_C_Event_On_Team_Replicated_Cosmetic::New_Team' has a wrong offset!");

// Function HouseActorBase.HouseActorBase_C.ExecuteUbergraph_HouseActorBase
// 0x1080 (0x1080 - 0x0000)
struct HouseActorBase_C_ExecuteUbergraph_HouseActorBase final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0004(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable;                 // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UInitializationStateEnded*              CallFunc_ListenToInitializationStateEnded_ReturnValue; // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_32[0x6];                                       // 0x0032(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    K2Node_Event_InteractionComponent_5;               // 0x0038(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_Event_InteractionComponent_4;               // 0x0040(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_Event_InteractingActor_5;                   // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_Event_InteractionComponent_3;               // 0x0050(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_Event_InteractingActor_4;                   // 0x0058(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_Event_InteractionComponent_2;               // 0x0060(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_Event_InteractionComponent_1;               // 0x0068(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_Event_InteractingActor_3;                   // 0x0070(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_Event_InteractionComponent;                 // 0x0078(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_Event_InteractingActor_2;                   // 0x0080(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	const class AActor*                           K2Node_Event_AttackingActor;                       // 0x0088(0x0008)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Event_Direction;                            // 0x0090(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_Event_InteractingActor_1;                   // 0x00A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_Event_InteractingActor;                     // 0x00B0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_Interactable;                         // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_Show_1;                         // 0x00B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_BA[0x6];                                       // 0x00BA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_Event_Focusing_Actor;                       // 0x00C0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_Show;                           // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x00C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_CA[0x6];                                       // 0x00CA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_Event_SabotagingActor;                      // 0x00D0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_CustomEvent_Location;                       // 0x00D8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_CustomEvent_HitImpulse;                     // 0x00F0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_ImpactEffect                                K2Node_CustomEvent_ImpactEffect;                   // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0109(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_10A[0x6];                                      // 0x010A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UNiagaraComponent*                      CallFunc_SpawnSystemAtLocation_ReturnValue;        // 0x0110(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_Health;                               // 0x0118(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_MaxHealth;                            // 0x011C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FActiveGameplayEffectHandle            CallFunc_BP_ApplyGameplayEffectToSelf_ReturnValue; // 0x0120(0x0008)(NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_DoubleToString_ReturnValue;          // 0x0128(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable;                       // 0x0138(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_139[0x7];                                      // 0x0139(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0140(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FActiveGameplayEffectHandle            CallFunc_BP_ApplyGameplayEffectToSelf_ReturnValue_1; // 0x0150(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue_1;               // 0x0158(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue_1;          // 0x0159(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_15A[0x2];                                      // 0x015A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x015C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue_2;          // 0x016C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_16D[0x3];                                      // 0x016D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0170(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_174[0x4];                                      // 0x0174(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GetGameTimeInSeconds_ReturnValue;         // 0x0178(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0180(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_181[0x7];                                      // 0x0181(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GetGameTimeInSeconds_ReturnValue_1;       // 0x0188(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_1;       // 0x0190(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_191[0x7];                                      // 0x0191(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0198(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_Delta;                                // 0x01A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A4[0x4];                                      // 0x01A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_Event_Causer;                               // 0x01A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FCombatParticipant                     K2Node_Event_CombatParticipant;                    // 0x01B0(0x0060)(ConstParm)
	struct FKillMethod                            K2Node_Event_KillMethod;                           // 0x0210(0x02E8)(ConstParm)
	struct FVector_NetQuantize                    K2Node_Event_Location;                             // 0x04F8(0x0018)(NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_CustomEvent_Amount;                         // 0x0510(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 K2Node_CustomEvent_Target;                         // 0x0518(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FKillGameplayMessage                   CallFunc_CreateKillInfo_KillGameplayMessage;       // 0x0520(0x03D8)()
	bool                                          CallFunc_NotEqual_DoubleDouble_ReturnValue;        // 0x08F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8F9[0x7];                                      // 0x08F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameplayMessageSubsystem*              CallFunc_GetGameInstanceSubsystem_ReturnValue;     // 0x0900(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UInitializationStateEnded*              CallFunc_ListenToInitializationStateEnded_ReturnValue_1; // 0x0908(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0910(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_911[0x7];                                      // 0x0911(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTeam                                  K2Node_CustomEvent_New_Team;                       // 0x0918(0x0038)(NoDestructor)
	bool                                          CallFunc_IsNotLocalTeam_ReturnValue;               // 0x0950(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue;       // 0x0951(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_952[0x6];                                      // 0x0952(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKillGameplayMessage                   K2Node_CustomEvent_Message;                        // 0x0958(0x03D8)()
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_2;            // 0x0D30(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UUserWidget*                            CallFunc_GetUserWidgetObject_ReturnValue;          // 0x0D40(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0D48(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UItemCompatibleInfoWI_C*                K2Node_DynamicCast_AsItem_Compatible_Info_WI;      // 0x0D60(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0D68(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_InVisible;                      // 0x0D69(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetFloatAttributeFromAbilitySystemComponent_bSuccessfullyFoundAttribute; // 0x0D6A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D6B[0x1];                                      // 0x0D6B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetFloatAttributeFromAbilitySystemComponent_ReturnValue; // 0x0D6C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetFloatAttributeFromAbilitySystemComponent_bSuccessfullyFoundAttribute_1; // 0x0D70(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D71[0x3];                                      // 0x0D71(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetFloatAttributeFromAbilitySystemComponent_ReturnValue_1; // 0x0D74(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0D78(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0D7C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UInitializationStateEnded*              CallFunc_ListenToInitializationStateEnded_ReturnValue_2; // 0x0D80(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<class USceneComponent*>                CallFunc_GetChildrenComponents_Children;           // 0x0D88(0x0010)(ReferenceParm, ContainsInstancedReference)
	class USceneComponent*                        CallFunc_Array_Get_Item;                           // 0x0D98(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0DA0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_DA4[0x4];                                      // 0x0DA4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    K2Node_DynamicCast_AsPrimitive_Component;          // 0x0DA8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0DB0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0DB1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0DB2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_DB3[0x1];                                      // 0x0DB3(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           CallFunc_MakeLiteralGameplayTag_ReturnValue;       // 0x0DB4(0x0008)(NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetStencilValueFromMask_ReturnValue;      // 0x0DBC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue_2;               // 0x0DC0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_DC1[0x7];                                      // 0x0DC1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent_1;  // 0x0DC8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor_1;           // 0x0DD0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp_1;            // 0x0DD8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex_1;       // 0x0DE0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bFromSweep;             // 0x0DE4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_DE5[0x3];                                      // 0x0DE5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_ComponentBoundEvent_SweepResult;            // 0x0DE8(0x00F8)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class APawn*                                  K2Node_DynamicCast_AsPawn;                         // 0x0EE0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0EE8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_EE9[0x7];                                      // 0x0EE9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMeshComponent*                         CallFunc_Array_Get_Item_1;                         // 0x0EF0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLocallyControlled_ReturnValue;          // 0x0EF8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0EF9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_EFA[0x2];                                      // 0x0EFA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0EFC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent;    // 0x0F00(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor;             // 0x0F08(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp;              // 0x0F10(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex;         // 0x0F18(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0F1C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F1D[0x3];                                      // 0x0F1D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  K2Node_DynamicCast_AsPawn_1;                       // 0x0F20(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0F28(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLocallyControlled_ReturnValue_1;        // 0x0F29(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F2A[0x6];                                      // 0x0F2A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue_1;    // 0x0F30(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetWorldLocation_SweepHitResult;       // 0x0F48(0x00F8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	double                                        CallFunc_Conv_DoubleToString_InDouble_ImplicitCast; // 0x1040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_UpdateProgressbar_Value_ImplicitCast;     // 0x1048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_UpdateProgressbar_Max_ImplicitCast;       // 0x1050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_NotEqual_DoubleDouble_A_ImplicitCast;     // 0x1058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetMorphTarget_Value_ImplicitCast;        // 0x1060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1064[0x4];                                     // 0x1064(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_LessEqual_DoubleDouble_A_ImplicitCast;    // 0x1068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_UpdateProgressbar_Value_ImplicitCast_1;   // 0x1070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_UpdateProgressbar_Max_ImplicitCast_1;     // 0x1078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(HouseActorBase_C_ExecuteUbergraph_HouseActorBase) == 0x000008, "Wrong alignment on HouseActorBase_C_ExecuteUbergraph_HouseActorBase");
static_assert(sizeof(HouseActorBase_C_ExecuteUbergraph_HouseActorBase) == 0x001080, "Wrong size on HouseActorBase_C_ExecuteUbergraph_HouseActorBase");
static_assert(offsetof(HouseActorBase_C_ExecuteUbergraph_HouseActorBase, EntryPoint) == 0x000000, "Member 'HouseActorBase_C_ExecuteUbergraph_HouseActorBase::EntryPoint' has a wrong offset!");
static_assert(offsetof(HouseActorBase_C_ExecuteUbergraph_HouseActorBase, K2Node_CreateDelegate_OutputDelegate) == 0x000004, "Member 'HouseActorBase_C_ExecuteUbergraph_HouseActorBase::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(HouseActorBase_C_ExecuteUbergraph_HouseActorBase, Temp_bool_Has_Been_Initd_Variable) == 0x000014, "Member 'HouseActorBase_C_ExecuteUbergraph_HouseActorBase::Temp_bool_Has_Been_Initd_Variable' has a wrong offset!");
static_assert(offsetof(HouseActorBase_C_ExecuteUbergraph_HouseActorBase, Temp_int_Loop_Counter_Variable) == 0x000018, "Member 'HouseActorBase_C_ExecuteUbergraph_HouseActorBase::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(HouseActorBase_C_ExecuteUbergraph_HouseActorBase, CallFunc_Add_IntInt_ReturnValue) == 0x00001C, "Member 'HouseActorBase_C_ExecuteUbergraph_HouseActorBase::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(HouseActorBase_C_ExecuteUbergraph_HouseActorBase, Temp_int_Array_Index_Variable) == 0x000020, "Member 'HouseActorBase_C_ExecuteUbergraph_HouseActorBase::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(HouseActorBase_C_ExecuteUbergraph_HouseActorBase, CallFunc_ListenToInitializationStateEnded_ReturnValue) == 0x000028, "Member 'HouseActorBase_C_ExecuteUbergraph_HouseActorBase::CallFunc_ListenToInitializationStateEnded_ReturnValue' has a wrong offset!");
static_assert(offsetof(HouseActorBase_C_ExecuteUbergraph_HouseActorBase, CallFunc_IsValid_ReturnValue) == 0x000030, "Member 'HouseActorBase_C_ExecuteUbergraph_HouseActorBase::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(HouseActorBase_C_ExecuteUbergraph_HouseActorBase, CallFunc_HasAuthority_ReturnValue) == 0x000031, "Member 'HouseActorBase_C_ExecuteUbergraph_HouseActorBase::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(HouseActorBase_C_ExecuteUbergraph_HouseActorBase, K2Node_Event_InteractionComponent_5) == 0x000038, "Member 'HouseActorBase_C_ExecuteUbergraph_HouseActorBase::K2Node_Event_InteractionComponent_5' has a wrong offset!");
static_assert(offsetof(HouseActorBase_C_ExecuteUbergraph_HouseActorBase, K2Node_Event_InteractionComponent_4) == 0x000040, "Member 'HouseActorBase_C_ExecuteUbergraph_HouseActorBase::K2Node_Event_InteractionComponent_4' has a wrong offset!");
static_assert(offsetof(HouseActorBase_C_ExecuteUbergraph_HouseActorBase, K2Node_Event_InteractingActor_5) == 0x000048, "Member 'HouseActorBase_C_ExecuteUbergraph_HouseActorBase::K2Node_Event_InteractingActor_5' has a wrong offset!");
static_assert(offsetof(HouseActorBase_C_ExecuteUbergraph_HouseActorBase, K2Node_Event_InteractionComponent_3) == 0x000050, "Member 'HouseActorBase_C_ExecuteUbergraph_HouseActorBase::K2Node_Event_InteractionComponent_3' has a wrong offset!");
static_assert(offsetof(HouseActorBase_C_ExecuteUbergraph_HouseActorBase, K2Node_Event_InteractingActor_4) == 0x000058, "Member 'HouseActorBase_C_ExecuteUbergraph_HouseActorBase::K2Node_Event_InteractingActor_4' has a wrong offset!");
static_assert(offsetof(HouseActorBase_C_ExecuteUbergraph_HouseActorBase, K2Node_Event_InteractionComponent_2) == 0x000060, "Member 'HouseActorBase_C_ExecuteUbergraph_HouseActorBase::K2Node_Event_InteractionComponent_2' has a wrong offset!");
static_assert(offsetof(HouseActorBase_C_ExecuteUbergraph_HouseActorBase, K2Node_Event_InteractionComponent_1) == 0x000068, "Member 'HouseActorBase_C_ExecuteUbergraph_HouseActorBase::K2Node_Event_InteractionComponent_1' has a wrong offset!");
static_assert(offsetof(HouseActorBase_C_ExecuteUbergraph_HouseActorBase, K2Node_Event_InteractingActor_3) == 0x000070, "Member 'HouseActorBase_C_ExecuteUbergraph_HouseActorBase::K2Node_Event_InteractingActor_3' has a wrong offset!");
static_assert(offsetof(HouseActorBase_C_ExecuteUbergraph_HouseActorBase, K2Node_Event_InteractionComponent) == 0x000078, "Member 'HouseActorBase_C_ExecuteUbergraph_HouseActorBase::K2Node_Event_InteractionComponent' has a wrong offset!");
static_assert(offsetof(HouseActorBase_C_ExecuteUbergraph_HouseActorBase, K2Node_Event_InteractingActor_2) == 0x000080, "Member 'HouseActorBase_C_ExecuteUbergraph_HouseActorBase::K2Node_Event_InteractingActor_2' has a wrong offset!");
static_assert(offsetof(HouseActorBase_C_ExecuteUbergraph_HouseActorBase, K2Node_Event_AttackingActor) == 0x000088, "Member 'HouseActorBase_C_ExecuteUbergraph_HouseActorBase::K2Node_Event_AttackingActor' has a wrong offset!");
static_assert(offsetof(HouseActorBase_C_ExecuteUbergraph_HouseActorBase, K2Node_Event_Direction) == 0x000090, "Member 'HouseActorBase_C_ExecuteUbergraph_HouseActorBase::K2Node_Event_Direction' has a wrong offset!");
static_assert(offsetof(HouseActorBase_C_ExecuteUbergraph_HouseActorBase, K2Node_Event_InteractingActor_1) == 0x0000A8, "Member 'HouseActorBase_C_ExecuteUbergraph_HouseActorBase::K2Node_Event_InteractingActor_1' has a wrong offset!");
static_assert(offsetof(HouseActorBase_C_ExecuteUbergraph_HouseActorBase, K2Node_Event_InteractingActor) == 0x0000B0, "Member 'HouseActorBase_C_ExecuteUbergraph_HouseActorBase::K2Node_Event_InteractingActor' has a wrong offset!");
static_assert(offsetof(HouseActorBase_C_ExecuteUbergraph_HouseActorBase, K2Node_Event_Interactable) == 0x0000B8, "Member 'HouseActorBase_C_ExecuteUbergraph_HouseActorBase::K2Node_Event_Interactable' has a wrong offset!");
static_assert(offsetof(HouseActorBase_C_ExecuteUbergraph_HouseActorBase, K2Node_CustomEvent_Show_1) == 0x0000B9, "Member 'HouseActorBase_C_ExecuteUbergraph_HouseActorBase::K2Node_CustomEvent_Show_1' has a wrong offset!");
static_assert(offsetof(HouseActorBase_C_ExecuteUbergraph_HouseActorBase, K2Node_Event_Focusing_Actor) == 0x0000C0, "Member 'HouseActorBase_C_ExecuteUbergraph_HouseActorBase::K2Node_Event_Focusing_Actor' has a wrong offset!");
static_assert(offsetof(HouseActorBase_C_ExecuteUbergraph_HouseActorBase, K2Node_CustomEvent_Show) == 0x0000C8, "Member 'HouseActorBase_C_ExecuteUbergraph_HouseActorBase::K2Node_CustomEvent_Show' has a wrong offset!");
static_assert(offsetof(HouseActorBase_C_ExecuteUbergraph_HouseActorBase, CallFunc_IsDedicatedServer_ReturnValue) == 0x0000C9, "Member 'HouseActorBase_C_ExecuteUbergraph_HouseActorBase::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(HouseActorBase_C_ExecuteUbergraph_HouseActorBase, K2Node_Event_SabotagingActor) == 0x0000D0, "Member 'HouseActorBase_C_ExecuteUbergraph_HouseActorBase::K2Node_Event_SabotagingActor' has a wrong offset!");
static_assert(offsetof(HouseActorBase_C_ExecuteUbergraph_HouseActorBase, K2Node_CustomEvent_Location) == 0x0000D8, "Member 'HouseActorBase_C_ExecuteUbergraph_HouseActorBase::K2Node_CustomEvent_Location' has a wrong offset!");
static_assert(offsetof(HouseActorBase_C_ExecuteUbergraph_HouseActorBase, K2Node_CustomEvent_HitImpulse) == 0x0000F0, "Member 'HouseActorBase_C_ExecuteUbergraph_HouseActorBase::K2Node_CustomEvent_HitImpulse' has a wrong offset!");
static_assert(offsetof(HouseActorBase_C_ExecuteUbergraph_HouseActorBase, K2Node_CustomEvent_ImpactEffect) == 0x000108, "Member 'HouseActorBase_C_ExecuteUbergraph_HouseActorBase::K2Node_CustomEvent_ImpactEffect' has a wrong offset!");
static_assert(offsetof(HouseActorBase_C_ExecuteUbergraph_HouseActorBase, K2Node_SwitchEnum_CmpSuccess) == 0x000109, "Member 'HouseActorBase_C_ExecuteUbergraph_HouseActorBase::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(HouseActorBase_C_ExecuteUbergraph_HouseActorBase, CallFunc_SpawnSystemAtLocation_ReturnValue) == 0x000110, "Member 'HouseActorBase_C_ExecuteUbergraph_HouseActorBase::CallFunc_SpawnSystemAtLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(HouseActorBase_C_ExecuteUbergraph_HouseActorBase, K2Node_Event_Health) == 0x000118, "Member 'HouseActorBase_C_ExecuteUbergraph_HouseActorBase::K2Node_Event_Health' has a wrong offset!");
static_assert(offsetof(HouseActorBase_C_ExecuteUbergraph_HouseActorBase, K2Node_Event_MaxHealth) == 0x00011C, "Member 'HouseActorBase_C_ExecuteUbergraph_HouseActorBase::K2Node_Event_MaxHealth' has a wrong offset!");
static_assert(offsetof(HouseActorBase_C_ExecuteUbergraph_HouseActorBase, CallFunc_BP_ApplyGameplayEffectToSelf_ReturnValue) == 0x000120, "Member 'HouseActorBase_C_ExecuteUbergraph_HouseActorBase::CallFunc_BP_ApplyGameplayEffectToSelf_ReturnValue' has a wrong offset!");
static_assert(offsetof(HouseActorBase_C_ExecuteUbergraph_HouseActorBase, CallFunc_Conv_DoubleToString_ReturnValue) == 0x000128, "Member 'HouseActorBase_C_ExecuteUbergraph_HouseActorBase::CallFunc_Conv_DoubleToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(HouseActorBase_C_ExecuteUbergraph_HouseActorBase, Temp_bool_IsClosed_Variable) == 0x000138, "Member 'HouseActorBase_C_ExecuteUbergraph_HouseActorBase::Temp_bool_IsClosed_Variable' has a wrong offset!");
static_assert(offsetof(HouseActorBase_C_ExecuteUbergraph_HouseActorBase, CallFunc_Concat_StrStr_ReturnValue) == 0x000140, "Member 'HouseActorBase_C_ExecuteUbergraph_HouseActorBase::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(HouseActorBase_C_ExecuteUbergraph_HouseActorBase, CallFunc_BP_ApplyGameplayEffectToSelf_ReturnValue_1) == 0x000150, "Member 'HouseActorBase_C_ExecuteUbergraph_HouseActorBase::CallFunc_BP_ApplyGameplayEffectToSelf_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(HouseActorBase_C_ExecuteUbergraph_HouseActorBase, CallFunc_HasAuthority_ReturnValue_1) == 0x000158, "Member 'HouseActorBase_C_ExecuteUbergraph_HouseActorBase::CallFunc_HasAuthority_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(HouseActorBase_C_ExecuteUbergraph_HouseActorBase, CallFunc_IsDedicatedServer_ReturnValue_1) == 0x000159, "Member 'HouseActorBase_C_ExecuteUbergraph_HouseActorBase::CallFunc_IsDedicatedServer_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(HouseActorBase_C_ExecuteUbergraph_HouseActorBase, K2Node_CreateDelegate_OutputDelegate_1) == 0x00015C, "Member 'HouseActorBase_C_ExecuteUbergraph_HouseActorBase::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(HouseActorBase_C_ExecuteUbergraph_HouseActorBase, CallFunc_IsDedicatedServer_ReturnValue_2) == 0x00016C, "Member 'HouseActorBase_C_ExecuteUbergraph_HouseActorBase::CallFunc_IsDedicatedServer_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(HouseActorBase_C_ExecuteUbergraph_HouseActorBase, Temp_int_Array_Index_Variable_1) == 0x000170, "Member 'HouseActorBase_C_ExecuteUbergraph_HouseActorBase::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(HouseActorBase_C_ExecuteUbergraph_HouseActorBase, CallFunc_GetGameTimeInSeconds_ReturnValue) == 0x000178, "Member 'HouseActorBase_C_ExecuteUbergraph_HouseActorBase::CallFunc_GetGameTimeInSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(HouseActorBase_C_ExecuteUbergraph_HouseActorBase, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000180, "Member 'HouseActorBase_C_ExecuteUbergraph_HouseActorBase::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(HouseActorBase_C_ExecuteUbergraph_HouseActorBase, CallFunc_GetGameTimeInSeconds_ReturnValue_1) == 0x000188, "Member 'HouseActorBase_C_ExecuteUbergraph_HouseActorBase::CallFunc_GetGameTimeInSeconds_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(HouseActorBase_C_ExecuteUbergraph_HouseActorBase, CallFunc_Greater_DoubleDouble_ReturnValue_1) == 0x000190, "Member 'HouseActorBase_C_ExecuteUbergraph_HouseActorBase::CallFunc_Greater_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(HouseActorBase_C_ExecuteUbergraph_HouseActorBase, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000198, "Member 'HouseActorBase_C_ExecuteUbergraph_HouseActorBase::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(HouseActorBase_C_ExecuteUbergraph_HouseActorBase, K2Node_Event_Delta) == 0x0001A0, "Member 'HouseActorBase_C_ExecuteUbergraph_HouseActorBase::K2Node_Event_Delta' has a wrong offset!");
static_assert(offsetof(HouseActorBase_C_ExecuteUbergraph_HouseActorBase, K2Node_Event_Causer) == 0x0001A8, "Member 'HouseActorBase_C_ExecuteUbergraph_HouseActorBase::K2Node_Event_Causer' has a wrong offset!");
static_assert(offsetof(HouseActorBase_C_ExecuteUbergraph_HouseActorBase, K2Node_Event_CombatParticipant) == 0x0001B0, "Member 'HouseActorBase_C_ExecuteUbergraph_HouseActorBase::K2Node_Event_CombatParticipant' has a wrong offset!");
static_assert(offsetof(HouseActorBase_C_ExecuteUbergraph_HouseActorBase, K2Node_Event_KillMethod) == 0x000210, "Member 'HouseActorBase_C_ExecuteUbergraph_HouseActorBase::K2Node_Event_KillMethod' has a wrong offset!");
static_assert(offsetof(HouseActorBase_C_ExecuteUbergraph_HouseActorBase, K2Node_Event_Location) == 0x0004F8, "Member 'HouseActorBase_C_ExecuteUbergraph_HouseActorBase::K2Node_Event_Location' has a wrong offset!");
static_assert(offsetof(HouseActorBase_C_ExecuteUbergraph_HouseActorBase, K2Node_CustomEvent_Amount) == 0x000510, "Member 'HouseActorBase_C_ExecuteUbergraph_HouseActorBase::K2Node_CustomEvent_Amount' has a wrong offset!");
static_assert(offsetof(HouseActorBase_C_ExecuteUbergraph_HouseActorBase, K2Node_CustomEvent_Target) == 0x000518, "Member 'HouseActorBase_C_ExecuteUbergraph_HouseActorBase::K2Node_CustomEvent_Target' has a wrong offset!");
static_assert(offsetof(HouseActorBase_C_ExecuteUbergraph_HouseActorBase, CallFunc_CreateKillInfo_KillGameplayMessage) == 0x000520, "Member 'HouseActorBase_C_ExecuteUbergraph_HouseActorBase::CallFunc_CreateKillInfo_KillGameplayMessage' has a wrong offset!");
static_assert(offsetof(HouseActorBase_C_ExecuteUbergraph_HouseActorBase, CallFunc_NotEqual_DoubleDouble_ReturnValue) == 0x0008F8, "Member 'HouseActorBase_C_ExecuteUbergraph_HouseActorBase::CallFunc_NotEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(HouseActorBase_C_ExecuteUbergraph_HouseActorBase, CallFunc_GetGameInstanceSubsystem_ReturnValue) == 0x000900, "Member 'HouseActorBase_C_ExecuteUbergraph_HouseActorBase::CallFunc_GetGameInstanceSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(HouseActorBase_C_ExecuteUbergraph_HouseActorBase, CallFunc_ListenToInitializationStateEnded_ReturnValue_1) == 0x000908, "Member 'HouseActorBase_C_ExecuteUbergraph_HouseActorBase::CallFunc_ListenToInitializationStateEnded_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(HouseActorBase_C_ExecuteUbergraph_HouseActorBase, CallFunc_IsValid_ReturnValue_1) == 0x000910, "Member 'HouseActorBase_C_ExecuteUbergraph_HouseActorBase::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(HouseActorBase_C_ExecuteUbergraph_HouseActorBase, K2Node_CustomEvent_New_Team) == 0x000918, "Member 'HouseActorBase_C_ExecuteUbergraph_HouseActorBase::K2Node_CustomEvent_New_Team' has a wrong offset!");
static_assert(offsetof(HouseActorBase_C_ExecuteUbergraph_HouseActorBase, CallFunc_IsNotLocalTeam_ReturnValue) == 0x000950, "Member 'HouseActorBase_C_ExecuteUbergraph_HouseActorBase::CallFunc_IsNotLocalTeam_ReturnValue' has a wrong offset!");
static_assert(offsetof(HouseActorBase_C_ExecuteUbergraph_HouseActorBase, CallFunc_LessEqual_DoubleDouble_ReturnValue) == 0x000951, "Member 'HouseActorBase_C_ExecuteUbergraph_HouseActorBase::CallFunc_LessEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(HouseActorBase_C_ExecuteUbergraph_HouseActorBase, K2Node_CustomEvent_Message) == 0x000958, "Member 'HouseActorBase_C_ExecuteUbergraph_HouseActorBase::K2Node_CustomEvent_Message' has a wrong offset!");
static_assert(offsetof(HouseActorBase_C_ExecuteUbergraph_HouseActorBase, K2Node_CreateDelegate_OutputDelegate_2) == 0x000D30, "Member 'HouseActorBase_C_ExecuteUbergraph_HouseActorBase::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(HouseActorBase_C_ExecuteUbergraph_HouseActorBase, CallFunc_GetUserWidgetObject_ReturnValue) == 0x000D40, "Member 'HouseActorBase_C_ExecuteUbergraph_HouseActorBase::CallFunc_GetUserWidgetObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(HouseActorBase_C_ExecuteUbergraph_HouseActorBase, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000D48, "Member 'HouseActorBase_C_ExecuteUbergraph_HouseActorBase::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(HouseActorBase_C_ExecuteUbergraph_HouseActorBase, K2Node_DynamicCast_AsItem_Compatible_Info_WI) == 0x000D60, "Member 'HouseActorBase_C_ExecuteUbergraph_HouseActorBase::K2Node_DynamicCast_AsItem_Compatible_Info_WI' has a wrong offset!");
static_assert(offsetof(HouseActorBase_C_ExecuteUbergraph_HouseActorBase, K2Node_DynamicCast_bSuccess) == 0x000D68, "Member 'HouseActorBase_C_ExecuteUbergraph_HouseActorBase::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(HouseActorBase_C_ExecuteUbergraph_HouseActorBase, K2Node_CustomEvent_InVisible) == 0x000D69, "Member 'HouseActorBase_C_ExecuteUbergraph_HouseActorBase::K2Node_CustomEvent_InVisible' has a wrong offset!");
static_assert(offsetof(HouseActorBase_C_ExecuteUbergraph_HouseActorBase, CallFunc_GetFloatAttributeFromAbilitySystemComponent_bSuccessfullyFoundAttribute) == 0x000D6A, "Member 'HouseActorBase_C_ExecuteUbergraph_HouseActorBase::CallFunc_GetFloatAttributeFromAbilitySystemComponent_bSuccessfullyFoundAttribute' has a wrong offset!");
static_assert(offsetof(HouseActorBase_C_ExecuteUbergraph_HouseActorBase, CallFunc_GetFloatAttributeFromAbilitySystemComponent_ReturnValue) == 0x000D6C, "Member 'HouseActorBase_C_ExecuteUbergraph_HouseActorBase::CallFunc_GetFloatAttributeFromAbilitySystemComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(HouseActorBase_C_ExecuteUbergraph_HouseActorBase, CallFunc_GetFloatAttributeFromAbilitySystemComponent_bSuccessfullyFoundAttribute_1) == 0x000D70, "Member 'HouseActorBase_C_ExecuteUbergraph_HouseActorBase::CallFunc_GetFloatAttributeFromAbilitySystemComponent_bSuccessfullyFoundAttribute_1' has a wrong offset!");
static_assert(offsetof(HouseActorBase_C_ExecuteUbergraph_HouseActorBase, CallFunc_GetFloatAttributeFromAbilitySystemComponent_ReturnValue_1) == 0x000D74, "Member 'HouseActorBase_C_ExecuteUbergraph_HouseActorBase::CallFunc_GetFloatAttributeFromAbilitySystemComponent_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(HouseActorBase_C_ExecuteUbergraph_HouseActorBase, Temp_int_Loop_Counter_Variable_1) == 0x000D78, "Member 'HouseActorBase_C_ExecuteUbergraph_HouseActorBase::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(HouseActorBase_C_ExecuteUbergraph_HouseActorBase, CallFunc_Add_IntInt_ReturnValue_1) == 0x000D7C, "Member 'HouseActorBase_C_ExecuteUbergraph_HouseActorBase::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(HouseActorBase_C_ExecuteUbergraph_HouseActorBase, CallFunc_ListenToInitializationStateEnded_ReturnValue_2) == 0x000D80, "Member 'HouseActorBase_C_ExecuteUbergraph_HouseActorBase::CallFunc_ListenToInitializationStateEnded_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(HouseActorBase_C_ExecuteUbergraph_HouseActorBase, CallFunc_GetChildrenComponents_Children) == 0x000D88, "Member 'HouseActorBase_C_ExecuteUbergraph_HouseActorBase::CallFunc_GetChildrenComponents_Children' has a wrong offset!");
static_assert(offsetof(HouseActorBase_C_ExecuteUbergraph_HouseActorBase, CallFunc_Array_Get_Item) == 0x000D98, "Member 'HouseActorBase_C_ExecuteUbergraph_HouseActorBase::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(HouseActorBase_C_ExecuteUbergraph_HouseActorBase, CallFunc_Array_Length_ReturnValue) == 0x000DA0, "Member 'HouseActorBase_C_ExecuteUbergraph_HouseActorBase::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(HouseActorBase_C_ExecuteUbergraph_HouseActorBase, K2Node_DynamicCast_AsPrimitive_Component) == 0x000DA8, "Member 'HouseActorBase_C_ExecuteUbergraph_HouseActorBase::K2Node_DynamicCast_AsPrimitive_Component' has a wrong offset!");
static_assert(offsetof(HouseActorBase_C_ExecuteUbergraph_HouseActorBase, K2Node_DynamicCast_bSuccess_1) == 0x000DB0, "Member 'HouseActorBase_C_ExecuteUbergraph_HouseActorBase::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(HouseActorBase_C_ExecuteUbergraph_HouseActorBase, CallFunc_Less_IntInt_ReturnValue) == 0x000DB1, "Member 'HouseActorBase_C_ExecuteUbergraph_HouseActorBase::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(HouseActorBase_C_ExecuteUbergraph_HouseActorBase, CallFunc_IsValid_ReturnValue_2) == 0x000DB2, "Member 'HouseActorBase_C_ExecuteUbergraph_HouseActorBase::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(HouseActorBase_C_ExecuteUbergraph_HouseActorBase, CallFunc_MakeLiteralGameplayTag_ReturnValue) == 0x000DB4, "Member 'HouseActorBase_C_ExecuteUbergraph_HouseActorBase::CallFunc_MakeLiteralGameplayTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(HouseActorBase_C_ExecuteUbergraph_HouseActorBase, CallFunc_GetStencilValueFromMask_ReturnValue) == 0x000DBC, "Member 'HouseActorBase_C_ExecuteUbergraph_HouseActorBase::CallFunc_GetStencilValueFromMask_ReturnValue' has a wrong offset!");
static_assert(offsetof(HouseActorBase_C_ExecuteUbergraph_HouseActorBase, CallFunc_HasAuthority_ReturnValue_2) == 0x000DC0, "Member 'HouseActorBase_C_ExecuteUbergraph_HouseActorBase::CallFunc_HasAuthority_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(HouseActorBase_C_ExecuteUbergraph_HouseActorBase, K2Node_ComponentBoundEvent_OverlappedComponent_1) == 0x000DC8, "Member 'HouseActorBase_C_ExecuteUbergraph_HouseActorBase::K2Node_ComponentBoundEvent_OverlappedComponent_1' has a wrong offset!");
static_assert(offsetof(HouseActorBase_C_ExecuteUbergraph_HouseActorBase, K2Node_ComponentBoundEvent_OtherActor_1) == 0x000DD0, "Member 'HouseActorBase_C_ExecuteUbergraph_HouseActorBase::K2Node_ComponentBoundEvent_OtherActor_1' has a wrong offset!");
static_assert(offsetof(HouseActorBase_C_ExecuteUbergraph_HouseActorBase, K2Node_ComponentBoundEvent_OtherComp_1) == 0x000DD8, "Member 'HouseActorBase_C_ExecuteUbergraph_HouseActorBase::K2Node_ComponentBoundEvent_OtherComp_1' has a wrong offset!");
static_assert(offsetof(HouseActorBase_C_ExecuteUbergraph_HouseActorBase, K2Node_ComponentBoundEvent_OtherBodyIndex_1) == 0x000DE0, "Member 'HouseActorBase_C_ExecuteUbergraph_HouseActorBase::K2Node_ComponentBoundEvent_OtherBodyIndex_1' has a wrong offset!");
static_assert(offsetof(HouseActorBase_C_ExecuteUbergraph_HouseActorBase, K2Node_ComponentBoundEvent_bFromSweep) == 0x000DE4, "Member 'HouseActorBase_C_ExecuteUbergraph_HouseActorBase::K2Node_ComponentBoundEvent_bFromSweep' has a wrong offset!");
static_assert(offsetof(HouseActorBase_C_ExecuteUbergraph_HouseActorBase, K2Node_ComponentBoundEvent_SweepResult) == 0x000DE8, "Member 'HouseActorBase_C_ExecuteUbergraph_HouseActorBase::K2Node_ComponentBoundEvent_SweepResult' has a wrong offset!");
static_assert(offsetof(HouseActorBase_C_ExecuteUbergraph_HouseActorBase, K2Node_DynamicCast_AsPawn) == 0x000EE0, "Member 'HouseActorBase_C_ExecuteUbergraph_HouseActorBase::K2Node_DynamicCast_AsPawn' has a wrong offset!");
static_assert(offsetof(HouseActorBase_C_ExecuteUbergraph_HouseActorBase, K2Node_DynamicCast_bSuccess_2) == 0x000EE8, "Member 'HouseActorBase_C_ExecuteUbergraph_HouseActorBase::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(HouseActorBase_C_ExecuteUbergraph_HouseActorBase, CallFunc_Array_Get_Item_1) == 0x000EF0, "Member 'HouseActorBase_C_ExecuteUbergraph_HouseActorBase::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(HouseActorBase_C_ExecuteUbergraph_HouseActorBase, CallFunc_IsLocallyControlled_ReturnValue) == 0x000EF8, "Member 'HouseActorBase_C_ExecuteUbergraph_HouseActorBase::CallFunc_IsLocallyControlled_ReturnValue' has a wrong offset!");
static_assert(offsetof(HouseActorBase_C_ExecuteUbergraph_HouseActorBase, CallFunc_IsValid_ReturnValue_3) == 0x000EF9, "Member 'HouseActorBase_C_ExecuteUbergraph_HouseActorBase::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(HouseActorBase_C_ExecuteUbergraph_HouseActorBase, CallFunc_Array_Length_ReturnValue_1) == 0x000EFC, "Member 'HouseActorBase_C_ExecuteUbergraph_HouseActorBase::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(HouseActorBase_C_ExecuteUbergraph_HouseActorBase, K2Node_ComponentBoundEvent_OverlappedComponent) == 0x000F00, "Member 'HouseActorBase_C_ExecuteUbergraph_HouseActorBase::K2Node_ComponentBoundEvent_OverlappedComponent' has a wrong offset!");
static_assert(offsetof(HouseActorBase_C_ExecuteUbergraph_HouseActorBase, K2Node_ComponentBoundEvent_OtherActor) == 0x000F08, "Member 'HouseActorBase_C_ExecuteUbergraph_HouseActorBase::K2Node_ComponentBoundEvent_OtherActor' has a wrong offset!");
static_assert(offsetof(HouseActorBase_C_ExecuteUbergraph_HouseActorBase, K2Node_ComponentBoundEvent_OtherComp) == 0x000F10, "Member 'HouseActorBase_C_ExecuteUbergraph_HouseActorBase::K2Node_ComponentBoundEvent_OtherComp' has a wrong offset!");
static_assert(offsetof(HouseActorBase_C_ExecuteUbergraph_HouseActorBase, K2Node_ComponentBoundEvent_OtherBodyIndex) == 0x000F18, "Member 'HouseActorBase_C_ExecuteUbergraph_HouseActorBase::K2Node_ComponentBoundEvent_OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(HouseActorBase_C_ExecuteUbergraph_HouseActorBase, CallFunc_Less_IntInt_ReturnValue_1) == 0x000F1C, "Member 'HouseActorBase_C_ExecuteUbergraph_HouseActorBase::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(HouseActorBase_C_ExecuteUbergraph_HouseActorBase, K2Node_DynamicCast_AsPawn_1) == 0x000F20, "Member 'HouseActorBase_C_ExecuteUbergraph_HouseActorBase::K2Node_DynamicCast_AsPawn_1' has a wrong offset!");
static_assert(offsetof(HouseActorBase_C_ExecuteUbergraph_HouseActorBase, K2Node_DynamicCast_bSuccess_3) == 0x000F28, "Member 'HouseActorBase_C_ExecuteUbergraph_HouseActorBase::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(HouseActorBase_C_ExecuteUbergraph_HouseActorBase, CallFunc_IsLocallyControlled_ReturnValue_1) == 0x000F29, "Member 'HouseActorBase_C_ExecuteUbergraph_HouseActorBase::CallFunc_IsLocallyControlled_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(HouseActorBase_C_ExecuteUbergraph_HouseActorBase, CallFunc_K2_GetComponentLocation_ReturnValue_1) == 0x000F30, "Member 'HouseActorBase_C_ExecuteUbergraph_HouseActorBase::CallFunc_K2_GetComponentLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(HouseActorBase_C_ExecuteUbergraph_HouseActorBase, CallFunc_K2_SetWorldLocation_SweepHitResult) == 0x000F48, "Member 'HouseActorBase_C_ExecuteUbergraph_HouseActorBase::CallFunc_K2_SetWorldLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(HouseActorBase_C_ExecuteUbergraph_HouseActorBase, CallFunc_Conv_DoubleToString_InDouble_ImplicitCast) == 0x001040, "Member 'HouseActorBase_C_ExecuteUbergraph_HouseActorBase::CallFunc_Conv_DoubleToString_InDouble_ImplicitCast' has a wrong offset!");
static_assert(offsetof(HouseActorBase_C_ExecuteUbergraph_HouseActorBase, CallFunc_UpdateProgressbar_Value_ImplicitCast) == 0x001048, "Member 'HouseActorBase_C_ExecuteUbergraph_HouseActorBase::CallFunc_UpdateProgressbar_Value_ImplicitCast' has a wrong offset!");
static_assert(offsetof(HouseActorBase_C_ExecuteUbergraph_HouseActorBase, CallFunc_UpdateProgressbar_Max_ImplicitCast) == 0x001050, "Member 'HouseActorBase_C_ExecuteUbergraph_HouseActorBase::CallFunc_UpdateProgressbar_Max_ImplicitCast' has a wrong offset!");
static_assert(offsetof(HouseActorBase_C_ExecuteUbergraph_HouseActorBase, CallFunc_NotEqual_DoubleDouble_A_ImplicitCast) == 0x001058, "Member 'HouseActorBase_C_ExecuteUbergraph_HouseActorBase::CallFunc_NotEqual_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(HouseActorBase_C_ExecuteUbergraph_HouseActorBase, CallFunc_SetMorphTarget_Value_ImplicitCast) == 0x001060, "Member 'HouseActorBase_C_ExecuteUbergraph_HouseActorBase::CallFunc_SetMorphTarget_Value_ImplicitCast' has a wrong offset!");
static_assert(offsetof(HouseActorBase_C_ExecuteUbergraph_HouseActorBase, CallFunc_LessEqual_DoubleDouble_A_ImplicitCast) == 0x001068, "Member 'HouseActorBase_C_ExecuteUbergraph_HouseActorBase::CallFunc_LessEqual_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(HouseActorBase_C_ExecuteUbergraph_HouseActorBase, CallFunc_UpdateProgressbar_Value_ImplicitCast_1) == 0x001070, "Member 'HouseActorBase_C_ExecuteUbergraph_HouseActorBase::CallFunc_UpdateProgressbar_Value_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(HouseActorBase_C_ExecuteUbergraph_HouseActorBase, CallFunc_UpdateProgressbar_Max_ImplicitCast_1) == 0x001078, "Member 'HouseActorBase_C_ExecuteUbergraph_HouseActorBase::CallFunc_UpdateProgressbar_Max_ImplicitCast_1' has a wrong offset!");

// Function HouseActorBase.HouseActorBase_C.GetDurabilityCostWhenHit
// 0x0008 (0x0008 - 0x0000)
struct HouseActorBase_C_GetDurabilityCostWhenHit final
{
public:
	double                                        Amount;                                            // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(HouseActorBase_C_GetDurabilityCostWhenHit) == 0x000008, "Wrong alignment on HouseActorBase_C_GetDurabilityCostWhenHit");
static_assert(sizeof(HouseActorBase_C_GetDurabilityCostWhenHit) == 0x000008, "Wrong size on HouseActorBase_C_GetDurabilityCostWhenHit");
static_assert(offsetof(HouseActorBase_C_GetDurabilityCostWhenHit, Amount) == 0x000000, "Member 'HouseActorBase_C_GetDurabilityCostWhenHit::Amount' has a wrong offset!");

// Function HouseActorBase.HouseActorBase_C.GetMaterialType
// 0x0001 (0x0001 - 0x0000)
struct HouseActorBase_C_GetMaterialType final
{
public:
	E_MaterialTypes                               MaterialType;                                      // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(HouseActorBase_C_GetMaterialType) == 0x000001, "Wrong alignment on HouseActorBase_C_GetMaterialType");
static_assert(sizeof(HouseActorBase_C_GetMaterialType) == 0x000001, "Wrong size on HouseActorBase_C_GetMaterialType");
static_assert(offsetof(HouseActorBase_C_GetMaterialType, MaterialType) == 0x000000, "Member 'HouseActorBase_C_GetMaterialType::MaterialType' has a wrong offset!");

// Function HouseActorBase.HouseActorBase_C.GetNewWidgetColor
// 0x0014 (0x0014 - 0x0000)
struct HouseActorBase_C_GetNewWidgetColor final
{
public:
	struct FSlateColor                            NewColor;                                          // 0x0000(0x0014)(Parm, OutParm)
};
static_assert(alignof(HouseActorBase_C_GetNewWidgetColor) == 0x000004, "Wrong alignment on HouseActorBase_C_GetNewWidgetColor");
static_assert(sizeof(HouseActorBase_C_GetNewWidgetColor) == 0x000014, "Wrong size on HouseActorBase_C_GetNewWidgetColor");
static_assert(offsetof(HouseActorBase_C_GetNewWidgetColor, NewColor) == 0x000000, "Member 'HouseActorBase_C_GetNewWidgetColor::NewColor' has a wrong offset!");

// Function HouseActorBase.HouseActorBase_C.GetOptionalText
// 0x0020 (0x0020 - 0x0000)
struct HouseActorBase_C_GetOptionalText final
{
public:
	class FText                                   Return;                                            // 0x0000(0x0010)(Parm, OutParm)
	class FText                                   Optional_Second_Line;                              // 0x0010(0x0010)(Parm, OutParm)
};
static_assert(alignof(HouseActorBase_C_GetOptionalText) == 0x000008, "Wrong alignment on HouseActorBase_C_GetOptionalText");
static_assert(sizeof(HouseActorBase_C_GetOptionalText) == 0x000020, "Wrong size on HouseActorBase_C_GetOptionalText");
static_assert(offsetof(HouseActorBase_C_GetOptionalText, Return) == 0x000000, "Member 'HouseActorBase_C_GetOptionalText::Return' has a wrong offset!");
static_assert(offsetof(HouseActorBase_C_GetOptionalText, Optional_Second_Line) == 0x000010, "Member 'HouseActorBase_C_GetOptionalText::Optional_Second_Line' has a wrong offset!");

// Function HouseActorBase.HouseActorBase_C.GetPriority
// 0x0004 (0x0004 - 0x0000)
struct HouseActorBase_C_GetPriority final
{
public:
	int32                                         Priority;                                          // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(HouseActorBase_C_GetPriority) == 0x000004, "Wrong alignment on HouseActorBase_C_GetPriority");
static_assert(sizeof(HouseActorBase_C_GetPriority) == 0x000004, "Wrong size on HouseActorBase_C_GetPriority");
static_assert(offsetof(HouseActorBase_C_GetPriority, Priority) == 0x000000, "Member 'HouseActorBase_C_GetPriority::Priority' has a wrong offset!");

// Function HouseActorBase.HouseActorBase_C.GetWidgetLocation
// 0x0018 (0x0018 - 0x0000)
struct HouseActorBase_C_GetWidgetLocation final
{
public:
	struct FVector                                Location;                                          // 0x0000(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(HouseActorBase_C_GetWidgetLocation) == 0x000008, "Wrong alignment on HouseActorBase_C_GetWidgetLocation");
static_assert(sizeof(HouseActorBase_C_GetWidgetLocation) == 0x000018, "Wrong size on HouseActorBase_C_GetWidgetLocation");
static_assert(offsetof(HouseActorBase_C_GetWidgetLocation, Location) == 0x000000, "Member 'HouseActorBase_C_GetWidgetLocation::Location' has a wrong offset!");

// Function HouseActorBase.HouseActorBase_C.HideInteractionWidget
// 0x0001 (0x0001 - 0x0000)
struct HouseActorBase_C_HideInteractionWidget final
{
public:
	bool                                          Return;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(HouseActorBase_C_HideInteractionWidget) == 0x000001, "Wrong alignment on HouseActorBase_C_HideInteractionWidget");
static_assert(sizeof(HouseActorBase_C_HideInteractionWidget) == 0x000001, "Wrong size on HouseActorBase_C_HideInteractionWidget");
static_assert(offsetof(HouseActorBase_C_HideInteractionWidget, Return) == 0x000000, "Member 'HouseActorBase_C_HideInteractionWidget::Return' has a wrong offset!");

// Function HouseActorBase.HouseActorBase_C.HitInterface
// 0x0018 (0x0018 - 0x0000)
struct HouseActorBase_C_HitInterface final
{
public:
	struct FVector                                Direction;                                         // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(HouseActorBase_C_HitInterface) == 0x000008, "Wrong alignment on HouseActorBase_C_HitInterface");
static_assert(sizeof(HouseActorBase_C_HitInterface) == 0x000018, "Wrong size on HouseActorBase_C_HitInterface");
static_assert(offsetof(HouseActorBase_C_HitInterface, Direction) == 0x000000, "Member 'HouseActorBase_C_HitInterface::Direction' has a wrong offset!");

// Function HouseActorBase.HouseActorBase_C.House Actor Impact Cosmetics
// 0x0038 (0x0038 - 0x0000)
struct HouseActorBase_C_House_Actor_Impact_Cosmetics final
{
public:
	struct FVector                                Location;                                          // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                HitImpulse;                                        // 0x0018(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_ImpactEffect                                ImpactEffect;                                      // 0x0030(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(HouseActorBase_C_House_Actor_Impact_Cosmetics) == 0x000008, "Wrong alignment on HouseActorBase_C_House_Actor_Impact_Cosmetics");
static_assert(sizeof(HouseActorBase_C_House_Actor_Impact_Cosmetics) == 0x000038, "Wrong size on HouseActorBase_C_House_Actor_Impact_Cosmetics");
static_assert(offsetof(HouseActorBase_C_House_Actor_Impact_Cosmetics, Location) == 0x000000, "Member 'HouseActorBase_C_House_Actor_Impact_Cosmetics::Location' has a wrong offset!");
static_assert(offsetof(HouseActorBase_C_House_Actor_Impact_Cosmetics, HitImpulse) == 0x000018, "Member 'HouseActorBase_C_House_Actor_Impact_Cosmetics::HitImpulse' has a wrong offset!");
static_assert(offsetof(HouseActorBase_C_House_Actor_Impact_Cosmetics, ImpactEffect) == 0x000030, "Member 'HouseActorBase_C_House_Actor_Impact_Cosmetics::ImpactEffect' has a wrong offset!");

// Function HouseActorBase.HouseActorBase_C.ImpactCosmetics
// 0x0048 (0x0048 - 0x0000)
struct HouseActorBase_C_ImpactCosmetics final
{
public:
	class APawn*                                  ImpactCauser;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Location;                                          // 0x0008(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                HitImpulse;                                        // 0x0020(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_ImpactEffect                                ImpactEffect;                                      // 0x0038(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x3];                                       // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   BoneName;                                          // 0x003C(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ChangedAttributes;                                 // 0x0044(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(HouseActorBase_C_ImpactCosmetics) == 0x000008, "Wrong alignment on HouseActorBase_C_ImpactCosmetics");
static_assert(sizeof(HouseActorBase_C_ImpactCosmetics) == 0x000048, "Wrong size on HouseActorBase_C_ImpactCosmetics");
static_assert(offsetof(HouseActorBase_C_ImpactCosmetics, ImpactCauser) == 0x000000, "Member 'HouseActorBase_C_ImpactCosmetics::ImpactCauser' has a wrong offset!");
static_assert(offsetof(HouseActorBase_C_ImpactCosmetics, Location) == 0x000008, "Member 'HouseActorBase_C_ImpactCosmetics::Location' has a wrong offset!");
static_assert(offsetof(HouseActorBase_C_ImpactCosmetics, HitImpulse) == 0x000020, "Member 'HouseActorBase_C_ImpactCosmetics::HitImpulse' has a wrong offset!");
static_assert(offsetof(HouseActorBase_C_ImpactCosmetics, ImpactEffect) == 0x000038, "Member 'HouseActorBase_C_ImpactCosmetics::ImpactEffect' has a wrong offset!");
static_assert(offsetof(HouseActorBase_C_ImpactCosmetics, BoneName) == 0x00003C, "Member 'HouseActorBase_C_ImpactCosmetics::BoneName' has a wrong offset!");
static_assert(offsetof(HouseActorBase_C_ImpactCosmetics, ChangedAttributes) == 0x000044, "Member 'HouseActorBase_C_ImpactCosmetics::ChangedAttributes' has a wrong offset!");

// Function HouseActorBase.HouseActorBase_C.InteractableCancelInteraction
// 0x0008 (0x0008 - 0x0000)
struct HouseActorBase_C_InteractableCancelInteraction final
{
public:
	class UPrimitiveComponent*                    InteractionComponent;                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(HouseActorBase_C_InteractableCancelInteraction) == 0x000008, "Wrong alignment on HouseActorBase_C_InteractableCancelInteraction");
static_assert(sizeof(HouseActorBase_C_InteractableCancelInteraction) == 0x000008, "Wrong size on HouseActorBase_C_InteractableCancelInteraction");
static_assert(offsetof(HouseActorBase_C_InteractableCancelInteraction, InteractionComponent) == 0x000000, "Member 'HouseActorBase_C_InteractableCancelInteraction::InteractionComponent' has a wrong offset!");

// Function HouseActorBase.HouseActorBase_C.InteractPressed
// 0x0008 (0x0008 - 0x0000)
struct HouseActorBase_C_InteractPressed final
{
public:
	class AActor*                                 InteractingActor;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(HouseActorBase_C_InteractPressed) == 0x000008, "Wrong alignment on HouseActorBase_C_InteractPressed");
static_assert(sizeof(HouseActorBase_C_InteractPressed) == 0x000008, "Wrong size on HouseActorBase_C_InteractPressed");
static_assert(offsetof(HouseActorBase_C_InteractPressed, InteractingActor) == 0x000000, "Member 'HouseActorBase_C_InteractPressed::InteractingActor' has a wrong offset!");

// Function HouseActorBase.HouseActorBase_C.InteractReleased
// 0x0008 (0x0008 - 0x0000)
struct HouseActorBase_C_InteractReleased final
{
public:
	class AActor*                                 InteractingActor;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(HouseActorBase_C_InteractReleased) == 0x000008, "Wrong alignment on HouseActorBase_C_InteractReleased");
static_assert(sizeof(HouseActorBase_C_InteractReleased) == 0x000008, "Wrong size on HouseActorBase_C_InteractReleased");
static_assert(offsetof(HouseActorBase_C_InteractReleased, InteractingActor) == 0x000000, "Member 'HouseActorBase_C_InteractReleased::InteractingActor' has a wrong offset!");

// Function HouseActorBase.HouseActorBase_C.IsInFocus
// 0x0008 (0x0008 - 0x0000)
struct HouseActorBase_C_IsInFocus final
{
public:
	class AActor*                                 Focusing_Actor;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(HouseActorBase_C_IsInFocus) == 0x000008, "Wrong alignment on HouseActorBase_C_IsInFocus");
static_assert(sizeof(HouseActorBase_C_IsInFocus) == 0x000008, "Wrong size on HouseActorBase_C_IsInFocus");
static_assert(offsetof(HouseActorBase_C_IsInFocus, Focusing_Actor) == 0x000000, "Member 'HouseActorBase_C_IsInFocus::Focusing_Actor' has a wrong offset!");

// Function HouseActorBase.HouseActorBase_C.IsInteractable
// 0x0001 (0x0001 - 0x0000)
struct HouseActorBase_C_IsInteractable final
{
public:
	bool                                          Interactable;                                      // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(HouseActorBase_C_IsInteractable) == 0x000001, "Wrong alignment on HouseActorBase_C_IsInteractable");
static_assert(sizeof(HouseActorBase_C_IsInteractable) == 0x000001, "Wrong size on HouseActorBase_C_IsInteractable");
static_assert(offsetof(HouseActorBase_C_IsInteractable, Interactable) == 0x000000, "Member 'HouseActorBase_C_IsInteractable::Interactable' has a wrong offset!");

// Function HouseActorBase.HouseActorBase_C.IsSabotaged
// 0x0020 (0x0020 - 0x0000)
struct HouseActorBase_C_IsSabotaged final
{
public:
	bool                                          Return;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 SabotagingActor;                                   // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	E_Tools                                       RequiredTool_0;                                    // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        DurabilityCost;                                    // 0x0018(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(HouseActorBase_C_IsSabotaged) == 0x000008, "Wrong alignment on HouseActorBase_C_IsSabotaged");
static_assert(sizeof(HouseActorBase_C_IsSabotaged) == 0x000020, "Wrong size on HouseActorBase_C_IsSabotaged");
static_assert(offsetof(HouseActorBase_C_IsSabotaged, Return) == 0x000000, "Member 'HouseActorBase_C_IsSabotaged::Return' has a wrong offset!");
static_assert(offsetof(HouseActorBase_C_IsSabotaged, SabotagingActor) == 0x000008, "Member 'HouseActorBase_C_IsSabotaged::SabotagingActor' has a wrong offset!");
static_assert(offsetof(HouseActorBase_C_IsSabotaged, RequiredTool_0) == 0x000010, "Member 'HouseActorBase_C_IsSabotaged::RequiredTool_0' has a wrong offset!");
static_assert(offsetof(HouseActorBase_C_IsSabotaged, DurabilityCost) == 0x000018, "Member 'HouseActorBase_C_IsSabotaged::DurabilityCost' has a wrong offset!");

// Function HouseActorBase.HouseActorBase_C.LocalSetTeamColor
// 0x0001 (0x0001 - 0x0000)
struct HouseActorBase_C_LocalSetTeamColor final
{
public:
	bool                                          IsEnemyTeam;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(HouseActorBase_C_LocalSetTeamColor) == 0x000001, "Wrong alignment on HouseActorBase_C_LocalSetTeamColor");
static_assert(sizeof(HouseActorBase_C_LocalSetTeamColor) == 0x000001, "Wrong size on HouseActorBase_C_LocalSetTeamColor");
static_assert(offsetof(HouseActorBase_C_LocalSetTeamColor, IsEnemyTeam) == 0x000000, "Member 'HouseActorBase_C_LocalSetTeamColor::IsEnemyTeam' has a wrong offset!");

// Function HouseActorBase.HouseActorBase_C.MeleeHit
// 0x0008 (0x0008 - 0x0000)
struct HouseActorBase_C_MeleeHit final
{
public:
	const class AActor*                           AttackingActor;                                    // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(HouseActorBase_C_MeleeHit) == 0x000008, "Wrong alignment on HouseActorBase_C_MeleeHit");
static_assert(sizeof(HouseActorBase_C_MeleeHit) == 0x000008, "Wrong size on HouseActorBase_C_MeleeHit");
static_assert(offsetof(HouseActorBase_C_MeleeHit, AttackingActor) == 0x000000, "Member 'HouseActorBase_C_MeleeHit::AttackingActor' has a wrong offset!");

// Function HouseActorBase.HouseActorBase_C.Morph Target
// 0x0010 (0x0010 - 0x0000)
struct HouseActorBase_C_Morph_Target final
{
public:
	double                                        Amount;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 Target;                                            // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(HouseActorBase_C_Morph_Target) == 0x000008, "Wrong alignment on HouseActorBase_C_Morph_Target");
static_assert(sizeof(HouseActorBase_C_Morph_Target) == 0x000010, "Wrong size on HouseActorBase_C_Morph_Target");
static_assert(offsetof(HouseActorBase_C_Morph_Target, Amount) == 0x000000, "Member 'HouseActorBase_C_Morph_Target::Amount' has a wrong offset!");
static_assert(offsetof(HouseActorBase_C_Morph_Target, Target) == 0x000008, "Member 'HouseActorBase_C_Morph_Target::Target' has a wrong offset!");

// Function HouseActorBase.HouseActorBase_C.Multicast_BroadcastKill
// 0x03D8 (0x03D8 - 0x0000)
struct HouseActorBase_C_Multicast_BroadcastKill final
{
public:
	struct FKillGameplayMessage                   Message;                                           // 0x0000(0x03D8)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(HouseActorBase_C_Multicast_BroadcastKill) == 0x000008, "Wrong alignment on HouseActorBase_C_Multicast_BroadcastKill");
static_assert(sizeof(HouseActorBase_C_Multicast_BroadcastKill) == 0x0003D8, "Wrong size on HouseActorBase_C_Multicast_BroadcastKill");
static_assert(offsetof(HouseActorBase_C_Multicast_BroadcastKill, Message) == 0x000000, "Member 'HouseActorBase_C_Multicast_BroadcastKill::Message' has a wrong offset!");

// Function HouseActorBase.HouseActorBase_C.OnDamaged
// 0x0370 (0x0370 - 0x0000)
struct HouseActorBase_C_OnDamaged final
{
public:
	float                                         Delta;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 Causer;                                            // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FCombatParticipant                     CombatParticipant;                                 // 0x0010(0x0060)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm)
	struct FKillMethod                            KillMethod;                                        // 0x0070(0x02E8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm)
	struct FVector_NetQuantize                    Location;                                          // 0x0358(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(HouseActorBase_C_OnDamaged) == 0x000008, "Wrong alignment on HouseActorBase_C_OnDamaged");
static_assert(sizeof(HouseActorBase_C_OnDamaged) == 0x000370, "Wrong size on HouseActorBase_C_OnDamaged");
static_assert(offsetof(HouseActorBase_C_OnDamaged, Delta) == 0x000000, "Member 'HouseActorBase_C_OnDamaged::Delta' has a wrong offset!");
static_assert(offsetof(HouseActorBase_C_OnDamaged, Causer) == 0x000008, "Member 'HouseActorBase_C_OnDamaged::Causer' has a wrong offset!");
static_assert(offsetof(HouseActorBase_C_OnDamaged, CombatParticipant) == 0x000010, "Member 'HouseActorBase_C_OnDamaged::CombatParticipant' has a wrong offset!");
static_assert(offsetof(HouseActorBase_C_OnDamaged, KillMethod) == 0x000070, "Member 'HouseActorBase_C_OnDamaged::KillMethod' has a wrong offset!");
static_assert(offsetof(HouseActorBase_C_OnDamaged, Location) == 0x000358, "Member 'HouseActorBase_C_OnDamaged::Location' has a wrong offset!");

// Function HouseActorBase.HouseActorBase_C.OnHealthChanged
// 0x0008 (0x0008 - 0x0000)
struct HouseActorBase_C_OnHealthChanged final
{
public:
	float                                         Health;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MaxHealth;                                         // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(HouseActorBase_C_OnHealthChanged) == 0x000004, "Wrong alignment on HouseActorBase_C_OnHealthChanged");
static_assert(sizeof(HouseActorBase_C_OnHealthChanged) == 0x000008, "Wrong size on HouseActorBase_C_OnHealthChanged");
static_assert(offsetof(HouseActorBase_C_OnHealthChanged, Health) == 0x000000, "Member 'HouseActorBase_C_OnHealthChanged::Health' has a wrong offset!");
static_assert(offsetof(HouseActorBase_C_OnHealthChanged, MaxHealth) == 0x000004, "Member 'HouseActorBase_C_OnHealthChanged::MaxHealth' has a wrong offset!");

// Function HouseActorBase.HouseActorBase_C.OnRep_NewTeamID
// 0x0028 (0x0028 - 0x0000)
struct HouseActorBase_C_OnRep_NewTeamID final
{
public:
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetLocalPlayerTeamId_ReturnValue;         // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserWidget*                            CallFunc_GetUserWidgetObject_ReturnValue;          // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UItemCompatibleInfoWI_C*                K2Node_DynamicCast_AsItem_Compatible_Info_WI;      // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(HouseActorBase_C_OnRep_NewTeamID) == 0x000008, "Wrong alignment on HouseActorBase_C_OnRep_NewTeamID");
static_assert(sizeof(HouseActorBase_C_OnRep_NewTeamID) == 0x000028, "Wrong size on HouseActorBase_C_OnRep_NewTeamID");
static_assert(offsetof(HouseActorBase_C_OnRep_NewTeamID, CallFunc_IsDedicatedServer_ReturnValue) == 0x000000, "Member 'HouseActorBase_C_OnRep_NewTeamID::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(HouseActorBase_C_OnRep_NewTeamID, CallFunc_GetLocalPlayerTeamId_ReturnValue) == 0x000001, "Member 'HouseActorBase_C_OnRep_NewTeamID::CallFunc_GetLocalPlayerTeamId_ReturnValue' has a wrong offset!");
static_assert(offsetof(HouseActorBase_C_OnRep_NewTeamID, CallFunc_GetUserWidgetObject_ReturnValue) == 0x000008, "Member 'HouseActorBase_C_OnRep_NewTeamID::CallFunc_GetUserWidgetObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(HouseActorBase_C_OnRep_NewTeamID, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000010, "Member 'HouseActorBase_C_OnRep_NewTeamID::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(HouseActorBase_C_OnRep_NewTeamID, K2Node_DynamicCast_AsItem_Compatible_Info_WI) == 0x000018, "Member 'HouseActorBase_C_OnRep_NewTeamID::K2Node_DynamicCast_AsItem_Compatible_Info_WI' has a wrong offset!");
static_assert(offsetof(HouseActorBase_C_OnRep_NewTeamID, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'HouseActorBase_C_OnRep_NewTeamID::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(HouseActorBase_C_OnRep_NewTeamID, CallFunc_Not_PreBool_ReturnValue) == 0x000021, "Member 'HouseActorBase_C_OnRep_NewTeamID::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function HouseActorBase.HouseActorBase_C.OnRep_Team
// 0x0001 (0x0001 - 0x0000)
struct HouseActorBase_C_OnRep_Team final
{
public:
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(HouseActorBase_C_OnRep_Team) == 0x000001, "Wrong alignment on HouseActorBase_C_OnRep_Team");
static_assert(sizeof(HouseActorBase_C_OnRep_Team) == 0x000001, "Wrong size on HouseActorBase_C_OnRep_Team");
static_assert(offsetof(HouseActorBase_C_OnRep_Team, CallFunc_IsDedicatedServer_ReturnValue) == 0x000000, "Member 'HouseActorBase_C_OnRep_Team::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");

// Function HouseActorBase.HouseActorBase_C.PostInteract
// 0x0010 (0x0010 - 0x0000)
struct HouseActorBase_C_PostInteract final
{
public:
	class AActor*                                 InteractingActor;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    InteractionComponent;                              // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(HouseActorBase_C_PostInteract) == 0x000008, "Wrong alignment on HouseActorBase_C_PostInteract");
static_assert(sizeof(HouseActorBase_C_PostInteract) == 0x000010, "Wrong size on HouseActorBase_C_PostInteract");
static_assert(offsetof(HouseActorBase_C_PostInteract, InteractingActor) == 0x000000, "Member 'HouseActorBase_C_PostInteract::InteractingActor' has a wrong offset!");
static_assert(offsetof(HouseActorBase_C_PostInteract, InteractionComponent) == 0x000008, "Member 'HouseActorBase_C_PostInteract::InteractionComponent' has a wrong offset!");

// Function HouseActorBase.HouseActorBase_C.PreInteract
// 0x0010 (0x0010 - 0x0000)
struct HouseActorBase_C_PreInteract final
{
public:
	class AActor*                                 InteractingActor;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    InteractionComponent;                              // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(HouseActorBase_C_PreInteract) == 0x000008, "Wrong alignment on HouseActorBase_C_PreInteract");
static_assert(sizeof(HouseActorBase_C_PreInteract) == 0x000010, "Wrong size on HouseActorBase_C_PreInteract");
static_assert(offsetof(HouseActorBase_C_PreInteract, InteractingActor) == 0x000000, "Member 'HouseActorBase_C_PreInteract::InteractingActor' has a wrong offset!");
static_assert(offsetof(HouseActorBase_C_PreInteract, InteractionComponent) == 0x000008, "Member 'HouseActorBase_C_PreInteract::InteractionComponent' has a wrong offset!");

// Function HouseActorBase.HouseActorBase_C.RegisterInteracter
// 0x0010 (0x0010 - 0x0000)
struct HouseActorBase_C_RegisterInteracter final
{
public:
	class UPrimitiveComponent*                    InteractionComponent;                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 InteractingActor;                                  // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(HouseActorBase_C_RegisterInteracter) == 0x000008, "Wrong alignment on HouseActorBase_C_RegisterInteracter");
static_assert(sizeof(HouseActorBase_C_RegisterInteracter) == 0x000010, "Wrong size on HouseActorBase_C_RegisterInteracter");
static_assert(offsetof(HouseActorBase_C_RegisterInteracter, InteractionComponent) == 0x000000, "Member 'HouseActorBase_C_RegisterInteracter::InteractionComponent' has a wrong offset!");
static_assert(offsetof(HouseActorBase_C_RegisterInteracter, InteractingActor) == 0x000008, "Member 'HouseActorBase_C_RegisterInteracter::InteractingActor' has a wrong offset!");

// Function HouseActorBase.HouseActorBase_C.ReloadAfterHousesLoaded
// 0x0001 (0x0001 - 0x0000)
struct HouseActorBase_C_ReloadAfterHousesLoaded final
{
public:
	bool                                          Return;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(HouseActorBase_C_ReloadAfterHousesLoaded) == 0x000001, "Wrong alignment on HouseActorBase_C_ReloadAfterHousesLoaded");
static_assert(sizeof(HouseActorBase_C_ReloadAfterHousesLoaded) == 0x000001, "Wrong size on HouseActorBase_C_ReloadAfterHousesLoaded");
static_assert(offsetof(HouseActorBase_C_ReloadAfterHousesLoaded, Return) == 0x000000, "Member 'HouseActorBase_C_ReloadAfterHousesLoaded::Return' has a wrong offset!");

// Function HouseActorBase.HouseActorBase_C.Sabotage
// 0x0008 (0x0008 - 0x0000)
struct HouseActorBase_C_Sabotage final
{
public:
	class AActor*                                 SabotagingActor;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(HouseActorBase_C_Sabotage) == 0x000008, "Wrong alignment on HouseActorBase_C_Sabotage");
static_assert(sizeof(HouseActorBase_C_Sabotage) == 0x000008, "Wrong size on HouseActorBase_C_Sabotage");
static_assert(offsetof(HouseActorBase_C_Sabotage, SabotagingActor) == 0x000000, "Member 'HouseActorBase_C_Sabotage::SabotagingActor' has a wrong offset!");

// Function HouseActorBase.HouseActorBase_C.SetActorReferenceInHealthbar
// 0x0018 (0x0018 - 0x0000)
struct HouseActorBase_C_SetActorReferenceInHealthbar final
{
public:
	class UUserWidget*                            CallFunc_GetUserWidgetObject_ReturnValue;          // 0x0000(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UItemCompatibleInfoWI_C*                K2Node_DynamicCast_AsItem_Compatible_Info_WI;      // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(HouseActorBase_C_SetActorReferenceInHealthbar) == 0x000008, "Wrong alignment on HouseActorBase_C_SetActorReferenceInHealthbar");
static_assert(sizeof(HouseActorBase_C_SetActorReferenceInHealthbar) == 0x000018, "Wrong size on HouseActorBase_C_SetActorReferenceInHealthbar");
static_assert(offsetof(HouseActorBase_C_SetActorReferenceInHealthbar, CallFunc_GetUserWidgetObject_ReturnValue) == 0x000000, "Member 'HouseActorBase_C_SetActorReferenceInHealthbar::CallFunc_GetUserWidgetObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(HouseActorBase_C_SetActorReferenceInHealthbar, K2Node_DynamicCast_AsItem_Compatible_Info_WI) == 0x000008, "Member 'HouseActorBase_C_SetActorReferenceInHealthbar::K2Node_DynamicCast_AsItem_Compatible_Info_WI' has a wrong offset!");
static_assert(offsetof(HouseActorBase_C_SetActorReferenceInHealthbar, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'HouseActorBase_C_SetActorReferenceInHealthbar::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function HouseActorBase.HouseActorBase_C.SetHoveredComponent
// 0x0010 (0x0010 - 0x0000)
struct HouseActorBase_C_SetHoveredComponent final
{
public:
	class UInteractionComponent_C*                HoveredComponent;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          Void;                                              // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(HouseActorBase_C_SetHoveredComponent) == 0x000008, "Wrong alignment on HouseActorBase_C_SetHoveredComponent");
static_assert(sizeof(HouseActorBase_C_SetHoveredComponent) == 0x000010, "Wrong size on HouseActorBase_C_SetHoveredComponent");
static_assert(offsetof(HouseActorBase_C_SetHoveredComponent, HoveredComponent) == 0x000000, "Member 'HouseActorBase_C_SetHoveredComponent::HoveredComponent' has a wrong offset!");
static_assert(offsetof(HouseActorBase_C_SetHoveredComponent, Void) == 0x000008, "Member 'HouseActorBase_C_SetHoveredComponent::Void' has a wrong offset!");

// Function HouseActorBase.HouseActorBase_C.SetInteractable
// 0x0001 (0x0001 - 0x0000)
struct HouseActorBase_C_SetInteractable final
{
public:
	bool                                          Interactable;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(HouseActorBase_C_SetInteractable) == 0x000001, "Wrong alignment on HouseActorBase_C_SetInteractable");
static_assert(sizeof(HouseActorBase_C_SetInteractable) == 0x000001, "Wrong size on HouseActorBase_C_SetInteractable");
static_assert(offsetof(HouseActorBase_C_SetInteractable, Interactable) == 0x000000, "Member 'HouseActorBase_C_SetInteractable::Interactable' has a wrong offset!");

// Function HouseActorBase.HouseActorBase_C.SetOutlineVisibility
// 0x0001 (0x0001 - 0x0000)
struct HouseActorBase_C_SetOutlineVisibility final
{
public:
	bool                                          InVisible;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(HouseActorBase_C_SetOutlineVisibility) == 0x000001, "Wrong alignment on HouseActorBase_C_SetOutlineVisibility");
static_assert(sizeof(HouseActorBase_C_SetOutlineVisibility) == 0x000001, "Wrong size on HouseActorBase_C_SetOutlineVisibility");
static_assert(offsetof(HouseActorBase_C_SetOutlineVisibility, InVisible) == 0x000000, "Member 'HouseActorBase_C_SetOutlineVisibility::InVisible' has a wrong offset!");

// Function HouseActorBase.HouseActorBase_C.SetRepairWidgetVisibility
// 0x0001 (0x0001 - 0x0000)
struct HouseActorBase_C_SetRepairWidgetVisibility final
{
public:
	bool                                          Visible;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(HouseActorBase_C_SetRepairWidgetVisibility) == 0x000001, "Wrong alignment on HouseActorBase_C_SetRepairWidgetVisibility");
static_assert(sizeof(HouseActorBase_C_SetRepairWidgetVisibility) == 0x000001, "Wrong size on HouseActorBase_C_SetRepairWidgetVisibility");
static_assert(offsetof(HouseActorBase_C_SetRepairWidgetVisibility, Visible) == 0x000000, "Member 'HouseActorBase_C_SetRepairWidgetVisibility::Visible' has a wrong offset!");

// Function HouseActorBase.HouseActorBase_C.Toggle Focus Highlight
// 0x0001 (0x0001 - 0x0000)
struct HouseActorBase_C_Toggle_Focus_Highlight final
{
public:
	bool                                          Show;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(HouseActorBase_C_Toggle_Focus_Highlight) == 0x000001, "Wrong alignment on HouseActorBase_C_Toggle_Focus_Highlight");
static_assert(sizeof(HouseActorBase_C_Toggle_Focus_Highlight) == 0x000001, "Wrong size on HouseActorBase_C_Toggle_Focus_Highlight");
static_assert(offsetof(HouseActorBase_C_Toggle_Focus_Highlight, Show) == 0x000000, "Member 'HouseActorBase_C_Toggle_Focus_Highlight::Show' has a wrong offset!");

// Function HouseActorBase.HouseActorBase_C.Toggle Item Highlight
// 0x0001 (0x0001 - 0x0000)
struct HouseActorBase_C_Toggle_Item_Highlight final
{
public:
	bool                                          Show;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(HouseActorBase_C_Toggle_Item_Highlight) == 0x000001, "Wrong alignment on HouseActorBase_C_Toggle_Item_Highlight");
static_assert(sizeof(HouseActorBase_C_Toggle_Item_Highlight) == 0x000001, "Wrong size on HouseActorBase_C_Toggle_Item_Highlight");
static_assert(offsetof(HouseActorBase_C_Toggle_Item_Highlight, Show) == 0x000000, "Member 'HouseActorBase_C_Toggle_Item_Highlight::Show' has a wrong offset!");

// Function HouseActorBase.HouseActorBase_C.TryGrantSabotageReward
// 0x0010 (0x0010 - 0x0000)
struct HouseActorBase_C_TryGrantSabotageReward final
{
public:
	class AActor*                                 RecipientActor;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UEconomySubsystem*                      CallFunc_GetWorldSubsystem_ReturnValue;            // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(HouseActorBase_C_TryGrantSabotageReward) == 0x000008, "Wrong alignment on HouseActorBase_C_TryGrantSabotageReward");
static_assert(sizeof(HouseActorBase_C_TryGrantSabotageReward) == 0x000010, "Wrong size on HouseActorBase_C_TryGrantSabotageReward");
static_assert(offsetof(HouseActorBase_C_TryGrantSabotageReward, RecipientActor) == 0x000000, "Member 'HouseActorBase_C_TryGrantSabotageReward::RecipientActor' has a wrong offset!");
static_assert(offsetof(HouseActorBase_C_TryGrantSabotageReward, CallFunc_GetWorldSubsystem_ReturnValue) == 0x000008, "Member 'HouseActorBase_C_TryGrantSabotageReward::CallFunc_GetWorldSubsystem_ReturnValue' has a wrong offset!");

// Function HouseActorBase.HouseActorBase_C.UnregisterInteracter
// 0x0010 (0x0010 - 0x0000)
struct HouseActorBase_C_UnregisterInteracter final
{
public:
	class UPrimitiveComponent*                    InteractionComponent;                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 InteractingActor;                                  // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(HouseActorBase_C_UnregisterInteracter) == 0x000008, "Wrong alignment on HouseActorBase_C_UnregisterInteracter");
static_assert(sizeof(HouseActorBase_C_UnregisterInteracter) == 0x000010, "Wrong size on HouseActorBase_C_UnregisterInteracter");
static_assert(offsetof(HouseActorBase_C_UnregisterInteracter, InteractionComponent) == 0x000000, "Member 'HouseActorBase_C_UnregisterInteracter::InteractionComponent' has a wrong offset!");
static_assert(offsetof(HouseActorBase_C_UnregisterInteracter, InteractingActor) == 0x000008, "Member 'HouseActorBase_C_UnregisterInteracter::InteractingActor' has a wrong offset!");

// Function HouseActorBase.HouseActorBase_C.UpdateProgressbar
// 0x0048 (0x0048 - 0x0000)
struct HouseActorBase_C_UpdateProgressbar final
{
public:
	double                                        Value;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Max;                                               // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_NormalizeToRange_ReturnValue;             // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue;       // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Lerp_ReturnValue;                         // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2D[0x3];                                       // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USkeletalMeshComponent*                 CallFunc_Array_Get_Item;                           // 0x0038(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(HouseActorBase_C_UpdateProgressbar) == 0x000008, "Wrong alignment on HouseActorBase_C_UpdateProgressbar");
static_assert(sizeof(HouseActorBase_C_UpdateProgressbar) == 0x000048, "Wrong size on HouseActorBase_C_UpdateProgressbar");
static_assert(offsetof(HouseActorBase_C_UpdateProgressbar, Value) == 0x000000, "Member 'HouseActorBase_C_UpdateProgressbar::Value' has a wrong offset!");
static_assert(offsetof(HouseActorBase_C_UpdateProgressbar, Max) == 0x000008, "Member 'HouseActorBase_C_UpdateProgressbar::Max' has a wrong offset!");
static_assert(offsetof(HouseActorBase_C_UpdateProgressbar, CallFunc_NormalizeToRange_ReturnValue) == 0x000010, "Member 'HouseActorBase_C_UpdateProgressbar::CallFunc_NormalizeToRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(HouseActorBase_C_UpdateProgressbar, Temp_int_Array_Index_Variable) == 0x000018, "Member 'HouseActorBase_C_UpdateProgressbar::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(HouseActorBase_C_UpdateProgressbar, CallFunc_LessEqual_DoubleDouble_ReturnValue) == 0x00001C, "Member 'HouseActorBase_C_UpdateProgressbar::CallFunc_LessEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(HouseActorBase_C_UpdateProgressbar, CallFunc_Lerp_ReturnValue) == 0x000020, "Member 'HouseActorBase_C_UpdateProgressbar::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(HouseActorBase_C_UpdateProgressbar, Temp_int_Loop_Counter_Variable) == 0x000028, "Member 'HouseActorBase_C_UpdateProgressbar::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(HouseActorBase_C_UpdateProgressbar, CallFunc_IsValid_ReturnValue) == 0x00002C, "Member 'HouseActorBase_C_UpdateProgressbar::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(HouseActorBase_C_UpdateProgressbar, CallFunc_Add_IntInt_ReturnValue) == 0x000030, "Member 'HouseActorBase_C_UpdateProgressbar::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(HouseActorBase_C_UpdateProgressbar, CallFunc_Array_Get_Item) == 0x000038, "Member 'HouseActorBase_C_UpdateProgressbar::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(HouseActorBase_C_UpdateProgressbar, CallFunc_Array_Length_ReturnValue) == 0x000040, "Member 'HouseActorBase_C_UpdateProgressbar::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(HouseActorBase_C_UpdateProgressbar, CallFunc_Less_IntInt_ReturnValue) == 0x000044, "Member 'HouseActorBase_C_UpdateProgressbar::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function HouseActorBase.HouseActorBase_C.UpdateTeamAndID
// 0x0068 (0x0068 - 0x0000)
struct HouseActorBase_C_UpdateTeamAndID final
{
public:
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0008(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetTeamAtPoint_bFoundTeam;                // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           CallFunc_GetTeamAtPoint_TeamVolumeGameplayTag;     // 0x0024(0x0008)(NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTeam                                  CallFunc_GetTeamAtPoint_ReturnValue;               // 0x0030(0x0038)(ConstParm, NoDestructor)
};
static_assert(alignof(HouseActorBase_C_UpdateTeamAndID) == 0x000008, "Wrong alignment on HouseActorBase_C_UpdateTeamAndID");
static_assert(sizeof(HouseActorBase_C_UpdateTeamAndID) == 0x000068, "Wrong size on HouseActorBase_C_UpdateTeamAndID");
static_assert(offsetof(HouseActorBase_C_UpdateTeamAndID, CallFunc_HasAuthority_ReturnValue) == 0x000000, "Member 'HouseActorBase_C_UpdateTeamAndID::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(HouseActorBase_C_UpdateTeamAndID, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000008, "Member 'HouseActorBase_C_UpdateTeamAndID::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(HouseActorBase_C_UpdateTeamAndID, CallFunc_GetTeamAtPoint_bFoundTeam) == 0x000020, "Member 'HouseActorBase_C_UpdateTeamAndID::CallFunc_GetTeamAtPoint_bFoundTeam' has a wrong offset!");
static_assert(offsetof(HouseActorBase_C_UpdateTeamAndID, CallFunc_GetTeamAtPoint_TeamVolumeGameplayTag) == 0x000024, "Member 'HouseActorBase_C_UpdateTeamAndID::CallFunc_GetTeamAtPoint_TeamVolumeGameplayTag' has a wrong offset!");
static_assert(offsetof(HouseActorBase_C_UpdateTeamAndID, CallFunc_GetTeamAtPoint_ReturnValue) == 0x000030, "Member 'HouseActorBase_C_UpdateTeamAndID::CallFunc_GetTeamAtPoint_ReturnValue' has a wrong offset!");

// Function HouseActorBase.HouseActorBase_C.GetInteractionDuration
// 0x0010 (0x0010 - 0x0000)
struct HouseActorBase_C_GetInteractionDuration final
{
public:
	class UPrimitiveComponent*                    InteractionComponent;                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	float                                         ReturnValue;                                       // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(HouseActorBase_C_GetInteractionDuration) == 0x000008, "Wrong alignment on HouseActorBase_C_GetInteractionDuration");
static_assert(sizeof(HouseActorBase_C_GetInteractionDuration) == 0x000010, "Wrong size on HouseActorBase_C_GetInteractionDuration");
static_assert(offsetof(HouseActorBase_C_GetInteractionDuration, InteractionComponent) == 0x000000, "Member 'HouseActorBase_C_GetInteractionDuration::InteractionComponent' has a wrong offset!");
static_assert(offsetof(HouseActorBase_C_GetInteractionDuration, ReturnValue) == 0x000008, "Member 'HouseActorBase_C_GetInteractionDuration::ReturnValue' has a wrong offset!");

// Function HouseActorBase.HouseActorBase_C.GetPostInteractSyncType
// 0x0010 (0x0010 - 0x0000)
struct HouseActorBase_C_GetPostInteractSyncType final
{
public:
	bool                                          bShouldSync;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EAbilityTaskNetSyncType                       Type;                                              // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    InteractionComponent;                              // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(HouseActorBase_C_GetPostInteractSyncType) == 0x000008, "Wrong alignment on HouseActorBase_C_GetPostInteractSyncType");
static_assert(sizeof(HouseActorBase_C_GetPostInteractSyncType) == 0x000010, "Wrong size on HouseActorBase_C_GetPostInteractSyncType");
static_assert(offsetof(HouseActorBase_C_GetPostInteractSyncType, bShouldSync) == 0x000000, "Member 'HouseActorBase_C_GetPostInteractSyncType::bShouldSync' has a wrong offset!");
static_assert(offsetof(HouseActorBase_C_GetPostInteractSyncType, Type) == 0x000001, "Member 'HouseActorBase_C_GetPostInteractSyncType::Type' has a wrong offset!");
static_assert(offsetof(HouseActorBase_C_GetPostInteractSyncType, InteractionComponent) == 0x000008, "Member 'HouseActorBase_C_GetPostInteractSyncType::InteractionComponent' has a wrong offset!");

// Function HouseActorBase.HouseActorBase_C.GetPreInteractSyncType
// 0x0010 (0x0010 - 0x0000)
struct HouseActorBase_C_GetPreInteractSyncType final
{
public:
	bool                                          bShouldSync;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EAbilityTaskNetSyncType                       Type;                                              // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    InteractionComponent;                              // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(HouseActorBase_C_GetPreInteractSyncType) == 0x000008, "Wrong alignment on HouseActorBase_C_GetPreInteractSyncType");
static_assert(sizeof(HouseActorBase_C_GetPreInteractSyncType) == 0x000010, "Wrong size on HouseActorBase_C_GetPreInteractSyncType");
static_assert(offsetof(HouseActorBase_C_GetPreInteractSyncType, bShouldSync) == 0x000000, "Member 'HouseActorBase_C_GetPreInteractSyncType::bShouldSync' has a wrong offset!");
static_assert(offsetof(HouseActorBase_C_GetPreInteractSyncType, Type) == 0x000001, "Member 'HouseActorBase_C_GetPreInteractSyncType::Type' has a wrong offset!");
static_assert(offsetof(HouseActorBase_C_GetPreInteractSyncType, InteractionComponent) == 0x000008, "Member 'HouseActorBase_C_GetPreInteractSyncType::InteractionComponent' has a wrong offset!");

// Function HouseActorBase.HouseActorBase_C.GetTeam
// 0x0038 (0x0038 - 0x0000)
struct HouseActorBase_C_GetTeam final
{
public:
	struct FTeam                                  ReturnValue;                                       // 0x0000(0x0038)(Parm, OutParm, ReturnParm, NoDestructor)
};
static_assert(alignof(HouseActorBase_C_GetTeam) == 0x000008, "Wrong alignment on HouseActorBase_C_GetTeam");
static_assert(sizeof(HouseActorBase_C_GetTeam) == 0x000038, "Wrong size on HouseActorBase_C_GetTeam");
static_assert(offsetof(HouseActorBase_C_GetTeam, ReturnValue) == 0x000000, "Member 'HouseActorBase_C_GetTeam::ReturnValue' has a wrong offset!");

// Function HouseActorBase.HouseActorBase_C.GetTeamID
// 0x0001 (0x0001 - 0x0000)
struct HouseActorBase_C_GetTeamID final
{
public:
	uint8                                         ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(HouseActorBase_C_GetTeamID) == 0x000001, "Wrong alignment on HouseActorBase_C_GetTeamID");
static_assert(sizeof(HouseActorBase_C_GetTeamID) == 0x000001, "Wrong size on HouseActorBase_C_GetTeamID");
static_assert(offsetof(HouseActorBase_C_GetTeamID, ReturnValue) == 0x000000, "Member 'HouseActorBase_C_GetTeamID::ReturnValue' has a wrong offset!");

// Function HouseActorBase.HouseActorBase_C.HasTeam
// 0x0001 (0x0001 - 0x0000)
struct HouseActorBase_C_HasTeam final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(HouseActorBase_C_HasTeam) == 0x000001, "Wrong alignment on HouseActorBase_C_HasTeam");
static_assert(sizeof(HouseActorBase_C_HasTeam) == 0x000001, "Wrong size on HouseActorBase_C_HasTeam");
static_assert(offsetof(HouseActorBase_C_HasTeam, ReturnValue) == 0x000000, "Member 'HouseActorBase_C_HasTeam::ReturnValue' has a wrong offset!");

// Function HouseActorBase.HouseActorBase_C.IsAvailableForEnemyTeam
// 0x0010 (0x0010 - 0x0000)
struct HouseActorBase_C_IsAvailableForEnemyTeam final
{
public:
	class UPrimitiveComponent*                    InteractionComponent;                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(HouseActorBase_C_IsAvailableForEnemyTeam) == 0x000008, "Wrong alignment on HouseActorBase_C_IsAvailableForEnemyTeam");
static_assert(sizeof(HouseActorBase_C_IsAvailableForEnemyTeam) == 0x000010, "Wrong size on HouseActorBase_C_IsAvailableForEnemyTeam");
static_assert(offsetof(HouseActorBase_C_IsAvailableForEnemyTeam, InteractionComponent) == 0x000000, "Member 'HouseActorBase_C_IsAvailableForEnemyTeam::InteractionComponent' has a wrong offset!");
static_assert(offsetof(HouseActorBase_C_IsAvailableForEnemyTeam, ReturnValue) == 0x000008, "Member 'HouseActorBase_C_IsAvailableForEnemyTeam::ReturnValue' has a wrong offset!");

// Function HouseActorBase.HouseActorBase_C.IsAvailableForInteraction
// 0x0018 (0x0018 - 0x0000)
struct HouseActorBase_C_IsAvailableForInteraction final
{
public:
	class AActor*                                 InteractingActor;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    InteractionComponent;                              // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(HouseActorBase_C_IsAvailableForInteraction) == 0x000008, "Wrong alignment on HouseActorBase_C_IsAvailableForInteraction");
static_assert(sizeof(HouseActorBase_C_IsAvailableForInteraction) == 0x000018, "Wrong size on HouseActorBase_C_IsAvailableForInteraction");
static_assert(offsetof(HouseActorBase_C_IsAvailableForInteraction, InteractingActor) == 0x000000, "Member 'HouseActorBase_C_IsAvailableForInteraction::InteractingActor' has a wrong offset!");
static_assert(offsetof(HouseActorBase_C_IsAvailableForInteraction, InteractionComponent) == 0x000008, "Member 'HouseActorBase_C_IsAvailableForInteraction::InteractionComponent' has a wrong offset!");
static_assert(offsetof(HouseActorBase_C_IsAvailableForInteraction, ReturnValue) == 0x000010, "Member 'HouseActorBase_C_IsAvailableForInteraction::ReturnValue' has a wrong offset!");

// Function HouseActorBase.HouseActorBase_C.IsLocalTeam
// 0x0018 (0x0018 - 0x0000)
struct HouseActorBase_C_IsLocalTeam final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerStateJP*                         CallFunc_GetFirstPlayerStateJP_ReturnValue;        // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsTeamValid_ReturnValue;                  // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetTeamID_ReturnValue;                    // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(HouseActorBase_C_IsLocalTeam) == 0x000008, "Wrong alignment on HouseActorBase_C_IsLocalTeam");
static_assert(sizeof(HouseActorBase_C_IsLocalTeam) == 0x000018, "Wrong size on HouseActorBase_C_IsLocalTeam");
static_assert(offsetof(HouseActorBase_C_IsLocalTeam, ReturnValue) == 0x000000, "Member 'HouseActorBase_C_IsLocalTeam::ReturnValue' has a wrong offset!");
static_assert(offsetof(HouseActorBase_C_IsLocalTeam, CallFunc_GetFirstPlayerStateJP_ReturnValue) == 0x000008, "Member 'HouseActorBase_C_IsLocalTeam::CallFunc_GetFirstPlayerStateJP_ReturnValue' has a wrong offset!");
static_assert(offsetof(HouseActorBase_C_IsLocalTeam, CallFunc_IsTeamValid_ReturnValue) == 0x000010, "Member 'HouseActorBase_C_IsLocalTeam::CallFunc_IsTeamValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(HouseActorBase_C_IsLocalTeam, CallFunc_GetTeamID_ReturnValue) == 0x000011, "Member 'HouseActorBase_C_IsLocalTeam::CallFunc_GetTeamID_ReturnValue' has a wrong offset!");
static_assert(offsetof(HouseActorBase_C_IsLocalTeam, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000012, "Member 'HouseActorBase_C_IsLocalTeam::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function HouseActorBase.HouseActorBase_C.IsNotLocalTeam
// 0x0003 (0x0003 - 0x0000)
struct HouseActorBase_C_IsNotLocalTeam final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLocalTeam_ReturnValue;                  // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(HouseActorBase_C_IsNotLocalTeam) == 0x000001, "Wrong alignment on HouseActorBase_C_IsNotLocalTeam");
static_assert(sizeof(HouseActorBase_C_IsNotLocalTeam) == 0x000003, "Wrong size on HouseActorBase_C_IsNotLocalTeam");
static_assert(offsetof(HouseActorBase_C_IsNotLocalTeam, ReturnValue) == 0x000000, "Member 'HouseActorBase_C_IsNotLocalTeam::ReturnValue' has a wrong offset!");
static_assert(offsetof(HouseActorBase_C_IsNotLocalTeam, CallFunc_IsLocalTeam_ReturnValue) == 0x000001, "Member 'HouseActorBase_C_IsNotLocalTeam::CallFunc_IsLocalTeam_ReturnValue' has a wrong offset!");
static_assert(offsetof(HouseActorBase_C_IsNotLocalTeam, CallFunc_Not_PreBool_ReturnValue) == 0x000002, "Member 'HouseActorBase_C_IsNotLocalTeam::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function HouseActorBase.HouseActorBase_C.TakeDamageFromAllTeams
// 0x0001 (0x0001 - 0x0000)
struct HouseActorBase_C_TakeDamageFromAllTeams final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(HouseActorBase_C_TakeDamageFromAllTeams) == 0x000001, "Wrong alignment on HouseActorBase_C_TakeDamageFromAllTeams");
static_assert(sizeof(HouseActorBase_C_TakeDamageFromAllTeams) == 0x000001, "Wrong size on HouseActorBase_C_TakeDamageFromAllTeams");
static_assert(offsetof(HouseActorBase_C_TakeDamageFromAllTeams, ReturnValue) == 0x000000, "Member 'HouseActorBase_C_TakeDamageFromAllTeams::ReturnValue' has a wrong offset!");

}

