#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ABP_Kevin_Default_PP

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "CoreUObject_structs.hpp"
#include "AnimGraphRuntime_structs.hpp"


namespace SDK
{

// AnimBlueprintGeneratedClass ABP_Kevin_Default_PP.ABP_Kevin_Default_PP_C
// 0x1F30 (0x22A0 - 0x0370)
class UABP_Kevin_Default_PP_C final : public UAnimInstance
{
public:
	uint8                                         Pad_368[0x8];                                      // 0x0368(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0370(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct FAnimSubsystemInstance                 AnimBlueprintExtension_PropertyAccess;             // 0x0378(0x0008)()
	struct FAnimSubsystemInstance                 AnimBlueprintExtension_Base;                       // 0x0380(0x0008)()
	struct FAnimNode_Root                         AnimGraphNode_Root;                                // 0x0388(0x0020)()
	struct FAnimNode_LinkedInputPose              AnimGraphNode_LinkedInputPose;                     // 0x03A8(0x00B8)()
	struct FAnimNode_RigidBody                    AnimGraphNode_RigidBody_2;                         // 0x0460(0x0970)()
	struct FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace;               // 0x0DD0(0x0020)()
	struct FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace;               // 0x0DF0(0x0020)()
	struct FAnimNode_RigidBody                    AnimGraphNode_RigidBody_1;                         // 0x0E10(0x0970)()
	struct FAnimNode_ModifyCurve                  AnimGraphNode_ModifyCurve;                         // 0x1780(0x0120)()
	struct FAnimNode_RigidBody                    AnimGraphNode_RigidBody;                           // 0x18A0(0x0970)()
	struct FVector                                K2Node_PropertyAccess;                             // 0x2210(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSimSpaceSettings                      Sim_Space_Settings;                                // 0x2228(0x0060)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	class ABP_MovementCharacter_C*                BP_MovementCharacter;                              // 0x2288(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	double                                        Speed;                                             // 0x2290(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         RigidbodyAlpha;                                    // 0x2298(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void AnimGraph(const struct FPoseLink& InPose, struct FPoseLink* AnimGraph_0);
	void BlueprintInitializeAnimation();
	void BlueprintThreadSafeUpdateAnimation(float DeltaTime);
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Kevin_Default_PP_AnimGraphNode_RigidBody_A2B03A9A40D51E27B0E340A08AC54CA7();
	void ExecuteUbergraph_ABP_Kevin_Default_PP(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"ABP_Kevin_Default_PP_C">();
	}
	static class UABP_Kevin_Default_PP_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UABP_Kevin_Default_PP_C>();
	}
};
static_assert(alignof(UABP_Kevin_Default_PP_C) == 0x000010, "Wrong alignment on UABP_Kevin_Default_PP_C");
static_assert(sizeof(UABP_Kevin_Default_PP_C) == 0x0022A0, "Wrong size on UABP_Kevin_Default_PP_C");
static_assert(offsetof(UABP_Kevin_Default_PP_C, UberGraphFrame) == 0x000370, "Member 'UABP_Kevin_Default_PP_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UABP_Kevin_Default_PP_C, AnimBlueprintExtension_PropertyAccess) == 0x000378, "Member 'UABP_Kevin_Default_PP_C::AnimBlueprintExtension_PropertyAccess' has a wrong offset!");
static_assert(offsetof(UABP_Kevin_Default_PP_C, AnimBlueprintExtension_Base) == 0x000380, "Member 'UABP_Kevin_Default_PP_C::AnimBlueprintExtension_Base' has a wrong offset!");
static_assert(offsetof(UABP_Kevin_Default_PP_C, AnimGraphNode_Root) == 0x000388, "Member 'UABP_Kevin_Default_PP_C::AnimGraphNode_Root' has a wrong offset!");
static_assert(offsetof(UABP_Kevin_Default_PP_C, AnimGraphNode_LinkedInputPose) == 0x0003A8, "Member 'UABP_Kevin_Default_PP_C::AnimGraphNode_LinkedInputPose' has a wrong offset!");
static_assert(offsetof(UABP_Kevin_Default_PP_C, AnimGraphNode_RigidBody_2) == 0x000460, "Member 'UABP_Kevin_Default_PP_C::AnimGraphNode_RigidBody_2' has a wrong offset!");
static_assert(offsetof(UABP_Kevin_Default_PP_C, AnimGraphNode_LocalToComponentSpace) == 0x000DD0, "Member 'UABP_Kevin_Default_PP_C::AnimGraphNode_LocalToComponentSpace' has a wrong offset!");
static_assert(offsetof(UABP_Kevin_Default_PP_C, AnimGraphNode_ComponentToLocalSpace) == 0x000DF0, "Member 'UABP_Kevin_Default_PP_C::AnimGraphNode_ComponentToLocalSpace' has a wrong offset!");
static_assert(offsetof(UABP_Kevin_Default_PP_C, AnimGraphNode_RigidBody_1) == 0x000E10, "Member 'UABP_Kevin_Default_PP_C::AnimGraphNode_RigidBody_1' has a wrong offset!");
static_assert(offsetof(UABP_Kevin_Default_PP_C, AnimGraphNode_ModifyCurve) == 0x001780, "Member 'UABP_Kevin_Default_PP_C::AnimGraphNode_ModifyCurve' has a wrong offset!");
static_assert(offsetof(UABP_Kevin_Default_PP_C, AnimGraphNode_RigidBody) == 0x0018A0, "Member 'UABP_Kevin_Default_PP_C::AnimGraphNode_RigidBody' has a wrong offset!");
static_assert(offsetof(UABP_Kevin_Default_PP_C, K2Node_PropertyAccess) == 0x002210, "Member 'UABP_Kevin_Default_PP_C::K2Node_PropertyAccess' has a wrong offset!");
static_assert(offsetof(UABP_Kevin_Default_PP_C, Sim_Space_Settings) == 0x002228, "Member 'UABP_Kevin_Default_PP_C::Sim_Space_Settings' has a wrong offset!");
static_assert(offsetof(UABP_Kevin_Default_PP_C, BP_MovementCharacter) == 0x002288, "Member 'UABP_Kevin_Default_PP_C::BP_MovementCharacter' has a wrong offset!");
static_assert(offsetof(UABP_Kevin_Default_PP_C, Speed) == 0x002290, "Member 'UABP_Kevin_Default_PP_C::Speed' has a wrong offset!");
static_assert(offsetof(UABP_Kevin_Default_PP_C, RigidbodyAlpha) == 0x002298, "Member 'UABP_Kevin_Default_PP_C::RigidbodyAlpha' has a wrong offset!");

}

