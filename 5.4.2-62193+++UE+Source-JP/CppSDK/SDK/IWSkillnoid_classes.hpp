#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: IWSkillnoid

#include "Basic.hpp"

#include "Engine_classes.hpp"
#include "CoreUObject_classes.hpp"


namespace SDK
{

// Class IWSkillnoid.SkillnoidAsyncDelegateBase
// 0x0030 (0x0060 - 0x0030)
class USkillnoidAsyncDelegateBase : public UBlueprintAsyncActionBase
{
public:
	uint8                                         Pad_30[0x30];                                      // 0x0030(0x0030)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"SkillnoidAsyncDelegateBase">();
	}
	static class USkillnoidAsyncDelegateBase* GetDefaultObj()
	{
		return GetDefaultObjImpl<USkillnoidAsyncDelegateBase>();
	}
};
static_assert(alignof(USkillnoidAsyncDelegateBase) == 0x000008, "Wrong alignment on USkillnoidAsyncDelegateBase");
static_assert(sizeof(USkillnoidAsyncDelegateBase) == 0x000060, "Wrong size on USkillnoidAsyncDelegateBase");

// Class IWSkillnoid.SkillnoidAuthTokenAsyncDelegate
// 0x0038 (0x0098 - 0x0060)
class USkillnoidAuthTokenAsyncDelegate final : public USkillnoidAsyncDelegateBase
{
public:
	FMulticastInlineDelegateProperty_             OnSuccess;                                         // 0x0060(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_             OnFailure;                                         // 0x0070(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                         Pad_80[0x18];                                      // 0x0080(0x0018)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class USkillnoidAuthTokenAsyncDelegate* GetConnectedSkillnoidAccount(class UObject* WorldContextObject, const class FString& ConnectionToken, int32 PollInterval, int32 TokenTLL);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"SkillnoidAuthTokenAsyncDelegate">();
	}
	static class USkillnoidAuthTokenAsyncDelegate* GetDefaultObj()
	{
		return GetDefaultObjImpl<USkillnoidAuthTokenAsyncDelegate>();
	}
};
static_assert(alignof(USkillnoidAuthTokenAsyncDelegate) == 0x000008, "Wrong alignment on USkillnoidAuthTokenAsyncDelegate");
static_assert(sizeof(USkillnoidAuthTokenAsyncDelegate) == 0x000098, "Wrong size on USkillnoidAuthTokenAsyncDelegate");
static_assert(offsetof(USkillnoidAuthTokenAsyncDelegate, OnSuccess) == 0x000060, "Member 'USkillnoidAuthTokenAsyncDelegate::OnSuccess' has a wrong offset!");
static_assert(offsetof(USkillnoidAuthTokenAsyncDelegate, OnFailure) == 0x000070, "Member 'USkillnoidAuthTokenAsyncDelegate::OnFailure' has a wrong offset!");

// Class IWSkillnoid.SkillnoidGetAchievementsDelegate
// 0x0030 (0x0090 - 0x0060)
class USkillnoidGetAchievementsDelegate final : public USkillnoidAsyncDelegateBase
{
public:
	FMulticastInlineDelegateProperty_             OnSuccess;                                         // 0x0060(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_             OnFailure;                                         // 0x0070(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                         Pad_80[0x10];                                      // 0x0080(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class USkillnoidGetAchievementsDelegate* GetSkillnoidAchievements(class UObject* WorldContextObject, const class FString& UserToken);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"SkillnoidGetAchievementsDelegate">();
	}
	static class USkillnoidGetAchievementsDelegate* GetDefaultObj()
	{
		return GetDefaultObjImpl<USkillnoidGetAchievementsDelegate>();
	}
};
static_assert(alignof(USkillnoidGetAchievementsDelegate) == 0x000008, "Wrong alignment on USkillnoidGetAchievementsDelegate");
static_assert(sizeof(USkillnoidGetAchievementsDelegate) == 0x000090, "Wrong size on USkillnoidGetAchievementsDelegate");
static_assert(offsetof(USkillnoidGetAchievementsDelegate, OnSuccess) == 0x000060, "Member 'USkillnoidGetAchievementsDelegate::OnSuccess' has a wrong offset!");
static_assert(offsetof(USkillnoidGetAchievementsDelegate, OnFailure) == 0x000070, "Member 'USkillnoidGetAchievementsDelegate::OnFailure' has a wrong offset!");

// Class IWSkillnoid.SkillnoidCollectAchievementsDelegate
// 0x0040 (0x00A0 - 0x0060)
class USkillnoidCollectAchievementsDelegate final : public USkillnoidAsyncDelegateBase
{
public:
	FMulticastInlineDelegateProperty_             OnSuccess;                                         // 0x0060(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_             OnFailure;                                         // 0x0070(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                         Pad_80[0x20];                                      // 0x0080(0x0020)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class USkillnoidCollectAchievementsDelegate* CollectSkillnoidAchievement(class UObject* WorldContextObject, const class FString& UserToken, const class FString& AchievementID);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"SkillnoidCollectAchievementsDelegate">();
	}
	static class USkillnoidCollectAchievementsDelegate* GetDefaultObj()
	{
		return GetDefaultObjImpl<USkillnoidCollectAchievementsDelegate>();
	}
};
static_assert(alignof(USkillnoidCollectAchievementsDelegate) == 0x000008, "Wrong alignment on USkillnoidCollectAchievementsDelegate");
static_assert(sizeof(USkillnoidCollectAchievementsDelegate) == 0x0000A0, "Wrong size on USkillnoidCollectAchievementsDelegate");
static_assert(offsetof(USkillnoidCollectAchievementsDelegate, OnSuccess) == 0x000060, "Member 'USkillnoidCollectAchievementsDelegate::OnSuccess' has a wrong offset!");
static_assert(offsetof(USkillnoidCollectAchievementsDelegate, OnFailure) == 0x000070, "Member 'USkillnoidCollectAchievementsDelegate::OnFailure' has a wrong offset!");

// Class IWSkillnoid.SkillnoidPluginSettings
// 0x0030 (0x0058 - 0x0028)
class USkillnoidPluginSettings final : public UObject
{
public:
	class FString                                 SkillnoidBaseUrl;                                  // 0x0028(0x0010)(Edit, ZeroConstructor, Config, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 SkillnoidVendorId;                                 // 0x0038(0x0010)(Edit, ZeroConstructor, Config, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 SkillnoidProductId;                                // 0x0048(0x0010)(Edit, ZeroConstructor, Config, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"SkillnoidPluginSettings">();
	}
	static class USkillnoidPluginSettings* GetDefaultObj()
	{
		return GetDefaultObjImpl<USkillnoidPluginSettings>();
	}
};
static_assert(alignof(USkillnoidPluginSettings) == 0x000008, "Wrong alignment on USkillnoidPluginSettings");
static_assert(sizeof(USkillnoidPluginSettings) == 0x000058, "Wrong size on USkillnoidPluginSettings");
static_assert(offsetof(USkillnoidPluginSettings, SkillnoidBaseUrl) == 0x000028, "Member 'USkillnoidPluginSettings::SkillnoidBaseUrl' has a wrong offset!");
static_assert(offsetof(USkillnoidPluginSettings, SkillnoidVendorId) == 0x000038, "Member 'USkillnoidPluginSettings::SkillnoidVendorId' has a wrong offset!");
static_assert(offsetof(USkillnoidPluginSettings, SkillnoidProductId) == 0x000048, "Member 'USkillnoidPluginSettings::SkillnoidProductId' has a wrong offset!");

// Class IWSkillnoid.SkillnoidQrDownloader
// 0x0030 (0x0060 - 0x0030)
class USkillnoidQrDownloader final : public UBlueprintAsyncActionBase
{
public:
	FMulticastInlineDelegateProperty_             OnSuccess;                                         // 0x0030(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_             OnFail;                                            // 0x0040(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                         Pad_50[0x10];                                      // 0x0050(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class USkillnoidQrDownloader* DownloadSkillNoidQrCode(const class FString& CurrentDirectToken);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"SkillnoidQrDownloader">();
	}
	static class USkillnoidQrDownloader* GetDefaultObj()
	{
		return GetDefaultObjImpl<USkillnoidQrDownloader>();
	}
};
static_assert(alignof(USkillnoidQrDownloader) == 0x000008, "Wrong alignment on USkillnoidQrDownloader");
static_assert(sizeof(USkillnoidQrDownloader) == 0x000060, "Wrong size on USkillnoidQrDownloader");
static_assert(offsetof(USkillnoidQrDownloader, OnSuccess) == 0x000030, "Member 'USkillnoidQrDownloader::OnSuccess' has a wrong offset!");
static_assert(offsetof(USkillnoidQrDownloader, OnFail) == 0x000040, "Member 'USkillnoidQrDownloader::OnFail' has a wrong offset!");

}

