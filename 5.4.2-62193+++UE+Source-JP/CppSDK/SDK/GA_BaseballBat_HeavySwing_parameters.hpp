#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GA_BaseballBat_HeavySwing

#include "Basic.hpp"

#include "GameplayAbilities_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "JP_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function GA_BaseballBat_HeavySwing.GA_BaseballBat_HeavySwing_C.CreateCombatParticipants
// 0x00D8 (0x00D8 - 0x0000)
struct GA_BaseballBat_HeavySwing_C_CreateCombatParticipants final
{
public:
	class APawn*                                  ResidentCharacterPawn;                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FCombatParticipant                     NewParam;                                          // 0x0008(0x0060)(Parm, OutParm)
	class APlayerStateJP_Match*                   K2Node_DynamicCast_AsPlayer_State_JP_Match;        // 0x0068(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_71[0x7];                                       // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FCombatParticipant                     CallFunc_CreateCombatParticipantFromPlayer_ReturnValue; // 0x0078(0x0060)()
};
static_assert(alignof(GA_BaseballBat_HeavySwing_C_CreateCombatParticipants) == 0x000008, "Wrong alignment on GA_BaseballBat_HeavySwing_C_CreateCombatParticipants");
static_assert(sizeof(GA_BaseballBat_HeavySwing_C_CreateCombatParticipants) == 0x0000D8, "Wrong size on GA_BaseballBat_HeavySwing_C_CreateCombatParticipants");
static_assert(offsetof(GA_BaseballBat_HeavySwing_C_CreateCombatParticipants, ResidentCharacterPawn) == 0x000000, "Member 'GA_BaseballBat_HeavySwing_C_CreateCombatParticipants::ResidentCharacterPawn' has a wrong offset!");
static_assert(offsetof(GA_BaseballBat_HeavySwing_C_CreateCombatParticipants, NewParam) == 0x000008, "Member 'GA_BaseballBat_HeavySwing_C_CreateCombatParticipants::NewParam' has a wrong offset!");
static_assert(offsetof(GA_BaseballBat_HeavySwing_C_CreateCombatParticipants, K2Node_DynamicCast_AsPlayer_State_JP_Match) == 0x000068, "Member 'GA_BaseballBat_HeavySwing_C_CreateCombatParticipants::K2Node_DynamicCast_AsPlayer_State_JP_Match' has a wrong offset!");
static_assert(offsetof(GA_BaseballBat_HeavySwing_C_CreateCombatParticipants, K2Node_DynamicCast_bSuccess) == 0x000070, "Member 'GA_BaseballBat_HeavySwing_C_CreateCombatParticipants::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(GA_BaseballBat_HeavySwing_C_CreateCombatParticipants, CallFunc_CreateCombatParticipantFromPlayer_ReturnValue) == 0x000078, "Member 'GA_BaseballBat_HeavySwing_C_CreateCombatParticipants::CallFunc_CreateCombatParticipantFromPlayer_ReturnValue' has a wrong offset!");

// Function GA_BaseballBat_HeavySwing.GA_BaseballBat_HeavySwing_C.CreateCosmeticProjectile
// 0x0110 (0x0110 - 0x0000)
struct GA_BaseballBat_HeavySwing_C_CreateCosmeticProjectile final
{
public:
	struct FGameplayCueParameters                 CallFunc_CreateCosmeticProjectileCueParameters_Params; // 0x0000(0x00D8)(ContainsInstancedReference)
	bool                                          CallFunc_K2_HasAuthority_ReturnValue;              // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D9[0x7];                                       // 0x00D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwningActorFromActorInfo_ReturnValue;  // 0x00E0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_GetPlayerPawn_ReturnValue;                // 0x00E8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F1[0x7];                                       // 0x00F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAbilitySystemComponent*                CallFunc_GetAbilitySystemComponent_ReturnValue;    // 0x00F8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UAbilitySystemComponentIW*              K2Node_DynamicCast_AsAbility_System_Component_IW;  // 0x0100(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_BaseballBat_HeavySwing_C_CreateCosmeticProjectile) == 0x000008, "Wrong alignment on GA_BaseballBat_HeavySwing_C_CreateCosmeticProjectile");
static_assert(sizeof(GA_BaseballBat_HeavySwing_C_CreateCosmeticProjectile) == 0x000110, "Wrong size on GA_BaseballBat_HeavySwing_C_CreateCosmeticProjectile");
static_assert(offsetof(GA_BaseballBat_HeavySwing_C_CreateCosmeticProjectile, CallFunc_CreateCosmeticProjectileCueParameters_Params) == 0x000000, "Member 'GA_BaseballBat_HeavySwing_C_CreateCosmeticProjectile::CallFunc_CreateCosmeticProjectileCueParameters_Params' has a wrong offset!");
static_assert(offsetof(GA_BaseballBat_HeavySwing_C_CreateCosmeticProjectile, CallFunc_K2_HasAuthority_ReturnValue) == 0x0000D8, "Member 'GA_BaseballBat_HeavySwing_C_CreateCosmeticProjectile::CallFunc_K2_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_BaseballBat_HeavySwing_C_CreateCosmeticProjectile, CallFunc_GetOwningActorFromActorInfo_ReturnValue) == 0x0000E0, "Member 'GA_BaseballBat_HeavySwing_C_CreateCosmeticProjectile::CallFunc_GetOwningActorFromActorInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_BaseballBat_HeavySwing_C_CreateCosmeticProjectile, CallFunc_GetPlayerPawn_ReturnValue) == 0x0000E8, "Member 'GA_BaseballBat_HeavySwing_C_CreateCosmeticProjectile::CallFunc_GetPlayerPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_BaseballBat_HeavySwing_C_CreateCosmeticProjectile, CallFunc_HasAuthority_ReturnValue) == 0x0000F0, "Member 'GA_BaseballBat_HeavySwing_C_CreateCosmeticProjectile::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_BaseballBat_HeavySwing_C_CreateCosmeticProjectile, CallFunc_GetAbilitySystemComponent_ReturnValue) == 0x0000F8, "Member 'GA_BaseballBat_HeavySwing_C_CreateCosmeticProjectile::CallFunc_GetAbilitySystemComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_BaseballBat_HeavySwing_C_CreateCosmeticProjectile, K2Node_DynamicCast_AsAbility_System_Component_IW) == 0x000100, "Member 'GA_BaseballBat_HeavySwing_C_CreateCosmeticProjectile::K2Node_DynamicCast_AsAbility_System_Component_IW' has a wrong offset!");
static_assert(offsetof(GA_BaseballBat_HeavySwing_C_CreateCosmeticProjectile, K2Node_DynamicCast_bSuccess) == 0x000108, "Member 'GA_BaseballBat_HeavySwing_C_CreateCosmeticProjectile::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function GA_BaseballBat_HeavySwing.GA_BaseballBat_HeavySwing_C.CreateCosmeticProjectileCueParameters
// 0x0258 (0x0258 - 0x0000)
struct GA_BaseballBat_HeavySwing_C_CreateCosmeticProjectileCueParameters final
{
public:
	struct FGameplayCueParameters                 Params_0;                                          // 0x0000(0x00D8)(Parm, OutParm, ContainsInstancedReference)
	bool                                          Temp_bool_Variable;                                // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D9[0x7];                                       // 0x00D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagContainer                  Temp_struct_Variable;                              // 0x00E0(0x0020)()
	struct FGameplayTagContainer                  Temp_struct_Variable_1;                            // 0x0100(0x0020)()
	class AActor*                                 CallFunc_GetOwningActorFromActorInfo_ReturnValue;  // 0x0120(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetTagStackCount_ReturnValue;             // 0x0128(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x012C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12D[0x3];                                      // 0x012D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x0130(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UEquipmentInstance*                     CallFunc_GetAssociatedEquipment_ReturnValue;       // 0x0138(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTagContainer                  K2Node_Select_Default;                             // 0x0140(0x0020)()
	class AActor*                                 CallFunc_GetAvatarActorFromActorInfo_ReturnValue;  // 0x0160(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_ResidentCharacter_C*                K2Node_DynamicCast_AsBP_Resident_Character;        // 0x0168(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0170(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_171[0x7];                                      // 0x0171(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayCueParameters                 CallFunc_MakeGameplayCueParameters_ReturnValue;    // 0x0178(0x00D8)(ContainsInstancedReference)
	float                                         CallFunc_MakeGameplayCueParameters_NormalizedMagnitude_ImplicitCast; // 0x0250(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_BaseballBat_HeavySwing_C_CreateCosmeticProjectileCueParameters) == 0x000008, "Wrong alignment on GA_BaseballBat_HeavySwing_C_CreateCosmeticProjectileCueParameters");
static_assert(sizeof(GA_BaseballBat_HeavySwing_C_CreateCosmeticProjectileCueParameters) == 0x000258, "Wrong size on GA_BaseballBat_HeavySwing_C_CreateCosmeticProjectileCueParameters");
static_assert(offsetof(GA_BaseballBat_HeavySwing_C_CreateCosmeticProjectileCueParameters, Params_0) == 0x000000, "Member 'GA_BaseballBat_HeavySwing_C_CreateCosmeticProjectileCueParameters::Params_0' has a wrong offset!");
static_assert(offsetof(GA_BaseballBat_HeavySwing_C_CreateCosmeticProjectileCueParameters, Temp_bool_Variable) == 0x0000D8, "Member 'GA_BaseballBat_HeavySwing_C_CreateCosmeticProjectileCueParameters::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(GA_BaseballBat_HeavySwing_C_CreateCosmeticProjectileCueParameters, Temp_struct_Variable) == 0x0000E0, "Member 'GA_BaseballBat_HeavySwing_C_CreateCosmeticProjectileCueParameters::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(GA_BaseballBat_HeavySwing_C_CreateCosmeticProjectileCueParameters, Temp_struct_Variable_1) == 0x000100, "Member 'GA_BaseballBat_HeavySwing_C_CreateCosmeticProjectileCueParameters::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(GA_BaseballBat_HeavySwing_C_CreateCosmeticProjectileCueParameters, CallFunc_GetOwningActorFromActorInfo_ReturnValue) == 0x000120, "Member 'GA_BaseballBat_HeavySwing_C_CreateCosmeticProjectileCueParameters::CallFunc_GetOwningActorFromActorInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_BaseballBat_HeavySwing_C_CreateCosmeticProjectileCueParameters, CallFunc_GetTagStackCount_ReturnValue) == 0x000128, "Member 'GA_BaseballBat_HeavySwing_C_CreateCosmeticProjectileCueParameters::CallFunc_GetTagStackCount_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_BaseballBat_HeavySwing_C_CreateCosmeticProjectileCueParameters, CallFunc_HasAuthority_ReturnValue) == 0x00012C, "Member 'GA_BaseballBat_HeavySwing_C_CreateCosmeticProjectileCueParameters::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_BaseballBat_HeavySwing_C_CreateCosmeticProjectileCueParameters, CallFunc_Conv_IntToDouble_ReturnValue) == 0x000130, "Member 'GA_BaseballBat_HeavySwing_C_CreateCosmeticProjectileCueParameters::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_BaseballBat_HeavySwing_C_CreateCosmeticProjectileCueParameters, CallFunc_GetAssociatedEquipment_ReturnValue) == 0x000138, "Member 'GA_BaseballBat_HeavySwing_C_CreateCosmeticProjectileCueParameters::CallFunc_GetAssociatedEquipment_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_BaseballBat_HeavySwing_C_CreateCosmeticProjectileCueParameters, K2Node_Select_Default) == 0x000140, "Member 'GA_BaseballBat_HeavySwing_C_CreateCosmeticProjectileCueParameters::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(GA_BaseballBat_HeavySwing_C_CreateCosmeticProjectileCueParameters, CallFunc_GetAvatarActorFromActorInfo_ReturnValue) == 0x000160, "Member 'GA_BaseballBat_HeavySwing_C_CreateCosmeticProjectileCueParameters::CallFunc_GetAvatarActorFromActorInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_BaseballBat_HeavySwing_C_CreateCosmeticProjectileCueParameters, K2Node_DynamicCast_AsBP_Resident_Character) == 0x000168, "Member 'GA_BaseballBat_HeavySwing_C_CreateCosmeticProjectileCueParameters::K2Node_DynamicCast_AsBP_Resident_Character' has a wrong offset!");
static_assert(offsetof(GA_BaseballBat_HeavySwing_C_CreateCosmeticProjectileCueParameters, K2Node_DynamicCast_bSuccess) == 0x000170, "Member 'GA_BaseballBat_HeavySwing_C_CreateCosmeticProjectileCueParameters::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(GA_BaseballBat_HeavySwing_C_CreateCosmeticProjectileCueParameters, CallFunc_MakeGameplayCueParameters_ReturnValue) == 0x000178, "Member 'GA_BaseballBat_HeavySwing_C_CreateCosmeticProjectileCueParameters::CallFunc_MakeGameplayCueParameters_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_BaseballBat_HeavySwing_C_CreateCosmeticProjectileCueParameters, CallFunc_MakeGameplayCueParameters_NormalizedMagnitude_ImplicitCast) == 0x000250, "Member 'GA_BaseballBat_HeavySwing_C_CreateCosmeticProjectileCueParameters::CallFunc_MakeGameplayCueParameters_NormalizedMagnitude_ImplicitCast' has a wrong offset!");

// Function GA_BaseballBat_HeavySwing.GA_BaseballBat_HeavySwing_C.CreateSpawnTransform
// 0x0150 (0x0150 - 0x0000)
struct GA_BaseballBat_HeavySwing_C_CreateSpawnTransform final
{
public:
	struct FTransform                             SpawnTransform;                                    // 0x0000(0x0060)(Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0060(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetAvatarActorFromActorInfo_ReturnValue;  // 0x00C0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_ResidentCharacter_C*                K2Node_DynamicCast_AsBP_Resident_Character;        // 0x00C8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D1[0x7];                                       // 0x00D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x00D8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_1;              // 0x00F0(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_BaseballBat_HeavySwing_C_CreateSpawnTransform) == 0x000010, "Wrong alignment on GA_BaseballBat_HeavySwing_C_CreateSpawnTransform");
static_assert(sizeof(GA_BaseballBat_HeavySwing_C_CreateSpawnTransform) == 0x000150, "Wrong size on GA_BaseballBat_HeavySwing_C_CreateSpawnTransform");
static_assert(offsetof(GA_BaseballBat_HeavySwing_C_CreateSpawnTransform, SpawnTransform) == 0x000000, "Member 'GA_BaseballBat_HeavySwing_C_CreateSpawnTransform::SpawnTransform' has a wrong offset!");
static_assert(offsetof(GA_BaseballBat_HeavySwing_C_CreateSpawnTransform, CallFunc_MakeTransform_ReturnValue) == 0x000060, "Member 'GA_BaseballBat_HeavySwing_C_CreateSpawnTransform::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_BaseballBat_HeavySwing_C_CreateSpawnTransform, CallFunc_GetAvatarActorFromActorInfo_ReturnValue) == 0x0000C0, "Member 'GA_BaseballBat_HeavySwing_C_CreateSpawnTransform::CallFunc_GetAvatarActorFromActorInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_BaseballBat_HeavySwing_C_CreateSpawnTransform, K2Node_DynamicCast_AsBP_Resident_Character) == 0x0000C8, "Member 'GA_BaseballBat_HeavySwing_C_CreateSpawnTransform::K2Node_DynamicCast_AsBP_Resident_Character' has a wrong offset!");
static_assert(offsetof(GA_BaseballBat_HeavySwing_C_CreateSpawnTransform, K2Node_DynamicCast_bSuccess) == 0x0000D0, "Member 'GA_BaseballBat_HeavySwing_C_CreateSpawnTransform::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(GA_BaseballBat_HeavySwing_C_CreateSpawnTransform, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x0000D8, "Member 'GA_BaseballBat_HeavySwing_C_CreateSpawnTransform::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_BaseballBat_HeavySwing_C_CreateSpawnTransform, CallFunc_MakeTransform_ReturnValue_1) == 0x0000F0, "Member 'GA_BaseballBat_HeavySwing_C_CreateSpawnTransform::CallFunc_MakeTransform_ReturnValue_1' has a wrong offset!");

// Function GA_BaseballBat_HeavySwing.GA_BaseballBat_HeavySwing_C.ExecuteUbergraph_GA_BaseballBat_HeavySwing
// 0x02D0 (0x02D0 - 0x0000)
struct GA_BaseballBat_HeavySwing_C_ExecuteUbergraph_GA_BaseballBat_HeavySwing final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetAvatarActorFromActorInfo_ReturnValue;  // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_ResidentCharacter_C*                K2Node_DynamicCast_AsBP_Resident_Character;        // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x001C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0030(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAbilityTask_WaitDelay*                 CallFunc_WaitDelay_ReturnValue;                    // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51[0x3];                                       // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FActiveGameplayEffectHandle            CallFunc_BP_ApplyGameplayEffectToOwner_ReturnValue; // 0x0054(0x0008)(NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5C[0x4];                                       // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagContainer                  K2Node_Event_FailureReason;                        // 0x0060(0x0020)(ConstParm)
	class UClass*                                 K2Node_CustomEvent_ProjectileToSpawn;              // 0x0080(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_88[0x8];                                       // 0x0088(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             K2Node_CustomEvent_SpawnTransform;                 // 0x0090(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESpawnActorCollisionHandlingMethod            K2Node_CustomEvent_SpawnCollisionHandlingOverride; // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F1[0x7];                                       // 0x00F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_CustomEvent_ProjectileSpeed;                // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_CustomEvent_MinDamage;                      // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_CustomEvent_MaxDamage;                      // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_CustomEvent_MinDamageSpeed;                 // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_CustomEvent_MaxDamageSpeed;                 // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FCombatParticipant                     K2Node_CustomEvent_CombatParticipants;             // 0x0120(0x0060)()
	class APawn*                                  K2Node_CustomEvent_Instigator;                     // 0x0180(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_CustomEvent_DamageMultiplerToStructures;    // 0x0188(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0190(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_191[0x7];                                      // 0x0191(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetAvatarActorFromActorInfo_ReturnValue_1; // 0x0198(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  K2Node_DynamicCast_AsPawn;                         // 0x01A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x01A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bWasCancelled;                        // 0x01A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1AA[0x6];                                      // 0x01AA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_GetProjectileSpawnData_ProjectileToSpawn; // 0x01B0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B8[0x8];                                      // 0x01B8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetProjectileSpawnData_SpawnTransform;    // 0x01C0(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESpawnActorCollisionHandlingMethod            CallFunc_GetProjectileSpawnData_SpawnCollisionHandlingOverride; // 0x0220(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_221[0x7];                                      // 0x0221(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GetProjectileSpawnData_ProjectileSpeed;   // 0x0228(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetProjectileSpawnData_MinDamage;         // 0x0230(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetProjectileSpawnData_MaxDamage;         // 0x0238(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetProjectileSpawnData_MinDamageSpeed;    // 0x0240(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetProjectileSpawnData_MaxDamageSpeed;    // 0x0248(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FCombatParticipant                     CallFunc_GetProjectileSpawnData_CombatParticipants; // 0x0250(0x0060)()
	class APawn*                                  CallFunc_GetProjectileSpawnData_Instigator;        // 0x02B0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_HasAuthority_ReturnValue;              // 0x02B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_CommitAbility_ReturnValue;             // 0x02B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_HasAuthority_ReturnValue_1;            // 0x02BA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2BB[0x1];                                      // 0x02BB(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Get_Structure_Damage_Multiplier_Damage_Multiplier; // 0x02BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Get_Structure_Damage_Multiplier_MultiplierFound; // 0x02C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C1[0x7];                                      // 0x02C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Server_ProjectileSpawn_DamageMultiplerToStructures_ImplicitCast; // 0x02C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_BaseballBat_HeavySwing_C_ExecuteUbergraph_GA_BaseballBat_HeavySwing) == 0x000010, "Wrong alignment on GA_BaseballBat_HeavySwing_C_ExecuteUbergraph_GA_BaseballBat_HeavySwing");
static_assert(sizeof(GA_BaseballBat_HeavySwing_C_ExecuteUbergraph_GA_BaseballBat_HeavySwing) == 0x0002D0, "Wrong size on GA_BaseballBat_HeavySwing_C_ExecuteUbergraph_GA_BaseballBat_HeavySwing");
static_assert(offsetof(GA_BaseballBat_HeavySwing_C_ExecuteUbergraph_GA_BaseballBat_HeavySwing, EntryPoint) == 0x000000, "Member 'GA_BaseballBat_HeavySwing_C_ExecuteUbergraph_GA_BaseballBat_HeavySwing::EntryPoint' has a wrong offset!");
static_assert(offsetof(GA_BaseballBat_HeavySwing_C_ExecuteUbergraph_GA_BaseballBat_HeavySwing, CallFunc_GetAvatarActorFromActorInfo_ReturnValue) == 0x000008, "Member 'GA_BaseballBat_HeavySwing_C_ExecuteUbergraph_GA_BaseballBat_HeavySwing::CallFunc_GetAvatarActorFromActorInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_BaseballBat_HeavySwing_C_ExecuteUbergraph_GA_BaseballBat_HeavySwing, K2Node_DynamicCast_AsBP_Resident_Character) == 0x000010, "Member 'GA_BaseballBat_HeavySwing_C_ExecuteUbergraph_GA_BaseballBat_HeavySwing::K2Node_DynamicCast_AsBP_Resident_Character' has a wrong offset!");
static_assert(offsetof(GA_BaseballBat_HeavySwing_C_ExecuteUbergraph_GA_BaseballBat_HeavySwing, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'GA_BaseballBat_HeavySwing_C_ExecuteUbergraph_GA_BaseballBat_HeavySwing::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(GA_BaseballBat_HeavySwing_C_ExecuteUbergraph_GA_BaseballBat_HeavySwing, K2Node_CreateDelegate_OutputDelegate) == 0x00001C, "Member 'GA_BaseballBat_HeavySwing_C_ExecuteUbergraph_GA_BaseballBat_HeavySwing::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(GA_BaseballBat_HeavySwing_C_ExecuteUbergraph_GA_BaseballBat_HeavySwing, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000030, "Member 'GA_BaseballBat_HeavySwing_C_ExecuteUbergraph_GA_BaseballBat_HeavySwing::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_BaseballBat_HeavySwing_C_ExecuteUbergraph_GA_BaseballBat_HeavySwing, CallFunc_WaitDelay_ReturnValue) == 0x000048, "Member 'GA_BaseballBat_HeavySwing_C_ExecuteUbergraph_GA_BaseballBat_HeavySwing::CallFunc_WaitDelay_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_BaseballBat_HeavySwing_C_ExecuteUbergraph_GA_BaseballBat_HeavySwing, CallFunc_IsValid_ReturnValue) == 0x000050, "Member 'GA_BaseballBat_HeavySwing_C_ExecuteUbergraph_GA_BaseballBat_HeavySwing::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_BaseballBat_HeavySwing_C_ExecuteUbergraph_GA_BaseballBat_HeavySwing, CallFunc_BP_ApplyGameplayEffectToOwner_ReturnValue) == 0x000054, "Member 'GA_BaseballBat_HeavySwing_C_ExecuteUbergraph_GA_BaseballBat_HeavySwing::CallFunc_BP_ApplyGameplayEffectToOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_BaseballBat_HeavySwing_C_ExecuteUbergraph_GA_BaseballBat_HeavySwing, K2Node_Event_FailureReason) == 0x000060, "Member 'GA_BaseballBat_HeavySwing_C_ExecuteUbergraph_GA_BaseballBat_HeavySwing::K2Node_Event_FailureReason' has a wrong offset!");
static_assert(offsetof(GA_BaseballBat_HeavySwing_C_ExecuteUbergraph_GA_BaseballBat_HeavySwing, K2Node_CustomEvent_ProjectileToSpawn) == 0x000080, "Member 'GA_BaseballBat_HeavySwing_C_ExecuteUbergraph_GA_BaseballBat_HeavySwing::K2Node_CustomEvent_ProjectileToSpawn' has a wrong offset!");
static_assert(offsetof(GA_BaseballBat_HeavySwing_C_ExecuteUbergraph_GA_BaseballBat_HeavySwing, K2Node_CustomEvent_SpawnTransform) == 0x000090, "Member 'GA_BaseballBat_HeavySwing_C_ExecuteUbergraph_GA_BaseballBat_HeavySwing::K2Node_CustomEvent_SpawnTransform' has a wrong offset!");
static_assert(offsetof(GA_BaseballBat_HeavySwing_C_ExecuteUbergraph_GA_BaseballBat_HeavySwing, K2Node_CustomEvent_SpawnCollisionHandlingOverride) == 0x0000F0, "Member 'GA_BaseballBat_HeavySwing_C_ExecuteUbergraph_GA_BaseballBat_HeavySwing::K2Node_CustomEvent_SpawnCollisionHandlingOverride' has a wrong offset!");
static_assert(offsetof(GA_BaseballBat_HeavySwing_C_ExecuteUbergraph_GA_BaseballBat_HeavySwing, K2Node_CustomEvent_ProjectileSpeed) == 0x0000F8, "Member 'GA_BaseballBat_HeavySwing_C_ExecuteUbergraph_GA_BaseballBat_HeavySwing::K2Node_CustomEvent_ProjectileSpeed' has a wrong offset!");
static_assert(offsetof(GA_BaseballBat_HeavySwing_C_ExecuteUbergraph_GA_BaseballBat_HeavySwing, K2Node_CustomEvent_MinDamage) == 0x000100, "Member 'GA_BaseballBat_HeavySwing_C_ExecuteUbergraph_GA_BaseballBat_HeavySwing::K2Node_CustomEvent_MinDamage' has a wrong offset!");
static_assert(offsetof(GA_BaseballBat_HeavySwing_C_ExecuteUbergraph_GA_BaseballBat_HeavySwing, K2Node_CustomEvent_MaxDamage) == 0x000108, "Member 'GA_BaseballBat_HeavySwing_C_ExecuteUbergraph_GA_BaseballBat_HeavySwing::K2Node_CustomEvent_MaxDamage' has a wrong offset!");
static_assert(offsetof(GA_BaseballBat_HeavySwing_C_ExecuteUbergraph_GA_BaseballBat_HeavySwing, K2Node_CustomEvent_MinDamageSpeed) == 0x000110, "Member 'GA_BaseballBat_HeavySwing_C_ExecuteUbergraph_GA_BaseballBat_HeavySwing::K2Node_CustomEvent_MinDamageSpeed' has a wrong offset!");
static_assert(offsetof(GA_BaseballBat_HeavySwing_C_ExecuteUbergraph_GA_BaseballBat_HeavySwing, K2Node_CustomEvent_MaxDamageSpeed) == 0x000118, "Member 'GA_BaseballBat_HeavySwing_C_ExecuteUbergraph_GA_BaseballBat_HeavySwing::K2Node_CustomEvent_MaxDamageSpeed' has a wrong offset!");
static_assert(offsetof(GA_BaseballBat_HeavySwing_C_ExecuteUbergraph_GA_BaseballBat_HeavySwing, K2Node_CustomEvent_CombatParticipants) == 0x000120, "Member 'GA_BaseballBat_HeavySwing_C_ExecuteUbergraph_GA_BaseballBat_HeavySwing::K2Node_CustomEvent_CombatParticipants' has a wrong offset!");
static_assert(offsetof(GA_BaseballBat_HeavySwing_C_ExecuteUbergraph_GA_BaseballBat_HeavySwing, K2Node_CustomEvent_Instigator) == 0x000180, "Member 'GA_BaseballBat_HeavySwing_C_ExecuteUbergraph_GA_BaseballBat_HeavySwing::K2Node_CustomEvent_Instigator' has a wrong offset!");
static_assert(offsetof(GA_BaseballBat_HeavySwing_C_ExecuteUbergraph_GA_BaseballBat_HeavySwing, K2Node_CustomEvent_DamageMultiplerToStructures) == 0x000188, "Member 'GA_BaseballBat_HeavySwing_C_ExecuteUbergraph_GA_BaseballBat_HeavySwing::K2Node_CustomEvent_DamageMultiplerToStructures' has a wrong offset!");
static_assert(offsetof(GA_BaseballBat_HeavySwing_C_ExecuteUbergraph_GA_BaseballBat_HeavySwing, CallFunc_IsValid_ReturnValue_1) == 0x000190, "Member 'GA_BaseballBat_HeavySwing_C_ExecuteUbergraph_GA_BaseballBat_HeavySwing::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_BaseballBat_HeavySwing_C_ExecuteUbergraph_GA_BaseballBat_HeavySwing, CallFunc_GetAvatarActorFromActorInfo_ReturnValue_1) == 0x000198, "Member 'GA_BaseballBat_HeavySwing_C_ExecuteUbergraph_GA_BaseballBat_HeavySwing::CallFunc_GetAvatarActorFromActorInfo_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_BaseballBat_HeavySwing_C_ExecuteUbergraph_GA_BaseballBat_HeavySwing, K2Node_DynamicCast_AsPawn) == 0x0001A0, "Member 'GA_BaseballBat_HeavySwing_C_ExecuteUbergraph_GA_BaseballBat_HeavySwing::K2Node_DynamicCast_AsPawn' has a wrong offset!");
static_assert(offsetof(GA_BaseballBat_HeavySwing_C_ExecuteUbergraph_GA_BaseballBat_HeavySwing, K2Node_DynamicCast_bSuccess_1) == 0x0001A8, "Member 'GA_BaseballBat_HeavySwing_C_ExecuteUbergraph_GA_BaseballBat_HeavySwing::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(GA_BaseballBat_HeavySwing_C_ExecuteUbergraph_GA_BaseballBat_HeavySwing, K2Node_Event_bWasCancelled) == 0x0001A9, "Member 'GA_BaseballBat_HeavySwing_C_ExecuteUbergraph_GA_BaseballBat_HeavySwing::K2Node_Event_bWasCancelled' has a wrong offset!");
static_assert(offsetof(GA_BaseballBat_HeavySwing_C_ExecuteUbergraph_GA_BaseballBat_HeavySwing, CallFunc_GetProjectileSpawnData_ProjectileToSpawn) == 0x0001B0, "Member 'GA_BaseballBat_HeavySwing_C_ExecuteUbergraph_GA_BaseballBat_HeavySwing::CallFunc_GetProjectileSpawnData_ProjectileToSpawn' has a wrong offset!");
static_assert(offsetof(GA_BaseballBat_HeavySwing_C_ExecuteUbergraph_GA_BaseballBat_HeavySwing, CallFunc_GetProjectileSpawnData_SpawnTransform) == 0x0001C0, "Member 'GA_BaseballBat_HeavySwing_C_ExecuteUbergraph_GA_BaseballBat_HeavySwing::CallFunc_GetProjectileSpawnData_SpawnTransform' has a wrong offset!");
static_assert(offsetof(GA_BaseballBat_HeavySwing_C_ExecuteUbergraph_GA_BaseballBat_HeavySwing, CallFunc_GetProjectileSpawnData_SpawnCollisionHandlingOverride) == 0x000220, "Member 'GA_BaseballBat_HeavySwing_C_ExecuteUbergraph_GA_BaseballBat_HeavySwing::CallFunc_GetProjectileSpawnData_SpawnCollisionHandlingOverride' has a wrong offset!");
static_assert(offsetof(GA_BaseballBat_HeavySwing_C_ExecuteUbergraph_GA_BaseballBat_HeavySwing, CallFunc_GetProjectileSpawnData_ProjectileSpeed) == 0x000228, "Member 'GA_BaseballBat_HeavySwing_C_ExecuteUbergraph_GA_BaseballBat_HeavySwing::CallFunc_GetProjectileSpawnData_ProjectileSpeed' has a wrong offset!");
static_assert(offsetof(GA_BaseballBat_HeavySwing_C_ExecuteUbergraph_GA_BaseballBat_HeavySwing, CallFunc_GetProjectileSpawnData_MinDamage) == 0x000230, "Member 'GA_BaseballBat_HeavySwing_C_ExecuteUbergraph_GA_BaseballBat_HeavySwing::CallFunc_GetProjectileSpawnData_MinDamage' has a wrong offset!");
static_assert(offsetof(GA_BaseballBat_HeavySwing_C_ExecuteUbergraph_GA_BaseballBat_HeavySwing, CallFunc_GetProjectileSpawnData_MaxDamage) == 0x000238, "Member 'GA_BaseballBat_HeavySwing_C_ExecuteUbergraph_GA_BaseballBat_HeavySwing::CallFunc_GetProjectileSpawnData_MaxDamage' has a wrong offset!");
static_assert(offsetof(GA_BaseballBat_HeavySwing_C_ExecuteUbergraph_GA_BaseballBat_HeavySwing, CallFunc_GetProjectileSpawnData_MinDamageSpeed) == 0x000240, "Member 'GA_BaseballBat_HeavySwing_C_ExecuteUbergraph_GA_BaseballBat_HeavySwing::CallFunc_GetProjectileSpawnData_MinDamageSpeed' has a wrong offset!");
static_assert(offsetof(GA_BaseballBat_HeavySwing_C_ExecuteUbergraph_GA_BaseballBat_HeavySwing, CallFunc_GetProjectileSpawnData_MaxDamageSpeed) == 0x000248, "Member 'GA_BaseballBat_HeavySwing_C_ExecuteUbergraph_GA_BaseballBat_HeavySwing::CallFunc_GetProjectileSpawnData_MaxDamageSpeed' has a wrong offset!");
static_assert(offsetof(GA_BaseballBat_HeavySwing_C_ExecuteUbergraph_GA_BaseballBat_HeavySwing, CallFunc_GetProjectileSpawnData_CombatParticipants) == 0x000250, "Member 'GA_BaseballBat_HeavySwing_C_ExecuteUbergraph_GA_BaseballBat_HeavySwing::CallFunc_GetProjectileSpawnData_CombatParticipants' has a wrong offset!");
static_assert(offsetof(GA_BaseballBat_HeavySwing_C_ExecuteUbergraph_GA_BaseballBat_HeavySwing, CallFunc_GetProjectileSpawnData_Instigator) == 0x0002B0, "Member 'GA_BaseballBat_HeavySwing_C_ExecuteUbergraph_GA_BaseballBat_HeavySwing::CallFunc_GetProjectileSpawnData_Instigator' has a wrong offset!");
static_assert(offsetof(GA_BaseballBat_HeavySwing_C_ExecuteUbergraph_GA_BaseballBat_HeavySwing, CallFunc_K2_HasAuthority_ReturnValue) == 0x0002B8, "Member 'GA_BaseballBat_HeavySwing_C_ExecuteUbergraph_GA_BaseballBat_HeavySwing::CallFunc_K2_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_BaseballBat_HeavySwing_C_ExecuteUbergraph_GA_BaseballBat_HeavySwing, CallFunc_K2_CommitAbility_ReturnValue) == 0x0002B9, "Member 'GA_BaseballBat_HeavySwing_C_ExecuteUbergraph_GA_BaseballBat_HeavySwing::CallFunc_K2_CommitAbility_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_BaseballBat_HeavySwing_C_ExecuteUbergraph_GA_BaseballBat_HeavySwing, CallFunc_K2_HasAuthority_ReturnValue_1) == 0x0002BA, "Member 'GA_BaseballBat_HeavySwing_C_ExecuteUbergraph_GA_BaseballBat_HeavySwing::CallFunc_K2_HasAuthority_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_BaseballBat_HeavySwing_C_ExecuteUbergraph_GA_BaseballBat_HeavySwing, CallFunc_Get_Structure_Damage_Multiplier_Damage_Multiplier) == 0x0002BC, "Member 'GA_BaseballBat_HeavySwing_C_ExecuteUbergraph_GA_BaseballBat_HeavySwing::CallFunc_Get_Structure_Damage_Multiplier_Damage_Multiplier' has a wrong offset!");
static_assert(offsetof(GA_BaseballBat_HeavySwing_C_ExecuteUbergraph_GA_BaseballBat_HeavySwing, CallFunc_Get_Structure_Damage_Multiplier_MultiplierFound) == 0x0002C0, "Member 'GA_BaseballBat_HeavySwing_C_ExecuteUbergraph_GA_BaseballBat_HeavySwing::CallFunc_Get_Structure_Damage_Multiplier_MultiplierFound' has a wrong offset!");
static_assert(offsetof(GA_BaseballBat_HeavySwing_C_ExecuteUbergraph_GA_BaseballBat_HeavySwing, CallFunc_Server_ProjectileSpawn_DamageMultiplerToStructures_ImplicitCast) == 0x0002C8, "Member 'GA_BaseballBat_HeavySwing_C_ExecuteUbergraph_GA_BaseballBat_HeavySwing::CallFunc_Server_ProjectileSpawn_DamageMultiplerToStructures_ImplicitCast' has a wrong offset!");

// Function GA_BaseballBat_HeavySwing.GA_BaseballBat_HeavySwing_C.Get Min Max Damage Speed
// 0x0028 (0x0028 - 0x0000)
struct GA_BaseballBat_HeavySwing_C_Get_Min_Max_Damage_Speed final
{
public:
	double                                        MinDamageSpeed;                                    // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        MaxDamageSpeed;                                    // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetTagStackCount_ReturnValue;             // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetTagStackCount_ReturnValue_1;           // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue_1;           // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_BaseballBat_HeavySwing_C_Get_Min_Max_Damage_Speed) == 0x000008, "Wrong alignment on GA_BaseballBat_HeavySwing_C_Get_Min_Max_Damage_Speed");
static_assert(sizeof(GA_BaseballBat_HeavySwing_C_Get_Min_Max_Damage_Speed) == 0x000028, "Wrong size on GA_BaseballBat_HeavySwing_C_Get_Min_Max_Damage_Speed");
static_assert(offsetof(GA_BaseballBat_HeavySwing_C_Get_Min_Max_Damage_Speed, MinDamageSpeed) == 0x000000, "Member 'GA_BaseballBat_HeavySwing_C_Get_Min_Max_Damage_Speed::MinDamageSpeed' has a wrong offset!");
static_assert(offsetof(GA_BaseballBat_HeavySwing_C_Get_Min_Max_Damage_Speed, MaxDamageSpeed) == 0x000008, "Member 'GA_BaseballBat_HeavySwing_C_Get_Min_Max_Damage_Speed::MaxDamageSpeed' has a wrong offset!");
static_assert(offsetof(GA_BaseballBat_HeavySwing_C_Get_Min_Max_Damage_Speed, CallFunc_GetTagStackCount_ReturnValue) == 0x000010, "Member 'GA_BaseballBat_HeavySwing_C_Get_Min_Max_Damage_Speed::CallFunc_GetTagStackCount_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_BaseballBat_HeavySwing_C_Get_Min_Max_Damage_Speed, CallFunc_GetTagStackCount_ReturnValue_1) == 0x000014, "Member 'GA_BaseballBat_HeavySwing_C_Get_Min_Max_Damage_Speed::CallFunc_GetTagStackCount_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_BaseballBat_HeavySwing_C_Get_Min_Max_Damage_Speed, CallFunc_Conv_IntToDouble_ReturnValue) == 0x000018, "Member 'GA_BaseballBat_HeavySwing_C_Get_Min_Max_Damage_Speed::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_BaseballBat_HeavySwing_C_Get_Min_Max_Damage_Speed, CallFunc_Conv_IntToDouble_ReturnValue_1) == 0x000020, "Member 'GA_BaseballBat_HeavySwing_C_Get_Min_Max_Damage_Speed::CallFunc_Conv_IntToDouble_ReturnValue_1' has a wrong offset!");

// Function GA_BaseballBat_HeavySwing.GA_BaseballBat_HeavySwing_C.GetMinMaxDamage
// 0x0040 (0x0040 - 0x0000)
struct GA_BaseballBat_HeavySwing_C_GetMinMaxDamage final
{
public:
	bool                                          UseMinMaxDamage;                                   // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        MinDamage;                                         // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        MaxDamage;                                         // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetTagStackCount_ReturnValue;             // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetTagStackCount_ReturnValue_1;           // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetTagStackCount_ReturnValue_2;           // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue_1;           // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue_2;           // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_BaseballBat_HeavySwing_C_GetMinMaxDamage) == 0x000008, "Wrong alignment on GA_BaseballBat_HeavySwing_C_GetMinMaxDamage");
static_assert(sizeof(GA_BaseballBat_HeavySwing_C_GetMinMaxDamage) == 0x000040, "Wrong size on GA_BaseballBat_HeavySwing_C_GetMinMaxDamage");
static_assert(offsetof(GA_BaseballBat_HeavySwing_C_GetMinMaxDamage, UseMinMaxDamage) == 0x000000, "Member 'GA_BaseballBat_HeavySwing_C_GetMinMaxDamage::UseMinMaxDamage' has a wrong offset!");
static_assert(offsetof(GA_BaseballBat_HeavySwing_C_GetMinMaxDamage, MinDamage) == 0x000008, "Member 'GA_BaseballBat_HeavySwing_C_GetMinMaxDamage::MinDamage' has a wrong offset!");
static_assert(offsetof(GA_BaseballBat_HeavySwing_C_GetMinMaxDamage, MaxDamage) == 0x000010, "Member 'GA_BaseballBat_HeavySwing_C_GetMinMaxDamage::MaxDamage' has a wrong offset!");
static_assert(offsetof(GA_BaseballBat_HeavySwing_C_GetMinMaxDamage, CallFunc_GetTagStackCount_ReturnValue) == 0x000018, "Member 'GA_BaseballBat_HeavySwing_C_GetMinMaxDamage::CallFunc_GetTagStackCount_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_BaseballBat_HeavySwing_C_GetMinMaxDamage, CallFunc_Conv_IntToDouble_ReturnValue) == 0x000020, "Member 'GA_BaseballBat_HeavySwing_C_GetMinMaxDamage::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_BaseballBat_HeavySwing_C_GetMinMaxDamage, CallFunc_GetTagStackCount_ReturnValue_1) == 0x000028, "Member 'GA_BaseballBat_HeavySwing_C_GetMinMaxDamage::CallFunc_GetTagStackCount_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_BaseballBat_HeavySwing_C_GetMinMaxDamage, CallFunc_GetTagStackCount_ReturnValue_2) == 0x00002C, "Member 'GA_BaseballBat_HeavySwing_C_GetMinMaxDamage::CallFunc_GetTagStackCount_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GA_BaseballBat_HeavySwing_C_GetMinMaxDamage, CallFunc_Conv_IntToDouble_ReturnValue_1) == 0x000030, "Member 'GA_BaseballBat_HeavySwing_C_GetMinMaxDamage::CallFunc_Conv_IntToDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_BaseballBat_HeavySwing_C_GetMinMaxDamage, CallFunc_Conv_IntToDouble_ReturnValue_2) == 0x000038, "Member 'GA_BaseballBat_HeavySwing_C_GetMinMaxDamage::CallFunc_Conv_IntToDouble_ReturnValue_2' has a wrong offset!");

// Function GA_BaseballBat_HeavySwing.GA_BaseballBat_HeavySwing_C.GetProjectileSpawnData
// 0x0380 (0x0380 - 0x0000)
struct GA_BaseballBat_HeavySwing_C_GetProjectileSpawnData final
{
public:
	bool                                          UseMinMaxDamage;                                   // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  ResidentCharacterPawn;                             // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  ProjectileInstigator;                              // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	ESpawnActorCollisionHandlingMethod            CollisionHandlingOverride;                         // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 ProjectileToSpawn;                                 // 0x0020(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_28[0x8];                                       // 0x0028(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             SpawnTransform;                                    // 0x0030(0x0060)(Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESpawnActorCollisionHandlingMethod            SpawnCollisionHandlingOverride;                    // 0x0090(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_91[0x7];                                       // 0x0091(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        ProjectileSpeed;                                   // 0x0098(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        MinDamage;                                         // 0x00A0(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        MaxDamage;                                         // 0x00A8(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        MinDamageSpeed;                                    // 0x00B0(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        MaxDamageSpeed;                                    // 0x00B8(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FCombatParticipant                     CombatParticipants;                                // 0x00C0(0x0060)(Parm, OutParm)
	class APawn*                                  Instigator;                                        // 0x0120(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_128[0x8];                                      // 0x0128(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             SpawnPoint;                                        // 0x0130(0x0060)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 TargetProjectileClass;                             // 0x0190(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                LocalVelocity;                                     // 0x0198(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESpawnActorCollisionHandlingMethod            CollisionHandlingOverride_0;                       // 0x01B0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B1[0x7];                                      // 0x01B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  ResidentCharacterPawn_0;                           // 0x01B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	bool                                          UseMinMaxDamage_0;                                 // 0x01C0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C1[0x7];                                      // 0x01C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        TimeHeld;                                          // 0x01C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UItemInstance*                          AssociatedItem;                                    // 0x01D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UGameplayAbilityEquipment*              GameplayAbilityEquipment;                          // 0x01D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UGameplayAbility*                       GameplayAbility;                                   // 0x01E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  ProjectileInstigator_0;                            // 0x01E8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	struct FCombatParticipant                     CombatParticipants_0;                              // 0x01F0(0x0060)(Edit, BlueprintVisible)
	double                                        MaxDamageSpeed_0;                                  // 0x0250(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        MinDamageSpeed_0;                                  // 0x0258(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        MaxDamage_0;                                       // 0x0260(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        ProjectileSpeed_0;                                 // 0x0268(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        MinDamage_0;                                       // 0x0270(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESpawnActorCollisionHandlingMethod            SpawnCollisionHandlingMethod;                      // 0x0278(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_279[0x7];                                      // 0x0279(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_GetProjectileToSpawn_ProjectileClass;     // 0x0280(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FCombatParticipant                     CallFunc_CreateCombatParticipants_NewParam;        // 0x0288(0x0060)()
	double                                        CallFunc_GetMinMaxDamage_MinDamage;                // 0x02E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetMinMaxDamage_MaxDamage;                // 0x02F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Get_Min_Max_Damage_Speed_MinDamageSpeed;  // 0x02F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Get_Min_Max_Damage_Speed_MaxDamageSpeed;  // 0x0300(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_308[0x8];                                      // 0x0308(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_CreateSpawnTransform_SpawnTransform;      // 0x0310(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetProjectileSpeed_ProjectileSpeed;       // 0x0370(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_BaseballBat_HeavySwing_C_GetProjectileSpawnData) == 0x000010, "Wrong alignment on GA_BaseballBat_HeavySwing_C_GetProjectileSpawnData");
static_assert(sizeof(GA_BaseballBat_HeavySwing_C_GetProjectileSpawnData) == 0x000380, "Wrong size on GA_BaseballBat_HeavySwing_C_GetProjectileSpawnData");
static_assert(offsetof(GA_BaseballBat_HeavySwing_C_GetProjectileSpawnData, UseMinMaxDamage) == 0x000000, "Member 'GA_BaseballBat_HeavySwing_C_GetProjectileSpawnData::UseMinMaxDamage' has a wrong offset!");
static_assert(offsetof(GA_BaseballBat_HeavySwing_C_GetProjectileSpawnData, ResidentCharacterPawn) == 0x000008, "Member 'GA_BaseballBat_HeavySwing_C_GetProjectileSpawnData::ResidentCharacterPawn' has a wrong offset!");
static_assert(offsetof(GA_BaseballBat_HeavySwing_C_GetProjectileSpawnData, ProjectileInstigator) == 0x000010, "Member 'GA_BaseballBat_HeavySwing_C_GetProjectileSpawnData::ProjectileInstigator' has a wrong offset!");
static_assert(offsetof(GA_BaseballBat_HeavySwing_C_GetProjectileSpawnData, CollisionHandlingOverride) == 0x000018, "Member 'GA_BaseballBat_HeavySwing_C_GetProjectileSpawnData::CollisionHandlingOverride' has a wrong offset!");
static_assert(offsetof(GA_BaseballBat_HeavySwing_C_GetProjectileSpawnData, ProjectileToSpawn) == 0x000020, "Member 'GA_BaseballBat_HeavySwing_C_GetProjectileSpawnData::ProjectileToSpawn' has a wrong offset!");
static_assert(offsetof(GA_BaseballBat_HeavySwing_C_GetProjectileSpawnData, SpawnTransform) == 0x000030, "Member 'GA_BaseballBat_HeavySwing_C_GetProjectileSpawnData::SpawnTransform' has a wrong offset!");
static_assert(offsetof(GA_BaseballBat_HeavySwing_C_GetProjectileSpawnData, SpawnCollisionHandlingOverride) == 0x000090, "Member 'GA_BaseballBat_HeavySwing_C_GetProjectileSpawnData::SpawnCollisionHandlingOverride' has a wrong offset!");
static_assert(offsetof(GA_BaseballBat_HeavySwing_C_GetProjectileSpawnData, ProjectileSpeed) == 0x000098, "Member 'GA_BaseballBat_HeavySwing_C_GetProjectileSpawnData::ProjectileSpeed' has a wrong offset!");
static_assert(offsetof(GA_BaseballBat_HeavySwing_C_GetProjectileSpawnData, MinDamage) == 0x0000A0, "Member 'GA_BaseballBat_HeavySwing_C_GetProjectileSpawnData::MinDamage' has a wrong offset!");
static_assert(offsetof(GA_BaseballBat_HeavySwing_C_GetProjectileSpawnData, MaxDamage) == 0x0000A8, "Member 'GA_BaseballBat_HeavySwing_C_GetProjectileSpawnData::MaxDamage' has a wrong offset!");
static_assert(offsetof(GA_BaseballBat_HeavySwing_C_GetProjectileSpawnData, MinDamageSpeed) == 0x0000B0, "Member 'GA_BaseballBat_HeavySwing_C_GetProjectileSpawnData::MinDamageSpeed' has a wrong offset!");
static_assert(offsetof(GA_BaseballBat_HeavySwing_C_GetProjectileSpawnData, MaxDamageSpeed) == 0x0000B8, "Member 'GA_BaseballBat_HeavySwing_C_GetProjectileSpawnData::MaxDamageSpeed' has a wrong offset!");
static_assert(offsetof(GA_BaseballBat_HeavySwing_C_GetProjectileSpawnData, CombatParticipants) == 0x0000C0, "Member 'GA_BaseballBat_HeavySwing_C_GetProjectileSpawnData::CombatParticipants' has a wrong offset!");
static_assert(offsetof(GA_BaseballBat_HeavySwing_C_GetProjectileSpawnData, Instigator) == 0x000120, "Member 'GA_BaseballBat_HeavySwing_C_GetProjectileSpawnData::Instigator' has a wrong offset!");
static_assert(offsetof(GA_BaseballBat_HeavySwing_C_GetProjectileSpawnData, SpawnPoint) == 0x000130, "Member 'GA_BaseballBat_HeavySwing_C_GetProjectileSpawnData::SpawnPoint' has a wrong offset!");
static_assert(offsetof(GA_BaseballBat_HeavySwing_C_GetProjectileSpawnData, TargetProjectileClass) == 0x000190, "Member 'GA_BaseballBat_HeavySwing_C_GetProjectileSpawnData::TargetProjectileClass' has a wrong offset!");
static_assert(offsetof(GA_BaseballBat_HeavySwing_C_GetProjectileSpawnData, LocalVelocity) == 0x000198, "Member 'GA_BaseballBat_HeavySwing_C_GetProjectileSpawnData::LocalVelocity' has a wrong offset!");
static_assert(offsetof(GA_BaseballBat_HeavySwing_C_GetProjectileSpawnData, CollisionHandlingOverride_0) == 0x0001B0, "Member 'GA_BaseballBat_HeavySwing_C_GetProjectileSpawnData::CollisionHandlingOverride_0' has a wrong offset!");
static_assert(offsetof(GA_BaseballBat_HeavySwing_C_GetProjectileSpawnData, ResidentCharacterPawn_0) == 0x0001B8, "Member 'GA_BaseballBat_HeavySwing_C_GetProjectileSpawnData::ResidentCharacterPawn_0' has a wrong offset!");
static_assert(offsetof(GA_BaseballBat_HeavySwing_C_GetProjectileSpawnData, UseMinMaxDamage_0) == 0x0001C0, "Member 'GA_BaseballBat_HeavySwing_C_GetProjectileSpawnData::UseMinMaxDamage_0' has a wrong offset!");
static_assert(offsetof(GA_BaseballBat_HeavySwing_C_GetProjectileSpawnData, TimeHeld) == 0x0001C8, "Member 'GA_BaseballBat_HeavySwing_C_GetProjectileSpawnData::TimeHeld' has a wrong offset!");
static_assert(offsetof(GA_BaseballBat_HeavySwing_C_GetProjectileSpawnData, AssociatedItem) == 0x0001D0, "Member 'GA_BaseballBat_HeavySwing_C_GetProjectileSpawnData::AssociatedItem' has a wrong offset!");
static_assert(offsetof(GA_BaseballBat_HeavySwing_C_GetProjectileSpawnData, GameplayAbilityEquipment) == 0x0001D8, "Member 'GA_BaseballBat_HeavySwing_C_GetProjectileSpawnData::GameplayAbilityEquipment' has a wrong offset!");
static_assert(offsetof(GA_BaseballBat_HeavySwing_C_GetProjectileSpawnData, GameplayAbility) == 0x0001E0, "Member 'GA_BaseballBat_HeavySwing_C_GetProjectileSpawnData::GameplayAbility' has a wrong offset!");
static_assert(offsetof(GA_BaseballBat_HeavySwing_C_GetProjectileSpawnData, ProjectileInstigator_0) == 0x0001E8, "Member 'GA_BaseballBat_HeavySwing_C_GetProjectileSpawnData::ProjectileInstigator_0' has a wrong offset!");
static_assert(offsetof(GA_BaseballBat_HeavySwing_C_GetProjectileSpawnData, CombatParticipants_0) == 0x0001F0, "Member 'GA_BaseballBat_HeavySwing_C_GetProjectileSpawnData::CombatParticipants_0' has a wrong offset!");
static_assert(offsetof(GA_BaseballBat_HeavySwing_C_GetProjectileSpawnData, MaxDamageSpeed_0) == 0x000250, "Member 'GA_BaseballBat_HeavySwing_C_GetProjectileSpawnData::MaxDamageSpeed_0' has a wrong offset!");
static_assert(offsetof(GA_BaseballBat_HeavySwing_C_GetProjectileSpawnData, MinDamageSpeed_0) == 0x000258, "Member 'GA_BaseballBat_HeavySwing_C_GetProjectileSpawnData::MinDamageSpeed_0' has a wrong offset!");
static_assert(offsetof(GA_BaseballBat_HeavySwing_C_GetProjectileSpawnData, MaxDamage_0) == 0x000260, "Member 'GA_BaseballBat_HeavySwing_C_GetProjectileSpawnData::MaxDamage_0' has a wrong offset!");
static_assert(offsetof(GA_BaseballBat_HeavySwing_C_GetProjectileSpawnData, ProjectileSpeed_0) == 0x000268, "Member 'GA_BaseballBat_HeavySwing_C_GetProjectileSpawnData::ProjectileSpeed_0' has a wrong offset!");
static_assert(offsetof(GA_BaseballBat_HeavySwing_C_GetProjectileSpawnData, MinDamage_0) == 0x000270, "Member 'GA_BaseballBat_HeavySwing_C_GetProjectileSpawnData::MinDamage_0' has a wrong offset!");
static_assert(offsetof(GA_BaseballBat_HeavySwing_C_GetProjectileSpawnData, SpawnCollisionHandlingMethod) == 0x000278, "Member 'GA_BaseballBat_HeavySwing_C_GetProjectileSpawnData::SpawnCollisionHandlingMethod' has a wrong offset!");
static_assert(offsetof(GA_BaseballBat_HeavySwing_C_GetProjectileSpawnData, CallFunc_GetProjectileToSpawn_ProjectileClass) == 0x000280, "Member 'GA_BaseballBat_HeavySwing_C_GetProjectileSpawnData::CallFunc_GetProjectileToSpawn_ProjectileClass' has a wrong offset!");
static_assert(offsetof(GA_BaseballBat_HeavySwing_C_GetProjectileSpawnData, CallFunc_CreateCombatParticipants_NewParam) == 0x000288, "Member 'GA_BaseballBat_HeavySwing_C_GetProjectileSpawnData::CallFunc_CreateCombatParticipants_NewParam' has a wrong offset!");
static_assert(offsetof(GA_BaseballBat_HeavySwing_C_GetProjectileSpawnData, CallFunc_GetMinMaxDamage_MinDamage) == 0x0002E8, "Member 'GA_BaseballBat_HeavySwing_C_GetProjectileSpawnData::CallFunc_GetMinMaxDamage_MinDamage' has a wrong offset!");
static_assert(offsetof(GA_BaseballBat_HeavySwing_C_GetProjectileSpawnData, CallFunc_GetMinMaxDamage_MaxDamage) == 0x0002F0, "Member 'GA_BaseballBat_HeavySwing_C_GetProjectileSpawnData::CallFunc_GetMinMaxDamage_MaxDamage' has a wrong offset!");
static_assert(offsetof(GA_BaseballBat_HeavySwing_C_GetProjectileSpawnData, CallFunc_Get_Min_Max_Damage_Speed_MinDamageSpeed) == 0x0002F8, "Member 'GA_BaseballBat_HeavySwing_C_GetProjectileSpawnData::CallFunc_Get_Min_Max_Damage_Speed_MinDamageSpeed' has a wrong offset!");
static_assert(offsetof(GA_BaseballBat_HeavySwing_C_GetProjectileSpawnData, CallFunc_Get_Min_Max_Damage_Speed_MaxDamageSpeed) == 0x000300, "Member 'GA_BaseballBat_HeavySwing_C_GetProjectileSpawnData::CallFunc_Get_Min_Max_Damage_Speed_MaxDamageSpeed' has a wrong offset!");
static_assert(offsetof(GA_BaseballBat_HeavySwing_C_GetProjectileSpawnData, CallFunc_CreateSpawnTransform_SpawnTransform) == 0x000310, "Member 'GA_BaseballBat_HeavySwing_C_GetProjectileSpawnData::CallFunc_CreateSpawnTransform_SpawnTransform' has a wrong offset!");
static_assert(offsetof(GA_BaseballBat_HeavySwing_C_GetProjectileSpawnData, CallFunc_GetProjectileSpeed_ProjectileSpeed) == 0x000370, "Member 'GA_BaseballBat_HeavySwing_C_GetProjectileSpawnData::CallFunc_GetProjectileSpeed_ProjectileSpeed' has a wrong offset!");

// Function GA_BaseballBat_HeavySwing.GA_BaseballBat_HeavySwing_C.GetProjectileSpeed
// 0x0010 (0x0010 - 0x0000)
struct GA_BaseballBat_HeavySwing_C_GetProjectileSpeed final
{
public:
	double                                        Speed;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        ProjectileSpeed;                                   // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_BaseballBat_HeavySwing_C_GetProjectileSpeed) == 0x000008, "Wrong alignment on GA_BaseballBat_HeavySwing_C_GetProjectileSpeed");
static_assert(sizeof(GA_BaseballBat_HeavySwing_C_GetProjectileSpeed) == 0x000010, "Wrong size on GA_BaseballBat_HeavySwing_C_GetProjectileSpeed");
static_assert(offsetof(GA_BaseballBat_HeavySwing_C_GetProjectileSpeed, Speed) == 0x000000, "Member 'GA_BaseballBat_HeavySwing_C_GetProjectileSpeed::Speed' has a wrong offset!");
static_assert(offsetof(GA_BaseballBat_HeavySwing_C_GetProjectileSpeed, ProjectileSpeed) == 0x000008, "Member 'GA_BaseballBat_HeavySwing_C_GetProjectileSpeed::ProjectileSpeed' has a wrong offset!");

// Function GA_BaseballBat_HeavySwing.GA_BaseballBat_HeavySwing_C.GetProjectileToSpawn
// 0x0020 (0x0020 - 0x0000)
struct GA_BaseballBat_HeavySwing_C_GetProjectileToSpawn final
{
public:
	class UClass*                                 ProjectileClass;                                   // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UEquipmentInstance*                     CallFunc_GetAssociatedEquipment_ReturnValue;       // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UEI_Throw_C*                            K2Node_DynamicCast_AsEI_Throw;                     // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_BaseballBat_HeavySwing_C_GetProjectileToSpawn) == 0x000008, "Wrong alignment on GA_BaseballBat_HeavySwing_C_GetProjectileToSpawn");
static_assert(sizeof(GA_BaseballBat_HeavySwing_C_GetProjectileToSpawn) == 0x000020, "Wrong size on GA_BaseballBat_HeavySwing_C_GetProjectileToSpawn");
static_assert(offsetof(GA_BaseballBat_HeavySwing_C_GetProjectileToSpawn, ProjectileClass) == 0x000000, "Member 'GA_BaseballBat_HeavySwing_C_GetProjectileToSpawn::ProjectileClass' has a wrong offset!");
static_assert(offsetof(GA_BaseballBat_HeavySwing_C_GetProjectileToSpawn, CallFunc_GetAssociatedEquipment_ReturnValue) == 0x000008, "Member 'GA_BaseballBat_HeavySwing_C_GetProjectileToSpawn::CallFunc_GetAssociatedEquipment_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_BaseballBat_HeavySwing_C_GetProjectileToSpawn, K2Node_DynamicCast_AsEI_Throw) == 0x000010, "Member 'GA_BaseballBat_HeavySwing_C_GetProjectileToSpawn::K2Node_DynamicCast_AsEI_Throw' has a wrong offset!");
static_assert(offsetof(GA_BaseballBat_HeavySwing_C_GetProjectileToSpawn, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'GA_BaseballBat_HeavySwing_C_GetProjectileToSpawn::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function GA_BaseballBat_HeavySwing.GA_BaseballBat_HeavySwing_C.K2_OnAbilityFailed
// 0x0020 (0x0020 - 0x0000)
struct GA_BaseballBat_HeavySwing_C_K2_OnAbilityFailed final
{
public:
	struct FGameplayTagContainer                  FailureReason;                                     // 0x0000(0x0020)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(GA_BaseballBat_HeavySwing_C_K2_OnAbilityFailed) == 0x000008, "Wrong alignment on GA_BaseballBat_HeavySwing_C_K2_OnAbilityFailed");
static_assert(sizeof(GA_BaseballBat_HeavySwing_C_K2_OnAbilityFailed) == 0x000020, "Wrong size on GA_BaseballBat_HeavySwing_C_K2_OnAbilityFailed");
static_assert(offsetof(GA_BaseballBat_HeavySwing_C_K2_OnAbilityFailed, FailureReason) == 0x000000, "Member 'GA_BaseballBat_HeavySwing_C_K2_OnAbilityFailed::FailureReason' has a wrong offset!");

// Function GA_BaseballBat_HeavySwing.GA_BaseballBat_HeavySwing_C.K2_OnEndAbility
// 0x0001 (0x0001 - 0x0000)
struct GA_BaseballBat_HeavySwing_C_K2_OnEndAbility final
{
public:
	bool                                          bWasCancelled;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_BaseballBat_HeavySwing_C_K2_OnEndAbility) == 0x000001, "Wrong alignment on GA_BaseballBat_HeavySwing_C_K2_OnEndAbility");
static_assert(sizeof(GA_BaseballBat_HeavySwing_C_K2_OnEndAbility) == 0x000001, "Wrong size on GA_BaseballBat_HeavySwing_C_K2_OnEndAbility");
static_assert(offsetof(GA_BaseballBat_HeavySwing_C_K2_OnEndAbility, bWasCancelled) == 0x000000, "Member 'GA_BaseballBat_HeavySwing_C_K2_OnEndAbility::bWasCancelled' has a wrong offset!");

// Function GA_BaseballBat_HeavySwing.GA_BaseballBat_HeavySwing_C.Server_ProjectileSpawn
// 0x0110 (0x0110 - 0x0000)
struct GA_BaseballBat_HeavySwing_C_Server_ProjectileSpawn final
{
public:
	class UClass*                                 ProjectileToSpawn;                                 // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8[0x8];                                        // 0x0008(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             SpawnTransform;                                    // 0x0010(0x0060)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESpawnActorCollisionHandlingMethod            SpawnCollisionHandlingOverride;                    // 0x0070(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_71[0x7];                                       // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        ProjectileSpeed;                                   // 0x0078(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        MinDamage;                                         // 0x0080(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        MaxDamage;                                         // 0x0088(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        MinDamageSpeed;                                    // 0x0090(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        MaxDamageSpeed;                                    // 0x0098(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FCombatParticipant                     CombatParticipants;                                // 0x00A0(0x0060)(BlueprintVisible, BlueprintReadOnly, Parm)
	class APawn*                                  Instigator;                                        // 0x0100(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        DamageMultiplerToStructures;                       // 0x0108(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_BaseballBat_HeavySwing_C_Server_ProjectileSpawn) == 0x000010, "Wrong alignment on GA_BaseballBat_HeavySwing_C_Server_ProjectileSpawn");
static_assert(sizeof(GA_BaseballBat_HeavySwing_C_Server_ProjectileSpawn) == 0x000110, "Wrong size on GA_BaseballBat_HeavySwing_C_Server_ProjectileSpawn");
static_assert(offsetof(GA_BaseballBat_HeavySwing_C_Server_ProjectileSpawn, ProjectileToSpawn) == 0x000000, "Member 'GA_BaseballBat_HeavySwing_C_Server_ProjectileSpawn::ProjectileToSpawn' has a wrong offset!");
static_assert(offsetof(GA_BaseballBat_HeavySwing_C_Server_ProjectileSpawn, SpawnTransform) == 0x000010, "Member 'GA_BaseballBat_HeavySwing_C_Server_ProjectileSpawn::SpawnTransform' has a wrong offset!");
static_assert(offsetof(GA_BaseballBat_HeavySwing_C_Server_ProjectileSpawn, SpawnCollisionHandlingOverride) == 0x000070, "Member 'GA_BaseballBat_HeavySwing_C_Server_ProjectileSpawn::SpawnCollisionHandlingOverride' has a wrong offset!");
static_assert(offsetof(GA_BaseballBat_HeavySwing_C_Server_ProjectileSpawn, ProjectileSpeed) == 0x000078, "Member 'GA_BaseballBat_HeavySwing_C_Server_ProjectileSpawn::ProjectileSpeed' has a wrong offset!");
static_assert(offsetof(GA_BaseballBat_HeavySwing_C_Server_ProjectileSpawn, MinDamage) == 0x000080, "Member 'GA_BaseballBat_HeavySwing_C_Server_ProjectileSpawn::MinDamage' has a wrong offset!");
static_assert(offsetof(GA_BaseballBat_HeavySwing_C_Server_ProjectileSpawn, MaxDamage) == 0x000088, "Member 'GA_BaseballBat_HeavySwing_C_Server_ProjectileSpawn::MaxDamage' has a wrong offset!");
static_assert(offsetof(GA_BaseballBat_HeavySwing_C_Server_ProjectileSpawn, MinDamageSpeed) == 0x000090, "Member 'GA_BaseballBat_HeavySwing_C_Server_ProjectileSpawn::MinDamageSpeed' has a wrong offset!");
static_assert(offsetof(GA_BaseballBat_HeavySwing_C_Server_ProjectileSpawn, MaxDamageSpeed) == 0x000098, "Member 'GA_BaseballBat_HeavySwing_C_Server_ProjectileSpawn::MaxDamageSpeed' has a wrong offset!");
static_assert(offsetof(GA_BaseballBat_HeavySwing_C_Server_ProjectileSpawn, CombatParticipants) == 0x0000A0, "Member 'GA_BaseballBat_HeavySwing_C_Server_ProjectileSpawn::CombatParticipants' has a wrong offset!");
static_assert(offsetof(GA_BaseballBat_HeavySwing_C_Server_ProjectileSpawn, Instigator) == 0x000100, "Member 'GA_BaseballBat_HeavySwing_C_Server_ProjectileSpawn::Instigator' has a wrong offset!");
static_assert(offsetof(GA_BaseballBat_HeavySwing_C_Server_ProjectileSpawn, DamageMultiplerToStructures) == 0x000108, "Member 'GA_BaseballBat_HeavySwing_C_Server_ProjectileSpawn::DamageMultiplerToStructures' has a wrong offset!");

}

