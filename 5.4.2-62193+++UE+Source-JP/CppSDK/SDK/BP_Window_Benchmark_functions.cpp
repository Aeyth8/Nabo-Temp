#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Window_Benchmark

#include "Basic.hpp"

#include "BP_Window_Benchmark_classes.hpp"
#include "BP_Window_Benchmark_parameters.hpp"


namespace SDK
{

// Function BP_Window_Benchmark.BP_Window_Benchmark_C.Audio Close
// (BlueprintCallable, BlueprintEvent)

void ABP_Window_Benchmark_C::Audio_Close()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Window_Benchmark_C", "Audio Close");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Window_Benchmark.BP_Window_Benchmark_C.Audio Open
// (BlueprintCallable, BlueprintEvent)

void ABP_Window_Benchmark_C::Audio_Open()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Window_Benchmark_C", "Audio Open");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Window_Benchmark.BP_Window_Benchmark_C.Benchmark_Window_Smash
// (BlueprintCallable, BlueprintEvent)

void ABP_Window_Benchmark_C::Benchmark_Window_Smash()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Window_Benchmark_C", "Benchmark_Window_Smash");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Window_Benchmark.BP_Window_Benchmark_C.Close Window
// (BlueprintCallable, BlueprintEvent)

void ABP_Window_Benchmark_C::Close_Window()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Window_Benchmark_C", "Close Window");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Window_Benchmark.BP_Window_Benchmark_C.Cosmetics State Repaired
// (BlueprintCallable, BlueprintEvent)

void ABP_Window_Benchmark_C::Cosmetics_State_Repaired()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Window_Benchmark_C", "Cosmetics State Repaired");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Window_Benchmark.BP_Window_Benchmark_C.Cosmetics State Sabotaged
// (BlueprintCallable, BlueprintEvent)

void ABP_Window_Benchmark_C::Cosmetics_State_Sabotaged()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Window_Benchmark_C", "Cosmetics State Sabotaged");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Window_Benchmark.BP_Window_Benchmark_C.DestroyGlassHits
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_Window_Benchmark_C::DestroyGlassHits()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Window_Benchmark_C", "DestroyGlassHits");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Window_Benchmark.BP_Window_Benchmark_C.DestroyShatteredGeometry
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_Window_Benchmark_C::DestroyShatteredGeometry()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Window_Benchmark_C", "DestroyShatteredGeometry");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Window_Benchmark.BP_Window_Benchmark_C.ExecuteUbergraph_BP_Window_Benchmark
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Window_Benchmark_C::ExecuteUbergraph_BP_Window_Benchmark(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Window_Benchmark_C", "ExecuteUbergraph_BP_Window_Benchmark");

	Params::BP_Window_Benchmark_C_ExecuteUbergraph_BP_Window_Benchmark Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Window_Benchmark.BP_Window_Benchmark_C.GetWidgetLocation
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          Location                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Window_Benchmark_C::GetWidgetLocation(struct FVector* Location)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Window_Benchmark_C", "GetWidgetLocation");

	Params::BP_Window_Benchmark_C_GetWidgetLocation Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Location != nullptr)
		*Location = std::move(Parms.Location);
}


// Function BP_Window_Benchmark.BP_Window_Benchmark_C.HideInteractionWidget
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Return                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Window_Benchmark_C::HideInteractionWidget(bool* Return)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Window_Benchmark_C", "HideInteractionWidget");

	Params::BP_Window_Benchmark_C_HideInteractionWidget Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Return != nullptr)
		*Return = Parms.Return;
}


// Function BP_Window_Benchmark.BP_Window_Benchmark_C.House Actor Impact Cosmetics
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          Location                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          HitImpulse                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// E_ImpactEffect                          ImpactEffect                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Window_Benchmark_C::House_Actor_Impact_Cosmetics(const struct FVector& Location, const struct FVector& HitImpulse, E_ImpactEffect ImpactEffect)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Window_Benchmark_C", "House Actor Impact Cosmetics");

	Params::BP_Window_Benchmark_C_House_Actor_Impact_Cosmetics Parms{};

	Parms.Location = std::move(Location);
	Parms.HitImpulse = std::move(HitImpulse);
	Parms.ImpactEffect = ImpactEffect;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Window_Benchmark.BP_Window_Benchmark_C.IsCharacterInFront
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_Window_Benchmark_C::IsCharacterInFront()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Window_Benchmark_C", "IsCharacterInFront");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Window_Benchmark.BP_Window_Benchmark_C.IsInteractable
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Interactable                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Window_Benchmark_C::IsInteractable(bool* Interactable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Window_Benchmark_C", "IsInteractable");

	Params::BP_Window_Benchmark_C_IsInteractable Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Interactable != nullptr)
		*Interactable = Parms.Interactable;
}


// Function BP_Window_Benchmark.BP_Window_Benchmark_C.IsInteractingActorATeamMember
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class AActor*                           Actor                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    Return                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Window_Benchmark_C::IsInteractingActorATeamMember(class AActor* Actor, bool* Return)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Window_Benchmark_C", "IsInteractingActorATeamMember");

	Params::BP_Window_Benchmark_C_IsInteractingActorATeamMember Parms{};

	Parms.Actor = Actor;

	UObject::ProcessEvent(Func, &Parms);

	if (Return != nullptr)
		*Return = Parms.Return;
}


// Function BP_Window_Benchmark.BP_Window_Benchmark_C.Multi_Audio Locked
// (Net, NetMulticast, BlueprintCallable, BlueprintEvent)

void ABP_Window_Benchmark_C::Multi_Audio_Locked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Window_Benchmark_C", "Multi_Audio Locked");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Window_Benchmark.BP_Window_Benchmark_C.OnRep_Opened
// (BlueprintCallable, BlueprintEvent)

void ABP_Window_Benchmark_C::OnRep_Opened()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Window_Benchmark_C", "OnRep_Opened");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Window_Benchmark.BP_Window_Benchmark_C.Open Window
// (BlueprintCallable, BlueprintEvent)

void ABP_Window_Benchmark_C::Open_Window()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Window_Benchmark_C", "Open Window");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Window_Benchmark.BP_Window_Benchmark_C.PostInteract
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           InteractingActor                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*              InteractionComponent                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void ABP_Window_Benchmark_C::PostInteract(class AActor* InteractingActor, class UPrimitiveComponent* InteractionComponent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Window_Benchmark_C", "PostInteract");

	Params::BP_Window_Benchmark_C_PostInteract Parms{};

	Parms.InteractingActor = InteractingActor;
	Parms.InteractionComponent = InteractionComponent;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Window_Benchmark.BP_Window_Benchmark_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ABP_Window_Benchmark_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Window_Benchmark_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Window_Benchmark.BP_Window_Benchmark_C.ReloadAfterHousesLoaded
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Return                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Window_Benchmark_C::ReloadAfterHousesLoaded(bool* Return)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Window_Benchmark_C", "ReloadAfterHousesLoaded");

	Params::BP_Window_Benchmark_C_ReloadAfterHousesLoaded Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Return != nullptr)
		*Return = Parms.Return;
}


// Function BP_Window_Benchmark.BP_Window_Benchmark_C.RemoveGlassDecal
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_Window_Benchmark_C::RemoveGlassDecal()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Window_Benchmark_C", "RemoveGlassDecal");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Window_Benchmark.BP_Window_Benchmark_C.Repair
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_Window_Benchmark_C::Repair()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Window_Benchmark_C", "Repair");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Window_Benchmark.BP_Window_Benchmark_C.Sabotage
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           SabotagingActor                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_Window_Benchmark_C::Sabotage(class AActor* SabotagingActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Window_Benchmark_C", "Sabotage");

	Params::BP_Window_Benchmark_C_Sabotage Parms{};

	Parms.SabotagingActor = SabotagingActor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Window_Benchmark.BP_Window_Benchmark_C.Spawn destroyed window
// (BlueprintCallable, BlueprintEvent)

void ABP_Window_Benchmark_C::Spawn_destroyed_window()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Window_Benchmark_C", "Spawn destroyed window");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Window_Benchmark.BP_Window_Benchmark_C.SpawnRandomGlassHit
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          Location                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Window_Benchmark_C::SpawnRandomGlassHit(const struct FVector& Location)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Window_Benchmark_C", "SpawnRandomGlassHit");

	Params::BP_Window_Benchmark_C_SpawnRandomGlassHit Parms{};

	Parms.Location = std::move(Location);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Window_Benchmark.BP_Window_Benchmark_C.UserConstructionScript
// (Event, Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_Window_Benchmark_C::UserConstructionScript()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Window_Benchmark_C", "UserConstructionScript");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Window_Benchmark.BP_Window_Benchmark_C.WindowImpactCosmetics
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          Location                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// E_ImpactEffect                          Selection                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          HitImpulse                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Window_Benchmark_C::WindowImpactCosmetics(const struct FVector& Location, E_ImpactEffect Selection, const struct FVector& HitImpulse)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Window_Benchmark_C", "WindowImpactCosmetics");

	Params::BP_Window_Benchmark_C_WindowImpactCosmetics Parms{};

	Parms.Location = std::move(Location);
	Parms.Selection = Selection;
	Parms.HitImpulse = std::move(HitImpulse);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Window_Benchmark.BP_Window_Benchmark_C.WindowRotation__FinishedFunc
// (BlueprintEvent)

void ABP_Window_Benchmark_C::WindowRotation__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Window_Benchmark_C", "WindowRotation__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Window_Benchmark.BP_Window_Benchmark_C.WindowRotation__UpdateFunc
// (BlueprintEvent)

void ABP_Window_Benchmark_C::WindowRotation__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Window_Benchmark_C", "WindowRotation__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Window_Benchmark.BP_Window_Benchmark_C.WindowSabotaged
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    TURR                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Window_Benchmark_C::WindowSabotaged(bool TURR)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Window_Benchmark_C", "WindowSabotaged");

	Params::BP_Window_Benchmark_C_WindowSabotaged Parms{};

	Parms.TURR = TURR;

	UObject::ProcessEvent(Func, &Parms);
}

}

