#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_JP_PP

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "E_Lighting_Presets_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_JP_PP.BP_JP_PP_C
// 0x0030 (0x02C0 - 0x0290)
class ABP_JP_PP_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0290(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UPostProcessComponent*                  PostProcess;                                       // 0x0298(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x02A0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         Blend_Radius;                                      // 0x02A8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_Lighting_Presets                            LightingPreset;                                    // 0x02AC(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2AD[0x3];                                      // 0x02AD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class APostProcessVolume*                     PostProcessActor;                                  // 0x02B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	class UDataTable*                             Presets;                                           // 0x02B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_JP_PP(int32 EntryPoint);
	void ReceiveBeginPlay();
	void UserConstructionScript();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_JP_PP_C">();
	}
	static class ABP_JP_PP_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_JP_PP_C>();
	}
};
static_assert(alignof(ABP_JP_PP_C) == 0x000008, "Wrong alignment on ABP_JP_PP_C");
static_assert(sizeof(ABP_JP_PP_C) == 0x0002C0, "Wrong size on ABP_JP_PP_C");
static_assert(offsetof(ABP_JP_PP_C, UberGraphFrame) == 0x000290, "Member 'ABP_JP_PP_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_JP_PP_C, PostProcess) == 0x000298, "Member 'ABP_JP_PP_C::PostProcess' has a wrong offset!");
static_assert(offsetof(ABP_JP_PP_C, DefaultSceneRoot) == 0x0002A0, "Member 'ABP_JP_PP_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ABP_JP_PP_C, Blend_Radius) == 0x0002A8, "Member 'ABP_JP_PP_C::Blend_Radius' has a wrong offset!");
static_assert(offsetof(ABP_JP_PP_C, LightingPreset) == 0x0002AC, "Member 'ABP_JP_PP_C::LightingPreset' has a wrong offset!");
static_assert(offsetof(ABP_JP_PP_C, PostProcessActor) == 0x0002B0, "Member 'ABP_JP_PP_C::PostProcessActor' has a wrong offset!");
static_assert(offsetof(ABP_JP_PP_C, Presets) == 0x0002B8, "Member 'ABP_JP_PP_C::Presets' has a wrong offset!");

}

