#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_HouseDecalBase

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "CoreUObject_structs.hpp"
#include "E_ImpactEffect_structs.hpp"
#include "E_MaterialTypes_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_HouseDecalBase.BP_HouseDecalBase_C
// 0x00A8 (0x0340 - 0x0298)
class ABP_HouseDecalBase_C : public ADecalActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0298(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UAC_POI_C*                              AC_POI;                                            // 0x02A0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UHighlightAC_C*                         HighlightAC;                                       // 0x02A8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        Audio;                                             // 0x02B0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UAbilitySystemComponentIW*              AbilitySystemComponentIW;                          // 0x02B8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UArrowComponent*                        Arrow;                                             // 0x02C0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          OverlapBox;                                        // 0x02C8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	double                                        Score_to_Add;                                      // 0x02D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                ParticleSpawnOffset;                               // 0x02D8(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        ParticleSpawnDuration;                             // 0x02F0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        DecalHealth;                                       // 0x02F8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          SubtractOnSpawn;                                   // 0x0300(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_301[0x7];                                      // 0x0301(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UNiagaraSystem*                         CleaningParticleSystem;                            // 0x0308(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             HitSound;                                          // 0x0310(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             RemovedSound;                                      // 0x0318(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  LastCauser;                                        // 0x0320(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class FText                                   Name_0;                                            // 0x0328(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	uint8                                         Team;                                              // 0x0338(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          PlayRemovedCosmetics;                              // 0x0339(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void AudioRemoved();
	void ExecuteUbergraph_BP_HouseDecalBase(int32 EntryPoint);
	void GetDurabilityCostWhenHit(double* Amount);
	void GetMaterialType(E_MaterialTypes* MaterialType);
	void Hit_Cosmetics(class APawn* Causer);
	void HitInterface(const struct FVector& Direction);
	void ImpactCosmetics(class APawn* ImpactCauser, const struct FVector& Location, const struct FVector& HitImpulse, E_ImpactEffect ImpactEffect, class FName BoneName, bool* ChangedAttributes);
	void MeleeHit(const class AActor*& AttackingActor);
	void OnDamaged(float Delta, class AActor* Causer, const struct FCombatParticipant& CombatParticipant, const struct FKillMethod& KillMethod, const struct FVector_NetQuantize& Location);
	void OnHealthChanged(float Health, float MaxHealth);
	void OnLostAllHealth();
	void ReceiveBeginPlay();
	void ReceiveDestroyed();
	void Removed_Cosmetics();
	void RemoveDecalHealth(double Amount);
	void Score(bool GainScore);
	void ShowScoreNotification(bool AddScore);
	void TakeDamage();
	void UserConstructionScript();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_HouseDecalBase_C">();
	}
	static class ABP_HouseDecalBase_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_HouseDecalBase_C>();
	}
};
static_assert(alignof(ABP_HouseDecalBase_C) == 0x000008, "Wrong alignment on ABP_HouseDecalBase_C");
static_assert(sizeof(ABP_HouseDecalBase_C) == 0x000340, "Wrong size on ABP_HouseDecalBase_C");
static_assert(offsetof(ABP_HouseDecalBase_C, UberGraphFrame) == 0x000298, "Member 'ABP_HouseDecalBase_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_HouseDecalBase_C, AC_POI) == 0x0002A0, "Member 'ABP_HouseDecalBase_C::AC_POI' has a wrong offset!");
static_assert(offsetof(ABP_HouseDecalBase_C, HighlightAC) == 0x0002A8, "Member 'ABP_HouseDecalBase_C::HighlightAC' has a wrong offset!");
static_assert(offsetof(ABP_HouseDecalBase_C, Audio) == 0x0002B0, "Member 'ABP_HouseDecalBase_C::Audio' has a wrong offset!");
static_assert(offsetof(ABP_HouseDecalBase_C, AbilitySystemComponentIW) == 0x0002B8, "Member 'ABP_HouseDecalBase_C::AbilitySystemComponentIW' has a wrong offset!");
static_assert(offsetof(ABP_HouseDecalBase_C, Arrow) == 0x0002C0, "Member 'ABP_HouseDecalBase_C::Arrow' has a wrong offset!");
static_assert(offsetof(ABP_HouseDecalBase_C, OverlapBox) == 0x0002C8, "Member 'ABP_HouseDecalBase_C::OverlapBox' has a wrong offset!");
static_assert(offsetof(ABP_HouseDecalBase_C, Score_to_Add) == 0x0002D0, "Member 'ABP_HouseDecalBase_C::Score_to_Add' has a wrong offset!");
static_assert(offsetof(ABP_HouseDecalBase_C, ParticleSpawnOffset) == 0x0002D8, "Member 'ABP_HouseDecalBase_C::ParticleSpawnOffset' has a wrong offset!");
static_assert(offsetof(ABP_HouseDecalBase_C, ParticleSpawnDuration) == 0x0002F0, "Member 'ABP_HouseDecalBase_C::ParticleSpawnDuration' has a wrong offset!");
static_assert(offsetof(ABP_HouseDecalBase_C, DecalHealth) == 0x0002F8, "Member 'ABP_HouseDecalBase_C::DecalHealth' has a wrong offset!");
static_assert(offsetof(ABP_HouseDecalBase_C, SubtractOnSpawn) == 0x000300, "Member 'ABP_HouseDecalBase_C::SubtractOnSpawn' has a wrong offset!");
static_assert(offsetof(ABP_HouseDecalBase_C, CleaningParticleSystem) == 0x000308, "Member 'ABP_HouseDecalBase_C::CleaningParticleSystem' has a wrong offset!");
static_assert(offsetof(ABP_HouseDecalBase_C, HitSound) == 0x000310, "Member 'ABP_HouseDecalBase_C::HitSound' has a wrong offset!");
static_assert(offsetof(ABP_HouseDecalBase_C, RemovedSound) == 0x000318, "Member 'ABP_HouseDecalBase_C::RemovedSound' has a wrong offset!");
static_assert(offsetof(ABP_HouseDecalBase_C, LastCauser) == 0x000320, "Member 'ABP_HouseDecalBase_C::LastCauser' has a wrong offset!");
static_assert(offsetof(ABP_HouseDecalBase_C, Name_0) == 0x000328, "Member 'ABP_HouseDecalBase_C::Name_0' has a wrong offset!");
static_assert(offsetof(ABP_HouseDecalBase_C, Team) == 0x000338, "Member 'ABP_HouseDecalBase_C::Team' has a wrong offset!");
static_assert(offsetof(ABP_HouseDecalBase_C, PlayRemovedCosmetics) == 0x000339, "Member 'ABP_HouseDecalBase_C::PlayRemovedCosmetics' has a wrong offset!");

}

