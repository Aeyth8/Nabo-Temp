#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: IWAnalytics

#include "Basic.hpp"


namespace SDK
{

// ScriptStruct IWAnalytics.IWAnalyticsBlacklistOriginEntry
// 0x0020 (0x0020 - 0x0000)
struct FIWAnalyticsBlacklistOriginEntry final
{
public:
	class FString                                 Origin;                                            // 0x0000(0x0010)(BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class FString>                         EventNames;                                        // 0x0010(0x0010)(BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(FIWAnalyticsBlacklistOriginEntry) == 0x000008, "Wrong alignment on FIWAnalyticsBlacklistOriginEntry");
static_assert(sizeof(FIWAnalyticsBlacklistOriginEntry) == 0x000020, "Wrong size on FIWAnalyticsBlacklistOriginEntry");
static_assert(offsetof(FIWAnalyticsBlacklistOriginEntry, Origin) == 0x000000, "Member 'FIWAnalyticsBlacklistOriginEntry::Origin' has a wrong offset!");
static_assert(offsetof(FIWAnalyticsBlacklistOriginEntry, EventNames) == 0x000010, "Member 'FIWAnalyticsBlacklistOriginEntry::EventNames' has a wrong offset!");

// ScriptStruct IWAnalytics.IWAnalyticsBlacklistConfiguration
// 0x0018 (0x0018 - 0x0000)
struct FIWAnalyticsBlacklistConfiguration final
{
public:
	bool                                          Enabled;                                           // 0x0000(0x0001)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FIWAnalyticsBlacklistOriginEntry> Origins;                                           // 0x0008(0x0010)(BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(FIWAnalyticsBlacklistConfiguration) == 0x000008, "Wrong alignment on FIWAnalyticsBlacklistConfiguration");
static_assert(sizeof(FIWAnalyticsBlacklistConfiguration) == 0x000018, "Wrong size on FIWAnalyticsBlacklistConfiguration");
static_assert(offsetof(FIWAnalyticsBlacklistConfiguration, Enabled) == 0x000000, "Member 'FIWAnalyticsBlacklistConfiguration::Enabled' has a wrong offset!");
static_assert(offsetof(FIWAnalyticsBlacklistConfiguration, Origins) == 0x000008, "Member 'FIWAnalyticsBlacklistConfiguration::Origins' has a wrong offset!");

// ScriptStruct IWAnalytics.IWAnalyticsConfiguration
// 0x0020 (0x0020 - 0x0000)
struct FIWAnalyticsConfiguration final
{
public:
	bool                                          Enabled;                                           // 0x0000(0x0001)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FIWAnalyticsBlacklistConfiguration     Blacklist;                                         // 0x0008(0x0018)(BlueprintVisible, NativeAccessSpecifierPublic)
};
static_assert(alignof(FIWAnalyticsConfiguration) == 0x000008, "Wrong alignment on FIWAnalyticsConfiguration");
static_assert(sizeof(FIWAnalyticsConfiguration) == 0x000020, "Wrong size on FIWAnalyticsConfiguration");
static_assert(offsetof(FIWAnalyticsConfiguration, Enabled) == 0x000000, "Member 'FIWAnalyticsConfiguration::Enabled' has a wrong offset!");
static_assert(offsetof(FIWAnalyticsConfiguration, Blacklist) == 0x000008, "Member 'FIWAnalyticsConfiguration::Blacklist' has a wrong offset!");

}

