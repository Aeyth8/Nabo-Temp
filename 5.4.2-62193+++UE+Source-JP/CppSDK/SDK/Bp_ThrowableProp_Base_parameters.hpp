#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Bp_ThrowableProp_Base

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "GameplayAbilities_structs.hpp"
#include "PhysicsCore_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "E_MaterialTypes_structs.hpp"
#include "E_ImpactEffect_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function Bp_ThrowableProp_Base.Bp_ThrowableProp_Base_C.AddImpulseOwner
// 0x0018 (0x0018 - 0x0000)
struct Bp_ThrowableProp_Base_C_AddImpulseOwner final
{
public:
	struct FVector                                Impulse;                                           // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Bp_ThrowableProp_Base_C_AddImpulseOwner) == 0x000008, "Wrong alignment on Bp_ThrowableProp_Base_C_AddImpulseOwner");
static_assert(sizeof(Bp_ThrowableProp_Base_C_AddImpulseOwner) == 0x000018, "Wrong size on Bp_ThrowableProp_Base_C_AddImpulseOwner");
static_assert(offsetof(Bp_ThrowableProp_Base_C_AddImpulseOwner, Impulse) == 0x000000, "Member 'Bp_ThrowableProp_Base_C_AddImpulseOwner::Impulse' has a wrong offset!");

// Function Bp_ThrowableProp_Base.Bp_ThrowableProp_Base_C.AddImpulseServer
// 0x0020 (0x0020 - 0x0000)
struct Bp_ThrowableProp_Base_C_AddImpulseServer final
{
public:
	struct FVector                                Impulse;                                           // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Bp_ThrowableProp_Base_C_AddImpulseServer) == 0x000008, "Wrong alignment on Bp_ThrowableProp_Base_C_AddImpulseServer");
static_assert(sizeof(Bp_ThrowableProp_Base_C_AddImpulseServer) == 0x000020, "Wrong size on Bp_ThrowableProp_Base_C_AddImpulseServer");
static_assert(offsetof(Bp_ThrowableProp_Base_C_AddImpulseServer, Impulse) == 0x000000, "Member 'Bp_ThrowableProp_Base_C_AddImpulseServer::Impulse' has a wrong offset!");
static_assert(offsetof(Bp_ThrowableProp_Base_C_AddImpulseServer, CallFunc_HasAuthority_ReturnValue) == 0x000018, "Member 'Bp_ThrowableProp_Base_C_AddImpulseServer::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");

// Function Bp_ThrowableProp_Base.Bp_ThrowableProp_Base_C.CancelInteraction
// 0x0008 (0x0008 - 0x0000)
struct Bp_ThrowableProp_Base_C_CancelInteraction final
{
public:
	class UPrimitiveComponent*                    InteractionComponent;                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Bp_ThrowableProp_Base_C_CancelInteraction) == 0x000008, "Wrong alignment on Bp_ThrowableProp_Base_C_CancelInteraction");
static_assert(sizeof(Bp_ThrowableProp_Base_C_CancelInteraction) == 0x000008, "Wrong size on Bp_ThrowableProp_Base_C_CancelInteraction");
static_assert(offsetof(Bp_ThrowableProp_Base_C_CancelInteraction, InteractionComponent) == 0x000000, "Member 'Bp_ThrowableProp_Base_C_CancelInteraction::InteractionComponent' has a wrong offset!");

// Function Bp_ThrowableProp_Base.Bp_ThrowableProp_Base_C.ExecuteUbergraph_Bp_ThrowableProp_Base
// 0x0580 (0x0580 - 0x0000)
struct Bp_ThrowableProp_Base_C_ExecuteUbergraph_Bp_ThrowableProp_Base final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetDisplayName_ReturnValue;               // 0x0008(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable;                 // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable_1;                     // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable_1;               // 0x001B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(bool IsEnabled)>               K2Node_CreateDelegate_OutputDelegate;              // 0x0020(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable_2;               // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue_1;               // 0x0032(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_33[0x5];                                       // 0x0033(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    K2Node_Event_InteractionComponent_5;               // 0x0038(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_Event_InteractionComponent_4;               // 0x0040(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_Event_InteractingActor_5;                   // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_Event_InteractionComponent_3;               // 0x0050(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_Event_InteractionComponent_2;               // 0x0058(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_Event_InteractingActor_4;                   // 0x0060(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_Event_InteractionComponent_1;               // 0x0068(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_Event_InteractingActor_3;                   // 0x0070(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	const class AActor*                           K2Node_Event_AttackingActor;                       // 0x0078(0x0008)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Event_Direction;                            // 0x0080(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_Event_InteractingActor_2;                   // 0x0098(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_Event_InteractingActor_1;                   // 0x00A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_Interactable;                         // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A9[0x7];                                       // 0x00A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_Event_Focusing_Actor;                       // 0x00B0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable_2;                     // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable_3;               // 0x00B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_BA[0x6];                                       // 0x00BA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharacter*                             K2Node_CustomEvent_ReleasingCharacter;             // 0x00C0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_ResidentCharacter_C*                K2Node_DynamicCast_AsBP_Resident_Character;        // 0x00C8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D1[0x7];                                       // 0x00D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserWidget*                            CallFunc_GetUserWidgetObject_ReturnValue;          // 0x00D8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class ACharacter*                             K2Node_CustomEvent_GrippingCharacter;              // 0x00E0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UGrabThrowableWI_C*                     K2Node_DynamicCast_AsGrab_Throwable_WI;            // 0x00E8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x00F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F2[0x6];                                       // 0x00F2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    K2Node_Event_MyComp;                               // 0x00F8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_Event_Other;                                // 0x0100(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_Event_OtherComp;                            // 0x0108(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bSelfMoved;                           // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_111[0x7];                                      // 0x0111(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                K2Node_Event_HitLocation;                          // 0x0118(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Event_HitNormal;                            // 0x0130(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Event_NormalImpulse;                        // 0x0148(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             K2Node_Event_Hit;                                  // 0x0160(0x00F8)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0258(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_259[0x7];                                      // 0x0259(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x0260(0x0060)(ConstParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_Show;                           // 0x02C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C1[0xF];                                      // 0x02C1(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_ComposeTransforms_ReturnValue;            // 0x02D0(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0330(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x0348(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x0360(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0378(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable_4;               // 0x0390(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable_5;               // 0x0391(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_392[0x6];                                      // 0x0392(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0398(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x03B0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetActorLocation_SweepHitResult;       // 0x03C8(0x00F8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_SetActorLocation_ReturnValue;          // 0x04C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C1[0x7];                                      // 0x04C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                K2Node_CustomEvent_Impulse;                        // 0x04C8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_Event_InteractingActor;                     // 0x04E0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_Event_InteractionComponent;                 // 0x04E8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class ABP_ResidentCharacter_C*                K2Node_DynamicCast_AsBP_Resident_Character_1;      // 0x04F0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x04F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4F9[0x7];                                      // 0x04F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                K2Node_CustomEvent_NewVelocity;                    // 0x0500(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IGameplayTagAssetInterface> CallFunc_HasMatchingGameplayTag_self_CastInput;    // 0x0518(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasMatchingGameplayTag_ReturnValue;       // 0x0528(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetInstanceFromSlot_IsInstanceValid;      // 0x0529(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_52A[0x6];                                      // 0x052A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UEquipmentInstance*                     CallFunc_GetInstanceFromSlot_ReturnValue;          // 0x0530(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_GetInstigator_ReturnValue;                // 0x0538(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UItemInstance*                          K2Node_DynamicCast_AsItem_Instance;                // 0x0540(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0548(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable_3;                     // 0x0549(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_54A[0x6];                                      // 0x054A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameUserSettings*                      CallFunc_GetGameUserSettings_ReturnValue;          // 0x0550(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_IsEnabled;                      // 0x0558(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_559[0x7];                                      // 0x0559(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ULyraSettingsLocal*                     K2Node_DynamicCast_AsLyra_Settings_Local;          // 0x0560(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x0568(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_SoftObjectReference_ReturnValue; // 0x0569(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_56A[0x6];                                      // 0x056A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UItemInstance*                          CallFunc_AddItemDefinition_ReturnValue;            // 0x0570(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidSoftObjectReference_ReturnValue;   // 0x0578(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable_4;                     // 0x0579(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable_5;                     // 0x057A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Bp_ThrowableProp_Base_C_ExecuteUbergraph_Bp_ThrowableProp_Base) == 0x000010, "Wrong alignment on Bp_ThrowableProp_Base_C_ExecuteUbergraph_Bp_ThrowableProp_Base");
static_assert(sizeof(Bp_ThrowableProp_Base_C_ExecuteUbergraph_Bp_ThrowableProp_Base) == 0x000580, "Wrong size on Bp_ThrowableProp_Base_C_ExecuteUbergraph_Bp_ThrowableProp_Base");
static_assert(offsetof(Bp_ThrowableProp_Base_C_ExecuteUbergraph_Bp_ThrowableProp_Base, EntryPoint) == 0x000000, "Member 'Bp_ThrowableProp_Base_C_ExecuteUbergraph_Bp_ThrowableProp_Base::EntryPoint' has a wrong offset!");
static_assert(offsetof(Bp_ThrowableProp_Base_C_ExecuteUbergraph_Bp_ThrowableProp_Base, CallFunc_GetDisplayName_ReturnValue) == 0x000008, "Member 'Bp_ThrowableProp_Base_C_ExecuteUbergraph_Bp_ThrowableProp_Base::CallFunc_GetDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(Bp_ThrowableProp_Base_C_ExecuteUbergraph_Bp_ThrowableProp_Base, Temp_bool_IsClosed_Variable) == 0x000018, "Member 'Bp_ThrowableProp_Base_C_ExecuteUbergraph_Bp_ThrowableProp_Base::Temp_bool_IsClosed_Variable' has a wrong offset!");
static_assert(offsetof(Bp_ThrowableProp_Base_C_ExecuteUbergraph_Bp_ThrowableProp_Base, Temp_bool_Has_Been_Initd_Variable) == 0x000019, "Member 'Bp_ThrowableProp_Base_C_ExecuteUbergraph_Bp_ThrowableProp_Base::Temp_bool_Has_Been_Initd_Variable' has a wrong offset!");
static_assert(offsetof(Bp_ThrowableProp_Base_C_ExecuteUbergraph_Bp_ThrowableProp_Base, Temp_bool_IsClosed_Variable_1) == 0x00001A, "Member 'Bp_ThrowableProp_Base_C_ExecuteUbergraph_Bp_ThrowableProp_Base::Temp_bool_IsClosed_Variable_1' has a wrong offset!");
static_assert(offsetof(Bp_ThrowableProp_Base_C_ExecuteUbergraph_Bp_ThrowableProp_Base, Temp_bool_Has_Been_Initd_Variable_1) == 0x00001B, "Member 'Bp_ThrowableProp_Base_C_ExecuteUbergraph_Bp_ThrowableProp_Base::Temp_bool_Has_Been_Initd_Variable_1' has a wrong offset!");
static_assert(offsetof(Bp_ThrowableProp_Base_C_ExecuteUbergraph_Bp_ThrowableProp_Base, CallFunc_HasAuthority_ReturnValue) == 0x00001C, "Member 'Bp_ThrowableProp_Base_C_ExecuteUbergraph_Bp_ThrowableProp_Base::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(Bp_ThrowableProp_Base_C_ExecuteUbergraph_Bp_ThrowableProp_Base, K2Node_CreateDelegate_OutputDelegate) == 0x000020, "Member 'Bp_ThrowableProp_Base_C_ExecuteUbergraph_Bp_ThrowableProp_Base::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(Bp_ThrowableProp_Base_C_ExecuteUbergraph_Bp_ThrowableProp_Base, CallFunc_IsDedicatedServer_ReturnValue) == 0x000030, "Member 'Bp_ThrowableProp_Base_C_ExecuteUbergraph_Bp_ThrowableProp_Base::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(Bp_ThrowableProp_Base_C_ExecuteUbergraph_Bp_ThrowableProp_Base, Temp_bool_Has_Been_Initd_Variable_2) == 0x000031, "Member 'Bp_ThrowableProp_Base_C_ExecuteUbergraph_Bp_ThrowableProp_Base::Temp_bool_Has_Been_Initd_Variable_2' has a wrong offset!");
static_assert(offsetof(Bp_ThrowableProp_Base_C_ExecuteUbergraph_Bp_ThrowableProp_Base, CallFunc_HasAuthority_ReturnValue_1) == 0x000032, "Member 'Bp_ThrowableProp_Base_C_ExecuteUbergraph_Bp_ThrowableProp_Base::CallFunc_HasAuthority_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Bp_ThrowableProp_Base_C_ExecuteUbergraph_Bp_ThrowableProp_Base, K2Node_Event_InteractionComponent_5) == 0x000038, "Member 'Bp_ThrowableProp_Base_C_ExecuteUbergraph_Bp_ThrowableProp_Base::K2Node_Event_InteractionComponent_5' has a wrong offset!");
static_assert(offsetof(Bp_ThrowableProp_Base_C_ExecuteUbergraph_Bp_ThrowableProp_Base, K2Node_Event_InteractionComponent_4) == 0x000040, "Member 'Bp_ThrowableProp_Base_C_ExecuteUbergraph_Bp_ThrowableProp_Base::K2Node_Event_InteractionComponent_4' has a wrong offset!");
static_assert(offsetof(Bp_ThrowableProp_Base_C_ExecuteUbergraph_Bp_ThrowableProp_Base, K2Node_Event_InteractingActor_5) == 0x000048, "Member 'Bp_ThrowableProp_Base_C_ExecuteUbergraph_Bp_ThrowableProp_Base::K2Node_Event_InteractingActor_5' has a wrong offset!");
static_assert(offsetof(Bp_ThrowableProp_Base_C_ExecuteUbergraph_Bp_ThrowableProp_Base, K2Node_Event_InteractionComponent_3) == 0x000050, "Member 'Bp_ThrowableProp_Base_C_ExecuteUbergraph_Bp_ThrowableProp_Base::K2Node_Event_InteractionComponent_3' has a wrong offset!");
static_assert(offsetof(Bp_ThrowableProp_Base_C_ExecuteUbergraph_Bp_ThrowableProp_Base, K2Node_Event_InteractionComponent_2) == 0x000058, "Member 'Bp_ThrowableProp_Base_C_ExecuteUbergraph_Bp_ThrowableProp_Base::K2Node_Event_InteractionComponent_2' has a wrong offset!");
static_assert(offsetof(Bp_ThrowableProp_Base_C_ExecuteUbergraph_Bp_ThrowableProp_Base, K2Node_Event_InteractingActor_4) == 0x000060, "Member 'Bp_ThrowableProp_Base_C_ExecuteUbergraph_Bp_ThrowableProp_Base::K2Node_Event_InteractingActor_4' has a wrong offset!");
static_assert(offsetof(Bp_ThrowableProp_Base_C_ExecuteUbergraph_Bp_ThrowableProp_Base, K2Node_Event_InteractionComponent_1) == 0x000068, "Member 'Bp_ThrowableProp_Base_C_ExecuteUbergraph_Bp_ThrowableProp_Base::K2Node_Event_InteractionComponent_1' has a wrong offset!");
static_assert(offsetof(Bp_ThrowableProp_Base_C_ExecuteUbergraph_Bp_ThrowableProp_Base, K2Node_Event_InteractingActor_3) == 0x000070, "Member 'Bp_ThrowableProp_Base_C_ExecuteUbergraph_Bp_ThrowableProp_Base::K2Node_Event_InteractingActor_3' has a wrong offset!");
static_assert(offsetof(Bp_ThrowableProp_Base_C_ExecuteUbergraph_Bp_ThrowableProp_Base, K2Node_Event_AttackingActor) == 0x000078, "Member 'Bp_ThrowableProp_Base_C_ExecuteUbergraph_Bp_ThrowableProp_Base::K2Node_Event_AttackingActor' has a wrong offset!");
static_assert(offsetof(Bp_ThrowableProp_Base_C_ExecuteUbergraph_Bp_ThrowableProp_Base, K2Node_Event_Direction) == 0x000080, "Member 'Bp_ThrowableProp_Base_C_ExecuteUbergraph_Bp_ThrowableProp_Base::K2Node_Event_Direction' has a wrong offset!");
static_assert(offsetof(Bp_ThrowableProp_Base_C_ExecuteUbergraph_Bp_ThrowableProp_Base, K2Node_Event_InteractingActor_2) == 0x000098, "Member 'Bp_ThrowableProp_Base_C_ExecuteUbergraph_Bp_ThrowableProp_Base::K2Node_Event_InteractingActor_2' has a wrong offset!");
static_assert(offsetof(Bp_ThrowableProp_Base_C_ExecuteUbergraph_Bp_ThrowableProp_Base, K2Node_Event_InteractingActor_1) == 0x0000A0, "Member 'Bp_ThrowableProp_Base_C_ExecuteUbergraph_Bp_ThrowableProp_Base::K2Node_Event_InteractingActor_1' has a wrong offset!");
static_assert(offsetof(Bp_ThrowableProp_Base_C_ExecuteUbergraph_Bp_ThrowableProp_Base, K2Node_Event_Interactable) == 0x0000A8, "Member 'Bp_ThrowableProp_Base_C_ExecuteUbergraph_Bp_ThrowableProp_Base::K2Node_Event_Interactable' has a wrong offset!");
static_assert(offsetof(Bp_ThrowableProp_Base_C_ExecuteUbergraph_Bp_ThrowableProp_Base, K2Node_Event_Focusing_Actor) == 0x0000B0, "Member 'Bp_ThrowableProp_Base_C_ExecuteUbergraph_Bp_ThrowableProp_Base::K2Node_Event_Focusing_Actor' has a wrong offset!");
static_assert(offsetof(Bp_ThrowableProp_Base_C_ExecuteUbergraph_Bp_ThrowableProp_Base, Temp_bool_IsClosed_Variable_2) == 0x0000B8, "Member 'Bp_ThrowableProp_Base_C_ExecuteUbergraph_Bp_ThrowableProp_Base::Temp_bool_IsClosed_Variable_2' has a wrong offset!");
static_assert(offsetof(Bp_ThrowableProp_Base_C_ExecuteUbergraph_Bp_ThrowableProp_Base, Temp_bool_Has_Been_Initd_Variable_3) == 0x0000B9, "Member 'Bp_ThrowableProp_Base_C_ExecuteUbergraph_Bp_ThrowableProp_Base::Temp_bool_Has_Been_Initd_Variable_3' has a wrong offset!");
static_assert(offsetof(Bp_ThrowableProp_Base_C_ExecuteUbergraph_Bp_ThrowableProp_Base, K2Node_CustomEvent_ReleasingCharacter) == 0x0000C0, "Member 'Bp_ThrowableProp_Base_C_ExecuteUbergraph_Bp_ThrowableProp_Base::K2Node_CustomEvent_ReleasingCharacter' has a wrong offset!");
static_assert(offsetof(Bp_ThrowableProp_Base_C_ExecuteUbergraph_Bp_ThrowableProp_Base, K2Node_DynamicCast_AsBP_Resident_Character) == 0x0000C8, "Member 'Bp_ThrowableProp_Base_C_ExecuteUbergraph_Bp_ThrowableProp_Base::K2Node_DynamicCast_AsBP_Resident_Character' has a wrong offset!");
static_assert(offsetof(Bp_ThrowableProp_Base_C_ExecuteUbergraph_Bp_ThrowableProp_Base, K2Node_DynamicCast_bSuccess) == 0x0000D0, "Member 'Bp_ThrowableProp_Base_C_ExecuteUbergraph_Bp_ThrowableProp_Base::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Bp_ThrowableProp_Base_C_ExecuteUbergraph_Bp_ThrowableProp_Base, CallFunc_GetUserWidgetObject_ReturnValue) == 0x0000D8, "Member 'Bp_ThrowableProp_Base_C_ExecuteUbergraph_Bp_ThrowableProp_Base::CallFunc_GetUserWidgetObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(Bp_ThrowableProp_Base_C_ExecuteUbergraph_Bp_ThrowableProp_Base, K2Node_CustomEvent_GrippingCharacter) == 0x0000E0, "Member 'Bp_ThrowableProp_Base_C_ExecuteUbergraph_Bp_ThrowableProp_Base::K2Node_CustomEvent_GrippingCharacter' has a wrong offset!");
static_assert(offsetof(Bp_ThrowableProp_Base_C_ExecuteUbergraph_Bp_ThrowableProp_Base, K2Node_DynamicCast_AsGrab_Throwable_WI) == 0x0000E8, "Member 'Bp_ThrowableProp_Base_C_ExecuteUbergraph_Bp_ThrowableProp_Base::K2Node_DynamicCast_AsGrab_Throwable_WI' has a wrong offset!");
static_assert(offsetof(Bp_ThrowableProp_Base_C_ExecuteUbergraph_Bp_ThrowableProp_Base, K2Node_DynamicCast_bSuccess_1) == 0x0000F0, "Member 'Bp_ThrowableProp_Base_C_ExecuteUbergraph_Bp_ThrowableProp_Base::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(Bp_ThrowableProp_Base_C_ExecuteUbergraph_Bp_ThrowableProp_Base, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x0000F1, "Member 'Bp_ThrowableProp_Base_C_ExecuteUbergraph_Bp_ThrowableProp_Base::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(Bp_ThrowableProp_Base_C_ExecuteUbergraph_Bp_ThrowableProp_Base, K2Node_Event_MyComp) == 0x0000F8, "Member 'Bp_ThrowableProp_Base_C_ExecuteUbergraph_Bp_ThrowableProp_Base::K2Node_Event_MyComp' has a wrong offset!");
static_assert(offsetof(Bp_ThrowableProp_Base_C_ExecuteUbergraph_Bp_ThrowableProp_Base, K2Node_Event_Other) == 0x000100, "Member 'Bp_ThrowableProp_Base_C_ExecuteUbergraph_Bp_ThrowableProp_Base::K2Node_Event_Other' has a wrong offset!");
static_assert(offsetof(Bp_ThrowableProp_Base_C_ExecuteUbergraph_Bp_ThrowableProp_Base, K2Node_Event_OtherComp) == 0x000108, "Member 'Bp_ThrowableProp_Base_C_ExecuteUbergraph_Bp_ThrowableProp_Base::K2Node_Event_OtherComp' has a wrong offset!");
static_assert(offsetof(Bp_ThrowableProp_Base_C_ExecuteUbergraph_Bp_ThrowableProp_Base, K2Node_Event_bSelfMoved) == 0x000110, "Member 'Bp_ThrowableProp_Base_C_ExecuteUbergraph_Bp_ThrowableProp_Base::K2Node_Event_bSelfMoved' has a wrong offset!");
static_assert(offsetof(Bp_ThrowableProp_Base_C_ExecuteUbergraph_Bp_ThrowableProp_Base, K2Node_Event_HitLocation) == 0x000118, "Member 'Bp_ThrowableProp_Base_C_ExecuteUbergraph_Bp_ThrowableProp_Base::K2Node_Event_HitLocation' has a wrong offset!");
static_assert(offsetof(Bp_ThrowableProp_Base_C_ExecuteUbergraph_Bp_ThrowableProp_Base, K2Node_Event_HitNormal) == 0x000130, "Member 'Bp_ThrowableProp_Base_C_ExecuteUbergraph_Bp_ThrowableProp_Base::K2Node_Event_HitNormal' has a wrong offset!");
static_assert(offsetof(Bp_ThrowableProp_Base_C_ExecuteUbergraph_Bp_ThrowableProp_Base, K2Node_Event_NormalImpulse) == 0x000148, "Member 'Bp_ThrowableProp_Base_C_ExecuteUbergraph_Bp_ThrowableProp_Base::K2Node_Event_NormalImpulse' has a wrong offset!");
static_assert(offsetof(Bp_ThrowableProp_Base_C_ExecuteUbergraph_Bp_ThrowableProp_Base, K2Node_Event_Hit) == 0x000160, "Member 'Bp_ThrowableProp_Base_C_ExecuteUbergraph_Bp_ThrowableProp_Base::K2Node_Event_Hit' has a wrong offset!");
static_assert(offsetof(Bp_ThrowableProp_Base_C_ExecuteUbergraph_Bp_ThrowableProp_Base, CallFunc_IsValid_ReturnValue) == 0x000258, "Member 'Bp_ThrowableProp_Base_C_ExecuteUbergraph_Bp_ThrowableProp_Base::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Bp_ThrowableProp_Base_C_ExecuteUbergraph_Bp_ThrowableProp_Base, CallFunc_GetTransform_ReturnValue) == 0x000260, "Member 'Bp_ThrowableProp_Base_C_ExecuteUbergraph_Bp_ThrowableProp_Base::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(Bp_ThrowableProp_Base_C_ExecuteUbergraph_Bp_ThrowableProp_Base, K2Node_CustomEvent_Show) == 0x0002C0, "Member 'Bp_ThrowableProp_Base_C_ExecuteUbergraph_Bp_ThrowableProp_Base::K2Node_CustomEvent_Show' has a wrong offset!");
static_assert(offsetof(Bp_ThrowableProp_Base_C_ExecuteUbergraph_Bp_ThrowableProp_Base, CallFunc_ComposeTransforms_ReturnValue) == 0x0002D0, "Member 'Bp_ThrowableProp_Base_C_ExecuteUbergraph_Bp_ThrowableProp_Base::CallFunc_ComposeTransforms_ReturnValue' has a wrong offset!");
static_assert(offsetof(Bp_ThrowableProp_Base_C_ExecuteUbergraph_Bp_ThrowableProp_Base, CallFunc_BreakTransform_Location) == 0x000330, "Member 'Bp_ThrowableProp_Base_C_ExecuteUbergraph_Bp_ThrowableProp_Base::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(Bp_ThrowableProp_Base_C_ExecuteUbergraph_Bp_ThrowableProp_Base, CallFunc_BreakTransform_Rotation) == 0x000348, "Member 'Bp_ThrowableProp_Base_C_ExecuteUbergraph_Bp_ThrowableProp_Base::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(Bp_ThrowableProp_Base_C_ExecuteUbergraph_Bp_ThrowableProp_Base, CallFunc_BreakTransform_Scale) == 0x000360, "Member 'Bp_ThrowableProp_Base_C_ExecuteUbergraph_Bp_ThrowableProp_Base::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(Bp_ThrowableProp_Base_C_ExecuteUbergraph_Bp_ThrowableProp_Base, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000378, "Member 'Bp_ThrowableProp_Base_C_ExecuteUbergraph_Bp_ThrowableProp_Base::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Bp_ThrowableProp_Base_C_ExecuteUbergraph_Bp_ThrowableProp_Base, Temp_bool_Has_Been_Initd_Variable_4) == 0x000390, "Member 'Bp_ThrowableProp_Base_C_ExecuteUbergraph_Bp_ThrowableProp_Base::Temp_bool_Has_Been_Initd_Variable_4' has a wrong offset!");
static_assert(offsetof(Bp_ThrowableProp_Base_C_ExecuteUbergraph_Bp_ThrowableProp_Base, Temp_bool_Has_Been_Initd_Variable_5) == 0x000391, "Member 'Bp_ThrowableProp_Base_C_ExecuteUbergraph_Bp_ThrowableProp_Base::Temp_bool_Has_Been_Initd_Variable_5' has a wrong offset!");
static_assert(offsetof(Bp_ThrowableProp_Base_C_ExecuteUbergraph_Bp_ThrowableProp_Base, CallFunc_MakeVector_ReturnValue) == 0x000398, "Member 'Bp_ThrowableProp_Base_C_ExecuteUbergraph_Bp_ThrowableProp_Base::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Bp_ThrowableProp_Base_C_ExecuteUbergraph_Bp_ThrowableProp_Base, CallFunc_Add_VectorVector_ReturnValue) == 0x0003B0, "Member 'Bp_ThrowableProp_Base_C_ExecuteUbergraph_Bp_ThrowableProp_Base::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Bp_ThrowableProp_Base_C_ExecuteUbergraph_Bp_ThrowableProp_Base, CallFunc_K2_SetActorLocation_SweepHitResult) == 0x0003C8, "Member 'Bp_ThrowableProp_Base_C_ExecuteUbergraph_Bp_ThrowableProp_Base::CallFunc_K2_SetActorLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(Bp_ThrowableProp_Base_C_ExecuteUbergraph_Bp_ThrowableProp_Base, CallFunc_K2_SetActorLocation_ReturnValue) == 0x0004C0, "Member 'Bp_ThrowableProp_Base_C_ExecuteUbergraph_Bp_ThrowableProp_Base::CallFunc_K2_SetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Bp_ThrowableProp_Base_C_ExecuteUbergraph_Bp_ThrowableProp_Base, K2Node_CustomEvent_Impulse) == 0x0004C8, "Member 'Bp_ThrowableProp_Base_C_ExecuteUbergraph_Bp_ThrowableProp_Base::K2Node_CustomEvent_Impulse' has a wrong offset!");
static_assert(offsetof(Bp_ThrowableProp_Base_C_ExecuteUbergraph_Bp_ThrowableProp_Base, K2Node_Event_InteractingActor) == 0x0004E0, "Member 'Bp_ThrowableProp_Base_C_ExecuteUbergraph_Bp_ThrowableProp_Base::K2Node_Event_InteractingActor' has a wrong offset!");
static_assert(offsetof(Bp_ThrowableProp_Base_C_ExecuteUbergraph_Bp_ThrowableProp_Base, K2Node_Event_InteractionComponent) == 0x0004E8, "Member 'Bp_ThrowableProp_Base_C_ExecuteUbergraph_Bp_ThrowableProp_Base::K2Node_Event_InteractionComponent' has a wrong offset!");
static_assert(offsetof(Bp_ThrowableProp_Base_C_ExecuteUbergraph_Bp_ThrowableProp_Base, K2Node_DynamicCast_AsBP_Resident_Character_1) == 0x0004F0, "Member 'Bp_ThrowableProp_Base_C_ExecuteUbergraph_Bp_ThrowableProp_Base::K2Node_DynamicCast_AsBP_Resident_Character_1' has a wrong offset!");
static_assert(offsetof(Bp_ThrowableProp_Base_C_ExecuteUbergraph_Bp_ThrowableProp_Base, K2Node_DynamicCast_bSuccess_2) == 0x0004F8, "Member 'Bp_ThrowableProp_Base_C_ExecuteUbergraph_Bp_ThrowableProp_Base::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(Bp_ThrowableProp_Base_C_ExecuteUbergraph_Bp_ThrowableProp_Base, K2Node_CustomEvent_NewVelocity) == 0x000500, "Member 'Bp_ThrowableProp_Base_C_ExecuteUbergraph_Bp_ThrowableProp_Base::K2Node_CustomEvent_NewVelocity' has a wrong offset!");
static_assert(offsetof(Bp_ThrowableProp_Base_C_ExecuteUbergraph_Bp_ThrowableProp_Base, CallFunc_HasMatchingGameplayTag_self_CastInput) == 0x000518, "Member 'Bp_ThrowableProp_Base_C_ExecuteUbergraph_Bp_ThrowableProp_Base::CallFunc_HasMatchingGameplayTag_self_CastInput' has a wrong offset!");
static_assert(offsetof(Bp_ThrowableProp_Base_C_ExecuteUbergraph_Bp_ThrowableProp_Base, CallFunc_HasMatchingGameplayTag_ReturnValue) == 0x000528, "Member 'Bp_ThrowableProp_Base_C_ExecuteUbergraph_Bp_ThrowableProp_Base::CallFunc_HasMatchingGameplayTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(Bp_ThrowableProp_Base_C_ExecuteUbergraph_Bp_ThrowableProp_Base, CallFunc_GetInstanceFromSlot_IsInstanceValid) == 0x000529, "Member 'Bp_ThrowableProp_Base_C_ExecuteUbergraph_Bp_ThrowableProp_Base::CallFunc_GetInstanceFromSlot_IsInstanceValid' has a wrong offset!");
static_assert(offsetof(Bp_ThrowableProp_Base_C_ExecuteUbergraph_Bp_ThrowableProp_Base, CallFunc_GetInstanceFromSlot_ReturnValue) == 0x000530, "Member 'Bp_ThrowableProp_Base_C_ExecuteUbergraph_Bp_ThrowableProp_Base::CallFunc_GetInstanceFromSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(Bp_ThrowableProp_Base_C_ExecuteUbergraph_Bp_ThrowableProp_Base, CallFunc_GetInstigator_ReturnValue) == 0x000538, "Member 'Bp_ThrowableProp_Base_C_ExecuteUbergraph_Bp_ThrowableProp_Base::CallFunc_GetInstigator_ReturnValue' has a wrong offset!");
static_assert(offsetof(Bp_ThrowableProp_Base_C_ExecuteUbergraph_Bp_ThrowableProp_Base, K2Node_DynamicCast_AsItem_Instance) == 0x000540, "Member 'Bp_ThrowableProp_Base_C_ExecuteUbergraph_Bp_ThrowableProp_Base::K2Node_DynamicCast_AsItem_Instance' has a wrong offset!");
static_assert(offsetof(Bp_ThrowableProp_Base_C_ExecuteUbergraph_Bp_ThrowableProp_Base, K2Node_DynamicCast_bSuccess_3) == 0x000548, "Member 'Bp_ThrowableProp_Base_C_ExecuteUbergraph_Bp_ThrowableProp_Base::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(Bp_ThrowableProp_Base_C_ExecuteUbergraph_Bp_ThrowableProp_Base, Temp_bool_IsClosed_Variable_3) == 0x000549, "Member 'Bp_ThrowableProp_Base_C_ExecuteUbergraph_Bp_ThrowableProp_Base::Temp_bool_IsClosed_Variable_3' has a wrong offset!");
static_assert(offsetof(Bp_ThrowableProp_Base_C_ExecuteUbergraph_Bp_ThrowableProp_Base, CallFunc_GetGameUserSettings_ReturnValue) == 0x000550, "Member 'Bp_ThrowableProp_Base_C_ExecuteUbergraph_Bp_ThrowableProp_Base::CallFunc_GetGameUserSettings_ReturnValue' has a wrong offset!");
static_assert(offsetof(Bp_ThrowableProp_Base_C_ExecuteUbergraph_Bp_ThrowableProp_Base, K2Node_CustomEvent_IsEnabled) == 0x000558, "Member 'Bp_ThrowableProp_Base_C_ExecuteUbergraph_Bp_ThrowableProp_Base::K2Node_CustomEvent_IsEnabled' has a wrong offset!");
static_assert(offsetof(Bp_ThrowableProp_Base_C_ExecuteUbergraph_Bp_ThrowableProp_Base, K2Node_DynamicCast_AsLyra_Settings_Local) == 0x000560, "Member 'Bp_ThrowableProp_Base_C_ExecuteUbergraph_Bp_ThrowableProp_Base::K2Node_DynamicCast_AsLyra_Settings_Local' has a wrong offset!");
static_assert(offsetof(Bp_ThrowableProp_Base_C_ExecuteUbergraph_Bp_ThrowableProp_Base, K2Node_DynamicCast_bSuccess_4) == 0x000568, "Member 'Bp_ThrowableProp_Base_C_ExecuteUbergraph_Bp_ThrowableProp_Base::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(Bp_ThrowableProp_Base_C_ExecuteUbergraph_Bp_ThrowableProp_Base, CallFunc_NotEqual_SoftObjectReference_ReturnValue) == 0x000569, "Member 'Bp_ThrowableProp_Base_C_ExecuteUbergraph_Bp_ThrowableProp_Base::CallFunc_NotEqual_SoftObjectReference_ReturnValue' has a wrong offset!");
static_assert(offsetof(Bp_ThrowableProp_Base_C_ExecuteUbergraph_Bp_ThrowableProp_Base, CallFunc_AddItemDefinition_ReturnValue) == 0x000570, "Member 'Bp_ThrowableProp_Base_C_ExecuteUbergraph_Bp_ThrowableProp_Base::CallFunc_AddItemDefinition_ReturnValue' has a wrong offset!");
static_assert(offsetof(Bp_ThrowableProp_Base_C_ExecuteUbergraph_Bp_ThrowableProp_Base, CallFunc_IsValidSoftObjectReference_ReturnValue) == 0x000578, "Member 'Bp_ThrowableProp_Base_C_ExecuteUbergraph_Bp_ThrowableProp_Base::CallFunc_IsValidSoftObjectReference_ReturnValue' has a wrong offset!");
static_assert(offsetof(Bp_ThrowableProp_Base_C_ExecuteUbergraph_Bp_ThrowableProp_Base, Temp_bool_IsClosed_Variable_4) == 0x000579, "Member 'Bp_ThrowableProp_Base_C_ExecuteUbergraph_Bp_ThrowableProp_Base::Temp_bool_IsClosed_Variable_4' has a wrong offset!");
static_assert(offsetof(Bp_ThrowableProp_Base_C_ExecuteUbergraph_Bp_ThrowableProp_Base, Temp_bool_IsClosed_Variable_5) == 0x00057A, "Member 'Bp_ThrowableProp_Base_C_ExecuteUbergraph_Bp_ThrowableProp_Base::Temp_bool_IsClosed_Variable_5' has a wrong offset!");

// Function Bp_ThrowableProp_Base.Bp_ThrowableProp_Base_C.GetDurabilityCostWhenHit
// 0x0008 (0x0008 - 0x0000)
struct Bp_ThrowableProp_Base_C_GetDurabilityCostWhenHit final
{
public:
	double                                        Amount;                                            // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Bp_ThrowableProp_Base_C_GetDurabilityCostWhenHit) == 0x000008, "Wrong alignment on Bp_ThrowableProp_Base_C_GetDurabilityCostWhenHit");
static_assert(sizeof(Bp_ThrowableProp_Base_C_GetDurabilityCostWhenHit) == 0x000008, "Wrong size on Bp_ThrowableProp_Base_C_GetDurabilityCostWhenHit");
static_assert(offsetof(Bp_ThrowableProp_Base_C_GetDurabilityCostWhenHit, Amount) == 0x000000, "Member 'Bp_ThrowableProp_Base_C_GetDurabilityCostWhenHit::Amount' has a wrong offset!");

// Function Bp_ThrowableProp_Base.Bp_ThrowableProp_Base_C.GetMaterialType
// 0x0001 (0x0001 - 0x0000)
struct Bp_ThrowableProp_Base_C_GetMaterialType final
{
public:
	E_MaterialTypes                               MaterialType;                                      // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Bp_ThrowableProp_Base_C_GetMaterialType) == 0x000001, "Wrong alignment on Bp_ThrowableProp_Base_C_GetMaterialType");
static_assert(sizeof(Bp_ThrowableProp_Base_C_GetMaterialType) == 0x000001, "Wrong size on Bp_ThrowableProp_Base_C_GetMaterialType");
static_assert(offsetof(Bp_ThrowableProp_Base_C_GetMaterialType, MaterialType) == 0x000000, "Member 'Bp_ThrowableProp_Base_C_GetMaterialType::MaterialType' has a wrong offset!");

// Function Bp_ThrowableProp_Base.Bp_ThrowableProp_Base_C.GetNewWidgetColor
// 0x0014 (0x0014 - 0x0000)
struct Bp_ThrowableProp_Base_C_GetNewWidgetColor final
{
public:
	struct FSlateColor                            NewColor;                                          // 0x0000(0x0014)(Parm, OutParm)
};
static_assert(alignof(Bp_ThrowableProp_Base_C_GetNewWidgetColor) == 0x000004, "Wrong alignment on Bp_ThrowableProp_Base_C_GetNewWidgetColor");
static_assert(sizeof(Bp_ThrowableProp_Base_C_GetNewWidgetColor) == 0x000014, "Wrong size on Bp_ThrowableProp_Base_C_GetNewWidgetColor");
static_assert(offsetof(Bp_ThrowableProp_Base_C_GetNewWidgetColor, NewColor) == 0x000000, "Member 'Bp_ThrowableProp_Base_C_GetNewWidgetColor::NewColor' has a wrong offset!");

// Function Bp_ThrowableProp_Base.Bp_ThrowableProp_Base_C.GetOptionalText
// 0x0020 (0x0020 - 0x0000)
struct Bp_ThrowableProp_Base_C_GetOptionalText final
{
public:
	class FText                                   Return;                                            // 0x0000(0x0010)(Parm, OutParm)
	class FText                                   Optional_Second_Line;                              // 0x0010(0x0010)(Parm, OutParm)
};
static_assert(alignof(Bp_ThrowableProp_Base_C_GetOptionalText) == 0x000008, "Wrong alignment on Bp_ThrowableProp_Base_C_GetOptionalText");
static_assert(sizeof(Bp_ThrowableProp_Base_C_GetOptionalText) == 0x000020, "Wrong size on Bp_ThrowableProp_Base_C_GetOptionalText");
static_assert(offsetof(Bp_ThrowableProp_Base_C_GetOptionalText, Return) == 0x000000, "Member 'Bp_ThrowableProp_Base_C_GetOptionalText::Return' has a wrong offset!");
static_assert(offsetof(Bp_ThrowableProp_Base_C_GetOptionalText, Optional_Second_Line) == 0x000010, "Member 'Bp_ThrowableProp_Base_C_GetOptionalText::Optional_Second_Line' has a wrong offset!");

// Function Bp_ThrowableProp_Base.Bp_ThrowableProp_Base_C.GetPriority
// 0x0004 (0x0004 - 0x0000)
struct Bp_ThrowableProp_Base_C_GetPriority final
{
public:
	int32                                         Priority;                                          // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Bp_ThrowableProp_Base_C_GetPriority) == 0x000004, "Wrong alignment on Bp_ThrowableProp_Base_C_GetPriority");
static_assert(sizeof(Bp_ThrowableProp_Base_C_GetPriority) == 0x000004, "Wrong size on Bp_ThrowableProp_Base_C_GetPriority");
static_assert(offsetof(Bp_ThrowableProp_Base_C_GetPriority, Priority) == 0x000000, "Member 'Bp_ThrowableProp_Base_C_GetPriority::Priority' has a wrong offset!");

// Function Bp_ThrowableProp_Base.Bp_ThrowableProp_Base_C.GetWidgetLocation
// 0x0048 (0x0048 - 0x0000)
struct Bp_ThrowableProp_Base_C_GetWidgetLocation final
{
public:
	struct FVector                                Location;                                          // 0x0000(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorBounds_Origin;                    // 0x0018(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorBounds_BoxExtent;                 // 0x0030(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Bp_ThrowableProp_Base_C_GetWidgetLocation) == 0x000008, "Wrong alignment on Bp_ThrowableProp_Base_C_GetWidgetLocation");
static_assert(sizeof(Bp_ThrowableProp_Base_C_GetWidgetLocation) == 0x000048, "Wrong size on Bp_ThrowableProp_Base_C_GetWidgetLocation");
static_assert(offsetof(Bp_ThrowableProp_Base_C_GetWidgetLocation, Location) == 0x000000, "Member 'Bp_ThrowableProp_Base_C_GetWidgetLocation::Location' has a wrong offset!");
static_assert(offsetof(Bp_ThrowableProp_Base_C_GetWidgetLocation, CallFunc_GetActorBounds_Origin) == 0x000018, "Member 'Bp_ThrowableProp_Base_C_GetWidgetLocation::CallFunc_GetActorBounds_Origin' has a wrong offset!");
static_assert(offsetof(Bp_ThrowableProp_Base_C_GetWidgetLocation, CallFunc_GetActorBounds_BoxExtent) == 0x000030, "Member 'Bp_ThrowableProp_Base_C_GetWidgetLocation::CallFunc_GetActorBounds_BoxExtent' has a wrong offset!");

// Function Bp_ThrowableProp_Base.Bp_ThrowableProp_Base_C.GrippedLocal
// 0x0020 (0x0020 - 0x0000)
struct Bp_ThrowableProp_Base_C_GrippedLocal final
{
public:
	class ACharacter*                             GrippingCharacter;                                 // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLocallyControlled_ReturnValue;          // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Bp_ThrowableProp_Base_C_GrippedLocal) == 0x000008, "Wrong alignment on Bp_ThrowableProp_Base_C_GrippedLocal");
static_assert(sizeof(Bp_ThrowableProp_Base_C_GrippedLocal) == 0x000020, "Wrong size on Bp_ThrowableProp_Base_C_GrippedLocal");
static_assert(offsetof(Bp_ThrowableProp_Base_C_GrippedLocal, GrippingCharacter) == 0x000000, "Member 'Bp_ThrowableProp_Base_C_GrippedLocal::GrippingCharacter' has a wrong offset!");
static_assert(offsetof(Bp_ThrowableProp_Base_C_GrippedLocal, CallFunc_IsLocallyControlled_ReturnValue) == 0x000008, "Member 'Bp_ThrowableProp_Base_C_GrippedLocal::CallFunc_IsLocallyControlled_ReturnValue' has a wrong offset!");
static_assert(offsetof(Bp_ThrowableProp_Base_C_GrippedLocal, CallFunc_GetPlayerController_ReturnValue) == 0x000010, "Member 'Bp_ThrowableProp_Base_C_GrippedLocal::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(Bp_ThrowableProp_Base_C_GrippedLocal, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'Bp_ThrowableProp_Base_C_GrippedLocal::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function Bp_ThrowableProp_Base.Bp_ThrowableProp_Base_C.GrippedServer
// 0x0008 (0x0008 - 0x0000)
struct Bp_ThrowableProp_Base_C_GrippedServer final
{
public:
	class ACharacter*                             GrippingCharacter;                                 // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Bp_ThrowableProp_Base_C_GrippedServer) == 0x000008, "Wrong alignment on Bp_ThrowableProp_Base_C_GrippedServer");
static_assert(sizeof(Bp_ThrowableProp_Base_C_GrippedServer) == 0x000008, "Wrong size on Bp_ThrowableProp_Base_C_GrippedServer");
static_assert(offsetof(Bp_ThrowableProp_Base_C_GrippedServer, GrippingCharacter) == 0x000000, "Member 'Bp_ThrowableProp_Base_C_GrippedServer::GrippingCharacter' has a wrong offset!");

// Function Bp_ThrowableProp_Base.Bp_ThrowableProp_Base_C.HideInteractionWidget
// 0x0001 (0x0001 - 0x0000)
struct Bp_ThrowableProp_Base_C_HideInteractionWidget final
{
public:
	bool                                          Return;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Bp_ThrowableProp_Base_C_HideInteractionWidget) == 0x000001, "Wrong alignment on Bp_ThrowableProp_Base_C_HideInteractionWidget");
static_assert(sizeof(Bp_ThrowableProp_Base_C_HideInteractionWidget) == 0x000001, "Wrong size on Bp_ThrowableProp_Base_C_HideInteractionWidget");
static_assert(offsetof(Bp_ThrowableProp_Base_C_HideInteractionWidget, Return) == 0x000000, "Member 'Bp_ThrowableProp_Base_C_HideInteractionWidget::Return' has a wrong offset!");

// Function Bp_ThrowableProp_Base.Bp_ThrowableProp_Base_C.HighConstrastModeChanged
// 0x0001 (0x0001 - 0x0000)
struct Bp_ThrowableProp_Base_C_HighConstrastModeChanged final
{
public:
	bool                                          IsEnabled;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Bp_ThrowableProp_Base_C_HighConstrastModeChanged) == 0x000001, "Wrong alignment on Bp_ThrowableProp_Base_C_HighConstrastModeChanged");
static_assert(sizeof(Bp_ThrowableProp_Base_C_HighConstrastModeChanged) == 0x000001, "Wrong size on Bp_ThrowableProp_Base_C_HighConstrastModeChanged");
static_assert(offsetof(Bp_ThrowableProp_Base_C_HighConstrastModeChanged, IsEnabled) == 0x000000, "Member 'Bp_ThrowableProp_Base_C_HighConstrastModeChanged::IsEnabled' has a wrong offset!");

// Function Bp_ThrowableProp_Base.Bp_ThrowableProp_Base_C.HitInterface
// 0x0018 (0x0018 - 0x0000)
struct Bp_ThrowableProp_Base_C_HitInterface final
{
public:
	struct FVector                                Direction;                                         // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Bp_ThrowableProp_Base_C_HitInterface) == 0x000008, "Wrong alignment on Bp_ThrowableProp_Base_C_HitInterface");
static_assert(sizeof(Bp_ThrowableProp_Base_C_HitInterface) == 0x000018, "Wrong size on Bp_ThrowableProp_Base_C_HitInterface");
static_assert(offsetof(Bp_ThrowableProp_Base_C_HitInterface, Direction) == 0x000000, "Member 'Bp_ThrowableProp_Base_C_HitInterface::Direction' has a wrong offset!");

// Function Bp_ThrowableProp_Base.Bp_ThrowableProp_Base_C.ImpactCosmetics
// 0x0048 (0x0048 - 0x0000)
struct Bp_ThrowableProp_Base_C_ImpactCosmetics final
{
public:
	class APawn*                                  ImpactCauser;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Location;                                          // 0x0008(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                HitImpulse;                                        // 0x0020(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_ImpactEffect                                ImpactEffect;                                      // 0x0038(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x3];                                       // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   BoneName;                                          // 0x003C(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ChangedAttributes;                                 // 0x0044(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Bp_ThrowableProp_Base_C_ImpactCosmetics) == 0x000008, "Wrong alignment on Bp_ThrowableProp_Base_C_ImpactCosmetics");
static_assert(sizeof(Bp_ThrowableProp_Base_C_ImpactCosmetics) == 0x000048, "Wrong size on Bp_ThrowableProp_Base_C_ImpactCosmetics");
static_assert(offsetof(Bp_ThrowableProp_Base_C_ImpactCosmetics, ImpactCauser) == 0x000000, "Member 'Bp_ThrowableProp_Base_C_ImpactCosmetics::ImpactCauser' has a wrong offset!");
static_assert(offsetof(Bp_ThrowableProp_Base_C_ImpactCosmetics, Location) == 0x000008, "Member 'Bp_ThrowableProp_Base_C_ImpactCosmetics::Location' has a wrong offset!");
static_assert(offsetof(Bp_ThrowableProp_Base_C_ImpactCosmetics, HitImpulse) == 0x000020, "Member 'Bp_ThrowableProp_Base_C_ImpactCosmetics::HitImpulse' has a wrong offset!");
static_assert(offsetof(Bp_ThrowableProp_Base_C_ImpactCosmetics, ImpactEffect) == 0x000038, "Member 'Bp_ThrowableProp_Base_C_ImpactCosmetics::ImpactEffect' has a wrong offset!");
static_assert(offsetof(Bp_ThrowableProp_Base_C_ImpactCosmetics, BoneName) == 0x00003C, "Member 'Bp_ThrowableProp_Base_C_ImpactCosmetics::BoneName' has a wrong offset!");
static_assert(offsetof(Bp_ThrowableProp_Base_C_ImpactCosmetics, ChangedAttributes) == 0x000044, "Member 'Bp_ThrowableProp_Base_C_ImpactCosmetics::ChangedAttributes' has a wrong offset!");

// Function Bp_ThrowableProp_Base.Bp_ThrowableProp_Base_C.InteractableCancelInteraction
// 0x0008 (0x0008 - 0x0000)
struct Bp_ThrowableProp_Base_C_InteractableCancelInteraction final
{
public:
	class UPrimitiveComponent*                    InteractionComponent;                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Bp_ThrowableProp_Base_C_InteractableCancelInteraction) == 0x000008, "Wrong alignment on Bp_ThrowableProp_Base_C_InteractableCancelInteraction");
static_assert(sizeof(Bp_ThrowableProp_Base_C_InteractableCancelInteraction) == 0x000008, "Wrong size on Bp_ThrowableProp_Base_C_InteractableCancelInteraction");
static_assert(offsetof(Bp_ThrowableProp_Base_C_InteractableCancelInteraction, InteractionComponent) == 0x000000, "Member 'Bp_ThrowableProp_Base_C_InteractableCancelInteraction::InteractionComponent' has a wrong offset!");

// Function Bp_ThrowableProp_Base.Bp_ThrowableProp_Base_C.InteractPressed
// 0x0008 (0x0008 - 0x0000)
struct Bp_ThrowableProp_Base_C_InteractPressed final
{
public:
	class AActor*                                 InteractingActor;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Bp_ThrowableProp_Base_C_InteractPressed) == 0x000008, "Wrong alignment on Bp_ThrowableProp_Base_C_InteractPressed");
static_assert(sizeof(Bp_ThrowableProp_Base_C_InteractPressed) == 0x000008, "Wrong size on Bp_ThrowableProp_Base_C_InteractPressed");
static_assert(offsetof(Bp_ThrowableProp_Base_C_InteractPressed, InteractingActor) == 0x000000, "Member 'Bp_ThrowableProp_Base_C_InteractPressed::InteractingActor' has a wrong offset!");

// Function Bp_ThrowableProp_Base.Bp_ThrowableProp_Base_C.InteractReleased
// 0x0008 (0x0008 - 0x0000)
struct Bp_ThrowableProp_Base_C_InteractReleased final
{
public:
	class AActor*                                 InteractingActor;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Bp_ThrowableProp_Base_C_InteractReleased) == 0x000008, "Wrong alignment on Bp_ThrowableProp_Base_C_InteractReleased");
static_assert(sizeof(Bp_ThrowableProp_Base_C_InteractReleased) == 0x000008, "Wrong size on Bp_ThrowableProp_Base_C_InteractReleased");
static_assert(offsetof(Bp_ThrowableProp_Base_C_InteractReleased, InteractingActor) == 0x000000, "Member 'Bp_ThrowableProp_Base_C_InteractReleased::InteractingActor' has a wrong offset!");

// Function Bp_ThrowableProp_Base.Bp_ThrowableProp_Base_C.IsBeingHeld
// 0x0002 (0x0002 - 0x0000)
struct Bp_ThrowableProp_Base_C_IsBeingHeld final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Bp_ThrowableProp_Base_C_IsBeingHeld) == 0x000001, "Wrong alignment on Bp_ThrowableProp_Base_C_IsBeingHeld");
static_assert(sizeof(Bp_ThrowableProp_Base_C_IsBeingHeld) == 0x000002, "Wrong size on Bp_ThrowableProp_Base_C_IsBeingHeld");
static_assert(offsetof(Bp_ThrowableProp_Base_C_IsBeingHeld, ReturnValue) == 0x000000, "Member 'Bp_ThrowableProp_Base_C_IsBeingHeld::ReturnValue' has a wrong offset!");
static_assert(offsetof(Bp_ThrowableProp_Base_C_IsBeingHeld, CallFunc_IsValid_ReturnValue) == 0x000001, "Member 'Bp_ThrowableProp_Base_C_IsBeingHeld::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function Bp_ThrowableProp_Base.Bp_ThrowableProp_Base_C.IsInFocus
// 0x0008 (0x0008 - 0x0000)
struct Bp_ThrowableProp_Base_C_IsInFocus final
{
public:
	class AActor*                                 Focusing_Actor;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Bp_ThrowableProp_Base_C_IsInFocus) == 0x000008, "Wrong alignment on Bp_ThrowableProp_Base_C_IsInFocus");
static_assert(sizeof(Bp_ThrowableProp_Base_C_IsInFocus) == 0x000008, "Wrong size on Bp_ThrowableProp_Base_C_IsInFocus");
static_assert(offsetof(Bp_ThrowableProp_Base_C_IsInFocus, Focusing_Actor) == 0x000000, "Member 'Bp_ThrowableProp_Base_C_IsInFocus::Focusing_Actor' has a wrong offset!");

// Function Bp_ThrowableProp_Base.Bp_ThrowableProp_Base_C.IsInteractable
// 0x0001 (0x0001 - 0x0000)
struct Bp_ThrowableProp_Base_C_IsInteractable final
{
public:
	bool                                          Interactable;                                      // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Bp_ThrowableProp_Base_C_IsInteractable) == 0x000001, "Wrong alignment on Bp_ThrowableProp_Base_C_IsInteractable");
static_assert(sizeof(Bp_ThrowableProp_Base_C_IsInteractable) == 0x000001, "Wrong size on Bp_ThrowableProp_Base_C_IsInteractable");
static_assert(offsetof(Bp_ThrowableProp_Base_C_IsInteractable, Interactable) == 0x000000, "Member 'Bp_ThrowableProp_Base_C_IsInteractable::Interactable' has a wrong offset!");

// Function Bp_ThrowableProp_Base.Bp_ThrowableProp_Base_C.Knockback
// 0x0030 (0x0030 - 0x0000)
struct Bp_ThrowableProp_Base_C_Knockback final
{
public:
	struct FVector                                Velocity;                                          // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          XYOverride;                                        // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ZOverride;                                         // 0x0019(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A[0x6];                                       // 0x001A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        AirControlMultiplier;                              // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Void;                                              // 0x0028(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Bp_ThrowableProp_Base_C_Knockback) == 0x000008, "Wrong alignment on Bp_ThrowableProp_Base_C_Knockback");
static_assert(sizeof(Bp_ThrowableProp_Base_C_Knockback) == 0x000030, "Wrong size on Bp_ThrowableProp_Base_C_Knockback");
static_assert(offsetof(Bp_ThrowableProp_Base_C_Knockback, Velocity) == 0x000000, "Member 'Bp_ThrowableProp_Base_C_Knockback::Velocity' has a wrong offset!");
static_assert(offsetof(Bp_ThrowableProp_Base_C_Knockback, XYOverride) == 0x000018, "Member 'Bp_ThrowableProp_Base_C_Knockback::XYOverride' has a wrong offset!");
static_assert(offsetof(Bp_ThrowableProp_Base_C_Knockback, ZOverride) == 0x000019, "Member 'Bp_ThrowableProp_Base_C_Knockback::ZOverride' has a wrong offset!");
static_assert(offsetof(Bp_ThrowableProp_Base_C_Knockback, AirControlMultiplier) == 0x000020, "Member 'Bp_ThrowableProp_Base_C_Knockback::AirControlMultiplier' has a wrong offset!");
static_assert(offsetof(Bp_ThrowableProp_Base_C_Knockback, Void) == 0x000028, "Member 'Bp_ThrowableProp_Base_C_Knockback::Void' has a wrong offset!");

// Function Bp_ThrowableProp_Base.Bp_ThrowableProp_Base_C.LimitVelocity
// 0x0070 (0x0070 - 0x0000)
struct Bp_ThrowableProp_Base_C_LimitVelocity final
{
public:
	struct FVector                                CallFunc_Conv_DoubleToVector_ReturnValue;          // 0x0000(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetPhysicsLinearVelocity_ReturnValue;     // 0x0018(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_VSize_ReturnValue;                        // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x0038(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue;        // 0x0058(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Bp_ThrowableProp_Base_C_LimitVelocity) == 0x000008, "Wrong alignment on Bp_ThrowableProp_Base_C_LimitVelocity");
static_assert(sizeof(Bp_ThrowableProp_Base_C_LimitVelocity) == 0x000070, "Wrong size on Bp_ThrowableProp_Base_C_LimitVelocity");
static_assert(offsetof(Bp_ThrowableProp_Base_C_LimitVelocity, CallFunc_Conv_DoubleToVector_ReturnValue) == 0x000000, "Member 'Bp_ThrowableProp_Base_C_LimitVelocity::CallFunc_Conv_DoubleToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Bp_ThrowableProp_Base_C_LimitVelocity, CallFunc_GetPhysicsLinearVelocity_ReturnValue) == 0x000018, "Member 'Bp_ThrowableProp_Base_C_LimitVelocity::CallFunc_GetPhysicsLinearVelocity_ReturnValue' has a wrong offset!");
static_assert(offsetof(Bp_ThrowableProp_Base_C_LimitVelocity, CallFunc_VSize_ReturnValue) == 0x000030, "Member 'Bp_ThrowableProp_Base_C_LimitVelocity::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(Bp_ThrowableProp_Base_C_LimitVelocity, CallFunc_Normal_ReturnValue) == 0x000038, "Member 'Bp_ThrowableProp_Base_C_LimitVelocity::CallFunc_Normal_ReturnValue' has a wrong offset!");
static_assert(offsetof(Bp_ThrowableProp_Base_C_LimitVelocity, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000050, "Member 'Bp_ThrowableProp_Base_C_LimitVelocity::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Bp_ThrowableProp_Base_C_LimitVelocity, CallFunc_Multiply_VectorVector_ReturnValue) == 0x000058, "Member 'Bp_ThrowableProp_Base_C_LimitVelocity::CallFunc_Multiply_VectorVector_ReturnValue' has a wrong offset!");

// Function Bp_ThrowableProp_Base.Bp_ThrowableProp_Base_C.MeleeHit
// 0x0008 (0x0008 - 0x0000)
struct Bp_ThrowableProp_Base_C_MeleeHit final
{
public:
	const class AActor*                           AttackingActor;                                    // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Bp_ThrowableProp_Base_C_MeleeHit) == 0x000008, "Wrong alignment on Bp_ThrowableProp_Base_C_MeleeHit");
static_assert(sizeof(Bp_ThrowableProp_Base_C_MeleeHit) == 0x000008, "Wrong size on Bp_ThrowableProp_Base_C_MeleeHit");
static_assert(offsetof(Bp_ThrowableProp_Base_C_MeleeHit, AttackingActor) == 0x000000, "Member 'Bp_ThrowableProp_Base_C_MeleeHit::AttackingActor' has a wrong offset!");

// Function Bp_ThrowableProp_Base.Bp_ThrowableProp_Base_C.OnRep_Held
// 0x0001 (0x0001 - 0x0000)
struct Bp_ThrowableProp_Base_C_OnRep_Held final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Bp_ThrowableProp_Base_C_OnRep_Held) == 0x000001, "Wrong alignment on Bp_ThrowableProp_Base_C_OnRep_Held");
static_assert(sizeof(Bp_ThrowableProp_Base_C_OnRep_Held) == 0x000001, "Wrong size on Bp_ThrowableProp_Base_C_OnRep_Held");
static_assert(offsetof(Bp_ThrowableProp_Base_C_OnRep_Held, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'Bp_ThrowableProp_Base_C_OnRep_Held::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function Bp_ThrowableProp_Base.Bp_ThrowableProp_Base_C.OnRep_HoldingCharacter
// 0x0018 (0x0018 - 0x0000)
struct Bp_ThrowableProp_Base_C_OnRep_HoldingCharacter final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue;        // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLocallyControlled_ReturnValue;          // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            CallFunc_GetController_ReturnValue;                // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLocallyControlled_ReturnValue_1;        // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Bp_ThrowableProp_Base_C_OnRep_HoldingCharacter) == 0x000008, "Wrong alignment on Bp_ThrowableProp_Base_C_OnRep_HoldingCharacter");
static_assert(sizeof(Bp_ThrowableProp_Base_C_OnRep_HoldingCharacter) == 0x000018, "Wrong size on Bp_ThrowableProp_Base_C_OnRep_HoldingCharacter");
static_assert(offsetof(Bp_ThrowableProp_Base_C_OnRep_HoldingCharacter, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'Bp_ThrowableProp_Base_C_OnRep_HoldingCharacter::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Bp_ThrowableProp_Base_C_OnRep_HoldingCharacter, CallFunc_IsValid_ReturnValue_1) == 0x000001, "Member 'Bp_ThrowableProp_Base_C_OnRep_HoldingCharacter::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Bp_ThrowableProp_Base_C_OnRep_HoldingCharacter, CallFunc_NotEqual_ObjectObject_ReturnValue) == 0x000002, "Member 'Bp_ThrowableProp_Base_C_OnRep_HoldingCharacter::CallFunc_NotEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(Bp_ThrowableProp_Base_C_OnRep_HoldingCharacter, CallFunc_IsLocallyControlled_ReturnValue) == 0x000003, "Member 'Bp_ThrowableProp_Base_C_OnRep_HoldingCharacter::CallFunc_IsLocallyControlled_ReturnValue' has a wrong offset!");
static_assert(offsetof(Bp_ThrowableProp_Base_C_OnRep_HoldingCharacter, CallFunc_GetController_ReturnValue) == 0x000008, "Member 'Bp_ThrowableProp_Base_C_OnRep_HoldingCharacter::CallFunc_GetController_ReturnValue' has a wrong offset!");
static_assert(offsetof(Bp_ThrowableProp_Base_C_OnRep_HoldingCharacter, CallFunc_IsLocallyControlled_ReturnValue_1) == 0x000010, "Member 'Bp_ThrowableProp_Base_C_OnRep_HoldingCharacter::CallFunc_IsLocallyControlled_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Bp_ThrowableProp_Base_C_OnRep_HoldingCharacter, CallFunc_IsValid_ReturnValue_2) == 0x000011, "Member 'Bp_ThrowableProp_Base_C_OnRep_HoldingCharacter::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");

// Function Bp_ThrowableProp_Base.Bp_ThrowableProp_Base_C.PlayHitAudio
// 0x0010 (0x0010 - 0x0000)
struct Bp_ThrowableProp_Base_C_PlayHitAudio final
{
public:
	class UPhysicalMaterial*                      Hit;                                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    Component;                                         // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Bp_ThrowableProp_Base_C_PlayHitAudio) == 0x000008, "Wrong alignment on Bp_ThrowableProp_Base_C_PlayHitAudio");
static_assert(sizeof(Bp_ThrowableProp_Base_C_PlayHitAudio) == 0x000010, "Wrong size on Bp_ThrowableProp_Base_C_PlayHitAudio");
static_assert(offsetof(Bp_ThrowableProp_Base_C_PlayHitAudio, Hit) == 0x000000, "Member 'Bp_ThrowableProp_Base_C_PlayHitAudio::Hit' has a wrong offset!");
static_assert(offsetof(Bp_ThrowableProp_Base_C_PlayHitAudio, Component) == 0x000008, "Member 'Bp_ThrowableProp_Base_C_PlayHitAudio::Component' has a wrong offset!");

// Function Bp_ThrowableProp_Base.Bp_ThrowableProp_Base_C.PlayImpactCosmetics
// 0x01C8 (0x01C8 - 0x0000)
struct Bp_ThrowableProp_Base_C_PlayImpactCosmetics final
{
public:
	struct FVector                                Location;                                          // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             Hit;                                               // 0x0018(0x00F8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class UPrimitiveComponent*                    MyComponent;                                       // 0x0110(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UNiagaraComponent*                      CallFunc_SpawnSystemAtLocation_ReturnValue;        // 0x0118(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPhysicalSurface                              Temp_byte_Variable;                                // 0x0121(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_122[0x2];                                      // 0x0122(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0124(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0128(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_2;                               // 0x012C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_3;                               // 0x0130(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_4;                               // 0x0134(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_5;                               // 0x0138(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_6;                               // 0x013C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_7;                               // 0x0140(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_8;                               // 0x0144(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_9;                               // 0x0148(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_10;                              // 0x014C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_11;                              // 0x0150(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_12;                              // 0x0154(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_13;                              // 0x0158(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_14;                              // 0x015C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_15;                              // 0x0160(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_16;                              // 0x0164(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_17;                              // 0x0168(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_18;                              // 0x016C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPhysicalSurface                              CallFunc_GetSurfaceType_ReturnValue;               // 0x0170(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_171[0x7];                                      // 0x0171(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetComponentVelocity_ReturnValue;         // 0x0178(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_VSize_ReturnValue;                        // 0x0190(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Select_Default;                             // 0x0198(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19C[0x4];                                      // 0x019C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_NormalizeToRange_ReturnValue;             // 0x01A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_EvaluateRuntimeFloatCurve_ReturnValue;    // 0x01A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1AC[0x4];                                      // 0x01AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IAudioParameterControllerInterface> CallFunc_SetIntParameter_self_CastInput;           // 0x01B0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_EvaluateRuntimeFloatCurve_time_ImplicitCast; // 0x01C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Bp_ThrowableProp_Base_C_PlayImpactCosmetics) == 0x000008, "Wrong alignment on Bp_ThrowableProp_Base_C_PlayImpactCosmetics");
static_assert(sizeof(Bp_ThrowableProp_Base_C_PlayImpactCosmetics) == 0x0001C8, "Wrong size on Bp_ThrowableProp_Base_C_PlayImpactCosmetics");
static_assert(offsetof(Bp_ThrowableProp_Base_C_PlayImpactCosmetics, Location) == 0x000000, "Member 'Bp_ThrowableProp_Base_C_PlayImpactCosmetics::Location' has a wrong offset!");
static_assert(offsetof(Bp_ThrowableProp_Base_C_PlayImpactCosmetics, Hit) == 0x000018, "Member 'Bp_ThrowableProp_Base_C_PlayImpactCosmetics::Hit' has a wrong offset!");
static_assert(offsetof(Bp_ThrowableProp_Base_C_PlayImpactCosmetics, MyComponent) == 0x000110, "Member 'Bp_ThrowableProp_Base_C_PlayImpactCosmetics::MyComponent' has a wrong offset!");
static_assert(offsetof(Bp_ThrowableProp_Base_C_PlayImpactCosmetics, CallFunc_SpawnSystemAtLocation_ReturnValue) == 0x000118, "Member 'Bp_ThrowableProp_Base_C_PlayImpactCosmetics::CallFunc_SpawnSystemAtLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Bp_ThrowableProp_Base_C_PlayImpactCosmetics, CallFunc_IsValid_ReturnValue) == 0x000120, "Member 'Bp_ThrowableProp_Base_C_PlayImpactCosmetics::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Bp_ThrowableProp_Base_C_PlayImpactCosmetics, Temp_byte_Variable) == 0x000121, "Member 'Bp_ThrowableProp_Base_C_PlayImpactCosmetics::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(Bp_ThrowableProp_Base_C_PlayImpactCosmetics, Temp_int_Variable) == 0x000124, "Member 'Bp_ThrowableProp_Base_C_PlayImpactCosmetics::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(Bp_ThrowableProp_Base_C_PlayImpactCosmetics, Temp_int_Variable_1) == 0x000128, "Member 'Bp_ThrowableProp_Base_C_PlayImpactCosmetics::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(Bp_ThrowableProp_Base_C_PlayImpactCosmetics, Temp_int_Variable_2) == 0x00012C, "Member 'Bp_ThrowableProp_Base_C_PlayImpactCosmetics::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(Bp_ThrowableProp_Base_C_PlayImpactCosmetics, Temp_int_Variable_3) == 0x000130, "Member 'Bp_ThrowableProp_Base_C_PlayImpactCosmetics::Temp_int_Variable_3' has a wrong offset!");
static_assert(offsetof(Bp_ThrowableProp_Base_C_PlayImpactCosmetics, Temp_int_Variable_4) == 0x000134, "Member 'Bp_ThrowableProp_Base_C_PlayImpactCosmetics::Temp_int_Variable_4' has a wrong offset!");
static_assert(offsetof(Bp_ThrowableProp_Base_C_PlayImpactCosmetics, Temp_int_Variable_5) == 0x000138, "Member 'Bp_ThrowableProp_Base_C_PlayImpactCosmetics::Temp_int_Variable_5' has a wrong offset!");
static_assert(offsetof(Bp_ThrowableProp_Base_C_PlayImpactCosmetics, Temp_int_Variable_6) == 0x00013C, "Member 'Bp_ThrowableProp_Base_C_PlayImpactCosmetics::Temp_int_Variable_6' has a wrong offset!");
static_assert(offsetof(Bp_ThrowableProp_Base_C_PlayImpactCosmetics, Temp_int_Variable_7) == 0x000140, "Member 'Bp_ThrowableProp_Base_C_PlayImpactCosmetics::Temp_int_Variable_7' has a wrong offset!");
static_assert(offsetof(Bp_ThrowableProp_Base_C_PlayImpactCosmetics, Temp_int_Variable_8) == 0x000144, "Member 'Bp_ThrowableProp_Base_C_PlayImpactCosmetics::Temp_int_Variable_8' has a wrong offset!");
static_assert(offsetof(Bp_ThrowableProp_Base_C_PlayImpactCosmetics, Temp_int_Variable_9) == 0x000148, "Member 'Bp_ThrowableProp_Base_C_PlayImpactCosmetics::Temp_int_Variable_9' has a wrong offset!");
static_assert(offsetof(Bp_ThrowableProp_Base_C_PlayImpactCosmetics, Temp_int_Variable_10) == 0x00014C, "Member 'Bp_ThrowableProp_Base_C_PlayImpactCosmetics::Temp_int_Variable_10' has a wrong offset!");
static_assert(offsetof(Bp_ThrowableProp_Base_C_PlayImpactCosmetics, Temp_int_Variable_11) == 0x000150, "Member 'Bp_ThrowableProp_Base_C_PlayImpactCosmetics::Temp_int_Variable_11' has a wrong offset!");
static_assert(offsetof(Bp_ThrowableProp_Base_C_PlayImpactCosmetics, Temp_int_Variable_12) == 0x000154, "Member 'Bp_ThrowableProp_Base_C_PlayImpactCosmetics::Temp_int_Variable_12' has a wrong offset!");
static_assert(offsetof(Bp_ThrowableProp_Base_C_PlayImpactCosmetics, Temp_int_Variable_13) == 0x000158, "Member 'Bp_ThrowableProp_Base_C_PlayImpactCosmetics::Temp_int_Variable_13' has a wrong offset!");
static_assert(offsetof(Bp_ThrowableProp_Base_C_PlayImpactCosmetics, Temp_int_Variable_14) == 0x00015C, "Member 'Bp_ThrowableProp_Base_C_PlayImpactCosmetics::Temp_int_Variable_14' has a wrong offset!");
static_assert(offsetof(Bp_ThrowableProp_Base_C_PlayImpactCosmetics, Temp_int_Variable_15) == 0x000160, "Member 'Bp_ThrowableProp_Base_C_PlayImpactCosmetics::Temp_int_Variable_15' has a wrong offset!");
static_assert(offsetof(Bp_ThrowableProp_Base_C_PlayImpactCosmetics, Temp_int_Variable_16) == 0x000164, "Member 'Bp_ThrowableProp_Base_C_PlayImpactCosmetics::Temp_int_Variable_16' has a wrong offset!");
static_assert(offsetof(Bp_ThrowableProp_Base_C_PlayImpactCosmetics, Temp_int_Variable_17) == 0x000168, "Member 'Bp_ThrowableProp_Base_C_PlayImpactCosmetics::Temp_int_Variable_17' has a wrong offset!");
static_assert(offsetof(Bp_ThrowableProp_Base_C_PlayImpactCosmetics, Temp_int_Variable_18) == 0x00016C, "Member 'Bp_ThrowableProp_Base_C_PlayImpactCosmetics::Temp_int_Variable_18' has a wrong offset!");
static_assert(offsetof(Bp_ThrowableProp_Base_C_PlayImpactCosmetics, CallFunc_GetSurfaceType_ReturnValue) == 0x000170, "Member 'Bp_ThrowableProp_Base_C_PlayImpactCosmetics::CallFunc_GetSurfaceType_ReturnValue' has a wrong offset!");
static_assert(offsetof(Bp_ThrowableProp_Base_C_PlayImpactCosmetics, CallFunc_GetComponentVelocity_ReturnValue) == 0x000178, "Member 'Bp_ThrowableProp_Base_C_PlayImpactCosmetics::CallFunc_GetComponentVelocity_ReturnValue' has a wrong offset!");
static_assert(offsetof(Bp_ThrowableProp_Base_C_PlayImpactCosmetics, CallFunc_VSize_ReturnValue) == 0x000190, "Member 'Bp_ThrowableProp_Base_C_PlayImpactCosmetics::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(Bp_ThrowableProp_Base_C_PlayImpactCosmetics, K2Node_Select_Default) == 0x000198, "Member 'Bp_ThrowableProp_Base_C_PlayImpactCosmetics::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(Bp_ThrowableProp_Base_C_PlayImpactCosmetics, CallFunc_NormalizeToRange_ReturnValue) == 0x0001A0, "Member 'Bp_ThrowableProp_Base_C_PlayImpactCosmetics::CallFunc_NormalizeToRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(Bp_ThrowableProp_Base_C_PlayImpactCosmetics, CallFunc_EvaluateRuntimeFloatCurve_ReturnValue) == 0x0001A8, "Member 'Bp_ThrowableProp_Base_C_PlayImpactCosmetics::CallFunc_EvaluateRuntimeFloatCurve_ReturnValue' has a wrong offset!");
static_assert(offsetof(Bp_ThrowableProp_Base_C_PlayImpactCosmetics, CallFunc_SetIntParameter_self_CastInput) == 0x0001B0, "Member 'Bp_ThrowableProp_Base_C_PlayImpactCosmetics::CallFunc_SetIntParameter_self_CastInput' has a wrong offset!");
static_assert(offsetof(Bp_ThrowableProp_Base_C_PlayImpactCosmetics, CallFunc_EvaluateRuntimeFloatCurve_time_ImplicitCast) == 0x0001C0, "Member 'Bp_ThrowableProp_Base_C_PlayImpactCosmetics::CallFunc_EvaluateRuntimeFloatCurve_time_ImplicitCast' has a wrong offset!");

// Function Bp_ThrowableProp_Base.Bp_ThrowableProp_Base_C.PostInteract
// 0x0010 (0x0010 - 0x0000)
struct Bp_ThrowableProp_Base_C_PostInteract final
{
public:
	class AActor*                                 InteractingActor;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    InteractionComponent;                              // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Bp_ThrowableProp_Base_C_PostInteract) == 0x000008, "Wrong alignment on Bp_ThrowableProp_Base_C_PostInteract");
static_assert(sizeof(Bp_ThrowableProp_Base_C_PostInteract) == 0x000010, "Wrong size on Bp_ThrowableProp_Base_C_PostInteract");
static_assert(offsetof(Bp_ThrowableProp_Base_C_PostInteract, InteractingActor) == 0x000000, "Member 'Bp_ThrowableProp_Base_C_PostInteract::InteractingActor' has a wrong offset!");
static_assert(offsetof(Bp_ThrowableProp_Base_C_PostInteract, InteractionComponent) == 0x000008, "Member 'Bp_ThrowableProp_Base_C_PostInteract::InteractionComponent' has a wrong offset!");

// Function Bp_ThrowableProp_Base.Bp_ThrowableProp_Base_C.PreInteract
// 0x0010 (0x0010 - 0x0000)
struct Bp_ThrowableProp_Base_C_PreInteract final
{
public:
	class AActor*                                 InteractingActor;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    InteractionComponent;                              // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Bp_ThrowableProp_Base_C_PreInteract) == 0x000008, "Wrong alignment on Bp_ThrowableProp_Base_C_PreInteract");
static_assert(sizeof(Bp_ThrowableProp_Base_C_PreInteract) == 0x000010, "Wrong size on Bp_ThrowableProp_Base_C_PreInteract");
static_assert(offsetof(Bp_ThrowableProp_Base_C_PreInteract, InteractingActor) == 0x000000, "Member 'Bp_ThrowableProp_Base_C_PreInteract::InteractingActor' has a wrong offset!");
static_assert(offsetof(Bp_ThrowableProp_Base_C_PreInteract, InteractionComponent) == 0x000008, "Member 'Bp_ThrowableProp_Base_C_PreInteract::InteractionComponent' has a wrong offset!");

// Function Bp_ThrowableProp_Base.Bp_ThrowableProp_Base_C.ReceiveHit
// 0x0160 (0x0160 - 0x0000)
struct Bp_ThrowableProp_Base_C_ReceiveHit final
{
public:
	class UPrimitiveComponent*                    MyComp;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 Other;                                             // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          bSelfMoved;                                        // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                HitLocation;                                       // 0x0020(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                HitNormal;                                         // 0x0038(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                NormalImpulse;                                     // 0x0050(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             Hit;                                               // 0x0068(0x00F8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(Bp_ThrowableProp_Base_C_ReceiveHit) == 0x000008, "Wrong alignment on Bp_ThrowableProp_Base_C_ReceiveHit");
static_assert(sizeof(Bp_ThrowableProp_Base_C_ReceiveHit) == 0x000160, "Wrong size on Bp_ThrowableProp_Base_C_ReceiveHit");
static_assert(offsetof(Bp_ThrowableProp_Base_C_ReceiveHit, MyComp) == 0x000000, "Member 'Bp_ThrowableProp_Base_C_ReceiveHit::MyComp' has a wrong offset!");
static_assert(offsetof(Bp_ThrowableProp_Base_C_ReceiveHit, Other) == 0x000008, "Member 'Bp_ThrowableProp_Base_C_ReceiveHit::Other' has a wrong offset!");
static_assert(offsetof(Bp_ThrowableProp_Base_C_ReceiveHit, OtherComp) == 0x000010, "Member 'Bp_ThrowableProp_Base_C_ReceiveHit::OtherComp' has a wrong offset!");
static_assert(offsetof(Bp_ThrowableProp_Base_C_ReceiveHit, bSelfMoved) == 0x000018, "Member 'Bp_ThrowableProp_Base_C_ReceiveHit::bSelfMoved' has a wrong offset!");
static_assert(offsetof(Bp_ThrowableProp_Base_C_ReceiveHit, HitLocation) == 0x000020, "Member 'Bp_ThrowableProp_Base_C_ReceiveHit::HitLocation' has a wrong offset!");
static_assert(offsetof(Bp_ThrowableProp_Base_C_ReceiveHit, HitNormal) == 0x000038, "Member 'Bp_ThrowableProp_Base_C_ReceiveHit::HitNormal' has a wrong offset!");
static_assert(offsetof(Bp_ThrowableProp_Base_C_ReceiveHit, NormalImpulse) == 0x000050, "Member 'Bp_ThrowableProp_Base_C_ReceiveHit::NormalImpulse' has a wrong offset!");
static_assert(offsetof(Bp_ThrowableProp_Base_C_ReceiveHit, Hit) == 0x000068, "Member 'Bp_ThrowableProp_Base_C_ReceiveHit::Hit' has a wrong offset!");

// Function Bp_ThrowableProp_Base.Bp_ThrowableProp_Base_C.RegisterInteracter
// 0x0010 (0x0010 - 0x0000)
struct Bp_ThrowableProp_Base_C_RegisterInteracter final
{
public:
	class UPrimitiveComponent*                    InteractionComponent;                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 InteractingActor;                                  // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Bp_ThrowableProp_Base_C_RegisterInteracter) == 0x000008, "Wrong alignment on Bp_ThrowableProp_Base_C_RegisterInteracter");
static_assert(sizeof(Bp_ThrowableProp_Base_C_RegisterInteracter) == 0x000010, "Wrong size on Bp_ThrowableProp_Base_C_RegisterInteracter");
static_assert(offsetof(Bp_ThrowableProp_Base_C_RegisterInteracter, InteractionComponent) == 0x000000, "Member 'Bp_ThrowableProp_Base_C_RegisterInteracter::InteractionComponent' has a wrong offset!");
static_assert(offsetof(Bp_ThrowableProp_Base_C_RegisterInteracter, InteractingActor) == 0x000008, "Member 'Bp_ThrowableProp_Base_C_RegisterInteracter::InteractingActor' has a wrong offset!");

// Function Bp_ThrowableProp_Base.Bp_ThrowableProp_Base_C.Released Local
// 0x0030 (0x0030 - 0x0000)
struct Bp_ThrowableProp_Base_C_Released_Local final
{
public:
	class ACharacter*                             ReleasingCharacter;                                // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLocallyControlled_ReturnValue;          // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A[0x6];                                        // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_ResidentCharacter_C*                K2Node_DynamicCast_AsBP_Resident_Character;        // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Bp_ThrowableProp_Base_C_Released_Local) == 0x000008, "Wrong alignment on Bp_ThrowableProp_Base_C_Released_Local");
static_assert(sizeof(Bp_ThrowableProp_Base_C_Released_Local) == 0x000030, "Wrong size on Bp_ThrowableProp_Base_C_Released_Local");
static_assert(offsetof(Bp_ThrowableProp_Base_C_Released_Local, ReleasingCharacter) == 0x000000, "Member 'Bp_ThrowableProp_Base_C_Released_Local::ReleasingCharacter' has a wrong offset!");
static_assert(offsetof(Bp_ThrowableProp_Base_C_Released_Local, CallFunc_HasAuthority_ReturnValue) == 0x000008, "Member 'Bp_ThrowableProp_Base_C_Released_Local::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(Bp_ThrowableProp_Base_C_Released_Local, CallFunc_IsLocallyControlled_ReturnValue) == 0x000009, "Member 'Bp_ThrowableProp_Base_C_Released_Local::CallFunc_IsLocallyControlled_ReturnValue' has a wrong offset!");
static_assert(offsetof(Bp_ThrowableProp_Base_C_Released_Local, K2Node_DynamicCast_AsBP_Resident_Character) == 0x000010, "Member 'Bp_ThrowableProp_Base_C_Released_Local::K2Node_DynamicCast_AsBP_Resident_Character' has a wrong offset!");
static_assert(offsetof(Bp_ThrowableProp_Base_C_Released_Local, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'Bp_ThrowableProp_Base_C_Released_Local::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Bp_ThrowableProp_Base_C_Released_Local, CallFunc_GetPlayerController_ReturnValue) == 0x000020, "Member 'Bp_ThrowableProp_Base_C_Released_Local::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(Bp_ThrowableProp_Base_C_Released_Local, CallFunc_IsValid_ReturnValue) == 0x000028, "Member 'Bp_ThrowableProp_Base_C_Released_Local::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function Bp_ThrowableProp_Base.Bp_ThrowableProp_Base_C.ReleasedServer
// 0x0008 (0x0008 - 0x0000)
struct Bp_ThrowableProp_Base_C_ReleasedServer final
{
public:
	class ACharacter*                             ReleasingCharacter;                                // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Bp_ThrowableProp_Base_C_ReleasedServer) == 0x000008, "Wrong alignment on Bp_ThrowableProp_Base_C_ReleasedServer");
static_assert(sizeof(Bp_ThrowableProp_Base_C_ReleasedServer) == 0x000008, "Wrong size on Bp_ThrowableProp_Base_C_ReleasedServer");
static_assert(offsetof(Bp_ThrowableProp_Base_C_ReleasedServer, ReleasingCharacter) == 0x000000, "Member 'Bp_ThrowableProp_Base_C_ReleasedServer::ReleasingCharacter' has a wrong offset!");

// Function Bp_ThrowableProp_Base.Bp_ThrowableProp_Base_C.ReloadAfterHousesLoaded
// 0x0001 (0x0001 - 0x0000)
struct Bp_ThrowableProp_Base_C_ReloadAfterHousesLoaded final
{
public:
	bool                                          Return;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Bp_ThrowableProp_Base_C_ReloadAfterHousesLoaded) == 0x000001, "Wrong alignment on Bp_ThrowableProp_Base_C_ReloadAfterHousesLoaded");
static_assert(sizeof(Bp_ThrowableProp_Base_C_ReloadAfterHousesLoaded) == 0x000001, "Wrong size on Bp_ThrowableProp_Base_C_ReloadAfterHousesLoaded");
static_assert(offsetof(Bp_ThrowableProp_Base_C_ReloadAfterHousesLoaded, Return) == 0x000000, "Member 'Bp_ThrowableProp_Base_C_ReloadAfterHousesLoaded::Return' has a wrong offset!");

// Function Bp_ThrowableProp_Base.Bp_ThrowableProp_Base_C.SetHighContrastMode
// 0x0060 (0x0060 - 0x0000)
struct Bp_ThrowableProp_Base_C_SetHighContrastMode final
{
public:
	bool                                          Enabled;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Conv_BoolToDouble_ReturnValue;            // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_BoolToDouble_ReturnValue_1;          // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UMaterialInterface*>             CallFunc_GetMaterials_ReturnValue;                 // 0x0028(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInterface*                     CallFunc_Array_Get_Item;                           // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A[0x6];                                       // 0x004A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast; // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_1; // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Bp_ThrowableProp_Base_C_SetHighContrastMode) == 0x000008, "Wrong alignment on Bp_ThrowableProp_Base_C_SetHighContrastMode");
static_assert(sizeof(Bp_ThrowableProp_Base_C_SetHighContrastMode) == 0x000060, "Wrong size on Bp_ThrowableProp_Base_C_SetHighContrastMode");
static_assert(offsetof(Bp_ThrowableProp_Base_C_SetHighContrastMode, Enabled) == 0x000000, "Member 'Bp_ThrowableProp_Base_C_SetHighContrastMode::Enabled' has a wrong offset!");
static_assert(offsetof(Bp_ThrowableProp_Base_C_SetHighContrastMode, CallFunc_Conv_BoolToDouble_ReturnValue) == 0x000008, "Member 'Bp_ThrowableProp_Base_C_SetHighContrastMode::CallFunc_Conv_BoolToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Bp_ThrowableProp_Base_C_SetHighContrastMode, CallFunc_Conv_BoolToDouble_ReturnValue_1) == 0x000010, "Member 'Bp_ThrowableProp_Base_C_SetHighContrastMode::CallFunc_Conv_BoolToDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Bp_ThrowableProp_Base_C_SetHighContrastMode, Temp_int_Array_Index_Variable) == 0x000018, "Member 'Bp_ThrowableProp_Base_C_SetHighContrastMode::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(Bp_ThrowableProp_Base_C_SetHighContrastMode, Temp_int_Loop_Counter_Variable) == 0x00001C, "Member 'Bp_ThrowableProp_Base_C_SetHighContrastMode::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(Bp_ThrowableProp_Base_C_SetHighContrastMode, CallFunc_Add_IntInt_ReturnValue) == 0x000020, "Member 'Bp_ThrowableProp_Base_C_SetHighContrastMode::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Bp_ThrowableProp_Base_C_SetHighContrastMode, CallFunc_GetMaterials_ReturnValue) == 0x000028, "Member 'Bp_ThrowableProp_Base_C_SetHighContrastMode::CallFunc_GetMaterials_ReturnValue' has a wrong offset!");
static_assert(offsetof(Bp_ThrowableProp_Base_C_SetHighContrastMode, CallFunc_Array_Length_ReturnValue) == 0x000038, "Member 'Bp_ThrowableProp_Base_C_SetHighContrastMode::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(Bp_ThrowableProp_Base_C_SetHighContrastMode, CallFunc_Array_Get_Item) == 0x000040, "Member 'Bp_ThrowableProp_Base_C_SetHighContrastMode::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Bp_ThrowableProp_Base_C_SetHighContrastMode, CallFunc_Less_IntInt_ReturnValue) == 0x000048, "Member 'Bp_ThrowableProp_Base_C_SetHighContrastMode::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Bp_ThrowableProp_Base_C_SetHighContrastMode, CallFunc_IsValid_ReturnValue) == 0x000049, "Member 'Bp_ThrowableProp_Base_C_SetHighContrastMode::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Bp_ThrowableProp_Base_C_SetHighContrastMode, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x000050, "Member 'Bp_ThrowableProp_Base_C_SetHighContrastMode::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(Bp_ThrowableProp_Base_C_SetHighContrastMode, CallFunc_SetScalarParameterValue_Value_ImplicitCast) == 0x000058, "Member 'Bp_ThrowableProp_Base_C_SetHighContrastMode::CallFunc_SetScalarParameterValue_Value_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Bp_ThrowableProp_Base_C_SetHighContrastMode, CallFunc_SetScalarParameterValue_Value_ImplicitCast_1) == 0x00005C, "Member 'Bp_ThrowableProp_Base_C_SetHighContrastMode::CallFunc_SetScalarParameterValue_Value_ImplicitCast_1' has a wrong offset!");

// Function Bp_ThrowableProp_Base.Bp_ThrowableProp_Base_C.SetHoveredComponent
// 0x0010 (0x0010 - 0x0000)
struct Bp_ThrowableProp_Base_C_SetHoveredComponent final
{
public:
	class UInteractionComponent_C*                HoveredComponent;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          Void;                                              // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Bp_ThrowableProp_Base_C_SetHoveredComponent) == 0x000008, "Wrong alignment on Bp_ThrowableProp_Base_C_SetHoveredComponent");
static_assert(sizeof(Bp_ThrowableProp_Base_C_SetHoveredComponent) == 0x000010, "Wrong size on Bp_ThrowableProp_Base_C_SetHoveredComponent");
static_assert(offsetof(Bp_ThrowableProp_Base_C_SetHoveredComponent, HoveredComponent) == 0x000000, "Member 'Bp_ThrowableProp_Base_C_SetHoveredComponent::HoveredComponent' has a wrong offset!");
static_assert(offsetof(Bp_ThrowableProp_Base_C_SetHoveredComponent, Void) == 0x000008, "Member 'Bp_ThrowableProp_Base_C_SetHoveredComponent::Void' has a wrong offset!");

// Function Bp_ThrowableProp_Base.Bp_ThrowableProp_Base_C.SetInteractable
// 0x0001 (0x0001 - 0x0000)
struct Bp_ThrowableProp_Base_C_SetInteractable final
{
public:
	bool                                          Interactable;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Bp_ThrowableProp_Base_C_SetInteractable) == 0x000001, "Wrong alignment on Bp_ThrowableProp_Base_C_SetInteractable");
static_assert(sizeof(Bp_ThrowableProp_Base_C_SetInteractable) == 0x000001, "Wrong size on Bp_ThrowableProp_Base_C_SetInteractable");
static_assert(offsetof(Bp_ThrowableProp_Base_C_SetInteractable, Interactable) == 0x000000, "Member 'Bp_ThrowableProp_Base_C_SetInteractable::Interactable' has a wrong offset!");

// Function Bp_ThrowableProp_Base.Bp_ThrowableProp_Base_C.SetLinearVelocityOwner
// 0x0018 (0x0018 - 0x0000)
struct Bp_ThrowableProp_Base_C_SetLinearVelocityOwner final
{
public:
	struct FVector                                NewVelocity;                                       // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Bp_ThrowableProp_Base_C_SetLinearVelocityOwner) == 0x000008, "Wrong alignment on Bp_ThrowableProp_Base_C_SetLinearVelocityOwner");
static_assert(sizeof(Bp_ThrowableProp_Base_C_SetLinearVelocityOwner) == 0x000018, "Wrong size on Bp_ThrowableProp_Base_C_SetLinearVelocityOwner");
static_assert(offsetof(Bp_ThrowableProp_Base_C_SetLinearVelocityOwner, NewVelocity) == 0x000000, "Member 'Bp_ThrowableProp_Base_C_SetLinearVelocityOwner::NewVelocity' has a wrong offset!");

// Function Bp_ThrowableProp_Base.Bp_ThrowableProp_Base_C.SetLinearVelocityServer
// 0x0020 (0x0020 - 0x0000)
struct Bp_ThrowableProp_Base_C_SetLinearVelocityServer final
{
public:
	struct FVector                                NewVelocity;                                       // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Bp_ThrowableProp_Base_C_SetLinearVelocityServer) == 0x000008, "Wrong alignment on Bp_ThrowableProp_Base_C_SetLinearVelocityServer");
static_assert(sizeof(Bp_ThrowableProp_Base_C_SetLinearVelocityServer) == 0x000020, "Wrong size on Bp_ThrowableProp_Base_C_SetLinearVelocityServer");
static_assert(offsetof(Bp_ThrowableProp_Base_C_SetLinearVelocityServer, NewVelocity) == 0x000000, "Member 'Bp_ThrowableProp_Base_C_SetLinearVelocityServer::NewVelocity' has a wrong offset!");
static_assert(offsetof(Bp_ThrowableProp_Base_C_SetLinearVelocityServer, CallFunc_HasAuthority_ReturnValue) == 0x000018, "Member 'Bp_ThrowableProp_Base_C_SetLinearVelocityServer::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");

// Function Bp_ThrowableProp_Base.Bp_ThrowableProp_Base_C.Show Throwable Widget
// 0x0001 (0x0001 - 0x0000)
struct Bp_ThrowableProp_Base_C_Show_Throwable_Widget final
{
public:
	bool                                          Show;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Bp_ThrowableProp_Base_C_Show_Throwable_Widget) == 0x000001, "Wrong alignment on Bp_ThrowableProp_Base_C_Show_Throwable_Widget");
static_assert(sizeof(Bp_ThrowableProp_Base_C_Show_Throwable_Widget) == 0x000001, "Wrong size on Bp_ThrowableProp_Base_C_Show_Throwable_Widget");
static_assert(offsetof(Bp_ThrowableProp_Base_C_Show_Throwable_Widget, Show) == 0x000000, "Member 'Bp_ThrowableProp_Base_C_Show_Throwable_Widget::Show' has a wrong offset!");

// Function Bp_ThrowableProp_Base.Bp_ThrowableProp_Base_C.UnregisterInteracter
// 0x0010 (0x0010 - 0x0000)
struct Bp_ThrowableProp_Base_C_UnregisterInteracter final
{
public:
	class UPrimitiveComponent*                    InteractionComponent;                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 InteractingActor;                                  // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Bp_ThrowableProp_Base_C_UnregisterInteracter) == 0x000008, "Wrong alignment on Bp_ThrowableProp_Base_C_UnregisterInteracter");
static_assert(sizeof(Bp_ThrowableProp_Base_C_UnregisterInteracter) == 0x000010, "Wrong size on Bp_ThrowableProp_Base_C_UnregisterInteracter");
static_assert(offsetof(Bp_ThrowableProp_Base_C_UnregisterInteracter, InteractionComponent) == 0x000000, "Member 'Bp_ThrowableProp_Base_C_UnregisterInteracter::InteractionComponent' has a wrong offset!");
static_assert(offsetof(Bp_ThrowableProp_Base_C_UnregisterInteracter, InteractingActor) == 0x000008, "Member 'Bp_ThrowableProp_Base_C_UnregisterInteracter::InteractingActor' has a wrong offset!");

// Function Bp_ThrowableProp_Base.Bp_ThrowableProp_Base_C.GetInteractionDuration
// 0x0010 (0x0010 - 0x0000)
struct Bp_ThrowableProp_Base_C_GetInteractionDuration final
{
public:
	class UPrimitiveComponent*                    InteractionComponent;                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	float                                         ReturnValue;                                       // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Bp_ThrowableProp_Base_C_GetInteractionDuration) == 0x000008, "Wrong alignment on Bp_ThrowableProp_Base_C_GetInteractionDuration");
static_assert(sizeof(Bp_ThrowableProp_Base_C_GetInteractionDuration) == 0x000010, "Wrong size on Bp_ThrowableProp_Base_C_GetInteractionDuration");
static_assert(offsetof(Bp_ThrowableProp_Base_C_GetInteractionDuration, InteractionComponent) == 0x000000, "Member 'Bp_ThrowableProp_Base_C_GetInteractionDuration::InteractionComponent' has a wrong offset!");
static_assert(offsetof(Bp_ThrowableProp_Base_C_GetInteractionDuration, ReturnValue) == 0x000008, "Member 'Bp_ThrowableProp_Base_C_GetInteractionDuration::ReturnValue' has a wrong offset!");

// Function Bp_ThrowableProp_Base.Bp_ThrowableProp_Base_C.GetPostInteractSyncType
// 0x0010 (0x0010 - 0x0000)
struct Bp_ThrowableProp_Base_C_GetPostInteractSyncType final
{
public:
	bool                                          bShouldSync;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EAbilityTaskNetSyncType                       Type;                                              // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    InteractionComponent;                              // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Bp_ThrowableProp_Base_C_GetPostInteractSyncType) == 0x000008, "Wrong alignment on Bp_ThrowableProp_Base_C_GetPostInteractSyncType");
static_assert(sizeof(Bp_ThrowableProp_Base_C_GetPostInteractSyncType) == 0x000010, "Wrong size on Bp_ThrowableProp_Base_C_GetPostInteractSyncType");
static_assert(offsetof(Bp_ThrowableProp_Base_C_GetPostInteractSyncType, bShouldSync) == 0x000000, "Member 'Bp_ThrowableProp_Base_C_GetPostInteractSyncType::bShouldSync' has a wrong offset!");
static_assert(offsetof(Bp_ThrowableProp_Base_C_GetPostInteractSyncType, Type) == 0x000001, "Member 'Bp_ThrowableProp_Base_C_GetPostInteractSyncType::Type' has a wrong offset!");
static_assert(offsetof(Bp_ThrowableProp_Base_C_GetPostInteractSyncType, InteractionComponent) == 0x000008, "Member 'Bp_ThrowableProp_Base_C_GetPostInteractSyncType::InteractionComponent' has a wrong offset!");

// Function Bp_ThrowableProp_Base.Bp_ThrowableProp_Base_C.GetPreInteractSyncType
// 0x0010 (0x0010 - 0x0000)
struct Bp_ThrowableProp_Base_C_GetPreInteractSyncType final
{
public:
	bool                                          bShouldSync;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EAbilityTaskNetSyncType                       Type;                                              // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    InteractionComponent;                              // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Bp_ThrowableProp_Base_C_GetPreInteractSyncType) == 0x000008, "Wrong alignment on Bp_ThrowableProp_Base_C_GetPreInteractSyncType");
static_assert(sizeof(Bp_ThrowableProp_Base_C_GetPreInteractSyncType) == 0x000010, "Wrong size on Bp_ThrowableProp_Base_C_GetPreInteractSyncType");
static_assert(offsetof(Bp_ThrowableProp_Base_C_GetPreInteractSyncType, bShouldSync) == 0x000000, "Member 'Bp_ThrowableProp_Base_C_GetPreInteractSyncType::bShouldSync' has a wrong offset!");
static_assert(offsetof(Bp_ThrowableProp_Base_C_GetPreInteractSyncType, Type) == 0x000001, "Member 'Bp_ThrowableProp_Base_C_GetPreInteractSyncType::Type' has a wrong offset!");
static_assert(offsetof(Bp_ThrowableProp_Base_C_GetPreInteractSyncType, InteractionComponent) == 0x000008, "Member 'Bp_ThrowableProp_Base_C_GetPreInteractSyncType::InteractionComponent' has a wrong offset!");

// Function Bp_ThrowableProp_Base.Bp_ThrowableProp_Base_C.IsAvailableForEnemyTeam
// 0x0010 (0x0010 - 0x0000)
struct Bp_ThrowableProp_Base_C_IsAvailableForEnemyTeam final
{
public:
	class UPrimitiveComponent*                    InteractionComponent;                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Bp_ThrowableProp_Base_C_IsAvailableForEnemyTeam) == 0x000008, "Wrong alignment on Bp_ThrowableProp_Base_C_IsAvailableForEnemyTeam");
static_assert(sizeof(Bp_ThrowableProp_Base_C_IsAvailableForEnemyTeam) == 0x000010, "Wrong size on Bp_ThrowableProp_Base_C_IsAvailableForEnemyTeam");
static_assert(offsetof(Bp_ThrowableProp_Base_C_IsAvailableForEnemyTeam, InteractionComponent) == 0x000000, "Member 'Bp_ThrowableProp_Base_C_IsAvailableForEnemyTeam::InteractionComponent' has a wrong offset!");
static_assert(offsetof(Bp_ThrowableProp_Base_C_IsAvailableForEnemyTeam, ReturnValue) == 0x000008, "Member 'Bp_ThrowableProp_Base_C_IsAvailableForEnemyTeam::ReturnValue' has a wrong offset!");

// Function Bp_ThrowableProp_Base.Bp_ThrowableProp_Base_C.IsAvailableForInteraction
// 0x0040 (0x0040 - 0x0000)
struct Bp_ThrowableProp_Base_C_IsAvailableForInteraction final
{
public:
	class AActor*                                 InteractingActor;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    InteractionComponent;                              // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Get_ClassLog_Name_name;                   // 0x0018(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_BoolToString_ReturnValue;            // 0x0030(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(Bp_ThrowableProp_Base_C_IsAvailableForInteraction) == 0x000008, "Wrong alignment on Bp_ThrowableProp_Base_C_IsAvailableForInteraction");
static_assert(sizeof(Bp_ThrowableProp_Base_C_IsAvailableForInteraction) == 0x000040, "Wrong size on Bp_ThrowableProp_Base_C_IsAvailableForInteraction");
static_assert(offsetof(Bp_ThrowableProp_Base_C_IsAvailableForInteraction, InteractingActor) == 0x000000, "Member 'Bp_ThrowableProp_Base_C_IsAvailableForInteraction::InteractingActor' has a wrong offset!");
static_assert(offsetof(Bp_ThrowableProp_Base_C_IsAvailableForInteraction, InteractionComponent) == 0x000008, "Member 'Bp_ThrowableProp_Base_C_IsAvailableForInteraction::InteractionComponent' has a wrong offset!");
static_assert(offsetof(Bp_ThrowableProp_Base_C_IsAvailableForInteraction, ReturnValue) == 0x000010, "Member 'Bp_ThrowableProp_Base_C_IsAvailableForInteraction::ReturnValue' has a wrong offset!");
static_assert(offsetof(Bp_ThrowableProp_Base_C_IsAvailableForInteraction, CallFunc_Get_ClassLog_Name_name) == 0x000018, "Member 'Bp_ThrowableProp_Base_C_IsAvailableForInteraction::CallFunc_Get_ClassLog_Name_name' has a wrong offset!");
static_assert(offsetof(Bp_ThrowableProp_Base_C_IsAvailableForInteraction, CallFunc_Not_PreBool_ReturnValue) == 0x000028, "Member 'Bp_ThrowableProp_Base_C_IsAvailableForInteraction::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(Bp_ThrowableProp_Base_C_IsAvailableForInteraction, CallFunc_Conv_BoolToString_ReturnValue) == 0x000030, "Member 'Bp_ThrowableProp_Base_C_IsAvailableForInteraction::CallFunc_Conv_BoolToString_ReturnValue' has a wrong offset!");

}

