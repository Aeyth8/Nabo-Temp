#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Seagull130_ControlUnit

#include "Basic.hpp"

#include "GameplayAbilities_structs.hpp"
#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "BP_ControlUnit_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_Seagull130_ControlUnit.BP_Seagull130_ControlUnit_C
// 0x0128 (0x0478 - 0x0350)
class ABP_Seagull130_ControlUnit_C final : public ABP_ControlUnit_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_BP_Seagull130_ControlUnit_C;        // 0x0350(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class USpringArmComponent*                    SpringArmSeagull_NotInUse;                         // 0x0358(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 SK_Seagull_NotInUse;                               // 0x0360(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        Scene_0;                                           // 0x0368(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UNiagaraComponent*                      P_Seagull_Electricity;                             // 0x0370(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UNiagaraComponent*                      Niagara;                                           // 0x0378(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UPostProcessComponent*                  PostProcess;                                       // 0x0380(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          BoxCollision_DamageSeagull;                        // 0x0388(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USpringArmComponent*                    SpringArm_Camera;                                  // 0x0390(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        Scene_Camera;                                      // 0x0398(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 SK_Seagull;                                        // 0x03A0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USpringArmComponent*                    SpringArm;                                         // 0x03A8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UCameraComponent*                       Camera;                                            // 0x03B0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        Scene_Seagull;                                     // 0x03B8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         TL_Location_Alpha_A84297964294DA983A65C6B19E31F4D2; // 0x03C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            TL_Location__Direction_A84297964294DA983A65C6B19E31F4D2; // 0x03C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C5[0x3];                                      // 0x03C5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     TL_Location;                                       // 0x03C8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class ABP_Seagull130_Path_C*                  SeagullPath;                                       // 0x03D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           FireTimer;                                         // 0x03D8(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CameraRotation;                                    // 0x03E0(0x0018)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	struct FTimerHandle                           ServerRotationTimer;                               // 0x03F8(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	int32                                         PrimaryAmmo;                                       // 0x0400(0x0004)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_404[0x4];                                      // 0x0404(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	FMulticastInlineDelegateProperty_             On_NewPrimaryAmmoSet;                              // 0x0408(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	int32                                         SecondaryAmmo;                                     // 0x0418(0x0004)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash)
	bool                                          PrimaryFireMode;                                   // 0x041C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41D[0x3];                                      // 0x041D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	FMulticastInlineDelegateProperty_             On_NewSecondaryAmmoSet;                            // 0x0420(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	double                                        MinPitchView;                                      // 0x0430(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        MaxPitchView;                                      // 0x0438(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FActiveGameplayEffectHandle            PossessionHandle;                                  // 0x0440(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           LifetimeTimer;                                     // 0x0448(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	float                                         SeagullLifeTime;                                   // 0x0450(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_454[0x4];                                      // 0x0454(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWI_Seagull130_Overlay_C*               As_WI_Seagull_130_Overlay;                         // 0x0458(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UEquipmentInstance*                     Instance;                                          // 0x0460(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	double                                        SmallProjectileDirectHitDamage;                    // 0x0468(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        BigProjectileDirectHitDamage;                      // 0x0470(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void AddControllingGameplayEffect();
	void AddSeagullWidgetOverlay();
	void Assign_New_Ability();
	void Auth_SubtractPrimaryAmmo();
	void Auth_SubtractSecondaryAmmo();
	void ExecuteUbergraph_BP_Seagull130_ControlUnit(int32 EntryPoint);
	void FirePrimaryProjectile();
	void FireSecondaryProjectile();
	void Get_LocationAndRotatationAlongSpline(double Alpha, struct FVector* ReturnLoc, struct FRotator* ReturnRot);
	void InpActEvt_IA_LookMouse_K2Node_EnhancedInputActionEvent_1(const struct FInputActionValue& ActionValue, float ElapsedTime, float TriggeredTime, const class UInputAction* SourceAction);
	void InpActEvt_IA_LookStick_K2Node_EnhancedInputActionEvent_0(const struct FInputActionValue& ActionValue, float ElapsedTime, float TriggeredTime, const class UInputAction* SourceAction);
	void InpActEvt_IA_PrimaryFire_K2Node_EnhancedInputActionEvent_2(const struct FInputActionValue& ActionValue, float ElapsedTime, float TriggeredTime, const class UInputAction* SourceAction);
	void InpActEvt_IA_PrimaryFire_K2Node_EnhancedInputActionEvent_3(const struct FInputActionValue& ActionValue, float ElapsedTime, float TriggeredTime, const class UInputAction* SourceAction);
	void InpActEvt_IA_SecondaryFire_K2Node_EnhancedInputActionEvent_4(const struct FInputActionValue& ActionValue, float ElapsedTime, float TriggeredTime, const class UInputAction* SourceAction);
	void InUseCosmetics(bool InUse_0);
	void IsOverlayInViewport(bool* Return);
	void MakeKillerData(struct FCombatParticipant* CombatParticipant);
	void Multi_Start_Fire(bool Primary);
	void Multi_Stop_Fire();
	void On_Lifetime_Expired();
	void On_DamageTaken_Event();
	void On_Fire_Timer_Elapsed();
	void On_NewPrimaryAmmoSet__DelegateSignature(int32 Amount);
	void On_NewSecondaryAmmoSet__DelegateSignature(int32 Amount);
	void On_Update_Server_Rotation_Timer_Elapsed();
	void OnGameEnded_Event();
	void OnRep_PrimaryAmmo();
	void OnRep_SecondaryAmmo();
	void Owner_EnterControlUnit(class AActor* InteractingActor_0);
	void Owner_LeaveControlUnit();
	void PlayCameraShake(TSubclassOf<class UCameraShakeBase> Shake);
	void ReceiveDestroyed();
	void Remove_Seagull_Item();
	void RemoveControllingGameplayEffect();
	void RemoveNewAbility();
	void RemoveSeagullWidgetOverlay();
	void Server_Set_Server_As_Owner();
	void Server_Start_Fire(bool Primary);
	void Server_Stop_Fire();
	void Server_Update_Rotation(const struct FRotator& Rotation);
	void SetCameraRotation(const struct FVector2D& DeltaRotation);
	void SetFireModeCosmetics(bool Primary);
	void SetViewToSeagull(class AActor* InteractingActor_0);
	void Successful_Interaction();
	void TL_Location__FinishedFunc();
	void TL_Location__UpdateFunc();
	void ReceiveBeginPlay();

	bool IsAvailableForEnemyTeam(class UPrimitiveComponent* InteractionComponent) const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_Seagull130_ControlUnit_C">();
	}
	static class ABP_Seagull130_ControlUnit_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_Seagull130_ControlUnit_C>();
	}
};
static_assert(alignof(ABP_Seagull130_ControlUnit_C) == 0x000008, "Wrong alignment on ABP_Seagull130_ControlUnit_C");
static_assert(sizeof(ABP_Seagull130_ControlUnit_C) == 0x000478, "Wrong size on ABP_Seagull130_ControlUnit_C");
static_assert(offsetof(ABP_Seagull130_ControlUnit_C, UberGraphFrame_BP_Seagull130_ControlUnit_C) == 0x000350, "Member 'ABP_Seagull130_ControlUnit_C::UberGraphFrame_BP_Seagull130_ControlUnit_C' has a wrong offset!");
static_assert(offsetof(ABP_Seagull130_ControlUnit_C, SpringArmSeagull_NotInUse) == 0x000358, "Member 'ABP_Seagull130_ControlUnit_C::SpringArmSeagull_NotInUse' has a wrong offset!");
static_assert(offsetof(ABP_Seagull130_ControlUnit_C, SK_Seagull_NotInUse) == 0x000360, "Member 'ABP_Seagull130_ControlUnit_C::SK_Seagull_NotInUse' has a wrong offset!");
static_assert(offsetof(ABP_Seagull130_ControlUnit_C, Scene_0) == 0x000368, "Member 'ABP_Seagull130_ControlUnit_C::Scene_0' has a wrong offset!");
static_assert(offsetof(ABP_Seagull130_ControlUnit_C, P_Seagull_Electricity) == 0x000370, "Member 'ABP_Seagull130_ControlUnit_C::P_Seagull_Electricity' has a wrong offset!");
static_assert(offsetof(ABP_Seagull130_ControlUnit_C, Niagara) == 0x000378, "Member 'ABP_Seagull130_ControlUnit_C::Niagara' has a wrong offset!");
static_assert(offsetof(ABP_Seagull130_ControlUnit_C, PostProcess) == 0x000380, "Member 'ABP_Seagull130_ControlUnit_C::PostProcess' has a wrong offset!");
static_assert(offsetof(ABP_Seagull130_ControlUnit_C, BoxCollision_DamageSeagull) == 0x000388, "Member 'ABP_Seagull130_ControlUnit_C::BoxCollision_DamageSeagull' has a wrong offset!");
static_assert(offsetof(ABP_Seagull130_ControlUnit_C, SpringArm_Camera) == 0x000390, "Member 'ABP_Seagull130_ControlUnit_C::SpringArm_Camera' has a wrong offset!");
static_assert(offsetof(ABP_Seagull130_ControlUnit_C, Scene_Camera) == 0x000398, "Member 'ABP_Seagull130_ControlUnit_C::Scene_Camera' has a wrong offset!");
static_assert(offsetof(ABP_Seagull130_ControlUnit_C, SK_Seagull) == 0x0003A0, "Member 'ABP_Seagull130_ControlUnit_C::SK_Seagull' has a wrong offset!");
static_assert(offsetof(ABP_Seagull130_ControlUnit_C, SpringArm) == 0x0003A8, "Member 'ABP_Seagull130_ControlUnit_C::SpringArm' has a wrong offset!");
static_assert(offsetof(ABP_Seagull130_ControlUnit_C, Camera) == 0x0003B0, "Member 'ABP_Seagull130_ControlUnit_C::Camera' has a wrong offset!");
static_assert(offsetof(ABP_Seagull130_ControlUnit_C, Scene_Seagull) == 0x0003B8, "Member 'ABP_Seagull130_ControlUnit_C::Scene_Seagull' has a wrong offset!");
static_assert(offsetof(ABP_Seagull130_ControlUnit_C, TL_Location_Alpha_A84297964294DA983A65C6B19E31F4D2) == 0x0003C0, "Member 'ABP_Seagull130_ControlUnit_C::TL_Location_Alpha_A84297964294DA983A65C6B19E31F4D2' has a wrong offset!");
static_assert(offsetof(ABP_Seagull130_ControlUnit_C, TL_Location__Direction_A84297964294DA983A65C6B19E31F4D2) == 0x0003C4, "Member 'ABP_Seagull130_ControlUnit_C::TL_Location__Direction_A84297964294DA983A65C6B19E31F4D2' has a wrong offset!");
static_assert(offsetof(ABP_Seagull130_ControlUnit_C, TL_Location) == 0x0003C8, "Member 'ABP_Seagull130_ControlUnit_C::TL_Location' has a wrong offset!");
static_assert(offsetof(ABP_Seagull130_ControlUnit_C, SeagullPath) == 0x0003D0, "Member 'ABP_Seagull130_ControlUnit_C::SeagullPath' has a wrong offset!");
static_assert(offsetof(ABP_Seagull130_ControlUnit_C, FireTimer) == 0x0003D8, "Member 'ABP_Seagull130_ControlUnit_C::FireTimer' has a wrong offset!");
static_assert(offsetof(ABP_Seagull130_ControlUnit_C, CameraRotation) == 0x0003E0, "Member 'ABP_Seagull130_ControlUnit_C::CameraRotation' has a wrong offset!");
static_assert(offsetof(ABP_Seagull130_ControlUnit_C, ServerRotationTimer) == 0x0003F8, "Member 'ABP_Seagull130_ControlUnit_C::ServerRotationTimer' has a wrong offset!");
static_assert(offsetof(ABP_Seagull130_ControlUnit_C, PrimaryAmmo) == 0x000400, "Member 'ABP_Seagull130_ControlUnit_C::PrimaryAmmo' has a wrong offset!");
static_assert(offsetof(ABP_Seagull130_ControlUnit_C, On_NewPrimaryAmmoSet) == 0x000408, "Member 'ABP_Seagull130_ControlUnit_C::On_NewPrimaryAmmoSet' has a wrong offset!");
static_assert(offsetof(ABP_Seagull130_ControlUnit_C, SecondaryAmmo) == 0x000418, "Member 'ABP_Seagull130_ControlUnit_C::SecondaryAmmo' has a wrong offset!");
static_assert(offsetof(ABP_Seagull130_ControlUnit_C, PrimaryFireMode) == 0x00041C, "Member 'ABP_Seagull130_ControlUnit_C::PrimaryFireMode' has a wrong offset!");
static_assert(offsetof(ABP_Seagull130_ControlUnit_C, On_NewSecondaryAmmoSet) == 0x000420, "Member 'ABP_Seagull130_ControlUnit_C::On_NewSecondaryAmmoSet' has a wrong offset!");
static_assert(offsetof(ABP_Seagull130_ControlUnit_C, MinPitchView) == 0x000430, "Member 'ABP_Seagull130_ControlUnit_C::MinPitchView' has a wrong offset!");
static_assert(offsetof(ABP_Seagull130_ControlUnit_C, MaxPitchView) == 0x000438, "Member 'ABP_Seagull130_ControlUnit_C::MaxPitchView' has a wrong offset!");
static_assert(offsetof(ABP_Seagull130_ControlUnit_C, PossessionHandle) == 0x000440, "Member 'ABP_Seagull130_ControlUnit_C::PossessionHandle' has a wrong offset!");
static_assert(offsetof(ABP_Seagull130_ControlUnit_C, LifetimeTimer) == 0x000448, "Member 'ABP_Seagull130_ControlUnit_C::LifetimeTimer' has a wrong offset!");
static_assert(offsetof(ABP_Seagull130_ControlUnit_C, SeagullLifeTime) == 0x000450, "Member 'ABP_Seagull130_ControlUnit_C::SeagullLifeTime' has a wrong offset!");
static_assert(offsetof(ABP_Seagull130_ControlUnit_C, As_WI_Seagull_130_Overlay) == 0x000458, "Member 'ABP_Seagull130_ControlUnit_C::As_WI_Seagull_130_Overlay' has a wrong offset!");
static_assert(offsetof(ABP_Seagull130_ControlUnit_C, Instance) == 0x000460, "Member 'ABP_Seagull130_ControlUnit_C::Instance' has a wrong offset!");
static_assert(offsetof(ABP_Seagull130_ControlUnit_C, SmallProjectileDirectHitDamage) == 0x000468, "Member 'ABP_Seagull130_ControlUnit_C::SmallProjectileDirectHitDamage' has a wrong offset!");
static_assert(offsetof(ABP_Seagull130_ControlUnit_C, BigProjectileDirectHitDamage) == 0x000470, "Member 'ABP_Seagull130_ControlUnit_C::BigProjectileDirectHitDamage' has a wrong offset!");

}

