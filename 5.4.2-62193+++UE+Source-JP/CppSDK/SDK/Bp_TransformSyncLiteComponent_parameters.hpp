#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Bp_TransformSyncLiteComponent

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function Bp_TransformSyncLiteComponent.Bp_TransformSyncLiteComponent_C.CalculateTickGroup
// 0x0020 (0x0020 - 0x0000)
struct Bp_TransformSyncLiteComponent_C_CalculateTickGroup final
{
public:
	double                                        Distance;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ReturnValue;                                       // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FFloor_ReturnValue;                       // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Min_ReturnValue;                          // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Bp_TransformSyncLiteComponent_C_CalculateTickGroup) == 0x000008, "Wrong alignment on Bp_TransformSyncLiteComponent_C_CalculateTickGroup");
static_assert(sizeof(Bp_TransformSyncLiteComponent_C_CalculateTickGroup) == 0x000020, "Wrong size on Bp_TransformSyncLiteComponent_C_CalculateTickGroup");
static_assert(offsetof(Bp_TransformSyncLiteComponent_C_CalculateTickGroup, Distance) == 0x000000, "Member 'Bp_TransformSyncLiteComponent_C_CalculateTickGroup::Distance' has a wrong offset!");
static_assert(offsetof(Bp_TransformSyncLiteComponent_C_CalculateTickGroup, ReturnValue) == 0x000008, "Member 'Bp_TransformSyncLiteComponent_C_CalculateTickGroup::ReturnValue' has a wrong offset!");
static_assert(offsetof(Bp_TransformSyncLiteComponent_C_CalculateTickGroup, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000010, "Member 'Bp_TransformSyncLiteComponent_C_CalculateTickGroup::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Bp_TransformSyncLiteComponent_C_CalculateTickGroup, CallFunc_FFloor_ReturnValue) == 0x000018, "Member 'Bp_TransformSyncLiteComponent_C_CalculateTickGroup::CallFunc_FFloor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Bp_TransformSyncLiteComponent_C_CalculateTickGroup, CallFunc_Min_ReturnValue) == 0x00001C, "Member 'Bp_TransformSyncLiteComponent_C_CalculateTickGroup::CallFunc_Min_ReturnValue' has a wrong offset!");

// Function Bp_TransformSyncLiteComponent.Bp_TransformSyncLiteComponent_C.ComponentSleep
// 0x0010 (0x0010 - 0x0000)
struct Bp_TransformSyncLiteComponent_C_ComponentSleep final
{
public:
	class UPrimitiveComponent*                    SleepingComponent;                                 // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   BoneName;                                          // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Bp_TransformSyncLiteComponent_C_ComponentSleep) == 0x000008, "Wrong alignment on Bp_TransformSyncLiteComponent_C_ComponentSleep");
static_assert(sizeof(Bp_TransformSyncLiteComponent_C_ComponentSleep) == 0x000010, "Wrong size on Bp_TransformSyncLiteComponent_C_ComponentSleep");
static_assert(offsetof(Bp_TransformSyncLiteComponent_C_ComponentSleep, SleepingComponent) == 0x000000, "Member 'Bp_TransformSyncLiteComponent_C_ComponentSleep::SleepingComponent' has a wrong offset!");
static_assert(offsetof(Bp_TransformSyncLiteComponent_C_ComponentSleep, BoneName) == 0x000008, "Member 'Bp_TransformSyncLiteComponent_C_ComponentSleep::BoneName' has a wrong offset!");

// Function Bp_TransformSyncLiteComponent.Bp_TransformSyncLiteComponent_C.ComponentWake
// 0x0010 (0x0010 - 0x0000)
struct Bp_TransformSyncLiteComponent_C_ComponentWake final
{
public:
	class UPrimitiveComponent*                    WakingComponent;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   BoneName;                                          // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Bp_TransformSyncLiteComponent_C_ComponentWake) == 0x000008, "Wrong alignment on Bp_TransformSyncLiteComponent_C_ComponentWake");
static_assert(sizeof(Bp_TransformSyncLiteComponent_C_ComponentWake) == 0x000010, "Wrong size on Bp_TransformSyncLiteComponent_C_ComponentWake");
static_assert(offsetof(Bp_TransformSyncLiteComponent_C_ComponentWake, WakingComponent) == 0x000000, "Member 'Bp_TransformSyncLiteComponent_C_ComponentWake::WakingComponent' has a wrong offset!");
static_assert(offsetof(Bp_TransformSyncLiteComponent_C_ComponentWake, BoneName) == 0x000008, "Member 'Bp_TransformSyncLiteComponent_C_ComponentWake::BoneName' has a wrong offset!");

// Function Bp_TransformSyncLiteComponent.Bp_TransformSyncLiteComponent_C.Enable Sync
// 0x0002 (0x0002 - 0x0000)
struct Bp_TransformSyncLiteComponent_C_Enable_Sync final
{
public:
	bool                                          Enabled_0;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsServer_ReturnValue;                     // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Bp_TransformSyncLiteComponent_C_Enable_Sync) == 0x000001, "Wrong alignment on Bp_TransformSyncLiteComponent_C_Enable_Sync");
static_assert(sizeof(Bp_TransformSyncLiteComponent_C_Enable_Sync) == 0x000002, "Wrong size on Bp_TransformSyncLiteComponent_C_Enable_Sync");
static_assert(offsetof(Bp_TransformSyncLiteComponent_C_Enable_Sync, Enabled_0) == 0x000000, "Member 'Bp_TransformSyncLiteComponent_C_Enable_Sync::Enabled_0' has a wrong offset!");
static_assert(offsetof(Bp_TransformSyncLiteComponent_C_Enable_Sync, CallFunc_IsServer_ReturnValue) == 0x000001, "Member 'Bp_TransformSyncLiteComponent_C_Enable_Sync::CallFunc_IsServer_ReturnValue' has a wrong offset!");

// Function Bp_TransformSyncLiteComponent.Bp_TransformSyncLiteComponent_C.EnableRelativeSync
// 0x0008 (0x0008 - 0x0000)
struct Bp_TransformSyncLiteComponent_C_EnableRelativeSync final
{
public:
	class UPrimitiveComponent*                    RelativeComponent_0;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Bp_TransformSyncLiteComponent_C_EnableRelativeSync) == 0x000008, "Wrong alignment on Bp_TransformSyncLiteComponent_C_EnableRelativeSync");
static_assert(sizeof(Bp_TransformSyncLiteComponent_C_EnableRelativeSync) == 0x000008, "Wrong size on Bp_TransformSyncLiteComponent_C_EnableRelativeSync");
static_assert(offsetof(Bp_TransformSyncLiteComponent_C_EnableRelativeSync, RelativeComponent_0) == 0x000000, "Member 'Bp_TransformSyncLiteComponent_C_EnableRelativeSync::RelativeComponent_0' has a wrong offset!");

// Function Bp_TransformSyncLiteComponent.Bp_TransformSyncLiteComponent_C.ExecuteUbergraph_Bp_TransformSyncLiteComponent
// 0x0238 (0x0238 - 0x0000)
struct Bp_TransformSyncLiteComponent_C_ExecuteUbergraph_Bp_TransformSyncLiteComponent final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6[0x2];                                        // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USceneComponent*                        CallFunc_K2_GetRootComponent_ReturnValue;          // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_DynamicCast_AsPrimitive_Component;          // 0x0020(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    K2Node_CustomEvent_SleepingComponent;              // 0x0030(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_BoneName_1;                     // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_CustomEvent_WakingComponent;                // 0x0040(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_BoneName;                       // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UPrimitiveComponent* WakingComponent, class FName BoneName)> K2Node_CreateDelegate_OutputDelegate;              // 0x0054(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_64[0x4];                                       // 0x0064(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector_NetQuantize10                  K2Node_CustomEvent_InLocation_1;                   // 0x0068(0x0018)(NoDestructor, HasGetValueTypeHash)
	struct FVector_NetQuantize10                  K2Node_CustomEvent_InRotation_1;                   // 0x0080(0x0018)(NoDestructor, HasGetValueTypeHash)
	struct FVector_NetQuantize                    K2Node_CustomEvent_LinearVelocity_1;               // 0x0098(0x0018)(NoDestructor, HasGetValueTypeHash)
	struct FVector_NetQuantize                    K2Node_CustomEvent_AngularVelocity_1;              // 0x00B0(0x0018)(NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_CustomEvent_RelativeComponent;              // 0x00C8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetDefaultTickRate_ReturnValue;           // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector_NetQuantize10                  K2Node_CustomEvent_InLocation;                     // 0x00D8(0x0018)(NoDestructor, HasGetValueTypeHash)
	struct FVector_NetQuantize10                  K2Node_CustomEvent_InRotation;                     // 0x00F0(0x0018)(NoDestructor, HasGetValueTypeHash)
	struct FVector_NetQuantize                    K2Node_CustomEvent_LinearVelocity;                 // 0x0108(0x0018)(NoDestructor, HasGetValueTypeHash)
	struct FVector_NetQuantize                    K2Node_CustomEvent_AngularVelocity;                // 0x0120(0x0018)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsServer_ReturnValue;                     // 0x0138(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_139[0x7];                                      // 0x0139(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimer_ReturnValue;                  // 0x0140(0x0008)(NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x0148(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_K2_GetComponentRotation_ReturnValue;      // 0x0158(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x0170(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x0174(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x0178(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_17C[0x4];                                      // 0x017C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0180(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector_NetQuantize10                  CallFunc_MakeVector_NetQuantize10_ReturnValue;     // 0x0198(0x0018)(NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x01B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x01B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x01C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector_NetQuantize10                  CallFunc_MakeVector_NetQuantize10_ReturnValue_1;   // 0x01C8(0x0018)(NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_IsSimulating;                   // 0x01E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x01E1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x01E2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E3[0x5];                                      // 0x01E3(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x01E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UPrimitiveComponent* SleepingComponent, class FName BoneName)> K2Node_CreateDelegate_OutputDelegate_2;            // 0x01F0(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0200(0x0008)(NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_VariableSet_LocalDeltaSeconds_ImplicitCast; // 0x0208(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetComponentTickInterval_TickInterval_ImplicitCast; // 0x0210(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_K2_SetTimer_Time_ImplicitCast;            // 0x0214(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MakeVector_NetQuantize10_X_ImplicitCast;  // 0x0218(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MakeVector_NetQuantize10_Y_ImplicitCast;  // 0x0220(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MakeVector_NetQuantize10_Z_ImplicitCast;  // 0x0228(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_K2_SetTimerDelegate_Time_ImplicitCast;    // 0x0230(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Bp_TransformSyncLiteComponent_C_ExecuteUbergraph_Bp_TransformSyncLiteComponent) == 0x000008, "Wrong alignment on Bp_TransformSyncLiteComponent_C_ExecuteUbergraph_Bp_TransformSyncLiteComponent");
static_assert(sizeof(Bp_TransformSyncLiteComponent_C_ExecuteUbergraph_Bp_TransformSyncLiteComponent) == 0x000238, "Wrong size on Bp_TransformSyncLiteComponent_C_ExecuteUbergraph_Bp_TransformSyncLiteComponent");
static_assert(offsetof(Bp_TransformSyncLiteComponent_C_ExecuteUbergraph_Bp_TransformSyncLiteComponent, EntryPoint) == 0x000000, "Member 'Bp_TransformSyncLiteComponent_C_ExecuteUbergraph_Bp_TransformSyncLiteComponent::EntryPoint' has a wrong offset!");
static_assert(offsetof(Bp_TransformSyncLiteComponent_C_ExecuteUbergraph_Bp_TransformSyncLiteComponent, CallFunc_IsValid_ReturnValue) == 0x000004, "Member 'Bp_TransformSyncLiteComponent_C_ExecuteUbergraph_Bp_TransformSyncLiteComponent::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Bp_TransformSyncLiteComponent_C_ExecuteUbergraph_Bp_TransformSyncLiteComponent, CallFunc_IsValid_ReturnValue_1) == 0x000005, "Member 'Bp_TransformSyncLiteComponent_C_ExecuteUbergraph_Bp_TransformSyncLiteComponent::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Bp_TransformSyncLiteComponent_C_ExecuteUbergraph_Bp_TransformSyncLiteComponent, CallFunc_GetOwner_ReturnValue) == 0x000008, "Member 'Bp_TransformSyncLiteComponent_C_ExecuteUbergraph_Bp_TransformSyncLiteComponent::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(Bp_TransformSyncLiteComponent_C_ExecuteUbergraph_Bp_TransformSyncLiteComponent, CallFunc_IsValid_ReturnValue_2) == 0x000010, "Member 'Bp_TransformSyncLiteComponent_C_ExecuteUbergraph_Bp_TransformSyncLiteComponent::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Bp_TransformSyncLiteComponent_C_ExecuteUbergraph_Bp_TransformSyncLiteComponent, CallFunc_K2_GetRootComponent_ReturnValue) == 0x000018, "Member 'Bp_TransformSyncLiteComponent_C_ExecuteUbergraph_Bp_TransformSyncLiteComponent::CallFunc_K2_GetRootComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(Bp_TransformSyncLiteComponent_C_ExecuteUbergraph_Bp_TransformSyncLiteComponent, K2Node_DynamicCast_AsPrimitive_Component) == 0x000020, "Member 'Bp_TransformSyncLiteComponent_C_ExecuteUbergraph_Bp_TransformSyncLiteComponent::K2Node_DynamicCast_AsPrimitive_Component' has a wrong offset!");
static_assert(offsetof(Bp_TransformSyncLiteComponent_C_ExecuteUbergraph_Bp_TransformSyncLiteComponent, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'Bp_TransformSyncLiteComponent_C_ExecuteUbergraph_Bp_TransformSyncLiteComponent::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Bp_TransformSyncLiteComponent_C_ExecuteUbergraph_Bp_TransformSyncLiteComponent, K2Node_CustomEvent_SleepingComponent) == 0x000030, "Member 'Bp_TransformSyncLiteComponent_C_ExecuteUbergraph_Bp_TransformSyncLiteComponent::K2Node_CustomEvent_SleepingComponent' has a wrong offset!");
static_assert(offsetof(Bp_TransformSyncLiteComponent_C_ExecuteUbergraph_Bp_TransformSyncLiteComponent, K2Node_CustomEvent_BoneName_1) == 0x000038, "Member 'Bp_TransformSyncLiteComponent_C_ExecuteUbergraph_Bp_TransformSyncLiteComponent::K2Node_CustomEvent_BoneName_1' has a wrong offset!");
static_assert(offsetof(Bp_TransformSyncLiteComponent_C_ExecuteUbergraph_Bp_TransformSyncLiteComponent, K2Node_CustomEvent_WakingComponent) == 0x000040, "Member 'Bp_TransformSyncLiteComponent_C_ExecuteUbergraph_Bp_TransformSyncLiteComponent::K2Node_CustomEvent_WakingComponent' has a wrong offset!");
static_assert(offsetof(Bp_TransformSyncLiteComponent_C_ExecuteUbergraph_Bp_TransformSyncLiteComponent, K2Node_CustomEvent_BoneName) == 0x000048, "Member 'Bp_TransformSyncLiteComponent_C_ExecuteUbergraph_Bp_TransformSyncLiteComponent::K2Node_CustomEvent_BoneName' has a wrong offset!");
static_assert(offsetof(Bp_TransformSyncLiteComponent_C_ExecuteUbergraph_Bp_TransformSyncLiteComponent, K2Node_Event_DeltaSeconds) == 0x000050, "Member 'Bp_TransformSyncLiteComponent_C_ExecuteUbergraph_Bp_TransformSyncLiteComponent::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(Bp_TransformSyncLiteComponent_C_ExecuteUbergraph_Bp_TransformSyncLiteComponent, K2Node_CreateDelegate_OutputDelegate) == 0x000054, "Member 'Bp_TransformSyncLiteComponent_C_ExecuteUbergraph_Bp_TransformSyncLiteComponent::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(Bp_TransformSyncLiteComponent_C_ExecuteUbergraph_Bp_TransformSyncLiteComponent, K2Node_CustomEvent_InLocation_1) == 0x000068, "Member 'Bp_TransformSyncLiteComponent_C_ExecuteUbergraph_Bp_TransformSyncLiteComponent::K2Node_CustomEvent_InLocation_1' has a wrong offset!");
static_assert(offsetof(Bp_TransformSyncLiteComponent_C_ExecuteUbergraph_Bp_TransformSyncLiteComponent, K2Node_CustomEvent_InRotation_1) == 0x000080, "Member 'Bp_TransformSyncLiteComponent_C_ExecuteUbergraph_Bp_TransformSyncLiteComponent::K2Node_CustomEvent_InRotation_1' has a wrong offset!");
static_assert(offsetof(Bp_TransformSyncLiteComponent_C_ExecuteUbergraph_Bp_TransformSyncLiteComponent, K2Node_CustomEvent_LinearVelocity_1) == 0x000098, "Member 'Bp_TransformSyncLiteComponent_C_ExecuteUbergraph_Bp_TransformSyncLiteComponent::K2Node_CustomEvent_LinearVelocity_1' has a wrong offset!");
static_assert(offsetof(Bp_TransformSyncLiteComponent_C_ExecuteUbergraph_Bp_TransformSyncLiteComponent, K2Node_CustomEvent_AngularVelocity_1) == 0x0000B0, "Member 'Bp_TransformSyncLiteComponent_C_ExecuteUbergraph_Bp_TransformSyncLiteComponent::K2Node_CustomEvent_AngularVelocity_1' has a wrong offset!");
static_assert(offsetof(Bp_TransformSyncLiteComponent_C_ExecuteUbergraph_Bp_TransformSyncLiteComponent, K2Node_CustomEvent_RelativeComponent) == 0x0000C8, "Member 'Bp_TransformSyncLiteComponent_C_ExecuteUbergraph_Bp_TransformSyncLiteComponent::K2Node_CustomEvent_RelativeComponent' has a wrong offset!");
static_assert(offsetof(Bp_TransformSyncLiteComponent_C_ExecuteUbergraph_Bp_TransformSyncLiteComponent, CallFunc_GetDefaultTickRate_ReturnValue) == 0x0000D0, "Member 'Bp_TransformSyncLiteComponent_C_ExecuteUbergraph_Bp_TransformSyncLiteComponent::CallFunc_GetDefaultTickRate_ReturnValue' has a wrong offset!");
static_assert(offsetof(Bp_TransformSyncLiteComponent_C_ExecuteUbergraph_Bp_TransformSyncLiteComponent, K2Node_CustomEvent_InLocation) == 0x0000D8, "Member 'Bp_TransformSyncLiteComponent_C_ExecuteUbergraph_Bp_TransformSyncLiteComponent::K2Node_CustomEvent_InLocation' has a wrong offset!");
static_assert(offsetof(Bp_TransformSyncLiteComponent_C_ExecuteUbergraph_Bp_TransformSyncLiteComponent, K2Node_CustomEvent_InRotation) == 0x0000F0, "Member 'Bp_TransformSyncLiteComponent_C_ExecuteUbergraph_Bp_TransformSyncLiteComponent::K2Node_CustomEvent_InRotation' has a wrong offset!");
static_assert(offsetof(Bp_TransformSyncLiteComponent_C_ExecuteUbergraph_Bp_TransformSyncLiteComponent, K2Node_CustomEvent_LinearVelocity) == 0x000108, "Member 'Bp_TransformSyncLiteComponent_C_ExecuteUbergraph_Bp_TransformSyncLiteComponent::K2Node_CustomEvent_LinearVelocity' has a wrong offset!");
static_assert(offsetof(Bp_TransformSyncLiteComponent_C_ExecuteUbergraph_Bp_TransformSyncLiteComponent, K2Node_CustomEvent_AngularVelocity) == 0x000120, "Member 'Bp_TransformSyncLiteComponent_C_ExecuteUbergraph_Bp_TransformSyncLiteComponent::K2Node_CustomEvent_AngularVelocity' has a wrong offset!");
static_assert(offsetof(Bp_TransformSyncLiteComponent_C_ExecuteUbergraph_Bp_TransformSyncLiteComponent, CallFunc_IsServer_ReturnValue) == 0x000138, "Member 'Bp_TransformSyncLiteComponent_C_ExecuteUbergraph_Bp_TransformSyncLiteComponent::CallFunc_IsServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(Bp_TransformSyncLiteComponent_C_ExecuteUbergraph_Bp_TransformSyncLiteComponent, CallFunc_K2_SetTimer_ReturnValue) == 0x000140, "Member 'Bp_TransformSyncLiteComponent_C_ExecuteUbergraph_Bp_TransformSyncLiteComponent::CallFunc_K2_SetTimer_ReturnValue' has a wrong offset!");
static_assert(offsetof(Bp_TransformSyncLiteComponent_C_ExecuteUbergraph_Bp_TransformSyncLiteComponent, K2Node_CreateDelegate_OutputDelegate_1) == 0x000148, "Member 'Bp_TransformSyncLiteComponent_C_ExecuteUbergraph_Bp_TransformSyncLiteComponent::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(Bp_TransformSyncLiteComponent_C_ExecuteUbergraph_Bp_TransformSyncLiteComponent, CallFunc_K2_GetComponentRotation_ReturnValue) == 0x000158, "Member 'Bp_TransformSyncLiteComponent_C_ExecuteUbergraph_Bp_TransformSyncLiteComponent::CallFunc_K2_GetComponentRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Bp_TransformSyncLiteComponent_C_ExecuteUbergraph_Bp_TransformSyncLiteComponent, CallFunc_BreakRotator_Roll) == 0x000170, "Member 'Bp_TransformSyncLiteComponent_C_ExecuteUbergraph_Bp_TransformSyncLiteComponent::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(Bp_TransformSyncLiteComponent_C_ExecuteUbergraph_Bp_TransformSyncLiteComponent, CallFunc_BreakRotator_Pitch) == 0x000174, "Member 'Bp_TransformSyncLiteComponent_C_ExecuteUbergraph_Bp_TransformSyncLiteComponent::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(Bp_TransformSyncLiteComponent_C_ExecuteUbergraph_Bp_TransformSyncLiteComponent, CallFunc_BreakRotator_Yaw) == 0x000178, "Member 'Bp_TransformSyncLiteComponent_C_ExecuteUbergraph_Bp_TransformSyncLiteComponent::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(Bp_TransformSyncLiteComponent_C_ExecuteUbergraph_Bp_TransformSyncLiteComponent, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000180, "Member 'Bp_TransformSyncLiteComponent_C_ExecuteUbergraph_Bp_TransformSyncLiteComponent::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Bp_TransformSyncLiteComponent_C_ExecuteUbergraph_Bp_TransformSyncLiteComponent, CallFunc_MakeVector_NetQuantize10_ReturnValue) == 0x000198, "Member 'Bp_TransformSyncLiteComponent_C_ExecuteUbergraph_Bp_TransformSyncLiteComponent::CallFunc_MakeVector_NetQuantize10_ReturnValue' has a wrong offset!");
static_assert(offsetof(Bp_TransformSyncLiteComponent_C_ExecuteUbergraph_Bp_TransformSyncLiteComponent, CallFunc_BreakVector_X) == 0x0001B0, "Member 'Bp_TransformSyncLiteComponent_C_ExecuteUbergraph_Bp_TransformSyncLiteComponent::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(Bp_TransformSyncLiteComponent_C_ExecuteUbergraph_Bp_TransformSyncLiteComponent, CallFunc_BreakVector_Y) == 0x0001B8, "Member 'Bp_TransformSyncLiteComponent_C_ExecuteUbergraph_Bp_TransformSyncLiteComponent::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(Bp_TransformSyncLiteComponent_C_ExecuteUbergraph_Bp_TransformSyncLiteComponent, CallFunc_BreakVector_Z) == 0x0001C0, "Member 'Bp_TransformSyncLiteComponent_C_ExecuteUbergraph_Bp_TransformSyncLiteComponent::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(Bp_TransformSyncLiteComponent_C_ExecuteUbergraph_Bp_TransformSyncLiteComponent, CallFunc_MakeVector_NetQuantize10_ReturnValue_1) == 0x0001C8, "Member 'Bp_TransformSyncLiteComponent_C_ExecuteUbergraph_Bp_TransformSyncLiteComponent::CallFunc_MakeVector_NetQuantize10_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Bp_TransformSyncLiteComponent_C_ExecuteUbergraph_Bp_TransformSyncLiteComponent, K2Node_CustomEvent_IsSimulating) == 0x0001E0, "Member 'Bp_TransformSyncLiteComponent_C_ExecuteUbergraph_Bp_TransformSyncLiteComponent::K2Node_CustomEvent_IsSimulating' has a wrong offset!");
static_assert(offsetof(Bp_TransformSyncLiteComponent_C_ExecuteUbergraph_Bp_TransformSyncLiteComponent, CallFunc_BooleanAND_ReturnValue) == 0x0001E1, "Member 'Bp_TransformSyncLiteComponent_C_ExecuteUbergraph_Bp_TransformSyncLiteComponent::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(Bp_TransformSyncLiteComponent_C_ExecuteUbergraph_Bp_TransformSyncLiteComponent, CallFunc_IsValid_ReturnValue_3) == 0x0001E2, "Member 'Bp_TransformSyncLiteComponent_C_ExecuteUbergraph_Bp_TransformSyncLiteComponent::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Bp_TransformSyncLiteComponent_C_ExecuteUbergraph_Bp_TransformSyncLiteComponent, CallFunc_SelectFloat_ReturnValue) == 0x0001E8, "Member 'Bp_TransformSyncLiteComponent_C_ExecuteUbergraph_Bp_TransformSyncLiteComponent::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Bp_TransformSyncLiteComponent_C_ExecuteUbergraph_Bp_TransformSyncLiteComponent, K2Node_CreateDelegate_OutputDelegate_2) == 0x0001F0, "Member 'Bp_TransformSyncLiteComponent_C_ExecuteUbergraph_Bp_TransformSyncLiteComponent::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(Bp_TransformSyncLiteComponent_C_ExecuteUbergraph_Bp_TransformSyncLiteComponent, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000200, "Member 'Bp_TransformSyncLiteComponent_C_ExecuteUbergraph_Bp_TransformSyncLiteComponent::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(Bp_TransformSyncLiteComponent_C_ExecuteUbergraph_Bp_TransformSyncLiteComponent, K2Node_VariableSet_LocalDeltaSeconds_ImplicitCast) == 0x000208, "Member 'Bp_TransformSyncLiteComponent_C_ExecuteUbergraph_Bp_TransformSyncLiteComponent::K2Node_VariableSet_LocalDeltaSeconds_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Bp_TransformSyncLiteComponent_C_ExecuteUbergraph_Bp_TransformSyncLiteComponent, CallFunc_SetComponentTickInterval_TickInterval_ImplicitCast) == 0x000210, "Member 'Bp_TransformSyncLiteComponent_C_ExecuteUbergraph_Bp_TransformSyncLiteComponent::CallFunc_SetComponentTickInterval_TickInterval_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Bp_TransformSyncLiteComponent_C_ExecuteUbergraph_Bp_TransformSyncLiteComponent, CallFunc_K2_SetTimer_Time_ImplicitCast) == 0x000214, "Member 'Bp_TransformSyncLiteComponent_C_ExecuteUbergraph_Bp_TransformSyncLiteComponent::CallFunc_K2_SetTimer_Time_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Bp_TransformSyncLiteComponent_C_ExecuteUbergraph_Bp_TransformSyncLiteComponent, CallFunc_MakeVector_NetQuantize10_X_ImplicitCast) == 0x000218, "Member 'Bp_TransformSyncLiteComponent_C_ExecuteUbergraph_Bp_TransformSyncLiteComponent::CallFunc_MakeVector_NetQuantize10_X_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Bp_TransformSyncLiteComponent_C_ExecuteUbergraph_Bp_TransformSyncLiteComponent, CallFunc_MakeVector_NetQuantize10_Y_ImplicitCast) == 0x000220, "Member 'Bp_TransformSyncLiteComponent_C_ExecuteUbergraph_Bp_TransformSyncLiteComponent::CallFunc_MakeVector_NetQuantize10_Y_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Bp_TransformSyncLiteComponent_C_ExecuteUbergraph_Bp_TransformSyncLiteComponent, CallFunc_MakeVector_NetQuantize10_Z_ImplicitCast) == 0x000228, "Member 'Bp_TransformSyncLiteComponent_C_ExecuteUbergraph_Bp_TransformSyncLiteComponent::CallFunc_MakeVector_NetQuantize10_Z_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Bp_TransformSyncLiteComponent_C_ExecuteUbergraph_Bp_TransformSyncLiteComponent, CallFunc_K2_SetTimerDelegate_Time_ImplicitCast) == 0x000230, "Member 'Bp_TransformSyncLiteComponent_C_ExecuteUbergraph_Bp_TransformSyncLiteComponent::CallFunc_K2_SetTimerDelegate_Time_ImplicitCast' has a wrong offset!");

// Function Bp_TransformSyncLiteComponent.Bp_TransformSyncLiteComponent_C.GetDefaultTickRate
// 0x0020 (0x0020 - 0x0000)
struct Bp_TransformSyncLiteComponent_C_GetDefaultTickRate final
{
public:
	double                                        ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_DoubleDouble_ReturnValue;        // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_1;        // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Bp_TransformSyncLiteComponent_C_GetDefaultTickRate) == 0x000008, "Wrong alignment on Bp_TransformSyncLiteComponent_C_GetDefaultTickRate");
static_assert(sizeof(Bp_TransformSyncLiteComponent_C_GetDefaultTickRate) == 0x000020, "Wrong size on Bp_TransformSyncLiteComponent_C_GetDefaultTickRate");
static_assert(offsetof(Bp_TransformSyncLiteComponent_C_GetDefaultTickRate, ReturnValue) == 0x000000, "Member 'Bp_TransformSyncLiteComponent_C_GetDefaultTickRate::ReturnValue' has a wrong offset!");
static_assert(offsetof(Bp_TransformSyncLiteComponent_C_GetDefaultTickRate, CallFunc_NotEqual_DoubleDouble_ReturnValue) == 0x000008, "Member 'Bp_TransformSyncLiteComponent_C_GetDefaultTickRate::CallFunc_NotEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Bp_TransformSyncLiteComponent_C_GetDefaultTickRate, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000010, "Member 'Bp_TransformSyncLiteComponent_C_GetDefaultTickRate::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Bp_TransformSyncLiteComponent_C_GetDefaultTickRate, CallFunc_Divide_DoubleDouble_ReturnValue_1) == 0x000018, "Member 'Bp_TransformSyncLiteComponent_C_GetDefaultTickRate::CallFunc_Divide_DoubleDouble_ReturnValue_1' has a wrong offset!");

// Function Bp_TransformSyncLiteComponent.Bp_TransformSyncLiteComponent_C.IsLocallyControlled
// 0x0001 (0x0001 - 0x0000)
struct Bp_TransformSyncLiteComponent_C_IsLocallyControlled final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Bp_TransformSyncLiteComponent_C_IsLocallyControlled) == 0x000001, "Wrong alignment on Bp_TransformSyncLiteComponent_C_IsLocallyControlled");
static_assert(sizeof(Bp_TransformSyncLiteComponent_C_IsLocallyControlled) == 0x000001, "Wrong size on Bp_TransformSyncLiteComponent_C_IsLocallyControlled");
static_assert(offsetof(Bp_TransformSyncLiteComponent_C_IsLocallyControlled, ReturnValue) == 0x000000, "Member 'Bp_TransformSyncLiteComponent_C_IsLocallyControlled::ReturnValue' has a wrong offset!");

// Function Bp_TransformSyncLiteComponent.Bp_TransformSyncLiteComponent_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct Bp_TransformSyncLiteComponent_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Bp_TransformSyncLiteComponent_C_ReceiveTick) == 0x000004, "Wrong alignment on Bp_TransformSyncLiteComponent_C_ReceiveTick");
static_assert(sizeof(Bp_TransformSyncLiteComponent_C_ReceiveTick) == 0x000004, "Wrong size on Bp_TransformSyncLiteComponent_C_ReceiveTick");
static_assert(offsetof(Bp_TransformSyncLiteComponent_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'Bp_TransformSyncLiteComponent_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function Bp_TransformSyncLiteComponent.Bp_TransformSyncLiteComponent_C.ResetCoordinates
// 0x0490 (0x0490 - 0x0000)
struct Bp_TransformSyncLiteComponent_C_ResetCoordinates final
{
public:
	class UPrimitiveComponent*                    RelativeComponent_0;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8[0x8];                                        // 0x0008(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_K2_GetComponentToWorld_ReturnValue;       // 0x0010(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_K2_GetComponentToWorld_ReturnValue_1;     // 0x0070(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D1[0x7];                                       // 0x00D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_BreakVector_NetQuantize10_X;              // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_NetQuantize10_Y;              // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_NetQuantize10_Z;              // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x00F0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_108[0x8];                                      // 0x0108(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_K2_GetComponentToWorld_ReturnValue_2;     // 0x0110(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_MakeRelativeTransform_ReturnValue;        // 0x0170(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetPhysicsAngularVelocityInRadians_ReturnValue; // 0x01D0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x01E8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x0200(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x0218(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_InverseTransformDirection_ReturnValue;    // 0x0230(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x0248(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x024C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x0250(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_254[0x4];                                      // 0x0254(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_BreakVector_X;                            // 0x0258(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0260(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0268(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector_NetQuantize10                  CallFunc_MakeVector_NetQuantize10_ReturnValue;     // 0x0270(0x0018)(NoDestructor, HasGetValueTypeHash)
	struct FVector_NetQuantize                    CallFunc_MakeVector_NetQuantize_ReturnValue;       // 0x0288(0x0018)(NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X_1;                          // 0x02A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_1;                          // 0x02A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_1;                          // 0x02B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector_NetQuantize10                  CallFunc_MakeVector_NetQuantize10_ReturnValue_1;   // 0x02B8(0x0018)(NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetPhysicsLinearVelocity_ReturnValue;     // 0x02D0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_InverseTransformDirection_ReturnValue_1;  // 0x02E8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X_2;                          // 0x0300(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_2;                          // 0x0308(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_2;                          // 0x0310(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetPhysicsAngularVelocityInRadians_ReturnValue_1; // 0x0318(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector_NetQuantize                    CallFunc_MakeVector_NetQuantize_ReturnValue_1;     // 0x0330(0x0018)(NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X_3;                          // 0x0348(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_3;                          // 0x0350(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_3;                          // 0x0358(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector_NetQuantize                    CallFunc_MakeVector_NetQuantize_ReturnValue_2;     // 0x0360(0x0018)(NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetPhysicsLinearVelocity_ReturnValue_1;   // 0x0378(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X_4;                          // 0x0390(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_4;                          // 0x0398(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_4;                          // 0x03A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_K2_GetComponentRotation_ReturnValue;      // 0x03A8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector_NetQuantize                    CallFunc_MakeVector_NetQuantize_ReturnValue_3;     // 0x03C0(0x0018)(NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Roll_1;                      // 0x03D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch_1;                     // 0x03DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw_1;                       // 0x03E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3E4[0x4];                                      // 0x03E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector_NetQuantize10                  CallFunc_MakeVector_NetQuantize10_ReturnValue_2;   // 0x03E8(0x0018)(NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0400(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X_5;                          // 0x0418(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_5;                          // 0x0420(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_5;                          // 0x0428(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector_NetQuantize10                  CallFunc_MakeVector_NetQuantize10_ReturnValue_3;   // 0x0430(0x0018)(NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeRotator_Roll_ImplicitCast;            // 0x0448(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeRotator_Pitch_ImplicitCast;           // 0x044C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeRotator_Yaw_ImplicitCast;             // 0x0450(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_454[0x4];                                      // 0x0454(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_MakeVector_NetQuantize10_X_ImplicitCast;  // 0x0458(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MakeVector_NetQuantize10_Y_ImplicitCast;  // 0x0460(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MakeVector_NetQuantize10_Z_ImplicitCast;  // 0x0468(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MakeVector_NetQuantize10_X_ImplicitCast_1; // 0x0470(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MakeVector_NetQuantize10_Y_ImplicitCast_1; // 0x0478(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MakeVector_NetQuantize10_Z_ImplicitCast_1; // 0x0480(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Bp_TransformSyncLiteComponent_C_ResetCoordinates) == 0x000010, "Wrong alignment on Bp_TransformSyncLiteComponent_C_ResetCoordinates");
static_assert(sizeof(Bp_TransformSyncLiteComponent_C_ResetCoordinates) == 0x000490, "Wrong size on Bp_TransformSyncLiteComponent_C_ResetCoordinates");
static_assert(offsetof(Bp_TransformSyncLiteComponent_C_ResetCoordinates, RelativeComponent_0) == 0x000000, "Member 'Bp_TransformSyncLiteComponent_C_ResetCoordinates::RelativeComponent_0' has a wrong offset!");
static_assert(offsetof(Bp_TransformSyncLiteComponent_C_ResetCoordinates, CallFunc_K2_GetComponentToWorld_ReturnValue) == 0x000010, "Member 'Bp_TransformSyncLiteComponent_C_ResetCoordinates::CallFunc_K2_GetComponentToWorld_ReturnValue' has a wrong offset!");
static_assert(offsetof(Bp_TransformSyncLiteComponent_C_ResetCoordinates, CallFunc_K2_GetComponentToWorld_ReturnValue_1) == 0x000070, "Member 'Bp_TransformSyncLiteComponent_C_ResetCoordinates::CallFunc_K2_GetComponentToWorld_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Bp_TransformSyncLiteComponent_C_ResetCoordinates, CallFunc_IsValid_ReturnValue) == 0x0000D0, "Member 'Bp_TransformSyncLiteComponent_C_ResetCoordinates::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Bp_TransformSyncLiteComponent_C_ResetCoordinates, CallFunc_BreakVector_NetQuantize10_X) == 0x0000D8, "Member 'Bp_TransformSyncLiteComponent_C_ResetCoordinates::CallFunc_BreakVector_NetQuantize10_X' has a wrong offset!");
static_assert(offsetof(Bp_TransformSyncLiteComponent_C_ResetCoordinates, CallFunc_BreakVector_NetQuantize10_Y) == 0x0000E0, "Member 'Bp_TransformSyncLiteComponent_C_ResetCoordinates::CallFunc_BreakVector_NetQuantize10_Y' has a wrong offset!");
static_assert(offsetof(Bp_TransformSyncLiteComponent_C_ResetCoordinates, CallFunc_BreakVector_NetQuantize10_Z) == 0x0000E8, "Member 'Bp_TransformSyncLiteComponent_C_ResetCoordinates::CallFunc_BreakVector_NetQuantize10_Z' has a wrong offset!");
static_assert(offsetof(Bp_TransformSyncLiteComponent_C_ResetCoordinates, CallFunc_MakeRotator_ReturnValue) == 0x0000F0, "Member 'Bp_TransformSyncLiteComponent_C_ResetCoordinates::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(Bp_TransformSyncLiteComponent_C_ResetCoordinates, CallFunc_K2_GetComponentToWorld_ReturnValue_2) == 0x000110, "Member 'Bp_TransformSyncLiteComponent_C_ResetCoordinates::CallFunc_K2_GetComponentToWorld_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Bp_TransformSyncLiteComponent_C_ResetCoordinates, CallFunc_MakeRelativeTransform_ReturnValue) == 0x000170, "Member 'Bp_TransformSyncLiteComponent_C_ResetCoordinates::CallFunc_MakeRelativeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(Bp_TransformSyncLiteComponent_C_ResetCoordinates, CallFunc_GetPhysicsAngularVelocityInRadians_ReturnValue) == 0x0001D0, "Member 'Bp_TransformSyncLiteComponent_C_ResetCoordinates::CallFunc_GetPhysicsAngularVelocityInRadians_ReturnValue' has a wrong offset!");
static_assert(offsetof(Bp_TransformSyncLiteComponent_C_ResetCoordinates, CallFunc_BreakTransform_Location) == 0x0001E8, "Member 'Bp_TransformSyncLiteComponent_C_ResetCoordinates::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(Bp_TransformSyncLiteComponent_C_ResetCoordinates, CallFunc_BreakTransform_Rotation) == 0x000200, "Member 'Bp_TransformSyncLiteComponent_C_ResetCoordinates::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(Bp_TransformSyncLiteComponent_C_ResetCoordinates, CallFunc_BreakTransform_Scale) == 0x000218, "Member 'Bp_TransformSyncLiteComponent_C_ResetCoordinates::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(Bp_TransformSyncLiteComponent_C_ResetCoordinates, CallFunc_InverseTransformDirection_ReturnValue) == 0x000230, "Member 'Bp_TransformSyncLiteComponent_C_ResetCoordinates::CallFunc_InverseTransformDirection_ReturnValue' has a wrong offset!");
static_assert(offsetof(Bp_TransformSyncLiteComponent_C_ResetCoordinates, CallFunc_BreakRotator_Roll) == 0x000248, "Member 'Bp_TransformSyncLiteComponent_C_ResetCoordinates::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(Bp_TransformSyncLiteComponent_C_ResetCoordinates, CallFunc_BreakRotator_Pitch) == 0x00024C, "Member 'Bp_TransformSyncLiteComponent_C_ResetCoordinates::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(Bp_TransformSyncLiteComponent_C_ResetCoordinates, CallFunc_BreakRotator_Yaw) == 0x000250, "Member 'Bp_TransformSyncLiteComponent_C_ResetCoordinates::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(Bp_TransformSyncLiteComponent_C_ResetCoordinates, CallFunc_BreakVector_X) == 0x000258, "Member 'Bp_TransformSyncLiteComponent_C_ResetCoordinates::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(Bp_TransformSyncLiteComponent_C_ResetCoordinates, CallFunc_BreakVector_Y) == 0x000260, "Member 'Bp_TransformSyncLiteComponent_C_ResetCoordinates::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(Bp_TransformSyncLiteComponent_C_ResetCoordinates, CallFunc_BreakVector_Z) == 0x000268, "Member 'Bp_TransformSyncLiteComponent_C_ResetCoordinates::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(Bp_TransformSyncLiteComponent_C_ResetCoordinates, CallFunc_MakeVector_NetQuantize10_ReturnValue) == 0x000270, "Member 'Bp_TransformSyncLiteComponent_C_ResetCoordinates::CallFunc_MakeVector_NetQuantize10_ReturnValue' has a wrong offset!");
static_assert(offsetof(Bp_TransformSyncLiteComponent_C_ResetCoordinates, CallFunc_MakeVector_NetQuantize_ReturnValue) == 0x000288, "Member 'Bp_TransformSyncLiteComponent_C_ResetCoordinates::CallFunc_MakeVector_NetQuantize_ReturnValue' has a wrong offset!");
static_assert(offsetof(Bp_TransformSyncLiteComponent_C_ResetCoordinates, CallFunc_BreakVector_X_1) == 0x0002A0, "Member 'Bp_TransformSyncLiteComponent_C_ResetCoordinates::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(Bp_TransformSyncLiteComponent_C_ResetCoordinates, CallFunc_BreakVector_Y_1) == 0x0002A8, "Member 'Bp_TransformSyncLiteComponent_C_ResetCoordinates::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(Bp_TransformSyncLiteComponent_C_ResetCoordinates, CallFunc_BreakVector_Z_1) == 0x0002B0, "Member 'Bp_TransformSyncLiteComponent_C_ResetCoordinates::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(Bp_TransformSyncLiteComponent_C_ResetCoordinates, CallFunc_MakeVector_NetQuantize10_ReturnValue_1) == 0x0002B8, "Member 'Bp_TransformSyncLiteComponent_C_ResetCoordinates::CallFunc_MakeVector_NetQuantize10_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Bp_TransformSyncLiteComponent_C_ResetCoordinates, CallFunc_GetPhysicsLinearVelocity_ReturnValue) == 0x0002D0, "Member 'Bp_TransformSyncLiteComponent_C_ResetCoordinates::CallFunc_GetPhysicsLinearVelocity_ReturnValue' has a wrong offset!");
static_assert(offsetof(Bp_TransformSyncLiteComponent_C_ResetCoordinates, CallFunc_InverseTransformDirection_ReturnValue_1) == 0x0002E8, "Member 'Bp_TransformSyncLiteComponent_C_ResetCoordinates::CallFunc_InverseTransformDirection_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Bp_TransformSyncLiteComponent_C_ResetCoordinates, CallFunc_BreakVector_X_2) == 0x000300, "Member 'Bp_TransformSyncLiteComponent_C_ResetCoordinates::CallFunc_BreakVector_X_2' has a wrong offset!");
static_assert(offsetof(Bp_TransformSyncLiteComponent_C_ResetCoordinates, CallFunc_BreakVector_Y_2) == 0x000308, "Member 'Bp_TransformSyncLiteComponent_C_ResetCoordinates::CallFunc_BreakVector_Y_2' has a wrong offset!");
static_assert(offsetof(Bp_TransformSyncLiteComponent_C_ResetCoordinates, CallFunc_BreakVector_Z_2) == 0x000310, "Member 'Bp_TransformSyncLiteComponent_C_ResetCoordinates::CallFunc_BreakVector_Z_2' has a wrong offset!");
static_assert(offsetof(Bp_TransformSyncLiteComponent_C_ResetCoordinates, CallFunc_GetPhysicsAngularVelocityInRadians_ReturnValue_1) == 0x000318, "Member 'Bp_TransformSyncLiteComponent_C_ResetCoordinates::CallFunc_GetPhysicsAngularVelocityInRadians_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Bp_TransformSyncLiteComponent_C_ResetCoordinates, CallFunc_MakeVector_NetQuantize_ReturnValue_1) == 0x000330, "Member 'Bp_TransformSyncLiteComponent_C_ResetCoordinates::CallFunc_MakeVector_NetQuantize_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Bp_TransformSyncLiteComponent_C_ResetCoordinates, CallFunc_BreakVector_X_3) == 0x000348, "Member 'Bp_TransformSyncLiteComponent_C_ResetCoordinates::CallFunc_BreakVector_X_3' has a wrong offset!");
static_assert(offsetof(Bp_TransformSyncLiteComponent_C_ResetCoordinates, CallFunc_BreakVector_Y_3) == 0x000350, "Member 'Bp_TransformSyncLiteComponent_C_ResetCoordinates::CallFunc_BreakVector_Y_3' has a wrong offset!");
static_assert(offsetof(Bp_TransformSyncLiteComponent_C_ResetCoordinates, CallFunc_BreakVector_Z_3) == 0x000358, "Member 'Bp_TransformSyncLiteComponent_C_ResetCoordinates::CallFunc_BreakVector_Z_3' has a wrong offset!");
static_assert(offsetof(Bp_TransformSyncLiteComponent_C_ResetCoordinates, CallFunc_MakeVector_NetQuantize_ReturnValue_2) == 0x000360, "Member 'Bp_TransformSyncLiteComponent_C_ResetCoordinates::CallFunc_MakeVector_NetQuantize_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Bp_TransformSyncLiteComponent_C_ResetCoordinates, CallFunc_GetPhysicsLinearVelocity_ReturnValue_1) == 0x000378, "Member 'Bp_TransformSyncLiteComponent_C_ResetCoordinates::CallFunc_GetPhysicsLinearVelocity_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Bp_TransformSyncLiteComponent_C_ResetCoordinates, CallFunc_BreakVector_X_4) == 0x000390, "Member 'Bp_TransformSyncLiteComponent_C_ResetCoordinates::CallFunc_BreakVector_X_4' has a wrong offset!");
static_assert(offsetof(Bp_TransformSyncLiteComponent_C_ResetCoordinates, CallFunc_BreakVector_Y_4) == 0x000398, "Member 'Bp_TransformSyncLiteComponent_C_ResetCoordinates::CallFunc_BreakVector_Y_4' has a wrong offset!");
static_assert(offsetof(Bp_TransformSyncLiteComponent_C_ResetCoordinates, CallFunc_BreakVector_Z_4) == 0x0003A0, "Member 'Bp_TransformSyncLiteComponent_C_ResetCoordinates::CallFunc_BreakVector_Z_4' has a wrong offset!");
static_assert(offsetof(Bp_TransformSyncLiteComponent_C_ResetCoordinates, CallFunc_K2_GetComponentRotation_ReturnValue) == 0x0003A8, "Member 'Bp_TransformSyncLiteComponent_C_ResetCoordinates::CallFunc_K2_GetComponentRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Bp_TransformSyncLiteComponent_C_ResetCoordinates, CallFunc_MakeVector_NetQuantize_ReturnValue_3) == 0x0003C0, "Member 'Bp_TransformSyncLiteComponent_C_ResetCoordinates::CallFunc_MakeVector_NetQuantize_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Bp_TransformSyncLiteComponent_C_ResetCoordinates, CallFunc_BreakRotator_Roll_1) == 0x0003D8, "Member 'Bp_TransformSyncLiteComponent_C_ResetCoordinates::CallFunc_BreakRotator_Roll_1' has a wrong offset!");
static_assert(offsetof(Bp_TransformSyncLiteComponent_C_ResetCoordinates, CallFunc_BreakRotator_Pitch_1) == 0x0003DC, "Member 'Bp_TransformSyncLiteComponent_C_ResetCoordinates::CallFunc_BreakRotator_Pitch_1' has a wrong offset!");
static_assert(offsetof(Bp_TransformSyncLiteComponent_C_ResetCoordinates, CallFunc_BreakRotator_Yaw_1) == 0x0003E0, "Member 'Bp_TransformSyncLiteComponent_C_ResetCoordinates::CallFunc_BreakRotator_Yaw_1' has a wrong offset!");
static_assert(offsetof(Bp_TransformSyncLiteComponent_C_ResetCoordinates, CallFunc_MakeVector_NetQuantize10_ReturnValue_2) == 0x0003E8, "Member 'Bp_TransformSyncLiteComponent_C_ResetCoordinates::CallFunc_MakeVector_NetQuantize10_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Bp_TransformSyncLiteComponent_C_ResetCoordinates, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000400, "Member 'Bp_TransformSyncLiteComponent_C_ResetCoordinates::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Bp_TransformSyncLiteComponent_C_ResetCoordinates, CallFunc_BreakVector_X_5) == 0x000418, "Member 'Bp_TransformSyncLiteComponent_C_ResetCoordinates::CallFunc_BreakVector_X_5' has a wrong offset!");
static_assert(offsetof(Bp_TransformSyncLiteComponent_C_ResetCoordinates, CallFunc_BreakVector_Y_5) == 0x000420, "Member 'Bp_TransformSyncLiteComponent_C_ResetCoordinates::CallFunc_BreakVector_Y_5' has a wrong offset!");
static_assert(offsetof(Bp_TransformSyncLiteComponent_C_ResetCoordinates, CallFunc_BreakVector_Z_5) == 0x000428, "Member 'Bp_TransformSyncLiteComponent_C_ResetCoordinates::CallFunc_BreakVector_Z_5' has a wrong offset!");
static_assert(offsetof(Bp_TransformSyncLiteComponent_C_ResetCoordinates, CallFunc_MakeVector_NetQuantize10_ReturnValue_3) == 0x000430, "Member 'Bp_TransformSyncLiteComponent_C_ResetCoordinates::CallFunc_MakeVector_NetQuantize10_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Bp_TransformSyncLiteComponent_C_ResetCoordinates, CallFunc_MakeRotator_Roll_ImplicitCast) == 0x000448, "Member 'Bp_TransformSyncLiteComponent_C_ResetCoordinates::CallFunc_MakeRotator_Roll_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Bp_TransformSyncLiteComponent_C_ResetCoordinates, CallFunc_MakeRotator_Pitch_ImplicitCast) == 0x00044C, "Member 'Bp_TransformSyncLiteComponent_C_ResetCoordinates::CallFunc_MakeRotator_Pitch_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Bp_TransformSyncLiteComponent_C_ResetCoordinates, CallFunc_MakeRotator_Yaw_ImplicitCast) == 0x000450, "Member 'Bp_TransformSyncLiteComponent_C_ResetCoordinates::CallFunc_MakeRotator_Yaw_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Bp_TransformSyncLiteComponent_C_ResetCoordinates, CallFunc_MakeVector_NetQuantize10_X_ImplicitCast) == 0x000458, "Member 'Bp_TransformSyncLiteComponent_C_ResetCoordinates::CallFunc_MakeVector_NetQuantize10_X_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Bp_TransformSyncLiteComponent_C_ResetCoordinates, CallFunc_MakeVector_NetQuantize10_Y_ImplicitCast) == 0x000460, "Member 'Bp_TransformSyncLiteComponent_C_ResetCoordinates::CallFunc_MakeVector_NetQuantize10_Y_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Bp_TransformSyncLiteComponent_C_ResetCoordinates, CallFunc_MakeVector_NetQuantize10_Z_ImplicitCast) == 0x000468, "Member 'Bp_TransformSyncLiteComponent_C_ResetCoordinates::CallFunc_MakeVector_NetQuantize10_Z_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Bp_TransformSyncLiteComponent_C_ResetCoordinates, CallFunc_MakeVector_NetQuantize10_X_ImplicitCast_1) == 0x000470, "Member 'Bp_TransformSyncLiteComponent_C_ResetCoordinates::CallFunc_MakeVector_NetQuantize10_X_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(Bp_TransformSyncLiteComponent_C_ResetCoordinates, CallFunc_MakeVector_NetQuantize10_Y_ImplicitCast_1) == 0x000478, "Member 'Bp_TransformSyncLiteComponent_C_ResetCoordinates::CallFunc_MakeVector_NetQuantize10_Y_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(Bp_TransformSyncLiteComponent_C_ResetCoordinates, CallFunc_MakeVector_NetQuantize10_Z_ImplicitCast_1) == 0x000480, "Member 'Bp_TransformSyncLiteComponent_C_ResetCoordinates::CallFunc_MakeVector_NetQuantize10_Z_ImplicitCast_1' has a wrong offset!");

// Function Bp_TransformSyncLiteComponent.Bp_TransformSyncLiteComponent_C.SelectReceivePhysicsDataFPS
// 0x0030 (0x0030 - 0x0000)
struct Bp_TransformSyncLiteComponent_C_SelectReceivePhysicsDataFPS final
{
public:
	int32                                         TickGroup;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        TickInterval;                                      // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_Select_Default;                             // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_DoubleDouble_ReturnValue;      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Bp_TransformSyncLiteComponent_C_SelectReceivePhysicsDataFPS) == 0x000008, "Wrong alignment on Bp_TransformSyncLiteComponent_C_SelectReceivePhysicsDataFPS");
static_assert(sizeof(Bp_TransformSyncLiteComponent_C_SelectReceivePhysicsDataFPS) == 0x000030, "Wrong size on Bp_TransformSyncLiteComponent_C_SelectReceivePhysicsDataFPS");
static_assert(offsetof(Bp_TransformSyncLiteComponent_C_SelectReceivePhysicsDataFPS, TickGroup) == 0x000000, "Member 'Bp_TransformSyncLiteComponent_C_SelectReceivePhysicsDataFPS::TickGroup' has a wrong offset!");
static_assert(offsetof(Bp_TransformSyncLiteComponent_C_SelectReceivePhysicsDataFPS, TickInterval) == 0x000008, "Member 'Bp_TransformSyncLiteComponent_C_SelectReceivePhysicsDataFPS::TickInterval' has a wrong offset!");
static_assert(offsetof(Bp_TransformSyncLiteComponent_C_SelectReceivePhysicsDataFPS, Temp_int_Variable) == 0x000010, "Member 'Bp_TransformSyncLiteComponent_C_SelectReceivePhysicsDataFPS::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(Bp_TransformSyncLiteComponent_C_SelectReceivePhysicsDataFPS, K2Node_Select_Default) == 0x000018, "Member 'Bp_TransformSyncLiteComponent_C_SelectReceivePhysicsDataFPS::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(Bp_TransformSyncLiteComponent_C_SelectReceivePhysicsDataFPS, CallFunc_EqualEqual_DoubleDouble_ReturnValue) == 0x000020, "Member 'Bp_TransformSyncLiteComponent_C_SelectReceivePhysicsDataFPS::CallFunc_EqualEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Bp_TransformSyncLiteComponent_C_SelectReceivePhysicsDataFPS, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000028, "Member 'Bp_TransformSyncLiteComponent_C_SelectReceivePhysicsDataFPS::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");

// Function Bp_TransformSyncLiteComponent.Bp_TransformSyncLiteComponent_C.SelectSendPhysicsDataFPS
// 0x0030 (0x0030 - 0x0000)
struct Bp_TransformSyncLiteComponent_C_SelectSendPhysicsDataFPS final
{
public:
	int32                                         TickGroup;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        TickInterval;                                      // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_Select_Default;                             // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_DoubleDouble_ReturnValue;      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Bp_TransformSyncLiteComponent_C_SelectSendPhysicsDataFPS) == 0x000008, "Wrong alignment on Bp_TransformSyncLiteComponent_C_SelectSendPhysicsDataFPS");
static_assert(sizeof(Bp_TransformSyncLiteComponent_C_SelectSendPhysicsDataFPS) == 0x000030, "Wrong size on Bp_TransformSyncLiteComponent_C_SelectSendPhysicsDataFPS");
static_assert(offsetof(Bp_TransformSyncLiteComponent_C_SelectSendPhysicsDataFPS, TickGroup) == 0x000000, "Member 'Bp_TransformSyncLiteComponent_C_SelectSendPhysicsDataFPS::TickGroup' has a wrong offset!");
static_assert(offsetof(Bp_TransformSyncLiteComponent_C_SelectSendPhysicsDataFPS, TickInterval) == 0x000008, "Member 'Bp_TransformSyncLiteComponent_C_SelectSendPhysicsDataFPS::TickInterval' has a wrong offset!");
static_assert(offsetof(Bp_TransformSyncLiteComponent_C_SelectSendPhysicsDataFPS, Temp_int_Variable) == 0x000010, "Member 'Bp_TransformSyncLiteComponent_C_SelectSendPhysicsDataFPS::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(Bp_TransformSyncLiteComponent_C_SelectSendPhysicsDataFPS, K2Node_Select_Default) == 0x000018, "Member 'Bp_TransformSyncLiteComponent_C_SelectSendPhysicsDataFPS::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(Bp_TransformSyncLiteComponent_C_SelectSendPhysicsDataFPS, CallFunc_EqualEqual_DoubleDouble_ReturnValue) == 0x000020, "Member 'Bp_TransformSyncLiteComponent_C_SelectSendPhysicsDataFPS::CallFunc_EqualEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Bp_TransformSyncLiteComponent_C_SelectSendPhysicsDataFPS, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000028, "Member 'Bp_TransformSyncLiteComponent_C_SelectSendPhysicsDataFPS::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");

// Function Bp_TransformSyncLiteComponent.Bp_TransformSyncLiteComponent_C.SendTransforms
// 0x03E0 (0x03E0 - 0x0000)
struct Bp_TransformSyncLiteComponent_C_SendTransforms final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0xF];                                        // 0x0001(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_K2_GetComponentToWorld_ReturnValue;       // 0x0010(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_K2_GetComponentToWorld_ReturnValue_1;     // 0x0070(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_K2_GetComponentRotation_ReturnValue;      // 0x00D0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E8[0x8];                                       // 0x00E8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeRelativeTransform_ReturnValue;        // 0x00F0(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x0150(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x0154(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x0158(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_15C[0x4];                                      // 0x015C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0160(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x0178(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x0190(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector_NetQuantize10                  CallFunc_MakeVector_NetQuantize10_ReturnValue;     // 0x01A8(0x0018)(NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Roll_1;                      // 0x01C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch_1;                     // 0x01C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw_1;                       // 0x01C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1CC[0x4];                                      // 0x01CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_BreakVector_X;                            // 0x01D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x01D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x01E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector_NetQuantize10                  CallFunc_MakeVector_NetQuantize10_ReturnValue_1;   // 0x01E8(0x0018)(NoDestructor, HasGetValueTypeHash)
	struct FVector_NetQuantize10                  CallFunc_MakeVector_NetQuantize10_ReturnValue_2;   // 0x0200(0x0018)(NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0218(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetPhysicsAngularVelocityInDegrees_ReturnValue; // 0x0230(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X_1;                          // 0x0248(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_1;                          // 0x0250(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_1;                          // 0x0258(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X_2;                          // 0x0260(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_2;                          // 0x0268(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_2;                          // 0x0270(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector_NetQuantize10                  CallFunc_MakeVector_NetQuantize10_ReturnValue_3;   // 0x0278(0x0018)(NoDestructor, HasGetValueTypeHash)
	struct FVector_NetQuantize                    CallFunc_MakeVector_NetQuantize_ReturnValue;       // 0x0290(0x0018)(NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetPhysicsLinearVelocity_ReturnValue;     // 0x02A8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetPhysicsAngularVelocityInDegrees_ReturnValue_1; // 0x02C0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X_3;                          // 0x02D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_3;                          // 0x02E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_3;                          // 0x02E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_InverseTransformDirection_ReturnValue;    // 0x02F0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector_NetQuantize                    CallFunc_MakeVector_NetQuantize_ReturnValue_1;     // 0x0308(0x0018)(NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X_4;                          // 0x0320(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_4;                          // 0x0328(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_4;                          // 0x0330(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector_NetQuantize                    CallFunc_MakeVector_NetQuantize_ReturnValue_2;     // 0x0338(0x0018)(NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetPhysicsLinearVelocity_ReturnValue_1;   // 0x0350(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_InverseTransformDirection_ReturnValue_1;  // 0x0368(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X_5;                          // 0x0380(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_5;                          // 0x0388(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_5;                          // 0x0390(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector_NetQuantize                    CallFunc_MakeVector_NetQuantize_ReturnValue_3;     // 0x0398(0x0018)(NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MakeVector_NetQuantize10_X_ImplicitCast;  // 0x03B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MakeVector_NetQuantize10_Y_ImplicitCast;  // 0x03B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MakeVector_NetQuantize10_Z_ImplicitCast;  // 0x03C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MakeVector_NetQuantize10_X_ImplicitCast_1; // 0x03C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MakeVector_NetQuantize10_Y_ImplicitCast_1; // 0x03D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MakeVector_NetQuantize10_Z_ImplicitCast_1; // 0x03D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Bp_TransformSyncLiteComponent_C_SendTransforms) == 0x000010, "Wrong alignment on Bp_TransformSyncLiteComponent_C_SendTransforms");
static_assert(sizeof(Bp_TransformSyncLiteComponent_C_SendTransforms) == 0x0003E0, "Wrong size on Bp_TransformSyncLiteComponent_C_SendTransforms");
static_assert(offsetof(Bp_TransformSyncLiteComponent_C_SendTransforms, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'Bp_TransformSyncLiteComponent_C_SendTransforms::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Bp_TransformSyncLiteComponent_C_SendTransforms, CallFunc_K2_GetComponentToWorld_ReturnValue) == 0x000010, "Member 'Bp_TransformSyncLiteComponent_C_SendTransforms::CallFunc_K2_GetComponentToWorld_ReturnValue' has a wrong offset!");
static_assert(offsetof(Bp_TransformSyncLiteComponent_C_SendTransforms, CallFunc_K2_GetComponentToWorld_ReturnValue_1) == 0x000070, "Member 'Bp_TransformSyncLiteComponent_C_SendTransforms::CallFunc_K2_GetComponentToWorld_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Bp_TransformSyncLiteComponent_C_SendTransforms, CallFunc_K2_GetComponentRotation_ReturnValue) == 0x0000D0, "Member 'Bp_TransformSyncLiteComponent_C_SendTransforms::CallFunc_K2_GetComponentRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Bp_TransformSyncLiteComponent_C_SendTransforms, CallFunc_MakeRelativeTransform_ReturnValue) == 0x0000F0, "Member 'Bp_TransformSyncLiteComponent_C_SendTransforms::CallFunc_MakeRelativeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(Bp_TransformSyncLiteComponent_C_SendTransforms, CallFunc_BreakRotator_Roll) == 0x000150, "Member 'Bp_TransformSyncLiteComponent_C_SendTransforms::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(Bp_TransformSyncLiteComponent_C_SendTransforms, CallFunc_BreakRotator_Pitch) == 0x000154, "Member 'Bp_TransformSyncLiteComponent_C_SendTransforms::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(Bp_TransformSyncLiteComponent_C_SendTransforms, CallFunc_BreakRotator_Yaw) == 0x000158, "Member 'Bp_TransformSyncLiteComponent_C_SendTransforms::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(Bp_TransformSyncLiteComponent_C_SendTransforms, CallFunc_BreakTransform_Location) == 0x000160, "Member 'Bp_TransformSyncLiteComponent_C_SendTransforms::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(Bp_TransformSyncLiteComponent_C_SendTransforms, CallFunc_BreakTransform_Rotation) == 0x000178, "Member 'Bp_TransformSyncLiteComponent_C_SendTransforms::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(Bp_TransformSyncLiteComponent_C_SendTransforms, CallFunc_BreakTransform_Scale) == 0x000190, "Member 'Bp_TransformSyncLiteComponent_C_SendTransforms::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(Bp_TransformSyncLiteComponent_C_SendTransforms, CallFunc_MakeVector_NetQuantize10_ReturnValue) == 0x0001A8, "Member 'Bp_TransformSyncLiteComponent_C_SendTransforms::CallFunc_MakeVector_NetQuantize10_ReturnValue' has a wrong offset!");
static_assert(offsetof(Bp_TransformSyncLiteComponent_C_SendTransforms, CallFunc_BreakRotator_Roll_1) == 0x0001C0, "Member 'Bp_TransformSyncLiteComponent_C_SendTransforms::CallFunc_BreakRotator_Roll_1' has a wrong offset!");
static_assert(offsetof(Bp_TransformSyncLiteComponent_C_SendTransforms, CallFunc_BreakRotator_Pitch_1) == 0x0001C4, "Member 'Bp_TransformSyncLiteComponent_C_SendTransforms::CallFunc_BreakRotator_Pitch_1' has a wrong offset!");
static_assert(offsetof(Bp_TransformSyncLiteComponent_C_SendTransforms, CallFunc_BreakRotator_Yaw_1) == 0x0001C8, "Member 'Bp_TransformSyncLiteComponent_C_SendTransforms::CallFunc_BreakRotator_Yaw_1' has a wrong offset!");
static_assert(offsetof(Bp_TransformSyncLiteComponent_C_SendTransforms, CallFunc_BreakVector_X) == 0x0001D0, "Member 'Bp_TransformSyncLiteComponent_C_SendTransforms::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(Bp_TransformSyncLiteComponent_C_SendTransforms, CallFunc_BreakVector_Y) == 0x0001D8, "Member 'Bp_TransformSyncLiteComponent_C_SendTransforms::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(Bp_TransformSyncLiteComponent_C_SendTransforms, CallFunc_BreakVector_Z) == 0x0001E0, "Member 'Bp_TransformSyncLiteComponent_C_SendTransforms::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(Bp_TransformSyncLiteComponent_C_SendTransforms, CallFunc_MakeVector_NetQuantize10_ReturnValue_1) == 0x0001E8, "Member 'Bp_TransformSyncLiteComponent_C_SendTransforms::CallFunc_MakeVector_NetQuantize10_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Bp_TransformSyncLiteComponent_C_SendTransforms, CallFunc_MakeVector_NetQuantize10_ReturnValue_2) == 0x000200, "Member 'Bp_TransformSyncLiteComponent_C_SendTransforms::CallFunc_MakeVector_NetQuantize10_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Bp_TransformSyncLiteComponent_C_SendTransforms, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000218, "Member 'Bp_TransformSyncLiteComponent_C_SendTransforms::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Bp_TransformSyncLiteComponent_C_SendTransforms, CallFunc_GetPhysicsAngularVelocityInDegrees_ReturnValue) == 0x000230, "Member 'Bp_TransformSyncLiteComponent_C_SendTransforms::CallFunc_GetPhysicsAngularVelocityInDegrees_ReturnValue' has a wrong offset!");
static_assert(offsetof(Bp_TransformSyncLiteComponent_C_SendTransforms, CallFunc_BreakVector_X_1) == 0x000248, "Member 'Bp_TransformSyncLiteComponent_C_SendTransforms::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(Bp_TransformSyncLiteComponent_C_SendTransforms, CallFunc_BreakVector_Y_1) == 0x000250, "Member 'Bp_TransformSyncLiteComponent_C_SendTransforms::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(Bp_TransformSyncLiteComponent_C_SendTransforms, CallFunc_BreakVector_Z_1) == 0x000258, "Member 'Bp_TransformSyncLiteComponent_C_SendTransforms::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(Bp_TransformSyncLiteComponent_C_SendTransforms, CallFunc_BreakVector_X_2) == 0x000260, "Member 'Bp_TransformSyncLiteComponent_C_SendTransforms::CallFunc_BreakVector_X_2' has a wrong offset!");
static_assert(offsetof(Bp_TransformSyncLiteComponent_C_SendTransforms, CallFunc_BreakVector_Y_2) == 0x000268, "Member 'Bp_TransformSyncLiteComponent_C_SendTransforms::CallFunc_BreakVector_Y_2' has a wrong offset!");
static_assert(offsetof(Bp_TransformSyncLiteComponent_C_SendTransforms, CallFunc_BreakVector_Z_2) == 0x000270, "Member 'Bp_TransformSyncLiteComponent_C_SendTransforms::CallFunc_BreakVector_Z_2' has a wrong offset!");
static_assert(offsetof(Bp_TransformSyncLiteComponent_C_SendTransforms, CallFunc_MakeVector_NetQuantize10_ReturnValue_3) == 0x000278, "Member 'Bp_TransformSyncLiteComponent_C_SendTransforms::CallFunc_MakeVector_NetQuantize10_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Bp_TransformSyncLiteComponent_C_SendTransforms, CallFunc_MakeVector_NetQuantize_ReturnValue) == 0x000290, "Member 'Bp_TransformSyncLiteComponent_C_SendTransforms::CallFunc_MakeVector_NetQuantize_ReturnValue' has a wrong offset!");
static_assert(offsetof(Bp_TransformSyncLiteComponent_C_SendTransforms, CallFunc_GetPhysicsLinearVelocity_ReturnValue) == 0x0002A8, "Member 'Bp_TransformSyncLiteComponent_C_SendTransforms::CallFunc_GetPhysicsLinearVelocity_ReturnValue' has a wrong offset!");
static_assert(offsetof(Bp_TransformSyncLiteComponent_C_SendTransforms, CallFunc_GetPhysicsAngularVelocityInDegrees_ReturnValue_1) == 0x0002C0, "Member 'Bp_TransformSyncLiteComponent_C_SendTransforms::CallFunc_GetPhysicsAngularVelocityInDegrees_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Bp_TransformSyncLiteComponent_C_SendTransforms, CallFunc_BreakVector_X_3) == 0x0002D8, "Member 'Bp_TransformSyncLiteComponent_C_SendTransforms::CallFunc_BreakVector_X_3' has a wrong offset!");
static_assert(offsetof(Bp_TransformSyncLiteComponent_C_SendTransforms, CallFunc_BreakVector_Y_3) == 0x0002E0, "Member 'Bp_TransformSyncLiteComponent_C_SendTransforms::CallFunc_BreakVector_Y_3' has a wrong offset!");
static_assert(offsetof(Bp_TransformSyncLiteComponent_C_SendTransforms, CallFunc_BreakVector_Z_3) == 0x0002E8, "Member 'Bp_TransformSyncLiteComponent_C_SendTransforms::CallFunc_BreakVector_Z_3' has a wrong offset!");
static_assert(offsetof(Bp_TransformSyncLiteComponent_C_SendTransforms, CallFunc_InverseTransformDirection_ReturnValue) == 0x0002F0, "Member 'Bp_TransformSyncLiteComponent_C_SendTransforms::CallFunc_InverseTransformDirection_ReturnValue' has a wrong offset!");
static_assert(offsetof(Bp_TransformSyncLiteComponent_C_SendTransforms, CallFunc_MakeVector_NetQuantize_ReturnValue_1) == 0x000308, "Member 'Bp_TransformSyncLiteComponent_C_SendTransforms::CallFunc_MakeVector_NetQuantize_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Bp_TransformSyncLiteComponent_C_SendTransforms, CallFunc_BreakVector_X_4) == 0x000320, "Member 'Bp_TransformSyncLiteComponent_C_SendTransforms::CallFunc_BreakVector_X_4' has a wrong offset!");
static_assert(offsetof(Bp_TransformSyncLiteComponent_C_SendTransforms, CallFunc_BreakVector_Y_4) == 0x000328, "Member 'Bp_TransformSyncLiteComponent_C_SendTransforms::CallFunc_BreakVector_Y_4' has a wrong offset!");
static_assert(offsetof(Bp_TransformSyncLiteComponent_C_SendTransforms, CallFunc_BreakVector_Z_4) == 0x000330, "Member 'Bp_TransformSyncLiteComponent_C_SendTransforms::CallFunc_BreakVector_Z_4' has a wrong offset!");
static_assert(offsetof(Bp_TransformSyncLiteComponent_C_SendTransforms, CallFunc_MakeVector_NetQuantize_ReturnValue_2) == 0x000338, "Member 'Bp_TransformSyncLiteComponent_C_SendTransforms::CallFunc_MakeVector_NetQuantize_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Bp_TransformSyncLiteComponent_C_SendTransforms, CallFunc_GetPhysicsLinearVelocity_ReturnValue_1) == 0x000350, "Member 'Bp_TransformSyncLiteComponent_C_SendTransforms::CallFunc_GetPhysicsLinearVelocity_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Bp_TransformSyncLiteComponent_C_SendTransforms, CallFunc_InverseTransformDirection_ReturnValue_1) == 0x000368, "Member 'Bp_TransformSyncLiteComponent_C_SendTransforms::CallFunc_InverseTransformDirection_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Bp_TransformSyncLiteComponent_C_SendTransforms, CallFunc_BreakVector_X_5) == 0x000380, "Member 'Bp_TransformSyncLiteComponent_C_SendTransforms::CallFunc_BreakVector_X_5' has a wrong offset!");
static_assert(offsetof(Bp_TransformSyncLiteComponent_C_SendTransforms, CallFunc_BreakVector_Y_5) == 0x000388, "Member 'Bp_TransformSyncLiteComponent_C_SendTransforms::CallFunc_BreakVector_Y_5' has a wrong offset!");
static_assert(offsetof(Bp_TransformSyncLiteComponent_C_SendTransforms, CallFunc_BreakVector_Z_5) == 0x000390, "Member 'Bp_TransformSyncLiteComponent_C_SendTransforms::CallFunc_BreakVector_Z_5' has a wrong offset!");
static_assert(offsetof(Bp_TransformSyncLiteComponent_C_SendTransforms, CallFunc_MakeVector_NetQuantize_ReturnValue_3) == 0x000398, "Member 'Bp_TransformSyncLiteComponent_C_SendTransforms::CallFunc_MakeVector_NetQuantize_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Bp_TransformSyncLiteComponent_C_SendTransforms, CallFunc_MakeVector_NetQuantize10_X_ImplicitCast) == 0x0003B0, "Member 'Bp_TransformSyncLiteComponent_C_SendTransforms::CallFunc_MakeVector_NetQuantize10_X_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Bp_TransformSyncLiteComponent_C_SendTransforms, CallFunc_MakeVector_NetQuantize10_Y_ImplicitCast) == 0x0003B8, "Member 'Bp_TransformSyncLiteComponent_C_SendTransforms::CallFunc_MakeVector_NetQuantize10_Y_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Bp_TransformSyncLiteComponent_C_SendTransforms, CallFunc_MakeVector_NetQuantize10_Z_ImplicitCast) == 0x0003C0, "Member 'Bp_TransformSyncLiteComponent_C_SendTransforms::CallFunc_MakeVector_NetQuantize10_Z_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Bp_TransformSyncLiteComponent_C_SendTransforms, CallFunc_MakeVector_NetQuantize10_X_ImplicitCast_1) == 0x0003C8, "Member 'Bp_TransformSyncLiteComponent_C_SendTransforms::CallFunc_MakeVector_NetQuantize10_X_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(Bp_TransformSyncLiteComponent_C_SendTransforms, CallFunc_MakeVector_NetQuantize10_Y_ImplicitCast_1) == 0x0003D0, "Member 'Bp_TransformSyncLiteComponent_C_SendTransforms::CallFunc_MakeVector_NetQuantize10_Y_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(Bp_TransformSyncLiteComponent_C_SendTransforms, CallFunc_MakeVector_NetQuantize10_Z_ImplicitCast_1) == 0x0003D8, "Member 'Bp_TransformSyncLiteComponent_C_SendTransforms::CallFunc_MakeVector_NetQuantize10_Z_ImplicitCast_1' has a wrong offset!");

// Function Bp_TransformSyncLiteComponent.Bp_TransformSyncLiteComponent_C.SetAngularVelocity
// 0x0048 (0x0048 - 0x0000)
struct Bp_TransformSyncLiteComponent_C_SetAngularVelocity final
{
public:
	struct FVector                                Velocity;                                          // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetPhysicsAngularVelocityInDegrees_ReturnValue; // 0x0018(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0030(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Bp_TransformSyncLiteComponent_C_SetAngularVelocity) == 0x000008, "Wrong alignment on Bp_TransformSyncLiteComponent_C_SetAngularVelocity");
static_assert(sizeof(Bp_TransformSyncLiteComponent_C_SetAngularVelocity) == 0x000048, "Wrong size on Bp_TransformSyncLiteComponent_C_SetAngularVelocity");
static_assert(offsetof(Bp_TransformSyncLiteComponent_C_SetAngularVelocity, Velocity) == 0x000000, "Member 'Bp_TransformSyncLiteComponent_C_SetAngularVelocity::Velocity' has a wrong offset!");
static_assert(offsetof(Bp_TransformSyncLiteComponent_C_SetAngularVelocity, CallFunc_GetPhysicsAngularVelocityInDegrees_ReturnValue) == 0x000018, "Member 'Bp_TransformSyncLiteComponent_C_SetAngularVelocity::CallFunc_GetPhysicsAngularVelocityInDegrees_ReturnValue' has a wrong offset!");
static_assert(offsetof(Bp_TransformSyncLiteComponent_C_SetAngularVelocity, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000030, "Member 'Bp_TransformSyncLiteComponent_C_SetAngularVelocity::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");

// Function Bp_TransformSyncLiteComponent.Bp_TransformSyncLiteComponent_C.SetLinearVelocity
// 0x0048 (0x0048 - 0x0000)
struct Bp_TransformSyncLiteComponent_C_SetLinearVelocity final
{
public:
	struct FVector                                Velocity;                                          // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetPhysicsLinearVelocity_ReturnValue;     // 0x0018(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0030(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Bp_TransformSyncLiteComponent_C_SetLinearVelocity) == 0x000008, "Wrong alignment on Bp_TransformSyncLiteComponent_C_SetLinearVelocity");
static_assert(sizeof(Bp_TransformSyncLiteComponent_C_SetLinearVelocity) == 0x000048, "Wrong size on Bp_TransformSyncLiteComponent_C_SetLinearVelocity");
static_assert(offsetof(Bp_TransformSyncLiteComponent_C_SetLinearVelocity, Velocity) == 0x000000, "Member 'Bp_TransformSyncLiteComponent_C_SetLinearVelocity::Velocity' has a wrong offset!");
static_assert(offsetof(Bp_TransformSyncLiteComponent_C_SetLinearVelocity, CallFunc_GetPhysicsLinearVelocity_ReturnValue) == 0x000018, "Member 'Bp_TransformSyncLiteComponent_C_SetLinearVelocity::CallFunc_GetPhysicsLinearVelocity_ReturnValue' has a wrong offset!");
static_assert(offsetof(Bp_TransformSyncLiteComponent_C_SetLinearVelocity, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000030, "Member 'Bp_TransformSyncLiteComponent_C_SetLinearVelocity::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");

// Function Bp_TransformSyncLiteComponent.Bp_TransformSyncLiteComponent_C.SetOwner
// 0x0030 (0x0030 - 0x0000)
struct Bp_TransformSyncLiteComponent_C_SetOwner final
{
public:
	class AActor*                                 NewOwner;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsServer_ReturnValue;                     // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  K2Node_DynamicCast_AsPawn;                         // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLocallyControlled_ReturnValue;          // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A[0x6];                                       // 0x001A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      K2Node_DynamicCast_AsPlayer_Controller;            // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLocalPlayerController_ReturnValue;      // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Bp_TransformSyncLiteComponent_C_SetOwner) == 0x000008, "Wrong alignment on Bp_TransformSyncLiteComponent_C_SetOwner");
static_assert(sizeof(Bp_TransformSyncLiteComponent_C_SetOwner) == 0x000030, "Wrong size on Bp_TransformSyncLiteComponent_C_SetOwner");
static_assert(offsetof(Bp_TransformSyncLiteComponent_C_SetOwner, NewOwner) == 0x000000, "Member 'Bp_TransformSyncLiteComponent_C_SetOwner::NewOwner' has a wrong offset!");
static_assert(offsetof(Bp_TransformSyncLiteComponent_C_SetOwner, CallFunc_IsServer_ReturnValue) == 0x000008, "Member 'Bp_TransformSyncLiteComponent_C_SetOwner::CallFunc_IsServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(Bp_TransformSyncLiteComponent_C_SetOwner, K2Node_DynamicCast_AsPawn) == 0x000010, "Member 'Bp_TransformSyncLiteComponent_C_SetOwner::K2Node_DynamicCast_AsPawn' has a wrong offset!");
static_assert(offsetof(Bp_TransformSyncLiteComponent_C_SetOwner, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'Bp_TransformSyncLiteComponent_C_SetOwner::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Bp_TransformSyncLiteComponent_C_SetOwner, CallFunc_IsLocallyControlled_ReturnValue) == 0x000019, "Member 'Bp_TransformSyncLiteComponent_C_SetOwner::CallFunc_IsLocallyControlled_ReturnValue' has a wrong offset!");
static_assert(offsetof(Bp_TransformSyncLiteComponent_C_SetOwner, K2Node_DynamicCast_AsPlayer_Controller) == 0x000020, "Member 'Bp_TransformSyncLiteComponent_C_SetOwner::K2Node_DynamicCast_AsPlayer_Controller' has a wrong offset!");
static_assert(offsetof(Bp_TransformSyncLiteComponent_C_SetOwner, K2Node_DynamicCast_bSuccess_1) == 0x000028, "Member 'Bp_TransformSyncLiteComponent_C_SetOwner::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(Bp_TransformSyncLiteComponent_C_SetOwner, CallFunc_IsLocalPlayerController_ReturnValue) == 0x000029, "Member 'Bp_TransformSyncLiteComponent_C_SetOwner::CallFunc_IsLocalPlayerController_ReturnValue' has a wrong offset!");

// Function Bp_TransformSyncLiteComponent.Bp_TransformSyncLiteComponent_C.SetRelativeModeServer
// 0x0008 (0x0008 - 0x0000)
struct Bp_TransformSyncLiteComponent_C_SetRelativeModeServer final
{
public:
	class UPrimitiveComponent*                    RelativeComponent_0;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Bp_TransformSyncLiteComponent_C_SetRelativeModeServer) == 0x000008, "Wrong alignment on Bp_TransformSyncLiteComponent_C_SetRelativeModeServer");
static_assert(sizeof(Bp_TransformSyncLiteComponent_C_SetRelativeModeServer) == 0x000008, "Wrong size on Bp_TransformSyncLiteComponent_C_SetRelativeModeServer");
static_assert(offsetof(Bp_TransformSyncLiteComponent_C_SetRelativeModeServer, RelativeComponent_0) == 0x000000, "Member 'Bp_TransformSyncLiteComponent_C_SetRelativeModeServer::RelativeComponent_0' has a wrong offset!");

// Function Bp_TransformSyncLiteComponent.Bp_TransformSyncLiteComponent_C.SetSimulatingServer
// 0x0001 (0x0001 - 0x0000)
struct Bp_TransformSyncLiteComponent_C_SetSimulatingServer final
{
public:
	bool                                          IsSimulating_0;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Bp_TransformSyncLiteComponent_C_SetSimulatingServer) == 0x000001, "Wrong alignment on Bp_TransformSyncLiteComponent_C_SetSimulatingServer");
static_assert(sizeof(Bp_TransformSyncLiteComponent_C_SetSimulatingServer) == 0x000001, "Wrong size on Bp_TransformSyncLiteComponent_C_SetSimulatingServer");
static_assert(offsetof(Bp_TransformSyncLiteComponent_C_SetSimulatingServer, IsSimulating_0) == 0x000000, "Member 'Bp_TransformSyncLiteComponent_C_SetSimulatingServer::IsSimulating_0' has a wrong offset!");

// Function Bp_TransformSyncLiteComponent.Bp_TransformSyncLiteComponent_C.Sleep Function
// 0x03F0 (0x03F0 - 0x0000)
struct Bp_TransformSyncLiteComponent_C_Sleep_Function final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0xE];                                        // 0x0002(0x000E)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_K2_GetComponentToWorld_ReturnValue;       // 0x0010(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_NetQuantize10_X;              // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_NetQuantize10_Y;              // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_NetQuantize10_Z;              // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0088(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x00A0(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_NetQuantize10_X_1;            // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_NetQuantize10_Y_1;            // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_NetQuantize10_Z_1;            // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_118[0x8];                                      // 0x0118(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_ComposeTransforms_ReturnValue;            // 0x0120(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue_1;                // 0x0180(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0198(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x01B0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x01C8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetWorldLocationAndRotation_SweepHitResult; // 0x01E0(0x00F8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FHitResult                             CallFunc_K2_SetWorldLocationAndRotation_SweepHitResult_1; // 0x02D8(0x00F8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	float                                         CallFunc_MakeRotator_Roll_ImplicitCast;            // 0x03D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeRotator_Pitch_ImplicitCast;           // 0x03D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeRotator_Yaw_ImplicitCast;             // 0x03D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeRotator_Roll_ImplicitCast_1;          // 0x03DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeRotator_Pitch_ImplicitCast_1;         // 0x03E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeRotator_Yaw_ImplicitCast_1;           // 0x03E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Bp_TransformSyncLiteComponent_C_Sleep_Function) == 0x000010, "Wrong alignment on Bp_TransformSyncLiteComponent_C_Sleep_Function");
static_assert(sizeof(Bp_TransformSyncLiteComponent_C_Sleep_Function) == 0x0003F0, "Wrong size on Bp_TransformSyncLiteComponent_C_Sleep_Function");
static_assert(offsetof(Bp_TransformSyncLiteComponent_C_Sleep_Function, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'Bp_TransformSyncLiteComponent_C_Sleep_Function::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Bp_TransformSyncLiteComponent_C_Sleep_Function, CallFunc_IsValid_ReturnValue_1) == 0x000001, "Member 'Bp_TransformSyncLiteComponent_C_Sleep_Function::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Bp_TransformSyncLiteComponent_C_Sleep_Function, CallFunc_K2_GetComponentToWorld_ReturnValue) == 0x000010, "Member 'Bp_TransformSyncLiteComponent_C_Sleep_Function::CallFunc_K2_GetComponentToWorld_ReturnValue' has a wrong offset!");
static_assert(offsetof(Bp_TransformSyncLiteComponent_C_Sleep_Function, CallFunc_BreakVector_NetQuantize10_X) == 0x000070, "Member 'Bp_TransformSyncLiteComponent_C_Sleep_Function::CallFunc_BreakVector_NetQuantize10_X' has a wrong offset!");
static_assert(offsetof(Bp_TransformSyncLiteComponent_C_Sleep_Function, CallFunc_BreakVector_NetQuantize10_Y) == 0x000078, "Member 'Bp_TransformSyncLiteComponent_C_Sleep_Function::CallFunc_BreakVector_NetQuantize10_Y' has a wrong offset!");
static_assert(offsetof(Bp_TransformSyncLiteComponent_C_Sleep_Function, CallFunc_BreakVector_NetQuantize10_Z) == 0x000080, "Member 'Bp_TransformSyncLiteComponent_C_Sleep_Function::CallFunc_BreakVector_NetQuantize10_Z' has a wrong offset!");
static_assert(offsetof(Bp_TransformSyncLiteComponent_C_Sleep_Function, CallFunc_MakeRotator_ReturnValue) == 0x000088, "Member 'Bp_TransformSyncLiteComponent_C_Sleep_Function::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(Bp_TransformSyncLiteComponent_C_Sleep_Function, CallFunc_MakeTransform_ReturnValue) == 0x0000A0, "Member 'Bp_TransformSyncLiteComponent_C_Sleep_Function::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(Bp_TransformSyncLiteComponent_C_Sleep_Function, CallFunc_BreakVector_NetQuantize10_X_1) == 0x000100, "Member 'Bp_TransformSyncLiteComponent_C_Sleep_Function::CallFunc_BreakVector_NetQuantize10_X_1' has a wrong offset!");
static_assert(offsetof(Bp_TransformSyncLiteComponent_C_Sleep_Function, CallFunc_BreakVector_NetQuantize10_Y_1) == 0x000108, "Member 'Bp_TransformSyncLiteComponent_C_Sleep_Function::CallFunc_BreakVector_NetQuantize10_Y_1' has a wrong offset!");
static_assert(offsetof(Bp_TransformSyncLiteComponent_C_Sleep_Function, CallFunc_BreakVector_NetQuantize10_Z_1) == 0x000110, "Member 'Bp_TransformSyncLiteComponent_C_Sleep_Function::CallFunc_BreakVector_NetQuantize10_Z_1' has a wrong offset!");
static_assert(offsetof(Bp_TransformSyncLiteComponent_C_Sleep_Function, CallFunc_ComposeTransforms_ReturnValue) == 0x000120, "Member 'Bp_TransformSyncLiteComponent_C_Sleep_Function::CallFunc_ComposeTransforms_ReturnValue' has a wrong offset!");
static_assert(offsetof(Bp_TransformSyncLiteComponent_C_Sleep_Function, CallFunc_MakeRotator_ReturnValue_1) == 0x000180, "Member 'Bp_TransformSyncLiteComponent_C_Sleep_Function::CallFunc_MakeRotator_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Bp_TransformSyncLiteComponent_C_Sleep_Function, CallFunc_BreakTransform_Location) == 0x000198, "Member 'Bp_TransformSyncLiteComponent_C_Sleep_Function::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(Bp_TransformSyncLiteComponent_C_Sleep_Function, CallFunc_BreakTransform_Rotation) == 0x0001B0, "Member 'Bp_TransformSyncLiteComponent_C_Sleep_Function::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(Bp_TransformSyncLiteComponent_C_Sleep_Function, CallFunc_BreakTransform_Scale) == 0x0001C8, "Member 'Bp_TransformSyncLiteComponent_C_Sleep_Function::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(Bp_TransformSyncLiteComponent_C_Sleep_Function, CallFunc_K2_SetWorldLocationAndRotation_SweepHitResult) == 0x0001E0, "Member 'Bp_TransformSyncLiteComponent_C_Sleep_Function::CallFunc_K2_SetWorldLocationAndRotation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(Bp_TransformSyncLiteComponent_C_Sleep_Function, CallFunc_K2_SetWorldLocationAndRotation_SweepHitResult_1) == 0x0002D8, "Member 'Bp_TransformSyncLiteComponent_C_Sleep_Function::CallFunc_K2_SetWorldLocationAndRotation_SweepHitResult_1' has a wrong offset!");
static_assert(offsetof(Bp_TransformSyncLiteComponent_C_Sleep_Function, CallFunc_MakeRotator_Roll_ImplicitCast) == 0x0003D0, "Member 'Bp_TransformSyncLiteComponent_C_Sleep_Function::CallFunc_MakeRotator_Roll_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Bp_TransformSyncLiteComponent_C_Sleep_Function, CallFunc_MakeRotator_Pitch_ImplicitCast) == 0x0003D4, "Member 'Bp_TransformSyncLiteComponent_C_Sleep_Function::CallFunc_MakeRotator_Pitch_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Bp_TransformSyncLiteComponent_C_Sleep_Function, CallFunc_MakeRotator_Yaw_ImplicitCast) == 0x0003D8, "Member 'Bp_TransformSyncLiteComponent_C_Sleep_Function::CallFunc_MakeRotator_Yaw_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Bp_TransformSyncLiteComponent_C_Sleep_Function, CallFunc_MakeRotator_Roll_ImplicitCast_1) == 0x0003DC, "Member 'Bp_TransformSyncLiteComponent_C_Sleep_Function::CallFunc_MakeRotator_Roll_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(Bp_TransformSyncLiteComponent_C_Sleep_Function, CallFunc_MakeRotator_Pitch_ImplicitCast_1) == 0x0003E0, "Member 'Bp_TransformSyncLiteComponent_C_Sleep_Function::CallFunc_MakeRotator_Pitch_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(Bp_TransformSyncLiteComponent_C_Sleep_Function, CallFunc_MakeRotator_Yaw_ImplicitCast_1) == 0x0003E4, "Member 'Bp_TransformSyncLiteComponent_C_Sleep_Function::CallFunc_MakeRotator_Yaw_ImplicitCast_1' has a wrong offset!");

// Function Bp_TransformSyncLiteComponent.Bp_TransformSyncLiteComponent_C.UpdateRateOptimization
// 0x0128 (0x0128 - 0x0000)
struct Bp_TransformSyncLiteComponent_C_UpdateRateOptimization final
{
public:
	bool                                          DistanceSet;                                       // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        ShortestDistance;                                  // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsServer_ReturnValue;                     // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACharacter*                             CallFunc_GetPlayerCharacter_ReturnValue;           // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0030(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0048(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACharacter*                             CallFunc_GetPlayerCharacter_ReturnValue_1;         // 0x0060(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Vector_Distance2D_ReturnValue;            // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_CalculateTickGroup_ReturnValue;           // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x0074(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_75[0x3];                                       // 0x0075(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7C[0x4];                                       // 0x007C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectReceivePhysicsDataFPS_TickInterval; // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_Select_Default;                             // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_1;        // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue_1;    // 0x00A0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class ACharacter*>                     CallFunc_GetAllActorsOfClass_OutActors;            // 0x00C0(0x0010)(ReferenceParm)
	int32                                         CallFunc_CalculateTickGroup_ReturnValue_1;         // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D4[0x4];                                       // 0x00D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharacter*                             CallFunc_Array_Get_Item;                           // 0x00D8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue;        // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E1[0x7];                                       // 0x00E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x00E8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Vector_Distance2D_ReturnValue_1;          // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue_1;            // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x0109(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_10A[0x2];                                      // 0x010A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x010C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_111[0x3];                                      // 0x0111(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SetComponentTickInterval_TickInterval_ImplicitCast; // 0x0114(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetComponentTickInterval_TickInterval_ImplicitCast_1; // 0x0118(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetComponentTickInterval_TickInterval_ImplicitCast_2; // 0x011C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetComponentTickInterval_TickInterval_ImplicitCast_3; // 0x0120(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Bp_TransformSyncLiteComponent_C_UpdateRateOptimization) == 0x000008, "Wrong alignment on Bp_TransformSyncLiteComponent_C_UpdateRateOptimization");
static_assert(sizeof(Bp_TransformSyncLiteComponent_C_UpdateRateOptimization) == 0x000128, "Wrong size on Bp_TransformSyncLiteComponent_C_UpdateRateOptimization");
static_assert(offsetof(Bp_TransformSyncLiteComponent_C_UpdateRateOptimization, DistanceSet) == 0x000000, "Member 'Bp_TransformSyncLiteComponent_C_UpdateRateOptimization::DistanceSet' has a wrong offset!");
static_assert(offsetof(Bp_TransformSyncLiteComponent_C_UpdateRateOptimization, ShortestDistance) == 0x000008, "Member 'Bp_TransformSyncLiteComponent_C_UpdateRateOptimization::ShortestDistance' has a wrong offset!");
static_assert(offsetof(Bp_TransformSyncLiteComponent_C_UpdateRateOptimization, Temp_int_Array_Index_Variable) == 0x000010, "Member 'Bp_TransformSyncLiteComponent_C_UpdateRateOptimization::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(Bp_TransformSyncLiteComponent_C_UpdateRateOptimization, CallFunc_IsServer_ReturnValue) == 0x000014, "Member 'Bp_TransformSyncLiteComponent_C_UpdateRateOptimization::CallFunc_IsServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(Bp_TransformSyncLiteComponent_C_UpdateRateOptimization, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000018, "Member 'Bp_TransformSyncLiteComponent_C_UpdateRateOptimization::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Bp_TransformSyncLiteComponent_C_UpdateRateOptimization, CallFunc_GetPlayerCharacter_ReturnValue) == 0x000020, "Member 'Bp_TransformSyncLiteComponent_C_UpdateRateOptimization::CallFunc_GetPlayerCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(Bp_TransformSyncLiteComponent_C_UpdateRateOptimization, CallFunc_IsValid_ReturnValue) == 0x000028, "Member 'Bp_TransformSyncLiteComponent_C_UpdateRateOptimization::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Bp_TransformSyncLiteComponent_C_UpdateRateOptimization, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000030, "Member 'Bp_TransformSyncLiteComponent_C_UpdateRateOptimization::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Bp_TransformSyncLiteComponent_C_UpdateRateOptimization, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000048, "Member 'Bp_TransformSyncLiteComponent_C_UpdateRateOptimization::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Bp_TransformSyncLiteComponent_C_UpdateRateOptimization, CallFunc_GetPlayerCharacter_ReturnValue_1) == 0x000060, "Member 'Bp_TransformSyncLiteComponent_C_UpdateRateOptimization::CallFunc_GetPlayerCharacter_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Bp_TransformSyncLiteComponent_C_UpdateRateOptimization, CallFunc_Vector_Distance2D_ReturnValue) == 0x000068, "Member 'Bp_TransformSyncLiteComponent_C_UpdateRateOptimization::CallFunc_Vector_Distance2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(Bp_TransformSyncLiteComponent_C_UpdateRateOptimization, CallFunc_CalculateTickGroup_ReturnValue) == 0x000070, "Member 'Bp_TransformSyncLiteComponent_C_UpdateRateOptimization::CallFunc_CalculateTickGroup_ReturnValue' has a wrong offset!");
static_assert(offsetof(Bp_TransformSyncLiteComponent_C_UpdateRateOptimization, CallFunc_NotEqual_IntInt_ReturnValue) == 0x000074, "Member 'Bp_TransformSyncLiteComponent_C_UpdateRateOptimization::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Bp_TransformSyncLiteComponent_C_UpdateRateOptimization, Temp_int_Loop_Counter_Variable) == 0x000078, "Member 'Bp_TransformSyncLiteComponent_C_UpdateRateOptimization::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(Bp_TransformSyncLiteComponent_C_UpdateRateOptimization, CallFunc_SelectReceivePhysicsDataFPS_TickInterval) == 0x000080, "Member 'Bp_TransformSyncLiteComponent_C_UpdateRateOptimization::CallFunc_SelectReceivePhysicsDataFPS_TickInterval' has a wrong offset!");
static_assert(offsetof(Bp_TransformSyncLiteComponent_C_UpdateRateOptimization, CallFunc_Add_IntInt_ReturnValue) == 0x000088, "Member 'Bp_TransformSyncLiteComponent_C_UpdateRateOptimization::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Bp_TransformSyncLiteComponent_C_UpdateRateOptimization, Temp_int_Variable) == 0x00008C, "Member 'Bp_TransformSyncLiteComponent_C_UpdateRateOptimization::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(Bp_TransformSyncLiteComponent_C_UpdateRateOptimization, K2Node_Select_Default) == 0x000090, "Member 'Bp_TransformSyncLiteComponent_C_UpdateRateOptimization::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(Bp_TransformSyncLiteComponent_C_UpdateRateOptimization, CallFunc_Divide_DoubleDouble_ReturnValue_1) == 0x000098, "Member 'Bp_TransformSyncLiteComponent_C_UpdateRateOptimization::CallFunc_Divide_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Bp_TransformSyncLiteComponent_C_UpdateRateOptimization, CallFunc_K2_GetComponentLocation_ReturnValue_1) == 0x0000A0, "Member 'Bp_TransformSyncLiteComponent_C_UpdateRateOptimization::CallFunc_K2_GetComponentLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Bp_TransformSyncLiteComponent_C_UpdateRateOptimization, CallFunc_SelectFloat_ReturnValue) == 0x0000B8, "Member 'Bp_TransformSyncLiteComponent_C_UpdateRateOptimization::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Bp_TransformSyncLiteComponent_C_UpdateRateOptimization, CallFunc_GetAllActorsOfClass_OutActors) == 0x0000C0, "Member 'Bp_TransformSyncLiteComponent_C_UpdateRateOptimization::CallFunc_GetAllActorsOfClass_OutActors' has a wrong offset!");
static_assert(offsetof(Bp_TransformSyncLiteComponent_C_UpdateRateOptimization, CallFunc_CalculateTickGroup_ReturnValue_1) == 0x0000D0, "Member 'Bp_TransformSyncLiteComponent_C_UpdateRateOptimization::CallFunc_CalculateTickGroup_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Bp_TransformSyncLiteComponent_C_UpdateRateOptimization, CallFunc_Array_Get_Item) == 0x0000D8, "Member 'Bp_TransformSyncLiteComponent_C_UpdateRateOptimization::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Bp_TransformSyncLiteComponent_C_UpdateRateOptimization, CallFunc_NotEqual_ObjectObject_ReturnValue) == 0x0000E0, "Member 'Bp_TransformSyncLiteComponent_C_UpdateRateOptimization::CallFunc_NotEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(Bp_TransformSyncLiteComponent_C_UpdateRateOptimization, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x0000E8, "Member 'Bp_TransformSyncLiteComponent_C_UpdateRateOptimization::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Bp_TransformSyncLiteComponent_C_UpdateRateOptimization, CallFunc_Vector_Distance2D_ReturnValue_1) == 0x000100, "Member 'Bp_TransformSyncLiteComponent_C_UpdateRateOptimization::CallFunc_Vector_Distance2D_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Bp_TransformSyncLiteComponent_C_UpdateRateOptimization, CallFunc_NotEqual_IntInt_ReturnValue_1) == 0x000108, "Member 'Bp_TransformSyncLiteComponent_C_UpdateRateOptimization::CallFunc_NotEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Bp_TransformSyncLiteComponent_C_UpdateRateOptimization, CallFunc_Less_DoubleDouble_ReturnValue) == 0x000109, "Member 'Bp_TransformSyncLiteComponent_C_UpdateRateOptimization::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Bp_TransformSyncLiteComponent_C_UpdateRateOptimization, CallFunc_Array_Length_ReturnValue) == 0x00010C, "Member 'Bp_TransformSyncLiteComponent_C_UpdateRateOptimization::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(Bp_TransformSyncLiteComponent_C_UpdateRateOptimization, CallFunc_Less_IntInt_ReturnValue) == 0x000110, "Member 'Bp_TransformSyncLiteComponent_C_UpdateRateOptimization::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Bp_TransformSyncLiteComponent_C_UpdateRateOptimization, CallFunc_SetComponentTickInterval_TickInterval_ImplicitCast) == 0x000114, "Member 'Bp_TransformSyncLiteComponent_C_UpdateRateOptimization::CallFunc_SetComponentTickInterval_TickInterval_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Bp_TransformSyncLiteComponent_C_UpdateRateOptimization, CallFunc_SetComponentTickInterval_TickInterval_ImplicitCast_1) == 0x000118, "Member 'Bp_TransformSyncLiteComponent_C_UpdateRateOptimization::CallFunc_SetComponentTickInterval_TickInterval_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(Bp_TransformSyncLiteComponent_C_UpdateRateOptimization, CallFunc_SetComponentTickInterval_TickInterval_ImplicitCast_2) == 0x00011C, "Member 'Bp_TransformSyncLiteComponent_C_UpdateRateOptimization::CallFunc_SetComponentTickInterval_TickInterval_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(Bp_TransformSyncLiteComponent_C_UpdateRateOptimization, CallFunc_SetComponentTickInterval_TickInterval_ImplicitCast_3) == 0x000120, "Member 'Bp_TransformSyncLiteComponent_C_UpdateRateOptimization::CallFunc_SetComponentTickInterval_TickInterval_ImplicitCast_3' has a wrong offset!");

// Function Bp_TransformSyncLiteComponent.Bp_TransformSyncLiteComponent_C.UpdateRelativeTransformsServer
// 0x0060 (0x0060 - 0x0000)
struct Bp_TransformSyncLiteComponent_C_UpdateRelativeTransformsServer final
{
public:
	struct FVector_NetQuantize10                  InLocation;                                        // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	struct FVector_NetQuantize10                  InRotation;                                        // 0x0018(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	struct FVector_NetQuantize                    LinearVelocity;                                    // 0x0030(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	struct FVector_NetQuantize                    AngularVelocity;                                   // 0x0048(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Bp_TransformSyncLiteComponent_C_UpdateRelativeTransformsServer) == 0x000008, "Wrong alignment on Bp_TransformSyncLiteComponent_C_UpdateRelativeTransformsServer");
static_assert(sizeof(Bp_TransformSyncLiteComponent_C_UpdateRelativeTransformsServer) == 0x000060, "Wrong size on Bp_TransformSyncLiteComponent_C_UpdateRelativeTransformsServer");
static_assert(offsetof(Bp_TransformSyncLiteComponent_C_UpdateRelativeTransformsServer, InLocation) == 0x000000, "Member 'Bp_TransformSyncLiteComponent_C_UpdateRelativeTransformsServer::InLocation' has a wrong offset!");
static_assert(offsetof(Bp_TransformSyncLiteComponent_C_UpdateRelativeTransformsServer, InRotation) == 0x000018, "Member 'Bp_TransformSyncLiteComponent_C_UpdateRelativeTransformsServer::InRotation' has a wrong offset!");
static_assert(offsetof(Bp_TransformSyncLiteComponent_C_UpdateRelativeTransformsServer, LinearVelocity) == 0x000030, "Member 'Bp_TransformSyncLiteComponent_C_UpdateRelativeTransformsServer::LinearVelocity' has a wrong offset!");
static_assert(offsetof(Bp_TransformSyncLiteComponent_C_UpdateRelativeTransformsServer, AngularVelocity) == 0x000048, "Member 'Bp_TransformSyncLiteComponent_C_UpdateRelativeTransformsServer::AngularVelocity' has a wrong offset!");

// Function Bp_TransformSyncLiteComponent.Bp_TransformSyncLiteComponent_C.UpdateTransforms
// 0x0650 (0x0650 - 0x0000)
struct Bp_TransformSyncLiteComponent_C_UpdateTransforms final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsSimulatingPhysics_ReturnValue;          // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0xE];                                        // 0x0002(0x000E)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_K2_GetComponentToWorld_ReturnValue;       // 0x0010(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0070(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_InverseTransformLocation_ReturnValue;     // 0x0088(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue_1;    // 0x00A0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Vector_DistanceSquared_ReturnValue;       // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C1[0x7];                                       // 0x00C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Vector_DistanceSquared_ReturnValue_1;     // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_1;       // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D1[0x7];                                       // 0x00D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_BreakVector_NetQuantize10_X;              // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_NetQuantize10_Y;              // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_NetQuantize10_Z;              // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x00F0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_RInterpTo_ReturnValue;                    // 0x0108(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_VInterpTo_ReturnValue;                    // 0x0120(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_VInterpTo_ReturnValue_1;                  // 0x0138(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_VInterpTo_ReturnValue_2;                  // 0x0150(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_NetQuantize10_X_1;            // 0x0168(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_NetQuantize10_Y_1;            // 0x0170(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_NetQuantize10_Z_1;            // 0x0178(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue_1;                // 0x0180(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_198[0x8];                                      // 0x0198(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x01A0(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_K2_GetComponentToWorld_ReturnValue_1;     // 0x0200(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_TransformDirection_ReturnValue;           // 0x0260(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_TransformDirection_ReturnValue_1;         // 0x0278(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_ComposeTransforms_ReturnValue;            // 0x0290(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x02F0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x0308(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x0320(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetWorldLocationAndRotation_SweepHitResult; // 0x0338(0x00F8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FVector                                CallFunc_VInterpTo_ReturnValue_3;                  // 0x0430(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_VInterpTo_ReturnValue_4;                  // 0x0448(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_K2_GetComponentRotation_ReturnValue;      // 0x0460(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue_2;    // 0x0478(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_VInterpTo_ReturnValue_5;                  // 0x0490(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_NetQuantize10_X_2;            // 0x04A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_NetQuantize10_Y_2;            // 0x04B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_NetQuantize10_Z_2;            // 0x04B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue_2;                // 0x04C0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_RInterpTo_ReturnValue_1;                  // 0x04D8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_K2_SetWorldLocationAndRotation_SweepHitResult_1; // 0x04F0(0x00F8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	float                                         CallFunc_RInterpTo_DeltaTime_ImplicitCast;         // 0x05E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VInterpTo_DeltaTime_ImplicitCast;         // 0x05EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VInterpTo_DeltaTime_ImplicitCast_1;       // 0x05F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VInterpTo_DeltaTime_ImplicitCast_2;       // 0x05F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VInterpTo_DeltaTime_ImplicitCast_3;       // 0x05F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VInterpTo_DeltaTime_ImplicitCast_4;       // 0x05FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VInterpTo_DeltaTime_ImplicitCast_5;       // 0x0600(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RInterpTo_DeltaTime_ImplicitCast_1;       // 0x0604(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeRotator_Roll_ImplicitCast;            // 0x0608(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeRotator_Pitch_ImplicitCast;           // 0x060C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeRotator_Yaw_ImplicitCast;             // 0x0610(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RInterpTo_InterpSpeed_ImplicitCast;       // 0x0614(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VInterpTo_InterpSpeed_ImplicitCast;       // 0x0618(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VInterpTo_InterpSpeed_ImplicitCast_1;     // 0x061C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VInterpTo_InterpSpeed_ImplicitCast_2;     // 0x0620(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeRotator_Roll_ImplicitCast_1;          // 0x0624(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeRotator_Pitch_ImplicitCast_1;         // 0x0628(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeRotator_Yaw_ImplicitCast_1;           // 0x062C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VInterpTo_InterpSpeed_ImplicitCast_3;     // 0x0630(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VInterpTo_InterpSpeed_ImplicitCast_4;     // 0x0634(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VInterpTo_InterpSpeed_ImplicitCast_5;     // 0x0638(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RInterpTo_InterpSpeed_ImplicitCast_1;     // 0x063C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeRotator_Roll_ImplicitCast_2;          // 0x0640(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeRotator_Pitch_ImplicitCast_2;         // 0x0644(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeRotator_Yaw_ImplicitCast_2;           // 0x0648(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Bp_TransformSyncLiteComponent_C_UpdateTransforms) == 0x000010, "Wrong alignment on Bp_TransformSyncLiteComponent_C_UpdateTransforms");
static_assert(sizeof(Bp_TransformSyncLiteComponent_C_UpdateTransforms) == 0x000650, "Wrong size on Bp_TransformSyncLiteComponent_C_UpdateTransforms");
static_assert(offsetof(Bp_TransformSyncLiteComponent_C_UpdateTransforms, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'Bp_TransformSyncLiteComponent_C_UpdateTransforms::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Bp_TransformSyncLiteComponent_C_UpdateTransforms, CallFunc_IsSimulatingPhysics_ReturnValue) == 0x000001, "Member 'Bp_TransformSyncLiteComponent_C_UpdateTransforms::CallFunc_IsSimulatingPhysics_ReturnValue' has a wrong offset!");
static_assert(offsetof(Bp_TransformSyncLiteComponent_C_UpdateTransforms, CallFunc_K2_GetComponentToWorld_ReturnValue) == 0x000010, "Member 'Bp_TransformSyncLiteComponent_C_UpdateTransforms::CallFunc_K2_GetComponentToWorld_ReturnValue' has a wrong offset!");
static_assert(offsetof(Bp_TransformSyncLiteComponent_C_UpdateTransforms, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000070, "Member 'Bp_TransformSyncLiteComponent_C_UpdateTransforms::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Bp_TransformSyncLiteComponent_C_UpdateTransforms, CallFunc_InverseTransformLocation_ReturnValue) == 0x000088, "Member 'Bp_TransformSyncLiteComponent_C_UpdateTransforms::CallFunc_InverseTransformLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Bp_TransformSyncLiteComponent_C_UpdateTransforms, CallFunc_K2_GetComponentLocation_ReturnValue_1) == 0x0000A0, "Member 'Bp_TransformSyncLiteComponent_C_UpdateTransforms::CallFunc_K2_GetComponentLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Bp_TransformSyncLiteComponent_C_UpdateTransforms, CallFunc_Vector_DistanceSquared_ReturnValue) == 0x0000B8, "Member 'Bp_TransformSyncLiteComponent_C_UpdateTransforms::CallFunc_Vector_DistanceSquared_ReturnValue' has a wrong offset!");
static_assert(offsetof(Bp_TransformSyncLiteComponent_C_UpdateTransforms, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x0000C0, "Member 'Bp_TransformSyncLiteComponent_C_UpdateTransforms::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Bp_TransformSyncLiteComponent_C_UpdateTransforms, CallFunc_Vector_DistanceSquared_ReturnValue_1) == 0x0000C8, "Member 'Bp_TransformSyncLiteComponent_C_UpdateTransforms::CallFunc_Vector_DistanceSquared_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Bp_TransformSyncLiteComponent_C_UpdateTransforms, CallFunc_Greater_DoubleDouble_ReturnValue_1) == 0x0000D0, "Member 'Bp_TransformSyncLiteComponent_C_UpdateTransforms::CallFunc_Greater_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Bp_TransformSyncLiteComponent_C_UpdateTransforms, CallFunc_BreakVector_NetQuantize10_X) == 0x0000D8, "Member 'Bp_TransformSyncLiteComponent_C_UpdateTransforms::CallFunc_BreakVector_NetQuantize10_X' has a wrong offset!");
static_assert(offsetof(Bp_TransformSyncLiteComponent_C_UpdateTransforms, CallFunc_BreakVector_NetQuantize10_Y) == 0x0000E0, "Member 'Bp_TransformSyncLiteComponent_C_UpdateTransforms::CallFunc_BreakVector_NetQuantize10_Y' has a wrong offset!");
static_assert(offsetof(Bp_TransformSyncLiteComponent_C_UpdateTransforms, CallFunc_BreakVector_NetQuantize10_Z) == 0x0000E8, "Member 'Bp_TransformSyncLiteComponent_C_UpdateTransforms::CallFunc_BreakVector_NetQuantize10_Z' has a wrong offset!");
static_assert(offsetof(Bp_TransformSyncLiteComponent_C_UpdateTransforms, CallFunc_MakeRotator_ReturnValue) == 0x0000F0, "Member 'Bp_TransformSyncLiteComponent_C_UpdateTransforms::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(Bp_TransformSyncLiteComponent_C_UpdateTransforms, CallFunc_RInterpTo_ReturnValue) == 0x000108, "Member 'Bp_TransformSyncLiteComponent_C_UpdateTransforms::CallFunc_RInterpTo_ReturnValue' has a wrong offset!");
static_assert(offsetof(Bp_TransformSyncLiteComponent_C_UpdateTransforms, CallFunc_VInterpTo_ReturnValue) == 0x000120, "Member 'Bp_TransformSyncLiteComponent_C_UpdateTransforms::CallFunc_VInterpTo_ReturnValue' has a wrong offset!");
static_assert(offsetof(Bp_TransformSyncLiteComponent_C_UpdateTransforms, CallFunc_VInterpTo_ReturnValue_1) == 0x000138, "Member 'Bp_TransformSyncLiteComponent_C_UpdateTransforms::CallFunc_VInterpTo_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Bp_TransformSyncLiteComponent_C_UpdateTransforms, CallFunc_VInterpTo_ReturnValue_2) == 0x000150, "Member 'Bp_TransformSyncLiteComponent_C_UpdateTransforms::CallFunc_VInterpTo_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Bp_TransformSyncLiteComponent_C_UpdateTransforms, CallFunc_BreakVector_NetQuantize10_X_1) == 0x000168, "Member 'Bp_TransformSyncLiteComponent_C_UpdateTransforms::CallFunc_BreakVector_NetQuantize10_X_1' has a wrong offset!");
static_assert(offsetof(Bp_TransformSyncLiteComponent_C_UpdateTransforms, CallFunc_BreakVector_NetQuantize10_Y_1) == 0x000170, "Member 'Bp_TransformSyncLiteComponent_C_UpdateTransforms::CallFunc_BreakVector_NetQuantize10_Y_1' has a wrong offset!");
static_assert(offsetof(Bp_TransformSyncLiteComponent_C_UpdateTransforms, CallFunc_BreakVector_NetQuantize10_Z_1) == 0x000178, "Member 'Bp_TransformSyncLiteComponent_C_UpdateTransforms::CallFunc_BreakVector_NetQuantize10_Z_1' has a wrong offset!");
static_assert(offsetof(Bp_TransformSyncLiteComponent_C_UpdateTransforms, CallFunc_MakeRotator_ReturnValue_1) == 0x000180, "Member 'Bp_TransformSyncLiteComponent_C_UpdateTransforms::CallFunc_MakeRotator_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Bp_TransformSyncLiteComponent_C_UpdateTransforms, CallFunc_MakeTransform_ReturnValue) == 0x0001A0, "Member 'Bp_TransformSyncLiteComponent_C_UpdateTransforms::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(Bp_TransformSyncLiteComponent_C_UpdateTransforms, CallFunc_K2_GetComponentToWorld_ReturnValue_1) == 0x000200, "Member 'Bp_TransformSyncLiteComponent_C_UpdateTransforms::CallFunc_K2_GetComponentToWorld_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Bp_TransformSyncLiteComponent_C_UpdateTransforms, CallFunc_TransformDirection_ReturnValue) == 0x000260, "Member 'Bp_TransformSyncLiteComponent_C_UpdateTransforms::CallFunc_TransformDirection_ReturnValue' has a wrong offset!");
static_assert(offsetof(Bp_TransformSyncLiteComponent_C_UpdateTransforms, CallFunc_TransformDirection_ReturnValue_1) == 0x000278, "Member 'Bp_TransformSyncLiteComponent_C_UpdateTransforms::CallFunc_TransformDirection_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Bp_TransformSyncLiteComponent_C_UpdateTransforms, CallFunc_ComposeTransforms_ReturnValue) == 0x000290, "Member 'Bp_TransformSyncLiteComponent_C_UpdateTransforms::CallFunc_ComposeTransforms_ReturnValue' has a wrong offset!");
static_assert(offsetof(Bp_TransformSyncLiteComponent_C_UpdateTransforms, CallFunc_BreakTransform_Location) == 0x0002F0, "Member 'Bp_TransformSyncLiteComponent_C_UpdateTransforms::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(Bp_TransformSyncLiteComponent_C_UpdateTransforms, CallFunc_BreakTransform_Rotation) == 0x000308, "Member 'Bp_TransformSyncLiteComponent_C_UpdateTransforms::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(Bp_TransformSyncLiteComponent_C_UpdateTransforms, CallFunc_BreakTransform_Scale) == 0x000320, "Member 'Bp_TransformSyncLiteComponent_C_UpdateTransforms::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(Bp_TransformSyncLiteComponent_C_UpdateTransforms, CallFunc_K2_SetWorldLocationAndRotation_SweepHitResult) == 0x000338, "Member 'Bp_TransformSyncLiteComponent_C_UpdateTransforms::CallFunc_K2_SetWorldLocationAndRotation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(Bp_TransformSyncLiteComponent_C_UpdateTransforms, CallFunc_VInterpTo_ReturnValue_3) == 0x000430, "Member 'Bp_TransformSyncLiteComponent_C_UpdateTransforms::CallFunc_VInterpTo_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Bp_TransformSyncLiteComponent_C_UpdateTransforms, CallFunc_VInterpTo_ReturnValue_4) == 0x000448, "Member 'Bp_TransformSyncLiteComponent_C_UpdateTransforms::CallFunc_VInterpTo_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Bp_TransformSyncLiteComponent_C_UpdateTransforms, CallFunc_K2_GetComponentRotation_ReturnValue) == 0x000460, "Member 'Bp_TransformSyncLiteComponent_C_UpdateTransforms::CallFunc_K2_GetComponentRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Bp_TransformSyncLiteComponent_C_UpdateTransforms, CallFunc_K2_GetComponentLocation_ReturnValue_2) == 0x000478, "Member 'Bp_TransformSyncLiteComponent_C_UpdateTransforms::CallFunc_K2_GetComponentLocation_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Bp_TransformSyncLiteComponent_C_UpdateTransforms, CallFunc_VInterpTo_ReturnValue_5) == 0x000490, "Member 'Bp_TransformSyncLiteComponent_C_UpdateTransforms::CallFunc_VInterpTo_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Bp_TransformSyncLiteComponent_C_UpdateTransforms, CallFunc_BreakVector_NetQuantize10_X_2) == 0x0004A8, "Member 'Bp_TransformSyncLiteComponent_C_UpdateTransforms::CallFunc_BreakVector_NetQuantize10_X_2' has a wrong offset!");
static_assert(offsetof(Bp_TransformSyncLiteComponent_C_UpdateTransforms, CallFunc_BreakVector_NetQuantize10_Y_2) == 0x0004B0, "Member 'Bp_TransformSyncLiteComponent_C_UpdateTransforms::CallFunc_BreakVector_NetQuantize10_Y_2' has a wrong offset!");
static_assert(offsetof(Bp_TransformSyncLiteComponent_C_UpdateTransforms, CallFunc_BreakVector_NetQuantize10_Z_2) == 0x0004B8, "Member 'Bp_TransformSyncLiteComponent_C_UpdateTransforms::CallFunc_BreakVector_NetQuantize10_Z_2' has a wrong offset!");
static_assert(offsetof(Bp_TransformSyncLiteComponent_C_UpdateTransforms, CallFunc_MakeRotator_ReturnValue_2) == 0x0004C0, "Member 'Bp_TransformSyncLiteComponent_C_UpdateTransforms::CallFunc_MakeRotator_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Bp_TransformSyncLiteComponent_C_UpdateTransforms, CallFunc_RInterpTo_ReturnValue_1) == 0x0004D8, "Member 'Bp_TransformSyncLiteComponent_C_UpdateTransforms::CallFunc_RInterpTo_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Bp_TransformSyncLiteComponent_C_UpdateTransforms, CallFunc_K2_SetWorldLocationAndRotation_SweepHitResult_1) == 0x0004F0, "Member 'Bp_TransformSyncLiteComponent_C_UpdateTransforms::CallFunc_K2_SetWorldLocationAndRotation_SweepHitResult_1' has a wrong offset!");
static_assert(offsetof(Bp_TransformSyncLiteComponent_C_UpdateTransforms, CallFunc_RInterpTo_DeltaTime_ImplicitCast) == 0x0005E8, "Member 'Bp_TransformSyncLiteComponent_C_UpdateTransforms::CallFunc_RInterpTo_DeltaTime_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Bp_TransformSyncLiteComponent_C_UpdateTransforms, CallFunc_VInterpTo_DeltaTime_ImplicitCast) == 0x0005EC, "Member 'Bp_TransformSyncLiteComponent_C_UpdateTransforms::CallFunc_VInterpTo_DeltaTime_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Bp_TransformSyncLiteComponent_C_UpdateTransforms, CallFunc_VInterpTo_DeltaTime_ImplicitCast_1) == 0x0005F0, "Member 'Bp_TransformSyncLiteComponent_C_UpdateTransforms::CallFunc_VInterpTo_DeltaTime_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(Bp_TransformSyncLiteComponent_C_UpdateTransforms, CallFunc_VInterpTo_DeltaTime_ImplicitCast_2) == 0x0005F4, "Member 'Bp_TransformSyncLiteComponent_C_UpdateTransforms::CallFunc_VInterpTo_DeltaTime_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(Bp_TransformSyncLiteComponent_C_UpdateTransforms, CallFunc_VInterpTo_DeltaTime_ImplicitCast_3) == 0x0005F8, "Member 'Bp_TransformSyncLiteComponent_C_UpdateTransforms::CallFunc_VInterpTo_DeltaTime_ImplicitCast_3' has a wrong offset!");
static_assert(offsetof(Bp_TransformSyncLiteComponent_C_UpdateTransforms, CallFunc_VInterpTo_DeltaTime_ImplicitCast_4) == 0x0005FC, "Member 'Bp_TransformSyncLiteComponent_C_UpdateTransforms::CallFunc_VInterpTo_DeltaTime_ImplicitCast_4' has a wrong offset!");
static_assert(offsetof(Bp_TransformSyncLiteComponent_C_UpdateTransforms, CallFunc_VInterpTo_DeltaTime_ImplicitCast_5) == 0x000600, "Member 'Bp_TransformSyncLiteComponent_C_UpdateTransforms::CallFunc_VInterpTo_DeltaTime_ImplicitCast_5' has a wrong offset!");
static_assert(offsetof(Bp_TransformSyncLiteComponent_C_UpdateTransforms, CallFunc_RInterpTo_DeltaTime_ImplicitCast_1) == 0x000604, "Member 'Bp_TransformSyncLiteComponent_C_UpdateTransforms::CallFunc_RInterpTo_DeltaTime_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(Bp_TransformSyncLiteComponent_C_UpdateTransforms, CallFunc_MakeRotator_Roll_ImplicitCast) == 0x000608, "Member 'Bp_TransformSyncLiteComponent_C_UpdateTransforms::CallFunc_MakeRotator_Roll_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Bp_TransformSyncLiteComponent_C_UpdateTransforms, CallFunc_MakeRotator_Pitch_ImplicitCast) == 0x00060C, "Member 'Bp_TransformSyncLiteComponent_C_UpdateTransforms::CallFunc_MakeRotator_Pitch_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Bp_TransformSyncLiteComponent_C_UpdateTransforms, CallFunc_MakeRotator_Yaw_ImplicitCast) == 0x000610, "Member 'Bp_TransformSyncLiteComponent_C_UpdateTransforms::CallFunc_MakeRotator_Yaw_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Bp_TransformSyncLiteComponent_C_UpdateTransforms, CallFunc_RInterpTo_InterpSpeed_ImplicitCast) == 0x000614, "Member 'Bp_TransformSyncLiteComponent_C_UpdateTransforms::CallFunc_RInterpTo_InterpSpeed_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Bp_TransformSyncLiteComponent_C_UpdateTransforms, CallFunc_VInterpTo_InterpSpeed_ImplicitCast) == 0x000618, "Member 'Bp_TransformSyncLiteComponent_C_UpdateTransforms::CallFunc_VInterpTo_InterpSpeed_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Bp_TransformSyncLiteComponent_C_UpdateTransforms, CallFunc_VInterpTo_InterpSpeed_ImplicitCast_1) == 0x00061C, "Member 'Bp_TransformSyncLiteComponent_C_UpdateTransforms::CallFunc_VInterpTo_InterpSpeed_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(Bp_TransformSyncLiteComponent_C_UpdateTransforms, CallFunc_VInterpTo_InterpSpeed_ImplicitCast_2) == 0x000620, "Member 'Bp_TransformSyncLiteComponent_C_UpdateTransforms::CallFunc_VInterpTo_InterpSpeed_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(Bp_TransformSyncLiteComponent_C_UpdateTransforms, CallFunc_MakeRotator_Roll_ImplicitCast_1) == 0x000624, "Member 'Bp_TransformSyncLiteComponent_C_UpdateTransforms::CallFunc_MakeRotator_Roll_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(Bp_TransformSyncLiteComponent_C_UpdateTransforms, CallFunc_MakeRotator_Pitch_ImplicitCast_1) == 0x000628, "Member 'Bp_TransformSyncLiteComponent_C_UpdateTransforms::CallFunc_MakeRotator_Pitch_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(Bp_TransformSyncLiteComponent_C_UpdateTransforms, CallFunc_MakeRotator_Yaw_ImplicitCast_1) == 0x00062C, "Member 'Bp_TransformSyncLiteComponent_C_UpdateTransforms::CallFunc_MakeRotator_Yaw_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(Bp_TransformSyncLiteComponent_C_UpdateTransforms, CallFunc_VInterpTo_InterpSpeed_ImplicitCast_3) == 0x000630, "Member 'Bp_TransformSyncLiteComponent_C_UpdateTransforms::CallFunc_VInterpTo_InterpSpeed_ImplicitCast_3' has a wrong offset!");
static_assert(offsetof(Bp_TransformSyncLiteComponent_C_UpdateTransforms, CallFunc_VInterpTo_InterpSpeed_ImplicitCast_4) == 0x000634, "Member 'Bp_TransformSyncLiteComponent_C_UpdateTransforms::CallFunc_VInterpTo_InterpSpeed_ImplicitCast_4' has a wrong offset!");
static_assert(offsetof(Bp_TransformSyncLiteComponent_C_UpdateTransforms, CallFunc_VInterpTo_InterpSpeed_ImplicitCast_5) == 0x000638, "Member 'Bp_TransformSyncLiteComponent_C_UpdateTransforms::CallFunc_VInterpTo_InterpSpeed_ImplicitCast_5' has a wrong offset!");
static_assert(offsetof(Bp_TransformSyncLiteComponent_C_UpdateTransforms, CallFunc_RInterpTo_InterpSpeed_ImplicitCast_1) == 0x00063C, "Member 'Bp_TransformSyncLiteComponent_C_UpdateTransforms::CallFunc_RInterpTo_InterpSpeed_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(Bp_TransformSyncLiteComponent_C_UpdateTransforms, CallFunc_MakeRotator_Roll_ImplicitCast_2) == 0x000640, "Member 'Bp_TransformSyncLiteComponent_C_UpdateTransforms::CallFunc_MakeRotator_Roll_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(Bp_TransformSyncLiteComponent_C_UpdateTransforms, CallFunc_MakeRotator_Pitch_ImplicitCast_2) == 0x000644, "Member 'Bp_TransformSyncLiteComponent_C_UpdateTransforms::CallFunc_MakeRotator_Pitch_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(Bp_TransformSyncLiteComponent_C_UpdateTransforms, CallFunc_MakeRotator_Yaw_ImplicitCast_2) == 0x000648, "Member 'Bp_TransformSyncLiteComponent_C_UpdateTransforms::CallFunc_MakeRotator_Yaw_ImplicitCast_2' has a wrong offset!");

// Function Bp_TransformSyncLiteComponent.Bp_TransformSyncLiteComponent_C.UpdateWorldTransformsServer
// 0x0060 (0x0060 - 0x0000)
struct Bp_TransformSyncLiteComponent_C_UpdateWorldTransformsServer final
{
public:
	struct FVector_NetQuantize10                  InLocation;                                        // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	struct FVector_NetQuantize10                  InRotation;                                        // 0x0018(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	struct FVector_NetQuantize                    LinearVelocity;                                    // 0x0030(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	struct FVector_NetQuantize                    AngularVelocity;                                   // 0x0048(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Bp_TransformSyncLiteComponent_C_UpdateWorldTransformsServer) == 0x000008, "Wrong alignment on Bp_TransformSyncLiteComponent_C_UpdateWorldTransformsServer");
static_assert(sizeof(Bp_TransformSyncLiteComponent_C_UpdateWorldTransformsServer) == 0x000060, "Wrong size on Bp_TransformSyncLiteComponent_C_UpdateWorldTransformsServer");
static_assert(offsetof(Bp_TransformSyncLiteComponent_C_UpdateWorldTransformsServer, InLocation) == 0x000000, "Member 'Bp_TransformSyncLiteComponent_C_UpdateWorldTransformsServer::InLocation' has a wrong offset!");
static_assert(offsetof(Bp_TransformSyncLiteComponent_C_UpdateWorldTransformsServer, InRotation) == 0x000018, "Member 'Bp_TransformSyncLiteComponent_C_UpdateWorldTransformsServer::InRotation' has a wrong offset!");
static_assert(offsetof(Bp_TransformSyncLiteComponent_C_UpdateWorldTransformsServer, LinearVelocity) == 0x000030, "Member 'Bp_TransformSyncLiteComponent_C_UpdateWorldTransformsServer::LinearVelocity' has a wrong offset!");
static_assert(offsetof(Bp_TransformSyncLiteComponent_C_UpdateWorldTransformsServer, AngularVelocity) == 0x000048, "Member 'Bp_TransformSyncLiteComponent_C_UpdateWorldTransformsServer::AngularVelocity' has a wrong offset!");

}

