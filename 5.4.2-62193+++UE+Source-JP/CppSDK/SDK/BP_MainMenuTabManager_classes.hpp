#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_MainMenuTabManager

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_MainMenuTabManager.BP_MainMenuTabManager_C
// 0x00A0 (0x0330 - 0x0290)
class ABP_MainMenuTabManager_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0290(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x0298(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class ABP_MainMenuTabCameraController_C*      DefaultTabController;                              // 0x02A0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	TArray<class ABP_MainMenuTabCameraController_C*> TabControllers;                                    // 0x02A8(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	TMap<class FName, class ABP_MainMenuTabCameraController_C*> TabControllersMap;                                 // 0x02B8(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	class ABP_Lighting_Controller_C*              LightingController;                                // 0x0308(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class ABP_MainMenuTabCameraController_C*      ActiveTabController;                               // 0x0310(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                          IsActiveTabControllerTransformed;                  // 0x0318(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_319[0x3];                                      // 0x0319(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CurrentTab;                                        // 0x031C(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          NewTab;                                            // 0x0324(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_325[0x3];                                      // 0x0325(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class ALevelSequenceActor*                    IntroSequence;                                     // 0x0328(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)

public:
	void ActivateCamera(const class FName& TabControllerNameId, double BlendTime, double NewParam);
	void ExecuteUbergraph_BP_MainMenuTabManager(int32 EntryPoint);
	void FindAndCacheLightingController();
	void FindControllerOrDefault(const class FName& TabControllerNameId, class ABP_MainMenuTabCameraController_C** Controller);
	void Handle_MainMenuIntroSequence_Completed();
	void HandleBlendToTabCamera(const struct FS_Message_BlendToTabCamera& Message);
	void HandleTabOpened(const struct FS_Message_TabOpened& Message);
	void InpActEvt_IA_ASkipSplashScreen_K2Node_EnhancedInputActionEvent_0(const struct FInputActionValue& ActionValue, float ElapsedTime, float TriggeredTime, const class UInputAction* SourceAction);
	void OnMessageReceived_918589DC4D3F1AFC3E8C9686E4A729DE(class UAsyncAction_ListenForGameplayMessage* ProxyObject, const struct FGameplayTag& ActualChannel);
	void OnMessageReceived_EB9AEA7D446EB7A97D36A6AAD389F62F(class UAsyncAction_ListenForGameplayMessage* ProxyObject, const struct FGameplayTag& ActualChannel);
	void PlayAreaAmbienceSound(class USoundBase* AmbienceSound);
	void PlayAreaEnterSound(class USoundBase* EnterSound);
	void PlayMainMenuIntroSequence();
	void PlayTabAreaAudio(class FName TabName);
	void ReceiveBeginPlay();
	void TryActivateDefaultTabCamera();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_MainMenuTabManager_C">();
	}
	static class ABP_MainMenuTabManager_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_MainMenuTabManager_C>();
	}
};
static_assert(alignof(ABP_MainMenuTabManager_C) == 0x000008, "Wrong alignment on ABP_MainMenuTabManager_C");
static_assert(sizeof(ABP_MainMenuTabManager_C) == 0x000330, "Wrong size on ABP_MainMenuTabManager_C");
static_assert(offsetof(ABP_MainMenuTabManager_C, UberGraphFrame) == 0x000290, "Member 'ABP_MainMenuTabManager_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_MainMenuTabManager_C, DefaultSceneRoot) == 0x000298, "Member 'ABP_MainMenuTabManager_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ABP_MainMenuTabManager_C, DefaultTabController) == 0x0002A0, "Member 'ABP_MainMenuTabManager_C::DefaultTabController' has a wrong offset!");
static_assert(offsetof(ABP_MainMenuTabManager_C, TabControllers) == 0x0002A8, "Member 'ABP_MainMenuTabManager_C::TabControllers' has a wrong offset!");
static_assert(offsetof(ABP_MainMenuTabManager_C, TabControllersMap) == 0x0002B8, "Member 'ABP_MainMenuTabManager_C::TabControllersMap' has a wrong offset!");
static_assert(offsetof(ABP_MainMenuTabManager_C, LightingController) == 0x000308, "Member 'ABP_MainMenuTabManager_C::LightingController' has a wrong offset!");
static_assert(offsetof(ABP_MainMenuTabManager_C, ActiveTabController) == 0x000310, "Member 'ABP_MainMenuTabManager_C::ActiveTabController' has a wrong offset!");
static_assert(offsetof(ABP_MainMenuTabManager_C, IsActiveTabControllerTransformed) == 0x000318, "Member 'ABP_MainMenuTabManager_C::IsActiveTabControllerTransformed' has a wrong offset!");
static_assert(offsetof(ABP_MainMenuTabManager_C, CurrentTab) == 0x00031C, "Member 'ABP_MainMenuTabManager_C::CurrentTab' has a wrong offset!");
static_assert(offsetof(ABP_MainMenuTabManager_C, NewTab) == 0x000324, "Member 'ABP_MainMenuTabManager_C::NewTab' has a wrong offset!");
static_assert(offsetof(ABP_MainMenuTabManager_C, IntroSequence) == 0x000328, "Member 'ABP_MainMenuTabManager_C::IntroSequence' has a wrong offset!");

}

