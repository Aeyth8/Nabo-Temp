#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: IWCore

#include "Basic.hpp"

#include "IWCore_classes.hpp"
#include "IWCore_parameters.hpp"


namespace SDK
{

// Function IWCore.ArrayLibraryCore.ArraySortFloat
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// TArray<float>                           TargetArray                                            (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
// TArray<float>                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<float> UArrayLibraryCore::ArraySortFloat(const TArray<float>& TargetArray)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("ArrayLibraryCore", "ArraySortFloat");

	Params::ArrayLibraryCore_ArraySortFloat Parms{};

	Parms.TargetArray = std::move(TargetArray);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function IWCore.ArrayLibraryCore.ArraySortInteger
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// TArray<int32>                           TargetArray                                            (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
// TArray<int32>                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<int32> UArrayLibraryCore::ArraySortInteger(const TArray<int32>& TargetArray)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("ArrayLibraryCore", "ArraySortInteger");

	Params::ArrayLibraryCore_ArraySortInteger Parms{};

	Parms.TargetArray = std::move(TargetArray);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function IWCore.ArrayLibraryCore.ArraySortString
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// TArray<class FString>                   TargetArray                                            (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
// TArray<class FString>                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class FString> UArrayLibraryCore::ArraySortString(const TArray<class FString>& TargetArray)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("ArrayLibraryCore", "ArraySortString");

	Params::ArrayLibraryCore_ArraySortString Parms{};

	Parms.TargetArray = std::move(TargetArray);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function IWCore.FunctionLibraryCore.AddTimespanToDateTime
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FDateTime                        DateTimeIn                                             (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FTimespan                        TimespanIn                                             (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FDateTime                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FDateTime UFunctionLibraryCore::AddTimespanToDateTime(const struct FDateTime& DateTimeIn, const struct FTimespan& TimespanIn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FunctionLibraryCore", "AddTimespanToDateTime");

	Params::FunctionLibraryCore_AddTimespanToDateTime Parms{};

	Parms.DateTimeIn = std::move(DateTimeIn);
	Parms.TimespanIn = std::move(TimespanIn);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function IWCore.FunctionLibraryCore.GetBuildDateTime
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UFunctionLibraryCore::GetBuildDateTime()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FunctionLibraryCore", "GetBuildDateTime");

	Params::FunctionLibraryCore_GetBuildDateTime Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function IWCore.FunctionLibraryCore.GetProjectVersion
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UFunctionLibraryCore::GetProjectVersion()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FunctionLibraryCore", "GetProjectVersion");

	Params::FunctionLibraryCore_GetProjectVersion Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function IWCore.TagLookupPrimaryDataAsset.GetTaggedAsset
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// struct FGameplayTag                     AssetIdentifier_0                                      (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TSoftObjectPtr<class UTagLookupPrimaryDataAsset>ReturnValue                                            (Parm, OutParm, ReturnParm, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

TSoftObjectPtr<class UTagLookupPrimaryDataAsset> UTagLookupPrimaryDataAsset::GetTaggedAsset(const struct FGameplayTag& AssetIdentifier_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TagLookupPrimaryDataAsset", "GetTaggedAsset");

	Params::TagLookupPrimaryDataAsset_GetTaggedAsset Parms{};

	Parms.AssetIdentifier_0 = std::move(AssetIdentifier_0);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function IWCore.TagLookupPrimaryDataAsset.GetAssetIdentifier
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FGameplayTag                     ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FGameplayTag UTagLookupPrimaryDataAsset::GetAssetIdentifier() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TagLookupPrimaryDataAsset", "GetAssetIdentifier");

	Params::TagLookupPrimaryDataAsset_GetAssetIdentifier Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}

}

