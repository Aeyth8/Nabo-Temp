#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_TeamVolume

#include "Basic.hpp"

#include "BP_TeamVolume_classes.hpp"
#include "BP_TeamVolume_parameters.hpp"


namespace SDK
{

// Function BP_TeamVolume.BP_TeamVolume_C.AddCharacterToTresspassingList
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_ResidentCharacter_C*          NewItem                                                (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash)

void ABP_TeamVolume_C::AddCharacterToTresspassingList(const class ABP_ResidentCharacter_C*& NewItem)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TeamVolume_C", "AddCharacterToTresspassingList");

	Params::BP_TeamVolume_C_AddCharacterToTresspassingList Parms{};

	Parms.NewItem = NewItem;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_TeamVolume.BP_TeamVolume_C.ApplyMarkOfDeathToTrespassers
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_TeamVolume_C::ApplyMarkOfDeathToTrespassers()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TeamVolume_C", "ApplyMarkOfDeathToTrespassers");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_TeamVolume.BP_TeamVolume_C.DebugPrint
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// uint8                                   CharacterId                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// uint8                                   TeamVolumeID                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_TeamVolume_C::DebugPrint(uint8 CharacterId, uint8 TeamVolumeID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TeamVolume_C", "DebugPrint");

	Params::BP_TeamVolume_C_DebugPrint Parms{};

	Parms.CharacterId = CharacterId;
	Parms.TeamVolumeID = TeamVolumeID;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_TeamVolume.BP_TeamVolume_C.ExecuteUbergraph_BP_TeamVolume
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_TeamVolume_C::ExecuteUbergraph_BP_TeamVolume(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TeamVolume_C", "ExecuteUbergraph_BP_TeamVolume");

	Params::BP_TeamVolume_C_ExecuteUbergraph_BP_TeamVolume Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_TeamVolume.BP_TeamVolume_C.GetTeamID
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// uint8                                   Return                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_TeamVolume_C::GetTeamID(uint8* Return)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TeamVolume_C", "GetTeamID");

	Params::BP_TeamVolume_C_GetTeamID Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Return != nullptr)
		*Return = Parms.Return;
}


// Function BP_TeamVolume.BP_TeamVolume_C.IsNight
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool ABP_TeamVolume_C::IsNight()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TeamVolume_C", "IsNight");

	Params::BP_TeamVolume_C_IsNight Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_TeamVolume.BP_TeamVolume_C.On_CharacterEntered__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_ResidentCharacter_C*          Character                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_TeamVolume_C::On_CharacterEntered__DelegateSignature(class ABP_ResidentCharacter_C* Character)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TeamVolume_C", "On_CharacterEntered__DelegateSignature");

	Params::BP_TeamVolume_C_On_CharacterEntered__DelegateSignature Parms{};

	Parms.Character = Character;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_TeamVolume.BP_TeamVolume_C.On_CharacterLeft__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_ResidentCharacter_C*          Character                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_TeamVolume_C::On_CharacterLeft__DelegateSignature(class ABP_ResidentCharacter_C* Character)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TeamVolume_C", "On_CharacterLeft__DelegateSignature");

	Params::BP_TeamVolume_C_On_CharacterLeft__DelegateSignature Parms{};

	Parms.Character = Character;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_TeamVolume.BP_TeamVolume_C.On_Dead_Event
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class ACharacter*                       Character                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_TeamVolume_C::On_Dead_Event(class ACharacter* Character)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TeamVolume_C", "On_Dead_Event");

	Params::BP_TeamVolume_C_On_Dead_Event Parms{};

	Parms.Character = Character;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_TeamVolume.BP_TeamVolume_C.On_TimeOfDayChange_Event
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// E_TimeOfDay                             TimeOfDay                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_TeamVolume_C::On_TimeOfDayChange_Event(E_TimeOfDay TimeOfDay)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TeamVolume_C", "On_TimeOfDayChange_Event");

	Params::BP_TeamVolume_C_On_TimeOfDayChange_Event Parms{};

	Parms.TimeOfDay = TimeOfDay;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_TeamVolume.BP_TeamVolume_C.OnEnded_FE0E2DCF41BC7E2A58B17785731894C5
// (BlueprintCallable, BlueprintEvent)

void ABP_TeamVolume_C::OnEnded_FE0E2DCF41BC7E2A58B17785731894C5()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TeamVolume_C", "OnEnded_FE0E2DCF41BC7E2A58B17785731894C5");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_TeamVolume.BP_TeamVolume_C.ReceiveActorBeginOverlap
// (Event, Public, BlueprintEvent)
// Parameters:
// class AActor*                           OtherActor                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_TeamVolume_C::ReceiveActorBeginOverlap(class AActor* OtherActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TeamVolume_C", "ReceiveActorBeginOverlap");

	Params::BP_TeamVolume_C_ReceiveActorBeginOverlap Parms{};

	Parms.OtherActor = OtherActor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_TeamVolume.BP_TeamVolume_C.ReceiveActorEndOverlap
// (Event, Public, BlueprintEvent)
// Parameters:
// class AActor*                           OtherActor                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_TeamVolume_C::ReceiveActorEndOverlap(class AActor* OtherActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TeamVolume_C", "ReceiveActorEndOverlap");

	Params::BP_TeamVolume_C_ReceiveActorEndOverlap Parms{};

	Parms.OtherActor = OtherActor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_TeamVolume.BP_TeamVolume_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ABP_TeamVolume_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TeamVolume_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}

}

