#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WI_TwitchVoteHUDTeam

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "SlateCore_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WI_TwitchVoteHUDTeam.WI_TwitchVoteHUDTeam_C
// 0x0030 (0x0310 - 0x02E0)
class UWI_TwitchVoteHUDTeam_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02E0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UImage*                                 Foreground;                                        // 0x02E8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       VotesLabel;                                        // 0x02F0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	struct FSlateColor                            TeamColor;                                         // 0x02F8(0x0014)(Edit, BlueprintVisible)
	int32                                         Votes;                                             // 0x030C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_WI_TwitchVoteHUDTeam(int32 EntryPoint);
	void PreConstruct(bool IsDesignTime);
	void SetTeamColor(const struct FSlateColor& TeamColor_0);
	void SetVotes(int32 Votes_0);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WI_TwitchVoteHUDTeam_C">();
	}
	static class UWI_TwitchVoteHUDTeam_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWI_TwitchVoteHUDTeam_C>();
	}
};
static_assert(alignof(UWI_TwitchVoteHUDTeam_C) == 0x000008, "Wrong alignment on UWI_TwitchVoteHUDTeam_C");
static_assert(sizeof(UWI_TwitchVoteHUDTeam_C) == 0x000310, "Wrong size on UWI_TwitchVoteHUDTeam_C");
static_assert(offsetof(UWI_TwitchVoteHUDTeam_C, UberGraphFrame) == 0x0002E0, "Member 'UWI_TwitchVoteHUDTeam_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWI_TwitchVoteHUDTeam_C, Foreground) == 0x0002E8, "Member 'UWI_TwitchVoteHUDTeam_C::Foreground' has a wrong offset!");
static_assert(offsetof(UWI_TwitchVoteHUDTeam_C, VotesLabel) == 0x0002F0, "Member 'UWI_TwitchVoteHUDTeam_C::VotesLabel' has a wrong offset!");
static_assert(offsetof(UWI_TwitchVoteHUDTeam_C, TeamColor) == 0x0002F8, "Member 'UWI_TwitchVoteHUDTeam_C::TeamColor' has a wrong offset!");
static_assert(offsetof(UWI_TwitchVoteHUDTeam_C, Votes) == 0x00030C, "Member 'UWI_TwitchVoteHUDTeam_C::Votes' has a wrong offset!");

}

