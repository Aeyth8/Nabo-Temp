#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GA_Bash

#include "Basic.hpp"

#include "E_ImpactEffect_structs.hpp"
#include "Engine_structs.hpp"
#include "GameplayAbilities_structs.hpp"
#include "PhysicsCore_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "GASIW_structs.hpp"
#include "JP_structs.hpp"
#include "S_ChargeBarEndGameplayMessage_structs.hpp"


namespace SDK::Params
{

// Function GA_Bash.GA_Bash_C.AddAffectedCue
// 0x03B0 (0x03B0 - 0x0000)
struct GA_Bash_C_AddAffectedCue final
{
public:
	struct FHitResult                             Hit;                                               // 0x0000(0x00F8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FVector                                L_OwnerForward;                                    // 0x00F8(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                L_TraceFrom;                                       // 0x0110(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTagContainer                  Temp_struct_Variable;                              // 0x0128(0x0020)()
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x0148(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x0149(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14A[0x2];                                      // 0x014A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x014C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x0150(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_154[0x4];                                      // 0x0154(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x0158(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x0170(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x0188(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x01A0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x01B8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x01C0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x01C8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x01D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_BoneName;                  // 0x01D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x01E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x01E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x01E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1EC[0x4];                                      // 0x01EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x01F0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x0208(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTagContainer                  Temp_struct_Variable_1;                            // 0x0220(0x0020)()
	bool                                          Temp_bool_Variable;                                // 0x0240(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_HasAuthority_ReturnValue;              // 0x0241(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_242[0x6];                                      // 0x0242(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwningActorFromActorInfo_ReturnValue;  // 0x0248(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0250(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_251[0x7];                                      // 0x0251(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwningActorFromActorInfo_ReturnValue_1; // 0x0258(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAbilitySystemComponent*                CallFunc_GetAbilitySystemComponent_ReturnValue;    // 0x0260(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTagContainer                  K2Node_Select_Default;                             // 0x0268(0x0020)()
	class UAbilitySystemComponentIW*              K2Node_DynamicCast_AsAbility_System_Component_IW;  // 0x0288(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0290(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_291[0x7];                                      // 0x0291(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetSpawnedActor_Return;                   // 0x0298(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetAvatarActorFromActorInfo_ReturnValue;  // 0x02A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetCosmeticLocationAndNormal_Location;    // 0x02A8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetCosmeticLocationAndNormal_Normal;      // 0x02C0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayCueParameters                 CallFunc_MakeGameplayCueParameters_ReturnValue;    // 0x02D8(0x00D8)(ContainsInstancedReference)
};
static_assert(alignof(GA_Bash_C_AddAffectedCue) == 0x000008, "Wrong alignment on GA_Bash_C_AddAffectedCue");
static_assert(sizeof(GA_Bash_C_AddAffectedCue) == 0x0003B0, "Wrong size on GA_Bash_C_AddAffectedCue");
static_assert(offsetof(GA_Bash_C_AddAffectedCue, Hit) == 0x000000, "Member 'GA_Bash_C_AddAffectedCue::Hit' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_AddAffectedCue, L_OwnerForward) == 0x0000F8, "Member 'GA_Bash_C_AddAffectedCue::L_OwnerForward' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_AddAffectedCue, L_TraceFrom) == 0x000110, "Member 'GA_Bash_C_AddAffectedCue::L_TraceFrom' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_AddAffectedCue, Temp_struct_Variable) == 0x000128, "Member 'GA_Bash_C_AddAffectedCue::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_AddAffectedCue, CallFunc_BreakHitResult_bBlockingHit) == 0x000148, "Member 'GA_Bash_C_AddAffectedCue::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_AddAffectedCue, CallFunc_BreakHitResult_bInitialOverlap) == 0x000149, "Member 'GA_Bash_C_AddAffectedCue::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_AddAffectedCue, CallFunc_BreakHitResult_Time) == 0x00014C, "Member 'GA_Bash_C_AddAffectedCue::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_AddAffectedCue, CallFunc_BreakHitResult_Distance) == 0x000150, "Member 'GA_Bash_C_AddAffectedCue::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_AddAffectedCue, CallFunc_BreakHitResult_Location) == 0x000158, "Member 'GA_Bash_C_AddAffectedCue::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_AddAffectedCue, CallFunc_BreakHitResult_ImpactPoint) == 0x000170, "Member 'GA_Bash_C_AddAffectedCue::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_AddAffectedCue, CallFunc_BreakHitResult_Normal) == 0x000188, "Member 'GA_Bash_C_AddAffectedCue::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_AddAffectedCue, CallFunc_BreakHitResult_ImpactNormal) == 0x0001A0, "Member 'GA_Bash_C_AddAffectedCue::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_AddAffectedCue, CallFunc_BreakHitResult_PhysMat) == 0x0001B8, "Member 'GA_Bash_C_AddAffectedCue::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_AddAffectedCue, CallFunc_BreakHitResult_HitActor) == 0x0001C0, "Member 'GA_Bash_C_AddAffectedCue::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_AddAffectedCue, CallFunc_BreakHitResult_HitComponent) == 0x0001C8, "Member 'GA_Bash_C_AddAffectedCue::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_AddAffectedCue, CallFunc_BreakHitResult_HitBoneName) == 0x0001D0, "Member 'GA_Bash_C_AddAffectedCue::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_AddAffectedCue, CallFunc_BreakHitResult_BoneName) == 0x0001D8, "Member 'GA_Bash_C_AddAffectedCue::CallFunc_BreakHitResult_BoneName' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_AddAffectedCue, CallFunc_BreakHitResult_HitItem) == 0x0001E0, "Member 'GA_Bash_C_AddAffectedCue::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_AddAffectedCue, CallFunc_BreakHitResult_ElementIndex) == 0x0001E4, "Member 'GA_Bash_C_AddAffectedCue::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_AddAffectedCue, CallFunc_BreakHitResult_FaceIndex) == 0x0001E8, "Member 'GA_Bash_C_AddAffectedCue::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_AddAffectedCue, CallFunc_BreakHitResult_TraceStart) == 0x0001F0, "Member 'GA_Bash_C_AddAffectedCue::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_AddAffectedCue, CallFunc_BreakHitResult_TraceEnd) == 0x000208, "Member 'GA_Bash_C_AddAffectedCue::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_AddAffectedCue, Temp_struct_Variable_1) == 0x000220, "Member 'GA_Bash_C_AddAffectedCue::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_AddAffectedCue, Temp_bool_Variable) == 0x000240, "Member 'GA_Bash_C_AddAffectedCue::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_AddAffectedCue, CallFunc_K2_HasAuthority_ReturnValue) == 0x000241, "Member 'GA_Bash_C_AddAffectedCue::CallFunc_K2_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_AddAffectedCue, CallFunc_GetOwningActorFromActorInfo_ReturnValue) == 0x000248, "Member 'GA_Bash_C_AddAffectedCue::CallFunc_GetOwningActorFromActorInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_AddAffectedCue, CallFunc_HasAuthority_ReturnValue) == 0x000250, "Member 'GA_Bash_C_AddAffectedCue::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_AddAffectedCue, CallFunc_GetOwningActorFromActorInfo_ReturnValue_1) == 0x000258, "Member 'GA_Bash_C_AddAffectedCue::CallFunc_GetOwningActorFromActorInfo_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_AddAffectedCue, CallFunc_GetAbilitySystemComponent_ReturnValue) == 0x000260, "Member 'GA_Bash_C_AddAffectedCue::CallFunc_GetAbilitySystemComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_AddAffectedCue, K2Node_Select_Default) == 0x000268, "Member 'GA_Bash_C_AddAffectedCue::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_AddAffectedCue, K2Node_DynamicCast_AsAbility_System_Component_IW) == 0x000288, "Member 'GA_Bash_C_AddAffectedCue::K2Node_DynamicCast_AsAbility_System_Component_IW' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_AddAffectedCue, K2Node_DynamicCast_bSuccess) == 0x000290, "Member 'GA_Bash_C_AddAffectedCue::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_AddAffectedCue, CallFunc_GetSpawnedActor_Return) == 0x000298, "Member 'GA_Bash_C_AddAffectedCue::CallFunc_GetSpawnedActor_Return' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_AddAffectedCue, CallFunc_GetAvatarActorFromActorInfo_ReturnValue) == 0x0002A0, "Member 'GA_Bash_C_AddAffectedCue::CallFunc_GetAvatarActorFromActorInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_AddAffectedCue, CallFunc_GetCosmeticLocationAndNormal_Location) == 0x0002A8, "Member 'GA_Bash_C_AddAffectedCue::CallFunc_GetCosmeticLocationAndNormal_Location' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_AddAffectedCue, CallFunc_GetCosmeticLocationAndNormal_Normal) == 0x0002C0, "Member 'GA_Bash_C_AddAffectedCue::CallFunc_GetCosmeticLocationAndNormal_Normal' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_AddAffectedCue, CallFunc_MakeGameplayCueParameters_ReturnValue) == 0x0002D8, "Member 'GA_Bash_C_AddAffectedCue::CallFunc_MakeGameplayCueParameters_ReturnValue' has a wrong offset!");

// Function GA_Bash.GA_Bash_C.ApplyGameplayEffectToHitActorASC
// 0x01A8 (0x01A8 - 0x0000)
struct GA_Bash_C_ApplyGameplayEffectToHitActorASC final
{
public:
	class UAbilitySystemComponent*                Target;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TSubclassOf<class UGameplayEffect>            GameplayEffectClass;                               // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	struct FGameplayTag                           DataTag;                                           // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	double                                        Magnitude;                                         // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             HitResult;                                         // 0x0020(0x00F8)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FGameplayTag                           StructureDamageTag;                                // 0x0118(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Get_Structure_Damage_Multiplier_Damage_Multiplier; // 0x0120(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Get_Structure_Damage_Multiplier_MultiplierFound; // 0x0124(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_125[0x3];                                      // 0x0125(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UAbilitySystemComponent*                CallFunc_GetOwnerAbilitySystemComponent_Return;    // 0x0128(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UAbilitySystemComponentIW*              K2Node_DynamicCast_AsAbility_System_Component_IW;  // 0x0130(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0138(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_139[0x7];                                      // 0x0139(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAbilitySystemComponent*                CallFunc_GetOwnerAbilitySystemComponent_Return_1;  // 0x0140(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FGameplayEffectSpecHandle              CallFunc_MakeOutgoingSpec_ReturnValue;             // 0x0148(0x0010)()
	struct FGameplayEffectSpecHandle              CallFunc_AssignTagSetByCallerMagnitude_ReturnValue; // 0x0158(0x0010)()
	struct FGameplayEffectSpecHandle              CallFunc_AssignTagSetByCallerMagnitude_ReturnValue_1; // 0x0168(0x0010)()
	struct FGameplayEffectContextHandle           CallFunc_GetEffectContext_ReturnValue;             // 0x0178(0x0018)()
	bool                                          CallFunc_ApplyGameplayEffectSpecToTargetWithChange_Changed; // 0x0190(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_191[0x3];                                      // 0x0191(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FActiveGameplayEffectHandle            CallFunc_ApplyGameplayEffectSpecToTargetWithChange_ReturnValue; // 0x0194(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x019C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19D[0x3];                                      // 0x019D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_AssignTagSetByCallerMagnitude_Magnitude_ImplicitCast; // 0x01A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_Bash_C_ApplyGameplayEffectToHitActorASC) == 0x000008, "Wrong alignment on GA_Bash_C_ApplyGameplayEffectToHitActorASC");
static_assert(sizeof(GA_Bash_C_ApplyGameplayEffectToHitActorASC) == 0x0001A8, "Wrong size on GA_Bash_C_ApplyGameplayEffectToHitActorASC");
static_assert(offsetof(GA_Bash_C_ApplyGameplayEffectToHitActorASC, Target) == 0x000000, "Member 'GA_Bash_C_ApplyGameplayEffectToHitActorASC::Target' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_ApplyGameplayEffectToHitActorASC, GameplayEffectClass) == 0x000008, "Member 'GA_Bash_C_ApplyGameplayEffectToHitActorASC::GameplayEffectClass' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_ApplyGameplayEffectToHitActorASC, DataTag) == 0x000010, "Member 'GA_Bash_C_ApplyGameplayEffectToHitActorASC::DataTag' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_ApplyGameplayEffectToHitActorASC, Magnitude) == 0x000018, "Member 'GA_Bash_C_ApplyGameplayEffectToHitActorASC::Magnitude' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_ApplyGameplayEffectToHitActorASC, HitResult) == 0x000020, "Member 'GA_Bash_C_ApplyGameplayEffectToHitActorASC::HitResult' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_ApplyGameplayEffectToHitActorASC, StructureDamageTag) == 0x000118, "Member 'GA_Bash_C_ApplyGameplayEffectToHitActorASC::StructureDamageTag' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_ApplyGameplayEffectToHitActorASC, CallFunc_Get_Structure_Damage_Multiplier_Damage_Multiplier) == 0x000120, "Member 'GA_Bash_C_ApplyGameplayEffectToHitActorASC::CallFunc_Get_Structure_Damage_Multiplier_Damage_Multiplier' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_ApplyGameplayEffectToHitActorASC, CallFunc_Get_Structure_Damage_Multiplier_MultiplierFound) == 0x000124, "Member 'GA_Bash_C_ApplyGameplayEffectToHitActorASC::CallFunc_Get_Structure_Damage_Multiplier_MultiplierFound' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_ApplyGameplayEffectToHitActorASC, CallFunc_GetOwnerAbilitySystemComponent_Return) == 0x000128, "Member 'GA_Bash_C_ApplyGameplayEffectToHitActorASC::CallFunc_GetOwnerAbilitySystemComponent_Return' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_ApplyGameplayEffectToHitActorASC, K2Node_DynamicCast_AsAbility_System_Component_IW) == 0x000130, "Member 'GA_Bash_C_ApplyGameplayEffectToHitActorASC::K2Node_DynamicCast_AsAbility_System_Component_IW' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_ApplyGameplayEffectToHitActorASC, K2Node_DynamicCast_bSuccess) == 0x000138, "Member 'GA_Bash_C_ApplyGameplayEffectToHitActorASC::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_ApplyGameplayEffectToHitActorASC, CallFunc_GetOwnerAbilitySystemComponent_Return_1) == 0x000140, "Member 'GA_Bash_C_ApplyGameplayEffectToHitActorASC::CallFunc_GetOwnerAbilitySystemComponent_Return_1' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_ApplyGameplayEffectToHitActorASC, CallFunc_MakeOutgoingSpec_ReturnValue) == 0x000148, "Member 'GA_Bash_C_ApplyGameplayEffectToHitActorASC::CallFunc_MakeOutgoingSpec_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_ApplyGameplayEffectToHitActorASC, CallFunc_AssignTagSetByCallerMagnitude_ReturnValue) == 0x000158, "Member 'GA_Bash_C_ApplyGameplayEffectToHitActorASC::CallFunc_AssignTagSetByCallerMagnitude_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_ApplyGameplayEffectToHitActorASC, CallFunc_AssignTagSetByCallerMagnitude_ReturnValue_1) == 0x000168, "Member 'GA_Bash_C_ApplyGameplayEffectToHitActorASC::CallFunc_AssignTagSetByCallerMagnitude_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_ApplyGameplayEffectToHitActorASC, CallFunc_GetEffectContext_ReturnValue) == 0x000178, "Member 'GA_Bash_C_ApplyGameplayEffectToHitActorASC::CallFunc_GetEffectContext_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_ApplyGameplayEffectToHitActorASC, CallFunc_ApplyGameplayEffectSpecToTargetWithChange_Changed) == 0x000190, "Member 'GA_Bash_C_ApplyGameplayEffectToHitActorASC::CallFunc_ApplyGameplayEffectSpecToTargetWithChange_Changed' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_ApplyGameplayEffectToHitActorASC, CallFunc_ApplyGameplayEffectSpecToTargetWithChange_ReturnValue) == 0x000194, "Member 'GA_Bash_C_ApplyGameplayEffectToHitActorASC::CallFunc_ApplyGameplayEffectSpecToTargetWithChange_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_ApplyGameplayEffectToHitActorASC, CallFunc_BooleanOR_ReturnValue) == 0x00019C, "Member 'GA_Bash_C_ApplyGameplayEffectToHitActorASC::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_ApplyGameplayEffectToHitActorASC, CallFunc_AssignTagSetByCallerMagnitude_Magnitude_ImplicitCast) == 0x0001A0, "Member 'GA_Bash_C_ApplyGameplayEffectToHitActorASC::CallFunc_AssignTagSetByCallerMagnitude_Magnitude_ImplicitCast' has a wrong offset!");

// Function GA_Bash.GA_Bash_C.ApplyKillAssistedEffect
// 0x00F8 (0x00F8 - 0x0000)
struct GA_Bash_C_ApplyKillAssistedEffect final
{
public:
	class UAbilitySystemComponent*                TargetASC;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FGameplayEffectSpecHandle              AssistGESpecHandle;                                // 0x0008(0x0010)(Edit, BlueprintVisible)
	class AActor*                                 CallFunc_GetOwningActorFromActorInfo_ReturnValue;  // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayEffectContextHandle           CallFunc_GetEffectContext_ReturnValue;             // 0x0020(0x0018)()
	class UAbilitySystemComponent*                CallFunc_GetAbilitySystemComponent_ReturnValue;    // 0x0038(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwningActorFromActorInfo_ReturnValue_1; // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAbilitySystemComponentIW*              K2Node_DynamicCast_AsAbility_System_Component_IW;  // 0x0048(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  K2Node_DynamicCast_AsPawn;                         // 0x0058(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_61[0x3];                                       // 0x0061(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FActiveGameplayEffectHandle            CallFunc_BP_ApplyGameplayEffectSpecToTarget_ReturnValue; // 0x0064(0x0008)(NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6C[0x4];                                       // 0x006C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAbilitySystemComponent*                CallFunc_GetAbilitySystemComponent_ReturnValue_1;  // 0x0070(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class APlayerStateJP_Match*                   K2Node_DynamicCast_AsPlayer_State_JP_Match;        // 0x0078(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_81[0x7];                                       // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayEffectSpecHandle              CallFunc_MakeOutgoingSpec_ReturnValue;             // 0x0088(0x0010)()
	struct FCombatParticipant                     CallFunc_CreateCombatParticipantFromPlayer_ReturnValue; // 0x0098(0x0060)()
};
static_assert(alignof(GA_Bash_C_ApplyKillAssistedEffect) == 0x000008, "Wrong alignment on GA_Bash_C_ApplyKillAssistedEffect");
static_assert(sizeof(GA_Bash_C_ApplyKillAssistedEffect) == 0x0000F8, "Wrong size on GA_Bash_C_ApplyKillAssistedEffect");
static_assert(offsetof(GA_Bash_C_ApplyKillAssistedEffect, TargetASC) == 0x000000, "Member 'GA_Bash_C_ApplyKillAssistedEffect::TargetASC' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_ApplyKillAssistedEffect, AssistGESpecHandle) == 0x000008, "Member 'GA_Bash_C_ApplyKillAssistedEffect::AssistGESpecHandle' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_ApplyKillAssistedEffect, CallFunc_GetOwningActorFromActorInfo_ReturnValue) == 0x000018, "Member 'GA_Bash_C_ApplyKillAssistedEffect::CallFunc_GetOwningActorFromActorInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_ApplyKillAssistedEffect, CallFunc_GetEffectContext_ReturnValue) == 0x000020, "Member 'GA_Bash_C_ApplyKillAssistedEffect::CallFunc_GetEffectContext_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_ApplyKillAssistedEffect, CallFunc_GetAbilitySystemComponent_ReturnValue) == 0x000038, "Member 'GA_Bash_C_ApplyKillAssistedEffect::CallFunc_GetAbilitySystemComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_ApplyKillAssistedEffect, CallFunc_GetOwningActorFromActorInfo_ReturnValue_1) == 0x000040, "Member 'GA_Bash_C_ApplyKillAssistedEffect::CallFunc_GetOwningActorFromActorInfo_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_ApplyKillAssistedEffect, K2Node_DynamicCast_AsAbility_System_Component_IW) == 0x000048, "Member 'GA_Bash_C_ApplyKillAssistedEffect::K2Node_DynamicCast_AsAbility_System_Component_IW' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_ApplyKillAssistedEffect, K2Node_DynamicCast_bSuccess) == 0x000050, "Member 'GA_Bash_C_ApplyKillAssistedEffect::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_ApplyKillAssistedEffect, K2Node_DynamicCast_AsPawn) == 0x000058, "Member 'GA_Bash_C_ApplyKillAssistedEffect::K2Node_DynamicCast_AsPawn' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_ApplyKillAssistedEffect, K2Node_DynamicCast_bSuccess_1) == 0x000060, "Member 'GA_Bash_C_ApplyKillAssistedEffect::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_ApplyKillAssistedEffect, CallFunc_BP_ApplyGameplayEffectSpecToTarget_ReturnValue) == 0x000064, "Member 'GA_Bash_C_ApplyKillAssistedEffect::CallFunc_BP_ApplyGameplayEffectSpecToTarget_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_ApplyKillAssistedEffect, CallFunc_GetAbilitySystemComponent_ReturnValue_1) == 0x000070, "Member 'GA_Bash_C_ApplyKillAssistedEffect::CallFunc_GetAbilitySystemComponent_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_ApplyKillAssistedEffect, K2Node_DynamicCast_AsPlayer_State_JP_Match) == 0x000078, "Member 'GA_Bash_C_ApplyKillAssistedEffect::K2Node_DynamicCast_AsPlayer_State_JP_Match' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_ApplyKillAssistedEffect, K2Node_DynamicCast_bSuccess_2) == 0x000080, "Member 'GA_Bash_C_ApplyKillAssistedEffect::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_ApplyKillAssistedEffect, CallFunc_MakeOutgoingSpec_ReturnValue) == 0x000088, "Member 'GA_Bash_C_ApplyKillAssistedEffect::CallFunc_MakeOutgoingSpec_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_ApplyKillAssistedEffect, CallFunc_CreateCombatParticipantFromPlayer_ReturnValue) == 0x000098, "Member 'GA_Bash_C_ApplyKillAssistedEffect::CallFunc_CreateCombatParticipantFromPlayer_ReturnValue' has a wrong offset!");

// Function GA_Bash.GA_Bash_C.CalculateChargeUsingTime
// 0x0050 (0x0050 - 0x0000)
struct GA_Bash_C_CalculateChargeUsingTime final
{
public:
	double                                        TimeHeld;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Charge;                                            // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetTagStackCount_ReturnValue;             // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetTagStackCount_ReturnValue_1;           // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue_1;           // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetTagStackCount_ReturnValue_2;           // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Conv_IntToDouble_ReturnValue_2;           // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FMin_ReturnValue;                         // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_Bash_C_CalculateChargeUsingTime) == 0x000008, "Wrong alignment on GA_Bash_C_CalculateChargeUsingTime");
static_assert(sizeof(GA_Bash_C_CalculateChargeUsingTime) == 0x000050, "Wrong size on GA_Bash_C_CalculateChargeUsingTime");
static_assert(offsetof(GA_Bash_C_CalculateChargeUsingTime, TimeHeld) == 0x000000, "Member 'GA_Bash_C_CalculateChargeUsingTime::TimeHeld' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_CalculateChargeUsingTime, Charge) == 0x000008, "Member 'GA_Bash_C_CalculateChargeUsingTime::Charge' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_CalculateChargeUsingTime, CallFunc_GetTagStackCount_ReturnValue) == 0x000010, "Member 'GA_Bash_C_CalculateChargeUsingTime::CallFunc_GetTagStackCount_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_CalculateChargeUsingTime, CallFunc_GetTagStackCount_ReturnValue_1) == 0x000014, "Member 'GA_Bash_C_CalculateChargeUsingTime::CallFunc_GetTagStackCount_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_CalculateChargeUsingTime, CallFunc_Conv_IntToDouble_ReturnValue) == 0x000018, "Member 'GA_Bash_C_CalculateChargeUsingTime::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_CalculateChargeUsingTime, CallFunc_Conv_IntToDouble_ReturnValue_1) == 0x000020, "Member 'GA_Bash_C_CalculateChargeUsingTime::CallFunc_Conv_IntToDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_CalculateChargeUsingTime, CallFunc_GetTagStackCount_ReturnValue_2) == 0x000028, "Member 'GA_Bash_C_CalculateChargeUsingTime::CallFunc_GetTagStackCount_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_CalculateChargeUsingTime, CallFunc_Conv_IntToDouble_ReturnValue_2) == 0x000030, "Member 'GA_Bash_C_CalculateChargeUsingTime::CallFunc_Conv_IntToDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_CalculateChargeUsingTime, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000038, "Member 'GA_Bash_C_CalculateChargeUsingTime::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_CalculateChargeUsingTime, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000040, "Member 'GA_Bash_C_CalculateChargeUsingTime::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_CalculateChargeUsingTime, CallFunc_FMin_ReturnValue) == 0x000048, "Member 'GA_Bash_C_CalculateChargeUsingTime::CallFunc_FMin_ReturnValue' has a wrong offset!");

// Function GA_Bash.GA_Bash_C.CanAffectTeam
// 0x0048 (0x0048 - 0x0000)
struct GA_Bash_C_CanAffectTeam final
{
public:
	class AActor*                                 Target;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Return;                                            // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Temp_byte_Variable;                                // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A[0x6];                                        // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class ITeamableInterface>    K2Node_DynamicCast_AsTeamable_Interface;           // 0x0010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_TakeDamageFromAllTeams_ReturnValue;       // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetTeamFromActor_ReturnValue;             // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetTeamFromActor_TeamFound;               // 0x0023(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0025(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0026(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0027(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetAvatarActorFromActorInfo_ReturnValue;  // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class ITeamableInterface>    K2Node_DynamicCast_AsTeamable_Interface_1;         // 0x0030(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetTeamID_ReturnValue;                    // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_Bash_C_CanAffectTeam) == 0x000008, "Wrong alignment on GA_Bash_C_CanAffectTeam");
static_assert(sizeof(GA_Bash_C_CanAffectTeam) == 0x000048, "Wrong size on GA_Bash_C_CanAffectTeam");
static_assert(offsetof(GA_Bash_C_CanAffectTeam, Target) == 0x000000, "Member 'GA_Bash_C_CanAffectTeam::Target' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_CanAffectTeam, Return) == 0x000008, "Member 'GA_Bash_C_CanAffectTeam::Return' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_CanAffectTeam, Temp_byte_Variable) == 0x000009, "Member 'GA_Bash_C_CanAffectTeam::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_CanAffectTeam, K2Node_DynamicCast_AsTeamable_Interface) == 0x000010, "Member 'GA_Bash_C_CanAffectTeam::K2Node_DynamicCast_AsTeamable_Interface' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_CanAffectTeam, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'GA_Bash_C_CanAffectTeam::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_CanAffectTeam, CallFunc_TakeDamageFromAllTeams_ReturnValue) == 0x000021, "Member 'GA_Bash_C_CanAffectTeam::CallFunc_TakeDamageFromAllTeams_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_CanAffectTeam, CallFunc_GetTeamFromActor_ReturnValue) == 0x000022, "Member 'GA_Bash_C_CanAffectTeam::CallFunc_GetTeamFromActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_CanAffectTeam, CallFunc_GetTeamFromActor_TeamFound) == 0x000023, "Member 'GA_Bash_C_CanAffectTeam::CallFunc_GetTeamFromActor_TeamFound' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_CanAffectTeam, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000024, "Member 'GA_Bash_C_CanAffectTeam::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_CanAffectTeam, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000025, "Member 'GA_Bash_C_CanAffectTeam::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_CanAffectTeam, Temp_bool_Variable) == 0x000026, "Member 'GA_Bash_C_CanAffectTeam::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_CanAffectTeam, K2Node_SwitchEnum_CmpSuccess) == 0x000027, "Member 'GA_Bash_C_CanAffectTeam::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_CanAffectTeam, CallFunc_GetAvatarActorFromActorInfo_ReturnValue) == 0x000028, "Member 'GA_Bash_C_CanAffectTeam::CallFunc_GetAvatarActorFromActorInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_CanAffectTeam, K2Node_DynamicCast_AsTeamable_Interface_1) == 0x000030, "Member 'GA_Bash_C_CanAffectTeam::K2Node_DynamicCast_AsTeamable_Interface_1' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_CanAffectTeam, K2Node_DynamicCast_bSuccess_1) == 0x000040, "Member 'GA_Bash_C_CanAffectTeam::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_CanAffectTeam, CallFunc_GetTeamID_ReturnValue) == 0x000041, "Member 'GA_Bash_C_CanAffectTeam::CallFunc_GetTeamID_ReturnValue' has a wrong offset!");

// Function GA_Bash.GA_Bash_C.CanApplyHit
// 0x01D0 (0x01D0 - 0x0000)
struct GA_Bash_C_CanApplyHit final
{
public:
	class AActor*                                 Actor;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             Hit;                                               // 0x0008(0x00F8)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class UAbilitySystemComponentIW*              HitActorASC;                                       // 0x0100(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0108(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CanAffectTeam_Return;                     // 0x0109(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CanAffectTeam_Return_1;                   // 0x010A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_10B[0x5];                                      // 0x010B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UAbilitySystemComponent*                CallFunc_GetAbilitySystemComponent_ReturnValue;    // 0x0110(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_119[0x7];                                      // 0x0119(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAbilitySystemComponentIW*              K2Node_DynamicCast_AsAbility_System_Component_IW;  // 0x0120(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0128(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_129[0x7];                                      // 0x0129(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAbilitySystemComponent*                CallFunc_GetAbilitySystemComponent_ReturnValue_1;  // 0x0130(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0138(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0139(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_13A[0x6];                                      // 0x013A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UAbilitySystemComponentIW*              K2Node_DynamicCast_AsAbility_System_Component_IW_1; // 0x0140(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0148(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_149[0x7];                                      // 0x0149(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_BlockingVolume_C*                   K2Node_DynamicCast_AsBP_Blocking_Volume;           // 0x0150(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0158(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_159[0x7];                                      // 0x0159(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagContainer                  CallFunc_MakeLiteralGameplayTagContainer_ReturnValue; // 0x0160(0x0020)()
	TScriptInterface<class IGameplayTagAssetInterface> CallFunc_HasAnyMatchingGameplayTags_self_CastInput; // 0x0180(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAnyMatchingGameplayTags_ReturnValue;   // 0x0190(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0191(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_192[0x6];                                      // 0x0192(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagContainer                  CallFunc_MakeLiteralGameplayTagContainer_ReturnValue_1; // 0x0198(0x0020)()
	TScriptInterface<class IGameplayTagAssetInterface> CallFunc_HasAnyMatchingGameplayTags_self_CastInput_1; // 0x01B8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAnyMatchingGameplayTags_ReturnValue_1; // 0x01C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_Bash_C_CanApplyHit) == 0x000008, "Wrong alignment on GA_Bash_C_CanApplyHit");
static_assert(sizeof(GA_Bash_C_CanApplyHit) == 0x0001D0, "Wrong size on GA_Bash_C_CanApplyHit");
static_assert(offsetof(GA_Bash_C_CanApplyHit, Actor) == 0x000000, "Member 'GA_Bash_C_CanApplyHit::Actor' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_CanApplyHit, Hit) == 0x000008, "Member 'GA_Bash_C_CanApplyHit::Hit' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_CanApplyHit, HitActorASC) == 0x000100, "Member 'GA_Bash_C_CanApplyHit::HitActorASC' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_CanApplyHit, ReturnValue) == 0x000108, "Member 'GA_Bash_C_CanApplyHit::ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_CanApplyHit, CallFunc_CanAffectTeam_Return) == 0x000109, "Member 'GA_Bash_C_CanApplyHit::CallFunc_CanAffectTeam_Return' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_CanApplyHit, CallFunc_CanAffectTeam_Return_1) == 0x00010A, "Member 'GA_Bash_C_CanApplyHit::CallFunc_CanAffectTeam_Return_1' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_CanApplyHit, CallFunc_GetAbilitySystemComponent_ReturnValue) == 0x000110, "Member 'GA_Bash_C_CanApplyHit::CallFunc_GetAbilitySystemComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_CanApplyHit, CallFunc_IsValid_ReturnValue) == 0x000118, "Member 'GA_Bash_C_CanApplyHit::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_CanApplyHit, K2Node_DynamicCast_AsAbility_System_Component_IW) == 0x000120, "Member 'GA_Bash_C_CanApplyHit::K2Node_DynamicCast_AsAbility_System_Component_IW' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_CanApplyHit, K2Node_DynamicCast_bSuccess) == 0x000128, "Member 'GA_Bash_C_CanApplyHit::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_CanApplyHit, CallFunc_GetAbilitySystemComponent_ReturnValue_1) == 0x000130, "Member 'GA_Bash_C_CanApplyHit::CallFunc_GetAbilitySystemComponent_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_CanApplyHit, CallFunc_IsValid_ReturnValue_1) == 0x000138, "Member 'GA_Bash_C_CanApplyHit::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_CanApplyHit, CallFunc_IsValid_ReturnValue_2) == 0x000139, "Member 'GA_Bash_C_CanApplyHit::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_CanApplyHit, K2Node_DynamicCast_AsAbility_System_Component_IW_1) == 0x000140, "Member 'GA_Bash_C_CanApplyHit::K2Node_DynamicCast_AsAbility_System_Component_IW_1' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_CanApplyHit, K2Node_DynamicCast_bSuccess_1) == 0x000148, "Member 'GA_Bash_C_CanApplyHit::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_CanApplyHit, K2Node_DynamicCast_AsBP_Blocking_Volume) == 0x000150, "Member 'GA_Bash_C_CanApplyHit::K2Node_DynamicCast_AsBP_Blocking_Volume' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_CanApplyHit, K2Node_DynamicCast_bSuccess_2) == 0x000158, "Member 'GA_Bash_C_CanApplyHit::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_CanApplyHit, CallFunc_MakeLiteralGameplayTagContainer_ReturnValue) == 0x000160, "Member 'GA_Bash_C_CanApplyHit::CallFunc_MakeLiteralGameplayTagContainer_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_CanApplyHit, CallFunc_HasAnyMatchingGameplayTags_self_CastInput) == 0x000180, "Member 'GA_Bash_C_CanApplyHit::CallFunc_HasAnyMatchingGameplayTags_self_CastInput' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_CanApplyHit, CallFunc_HasAnyMatchingGameplayTags_ReturnValue) == 0x000190, "Member 'GA_Bash_C_CanApplyHit::CallFunc_HasAnyMatchingGameplayTags_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_CanApplyHit, CallFunc_BooleanAND_ReturnValue) == 0x000191, "Member 'GA_Bash_C_CanApplyHit::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_CanApplyHit, CallFunc_MakeLiteralGameplayTagContainer_ReturnValue_1) == 0x000198, "Member 'GA_Bash_C_CanApplyHit::CallFunc_MakeLiteralGameplayTagContainer_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_CanApplyHit, CallFunc_HasAnyMatchingGameplayTags_self_CastInput_1) == 0x0001B8, "Member 'GA_Bash_C_CanApplyHit::CallFunc_HasAnyMatchingGameplayTags_self_CastInput_1' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_CanApplyHit, CallFunc_HasAnyMatchingGameplayTags_ReturnValue_1) == 0x0001C8, "Member 'GA_Bash_C_CanApplyHit::CallFunc_HasAnyMatchingGameplayTags_ReturnValue_1' has a wrong offset!");

// Function GA_Bash.GA_Bash_C.CanUseStamina
// 0x0058 (0x0058 - 0x0000)
struct GA_Bash_C_CanUseStamina final
{
public:
	bool                                          HasBlockingTag;                                    // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_CheckAbilityCost_ReturnValue;          // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagContainer                  CallFunc_MakeGameplayTagContainerFromTag_ReturnValue; // 0x0008(0x0020)()
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwningActorFromActorInfo_ReturnValue;  // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAbilitySystemComponent*                CallFunc_GetAbilitySystemComponent_ReturnValue;    // 0x0038(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IGameplayTagAssetInterface> CallFunc_HasAnyMatchingGameplayTags_self_CastInput; // 0x0040(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAnyMatchingGameplayTags_ReturnValue;   // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_Bash_C_CanUseStamina) == 0x000008, "Wrong alignment on GA_Bash_C_CanUseStamina");
static_assert(sizeof(GA_Bash_C_CanUseStamina) == 0x000058, "Wrong size on GA_Bash_C_CanUseStamina");
static_assert(offsetof(GA_Bash_C_CanUseStamina, HasBlockingTag) == 0x000000, "Member 'GA_Bash_C_CanUseStamina::HasBlockingTag' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_CanUseStamina, CallFunc_K2_CheckAbilityCost_ReturnValue) == 0x000001, "Member 'GA_Bash_C_CanUseStamina::CallFunc_K2_CheckAbilityCost_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_CanUseStamina, CallFunc_MakeGameplayTagContainerFromTag_ReturnValue) == 0x000008, "Member 'GA_Bash_C_CanUseStamina::CallFunc_MakeGameplayTagContainerFromTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_CanUseStamina, CallFunc_Not_PreBool_ReturnValue) == 0x000028, "Member 'GA_Bash_C_CanUseStamina::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_CanUseStamina, CallFunc_GetOwningActorFromActorInfo_ReturnValue) == 0x000030, "Member 'GA_Bash_C_CanUseStamina::CallFunc_GetOwningActorFromActorInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_CanUseStamina, CallFunc_GetAbilitySystemComponent_ReturnValue) == 0x000038, "Member 'GA_Bash_C_CanUseStamina::CallFunc_GetAbilitySystemComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_CanUseStamina, CallFunc_HasAnyMatchingGameplayTags_self_CastInput) == 0x000040, "Member 'GA_Bash_C_CanUseStamina::CallFunc_HasAnyMatchingGameplayTags_self_CastInput' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_CanUseStamina, CallFunc_HasAnyMatchingGameplayTags_ReturnValue) == 0x000050, "Member 'GA_Bash_C_CanUseStamina::CallFunc_HasAnyMatchingGameplayTags_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_CanUseStamina, CallFunc_BooleanOR_ReturnValue) == 0x000051, "Member 'GA_Bash_C_CanUseStamina::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

// Function GA_Bash.GA_Bash_C.ClearTimers
// 0x0001 (0x0001 - 0x0000)
struct GA_Bash_C_ClearTimers final
{
public:
	bool                                          CallFunc_K2_IsValidTimerHandle_ReturnValue;        // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_Bash_C_ClearTimers) == 0x000001, "Wrong alignment on GA_Bash_C_ClearTimers");
static_assert(sizeof(GA_Bash_C_ClearTimers) == 0x000001, "Wrong size on GA_Bash_C_ClearTimers");
static_assert(offsetof(GA_Bash_C_ClearTimers, CallFunc_K2_IsValidTimerHandle_ReturnValue) == 0x000000, "Member 'GA_Bash_C_ClearTimers::CallFunc_K2_IsValidTimerHandle_ReturnValue' has a wrong offset!");

// Function GA_Bash.GA_Bash_C.CommitStaminaCost
// 0x0028 (0x0028 - 0x0000)
struct GA_Bash_C_CommitStaminaCost final
{
public:
	bool                                          CallFunc_CanUseStamina_HasBlockingTag;             // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_HasAuthority_ReturnValue;              // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetNoAbilityCost_ReturnValue;             // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwningActorFromActorInfo_ReturnValue;  // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class II_StaminaCost_C>      K2Node_DynamicCast_AsI_Stamina_Cost;               // 0x0010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_Bash_C_CommitStaminaCost) == 0x000008, "Wrong alignment on GA_Bash_C_CommitStaminaCost");
static_assert(sizeof(GA_Bash_C_CommitStaminaCost) == 0x000028, "Wrong size on GA_Bash_C_CommitStaminaCost");
static_assert(offsetof(GA_Bash_C_CommitStaminaCost, CallFunc_CanUseStamina_HasBlockingTag) == 0x000000, "Member 'GA_Bash_C_CommitStaminaCost::CallFunc_CanUseStamina_HasBlockingTag' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_CommitStaminaCost, CallFunc_K2_HasAuthority_ReturnValue) == 0x000001, "Member 'GA_Bash_C_CommitStaminaCost::CallFunc_K2_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_CommitStaminaCost, CallFunc_Not_PreBool_ReturnValue) == 0x000002, "Member 'GA_Bash_C_CommitStaminaCost::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_CommitStaminaCost, CallFunc_GetNoAbilityCost_ReturnValue) == 0x000003, "Member 'GA_Bash_C_CommitStaminaCost::CallFunc_GetNoAbilityCost_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_CommitStaminaCost, CallFunc_GetOwningActorFromActorInfo_ReturnValue) == 0x000008, "Member 'GA_Bash_C_CommitStaminaCost::CallFunc_GetOwningActorFromActorInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_CommitStaminaCost, K2Node_DynamicCast_AsI_Stamina_Cost) == 0x000010, "Member 'GA_Bash_C_CommitStaminaCost::K2Node_DynamicCast_AsI_Stamina_Cost' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_CommitStaminaCost, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'GA_Bash_C_CommitStaminaCost::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function GA_Bash.GA_Bash_C.Create Cant Apply Hit Message
// 0x0018 (0x0018 - 0x0000)
struct GA_Bash_C_Create_Cant_Apply_Hit_Message final
{
public:
	class UAbilitySystemComponentIW*              HitActorASC;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FText                                   CantApplyHitMessage_0;                             // 0x0008(0x0010)(Parm, OutParm)
};
static_assert(alignof(GA_Bash_C_Create_Cant_Apply_Hit_Message) == 0x000008, "Wrong alignment on GA_Bash_C_Create_Cant_Apply_Hit_Message");
static_assert(sizeof(GA_Bash_C_Create_Cant_Apply_Hit_Message) == 0x000018, "Wrong size on GA_Bash_C_Create_Cant_Apply_Hit_Message");
static_assert(offsetof(GA_Bash_C_Create_Cant_Apply_Hit_Message, HitActorASC) == 0x000000, "Member 'GA_Bash_C_Create_Cant_Apply_Hit_Message::HitActorASC' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_Create_Cant_Apply_Hit_Message, CantApplyHitMessage_0) == 0x000008, "Member 'GA_Bash_C_Create_Cant_Apply_Hit_Message::CantApplyHitMessage_0' has a wrong offset!");

// Function GA_Bash.GA_Bash_C.CreateCosmeticProjectileCueParameters
// 0x00D8 (0x00D8 - 0x0000)
struct GA_Bash_C_CreateCosmeticProjectileCueParameters final
{
public:
	struct FGameplayCueParameters                 ReturnValue;                                       // 0x0000(0x00D8)(Parm, OutParm, ReturnParm, ContainsInstancedReference)
};
static_assert(alignof(GA_Bash_C_CreateCosmeticProjectileCueParameters) == 0x000008, "Wrong alignment on GA_Bash_C_CreateCosmeticProjectileCueParameters");
static_assert(sizeof(GA_Bash_C_CreateCosmeticProjectileCueParameters) == 0x0000D8, "Wrong size on GA_Bash_C_CreateCosmeticProjectileCueParameters");
static_assert(offsetof(GA_Bash_C_CreateCosmeticProjectileCueParameters, ReturnValue) == 0x000000, "Member 'GA_Bash_C_CreateCosmeticProjectileCueParameters::ReturnValue' has a wrong offset!");

// Function GA_Bash.GA_Bash_C.Display Cant Apply Hit Message Auth
// 0x0050 (0x0050 - 0x0000)
struct GA_Bash_C_Display_Cant_Apply_Hit_Message_Auth final
{
public:
	class ABP_ResidentCharacter_C*                BP_ResidentCharacter;                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAbilitySystemComponentIW*              TargetedActorASC;                                  // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_HasAuthority_ReturnValue;              // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Create_Cant_Apply_Hit_Message_CantApplyHitMessage; // 0x0018(0x0010)()
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x0028(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class AController*                            CallFunc_GetController_ReturnValue;                // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      K2Node_DynamicCast_AsPlayer_Controller;            // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_Bash_C_Display_Cant_Apply_Hit_Message_Auth) == 0x000008, "Wrong alignment on GA_Bash_C_Display_Cant_Apply_Hit_Message_Auth");
static_assert(sizeof(GA_Bash_C_Display_Cant_Apply_Hit_Message_Auth) == 0x000050, "Wrong size on GA_Bash_C_Display_Cant_Apply_Hit_Message_Auth");
static_assert(offsetof(GA_Bash_C_Display_Cant_Apply_Hit_Message_Auth, BP_ResidentCharacter) == 0x000000, "Member 'GA_Bash_C_Display_Cant_Apply_Hit_Message_Auth::BP_ResidentCharacter' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_Display_Cant_Apply_Hit_Message_Auth, TargetedActorASC) == 0x000008, "Member 'GA_Bash_C_Display_Cant_Apply_Hit_Message_Auth::TargetedActorASC' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_Display_Cant_Apply_Hit_Message_Auth, CallFunc_K2_HasAuthority_ReturnValue) == 0x000010, "Member 'GA_Bash_C_Display_Cant_Apply_Hit_Message_Auth::CallFunc_K2_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_Display_Cant_Apply_Hit_Message_Auth, CallFunc_Create_Cant_Apply_Hit_Message_CantApplyHitMessage) == 0x000018, "Member 'GA_Bash_C_Display_Cant_Apply_Hit_Message_Auth::CallFunc_Create_Cant_Apply_Hit_Message_CantApplyHitMessage' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_Display_Cant_Apply_Hit_Message_Auth, CallFunc_Conv_TextToString_ReturnValue) == 0x000028, "Member 'GA_Bash_C_Display_Cant_Apply_Hit_Message_Auth::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_Display_Cant_Apply_Hit_Message_Auth, CallFunc_GetController_ReturnValue) == 0x000038, "Member 'GA_Bash_C_Display_Cant_Apply_Hit_Message_Auth::CallFunc_GetController_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_Display_Cant_Apply_Hit_Message_Auth, K2Node_DynamicCast_AsPlayer_Controller) == 0x000040, "Member 'GA_Bash_C_Display_Cant_Apply_Hit_Message_Auth::K2Node_DynamicCast_AsPlayer_Controller' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_Display_Cant_Apply_Hit_Message_Auth, K2Node_DynamicCast_bSuccess) == 0x000048, "Member 'GA_Bash_C_Display_Cant_Apply_Hit_Message_Auth::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function GA_Bash.GA_Bash_C.DisplayCantHitMessage
// 0x0030 (0x0030 - 0x0000)
struct GA_Bash_C_DisplayCantHitMessage final
{
public:
	class UAbilitySystemComponentIW*              TargetedActorASC;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	const class UObject*                          Actor;                                             // 0x0008(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwningActorFromActorInfo_ReturnValue;  // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_DoesImplementInterface_ReturnValue;       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_ResidentCharacter_C*                K2Node_DynamicCast_AsBP_Resident_Character;        // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_Bash_C_DisplayCantHitMessage) == 0x000008, "Wrong alignment on GA_Bash_C_DisplayCantHitMessage");
static_assert(sizeof(GA_Bash_C_DisplayCantHitMessage) == 0x000030, "Wrong size on GA_Bash_C_DisplayCantHitMessage");
static_assert(offsetof(GA_Bash_C_DisplayCantHitMessage, TargetedActorASC) == 0x000000, "Member 'GA_Bash_C_DisplayCantHitMessage::TargetedActorASC' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_DisplayCantHitMessage, Actor) == 0x000008, "Member 'GA_Bash_C_DisplayCantHitMessage::Actor' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_DisplayCantHitMessage, CallFunc_GetOwningActorFromActorInfo_ReturnValue) == 0x000010, "Member 'GA_Bash_C_DisplayCantHitMessage::CallFunc_GetOwningActorFromActorInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_DisplayCantHitMessage, CallFunc_DoesImplementInterface_ReturnValue) == 0x000018, "Member 'GA_Bash_C_DisplayCantHitMessage::CallFunc_DoesImplementInterface_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_DisplayCantHitMessage, K2Node_DynamicCast_AsBP_Resident_Character) == 0x000020, "Member 'GA_Bash_C_DisplayCantHitMessage::K2Node_DynamicCast_AsBP_Resident_Character' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_DisplayCantHitMessage, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'GA_Bash_C_DisplayCantHitMessage::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function GA_Bash.GA_Bash_C.DoesShieldIntercept
// 0x02D8 (0x02D8 - 0x0000)
struct GA_Bash_C_DoesShieldIntercept final
{
public:
	bool                                          Intercepted;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             OutHit;                                            // 0x0008(0x00F8)(Parm, OutParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class ABP_BlockingVolume_C*                   CallFunc_GetOwnersBlockingVolume_BlockingVolume;   // 0x0100(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         K2Node_MakeArray_Array;                            // 0x0108(0x0010)(ConstParm, ReferenceParm)
	struct FVector                                CallFunc_Conv_DoubleToVector_ReturnValue;          // 0x0118(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwningActorFromActorInfo_ReturnValue;  // 0x0130(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<EObjectTypeQuery>                      K2Node_MakeArray_Array_1;                          // 0x0138(0x0010)(ConstParm, ReferenceParm)
	TScriptInterface<class II_TraceFrom_C>        K2Node_DynamicCast_AsI_Trace_From;                 // 0x0148(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0158(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_159[0x7];                                      // 0x0159(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetTraceFrom_Location;                    // 0x0160(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_GetTraceFrom_Rotation;                    // 0x0178(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue;             // 0x0190(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue;        // 0x01A8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x01C0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_LineTraceSingleForObjects_OutHit;         // 0x01D8(0x00F8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceSingleForObjects_ReturnValue;    // 0x02D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_Bash_C_DoesShieldIntercept) == 0x000008, "Wrong alignment on GA_Bash_C_DoesShieldIntercept");
static_assert(sizeof(GA_Bash_C_DoesShieldIntercept) == 0x0002D8, "Wrong size on GA_Bash_C_DoesShieldIntercept");
static_assert(offsetof(GA_Bash_C_DoesShieldIntercept, Intercepted) == 0x000000, "Member 'GA_Bash_C_DoesShieldIntercept::Intercepted' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_DoesShieldIntercept, OutHit) == 0x000008, "Member 'GA_Bash_C_DoesShieldIntercept::OutHit' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_DoesShieldIntercept, CallFunc_GetOwnersBlockingVolume_BlockingVolume) == 0x000100, "Member 'GA_Bash_C_DoesShieldIntercept::CallFunc_GetOwnersBlockingVolume_BlockingVolume' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_DoesShieldIntercept, K2Node_MakeArray_Array) == 0x000108, "Member 'GA_Bash_C_DoesShieldIntercept::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_DoesShieldIntercept, CallFunc_Conv_DoubleToVector_ReturnValue) == 0x000118, "Member 'GA_Bash_C_DoesShieldIntercept::CallFunc_Conv_DoubleToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_DoesShieldIntercept, CallFunc_GetOwningActorFromActorInfo_ReturnValue) == 0x000130, "Member 'GA_Bash_C_DoesShieldIntercept::CallFunc_GetOwningActorFromActorInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_DoesShieldIntercept, K2Node_MakeArray_Array_1) == 0x000138, "Member 'GA_Bash_C_DoesShieldIntercept::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_DoesShieldIntercept, K2Node_DynamicCast_AsI_Trace_From) == 0x000148, "Member 'GA_Bash_C_DoesShieldIntercept::K2Node_DynamicCast_AsI_Trace_From' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_DoesShieldIntercept, K2Node_DynamicCast_bSuccess) == 0x000158, "Member 'GA_Bash_C_DoesShieldIntercept::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_DoesShieldIntercept, CallFunc_GetTraceFrom_Location) == 0x000160, "Member 'GA_Bash_C_DoesShieldIntercept::CallFunc_GetTraceFrom_Location' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_DoesShieldIntercept, CallFunc_GetTraceFrom_Rotation) == 0x000178, "Member 'GA_Bash_C_DoesShieldIntercept::CallFunc_GetTraceFrom_Rotation' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_DoesShieldIntercept, CallFunc_GetForwardVector_ReturnValue) == 0x000190, "Member 'GA_Bash_C_DoesShieldIntercept::CallFunc_GetForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_DoesShieldIntercept, CallFunc_Multiply_VectorVector_ReturnValue) == 0x0001A8, "Member 'GA_Bash_C_DoesShieldIntercept::CallFunc_Multiply_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_DoesShieldIntercept, CallFunc_Add_VectorVector_ReturnValue) == 0x0001C0, "Member 'GA_Bash_C_DoesShieldIntercept::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_DoesShieldIntercept, CallFunc_LineTraceSingleForObjects_OutHit) == 0x0001D8, "Member 'GA_Bash_C_DoesShieldIntercept::CallFunc_LineTraceSingleForObjects_OutHit' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_DoesShieldIntercept, CallFunc_LineTraceSingleForObjects_ReturnValue) == 0x0002D0, "Member 'GA_Bash_C_DoesShieldIntercept::CallFunc_LineTraceSingleForObjects_ReturnValue' has a wrong offset!");

// Function GA_Bash.GA_Bash_C.EnableTrailOnSpawnedActor
// 0x0028 (0x0028 - 0x0000)
struct GA_Bash_C_EnableTrailOnSpawnedActor final
{
public:
	bool                                          Enable;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetSpawnedActor_Return;                   // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class II_Trailable_C>        K2Node_DynamicCast_AsI_Trailable;                  // 0x0010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_Bash_C_EnableTrailOnSpawnedActor) == 0x000008, "Wrong alignment on GA_Bash_C_EnableTrailOnSpawnedActor");
static_assert(sizeof(GA_Bash_C_EnableTrailOnSpawnedActor) == 0x000028, "Wrong size on GA_Bash_C_EnableTrailOnSpawnedActor");
static_assert(offsetof(GA_Bash_C_EnableTrailOnSpawnedActor, Enable) == 0x000000, "Member 'GA_Bash_C_EnableTrailOnSpawnedActor::Enable' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_EnableTrailOnSpawnedActor, CallFunc_GetSpawnedActor_Return) == 0x000008, "Member 'GA_Bash_C_EnableTrailOnSpawnedActor::CallFunc_GetSpawnedActor_Return' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_EnableTrailOnSpawnedActor, K2Node_DynamicCast_AsI_Trailable) == 0x000010, "Member 'GA_Bash_C_EnableTrailOnSpawnedActor::K2Node_DynamicCast_AsI_Trailable' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_EnableTrailOnSpawnedActor, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'GA_Bash_C_EnableTrailOnSpawnedActor::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function GA_Bash.GA_Bash_C.ExecuteUbergraph_GA_Bash
// 0x0720 (0x0720 - 0x0000)
struct GA_Bash_C_ExecuteUbergraph_GA_Bash final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0008(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bWasCancelled;                        // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwningActorFromActorInfo_ReturnValue;  // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class II_TraceFrom_C>        K2Node_DynamicCast_AsI_Trace_From;                 // 0x0028(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetTraceFrom_Location;                    // 0x0040(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_GetTraceFrom_Rotation;                    // 0x0058(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FHitResult                             K2Node_CustomEvent_HitResult;                      // 0x0070(0x00F8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class UAbilitySystemComponentIW*              K2Node_CustomEvent_HitActorASC;                    // 0x0168(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x0170(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x0180(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x0181(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_182[0x2];                                      // 0x0182(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x0184(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x0188(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_18C[0x4];                                      // 0x018C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x0190(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x01A8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x01C0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x01D8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x01F0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x01F8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0200(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0208(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_BoneName;                  // 0x0210(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0218(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x021C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x0220(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_224[0x4];                                      // 0x0224(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x0228(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x0240(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_CustomEvent_ForwardVector;                  // 0x0258(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                K2Node_CustomEvent_Target;                         // 0x0270(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_TargetIsPlayer;                 // 0x0278(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_279[0x7];                                      // 0x0279(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAbilityTask_WaitDelay*                 CallFunc_WaitDelay_ReturnValue;                    // 0x0280(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0288(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_289[0x3];                                      // 0x0289(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x028C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_CommitAbilityCost_ReturnValue;         // 0x0290(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_291[0x7];                                      // 0x0291(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UAnimInstance*>                  CallFunc_GetOwnerAnimBPs_Array_Element;            // 0x0298(0x0010)(ReferenceParm)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x02A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetPercentageCharged_Percentage;          // 0x02B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x02B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2B9[0x3];                                      // 0x02B9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_Event_NotifyName;                           // 0x02BC(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x02C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue;          // 0x02C5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C6[0x2];                                      // 0x02C6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Select_Default;                             // 0x02C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2CC[0x4];                                      // 0x02CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x02D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default_1;                           // 0x02D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2DC[0x4];                                      // 0x02DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwningActorFromActorInfo_ReturnValue_1; // 0x02E0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x02E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2E9[0x7];                                      // 0x02E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class II_TraceFrom_C>        K2Node_DynamicCast_AsI_Trace_From_1;               // 0x02F0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0300(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_301[0x7];                                      // 0x0301(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetTraceFrom_Location_1;                  // 0x0308(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_GetTraceFrom_Rotation_1;                  // 0x0320(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue;             // 0x0338(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetCenterLocationForImpact_ReturnValue;   // 0x0350(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetNoAbilityCost_ReturnValue;             // 0x0368(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_369[0x7];                                      // 0x0369(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UItemInstance*                          CallFunc_GetAssociatedItem_ReturnValue;            // 0x0370(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Get_ClassLog_Name_name;                   // 0x0378(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0388(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_389[0x7];                                      // 0x0389(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwningActorFromActorInfo_ReturnValue_2; // 0x0390(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class II_FOVAble_C>          K2Node_DynamicCast_AsI_FOVAble;                    // 0x0398(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x03A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x03A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3AA[0x6];                                      // 0x03AA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UItemInstance*                          CallFunc_GetAssociatedItem_ReturnValue_1;          // 0x03B0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_K2_GetCooldownTimeRemainingAndDuration_TimeRemaining; // 0x03B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_K2_GetCooldownTimeRemainingAndDuration_CooldownDuration; // 0x03BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_GetCooldownTimeRemainingAndDuration_ReturnValue; // 0x03C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C1[0x7];                                      // 0x03C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IGameplayTaskOwnerInterface> CallFunc_TaskWaitDelay_TaskOwner_CastInput;        // 0x03C8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class UGameplayTask_WaitDelay*                CallFunc_TaskWaitDelay_ReturnValue;                // 0x03D8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_BlockingVolume_C*                   CallFunc_GetOwnersBlockingVolume_BlockingVolume;   // 0x03E0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x03E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x03E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3EA[0x6];                                      // 0x03EA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FHitResult>                     CallFunc_TraceForHitWithInterface_AcceptedHits;    // 0x03F0(0x0010)(ReferenceParm, ContainsInstancedReference)
	bool                                          CallFunc_TraceForHitWithInterface_NoHits;          // 0x0400(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_TraceForHitWithInterface_OnlyHitWorldStatic; // 0x0401(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_402[0x6];                                      // 0x0402(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_TraceForHitWithInterface_InitialTraceHit; // 0x0408(0x00F8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_CommitAbilityCooldown_ReturnValue;     // 0x0500(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_501[0x7];                                      // 0x0501(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_Array_Get_Item;                           // 0x0508(0x00F8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0600(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0604(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit_1;            // 0x0605(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap_1;         // 0x0606(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_607[0x1];                                      // 0x0607(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time_1;                    // 0x0608(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance_1;                // 0x060C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location_1;                // 0x0610(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint_1;             // 0x0628(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal_1;                  // 0x0640(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal_1;            // 0x0658(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat_1;                 // 0x0670(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor_1;                // 0x0678(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent_1;            // 0x0680(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName_1;             // 0x0688(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_BoneName_1;                // 0x0690(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem_1;                 // 0x0698(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex_1;            // 0x069C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex_1;               // 0x06A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6A4[0x4];                                      // 0x06A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_TraceStart_1;              // 0x06A8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd_1;                // 0x06C0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_TryKnockbackMessItem_HitMessItem;         // 0x06D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6D9[0x7];                                      // 0x06D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAbilitySystemComponentIW*              CallFunc_CanApplyHit_HitActorASC;                  // 0x06E0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CanApplyHit_ReturnValue;                  // 0x06E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HitThisActorAlready_ReturnValue;          // 0x06E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6EA[0x6];                                      // 0x06EA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x06F0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasMatchEnded_ReturnValue;                // 0x06F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6F9[0x7];                                      // 0x06F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_A_ImplicitCast;     // 0x0700(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Option_1_ImplicitCast;               // 0x0708(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_70C[0x4];                                      // 0x070C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_A_ImplicitCast_1;   // 0x0710(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Option_1_ImplicitCast_1;             // 0x0718(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_Bash_C_ExecuteUbergraph_GA_Bash) == 0x000008, "Wrong alignment on GA_Bash_C_ExecuteUbergraph_GA_Bash");
static_assert(sizeof(GA_Bash_C_ExecuteUbergraph_GA_Bash) == 0x000720, "Wrong size on GA_Bash_C_ExecuteUbergraph_GA_Bash");
static_assert(offsetof(GA_Bash_C_ExecuteUbergraph_GA_Bash, EntryPoint) == 0x000000, "Member 'GA_Bash_C_ExecuteUbergraph_GA_Bash::EntryPoint' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_ExecuteUbergraph_GA_Bash, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'GA_Bash_C_ExecuteUbergraph_GA_Bash::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_ExecuteUbergraph_GA_Bash, K2Node_CreateDelegate_OutputDelegate) == 0x000008, "Member 'GA_Bash_C_ExecuteUbergraph_GA_Bash::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_ExecuteUbergraph_GA_Bash, CallFunc_Add_IntInt_ReturnValue) == 0x000018, "Member 'GA_Bash_C_ExecuteUbergraph_GA_Bash::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_ExecuteUbergraph_GA_Bash, K2Node_Event_bWasCancelled) == 0x00001C, "Member 'GA_Bash_C_ExecuteUbergraph_GA_Bash::K2Node_Event_bWasCancelled' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_ExecuteUbergraph_GA_Bash, CallFunc_GetOwningActorFromActorInfo_ReturnValue) == 0x000020, "Member 'GA_Bash_C_ExecuteUbergraph_GA_Bash::CallFunc_GetOwningActorFromActorInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_ExecuteUbergraph_GA_Bash, K2Node_DynamicCast_AsI_Trace_From) == 0x000028, "Member 'GA_Bash_C_ExecuteUbergraph_GA_Bash::K2Node_DynamicCast_AsI_Trace_From' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_ExecuteUbergraph_GA_Bash, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'GA_Bash_C_ExecuteUbergraph_GA_Bash::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_ExecuteUbergraph_GA_Bash, CallFunc_GetTraceFrom_Location) == 0x000040, "Member 'GA_Bash_C_ExecuteUbergraph_GA_Bash::CallFunc_GetTraceFrom_Location' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_ExecuteUbergraph_GA_Bash, CallFunc_GetTraceFrom_Rotation) == 0x000058, "Member 'GA_Bash_C_ExecuteUbergraph_GA_Bash::CallFunc_GetTraceFrom_Rotation' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_ExecuteUbergraph_GA_Bash, K2Node_CustomEvent_HitResult) == 0x000070, "Member 'GA_Bash_C_ExecuteUbergraph_GA_Bash::K2Node_CustomEvent_HitResult' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_ExecuteUbergraph_GA_Bash, K2Node_CustomEvent_HitActorASC) == 0x000168, "Member 'GA_Bash_C_ExecuteUbergraph_GA_Bash::K2Node_CustomEvent_HitActorASC' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_ExecuteUbergraph_GA_Bash, K2Node_CreateDelegate_OutputDelegate_1) == 0x000170, "Member 'GA_Bash_C_ExecuteUbergraph_GA_Bash::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_ExecuteUbergraph_GA_Bash, CallFunc_BreakHitResult_bBlockingHit) == 0x000180, "Member 'GA_Bash_C_ExecuteUbergraph_GA_Bash::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_ExecuteUbergraph_GA_Bash, CallFunc_BreakHitResult_bInitialOverlap) == 0x000181, "Member 'GA_Bash_C_ExecuteUbergraph_GA_Bash::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_ExecuteUbergraph_GA_Bash, CallFunc_BreakHitResult_Time) == 0x000184, "Member 'GA_Bash_C_ExecuteUbergraph_GA_Bash::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_ExecuteUbergraph_GA_Bash, CallFunc_BreakHitResult_Distance) == 0x000188, "Member 'GA_Bash_C_ExecuteUbergraph_GA_Bash::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_ExecuteUbergraph_GA_Bash, CallFunc_BreakHitResult_Location) == 0x000190, "Member 'GA_Bash_C_ExecuteUbergraph_GA_Bash::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_ExecuteUbergraph_GA_Bash, CallFunc_BreakHitResult_ImpactPoint) == 0x0001A8, "Member 'GA_Bash_C_ExecuteUbergraph_GA_Bash::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_ExecuteUbergraph_GA_Bash, CallFunc_BreakHitResult_Normal) == 0x0001C0, "Member 'GA_Bash_C_ExecuteUbergraph_GA_Bash::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_ExecuteUbergraph_GA_Bash, CallFunc_BreakHitResult_ImpactNormal) == 0x0001D8, "Member 'GA_Bash_C_ExecuteUbergraph_GA_Bash::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_ExecuteUbergraph_GA_Bash, CallFunc_BreakHitResult_PhysMat) == 0x0001F0, "Member 'GA_Bash_C_ExecuteUbergraph_GA_Bash::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_ExecuteUbergraph_GA_Bash, CallFunc_BreakHitResult_HitActor) == 0x0001F8, "Member 'GA_Bash_C_ExecuteUbergraph_GA_Bash::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_ExecuteUbergraph_GA_Bash, CallFunc_BreakHitResult_HitComponent) == 0x000200, "Member 'GA_Bash_C_ExecuteUbergraph_GA_Bash::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_ExecuteUbergraph_GA_Bash, CallFunc_BreakHitResult_HitBoneName) == 0x000208, "Member 'GA_Bash_C_ExecuteUbergraph_GA_Bash::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_ExecuteUbergraph_GA_Bash, CallFunc_BreakHitResult_BoneName) == 0x000210, "Member 'GA_Bash_C_ExecuteUbergraph_GA_Bash::CallFunc_BreakHitResult_BoneName' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_ExecuteUbergraph_GA_Bash, CallFunc_BreakHitResult_HitItem) == 0x000218, "Member 'GA_Bash_C_ExecuteUbergraph_GA_Bash::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_ExecuteUbergraph_GA_Bash, CallFunc_BreakHitResult_ElementIndex) == 0x00021C, "Member 'GA_Bash_C_ExecuteUbergraph_GA_Bash::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_ExecuteUbergraph_GA_Bash, CallFunc_BreakHitResult_FaceIndex) == 0x000220, "Member 'GA_Bash_C_ExecuteUbergraph_GA_Bash::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_ExecuteUbergraph_GA_Bash, CallFunc_BreakHitResult_TraceStart) == 0x000228, "Member 'GA_Bash_C_ExecuteUbergraph_GA_Bash::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_ExecuteUbergraph_GA_Bash, CallFunc_BreakHitResult_TraceEnd) == 0x000240, "Member 'GA_Bash_C_ExecuteUbergraph_GA_Bash::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_ExecuteUbergraph_GA_Bash, K2Node_CustomEvent_ForwardVector) == 0x000258, "Member 'GA_Bash_C_ExecuteUbergraph_GA_Bash::K2Node_CustomEvent_ForwardVector' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_ExecuteUbergraph_GA_Bash, K2Node_CustomEvent_Target) == 0x000270, "Member 'GA_Bash_C_ExecuteUbergraph_GA_Bash::K2Node_CustomEvent_Target' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_ExecuteUbergraph_GA_Bash, K2Node_CustomEvent_TargetIsPlayer) == 0x000278, "Member 'GA_Bash_C_ExecuteUbergraph_GA_Bash::K2Node_CustomEvent_TargetIsPlayer' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_ExecuteUbergraph_GA_Bash, CallFunc_WaitDelay_ReturnValue) == 0x000280, "Member 'GA_Bash_C_ExecuteUbergraph_GA_Bash::CallFunc_WaitDelay_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_ExecuteUbergraph_GA_Bash, CallFunc_IsValid_ReturnValue) == 0x000288, "Member 'GA_Bash_C_ExecuteUbergraph_GA_Bash::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_ExecuteUbergraph_GA_Bash, Temp_int_Array_Index_Variable) == 0x00028C, "Member 'GA_Bash_C_ExecuteUbergraph_GA_Bash::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_ExecuteUbergraph_GA_Bash, CallFunc_K2_CommitAbilityCost_ReturnValue) == 0x000290, "Member 'GA_Bash_C_ExecuteUbergraph_GA_Bash::CallFunc_K2_CommitAbilityCost_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_ExecuteUbergraph_GA_Bash, CallFunc_GetOwnerAnimBPs_Array_Element) == 0x000298, "Member 'GA_Bash_C_ExecuteUbergraph_GA_Bash::CallFunc_GetOwnerAnimBPs_Array_Element' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_ExecuteUbergraph_GA_Bash, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x0002A8, "Member 'GA_Bash_C_ExecuteUbergraph_GA_Bash::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_ExecuteUbergraph_GA_Bash, CallFunc_GetPercentageCharged_Percentage) == 0x0002B0, "Member 'GA_Bash_C_ExecuteUbergraph_GA_Bash::CallFunc_GetPercentageCharged_Percentage' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_ExecuteUbergraph_GA_Bash, Temp_bool_Variable) == 0x0002B8, "Member 'GA_Bash_C_ExecuteUbergraph_GA_Bash::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_ExecuteUbergraph_GA_Bash, K2Node_Event_NotifyName) == 0x0002BC, "Member 'GA_Bash_C_ExecuteUbergraph_GA_Bash::K2Node_Event_NotifyName' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_ExecuteUbergraph_GA_Bash, Temp_bool_Variable_1) == 0x0002C4, "Member 'GA_Bash_C_ExecuteUbergraph_GA_Bash::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_ExecuteUbergraph_GA_Bash, CallFunc_EqualEqual_NameName_ReturnValue) == 0x0002C5, "Member 'GA_Bash_C_ExecuteUbergraph_GA_Bash::CallFunc_EqualEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_ExecuteUbergraph_GA_Bash, K2Node_Select_Default) == 0x0002C8, "Member 'GA_Bash_C_ExecuteUbergraph_GA_Bash::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_ExecuteUbergraph_GA_Bash, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x0002D0, "Member 'GA_Bash_C_ExecuteUbergraph_GA_Bash::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_ExecuteUbergraph_GA_Bash, K2Node_Select_Default_1) == 0x0002D8, "Member 'GA_Bash_C_ExecuteUbergraph_GA_Bash::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_ExecuteUbergraph_GA_Bash, CallFunc_GetOwningActorFromActorInfo_ReturnValue_1) == 0x0002E0, "Member 'GA_Bash_C_ExecuteUbergraph_GA_Bash::CallFunc_GetOwningActorFromActorInfo_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_ExecuteUbergraph_GA_Bash, CallFunc_IsValid_ReturnValue_1) == 0x0002E8, "Member 'GA_Bash_C_ExecuteUbergraph_GA_Bash::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_ExecuteUbergraph_GA_Bash, K2Node_DynamicCast_AsI_Trace_From_1) == 0x0002F0, "Member 'GA_Bash_C_ExecuteUbergraph_GA_Bash::K2Node_DynamicCast_AsI_Trace_From_1' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_ExecuteUbergraph_GA_Bash, K2Node_DynamicCast_bSuccess_1) == 0x000300, "Member 'GA_Bash_C_ExecuteUbergraph_GA_Bash::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_ExecuteUbergraph_GA_Bash, CallFunc_GetTraceFrom_Location_1) == 0x000308, "Member 'GA_Bash_C_ExecuteUbergraph_GA_Bash::CallFunc_GetTraceFrom_Location_1' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_ExecuteUbergraph_GA_Bash, CallFunc_GetTraceFrom_Rotation_1) == 0x000320, "Member 'GA_Bash_C_ExecuteUbergraph_GA_Bash::CallFunc_GetTraceFrom_Rotation_1' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_ExecuteUbergraph_GA_Bash, CallFunc_GetForwardVector_ReturnValue) == 0x000338, "Member 'GA_Bash_C_ExecuteUbergraph_GA_Bash::CallFunc_GetForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_ExecuteUbergraph_GA_Bash, CallFunc_GetCenterLocationForImpact_ReturnValue) == 0x000350, "Member 'GA_Bash_C_ExecuteUbergraph_GA_Bash::CallFunc_GetCenterLocationForImpact_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_ExecuteUbergraph_GA_Bash, CallFunc_GetNoAbilityCost_ReturnValue) == 0x000368, "Member 'GA_Bash_C_ExecuteUbergraph_GA_Bash::CallFunc_GetNoAbilityCost_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_ExecuteUbergraph_GA_Bash, CallFunc_GetAssociatedItem_ReturnValue) == 0x000370, "Member 'GA_Bash_C_ExecuteUbergraph_GA_Bash::CallFunc_GetAssociatedItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_ExecuteUbergraph_GA_Bash, CallFunc_Get_ClassLog_Name_name) == 0x000378, "Member 'GA_Bash_C_ExecuteUbergraph_GA_Bash::CallFunc_Get_ClassLog_Name_name' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_ExecuteUbergraph_GA_Bash, CallFunc_IsValid_ReturnValue_2) == 0x000388, "Member 'GA_Bash_C_ExecuteUbergraph_GA_Bash::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_ExecuteUbergraph_GA_Bash, CallFunc_GetOwningActorFromActorInfo_ReturnValue_2) == 0x000390, "Member 'GA_Bash_C_ExecuteUbergraph_GA_Bash::CallFunc_GetOwningActorFromActorInfo_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_ExecuteUbergraph_GA_Bash, K2Node_DynamicCast_AsI_FOVAble) == 0x000398, "Member 'GA_Bash_C_ExecuteUbergraph_GA_Bash::K2Node_DynamicCast_AsI_FOVAble' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_ExecuteUbergraph_GA_Bash, K2Node_DynamicCast_bSuccess_2) == 0x0003A8, "Member 'GA_Bash_C_ExecuteUbergraph_GA_Bash::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_ExecuteUbergraph_GA_Bash, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x0003A9, "Member 'GA_Bash_C_ExecuteUbergraph_GA_Bash::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_ExecuteUbergraph_GA_Bash, CallFunc_GetAssociatedItem_ReturnValue_1) == 0x0003B0, "Member 'GA_Bash_C_ExecuteUbergraph_GA_Bash::CallFunc_GetAssociatedItem_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_ExecuteUbergraph_GA_Bash, CallFunc_K2_GetCooldownTimeRemainingAndDuration_TimeRemaining) == 0x0003B8, "Member 'GA_Bash_C_ExecuteUbergraph_GA_Bash::CallFunc_K2_GetCooldownTimeRemainingAndDuration_TimeRemaining' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_ExecuteUbergraph_GA_Bash, CallFunc_K2_GetCooldownTimeRemainingAndDuration_CooldownDuration) == 0x0003BC, "Member 'GA_Bash_C_ExecuteUbergraph_GA_Bash::CallFunc_K2_GetCooldownTimeRemainingAndDuration_CooldownDuration' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_ExecuteUbergraph_GA_Bash, CallFunc_K2_GetCooldownTimeRemainingAndDuration_ReturnValue) == 0x0003C0, "Member 'GA_Bash_C_ExecuteUbergraph_GA_Bash::CallFunc_K2_GetCooldownTimeRemainingAndDuration_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_ExecuteUbergraph_GA_Bash, CallFunc_TaskWaitDelay_TaskOwner_CastInput) == 0x0003C8, "Member 'GA_Bash_C_ExecuteUbergraph_GA_Bash::CallFunc_TaskWaitDelay_TaskOwner_CastInput' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_ExecuteUbergraph_GA_Bash, CallFunc_TaskWaitDelay_ReturnValue) == 0x0003D8, "Member 'GA_Bash_C_ExecuteUbergraph_GA_Bash::CallFunc_TaskWaitDelay_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_ExecuteUbergraph_GA_Bash, CallFunc_GetOwnersBlockingVolume_BlockingVolume) == 0x0003E0, "Member 'GA_Bash_C_ExecuteUbergraph_GA_Bash::CallFunc_GetOwnersBlockingVolume_BlockingVolume' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_ExecuteUbergraph_GA_Bash, CallFunc_IsValid_ReturnValue_3) == 0x0003E8, "Member 'GA_Bash_C_ExecuteUbergraph_GA_Bash::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_ExecuteUbergraph_GA_Bash, CallFunc_Not_PreBool_ReturnValue) == 0x0003E9, "Member 'GA_Bash_C_ExecuteUbergraph_GA_Bash::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_ExecuteUbergraph_GA_Bash, CallFunc_TraceForHitWithInterface_AcceptedHits) == 0x0003F0, "Member 'GA_Bash_C_ExecuteUbergraph_GA_Bash::CallFunc_TraceForHitWithInterface_AcceptedHits' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_ExecuteUbergraph_GA_Bash, CallFunc_TraceForHitWithInterface_NoHits) == 0x000400, "Member 'GA_Bash_C_ExecuteUbergraph_GA_Bash::CallFunc_TraceForHitWithInterface_NoHits' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_ExecuteUbergraph_GA_Bash, CallFunc_TraceForHitWithInterface_OnlyHitWorldStatic) == 0x000401, "Member 'GA_Bash_C_ExecuteUbergraph_GA_Bash::CallFunc_TraceForHitWithInterface_OnlyHitWorldStatic' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_ExecuteUbergraph_GA_Bash, CallFunc_TraceForHitWithInterface_InitialTraceHit) == 0x000408, "Member 'GA_Bash_C_ExecuteUbergraph_GA_Bash::CallFunc_TraceForHitWithInterface_InitialTraceHit' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_ExecuteUbergraph_GA_Bash, CallFunc_K2_CommitAbilityCooldown_ReturnValue) == 0x000500, "Member 'GA_Bash_C_ExecuteUbergraph_GA_Bash::CallFunc_K2_CommitAbilityCooldown_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_ExecuteUbergraph_GA_Bash, CallFunc_Array_Get_Item) == 0x000508, "Member 'GA_Bash_C_ExecuteUbergraph_GA_Bash::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_ExecuteUbergraph_GA_Bash, CallFunc_Array_Length_ReturnValue) == 0x000600, "Member 'GA_Bash_C_ExecuteUbergraph_GA_Bash::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_ExecuteUbergraph_GA_Bash, CallFunc_Less_IntInt_ReturnValue) == 0x000604, "Member 'GA_Bash_C_ExecuteUbergraph_GA_Bash::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_ExecuteUbergraph_GA_Bash, CallFunc_BreakHitResult_bBlockingHit_1) == 0x000605, "Member 'GA_Bash_C_ExecuteUbergraph_GA_Bash::CallFunc_BreakHitResult_bBlockingHit_1' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_ExecuteUbergraph_GA_Bash, CallFunc_BreakHitResult_bInitialOverlap_1) == 0x000606, "Member 'GA_Bash_C_ExecuteUbergraph_GA_Bash::CallFunc_BreakHitResult_bInitialOverlap_1' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_ExecuteUbergraph_GA_Bash, CallFunc_BreakHitResult_Time_1) == 0x000608, "Member 'GA_Bash_C_ExecuteUbergraph_GA_Bash::CallFunc_BreakHitResult_Time_1' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_ExecuteUbergraph_GA_Bash, CallFunc_BreakHitResult_Distance_1) == 0x00060C, "Member 'GA_Bash_C_ExecuteUbergraph_GA_Bash::CallFunc_BreakHitResult_Distance_1' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_ExecuteUbergraph_GA_Bash, CallFunc_BreakHitResult_Location_1) == 0x000610, "Member 'GA_Bash_C_ExecuteUbergraph_GA_Bash::CallFunc_BreakHitResult_Location_1' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_ExecuteUbergraph_GA_Bash, CallFunc_BreakHitResult_ImpactPoint_1) == 0x000628, "Member 'GA_Bash_C_ExecuteUbergraph_GA_Bash::CallFunc_BreakHitResult_ImpactPoint_1' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_ExecuteUbergraph_GA_Bash, CallFunc_BreakHitResult_Normal_1) == 0x000640, "Member 'GA_Bash_C_ExecuteUbergraph_GA_Bash::CallFunc_BreakHitResult_Normal_1' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_ExecuteUbergraph_GA_Bash, CallFunc_BreakHitResult_ImpactNormal_1) == 0x000658, "Member 'GA_Bash_C_ExecuteUbergraph_GA_Bash::CallFunc_BreakHitResult_ImpactNormal_1' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_ExecuteUbergraph_GA_Bash, CallFunc_BreakHitResult_PhysMat_1) == 0x000670, "Member 'GA_Bash_C_ExecuteUbergraph_GA_Bash::CallFunc_BreakHitResult_PhysMat_1' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_ExecuteUbergraph_GA_Bash, CallFunc_BreakHitResult_HitActor_1) == 0x000678, "Member 'GA_Bash_C_ExecuteUbergraph_GA_Bash::CallFunc_BreakHitResult_HitActor_1' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_ExecuteUbergraph_GA_Bash, CallFunc_BreakHitResult_HitComponent_1) == 0x000680, "Member 'GA_Bash_C_ExecuteUbergraph_GA_Bash::CallFunc_BreakHitResult_HitComponent_1' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_ExecuteUbergraph_GA_Bash, CallFunc_BreakHitResult_HitBoneName_1) == 0x000688, "Member 'GA_Bash_C_ExecuteUbergraph_GA_Bash::CallFunc_BreakHitResult_HitBoneName_1' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_ExecuteUbergraph_GA_Bash, CallFunc_BreakHitResult_BoneName_1) == 0x000690, "Member 'GA_Bash_C_ExecuteUbergraph_GA_Bash::CallFunc_BreakHitResult_BoneName_1' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_ExecuteUbergraph_GA_Bash, CallFunc_BreakHitResult_HitItem_1) == 0x000698, "Member 'GA_Bash_C_ExecuteUbergraph_GA_Bash::CallFunc_BreakHitResult_HitItem_1' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_ExecuteUbergraph_GA_Bash, CallFunc_BreakHitResult_ElementIndex_1) == 0x00069C, "Member 'GA_Bash_C_ExecuteUbergraph_GA_Bash::CallFunc_BreakHitResult_ElementIndex_1' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_ExecuteUbergraph_GA_Bash, CallFunc_BreakHitResult_FaceIndex_1) == 0x0006A0, "Member 'GA_Bash_C_ExecuteUbergraph_GA_Bash::CallFunc_BreakHitResult_FaceIndex_1' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_ExecuteUbergraph_GA_Bash, CallFunc_BreakHitResult_TraceStart_1) == 0x0006A8, "Member 'GA_Bash_C_ExecuteUbergraph_GA_Bash::CallFunc_BreakHitResult_TraceStart_1' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_ExecuteUbergraph_GA_Bash, CallFunc_BreakHitResult_TraceEnd_1) == 0x0006C0, "Member 'GA_Bash_C_ExecuteUbergraph_GA_Bash::CallFunc_BreakHitResult_TraceEnd_1' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_ExecuteUbergraph_GA_Bash, CallFunc_TryKnockbackMessItem_HitMessItem) == 0x0006D8, "Member 'GA_Bash_C_ExecuteUbergraph_GA_Bash::CallFunc_TryKnockbackMessItem_HitMessItem' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_ExecuteUbergraph_GA_Bash, CallFunc_CanApplyHit_HitActorASC) == 0x0006E0, "Member 'GA_Bash_C_ExecuteUbergraph_GA_Bash::CallFunc_CanApplyHit_HitActorASC' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_ExecuteUbergraph_GA_Bash, CallFunc_CanApplyHit_ReturnValue) == 0x0006E8, "Member 'GA_Bash_C_ExecuteUbergraph_GA_Bash::CallFunc_CanApplyHit_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_ExecuteUbergraph_GA_Bash, CallFunc_HitThisActorAlready_ReturnValue) == 0x0006E9, "Member 'GA_Bash_C_ExecuteUbergraph_GA_Bash::CallFunc_HitThisActorAlready_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_ExecuteUbergraph_GA_Bash, CallFunc_GetGameState_ReturnValue) == 0x0006F0, "Member 'GA_Bash_C_ExecuteUbergraph_GA_Bash::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_ExecuteUbergraph_GA_Bash, CallFunc_HasMatchEnded_ReturnValue) == 0x0006F8, "Member 'GA_Bash_C_ExecuteUbergraph_GA_Bash::CallFunc_HasMatchEnded_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_ExecuteUbergraph_GA_Bash, CallFunc_Multiply_DoubleDouble_A_ImplicitCast) == 0x000700, "Member 'GA_Bash_C_ExecuteUbergraph_GA_Bash::CallFunc_Multiply_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_ExecuteUbergraph_GA_Bash, K2Node_Select_Option_1_ImplicitCast) == 0x000708, "Member 'GA_Bash_C_ExecuteUbergraph_GA_Bash::K2Node_Select_Option_1_ImplicitCast' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_ExecuteUbergraph_GA_Bash, CallFunc_Multiply_DoubleDouble_A_ImplicitCast_1) == 0x000710, "Member 'GA_Bash_C_ExecuteUbergraph_GA_Bash::CallFunc_Multiply_DoubleDouble_A_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_ExecuteUbergraph_GA_Bash, K2Node_Select_Option_1_ImplicitCast_1) == 0x000718, "Member 'GA_Bash_C_ExecuteUbergraph_GA_Bash::K2Node_Select_Option_1_ImplicitCast_1' has a wrong offset!");

// Function GA_Bash.GA_Bash_C.FinishedTracing
// 0x0010 (0x0010 - 0x0000)
struct GA_Bash_C_FinishedTracing final
{
public:
	class UGameplayMessageSubsystem*              CallFunc_GetGameInstanceSubsystem_ReturnValue;     // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLocallyControlled_ReturnValue;          // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FS_ChargeBarEndGameplayMessage         K2Node_MakeStruct_S_ChargeBarEndGameplayMessage;   // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_Bash_C_FinishedTracing) == 0x000008, "Wrong alignment on GA_Bash_C_FinishedTracing");
static_assert(sizeof(GA_Bash_C_FinishedTracing) == 0x000010, "Wrong size on GA_Bash_C_FinishedTracing");
static_assert(offsetof(GA_Bash_C_FinishedTracing, CallFunc_GetGameInstanceSubsystem_ReturnValue) == 0x000000, "Member 'GA_Bash_C_FinishedTracing::CallFunc_GetGameInstanceSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_FinishedTracing, CallFunc_IsLocallyControlled_ReturnValue) == 0x000008, "Member 'GA_Bash_C_FinishedTracing::CallFunc_IsLocallyControlled_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_FinishedTracing, K2Node_MakeStruct_S_ChargeBarEndGameplayMessage) == 0x000009, "Member 'GA_Bash_C_FinishedTracing::K2Node_MakeStruct_S_ChargeBarEndGameplayMessage' has a wrong offset!");

// Function GA_Bash.GA_Bash_C.GetCenterLocationForImpact
// 0x00B0 (0x00B0 - 0x0000)
struct GA_Bash_C_GetCenterLocationForImpact final
{
public:
	struct FVector                                ImpactLocation;                                    // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                TraceFrom;                                         // 0x0018(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                ForwardVector;                                     // 0x0030(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                ReturnValue;                                       // 0x0048(0x0018)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Vector_Distance_ReturnValue;              // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_DoubleToVector_ReturnValue;          // 0x0068(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue;        // 0x0080(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0098(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_Bash_C_GetCenterLocationForImpact) == 0x000008, "Wrong alignment on GA_Bash_C_GetCenterLocationForImpact");
static_assert(sizeof(GA_Bash_C_GetCenterLocationForImpact) == 0x0000B0, "Wrong size on GA_Bash_C_GetCenterLocationForImpact");
static_assert(offsetof(GA_Bash_C_GetCenterLocationForImpact, ImpactLocation) == 0x000000, "Member 'GA_Bash_C_GetCenterLocationForImpact::ImpactLocation' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_GetCenterLocationForImpact, TraceFrom) == 0x000018, "Member 'GA_Bash_C_GetCenterLocationForImpact::TraceFrom' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_GetCenterLocationForImpact, ForwardVector) == 0x000030, "Member 'GA_Bash_C_GetCenterLocationForImpact::ForwardVector' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_GetCenterLocationForImpact, ReturnValue) == 0x000048, "Member 'GA_Bash_C_GetCenterLocationForImpact::ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_GetCenterLocationForImpact, CallFunc_Vector_Distance_ReturnValue) == 0x000060, "Member 'GA_Bash_C_GetCenterLocationForImpact::CallFunc_Vector_Distance_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_GetCenterLocationForImpact, CallFunc_Conv_DoubleToVector_ReturnValue) == 0x000068, "Member 'GA_Bash_C_GetCenterLocationForImpact::CallFunc_Conv_DoubleToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_GetCenterLocationForImpact, CallFunc_Multiply_VectorVector_ReturnValue) == 0x000080, "Member 'GA_Bash_C_GetCenterLocationForImpact::CallFunc_Multiply_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_GetCenterLocationForImpact, CallFunc_Add_VectorVector_ReturnValue) == 0x000098, "Member 'GA_Bash_C_GetCenterLocationForImpact::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");

// Function GA_Bash.GA_Bash_C.GetChargedTime
// 0x0018 (0x0018 - 0x0000)
struct GA_Bash_C_GetChargedTime final
{
public:
	double                                        ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetServerWorldTimeSafe_ReturnValue;       // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_Bash_C_GetChargedTime) == 0x000008, "Wrong alignment on GA_Bash_C_GetChargedTime");
static_assert(sizeof(GA_Bash_C_GetChargedTime) == 0x000018, "Wrong size on GA_Bash_C_GetChargedTime");
static_assert(offsetof(GA_Bash_C_GetChargedTime, ReturnValue) == 0x000000, "Member 'GA_Bash_C_GetChargedTime::ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_GetChargedTime, CallFunc_GetServerWorldTimeSafe_ReturnValue) == 0x000008, "Member 'GA_Bash_C_GetChargedTime::CallFunc_GetServerWorldTimeSafe_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_GetChargedTime, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000010, "Member 'GA_Bash_C_GetChargedTime::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");

// Function GA_Bash.GA_Bash_C.GetCosmeticLocationAndNormal
// 0x0248 (0x0248 - 0x0000)
struct GA_Bash_C_GetCosmeticLocationAndNormal final
{
public:
	struct FHitResult                             Hit;                                               // 0x0000(0x00F8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FVector                                Location;                                          // 0x00F8(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Normal;                                            // 0x0110(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x0128(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x0129(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12A[0x2];                                      // 0x012A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x012C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x0130(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_134[0x4];                                      // 0x0134(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x0138(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x0150(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x0168(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x0180(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0198(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x01A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x01A8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x01B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_BoneName;                  // 0x01B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x01C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x01C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x01C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1CC[0x4];                                      // 0x01CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x01D0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x01E8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetNormal_ReturnValue;                    // 0x0200(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACharacter*                             K2Node_DynamicCast_AsCharacter;                    // 0x0218(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0220(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_221[0x7];                                      // 0x0221(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetClosestPointOnCollision_OutPointOnBody; // 0x0228(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetClosestPointOnCollision_ReturnValue;   // 0x0240(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_Bash_C_GetCosmeticLocationAndNormal) == 0x000008, "Wrong alignment on GA_Bash_C_GetCosmeticLocationAndNormal");
static_assert(sizeof(GA_Bash_C_GetCosmeticLocationAndNormal) == 0x000248, "Wrong size on GA_Bash_C_GetCosmeticLocationAndNormal");
static_assert(offsetof(GA_Bash_C_GetCosmeticLocationAndNormal, Hit) == 0x000000, "Member 'GA_Bash_C_GetCosmeticLocationAndNormal::Hit' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_GetCosmeticLocationAndNormal, Location) == 0x0000F8, "Member 'GA_Bash_C_GetCosmeticLocationAndNormal::Location' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_GetCosmeticLocationAndNormal, Normal) == 0x000110, "Member 'GA_Bash_C_GetCosmeticLocationAndNormal::Normal' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_GetCosmeticLocationAndNormal, CallFunc_BreakHitResult_bBlockingHit) == 0x000128, "Member 'GA_Bash_C_GetCosmeticLocationAndNormal::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_GetCosmeticLocationAndNormal, CallFunc_BreakHitResult_bInitialOverlap) == 0x000129, "Member 'GA_Bash_C_GetCosmeticLocationAndNormal::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_GetCosmeticLocationAndNormal, CallFunc_BreakHitResult_Time) == 0x00012C, "Member 'GA_Bash_C_GetCosmeticLocationAndNormal::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_GetCosmeticLocationAndNormal, CallFunc_BreakHitResult_Distance) == 0x000130, "Member 'GA_Bash_C_GetCosmeticLocationAndNormal::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_GetCosmeticLocationAndNormal, CallFunc_BreakHitResult_Location) == 0x000138, "Member 'GA_Bash_C_GetCosmeticLocationAndNormal::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_GetCosmeticLocationAndNormal, CallFunc_BreakHitResult_ImpactPoint) == 0x000150, "Member 'GA_Bash_C_GetCosmeticLocationAndNormal::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_GetCosmeticLocationAndNormal, CallFunc_BreakHitResult_Normal) == 0x000168, "Member 'GA_Bash_C_GetCosmeticLocationAndNormal::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_GetCosmeticLocationAndNormal, CallFunc_BreakHitResult_ImpactNormal) == 0x000180, "Member 'GA_Bash_C_GetCosmeticLocationAndNormal::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_GetCosmeticLocationAndNormal, CallFunc_BreakHitResult_PhysMat) == 0x000198, "Member 'GA_Bash_C_GetCosmeticLocationAndNormal::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_GetCosmeticLocationAndNormal, CallFunc_BreakHitResult_HitActor) == 0x0001A0, "Member 'GA_Bash_C_GetCosmeticLocationAndNormal::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_GetCosmeticLocationAndNormal, CallFunc_BreakHitResult_HitComponent) == 0x0001A8, "Member 'GA_Bash_C_GetCosmeticLocationAndNormal::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_GetCosmeticLocationAndNormal, CallFunc_BreakHitResult_HitBoneName) == 0x0001B0, "Member 'GA_Bash_C_GetCosmeticLocationAndNormal::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_GetCosmeticLocationAndNormal, CallFunc_BreakHitResult_BoneName) == 0x0001B8, "Member 'GA_Bash_C_GetCosmeticLocationAndNormal::CallFunc_BreakHitResult_BoneName' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_GetCosmeticLocationAndNormal, CallFunc_BreakHitResult_HitItem) == 0x0001C0, "Member 'GA_Bash_C_GetCosmeticLocationAndNormal::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_GetCosmeticLocationAndNormal, CallFunc_BreakHitResult_ElementIndex) == 0x0001C4, "Member 'GA_Bash_C_GetCosmeticLocationAndNormal::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_GetCosmeticLocationAndNormal, CallFunc_BreakHitResult_FaceIndex) == 0x0001C8, "Member 'GA_Bash_C_GetCosmeticLocationAndNormal::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_GetCosmeticLocationAndNormal, CallFunc_BreakHitResult_TraceStart) == 0x0001D0, "Member 'GA_Bash_C_GetCosmeticLocationAndNormal::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_GetCosmeticLocationAndNormal, CallFunc_BreakHitResult_TraceEnd) == 0x0001E8, "Member 'GA_Bash_C_GetCosmeticLocationAndNormal::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_GetCosmeticLocationAndNormal, CallFunc_GetNormal_ReturnValue) == 0x000200, "Member 'GA_Bash_C_GetCosmeticLocationAndNormal::CallFunc_GetNormal_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_GetCosmeticLocationAndNormal, K2Node_DynamicCast_AsCharacter) == 0x000218, "Member 'GA_Bash_C_GetCosmeticLocationAndNormal::K2Node_DynamicCast_AsCharacter' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_GetCosmeticLocationAndNormal, K2Node_DynamicCast_bSuccess) == 0x000220, "Member 'GA_Bash_C_GetCosmeticLocationAndNormal::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_GetCosmeticLocationAndNormal, CallFunc_GetClosestPointOnCollision_OutPointOnBody) == 0x000228, "Member 'GA_Bash_C_GetCosmeticLocationAndNormal::CallFunc_GetClosestPointOnCollision_OutPointOnBody' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_GetCosmeticLocationAndNormal, CallFunc_GetClosestPointOnCollision_ReturnValue) == 0x000240, "Member 'GA_Bash_C_GetCosmeticLocationAndNormal::CallFunc_GetClosestPointOnCollision_ReturnValue' has a wrong offset!");

// Function GA_Bash.GA_Bash_C.GetDamageToShield
// 0x0108 (0x0108 - 0x0000)
struct GA_Bash_C_GetDamageToShield final
{
public:
	struct FHitResult                             HitResult;                                         // 0x0000(0x00F8)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class UAbilitySystemComponentIW*              HitActorASC;                                       // 0x00F8(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         Damage;                                            // 0x0100(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_Bash_C_GetDamageToShield) == 0x000008, "Wrong alignment on GA_Bash_C_GetDamageToShield");
static_assert(sizeof(GA_Bash_C_GetDamageToShield) == 0x000108, "Wrong size on GA_Bash_C_GetDamageToShield");
static_assert(offsetof(GA_Bash_C_GetDamageToShield, HitResult) == 0x000000, "Member 'GA_Bash_C_GetDamageToShield::HitResult' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_GetDamageToShield, HitActorASC) == 0x0000F8, "Member 'GA_Bash_C_GetDamageToShield::HitActorASC' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_GetDamageToShield, Damage) == 0x000100, "Member 'GA_Bash_C_GetDamageToShield::Damage' has a wrong offset!");

// Function GA_Bash.GA_Bash_C.GetEffectCauser
// 0x0130 (0x0130 - 0x0000)
struct GA_Bash_C_GetEffectCauser final
{
public:
	class AActor*                                 EffectCauser;                                      // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UEquipmentInstance*                     CallFunc_GetAssociatedEquipment_ReturnValue;       // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBP_EquipmentInstance_C*                K2Node_DynamicCast_AsBP_Equipment_Instance;        // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FSpawnedActorData>              CallFunc_GetSpawnedActors_ReturnValue;             // 0x0020(0x0010)(ReferenceParm)
	struct FSpawnedActorData                      CallFunc_Array_Get_Item;                           // 0x0030(0x0100)(NoDestructor)
};
static_assert(alignof(GA_Bash_C_GetEffectCauser) == 0x000010, "Wrong alignment on GA_Bash_C_GetEffectCauser");
static_assert(sizeof(GA_Bash_C_GetEffectCauser) == 0x000130, "Wrong size on GA_Bash_C_GetEffectCauser");
static_assert(offsetof(GA_Bash_C_GetEffectCauser, EffectCauser) == 0x000000, "Member 'GA_Bash_C_GetEffectCauser::EffectCauser' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_GetEffectCauser, CallFunc_GetAssociatedEquipment_ReturnValue) == 0x000008, "Member 'GA_Bash_C_GetEffectCauser::CallFunc_GetAssociatedEquipment_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_GetEffectCauser, K2Node_DynamicCast_AsBP_Equipment_Instance) == 0x000010, "Member 'GA_Bash_C_GetEffectCauser::K2Node_DynamicCast_AsBP_Equipment_Instance' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_GetEffectCauser, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'GA_Bash_C_GetEffectCauser::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_GetEffectCauser, CallFunc_GetSpawnedActors_ReturnValue) == 0x000020, "Member 'GA_Bash_C_GetEffectCauser::CallFunc_GetSpawnedActors_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_GetEffectCauser, CallFunc_Array_Get_Item) == 0x000030, "Member 'GA_Bash_C_GetEffectCauser::CallFunc_Array_Get_Item' has a wrong offset!");

// Function GA_Bash.GA_Bash_C.GetHitBashBoneName
// 0x0008 (0x0008 - 0x0000)
struct GA_Bash_C_GetHitBashBoneName final
{
public:
	class FName                                   Return;                                            // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_Bash_C_GetHitBashBoneName) == 0x000004, "Wrong alignment on GA_Bash_C_GetHitBashBoneName");
static_assert(sizeof(GA_Bash_C_GetHitBashBoneName) == 0x000008, "Wrong size on GA_Bash_C_GetHitBashBoneName");
static_assert(offsetof(GA_Bash_C_GetHitBashBoneName, Return) == 0x000000, "Member 'GA_Bash_C_GetHitBashBoneName::Return' has a wrong offset!");

// Function GA_Bash.GA_Bash_C.GetImpactEffectType
// 0x0001 (0x0001 - 0x0000)
struct GA_Bash_C_GetImpactEffectType final
{
public:
	E_ImpactEffect                                Return;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_Bash_C_GetImpactEffectType) == 0x000001, "Wrong alignment on GA_Bash_C_GetImpactEffectType");
static_assert(sizeof(GA_Bash_C_GetImpactEffectType) == 0x000001, "Wrong size on GA_Bash_C_GetImpactEffectType");
static_assert(offsetof(GA_Bash_C_GetImpactEffectType, Return) == 0x000000, "Member 'GA_Bash_C_GetImpactEffectType::Return' has a wrong offset!");

// Function GA_Bash.GA_Bash_C.GetInitialBashSound
// 0x0008 (0x0008 - 0x0000)
struct GA_Bash_C_GetInitialBashSound final
{
public:
	class USoundCue*                              InitialSound;                                      // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_Bash_C_GetInitialBashSound) == 0x000008, "Wrong alignment on GA_Bash_C_GetInitialBashSound");
static_assert(sizeof(GA_Bash_C_GetInitialBashSound) == 0x000008, "Wrong size on GA_Bash_C_GetInitialBashSound");
static_assert(offsetof(GA_Bash_C_GetInitialBashSound, InitialSound) == 0x000000, "Member 'GA_Bash_C_GetInitialBashSound::InitialSound' has a wrong offset!");

// Function GA_Bash.GA_Bash_C.GetItemAffectedSound
// 0x0008 (0x0008 - 0x0000)
struct GA_Bash_C_GetItemAffectedSound final
{
public:
	class USoundCue*                              Return;                                            // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_Bash_C_GetItemAffectedSound) == 0x000008, "Wrong alignment on GA_Bash_C_GetItemAffectedSound");
static_assert(sizeof(GA_Bash_C_GetItemAffectedSound) == 0x000008, "Wrong size on GA_Bash_C_GetItemAffectedSound");
static_assert(offsetof(GA_Bash_C_GetItemAffectedSound, Return) == 0x000000, "Member 'GA_Bash_C_GetItemAffectedSound::Return' has a wrong offset!");

// Function GA_Bash.GA_Bash_C.GetItemCompatibleSound
// 0x0008 (0x0008 - 0x0000)
struct GA_Bash_C_GetItemCompatibleSound final
{
public:
	class USoundCue*                              Return;                                            // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_Bash_C_GetItemCompatibleSound) == 0x000008, "Wrong alignment on GA_Bash_C_GetItemCompatibleSound");
static_assert(sizeof(GA_Bash_C_GetItemCompatibleSound) == 0x000008, "Wrong size on GA_Bash_C_GetItemCompatibleSound");
static_assert(offsetof(GA_Bash_C_GetItemCompatibleSound, Return) == 0x000000, "Member 'GA_Bash_C_GetItemCompatibleSound::Return' has a wrong offset!");

// Function GA_Bash.GA_Bash_C.GetNoAbilityCost
// 0x0018 (0x0018 - 0x0000)
struct GA_Bash_C_GetNoAbilityCost final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UItemInstance*                          CallFunc_GetAssociatedItem_ReturnValue;            // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetTagStackCount_ReturnValue;             // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Conv_IntToBool_ReturnValue;               // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_Bash_C_GetNoAbilityCost) == 0x000008, "Wrong alignment on GA_Bash_C_GetNoAbilityCost");
static_assert(sizeof(GA_Bash_C_GetNoAbilityCost) == 0x000018, "Wrong size on GA_Bash_C_GetNoAbilityCost");
static_assert(offsetof(GA_Bash_C_GetNoAbilityCost, ReturnValue) == 0x000000, "Member 'GA_Bash_C_GetNoAbilityCost::ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_GetNoAbilityCost, CallFunc_GetAssociatedItem_ReturnValue) == 0x000008, "Member 'GA_Bash_C_GetNoAbilityCost::CallFunc_GetAssociatedItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_GetNoAbilityCost, CallFunc_GetTagStackCount_ReturnValue) == 0x000010, "Member 'GA_Bash_C_GetNoAbilityCost::CallFunc_GetTagStackCount_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_GetNoAbilityCost, CallFunc_Conv_IntToBool_ReturnValue) == 0x000014, "Member 'GA_Bash_C_GetNoAbilityCost::CallFunc_Conv_IntToBool_ReturnValue' has a wrong offset!");

// Function GA_Bash.GA_Bash_C.GetNormal
// 0x0068 (0x0068 - 0x0000)
struct GA_Bash_C_GetNormal final
{
public:
	struct FVector                                Normal;                                            // 0x0000(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                ReturnValue;                                       // 0x0018(0x0018)(ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0038(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Select_Default;                             // 0x0050(0x0018)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_Bash_C_GetNormal) == 0x000008, "Wrong alignment on GA_Bash_C_GetNormal");
static_assert(sizeof(GA_Bash_C_GetNormal) == 0x000068, "Wrong size on GA_Bash_C_GetNormal");
static_assert(offsetof(GA_Bash_C_GetNormal, Normal) == 0x000000, "Member 'GA_Bash_C_GetNormal::Normal' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_GetNormal, ReturnValue) == 0x000018, "Member 'GA_Bash_C_GetNormal::ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_GetNormal, Temp_bool_Variable) == 0x000030, "Member 'GA_Bash_C_GetNormal::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_GetNormal, CallFunc_MakeVector_ReturnValue) == 0x000038, "Member 'GA_Bash_C_GetNormal::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_GetNormal, K2Node_Select_Default) == 0x000050, "Member 'GA_Bash_C_GetNormal::K2Node_Select_Default' has a wrong offset!");

// Function GA_Bash.GA_Bash_C.GetOwnerAbilitySystemComponent
// 0x0018 (0x0018 - 0x0000)
struct GA_Bash_C_GetOwnerAbilitySystemComponent final
{
public:
	class UAbilitySystemComponent*                Return;                                            // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwningActorFromActorInfo_ReturnValue;  // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAbilitySystemComponent*                CallFunc_GetAbilitySystemComponent_ReturnValue;    // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_Bash_C_GetOwnerAbilitySystemComponent) == 0x000008, "Wrong alignment on GA_Bash_C_GetOwnerAbilitySystemComponent");
static_assert(sizeof(GA_Bash_C_GetOwnerAbilitySystemComponent) == 0x000018, "Wrong size on GA_Bash_C_GetOwnerAbilitySystemComponent");
static_assert(offsetof(GA_Bash_C_GetOwnerAbilitySystemComponent, Return) == 0x000000, "Member 'GA_Bash_C_GetOwnerAbilitySystemComponent::Return' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_GetOwnerAbilitySystemComponent, CallFunc_GetOwningActorFromActorInfo_ReturnValue) == 0x000008, "Member 'GA_Bash_C_GetOwnerAbilitySystemComponent::CallFunc_GetOwningActorFromActorInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_GetOwnerAbilitySystemComponent, CallFunc_GetAbilitySystemComponent_ReturnValue) == 0x000010, "Member 'GA_Bash_C_GetOwnerAbilitySystemComponent::CallFunc_GetAbilitySystemComponent_ReturnValue' has a wrong offset!");

// Function GA_Bash.GA_Bash_C.GetOwnerAnimBPs
// 0x0078 (0x0078 - 0x0000)
struct GA_Bash_C_GetOwnerAnimBPs final
{
public:
	TArray<class UAnimInstance*>                  Array_Element;                                     // 0x0000(0x0010)(Parm, OutParm)
	TArray<class UAnimInstance*>                  LAnimInstance;                                     // 0x0010(0x0010)(Edit, BlueprintVisible)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwningActorFromActorInfo_ReturnValue;  // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class II_Character_C>        K2Node_DynamicCast_AsI_Character;                  // 0x0038(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UAnimInstance*>                  CallFunc_GetAnimBPs_AnimBPs;                       // 0x0050(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_64[0x4];                                       // 0x0064(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimInstance*                          CallFunc_Array_Get_Item;                           // 0x0068(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_71[0x3];                                       // 0x0071(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_Bash_C_GetOwnerAnimBPs) == 0x000008, "Wrong alignment on GA_Bash_C_GetOwnerAnimBPs");
static_assert(sizeof(GA_Bash_C_GetOwnerAnimBPs) == 0x000078, "Wrong size on GA_Bash_C_GetOwnerAnimBPs");
static_assert(offsetof(GA_Bash_C_GetOwnerAnimBPs, Array_Element) == 0x000000, "Member 'GA_Bash_C_GetOwnerAnimBPs::Array_Element' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_GetOwnerAnimBPs, LAnimInstance) == 0x000010, "Member 'GA_Bash_C_GetOwnerAnimBPs::LAnimInstance' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_GetOwnerAnimBPs, Temp_int_Array_Index_Variable) == 0x000020, "Member 'GA_Bash_C_GetOwnerAnimBPs::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_GetOwnerAnimBPs, Temp_int_Loop_Counter_Variable) == 0x000024, "Member 'GA_Bash_C_GetOwnerAnimBPs::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_GetOwnerAnimBPs, CallFunc_Add_IntInt_ReturnValue) == 0x000028, "Member 'GA_Bash_C_GetOwnerAnimBPs::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_GetOwnerAnimBPs, CallFunc_GetOwningActorFromActorInfo_ReturnValue) == 0x000030, "Member 'GA_Bash_C_GetOwnerAnimBPs::CallFunc_GetOwningActorFromActorInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_GetOwnerAnimBPs, K2Node_DynamicCast_AsI_Character) == 0x000038, "Member 'GA_Bash_C_GetOwnerAnimBPs::K2Node_DynamicCast_AsI_Character' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_GetOwnerAnimBPs, K2Node_DynamicCast_bSuccess) == 0x000048, "Member 'GA_Bash_C_GetOwnerAnimBPs::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_GetOwnerAnimBPs, CallFunc_GetAnimBPs_AnimBPs) == 0x000050, "Member 'GA_Bash_C_GetOwnerAnimBPs::CallFunc_GetAnimBPs_AnimBPs' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_GetOwnerAnimBPs, CallFunc_Array_Length_ReturnValue) == 0x000060, "Member 'GA_Bash_C_GetOwnerAnimBPs::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_GetOwnerAnimBPs, CallFunc_Array_Get_Item) == 0x000068, "Member 'GA_Bash_C_GetOwnerAnimBPs::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_GetOwnerAnimBPs, CallFunc_Less_IntInt_ReturnValue) == 0x000070, "Member 'GA_Bash_C_GetOwnerAnimBPs::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_GetOwnerAnimBPs, CallFunc_Array_Add_ReturnValue) == 0x000074, "Member 'GA_Bash_C_GetOwnerAnimBPs::CallFunc_Array_Add_ReturnValue' has a wrong offset!");

// Function GA_Bash.GA_Bash_C.GetOwnersBlockingVolume
// 0x0060 (0x0060 - 0x0000)
struct GA_Bash_C_GetOwnersBlockingVolume final
{
public:
	class ABP_BlockingVolume_C*                   BlockingVolume;                                    // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetAvatarActorFromActorInfo_ReturnValue;  // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetAvatarActorFromActorInfo_ReturnValue_1; // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAbilitySystemComponent*                CallFunc_GetAbilitySystemComponent_ReturnValue;    // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UAbilitySystemComponent*                CallFunc_GetAbilitySystemComponent_ReturnValue_1;  // 0x0020(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TArray<struct FGameplayAbilitySpecHandle>     CallFunc_FindAllAbilitiesWithTags_OutAbilityHandles; // 0x0028(0x0010)(ReferenceParm)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x3];                                       // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayAbilitySpecHandle             CallFunc_Array_Get_Item;                           // 0x003C(0x0004)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetGameplayAbilityFromSpecHandle_bIsInstance; // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	const class UGameplayAbility*                 CallFunc_GetGameplayAbilityFromSpecHandle_ReturnValue; // 0x0048(0x0008)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UGA_Block_C*                            K2Node_DynamicCast_AsGA_Block;                     // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_Bash_C_GetOwnersBlockingVolume) == 0x000008, "Wrong alignment on GA_Bash_C_GetOwnersBlockingVolume");
static_assert(sizeof(GA_Bash_C_GetOwnersBlockingVolume) == 0x000060, "Wrong size on GA_Bash_C_GetOwnersBlockingVolume");
static_assert(offsetof(GA_Bash_C_GetOwnersBlockingVolume, BlockingVolume) == 0x000000, "Member 'GA_Bash_C_GetOwnersBlockingVolume::BlockingVolume' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_GetOwnersBlockingVolume, CallFunc_GetAvatarActorFromActorInfo_ReturnValue) == 0x000008, "Member 'GA_Bash_C_GetOwnersBlockingVolume::CallFunc_GetAvatarActorFromActorInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_GetOwnersBlockingVolume, CallFunc_GetAvatarActorFromActorInfo_ReturnValue_1) == 0x000010, "Member 'GA_Bash_C_GetOwnersBlockingVolume::CallFunc_GetAvatarActorFromActorInfo_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_GetOwnersBlockingVolume, CallFunc_GetAbilitySystemComponent_ReturnValue) == 0x000018, "Member 'GA_Bash_C_GetOwnersBlockingVolume::CallFunc_GetAbilitySystemComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_GetOwnersBlockingVolume, CallFunc_GetAbilitySystemComponent_ReturnValue_1) == 0x000020, "Member 'GA_Bash_C_GetOwnersBlockingVolume::CallFunc_GetAbilitySystemComponent_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_GetOwnersBlockingVolume, CallFunc_FindAllAbilitiesWithTags_OutAbilityHandles) == 0x000028, "Member 'GA_Bash_C_GetOwnersBlockingVolume::CallFunc_FindAllAbilitiesWithTags_OutAbilityHandles' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_GetOwnersBlockingVolume, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000038, "Member 'GA_Bash_C_GetOwnersBlockingVolume::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_GetOwnersBlockingVolume, CallFunc_Array_Get_Item) == 0x00003C, "Member 'GA_Bash_C_GetOwnersBlockingVolume::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_GetOwnersBlockingVolume, CallFunc_GetGameplayAbilityFromSpecHandle_bIsInstance) == 0x000040, "Member 'GA_Bash_C_GetOwnersBlockingVolume::CallFunc_GetGameplayAbilityFromSpecHandle_bIsInstance' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_GetOwnersBlockingVolume, CallFunc_GetGameplayAbilityFromSpecHandle_ReturnValue) == 0x000048, "Member 'GA_Bash_C_GetOwnersBlockingVolume::CallFunc_GetGameplayAbilityFromSpecHandle_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_GetOwnersBlockingVolume, K2Node_DynamicCast_AsGA_Block) == 0x000050, "Member 'GA_Bash_C_GetOwnersBlockingVolume::K2Node_DynamicCast_AsGA_Block' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_GetOwnersBlockingVolume, K2Node_DynamicCast_bSuccess) == 0x000058, "Member 'GA_Bash_C_GetOwnersBlockingVolume::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function GA_Bash.GA_Bash_C.GetPercentageCharged
// 0x0038 (0x0038 - 0x0000)
struct GA_Bash_C_GetPercentageCharged final
{
public:
	double                                        Percentage;                                        // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetChargedTime_ReturnValue;               // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UItemInstance*                          CallFunc_GetAssociatedItem_ReturnValue;            // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_CalculateChargeUsingTime_Charge;          // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetTagStackCount_ReturnValue;             // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_Bash_C_GetPercentageCharged) == 0x000008, "Wrong alignment on GA_Bash_C_GetPercentageCharged");
static_assert(sizeof(GA_Bash_C_GetPercentageCharged) == 0x000038, "Wrong size on GA_Bash_C_GetPercentageCharged");
static_assert(offsetof(GA_Bash_C_GetPercentageCharged, Percentage) == 0x000000, "Member 'GA_Bash_C_GetPercentageCharged::Percentage' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_GetPercentageCharged, CallFunc_GetChargedTime_ReturnValue) == 0x000008, "Member 'GA_Bash_C_GetPercentageCharged::CallFunc_GetChargedTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_GetPercentageCharged, CallFunc_GetAssociatedItem_ReturnValue) == 0x000010, "Member 'GA_Bash_C_GetPercentageCharged::CallFunc_GetAssociatedItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_GetPercentageCharged, CallFunc_CalculateChargeUsingTime_Charge) == 0x000018, "Member 'GA_Bash_C_GetPercentageCharged::CallFunc_CalculateChargeUsingTime_Charge' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_GetPercentageCharged, CallFunc_GetTagStackCount_ReturnValue) == 0x000020, "Member 'GA_Bash_C_GetPercentageCharged::CallFunc_GetTagStackCount_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_GetPercentageCharged, CallFunc_Conv_IntToDouble_ReturnValue) == 0x000028, "Member 'GA_Bash_C_GetPercentageCharged::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_GetPercentageCharged, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000030, "Member 'GA_Bash_C_GetPercentageCharged::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");

// Function GA_Bash.GA_Bash_C.GetPlayMaterialLayerSound
// 0x0001 (0x0001 - 0x0000)
struct GA_Bash_C_GetPlayMaterialLayerSound final
{
public:
	bool                                          Return;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_Bash_C_GetPlayMaterialLayerSound) == 0x000001, "Wrong alignment on GA_Bash_C_GetPlayMaterialLayerSound");
static_assert(sizeof(GA_Bash_C_GetPlayMaterialLayerSound) == 0x000001, "Wrong size on GA_Bash_C_GetPlayMaterialLayerSound");
static_assert(offsetof(GA_Bash_C_GetPlayMaterialLayerSound, Return) == 0x000000, "Member 'GA_Bash_C_GetPlayMaterialLayerSound::Return' has a wrong offset!");

// Function GA_Bash.GA_Bash_C.GetSpawnedActor
// 0x0130 (0x0130 - 0x0000)
struct GA_Bash_C_GetSpawnedActor final
{
public:
	class AActor*                                 Return;                                            // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UEquipmentInstance*                     CallFunc_GetAssociatedEquipment_ReturnValue;       // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBP_EquipmentInstance_C*                K2Node_DynamicCast_AsBP_Equipment_Instance;        // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FSpawnedActorData>              CallFunc_GetSpawnedActors_ReturnValue;             // 0x0020(0x0010)(ReferenceParm)
	struct FSpawnedActorData                      CallFunc_Array_Get_Item;                           // 0x0030(0x0100)(NoDestructor)
};
static_assert(alignof(GA_Bash_C_GetSpawnedActor) == 0x000010, "Wrong alignment on GA_Bash_C_GetSpawnedActor");
static_assert(sizeof(GA_Bash_C_GetSpawnedActor) == 0x000130, "Wrong size on GA_Bash_C_GetSpawnedActor");
static_assert(offsetof(GA_Bash_C_GetSpawnedActor, Return) == 0x000000, "Member 'GA_Bash_C_GetSpawnedActor::Return' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_GetSpawnedActor, CallFunc_GetAssociatedEquipment_ReturnValue) == 0x000008, "Member 'GA_Bash_C_GetSpawnedActor::CallFunc_GetAssociatedEquipment_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_GetSpawnedActor, K2Node_DynamicCast_AsBP_Equipment_Instance) == 0x000010, "Member 'GA_Bash_C_GetSpawnedActor::K2Node_DynamicCast_AsBP_Equipment_Instance' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_GetSpawnedActor, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'GA_Bash_C_GetSpawnedActor::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_GetSpawnedActor, CallFunc_GetSpawnedActors_ReturnValue) == 0x000020, "Member 'GA_Bash_C_GetSpawnedActor::CallFunc_GetSpawnedActors_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_GetSpawnedActor, CallFunc_Array_Get_Item) == 0x000030, "Member 'GA_Bash_C_GetSpawnedActor::CallFunc_Array_Get_Item' has a wrong offset!");

// Function GA_Bash.GA_Bash_C.GetTeamFromActor
// 0x0028 (0x0028 - 0x0000)
struct GA_Bash_C_GetTeamFromActor final
{
public:
	class UObject*                                Actor;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          TeamFound;                                         // 0x0009(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Temp_byte_Variable;                                // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B[0x5];                                        // 0x000B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class ITeamableInterface>    K2Node_DynamicCast_AsTeamable_Interface;           // 0x0010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetTeamID_ReturnValue;                    // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_Bash_C_GetTeamFromActor) == 0x000008, "Wrong alignment on GA_Bash_C_GetTeamFromActor");
static_assert(sizeof(GA_Bash_C_GetTeamFromActor) == 0x000028, "Wrong size on GA_Bash_C_GetTeamFromActor");
static_assert(offsetof(GA_Bash_C_GetTeamFromActor, Actor) == 0x000000, "Member 'GA_Bash_C_GetTeamFromActor::Actor' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_GetTeamFromActor, ReturnValue) == 0x000008, "Member 'GA_Bash_C_GetTeamFromActor::ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_GetTeamFromActor, TeamFound) == 0x000009, "Member 'GA_Bash_C_GetTeamFromActor::TeamFound' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_GetTeamFromActor, Temp_byte_Variable) == 0x00000A, "Member 'GA_Bash_C_GetTeamFromActor::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_GetTeamFromActor, K2Node_DynamicCast_AsTeamable_Interface) == 0x000010, "Member 'GA_Bash_C_GetTeamFromActor::K2Node_DynamicCast_AsTeamable_Interface' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_GetTeamFromActor, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'GA_Bash_C_GetTeamFromActor::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_GetTeamFromActor, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000021, "Member 'GA_Bash_C_GetTeamFromActor::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_GetTeamFromActor, CallFunc_GetTeamID_ReturnValue) == 0x000022, "Member 'GA_Bash_C_GetTeamFromActor::CallFunc_GetTeamID_ReturnValue' has a wrong offset!");

// Function GA_Bash.GA_Bash_C.HasMatchEnded
// 0x0018 (0x0018 - 0x0000)
struct GA_Bash_C_HasMatchEnded final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasMatchEnded_ReturnValue;                // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_Bash_C_HasMatchEnded) == 0x000008, "Wrong alignment on GA_Bash_C_HasMatchEnded");
static_assert(sizeof(GA_Bash_C_HasMatchEnded) == 0x000018, "Wrong size on GA_Bash_C_HasMatchEnded");
static_assert(offsetof(GA_Bash_C_HasMatchEnded, ReturnValue) == 0x000000, "Member 'GA_Bash_C_HasMatchEnded::ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_HasMatchEnded, CallFunc_GetGameState_ReturnValue) == 0x000008, "Member 'GA_Bash_C_HasMatchEnded::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_HasMatchEnded, CallFunc_HasMatchEnded_ReturnValue) == 0x000010, "Member 'GA_Bash_C_HasMatchEnded::CallFunc_HasMatchEnded_ReturnValue' has a wrong offset!");

// Function GA_Bash.GA_Bash_C.Hit Actor
// 0x0100 (0x0100 - 0x0000)
struct GA_Bash_C_Hit_Actor final
{
public:
	struct FHitResult                             HitResult;                                         // 0x0000(0x00F8)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class UAbilitySystemComponentIW*              HitActorASC;                                       // 0x00F8(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_Bash_C_Hit_Actor) == 0x000008, "Wrong alignment on GA_Bash_C_Hit_Actor");
static_assert(sizeof(GA_Bash_C_Hit_Actor) == 0x000100, "Wrong size on GA_Bash_C_Hit_Actor");
static_assert(offsetof(GA_Bash_C_Hit_Actor, HitResult) == 0x000000, "Member 'GA_Bash_C_Hit_Actor::HitResult' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_Hit_Actor, HitActorASC) == 0x0000F8, "Member 'GA_Bash_C_Hit_Actor::HitActorASC' has a wrong offset!");

// Function GA_Bash.GA_Bash_C.Hit Actor Now
// 0x0268 (0x0268 - 0x0000)
struct GA_Bash_C_Hit_Actor_Now final
{
public:
	struct FHitResult                             Hit;                                               // 0x0000(0x00F8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FVector                                L_OwnerForward;                                    // 0x00F8(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                L_TraceFrom;                                       // 0x0110(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwningActorFromActorInfo_ReturnValue;  // 0x0128(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class II_TraceFrom_C>        K2Node_DynamicCast_AsI_Trace_From;                 // 0x0130(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0140(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_141[0x7];                                      // 0x0141(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetTraceFrom_Location;                    // 0x0148(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_GetTraceFrom_Rotation;                    // 0x0160(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue;             // 0x0178(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x0190(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x0191(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_192[0x2];                                      // 0x0192(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x0194(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x0198(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19C[0x4];                                      // 0x019C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x01A0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x01B8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x01D0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x01E8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0200(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0208(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0210(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0218(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_BoneName;                  // 0x0220(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0228(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x022C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x0230(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_234[0x4];                                      // 0x0234(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x0238(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x0250(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_Bash_C_Hit_Actor_Now) == 0x000008, "Wrong alignment on GA_Bash_C_Hit_Actor_Now");
static_assert(sizeof(GA_Bash_C_Hit_Actor_Now) == 0x000268, "Wrong size on GA_Bash_C_Hit_Actor_Now");
static_assert(offsetof(GA_Bash_C_Hit_Actor_Now, Hit) == 0x000000, "Member 'GA_Bash_C_Hit_Actor_Now::Hit' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_Hit_Actor_Now, L_OwnerForward) == 0x0000F8, "Member 'GA_Bash_C_Hit_Actor_Now::L_OwnerForward' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_Hit_Actor_Now, L_TraceFrom) == 0x000110, "Member 'GA_Bash_C_Hit_Actor_Now::L_TraceFrom' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_Hit_Actor_Now, CallFunc_GetOwningActorFromActorInfo_ReturnValue) == 0x000128, "Member 'GA_Bash_C_Hit_Actor_Now::CallFunc_GetOwningActorFromActorInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_Hit_Actor_Now, K2Node_DynamicCast_AsI_Trace_From) == 0x000130, "Member 'GA_Bash_C_Hit_Actor_Now::K2Node_DynamicCast_AsI_Trace_From' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_Hit_Actor_Now, K2Node_DynamicCast_bSuccess) == 0x000140, "Member 'GA_Bash_C_Hit_Actor_Now::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_Hit_Actor_Now, CallFunc_GetTraceFrom_Location) == 0x000148, "Member 'GA_Bash_C_Hit_Actor_Now::CallFunc_GetTraceFrom_Location' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_Hit_Actor_Now, CallFunc_GetTraceFrom_Rotation) == 0x000160, "Member 'GA_Bash_C_Hit_Actor_Now::CallFunc_GetTraceFrom_Rotation' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_Hit_Actor_Now, CallFunc_GetForwardVector_ReturnValue) == 0x000178, "Member 'GA_Bash_C_Hit_Actor_Now::CallFunc_GetForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_Hit_Actor_Now, CallFunc_BreakHitResult_bBlockingHit) == 0x000190, "Member 'GA_Bash_C_Hit_Actor_Now::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_Hit_Actor_Now, CallFunc_BreakHitResult_bInitialOverlap) == 0x000191, "Member 'GA_Bash_C_Hit_Actor_Now::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_Hit_Actor_Now, CallFunc_BreakHitResult_Time) == 0x000194, "Member 'GA_Bash_C_Hit_Actor_Now::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_Hit_Actor_Now, CallFunc_BreakHitResult_Distance) == 0x000198, "Member 'GA_Bash_C_Hit_Actor_Now::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_Hit_Actor_Now, CallFunc_BreakHitResult_Location) == 0x0001A0, "Member 'GA_Bash_C_Hit_Actor_Now::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_Hit_Actor_Now, CallFunc_BreakHitResult_ImpactPoint) == 0x0001B8, "Member 'GA_Bash_C_Hit_Actor_Now::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_Hit_Actor_Now, CallFunc_BreakHitResult_Normal) == 0x0001D0, "Member 'GA_Bash_C_Hit_Actor_Now::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_Hit_Actor_Now, CallFunc_BreakHitResult_ImpactNormal) == 0x0001E8, "Member 'GA_Bash_C_Hit_Actor_Now::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_Hit_Actor_Now, CallFunc_BreakHitResult_PhysMat) == 0x000200, "Member 'GA_Bash_C_Hit_Actor_Now::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_Hit_Actor_Now, CallFunc_BreakHitResult_HitActor) == 0x000208, "Member 'GA_Bash_C_Hit_Actor_Now::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_Hit_Actor_Now, CallFunc_BreakHitResult_HitComponent) == 0x000210, "Member 'GA_Bash_C_Hit_Actor_Now::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_Hit_Actor_Now, CallFunc_BreakHitResult_HitBoneName) == 0x000218, "Member 'GA_Bash_C_Hit_Actor_Now::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_Hit_Actor_Now, CallFunc_BreakHitResult_BoneName) == 0x000220, "Member 'GA_Bash_C_Hit_Actor_Now::CallFunc_BreakHitResult_BoneName' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_Hit_Actor_Now, CallFunc_BreakHitResult_HitItem) == 0x000228, "Member 'GA_Bash_C_Hit_Actor_Now::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_Hit_Actor_Now, CallFunc_BreakHitResult_ElementIndex) == 0x00022C, "Member 'GA_Bash_C_Hit_Actor_Now::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_Hit_Actor_Now, CallFunc_BreakHitResult_FaceIndex) == 0x000230, "Member 'GA_Bash_C_Hit_Actor_Now::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_Hit_Actor_Now, CallFunc_BreakHitResult_TraceStart) == 0x000238, "Member 'GA_Bash_C_Hit_Actor_Now::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_Hit_Actor_Now, CallFunc_BreakHitResult_TraceEnd) == 0x000250, "Member 'GA_Bash_C_Hit_Actor_Now::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");

// Function GA_Bash.GA_Bash_C.HitNonASCActor
// 0x0120 (0x0120 - 0x0000)
struct GA_Bash_C_HitNonASCActor final
{
public:
	class AActor*                                 HitActor;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             Hit;                                               // 0x0008(0x00F8)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class AActor*                                 CallFunc_GetAvatarActorFromActorInfo_ReturnValue;  // 0x0100(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class II_NonASCActorHitable_C> K2Node_DynamicCast_AsI_Non_ASCActor_Hitable;       // 0x0108(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_Bash_C_HitNonASCActor) == 0x000008, "Wrong alignment on GA_Bash_C_HitNonASCActor");
static_assert(sizeof(GA_Bash_C_HitNonASCActor) == 0x000120, "Wrong size on GA_Bash_C_HitNonASCActor");
static_assert(offsetof(GA_Bash_C_HitNonASCActor, HitActor) == 0x000000, "Member 'GA_Bash_C_HitNonASCActor::HitActor' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_HitNonASCActor, Hit) == 0x000008, "Member 'GA_Bash_C_HitNonASCActor::Hit' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_HitNonASCActor, CallFunc_GetAvatarActorFromActorInfo_ReturnValue) == 0x000100, "Member 'GA_Bash_C_HitNonASCActor::CallFunc_GetAvatarActorFromActorInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_HitNonASCActor, K2Node_DynamicCast_AsI_Non_ASCActor_Hitable) == 0x000108, "Member 'GA_Bash_C_HitNonASCActor::K2Node_DynamicCast_AsI_Non_ASCActor_Hitable' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_HitNonASCActor, K2Node_DynamicCast_bSuccess) == 0x000118, "Member 'GA_Bash_C_HitNonASCActor::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function GA_Bash.GA_Bash_C.HitThisActorAlready
// 0x0018 (0x0018 - 0x0000)
struct GA_Bash_C_HitThisActorAlready final
{
public:
	class AActor*                                 Actor;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_Bash_C_HitThisActorAlready) == 0x000008, "Wrong alignment on GA_Bash_C_HitThisActorAlready");
static_assert(sizeof(GA_Bash_C_HitThisActorAlready) == 0x000018, "Wrong size on GA_Bash_C_HitThisActorAlready");
static_assert(offsetof(GA_Bash_C_HitThisActorAlready, Actor) == 0x000000, "Member 'GA_Bash_C_HitThisActorAlready::Actor' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_HitThisActorAlready, ReturnValue) == 0x000008, "Member 'GA_Bash_C_HitThisActorAlready::ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_HitThisActorAlready, CallFunc_Array_Add_ReturnValue) == 0x00000C, "Member 'GA_Bash_C_HitThisActorAlready::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_HitThisActorAlready, CallFunc_Array_Contains_ReturnValue) == 0x000010, "Member 'GA_Bash_C_HitThisActorAlready::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");

// Function GA_Bash.GA_Bash_C.IsBelowMinimumDurability
// 0x0010 (0x0010 - 0x0000)
struct GA_Bash_C_IsBelowMinimumDurability final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x2];                                        // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetTagStackCount_ReturnValue;             // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetTagStackCount_ReturnValue_1;           // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_Bash_C_IsBelowMinimumDurability) == 0x000004, "Wrong alignment on GA_Bash_C_IsBelowMinimumDurability");
static_assert(sizeof(GA_Bash_C_IsBelowMinimumDurability) == 0x000010, "Wrong size on GA_Bash_C_IsBelowMinimumDurability");
static_assert(offsetof(GA_Bash_C_IsBelowMinimumDurability, ReturnValue) == 0x000000, "Member 'GA_Bash_C_IsBelowMinimumDurability::ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_IsBelowMinimumDurability, CallFunc_IsValid_ReturnValue) == 0x000001, "Member 'GA_Bash_C_IsBelowMinimumDurability::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_IsBelowMinimumDurability, CallFunc_GetTagStackCount_ReturnValue) == 0x000004, "Member 'GA_Bash_C_IsBelowMinimumDurability::CallFunc_GetTagStackCount_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_IsBelowMinimumDurability, CallFunc_GetTagStackCount_ReturnValue_1) == 0x000008, "Member 'GA_Bash_C_IsBelowMinimumDurability::CallFunc_GetTagStackCount_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_IsBelowMinimumDurability, CallFunc_LessEqual_IntInt_ReturnValue) == 0x00000C, "Member 'GA_Bash_C_IsBelowMinimumDurability::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");

// Function GA_Bash.GA_Bash_C.K2_OnEndAbility
// 0x0001 (0x0001 - 0x0000)
struct GA_Bash_C_K2_OnEndAbility final
{
public:
	bool                                          bWasCancelled;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_Bash_C_K2_OnEndAbility) == 0x000001, "Wrong alignment on GA_Bash_C_K2_OnEndAbility");
static_assert(sizeof(GA_Bash_C_K2_OnEndAbility) == 0x000001, "Wrong size on GA_Bash_C_K2_OnEndAbility");
static_assert(offsetof(GA_Bash_C_K2_OnEndAbility, bWasCancelled) == 0x000000, "Member 'GA_Bash_C_K2_OnEndAbility::bWasCancelled' has a wrong offset!");

// Function GA_Bash.GA_Bash_C.Knockback
// 0x0028 (0x0028 - 0x0000)
struct GA_Bash_C_Knockback final
{
public:
	struct FVector                                ForwardVector;                                     // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                Target;                                            // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          TargetIsPlayer;                                    // 0x0020(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_Bash_C_Knockback) == 0x000008, "Wrong alignment on GA_Bash_C_Knockback");
static_assert(sizeof(GA_Bash_C_Knockback) == 0x000028, "Wrong size on GA_Bash_C_Knockback");
static_assert(offsetof(GA_Bash_C_Knockback, ForwardVector) == 0x000000, "Member 'GA_Bash_C_Knockback::ForwardVector' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_Knockback, Target) == 0x000018, "Member 'GA_Bash_C_Knockback::Target' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_Knockback, TargetIsPlayer) == 0x000020, "Member 'GA_Bash_C_Knockback::TargetIsPlayer' has a wrong offset!");

// Function GA_Bash.GA_Bash_C.KnockBackTarget
// 0x00E8 (0x00E8 - 0x0000)
struct GA_Bash_C_KnockBackTarget final
{
public:
	struct FVector                                ForwardVector;                                     // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Force;                                             // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                Target;                                            // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          TargetIsPlayer;                                    // 0x0028(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class II_Knockbackable_C>    K2Node_DynamicCast_AsI_Knockbackable;              // 0x0030(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Conv_DoubleToVector_ReturnValue;          // 0x0048(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue;        // 0x0068(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetPercentageCharged_Percentage;          // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Abs_ReturnValue;                          // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B1[0x7];                                       // 0x00B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_Select_Default;                             // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x00C0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Knockback_Void;                           // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D9[0x7];                                       // 0x00D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Conv_DoubleToVector_InDouble_ImplicitCast; // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_Bash_C_KnockBackTarget) == 0x000008, "Wrong alignment on GA_Bash_C_KnockBackTarget");
static_assert(sizeof(GA_Bash_C_KnockBackTarget) == 0x0000E8, "Wrong size on GA_Bash_C_KnockBackTarget");
static_assert(offsetof(GA_Bash_C_KnockBackTarget, ForwardVector) == 0x000000, "Member 'GA_Bash_C_KnockBackTarget::ForwardVector' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_KnockBackTarget, Force) == 0x000018, "Member 'GA_Bash_C_KnockBackTarget::Force' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_KnockBackTarget, Target) == 0x000020, "Member 'GA_Bash_C_KnockBackTarget::Target' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_KnockBackTarget, TargetIsPlayer) == 0x000028, "Member 'GA_Bash_C_KnockBackTarget::TargetIsPlayer' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_KnockBackTarget, K2Node_DynamicCast_AsI_Knockbackable) == 0x000030, "Member 'GA_Bash_C_KnockBackTarget::K2Node_DynamicCast_AsI_Knockbackable' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_KnockBackTarget, K2Node_DynamicCast_bSuccess) == 0x000040, "Member 'GA_Bash_C_KnockBackTarget::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_KnockBackTarget, CallFunc_Conv_DoubleToVector_ReturnValue) == 0x000048, "Member 'GA_Bash_C_KnockBackTarget::CallFunc_Conv_DoubleToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_KnockBackTarget, Temp_bool_Variable) == 0x000060, "Member 'GA_Bash_C_KnockBackTarget::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_KnockBackTarget, CallFunc_Multiply_VectorVector_ReturnValue) == 0x000068, "Member 'GA_Bash_C_KnockBackTarget::CallFunc_Multiply_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_KnockBackTarget, CallFunc_GetPercentageCharged_Percentage) == 0x000080, "Member 'GA_Bash_C_KnockBackTarget::CallFunc_GetPercentageCharged_Percentage' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_KnockBackTarget, CallFunc_BreakVector_X) == 0x000088, "Member 'GA_Bash_C_KnockBackTarget::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_KnockBackTarget, CallFunc_BreakVector_Y) == 0x000090, "Member 'GA_Bash_C_KnockBackTarget::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_KnockBackTarget, CallFunc_BreakVector_Z) == 0x000098, "Member 'GA_Bash_C_KnockBackTarget::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_KnockBackTarget, CallFunc_Abs_ReturnValue) == 0x0000A0, "Member 'GA_Bash_C_KnockBackTarget::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_KnockBackTarget, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x0000A8, "Member 'GA_Bash_C_KnockBackTarget::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_KnockBackTarget, CallFunc_BooleanAND_ReturnValue) == 0x0000B0, "Member 'GA_Bash_C_KnockBackTarget::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_KnockBackTarget, K2Node_Select_Default) == 0x0000B8, "Member 'GA_Bash_C_KnockBackTarget::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_KnockBackTarget, CallFunc_MakeVector_ReturnValue) == 0x0000C0, "Member 'GA_Bash_C_KnockBackTarget::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_KnockBackTarget, CallFunc_Knockback_Void) == 0x0000D8, "Member 'GA_Bash_C_KnockBackTarget::CallFunc_Knockback_Void' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_KnockBackTarget, CallFunc_Conv_DoubleToVector_InDouble_ImplicitCast) == 0x0000E0, "Member 'GA_Bash_C_KnockBackTarget::CallFunc_Conv_DoubleToVector_InDouble_ImplicitCast' has a wrong offset!");

// Function GA_Bash.GA_Bash_C.LocalBlockedCosmetics
// 0x0058 (0x0058 - 0x0000)
struct GA_Bash_C_LocalBlockedCosmetics final
{
public:
	class UObject*                                SpawnedActor;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class II_Soundable_C>        K2Node_DynamicCast_AsI_Soundable;                  // 0x0010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimInstance*                          CallFunc_Array_Get_Item;                           // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class II_CharacterAnimation_C> K2Node_DynamicCast_AsI_Character_Animation;        // 0x0038(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49[0x3];                                       // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_Bash_C_LocalBlockedCosmetics) == 0x000008, "Wrong alignment on GA_Bash_C_LocalBlockedCosmetics");
static_assert(sizeof(GA_Bash_C_LocalBlockedCosmetics) == 0x000058, "Wrong size on GA_Bash_C_LocalBlockedCosmetics");
static_assert(offsetof(GA_Bash_C_LocalBlockedCosmetics, SpawnedActor) == 0x000000, "Member 'GA_Bash_C_LocalBlockedCosmetics::SpawnedActor' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_LocalBlockedCosmetics, Temp_int_Variable) == 0x000008, "Member 'GA_Bash_C_LocalBlockedCosmetics::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_LocalBlockedCosmetics, K2Node_DynamicCast_AsI_Soundable) == 0x000010, "Member 'GA_Bash_C_LocalBlockedCosmetics::K2Node_DynamicCast_AsI_Soundable' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_LocalBlockedCosmetics, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'GA_Bash_C_LocalBlockedCosmetics::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_LocalBlockedCosmetics, CallFunc_Add_IntInt_ReturnValue) == 0x000024, "Member 'GA_Bash_C_LocalBlockedCosmetics::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_LocalBlockedCosmetics, CallFunc_IsValid_ReturnValue) == 0x000028, "Member 'GA_Bash_C_LocalBlockedCosmetics::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_LocalBlockedCosmetics, CallFunc_Array_Get_Item) == 0x000030, "Member 'GA_Bash_C_LocalBlockedCosmetics::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_LocalBlockedCosmetics, K2Node_DynamicCast_AsI_Character_Animation) == 0x000038, "Member 'GA_Bash_C_LocalBlockedCosmetics::K2Node_DynamicCast_AsI_Character_Animation' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_LocalBlockedCosmetics, K2Node_DynamicCast_bSuccess_1) == 0x000048, "Member 'GA_Bash_C_LocalBlockedCosmetics::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_LocalBlockedCosmetics, CallFunc_Array_Length_ReturnValue) == 0x00004C, "Member 'GA_Bash_C_LocalBlockedCosmetics::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_LocalBlockedCosmetics, CallFunc_Less_IntInt_ReturnValue) == 0x000050, "Member 'GA_Bash_C_LocalBlockedCosmetics::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function GA_Bash.GA_Bash_C.MontageNotify
// 0x0008 (0x0008 - 0x0000)
struct GA_Bash_C_MontageNotify final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_Bash_C_MontageNotify) == 0x000004, "Wrong alignment on GA_Bash_C_MontageNotify");
static_assert(sizeof(GA_Bash_C_MontageNotify) == 0x000008, "Wrong size on GA_Bash_C_MontageNotify");
static_assert(offsetof(GA_Bash_C_MontageNotify, NotifyName) == 0x000000, "Member 'GA_Bash_C_MontageNotify::NotifyName' has a wrong offset!");

// Function GA_Bash.GA_Bash_C.Play Compatible Particle
// 0x0050 (0x0050 - 0x0000)
struct GA_Bash_C_Play_Compatible_Particle final
{
public:
	struct FVector                                Location;                                          // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Normal;                                            // 0x0018(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotFromX_ReturnValue;                 // 0x0030(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UNiagaraComponent*                      CallFunc_SpawnSystemAtLocation_ReturnValue;        // 0x0048(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_Bash_C_Play_Compatible_Particle) == 0x000008, "Wrong alignment on GA_Bash_C_Play_Compatible_Particle");
static_assert(sizeof(GA_Bash_C_Play_Compatible_Particle) == 0x000050, "Wrong size on GA_Bash_C_Play_Compatible_Particle");
static_assert(offsetof(GA_Bash_C_Play_Compatible_Particle, Location) == 0x000000, "Member 'GA_Bash_C_Play_Compatible_Particle::Location' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_Play_Compatible_Particle, Normal) == 0x000018, "Member 'GA_Bash_C_Play_Compatible_Particle::Normal' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_Play_Compatible_Particle, CallFunc_MakeRotFromX_ReturnValue) == 0x000030, "Member 'GA_Bash_C_Play_Compatible_Particle::CallFunc_MakeRotFromX_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_Play_Compatible_Particle, CallFunc_SpawnSystemAtLocation_ReturnValue) == 0x000048, "Member 'GA_Bash_C_Play_Compatible_Particle::CallFunc_SpawnSystemAtLocation_ReturnValue' has a wrong offset!");

// Function GA_Bash.GA_Bash_C.PlayPhysMatParticle
// 0x0108 (0x0108 - 0x0000)
struct GA_Bash_C_PlayPhysMatParticle final
{
public:
	struct FVector                                Location;                                          // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Normal;                                            // 0x0018(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      PhysicalMat;                                       // 0x0030(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	EPhysicalSurface                              Temp_byte_Variable;                                // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_MakeRotFromZ_ReturnValue;                 // 0x0040(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UNiagaraSystem*                         Temp_object_Variable;                              // 0x0058(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UNiagaraSystem*                         Temp_object_Variable_1;                            // 0x0060(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UNiagaraSystem*                         Temp_object_Variable_2;                            // 0x0068(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UNiagaraSystem*                         Temp_object_Variable_3;                            // 0x0070(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UNiagaraSystem*                         Temp_object_Variable_4;                            // 0x0078(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UNiagaraSystem*                         Temp_object_Variable_5;                            // 0x0080(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UNiagaraSystem*                         Temp_object_Variable_6;                            // 0x0088(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UNiagaraSystem*                         Temp_object_Variable_7;                            // 0x0090(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UNiagaraSystem*                         Temp_object_Variable_8;                            // 0x0098(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UNiagaraSystem*                         Temp_object_Variable_9;                            // 0x00A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UNiagaraSystem*                         Temp_object_Variable_10;                           // 0x00A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UNiagaraSystem*                         Temp_object_Variable_11;                           // 0x00B0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UNiagaraSystem*                         Temp_object_Variable_12;                           // 0x00B8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UNiagaraSystem*                         Temp_object_Variable_13;                           // 0x00C0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UNiagaraSystem*                         Temp_object_Variable_14;                           // 0x00C8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UNiagaraSystem*                         Temp_object_Variable_15;                           // 0x00D0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UNiagaraSystem*                         Temp_object_Variable_16;                           // 0x00D8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UNiagaraSystem*                         Temp_object_Variable_17;                           // 0x00E0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UNiagaraSystem*                         Temp_object_Variable_18;                           // 0x00E8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetPlayMaterialLayerSound_Return;         // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F1[0x7];                                       // 0x00F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UNiagaraSystem*                         K2Node_Select_Default;                             // 0x00F8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UNiagaraComponent*                      CallFunc_SpawnSystemAtLocation_ReturnValue;        // 0x0100(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_Bash_C_PlayPhysMatParticle) == 0x000008, "Wrong alignment on GA_Bash_C_PlayPhysMatParticle");
static_assert(sizeof(GA_Bash_C_PlayPhysMatParticle) == 0x000108, "Wrong size on GA_Bash_C_PlayPhysMatParticle");
static_assert(offsetof(GA_Bash_C_PlayPhysMatParticle, Location) == 0x000000, "Member 'GA_Bash_C_PlayPhysMatParticle::Location' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_PlayPhysMatParticle, Normal) == 0x000018, "Member 'GA_Bash_C_PlayPhysMatParticle::Normal' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_PlayPhysMatParticle, PhysicalMat) == 0x000030, "Member 'GA_Bash_C_PlayPhysMatParticle::PhysicalMat' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_PlayPhysMatParticle, Temp_byte_Variable) == 0x000038, "Member 'GA_Bash_C_PlayPhysMatParticle::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_PlayPhysMatParticle, CallFunc_MakeRotFromZ_ReturnValue) == 0x000040, "Member 'GA_Bash_C_PlayPhysMatParticle::CallFunc_MakeRotFromZ_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_PlayPhysMatParticle, Temp_object_Variable) == 0x000058, "Member 'GA_Bash_C_PlayPhysMatParticle::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_PlayPhysMatParticle, Temp_object_Variable_1) == 0x000060, "Member 'GA_Bash_C_PlayPhysMatParticle::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_PlayPhysMatParticle, Temp_object_Variable_2) == 0x000068, "Member 'GA_Bash_C_PlayPhysMatParticle::Temp_object_Variable_2' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_PlayPhysMatParticle, Temp_object_Variable_3) == 0x000070, "Member 'GA_Bash_C_PlayPhysMatParticle::Temp_object_Variable_3' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_PlayPhysMatParticle, Temp_object_Variable_4) == 0x000078, "Member 'GA_Bash_C_PlayPhysMatParticle::Temp_object_Variable_4' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_PlayPhysMatParticle, Temp_object_Variable_5) == 0x000080, "Member 'GA_Bash_C_PlayPhysMatParticle::Temp_object_Variable_5' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_PlayPhysMatParticle, Temp_object_Variable_6) == 0x000088, "Member 'GA_Bash_C_PlayPhysMatParticle::Temp_object_Variable_6' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_PlayPhysMatParticle, Temp_object_Variable_7) == 0x000090, "Member 'GA_Bash_C_PlayPhysMatParticle::Temp_object_Variable_7' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_PlayPhysMatParticle, Temp_object_Variable_8) == 0x000098, "Member 'GA_Bash_C_PlayPhysMatParticle::Temp_object_Variable_8' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_PlayPhysMatParticle, Temp_object_Variable_9) == 0x0000A0, "Member 'GA_Bash_C_PlayPhysMatParticle::Temp_object_Variable_9' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_PlayPhysMatParticle, Temp_object_Variable_10) == 0x0000A8, "Member 'GA_Bash_C_PlayPhysMatParticle::Temp_object_Variable_10' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_PlayPhysMatParticle, Temp_object_Variable_11) == 0x0000B0, "Member 'GA_Bash_C_PlayPhysMatParticle::Temp_object_Variable_11' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_PlayPhysMatParticle, Temp_object_Variable_12) == 0x0000B8, "Member 'GA_Bash_C_PlayPhysMatParticle::Temp_object_Variable_12' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_PlayPhysMatParticle, Temp_object_Variable_13) == 0x0000C0, "Member 'GA_Bash_C_PlayPhysMatParticle::Temp_object_Variable_13' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_PlayPhysMatParticle, Temp_object_Variable_14) == 0x0000C8, "Member 'GA_Bash_C_PlayPhysMatParticle::Temp_object_Variable_14' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_PlayPhysMatParticle, Temp_object_Variable_15) == 0x0000D0, "Member 'GA_Bash_C_PlayPhysMatParticle::Temp_object_Variable_15' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_PlayPhysMatParticle, Temp_object_Variable_16) == 0x0000D8, "Member 'GA_Bash_C_PlayPhysMatParticle::Temp_object_Variable_16' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_PlayPhysMatParticle, Temp_object_Variable_17) == 0x0000E0, "Member 'GA_Bash_C_PlayPhysMatParticle::Temp_object_Variable_17' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_PlayPhysMatParticle, Temp_object_Variable_18) == 0x0000E8, "Member 'GA_Bash_C_PlayPhysMatParticle::Temp_object_Variable_18' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_PlayPhysMatParticle, CallFunc_GetPlayMaterialLayerSound_Return) == 0x0000F0, "Member 'GA_Bash_C_PlayPhysMatParticle::CallFunc_GetPlayMaterialLayerSound_Return' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_PlayPhysMatParticle, K2Node_Select_Default) == 0x0000F8, "Member 'GA_Bash_C_PlayPhysMatParticle::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_PlayPhysMatParticle, CallFunc_SpawnSystemAtLocation_ReturnValue) == 0x000100, "Member 'GA_Bash_C_PlayPhysMatParticle::CallFunc_SpawnSystemAtLocation_ReturnValue' has a wrong offset!");

// Function GA_Bash.GA_Bash_C.Try Spawn Hit Decal
// 0x02D8 (0x02D8 - 0x0000)
struct GA_Bash_C_Try_Spawn_Hit_Decal final
{
public:
	struct FHitResult                             Hit;                                               // 0x0000(0x00F8)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x00F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_FA[0x2];                                       // 0x00FA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x00FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x0100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_104[0x4];                                      // 0x0104(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x0108(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x0120(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x0138(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x0150(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0168(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0170(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0178(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0180(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_BoneName;                  // 0x0188(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0190(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x0194(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x0198(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19C[0x4];                                      // 0x019C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x01A0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x01B8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetAvatarActorFromActorInfo_ReturnValue;  // 0x01D0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLocallyControlled_ReturnValue;          // 0x01D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D9[0x7];                                      // 0x01D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayCueParameters                 CallFunc_MakeGameplayCueParameters_ReturnValue;    // 0x01E0(0x00D8)(ContainsInstancedReference)
	class AActor*                                 CallFunc_GetOwningActorFromActorInfo_ReturnValue;  // 0x02B8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAbilitySystemComponent*                CallFunc_GetAbilitySystemComponent_ReturnValue;    // 0x02C0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UAbilitySystemComponentIW*              K2Node_DynamicCast_AsAbility_System_Component_IW;  // 0x02C8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x02D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_Bash_C_Try_Spawn_Hit_Decal) == 0x000008, "Wrong alignment on GA_Bash_C_Try_Spawn_Hit_Decal");
static_assert(sizeof(GA_Bash_C_Try_Spawn_Hit_Decal) == 0x0002D8, "Wrong size on GA_Bash_C_Try_Spawn_Hit_Decal");
static_assert(offsetof(GA_Bash_C_Try_Spawn_Hit_Decal, Hit) == 0x000000, "Member 'GA_Bash_C_Try_Spawn_Hit_Decal::Hit' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_Try_Spawn_Hit_Decal, CallFunc_BreakHitResult_bBlockingHit) == 0x0000F8, "Member 'GA_Bash_C_Try_Spawn_Hit_Decal::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_Try_Spawn_Hit_Decal, CallFunc_BreakHitResult_bInitialOverlap) == 0x0000F9, "Member 'GA_Bash_C_Try_Spawn_Hit_Decal::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_Try_Spawn_Hit_Decal, CallFunc_BreakHitResult_Time) == 0x0000FC, "Member 'GA_Bash_C_Try_Spawn_Hit_Decal::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_Try_Spawn_Hit_Decal, CallFunc_BreakHitResult_Distance) == 0x000100, "Member 'GA_Bash_C_Try_Spawn_Hit_Decal::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_Try_Spawn_Hit_Decal, CallFunc_BreakHitResult_Location) == 0x000108, "Member 'GA_Bash_C_Try_Spawn_Hit_Decal::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_Try_Spawn_Hit_Decal, CallFunc_BreakHitResult_ImpactPoint) == 0x000120, "Member 'GA_Bash_C_Try_Spawn_Hit_Decal::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_Try_Spawn_Hit_Decal, CallFunc_BreakHitResult_Normal) == 0x000138, "Member 'GA_Bash_C_Try_Spawn_Hit_Decal::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_Try_Spawn_Hit_Decal, CallFunc_BreakHitResult_ImpactNormal) == 0x000150, "Member 'GA_Bash_C_Try_Spawn_Hit_Decal::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_Try_Spawn_Hit_Decal, CallFunc_BreakHitResult_PhysMat) == 0x000168, "Member 'GA_Bash_C_Try_Spawn_Hit_Decal::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_Try_Spawn_Hit_Decal, CallFunc_BreakHitResult_HitActor) == 0x000170, "Member 'GA_Bash_C_Try_Spawn_Hit_Decal::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_Try_Spawn_Hit_Decal, CallFunc_BreakHitResult_HitComponent) == 0x000178, "Member 'GA_Bash_C_Try_Spawn_Hit_Decal::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_Try_Spawn_Hit_Decal, CallFunc_BreakHitResult_HitBoneName) == 0x000180, "Member 'GA_Bash_C_Try_Spawn_Hit_Decal::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_Try_Spawn_Hit_Decal, CallFunc_BreakHitResult_BoneName) == 0x000188, "Member 'GA_Bash_C_Try_Spawn_Hit_Decal::CallFunc_BreakHitResult_BoneName' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_Try_Spawn_Hit_Decal, CallFunc_BreakHitResult_HitItem) == 0x000190, "Member 'GA_Bash_C_Try_Spawn_Hit_Decal::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_Try_Spawn_Hit_Decal, CallFunc_BreakHitResult_ElementIndex) == 0x000194, "Member 'GA_Bash_C_Try_Spawn_Hit_Decal::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_Try_Spawn_Hit_Decal, CallFunc_BreakHitResult_FaceIndex) == 0x000198, "Member 'GA_Bash_C_Try_Spawn_Hit_Decal::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_Try_Spawn_Hit_Decal, CallFunc_BreakHitResult_TraceStart) == 0x0001A0, "Member 'GA_Bash_C_Try_Spawn_Hit_Decal::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_Try_Spawn_Hit_Decal, CallFunc_BreakHitResult_TraceEnd) == 0x0001B8, "Member 'GA_Bash_C_Try_Spawn_Hit_Decal::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_Try_Spawn_Hit_Decal, CallFunc_GetAvatarActorFromActorInfo_ReturnValue) == 0x0001D0, "Member 'GA_Bash_C_Try_Spawn_Hit_Decal::CallFunc_GetAvatarActorFromActorInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_Try_Spawn_Hit_Decal, CallFunc_IsLocallyControlled_ReturnValue) == 0x0001D8, "Member 'GA_Bash_C_Try_Spawn_Hit_Decal::CallFunc_IsLocallyControlled_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_Try_Spawn_Hit_Decal, CallFunc_MakeGameplayCueParameters_ReturnValue) == 0x0001E0, "Member 'GA_Bash_C_Try_Spawn_Hit_Decal::CallFunc_MakeGameplayCueParameters_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_Try_Spawn_Hit_Decal, CallFunc_GetOwningActorFromActorInfo_ReturnValue) == 0x0002B8, "Member 'GA_Bash_C_Try_Spawn_Hit_Decal::CallFunc_GetOwningActorFromActorInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_Try_Spawn_Hit_Decal, CallFunc_GetAbilitySystemComponent_ReturnValue) == 0x0002C0, "Member 'GA_Bash_C_Try_Spawn_Hit_Decal::CallFunc_GetAbilitySystemComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_Try_Spawn_Hit_Decal, K2Node_DynamicCast_AsAbility_System_Component_IW) == 0x0002C8, "Member 'GA_Bash_C_Try_Spawn_Hit_Decal::K2Node_DynamicCast_AsAbility_System_Component_IW' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_Try_Spawn_Hit_Decal, K2Node_DynamicCast_bSuccess) == 0x0002D0, "Member 'GA_Bash_C_Try_Spawn_Hit_Decal::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function GA_Bash.GA_Bash_C.TryCallShieldBlocked
// 0x0208 (0x0208 - 0x0000)
struct GA_Bash_C_TryCallShieldBlocked final
{
public:
	struct FHitResult                             HitResult;                                         // 0x0000(0x00F8)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class UAbilitySystemComponentIW*              HitActorASC;                                       // 0x00F8(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x0101(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_102[0x2];                                      // 0x0102(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x0104(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x0108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_10C[0x4];                                      // 0x010C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x0110(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x0128(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x0140(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x0158(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0170(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0178(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0180(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0188(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_BoneName;                  // 0x0190(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0198(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x019C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x01A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A4[0x4];                                      // 0x01A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x01A8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x01C0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetDamageToShield_Damage;                 // 0x01D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1DC[0x4];                                      // 0x01DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class II_ShieldBlock_C>      K2Node_DynamicCast_AsI_Shield_Block;               // 0x01E0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x01F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1F1[0x7];                                      // 0x01F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	const class AActor*                           Temp_object_Variable;                              // 0x01F8(0x0008)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x0200(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_Bash_C_TryCallShieldBlocked) == 0x000008, "Wrong alignment on GA_Bash_C_TryCallShieldBlocked");
static_assert(sizeof(GA_Bash_C_TryCallShieldBlocked) == 0x000208, "Wrong size on GA_Bash_C_TryCallShieldBlocked");
static_assert(offsetof(GA_Bash_C_TryCallShieldBlocked, HitResult) == 0x000000, "Member 'GA_Bash_C_TryCallShieldBlocked::HitResult' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_TryCallShieldBlocked, HitActorASC) == 0x0000F8, "Member 'GA_Bash_C_TryCallShieldBlocked::HitActorASC' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_TryCallShieldBlocked, CallFunc_BreakHitResult_bBlockingHit) == 0x000100, "Member 'GA_Bash_C_TryCallShieldBlocked::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_TryCallShieldBlocked, CallFunc_BreakHitResult_bInitialOverlap) == 0x000101, "Member 'GA_Bash_C_TryCallShieldBlocked::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_TryCallShieldBlocked, CallFunc_BreakHitResult_Time) == 0x000104, "Member 'GA_Bash_C_TryCallShieldBlocked::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_TryCallShieldBlocked, CallFunc_BreakHitResult_Distance) == 0x000108, "Member 'GA_Bash_C_TryCallShieldBlocked::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_TryCallShieldBlocked, CallFunc_BreakHitResult_Location) == 0x000110, "Member 'GA_Bash_C_TryCallShieldBlocked::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_TryCallShieldBlocked, CallFunc_BreakHitResult_ImpactPoint) == 0x000128, "Member 'GA_Bash_C_TryCallShieldBlocked::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_TryCallShieldBlocked, CallFunc_BreakHitResult_Normal) == 0x000140, "Member 'GA_Bash_C_TryCallShieldBlocked::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_TryCallShieldBlocked, CallFunc_BreakHitResult_ImpactNormal) == 0x000158, "Member 'GA_Bash_C_TryCallShieldBlocked::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_TryCallShieldBlocked, CallFunc_BreakHitResult_PhysMat) == 0x000170, "Member 'GA_Bash_C_TryCallShieldBlocked::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_TryCallShieldBlocked, CallFunc_BreakHitResult_HitActor) == 0x000178, "Member 'GA_Bash_C_TryCallShieldBlocked::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_TryCallShieldBlocked, CallFunc_BreakHitResult_HitComponent) == 0x000180, "Member 'GA_Bash_C_TryCallShieldBlocked::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_TryCallShieldBlocked, CallFunc_BreakHitResult_HitBoneName) == 0x000188, "Member 'GA_Bash_C_TryCallShieldBlocked::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_TryCallShieldBlocked, CallFunc_BreakHitResult_BoneName) == 0x000190, "Member 'GA_Bash_C_TryCallShieldBlocked::CallFunc_BreakHitResult_BoneName' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_TryCallShieldBlocked, CallFunc_BreakHitResult_HitItem) == 0x000198, "Member 'GA_Bash_C_TryCallShieldBlocked::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_TryCallShieldBlocked, CallFunc_BreakHitResult_ElementIndex) == 0x00019C, "Member 'GA_Bash_C_TryCallShieldBlocked::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_TryCallShieldBlocked, CallFunc_BreakHitResult_FaceIndex) == 0x0001A0, "Member 'GA_Bash_C_TryCallShieldBlocked::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_TryCallShieldBlocked, CallFunc_BreakHitResult_TraceStart) == 0x0001A8, "Member 'GA_Bash_C_TryCallShieldBlocked::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_TryCallShieldBlocked, CallFunc_BreakHitResult_TraceEnd) == 0x0001C0, "Member 'GA_Bash_C_TryCallShieldBlocked::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_TryCallShieldBlocked, CallFunc_GetDamageToShield_Damage) == 0x0001D8, "Member 'GA_Bash_C_TryCallShieldBlocked::CallFunc_GetDamageToShield_Damage' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_TryCallShieldBlocked, K2Node_DynamicCast_AsI_Shield_Block) == 0x0001E0, "Member 'GA_Bash_C_TryCallShieldBlocked::K2Node_DynamicCast_AsI_Shield_Block' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_TryCallShieldBlocked, K2Node_DynamicCast_bSuccess) == 0x0001F0, "Member 'GA_Bash_C_TryCallShieldBlocked::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_TryCallShieldBlocked, Temp_object_Variable) == 0x0001F8, "Member 'GA_Bash_C_TryCallShieldBlocked::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_TryCallShieldBlocked, CallFunc_Array_AddUnique_ReturnValue) == 0x000200, "Member 'GA_Bash_C_TryCallShieldBlocked::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");

// Function GA_Bash.GA_Bash_C.TryKnockbackMessItem
// 0x0088 (0x0088 - 0x0000)
struct GA_Bash_C_TryKnockbackMessItem final
{
public:
	class UObject*                                Actor;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          HitMessItem;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABp_ThrowableProp_Small_C*              K2Node_DynamicCast_AsBp_Throwable_Prop_Small;      // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwningActorFromActorInfo_ReturnValue;  // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class II_TraceFrom_C>        K2Node_DynamicCast_AsI_Trace_From;                 // 0x0028(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetTraceFrom_Location;                    // 0x0040(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_GetTraceFrom_Rotation;                    // 0x0058(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue;             // 0x0070(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_Bash_C_TryKnockbackMessItem) == 0x000008, "Wrong alignment on GA_Bash_C_TryKnockbackMessItem");
static_assert(sizeof(GA_Bash_C_TryKnockbackMessItem) == 0x000088, "Wrong size on GA_Bash_C_TryKnockbackMessItem");
static_assert(offsetof(GA_Bash_C_TryKnockbackMessItem, Actor) == 0x000000, "Member 'GA_Bash_C_TryKnockbackMessItem::Actor' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_TryKnockbackMessItem, HitMessItem) == 0x000008, "Member 'GA_Bash_C_TryKnockbackMessItem::HitMessItem' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_TryKnockbackMessItem, K2Node_DynamicCast_AsBp_Throwable_Prop_Small) == 0x000010, "Member 'GA_Bash_C_TryKnockbackMessItem::K2Node_DynamicCast_AsBp_Throwable_Prop_Small' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_TryKnockbackMessItem, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'GA_Bash_C_TryKnockbackMessItem::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_TryKnockbackMessItem, CallFunc_GetOwningActorFromActorInfo_ReturnValue) == 0x000020, "Member 'GA_Bash_C_TryKnockbackMessItem::CallFunc_GetOwningActorFromActorInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_TryKnockbackMessItem, K2Node_DynamicCast_AsI_Trace_From) == 0x000028, "Member 'GA_Bash_C_TryKnockbackMessItem::K2Node_DynamicCast_AsI_Trace_From' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_TryKnockbackMessItem, K2Node_DynamicCast_bSuccess_1) == 0x000038, "Member 'GA_Bash_C_TryKnockbackMessItem::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_TryKnockbackMessItem, CallFunc_GetTraceFrom_Location) == 0x000040, "Member 'GA_Bash_C_TryKnockbackMessItem::CallFunc_GetTraceFrom_Location' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_TryKnockbackMessItem, CallFunc_GetTraceFrom_Rotation) == 0x000058, "Member 'GA_Bash_C_TryKnockbackMessItem::CallFunc_GetTraceFrom_Rotation' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_TryKnockbackMessItem, CallFunc_GetForwardVector_ReturnValue) == 0x000070, "Member 'GA_Bash_C_TryKnockbackMessItem::CallFunc_GetForwardVector_ReturnValue' has a wrong offset!");

// Function GA_Bash.GA_Bash_C.TryPlayInitialSound
// 0x00F8 (0x00F8 - 0x0000)
struct GA_Bash_C_TryPlayInitialSound final
{
public:
	class AActor*                                 SpawnedActor;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetSpawnedActor_Return;                   // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwningActorFromActorInfo_ReturnValue;  // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayCueParameters                 CallFunc_MakeGameplayCueParameters_ReturnValue;    // 0x0020(0x00D8)(ContainsInstancedReference)
};
static_assert(alignof(GA_Bash_C_TryPlayInitialSound) == 0x000008, "Wrong alignment on GA_Bash_C_TryPlayInitialSound");
static_assert(sizeof(GA_Bash_C_TryPlayInitialSound) == 0x0000F8, "Wrong size on GA_Bash_C_TryPlayInitialSound");
static_assert(offsetof(GA_Bash_C_TryPlayInitialSound, SpawnedActor) == 0x000000, "Member 'GA_Bash_C_TryPlayInitialSound::SpawnedActor' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_TryPlayInitialSound, CallFunc_GetSpawnedActor_Return) == 0x000008, "Member 'GA_Bash_C_TryPlayInitialSound::CallFunc_GetSpawnedActor_Return' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_TryPlayInitialSound, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'GA_Bash_C_TryPlayInitialSound::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_TryPlayInitialSound, CallFunc_GetOwningActorFromActorInfo_ReturnValue) == 0x000018, "Member 'GA_Bash_C_TryPlayInitialSound::CallFunc_GetOwningActorFromActorInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_TryPlayInitialSound, CallFunc_MakeGameplayCueParameters_ReturnValue) == 0x000020, "Member 'GA_Bash_C_TryPlayInitialSound::CallFunc_MakeGameplayCueParameters_ReturnValue' has a wrong offset!");

// Function GA_Bash.GA_Bash_C.K2_CanActivateAbility
// 0x00A0 (0x00A0 - 0x0000)
struct GA_Bash_C_K2_CanActivateAbility final
{
public:
	struct FGameplayAbilityActorInfo              ActorInfo;                                         // 0x0000(0x0048)(BlueprintVisible, BlueprintReadOnly, Parm, ContainsInstancedReference)
	struct FGameplayAbilitySpecHandle             Handle;                                            // 0x0048(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagContainer                  RelevantTags;                                      // 0x0050(0x0020)(Parm, OutParm)
	bool                                          ReturnValue;                                       // 0x0070(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_71[0x7];                                       // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagContainer                  CallFunc_K2_CanActivateAbility_RelevantTags;       // 0x0078(0x0020)()
	bool                                          CallFunc_K2_CanActivateAbility_ReturnValue;        // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_Bash_C_K2_CanActivateAbility) == 0x000008, "Wrong alignment on GA_Bash_C_K2_CanActivateAbility");
static_assert(sizeof(GA_Bash_C_K2_CanActivateAbility) == 0x0000A0, "Wrong size on GA_Bash_C_K2_CanActivateAbility");
static_assert(offsetof(GA_Bash_C_K2_CanActivateAbility, ActorInfo) == 0x000000, "Member 'GA_Bash_C_K2_CanActivateAbility::ActorInfo' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_K2_CanActivateAbility, Handle) == 0x000048, "Member 'GA_Bash_C_K2_CanActivateAbility::Handle' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_K2_CanActivateAbility, RelevantTags) == 0x000050, "Member 'GA_Bash_C_K2_CanActivateAbility::RelevantTags' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_K2_CanActivateAbility, ReturnValue) == 0x000070, "Member 'GA_Bash_C_K2_CanActivateAbility::ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_K2_CanActivateAbility, CallFunc_K2_CanActivateAbility_RelevantTags) == 0x000078, "Member 'GA_Bash_C_K2_CanActivateAbility::CallFunc_K2_CanActivateAbility_RelevantTags' has a wrong offset!");
static_assert(offsetof(GA_Bash_C_K2_CanActivateAbility, CallFunc_K2_CanActivateAbility_ReturnValue) == 0x000098, "Member 'GA_Bash_C_K2_CanActivateAbility::CallFunc_K2_CanActivateAbility_ReturnValue' has a wrong offset!");

}

