#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: I_ShieldBlock

#include "Basic.hpp"

#include "I_ShieldBlock_classes.hpp"
#include "I_ShieldBlock_parameters.hpp"


namespace SDK
{

// Function I_ShieldBlock.I_ShieldBlock_C.BlockedTrace
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   IncomingDamage                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FHitResult                       HitResult                                              (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference)

void II_ShieldBlock_C::BlockedTrace(int32 IncomingDamage, const struct FHitResult& HitResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("I_ShieldBlock_C", "BlockedTrace");

	Params::I_ShieldBlock_C_BlockedTrace Parms{};

	Parms.IncomingDamage = IncomingDamage;
	Parms.HitResult = std::move(HitResult);

	UObject::ProcessEvent(Func, &Parms);
}


// Function I_ShieldBlock.I_ShieldBlock_C.ProjectileImpact
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Incoming_Damage                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FHitResult                       HitResult                                              (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference)

void II_ShieldBlock_C::ProjectileImpact(int32 Incoming_Damage, const struct FHitResult& HitResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("I_ShieldBlock_C", "ProjectileImpact");

	Params::I_ShieldBlock_C_ProjectileImpact Parms{};

	Parms.Incoming_Damage = Incoming_Damage;
	Parms.HitResult = std::move(HitResult);

	UObject::ProcessEvent(Func, &Parms);
}

}

