#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BearTrap_AnimBP

#include "Basic.hpp"

#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BearTrap_AnimBP.BearTrap_AnimBP_C.Active
// 0x0010 (0x0010 - 0x0000)
struct BearTrap_AnimBP_C_Active final
{
public:
	bool                                          Condition;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimSequence*                          Sequence_0;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BearTrap_AnimBP_C_Active) == 0x000008, "Wrong alignment on BearTrap_AnimBP_C_Active");
static_assert(sizeof(BearTrap_AnimBP_C_Active) == 0x000010, "Wrong size on BearTrap_AnimBP_C_Active");
static_assert(offsetof(BearTrap_AnimBP_C_Active, Condition) == 0x000000, "Member 'BearTrap_AnimBP_C_Active::Condition' has a wrong offset!");
static_assert(offsetof(BearTrap_AnimBP_C_Active, Sequence_0) == 0x000008, "Member 'BearTrap_AnimBP_C_Active::Sequence_0' has a wrong offset!");

// Function BearTrap_AnimBP.BearTrap_AnimBP_C.AnimGraph
// 0x0010 (0x0010 - 0x0000)
struct BearTrap_AnimBP_C_AnimGraph final
{
public:
	struct FPoseLink                              AnimGraph_0;                                       // 0x0000(0x0010)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(BearTrap_AnimBP_C_AnimGraph) == 0x000008, "Wrong alignment on BearTrap_AnimBP_C_AnimGraph");
static_assert(sizeof(BearTrap_AnimBP_C_AnimGraph) == 0x000010, "Wrong size on BearTrap_AnimBP_C_AnimGraph");
static_assert(offsetof(BearTrap_AnimBP_C_AnimGraph, AnimGraph_0) == 0x000000, "Member 'BearTrap_AnimBP_C_AnimGraph::AnimGraph_0' has a wrong offset!");

// Function BearTrap_AnimBP.BearTrap_AnimBP_C.ExecuteUbergraph_BearTrap_AnimBP
// 0x0020 (0x0020 - 0x0000)
struct BearTrap_AnimBP_C_ExecuteUbergraph_BearTrap_AnimBP final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_Condition;                            // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimSequence*                          K2Node_Event_Sequence;                             // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetInstanceAssetPlayerTimeFromEndFraction_ReturnValue; // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NearlyEqual_FloatFloat_ReturnValue;       // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_Condition_1;                          // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_16[0x2];                                       // 0x0016(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_NearlyEqual_FloatFloat_A_ImplicitCast;    // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BearTrap_AnimBP_C_ExecuteUbergraph_BearTrap_AnimBP) == 0x000008, "Wrong alignment on BearTrap_AnimBP_C_ExecuteUbergraph_BearTrap_AnimBP");
static_assert(sizeof(BearTrap_AnimBP_C_ExecuteUbergraph_BearTrap_AnimBP) == 0x000020, "Wrong size on BearTrap_AnimBP_C_ExecuteUbergraph_BearTrap_AnimBP");
static_assert(offsetof(BearTrap_AnimBP_C_ExecuteUbergraph_BearTrap_AnimBP, EntryPoint) == 0x000000, "Member 'BearTrap_AnimBP_C_ExecuteUbergraph_BearTrap_AnimBP::EntryPoint' has a wrong offset!");
static_assert(offsetof(BearTrap_AnimBP_C_ExecuteUbergraph_BearTrap_AnimBP, K2Node_Event_Condition) == 0x000004, "Member 'BearTrap_AnimBP_C_ExecuteUbergraph_BearTrap_AnimBP::K2Node_Event_Condition' has a wrong offset!");
static_assert(offsetof(BearTrap_AnimBP_C_ExecuteUbergraph_BearTrap_AnimBP, K2Node_Event_Sequence) == 0x000008, "Member 'BearTrap_AnimBP_C_ExecuteUbergraph_BearTrap_AnimBP::K2Node_Event_Sequence' has a wrong offset!");
static_assert(offsetof(BearTrap_AnimBP_C_ExecuteUbergraph_BearTrap_AnimBP, CallFunc_GetInstanceAssetPlayerTimeFromEndFraction_ReturnValue) == 0x000010, "Member 'BearTrap_AnimBP_C_ExecuteUbergraph_BearTrap_AnimBP::CallFunc_GetInstanceAssetPlayerTimeFromEndFraction_ReturnValue' has a wrong offset!");
static_assert(offsetof(BearTrap_AnimBP_C_ExecuteUbergraph_BearTrap_AnimBP, CallFunc_NearlyEqual_FloatFloat_ReturnValue) == 0x000014, "Member 'BearTrap_AnimBP_C_ExecuteUbergraph_BearTrap_AnimBP::CallFunc_NearlyEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BearTrap_AnimBP_C_ExecuteUbergraph_BearTrap_AnimBP, K2Node_Event_Condition_1) == 0x000015, "Member 'BearTrap_AnimBP_C_ExecuteUbergraph_BearTrap_AnimBP::K2Node_Event_Condition_1' has a wrong offset!");
static_assert(offsetof(BearTrap_AnimBP_C_ExecuteUbergraph_BearTrap_AnimBP, CallFunc_NearlyEqual_FloatFloat_A_ImplicitCast) == 0x000018, "Member 'BearTrap_AnimBP_C_ExecuteUbergraph_BearTrap_AnimBP::CallFunc_NearlyEqual_FloatFloat_A_ImplicitCast' has a wrong offset!");

// Function BearTrap_AnimBP.BearTrap_AnimBP_C.Step
// 0x0001 (0x0001 - 0x0000)
struct BearTrap_AnimBP_C_Step final
{
public:
	bool                                          Condition;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BearTrap_AnimBP_C_Step) == 0x000001, "Wrong alignment on BearTrap_AnimBP_C_Step");
static_assert(sizeof(BearTrap_AnimBP_C_Step) == 0x000001, "Wrong size on BearTrap_AnimBP_C_Step");
static_assert(offsetof(BearTrap_AnimBP_C_Step, Condition) == 0x000000, "Member 'BearTrap_AnimBP_C_Step::Condition' has a wrong offset!");

}

