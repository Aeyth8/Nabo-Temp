#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_LobbyV3_HouseWorldSlot

#include "Basic.hpp"

#include "GameplayTags_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_LobbyV3_HouseWorldSlot.BP_LobbyV3_HouseWorldSlot_C
// 0x00D0 (0x0360 - 0x0290)
class ABP_LobbyV3_HouseWorldSlot_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0290(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UStaticMeshComponent*                   QuestionMarkMesh;                                  // 0x0298(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UChildActorComponent*                   EditorPreviewChildActor;                           // 0x02A0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        SpawnedHouseInstanceRoot;                          // 0x02A8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x02B0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           CurrentHouseId;                                    // 0x02B8(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UHouseDefinition*                       CurrentHouseDefinition;                            // 0x02C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	uint8                                         TeamId;                                            // 0x02C8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C9[0x7];                                      // 0x02C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AHousePreviewActorBase*                 HousePreviewActorInstance;                         // 0x02D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           DefaultHouseId;                                    // 0x02D8(0x0008)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             QuestionMarkStartingTransform;                     // 0x02E0(0x0060)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        QuestionMarkRotationDuration;                      // 0x0340(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        QuestionMarkMoveFrequency;                         // 0x0348(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        QuestionMarkMoveScale;                             // 0x0350(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ClearHousePreviewActor();
	void ExecuteUbergraph_BP_LobbyV3_HouseWorldSlot(int32 EntryPoint);
	void GetHouseIdForTeamOrDefault(uint8 TeamId_0, const struct FGameplayTag& DefaultHouseId_0, struct FGameplayTag* HouseID);
	void HandleNewHousePreviewActorInstanceSpawned();
	void HandleTeamChanged(const struct FTeam& AffectedTeam);
	void OnLoaded_3ED491094BE92E2CE57DA197593EB2CF(class UObject* Loaded);
	void OnLoaded_AF8D0C95462F1CD2F637C3A21235A0BB(TSubclassOf<class UObject> Loaded);
	void ReceiveBeginPlay();
	void ReceiveTick(float DeltaSeconds);
	void SetHouseDefinition(class UHouseDefinition* HouseDefinition);
	void SetHouseDefinitionAsync(TSoftObjectPtr<class UHouseDefinition> SoftHouseDefinition);
	void SetHouseDefinitionByIdAsync(const struct FGameplayTag& HouseID);
	void SetHouseVisibility(bool Visible);
	void SetQuestionMarkVisibility(bool Visible);
	void SpawnHousePreviewActor(class UClass* HousePreviewActorClass);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_LobbyV3_HouseWorldSlot_C">();
	}
	static class ABP_LobbyV3_HouseWorldSlot_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_LobbyV3_HouseWorldSlot_C>();
	}
};
static_assert(alignof(ABP_LobbyV3_HouseWorldSlot_C) == 0x000010, "Wrong alignment on ABP_LobbyV3_HouseWorldSlot_C");
static_assert(sizeof(ABP_LobbyV3_HouseWorldSlot_C) == 0x000360, "Wrong size on ABP_LobbyV3_HouseWorldSlot_C");
static_assert(offsetof(ABP_LobbyV3_HouseWorldSlot_C, UberGraphFrame) == 0x000290, "Member 'ABP_LobbyV3_HouseWorldSlot_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_LobbyV3_HouseWorldSlot_C, QuestionMarkMesh) == 0x000298, "Member 'ABP_LobbyV3_HouseWorldSlot_C::QuestionMarkMesh' has a wrong offset!");
static_assert(offsetof(ABP_LobbyV3_HouseWorldSlot_C, EditorPreviewChildActor) == 0x0002A0, "Member 'ABP_LobbyV3_HouseWorldSlot_C::EditorPreviewChildActor' has a wrong offset!");
static_assert(offsetof(ABP_LobbyV3_HouseWorldSlot_C, SpawnedHouseInstanceRoot) == 0x0002A8, "Member 'ABP_LobbyV3_HouseWorldSlot_C::SpawnedHouseInstanceRoot' has a wrong offset!");
static_assert(offsetof(ABP_LobbyV3_HouseWorldSlot_C, DefaultSceneRoot) == 0x0002B0, "Member 'ABP_LobbyV3_HouseWorldSlot_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ABP_LobbyV3_HouseWorldSlot_C, CurrentHouseId) == 0x0002B8, "Member 'ABP_LobbyV3_HouseWorldSlot_C::CurrentHouseId' has a wrong offset!");
static_assert(offsetof(ABP_LobbyV3_HouseWorldSlot_C, CurrentHouseDefinition) == 0x0002C0, "Member 'ABP_LobbyV3_HouseWorldSlot_C::CurrentHouseDefinition' has a wrong offset!");
static_assert(offsetof(ABP_LobbyV3_HouseWorldSlot_C, TeamId) == 0x0002C8, "Member 'ABP_LobbyV3_HouseWorldSlot_C::TeamId' has a wrong offset!");
static_assert(offsetof(ABP_LobbyV3_HouseWorldSlot_C, HousePreviewActorInstance) == 0x0002D0, "Member 'ABP_LobbyV3_HouseWorldSlot_C::HousePreviewActorInstance' has a wrong offset!");
static_assert(offsetof(ABP_LobbyV3_HouseWorldSlot_C, DefaultHouseId) == 0x0002D8, "Member 'ABP_LobbyV3_HouseWorldSlot_C::DefaultHouseId' has a wrong offset!");
static_assert(offsetof(ABP_LobbyV3_HouseWorldSlot_C, QuestionMarkStartingTransform) == 0x0002E0, "Member 'ABP_LobbyV3_HouseWorldSlot_C::QuestionMarkStartingTransform' has a wrong offset!");
static_assert(offsetof(ABP_LobbyV3_HouseWorldSlot_C, QuestionMarkRotationDuration) == 0x000340, "Member 'ABP_LobbyV3_HouseWorldSlot_C::QuestionMarkRotationDuration' has a wrong offset!");
static_assert(offsetof(ABP_LobbyV3_HouseWorldSlot_C, QuestionMarkMoveFrequency) == 0x000348, "Member 'ABP_LobbyV3_HouseWorldSlot_C::QuestionMarkMoveFrequency' has a wrong offset!");
static_assert(offsetof(ABP_LobbyV3_HouseWorldSlot_C, QuestionMarkMoveScale) == 0x000350, "Member 'ABP_LobbyV3_HouseWorldSlot_C::QuestionMarkMoveScale' has a wrong offset!");

}

