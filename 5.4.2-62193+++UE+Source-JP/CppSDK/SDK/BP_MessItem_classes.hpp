#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_MessItem

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "JP_structs.hpp"
#include "Bp_ThrowableProp_Small_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_MessItem.BP_MessItem_C
// 0x00C0 (0x0600 - 0x0540)
class ABP_MessItem_C : public ABp_ThrowableProp_Small_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_BP_MessItem_C;                      // 0x0540(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	TSet<EReceptacleType>                         ReceptacleCategories;                              // 0x0548(0x0050)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	double                                        PointWorth;                                        // 0x0598(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        ParticleScale;                                     // 0x05A0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UBP_MessReceptacleComponent_C*>  ActivatedReceptacles;                              // 0x05A8(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	TArray<class UBP_MessScoreZoneComponent_C*>   ActivatedScoreZones;                               // 0x05B8(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	bool                                          InSlot;                                            // 0x05C8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5C9[0x7];                                      // 0x05C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstance*                      InteractableMaterial;                              // 0x05D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     DefaultMaterial;                                   // 0x05D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	float                                         Damage;                                            // 0x05E0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5E4[0x4];                                      // 0x05E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 TextToShow;                                        // 0x05E8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash)
	double                                        LaunchMultiplier;                                  // 0x05F8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	bool CanActivateTrap();
	void CheckMovement();
	void ExecuteUbergraph_BP_MessItem(int32 EntryPoint);
	void FillSlot();
	void GetValidASC(class AActor* Actor, class UAbilitySystemComponent** ASC, bool* Valid);
	void Handle_Damage_Event(class AActor* Actor);
	void HideVisibleReceptaclesAndZones();
	void IsInFocus(class AActor* Focusing_Actor);
	void Knockback(const struct FVector& Velocity, bool XYOverride, bool ZOverride, double AirControlMultiplier, bool* Void);
	void LeaveSlot();
	void MulticastLaunch(const struct FVector& Impulse);
	void OnDropped();
	void OnGrabbed();
	void ReceiveBeginPlay();
	void RetriggerEndOverlaps();
	void RetriggerOverlapBegins();
	void RetriggerOverlaps();
	void ServerPush(class AActor* TargetActor, const struct FVector& LaunchVelocity);
	void SetVisibleReceptacles(TArray<class ABP_ReceptacleFurnitureBase_C*>& Array, class AActor* User);
	void SetVisibleScoreZones(TArray<class ABP_ReceptacleFurnitureBase_C*>& Array, class AActor* User);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_MessItem_C">();
	}
	static class ABP_MessItem_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_MessItem_C>();
	}
};
static_assert(alignof(ABP_MessItem_C) == 0x000010, "Wrong alignment on ABP_MessItem_C");
static_assert(sizeof(ABP_MessItem_C) == 0x000600, "Wrong size on ABP_MessItem_C");
static_assert(offsetof(ABP_MessItem_C, UberGraphFrame_BP_MessItem_C) == 0x000540, "Member 'ABP_MessItem_C::UberGraphFrame_BP_MessItem_C' has a wrong offset!");
static_assert(offsetof(ABP_MessItem_C, ReceptacleCategories) == 0x000548, "Member 'ABP_MessItem_C::ReceptacleCategories' has a wrong offset!");
static_assert(offsetof(ABP_MessItem_C, PointWorth) == 0x000598, "Member 'ABP_MessItem_C::PointWorth' has a wrong offset!");
static_assert(offsetof(ABP_MessItem_C, ParticleScale) == 0x0005A0, "Member 'ABP_MessItem_C::ParticleScale' has a wrong offset!");
static_assert(offsetof(ABP_MessItem_C, ActivatedReceptacles) == 0x0005A8, "Member 'ABP_MessItem_C::ActivatedReceptacles' has a wrong offset!");
static_assert(offsetof(ABP_MessItem_C, ActivatedScoreZones) == 0x0005B8, "Member 'ABP_MessItem_C::ActivatedScoreZones' has a wrong offset!");
static_assert(offsetof(ABP_MessItem_C, InSlot) == 0x0005C8, "Member 'ABP_MessItem_C::InSlot' has a wrong offset!");
static_assert(offsetof(ABP_MessItem_C, InteractableMaterial) == 0x0005D0, "Member 'ABP_MessItem_C::InteractableMaterial' has a wrong offset!");
static_assert(offsetof(ABP_MessItem_C, DefaultMaterial) == 0x0005D8, "Member 'ABP_MessItem_C::DefaultMaterial' has a wrong offset!");
static_assert(offsetof(ABP_MessItem_C, Damage) == 0x0005E0, "Member 'ABP_MessItem_C::Damage' has a wrong offset!");
static_assert(offsetof(ABP_MessItem_C, TextToShow) == 0x0005E8, "Member 'ABP_MessItem_C::TextToShow' has a wrong offset!");
static_assert(offsetof(ABP_MessItem_C, LaunchMultiplier) == 0x0005F8, "Member 'ABP_MessItem_C::LaunchMultiplier' has a wrong offset!");

}

