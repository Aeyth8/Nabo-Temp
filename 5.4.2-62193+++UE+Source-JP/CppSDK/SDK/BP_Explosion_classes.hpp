#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Explosion

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "E_ExplosionRange_structs.hpp"
#include "JP_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_Explosion.BP_Explosion_C
// 0x0128 (0x03B8 - 0x0290)
class ABP_Explosion_C : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0290(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x0298(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	double                                        ExplosionRadiusMax;                                // 0x02A0(0x0008)(Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	double                                        ExplosionRadiusMid;                                // 0x02A8(0x0008)(Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	double                                        ExplosionRadiusMin;                                // 0x02B0(0x0008)(Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	double                                        DamageMax;                                         // 0x02B8(0x0008)(Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	double                                        DamageMid;                                         // 0x02C0(0x0008)(Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	double                                        DamageMin;                                         // 0x02C8(0x0008)(Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	uint8                                         TeamOwner;                                         // 0x02D0(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	uint8                                         Pad_2D1[0x7];                                      // 0x02D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         HitDamageableActors;                               // 0x02D8(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, DisableEditOnInstance)
	double                                        KnockbackForceMax;                                 // 0x02E8(0x0008)(Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	TArray<class AActor*>                         ActorsInLineOfSight;                               // 0x02F0(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, DisableEditOnInstance)
	class USoundBase*                             ExplosionSound;                                    // 0x0300(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UNiagaraSystem*                         ParticleEffect;                                    // 0x0308(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	E_ExplosionRange                              ExplosionRange;                                    // 0x0310(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_311[0x7];                                      // 0x0311(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        KnockbackForceMid;                                 // 0x0318(0x0008)(Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	double                                        KnockbackForceMin;                                 // 0x0320(0x0008)(Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	double                                        FriendlyFireDivider;                               // 0x0328(0x0008)(Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	bool                                          AffectsSameTeam;                                   // 0x0330(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	bool                                          PlayCosmetics;                                     // 0x0331(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_332[0x6];                                      // 0x0332(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FCombatParticipant                     Killer;                                            // 0x0338(0x0060)(Edit, BlueprintVisible, ExposeOnSpawn)
	double                                        DamageToStructuresMultiplier;                      // 0x0398(0x0008)(Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	class AActor*                                 ActorThatSpawnedThis;                              // 0x03A0(0x0008)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnTemplate, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	bool                                          DamageSelf;                                        // 0x03A8(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	uint8                                         Pad_3A9[0x7];                                      // 0x03A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerState*                           OwningPlayerState;                                 // 0x03B0(0x0008)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnTemplate, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)

public:
	void CalculateDamageBasedOnDistance(class AActor* HitActor, double* Damage);
	void CanAffectActorBasedOnTeam(class AActor* HitActor, bool* CanHit);
	void CheckLineOfSight();
	void Detonate();
	void DoExplode(TArray<class AActor*>& ActorsInLineOfSight_0);
	void ExecuteUbergraph_BP_Explosion(int32 EntryPoint);
	void FilterHitActors(TArray<struct FHitResult>& Hits);
	void GetKnockbackVelocity(class AActor* TargetActor, struct FVector* Velocity);
	bool HitShield(const struct FHitResult& Hit, class AActor** HitActor);
	void Knockback(TArray<class AActor*>& Actors);
	void Multi_Cosmetics();
	void ReceiveBeginPlay();
	void TracedShield(class AActor* Actor, const struct FHitResult& Hit);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_Explosion_C">();
	}
	static class ABP_Explosion_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_Explosion_C>();
	}
};
static_assert(alignof(ABP_Explosion_C) == 0x000008, "Wrong alignment on ABP_Explosion_C");
static_assert(sizeof(ABP_Explosion_C) == 0x0003B8, "Wrong size on ABP_Explosion_C");
static_assert(offsetof(ABP_Explosion_C, UberGraphFrame) == 0x000290, "Member 'ABP_Explosion_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_Explosion_C, DefaultSceneRoot) == 0x000298, "Member 'ABP_Explosion_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ABP_Explosion_C, ExplosionRadiusMax) == 0x0002A0, "Member 'ABP_Explosion_C::ExplosionRadiusMax' has a wrong offset!");
static_assert(offsetof(ABP_Explosion_C, ExplosionRadiusMid) == 0x0002A8, "Member 'ABP_Explosion_C::ExplosionRadiusMid' has a wrong offset!");
static_assert(offsetof(ABP_Explosion_C, ExplosionRadiusMin) == 0x0002B0, "Member 'ABP_Explosion_C::ExplosionRadiusMin' has a wrong offset!");
static_assert(offsetof(ABP_Explosion_C, DamageMax) == 0x0002B8, "Member 'ABP_Explosion_C::DamageMax' has a wrong offset!");
static_assert(offsetof(ABP_Explosion_C, DamageMid) == 0x0002C0, "Member 'ABP_Explosion_C::DamageMid' has a wrong offset!");
static_assert(offsetof(ABP_Explosion_C, DamageMin) == 0x0002C8, "Member 'ABP_Explosion_C::DamageMin' has a wrong offset!");
static_assert(offsetof(ABP_Explosion_C, TeamOwner) == 0x0002D0, "Member 'ABP_Explosion_C::TeamOwner' has a wrong offset!");
static_assert(offsetof(ABP_Explosion_C, HitDamageableActors) == 0x0002D8, "Member 'ABP_Explosion_C::HitDamageableActors' has a wrong offset!");
static_assert(offsetof(ABP_Explosion_C, KnockbackForceMax) == 0x0002E8, "Member 'ABP_Explosion_C::KnockbackForceMax' has a wrong offset!");
static_assert(offsetof(ABP_Explosion_C, ActorsInLineOfSight) == 0x0002F0, "Member 'ABP_Explosion_C::ActorsInLineOfSight' has a wrong offset!");
static_assert(offsetof(ABP_Explosion_C, ExplosionSound) == 0x000300, "Member 'ABP_Explosion_C::ExplosionSound' has a wrong offset!");
static_assert(offsetof(ABP_Explosion_C, ParticleEffect) == 0x000308, "Member 'ABP_Explosion_C::ParticleEffect' has a wrong offset!");
static_assert(offsetof(ABP_Explosion_C, ExplosionRange) == 0x000310, "Member 'ABP_Explosion_C::ExplosionRange' has a wrong offset!");
static_assert(offsetof(ABP_Explosion_C, KnockbackForceMid) == 0x000318, "Member 'ABP_Explosion_C::KnockbackForceMid' has a wrong offset!");
static_assert(offsetof(ABP_Explosion_C, KnockbackForceMin) == 0x000320, "Member 'ABP_Explosion_C::KnockbackForceMin' has a wrong offset!");
static_assert(offsetof(ABP_Explosion_C, FriendlyFireDivider) == 0x000328, "Member 'ABP_Explosion_C::FriendlyFireDivider' has a wrong offset!");
static_assert(offsetof(ABP_Explosion_C, AffectsSameTeam) == 0x000330, "Member 'ABP_Explosion_C::AffectsSameTeam' has a wrong offset!");
static_assert(offsetof(ABP_Explosion_C, PlayCosmetics) == 0x000331, "Member 'ABP_Explosion_C::PlayCosmetics' has a wrong offset!");
static_assert(offsetof(ABP_Explosion_C, Killer) == 0x000338, "Member 'ABP_Explosion_C::Killer' has a wrong offset!");
static_assert(offsetof(ABP_Explosion_C, DamageToStructuresMultiplier) == 0x000398, "Member 'ABP_Explosion_C::DamageToStructuresMultiplier' has a wrong offset!");
static_assert(offsetof(ABP_Explosion_C, ActorThatSpawnedThis) == 0x0003A0, "Member 'ABP_Explosion_C::ActorThatSpawnedThis' has a wrong offset!");
static_assert(offsetof(ABP_Explosion_C, DamageSelf) == 0x0003A8, "Member 'ABP_Explosion_C::DamageSelf' has a wrong offset!");
static_assert(offsetof(ABP_Explosion_C, OwningPlayerState) == 0x0003B0, "Member 'ABP_Explosion_C::OwningPlayerState' has a wrong offset!");

}

