#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Transient

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "PBIK_structs.hpp"
#include "ControlRig_structs.hpp"
#include "AnimationCore_structs.hpp"
#include "Engine_structs.hpp"
#include "RigVM_structs.hpp"


namespace SDK
{

// ScriptStruct Transient.ChaosDestructionEvent_SWC
// 0x0044 (0x0044 - 0x0000)
struct FChaosDestructionEvent_SWC final
{
public:
	struct FVector3f                              Position;                                          // 0x0000(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector3f                              Normal;                                            // 0x000C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector3f                              Velocity;                                          // 0x0018(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector3f                              AngularVelocity;                                   // 0x0024(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ExtentMin;                                         // 0x0030(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ExtentMax;                                         // 0x0034(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ParticleID;                                        // 0x0038(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Time;                                              // 0x003C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Type;                                              // 0x0040(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FChaosDestructionEvent_SWC) == 0x000004, "Wrong alignment on FChaosDestructionEvent_SWC");
static_assert(sizeof(FChaosDestructionEvent_SWC) == 0x000044, "Wrong size on FChaosDestructionEvent_SWC");
static_assert(offsetof(FChaosDestructionEvent_SWC, Position) == 0x000000, "Member 'FChaosDestructionEvent_SWC::Position' has a wrong offset!");
static_assert(offsetof(FChaosDestructionEvent_SWC, Normal) == 0x00000C, "Member 'FChaosDestructionEvent_SWC::Normal' has a wrong offset!");
static_assert(offsetof(FChaosDestructionEvent_SWC, Velocity) == 0x000018, "Member 'FChaosDestructionEvent_SWC::Velocity' has a wrong offset!");
static_assert(offsetof(FChaosDestructionEvent_SWC, AngularVelocity) == 0x000024, "Member 'FChaosDestructionEvent_SWC::AngularVelocity' has a wrong offset!");
static_assert(offsetof(FChaosDestructionEvent_SWC, ExtentMin) == 0x000030, "Member 'FChaosDestructionEvent_SWC::ExtentMin' has a wrong offset!");
static_assert(offsetof(FChaosDestructionEvent_SWC, ExtentMax) == 0x000034, "Member 'FChaosDestructionEvent_SWC::ExtentMax' has a wrong offset!");
static_assert(offsetof(FChaosDestructionEvent_SWC, ParticleID) == 0x000038, "Member 'FChaosDestructionEvent_SWC::ParticleID' has a wrong offset!");
static_assert(offsetof(FChaosDestructionEvent_SWC, Time) == 0x00003C, "Member 'FChaosDestructionEvent_SWC::Time' has a wrong offset!");
static_assert(offsetof(FChaosDestructionEvent_SWC, Type) == 0x000040, "Member 'FChaosDestructionEvent_SWC::Type' has a wrong offset!");

// PropertyBag Transient.PropertyBag_660aecd93a39fa4e
// 0x0530 (0x0530 - 0x0000)
struct FPropertyBag_660aecd93a39fa4e final
{
public:
	struct FVector                                RigVMModel___FootTrace_Offset;                     // 0x0000(0x0018)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                FootTrace___FootTrace_MathVectorAdd_Result;        // 0x0018(0x0018)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             FootTrace___FootTrace_GetTransform_Transform;      // 0x0030(0x0060)(Edit, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              FootTrace___FootTrace_GetTransform_CachedIndex;    // 0x0090(0x0010)(Edit)
	float                                         FootTrace___FootTrace_MathFloatAdd_Result;         // 0x00A0(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         FootTrace___FootTrace_MathFloatAdd_A;              // 0x00A4(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A8[0x8];                                       // 0x00A8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             FootTrace___FootTrace_GetTransform_1_Transform;    // 0x00B0(0x0060)(Edit, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              FootTrace___FootTrace_GetTransform_1_CachedIndex;  // 0x0110(0x0010)(Edit)
	struct FVector                                FootTrace___FootTrace_MathVectorAdd_A__IO;         // 0x0120(0x0018)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                FootTrace___FootTrace_MathVectorSub_Result;        // 0x0138(0x0018)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                FootTrace___FootTrace_MathVectorSub_A__IO;         // 0x0150(0x0018)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          FootTrace___FootTrace_SphereTraceByTraceChannel_bHit; // 0x0168(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_169[0x7];                                      // 0x0169(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                FootTrace___FootTrace_SphereTraceByTraceChannel_HitNormal; // 0x0170(0x0018)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FRigUnit_SphereTrace_WorkData>  FootTrace___FootTrace_SphereTraceByTraceChannel_WorkData; // 0x0188(0x0010)(Edit)
	struct FVector                                RigVMModel___FootTrace_1_Offset;                   // 0x0198(0x0018)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                FootTrace_1___FootTrace_MathVectorAdd_Result;      // 0x01B0(0x0018)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C8[0x8];                                      // 0x01C8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             FootTrace_1___FootTrace_GetTransform_Transform;    // 0x01D0(0x0060)(Edit, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              FootTrace_1___FootTrace_GetTransform_CachedIndex;  // 0x0230(0x0010)(Edit)
	float                                         FootTrace_1___FootTrace_MathFloatAdd_Result;       // 0x0240(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         FootTrace_1___FootTrace_MathFloatAdd_A;            // 0x0244(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_248[0x8];                                      // 0x0248(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             FootTrace_1___FootTrace_GetTransform_1_Transform;  // 0x0250(0x0060)(Edit, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              FootTrace_1___FootTrace_GetTransform_1_CachedIndex; // 0x02B0(0x0010)(Edit)
	struct FVector                                FootTrace_1___FootTrace_MathVectorAdd_A__IO;       // 0x02C0(0x0018)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                FootTrace_1___FootTrace_MathVectorSub_Result;      // 0x02D8(0x0018)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                FootTrace_1___FootTrace_MathVectorSub_A__IO;       // 0x02F0(0x0018)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          FootTrace_1___FootTrace_SphereTraceByTraceChannel_bHit; // 0x0308(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_309[0x7];                                      // 0x0309(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                FootTrace_1___FootTrace_SphereTraceByTraceChannel_HitNormal; // 0x0310(0x0018)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FRigUnit_SphereTrace_WorkData>  FootTrace_1___FootTrace_SphereTraceByTraceChannel_WorkData; // 0x0328(0x0010)(Edit)
	class FName                                   RigVMModel___Branch_BlockToRun;                    // 0x0338(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        RigVMModel___Add_Result;                           // 0x0340(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___AlphaInterp_Result;                   // 0x0348(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___AlphaInterp_Value;                    // 0x034C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FInputScaleBiasClamp>           RigVMModel___AlphaInterp_ScaleBiasClamp;           // 0x0350(0x0010)(Edit)
	double                                        RigVMModel___Add_A;                                // 0x0360(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        RigVMModel___Add_1_1_Result;                       // 0x0368(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___AlphaInterp_1_Result;                 // 0x0370(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___AlphaInterp_1_Value;                  // 0x0374(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FInputScaleBiasClamp>           RigVMModel___AlphaInterp_1_ScaleBiasClamp;         // 0x0378(0x0010)(Edit)
	double                                        RigVMModel___Add_1_1_A;                            // 0x0388(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        RigVMModel___If_Result;                            // 0x0390(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          RigVMModel___MathFloatLess_Result;                 // 0x0398(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_399[0x3];                                      // 0x0399(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         RigVMModel___MathFloatLess_A;                      // 0x039C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatLess_B;                      // 0x03A0(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          RigVMModel___If_Condition;                         // 0x03A4(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A5[0x3];                                      // 0x03A5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FRigUnit_ModifyTransforms_PerItem> RigVMModel___ModifyTransforms_ItemToModify__IO;    // 0x03A8(0x0010)(Edit)
	TArray<struct FRigUnit_ModifyTransforms_WorkData> RigVMModel___ModifyTransforms_WorkData;            // 0x03B8(0x0010)(Edit)
	double                                        RigVMModel___Multiply_Result;                      // 0x03C8(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FRigUnit_ModifyTransforms_PerItem> RigVMModel___ModifyTransforms_1_ItemToModify__IO;  // 0x03D0(0x0010)(Edit)
	TArray<struct FRigUnit_ModifyTransforms_WorkData> RigVMModel___ModifyTransforms_1_WorkData;          // 0x03E0(0x0010)(Edit)
	double                                        RigVMModel___Add_1_Result;                         // 0x03F0(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FRigUnit_ModifyTransforms_PerItem> RigVMModel___ModifyTransforms_1_1_ItemToModify__IO; // 0x03F8(0x0010)(Edit)
	TArray<struct FRigUnit_ModifyTransforms_WorkData> RigVMModel___ModifyTransforms_1_1_WorkData;        // 0x0408(0x0010)(Edit)
	uint8                                         Pad_418[0x8];                                      // 0x0418(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             RigVMModel___GetTransform_Transform;               // 0x0420(0x0060)(Edit, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              RigVMModel___GetTransform_CachedIndex;             // 0x0480(0x0010)(Edit)
	struct FTransform                             RigVMModel___GetTransform_1_Transform;             // 0x0490(0x0060)(Edit, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              RigVMModel___GetTransform_1_CachedIndex;           // 0x04F0(0x0010)(Edit)
	TArray<struct FPBIKEffector>                  RigVMModel___PBIK_Effectors__IO;                   // 0x0500(0x0010)(Edit)
	TArray<TArray<int32>>                         RigVMModel___PBIK_EffectorSolverIndices;           // 0x0510(0x0010)(Edit)
	TArray<struct FPBIKWorkData>                  RigVMModel___PBIK_WorkData;                        // 0x0520(0x0010)(Edit)
};
static_assert(alignof(FPropertyBag_660aecd93a39fa4e) == 0x000010, "Wrong alignment on FPropertyBag_660aecd93a39fa4e");
static_assert(sizeof(FPropertyBag_660aecd93a39fa4e) == 0x000530, "Wrong size on FPropertyBag_660aecd93a39fa4e");
static_assert(offsetof(FPropertyBag_660aecd93a39fa4e, RigVMModel___FootTrace_Offset) == 0x000000, "Member 'FPropertyBag_660aecd93a39fa4e::RigVMModel___FootTrace_Offset' has a wrong offset!");
static_assert(offsetof(FPropertyBag_660aecd93a39fa4e, FootTrace___FootTrace_MathVectorAdd_Result) == 0x000018, "Member 'FPropertyBag_660aecd93a39fa4e::FootTrace___FootTrace_MathVectorAdd_Result' has a wrong offset!");
static_assert(offsetof(FPropertyBag_660aecd93a39fa4e, FootTrace___FootTrace_GetTransform_Transform) == 0x000030, "Member 'FPropertyBag_660aecd93a39fa4e::FootTrace___FootTrace_GetTransform_Transform' has a wrong offset!");
static_assert(offsetof(FPropertyBag_660aecd93a39fa4e, FootTrace___FootTrace_GetTransform_CachedIndex) == 0x000090, "Member 'FPropertyBag_660aecd93a39fa4e::FootTrace___FootTrace_GetTransform_CachedIndex' has a wrong offset!");
static_assert(offsetof(FPropertyBag_660aecd93a39fa4e, FootTrace___FootTrace_MathFloatAdd_Result) == 0x0000A0, "Member 'FPropertyBag_660aecd93a39fa4e::FootTrace___FootTrace_MathFloatAdd_Result' has a wrong offset!");
static_assert(offsetof(FPropertyBag_660aecd93a39fa4e, FootTrace___FootTrace_MathFloatAdd_A) == 0x0000A4, "Member 'FPropertyBag_660aecd93a39fa4e::FootTrace___FootTrace_MathFloatAdd_A' has a wrong offset!");
static_assert(offsetof(FPropertyBag_660aecd93a39fa4e, FootTrace___FootTrace_GetTransform_1_Transform) == 0x0000B0, "Member 'FPropertyBag_660aecd93a39fa4e::FootTrace___FootTrace_GetTransform_1_Transform' has a wrong offset!");
static_assert(offsetof(FPropertyBag_660aecd93a39fa4e, FootTrace___FootTrace_GetTransform_1_CachedIndex) == 0x000110, "Member 'FPropertyBag_660aecd93a39fa4e::FootTrace___FootTrace_GetTransform_1_CachedIndex' has a wrong offset!");
static_assert(offsetof(FPropertyBag_660aecd93a39fa4e, FootTrace___FootTrace_MathVectorAdd_A__IO) == 0x000120, "Member 'FPropertyBag_660aecd93a39fa4e::FootTrace___FootTrace_MathVectorAdd_A__IO' has a wrong offset!");
static_assert(offsetof(FPropertyBag_660aecd93a39fa4e, FootTrace___FootTrace_MathVectorSub_Result) == 0x000138, "Member 'FPropertyBag_660aecd93a39fa4e::FootTrace___FootTrace_MathVectorSub_Result' has a wrong offset!");
static_assert(offsetof(FPropertyBag_660aecd93a39fa4e, FootTrace___FootTrace_MathVectorSub_A__IO) == 0x000150, "Member 'FPropertyBag_660aecd93a39fa4e::FootTrace___FootTrace_MathVectorSub_A__IO' has a wrong offset!");
static_assert(offsetof(FPropertyBag_660aecd93a39fa4e, FootTrace___FootTrace_SphereTraceByTraceChannel_bHit) == 0x000168, "Member 'FPropertyBag_660aecd93a39fa4e::FootTrace___FootTrace_SphereTraceByTraceChannel_bHit' has a wrong offset!");
static_assert(offsetof(FPropertyBag_660aecd93a39fa4e, FootTrace___FootTrace_SphereTraceByTraceChannel_HitNormal) == 0x000170, "Member 'FPropertyBag_660aecd93a39fa4e::FootTrace___FootTrace_SphereTraceByTraceChannel_HitNormal' has a wrong offset!");
static_assert(offsetof(FPropertyBag_660aecd93a39fa4e, FootTrace___FootTrace_SphereTraceByTraceChannel_WorkData) == 0x000188, "Member 'FPropertyBag_660aecd93a39fa4e::FootTrace___FootTrace_SphereTraceByTraceChannel_WorkData' has a wrong offset!");
static_assert(offsetof(FPropertyBag_660aecd93a39fa4e, RigVMModel___FootTrace_1_Offset) == 0x000198, "Member 'FPropertyBag_660aecd93a39fa4e::RigVMModel___FootTrace_1_Offset' has a wrong offset!");
static_assert(offsetof(FPropertyBag_660aecd93a39fa4e, FootTrace_1___FootTrace_MathVectorAdd_Result) == 0x0001B0, "Member 'FPropertyBag_660aecd93a39fa4e::FootTrace_1___FootTrace_MathVectorAdd_Result' has a wrong offset!");
static_assert(offsetof(FPropertyBag_660aecd93a39fa4e, FootTrace_1___FootTrace_GetTransform_Transform) == 0x0001D0, "Member 'FPropertyBag_660aecd93a39fa4e::FootTrace_1___FootTrace_GetTransform_Transform' has a wrong offset!");
static_assert(offsetof(FPropertyBag_660aecd93a39fa4e, FootTrace_1___FootTrace_GetTransform_CachedIndex) == 0x000230, "Member 'FPropertyBag_660aecd93a39fa4e::FootTrace_1___FootTrace_GetTransform_CachedIndex' has a wrong offset!");
static_assert(offsetof(FPropertyBag_660aecd93a39fa4e, FootTrace_1___FootTrace_MathFloatAdd_Result) == 0x000240, "Member 'FPropertyBag_660aecd93a39fa4e::FootTrace_1___FootTrace_MathFloatAdd_Result' has a wrong offset!");
static_assert(offsetof(FPropertyBag_660aecd93a39fa4e, FootTrace_1___FootTrace_MathFloatAdd_A) == 0x000244, "Member 'FPropertyBag_660aecd93a39fa4e::FootTrace_1___FootTrace_MathFloatAdd_A' has a wrong offset!");
static_assert(offsetof(FPropertyBag_660aecd93a39fa4e, FootTrace_1___FootTrace_GetTransform_1_Transform) == 0x000250, "Member 'FPropertyBag_660aecd93a39fa4e::FootTrace_1___FootTrace_GetTransform_1_Transform' has a wrong offset!");
static_assert(offsetof(FPropertyBag_660aecd93a39fa4e, FootTrace_1___FootTrace_GetTransform_1_CachedIndex) == 0x0002B0, "Member 'FPropertyBag_660aecd93a39fa4e::FootTrace_1___FootTrace_GetTransform_1_CachedIndex' has a wrong offset!");
static_assert(offsetof(FPropertyBag_660aecd93a39fa4e, FootTrace_1___FootTrace_MathVectorAdd_A__IO) == 0x0002C0, "Member 'FPropertyBag_660aecd93a39fa4e::FootTrace_1___FootTrace_MathVectorAdd_A__IO' has a wrong offset!");
static_assert(offsetof(FPropertyBag_660aecd93a39fa4e, FootTrace_1___FootTrace_MathVectorSub_Result) == 0x0002D8, "Member 'FPropertyBag_660aecd93a39fa4e::FootTrace_1___FootTrace_MathVectorSub_Result' has a wrong offset!");
static_assert(offsetof(FPropertyBag_660aecd93a39fa4e, FootTrace_1___FootTrace_MathVectorSub_A__IO) == 0x0002F0, "Member 'FPropertyBag_660aecd93a39fa4e::FootTrace_1___FootTrace_MathVectorSub_A__IO' has a wrong offset!");
static_assert(offsetof(FPropertyBag_660aecd93a39fa4e, FootTrace_1___FootTrace_SphereTraceByTraceChannel_bHit) == 0x000308, "Member 'FPropertyBag_660aecd93a39fa4e::FootTrace_1___FootTrace_SphereTraceByTraceChannel_bHit' has a wrong offset!");
static_assert(offsetof(FPropertyBag_660aecd93a39fa4e, FootTrace_1___FootTrace_SphereTraceByTraceChannel_HitNormal) == 0x000310, "Member 'FPropertyBag_660aecd93a39fa4e::FootTrace_1___FootTrace_SphereTraceByTraceChannel_HitNormal' has a wrong offset!");
static_assert(offsetof(FPropertyBag_660aecd93a39fa4e, FootTrace_1___FootTrace_SphereTraceByTraceChannel_WorkData) == 0x000328, "Member 'FPropertyBag_660aecd93a39fa4e::FootTrace_1___FootTrace_SphereTraceByTraceChannel_WorkData' has a wrong offset!");
static_assert(offsetof(FPropertyBag_660aecd93a39fa4e, RigVMModel___Branch_BlockToRun) == 0x000338, "Member 'FPropertyBag_660aecd93a39fa4e::RigVMModel___Branch_BlockToRun' has a wrong offset!");
static_assert(offsetof(FPropertyBag_660aecd93a39fa4e, RigVMModel___Add_Result) == 0x000340, "Member 'FPropertyBag_660aecd93a39fa4e::RigVMModel___Add_Result' has a wrong offset!");
static_assert(offsetof(FPropertyBag_660aecd93a39fa4e, RigVMModel___AlphaInterp_Result) == 0x000348, "Member 'FPropertyBag_660aecd93a39fa4e::RigVMModel___AlphaInterp_Result' has a wrong offset!");
static_assert(offsetof(FPropertyBag_660aecd93a39fa4e, RigVMModel___AlphaInterp_Value) == 0x00034C, "Member 'FPropertyBag_660aecd93a39fa4e::RigVMModel___AlphaInterp_Value' has a wrong offset!");
static_assert(offsetof(FPropertyBag_660aecd93a39fa4e, RigVMModel___AlphaInterp_ScaleBiasClamp) == 0x000350, "Member 'FPropertyBag_660aecd93a39fa4e::RigVMModel___AlphaInterp_ScaleBiasClamp' has a wrong offset!");
static_assert(offsetof(FPropertyBag_660aecd93a39fa4e, RigVMModel___Add_A) == 0x000360, "Member 'FPropertyBag_660aecd93a39fa4e::RigVMModel___Add_A' has a wrong offset!");
static_assert(offsetof(FPropertyBag_660aecd93a39fa4e, RigVMModel___Add_1_1_Result) == 0x000368, "Member 'FPropertyBag_660aecd93a39fa4e::RigVMModel___Add_1_1_Result' has a wrong offset!");
static_assert(offsetof(FPropertyBag_660aecd93a39fa4e, RigVMModel___AlphaInterp_1_Result) == 0x000370, "Member 'FPropertyBag_660aecd93a39fa4e::RigVMModel___AlphaInterp_1_Result' has a wrong offset!");
static_assert(offsetof(FPropertyBag_660aecd93a39fa4e, RigVMModel___AlphaInterp_1_Value) == 0x000374, "Member 'FPropertyBag_660aecd93a39fa4e::RigVMModel___AlphaInterp_1_Value' has a wrong offset!");
static_assert(offsetof(FPropertyBag_660aecd93a39fa4e, RigVMModel___AlphaInterp_1_ScaleBiasClamp) == 0x000378, "Member 'FPropertyBag_660aecd93a39fa4e::RigVMModel___AlphaInterp_1_ScaleBiasClamp' has a wrong offset!");
static_assert(offsetof(FPropertyBag_660aecd93a39fa4e, RigVMModel___Add_1_1_A) == 0x000388, "Member 'FPropertyBag_660aecd93a39fa4e::RigVMModel___Add_1_1_A' has a wrong offset!");
static_assert(offsetof(FPropertyBag_660aecd93a39fa4e, RigVMModel___If_Result) == 0x000390, "Member 'FPropertyBag_660aecd93a39fa4e::RigVMModel___If_Result' has a wrong offset!");
static_assert(offsetof(FPropertyBag_660aecd93a39fa4e, RigVMModel___MathFloatLess_Result) == 0x000398, "Member 'FPropertyBag_660aecd93a39fa4e::RigVMModel___MathFloatLess_Result' has a wrong offset!");
static_assert(offsetof(FPropertyBag_660aecd93a39fa4e, RigVMModel___MathFloatLess_A) == 0x00039C, "Member 'FPropertyBag_660aecd93a39fa4e::RigVMModel___MathFloatLess_A' has a wrong offset!");
static_assert(offsetof(FPropertyBag_660aecd93a39fa4e, RigVMModel___MathFloatLess_B) == 0x0003A0, "Member 'FPropertyBag_660aecd93a39fa4e::RigVMModel___MathFloatLess_B' has a wrong offset!");
static_assert(offsetof(FPropertyBag_660aecd93a39fa4e, RigVMModel___If_Condition) == 0x0003A4, "Member 'FPropertyBag_660aecd93a39fa4e::RigVMModel___If_Condition' has a wrong offset!");
static_assert(offsetof(FPropertyBag_660aecd93a39fa4e, RigVMModel___ModifyTransforms_ItemToModify__IO) == 0x0003A8, "Member 'FPropertyBag_660aecd93a39fa4e::RigVMModel___ModifyTransforms_ItemToModify__IO' has a wrong offset!");
static_assert(offsetof(FPropertyBag_660aecd93a39fa4e, RigVMModel___ModifyTransforms_WorkData) == 0x0003B8, "Member 'FPropertyBag_660aecd93a39fa4e::RigVMModel___ModifyTransforms_WorkData' has a wrong offset!");
static_assert(offsetof(FPropertyBag_660aecd93a39fa4e, RigVMModel___Multiply_Result) == 0x0003C8, "Member 'FPropertyBag_660aecd93a39fa4e::RigVMModel___Multiply_Result' has a wrong offset!");
static_assert(offsetof(FPropertyBag_660aecd93a39fa4e, RigVMModel___ModifyTransforms_1_ItemToModify__IO) == 0x0003D0, "Member 'FPropertyBag_660aecd93a39fa4e::RigVMModel___ModifyTransforms_1_ItemToModify__IO' has a wrong offset!");
static_assert(offsetof(FPropertyBag_660aecd93a39fa4e, RigVMModel___ModifyTransforms_1_WorkData) == 0x0003E0, "Member 'FPropertyBag_660aecd93a39fa4e::RigVMModel___ModifyTransforms_1_WorkData' has a wrong offset!");
static_assert(offsetof(FPropertyBag_660aecd93a39fa4e, RigVMModel___Add_1_Result) == 0x0003F0, "Member 'FPropertyBag_660aecd93a39fa4e::RigVMModel___Add_1_Result' has a wrong offset!");
static_assert(offsetof(FPropertyBag_660aecd93a39fa4e, RigVMModel___ModifyTransforms_1_1_ItemToModify__IO) == 0x0003F8, "Member 'FPropertyBag_660aecd93a39fa4e::RigVMModel___ModifyTransforms_1_1_ItemToModify__IO' has a wrong offset!");
static_assert(offsetof(FPropertyBag_660aecd93a39fa4e, RigVMModel___ModifyTransforms_1_1_WorkData) == 0x000408, "Member 'FPropertyBag_660aecd93a39fa4e::RigVMModel___ModifyTransforms_1_1_WorkData' has a wrong offset!");
static_assert(offsetof(FPropertyBag_660aecd93a39fa4e, RigVMModel___GetTransform_Transform) == 0x000420, "Member 'FPropertyBag_660aecd93a39fa4e::RigVMModel___GetTransform_Transform' has a wrong offset!");
static_assert(offsetof(FPropertyBag_660aecd93a39fa4e, RigVMModel___GetTransform_CachedIndex) == 0x000480, "Member 'FPropertyBag_660aecd93a39fa4e::RigVMModel___GetTransform_CachedIndex' has a wrong offset!");
static_assert(offsetof(FPropertyBag_660aecd93a39fa4e, RigVMModel___GetTransform_1_Transform) == 0x000490, "Member 'FPropertyBag_660aecd93a39fa4e::RigVMModel___GetTransform_1_Transform' has a wrong offset!");
static_assert(offsetof(FPropertyBag_660aecd93a39fa4e, RigVMModel___GetTransform_1_CachedIndex) == 0x0004F0, "Member 'FPropertyBag_660aecd93a39fa4e::RigVMModel___GetTransform_1_CachedIndex' has a wrong offset!");
static_assert(offsetof(FPropertyBag_660aecd93a39fa4e, RigVMModel___PBIK_Effectors__IO) == 0x000500, "Member 'FPropertyBag_660aecd93a39fa4e::RigVMModel___PBIK_Effectors__IO' has a wrong offset!");
static_assert(offsetof(FPropertyBag_660aecd93a39fa4e, RigVMModel___PBIK_EffectorSolverIndices) == 0x000510, "Member 'FPropertyBag_660aecd93a39fa4e::RigVMModel___PBIK_EffectorSolverIndices' has a wrong offset!");
static_assert(offsetof(FPropertyBag_660aecd93a39fa4e, RigVMModel___PBIK_WorkData) == 0x000520, "Member 'FPropertyBag_660aecd93a39fa4e::RigVMModel___PBIK_WorkData' has a wrong offset!");

// PropertyBag Transient.PropertyBag_bce9eef10228626
// 0x00C0 (0x00C0 - 0x0000)
struct FPropertyBag_bce9eef10228626 final
{
public:
	struct FTransform                             RigVMModel___RigUnit_VisualDebugTransformItemSpace_Value__Const; // 0x0000(0x0060)(Edit, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                RigVMModel___MathQuaternionFromEuler_Euler__Const; // 0x0060(0x0018)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatMul_A__Const;                // 0x0078(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___AlphaInterp_Scale__Const;             // 0x007C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___AlphaInterp_Bias__Const;              // 0x0080(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          RigVMModel___AlphaInterp_bMapRange__Const;         // 0x0084(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_85[0x3];                                       // 0x0085(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FInputRange                            RigVMModel___AlphaInterp_InRange__Const;           // 0x0088(0x0008)(Edit, NoDestructor)
	bool                                          RigVMModel___CollectionChainArray_Reverse__Const;  // 0x0090(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_91[0x3];                                       // 0x0091(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         RigVMModel___AlphaInterp_InterpSpeedIncreasing__Const; // 0x0094(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EEulerRotationOrder                           RigVMModel___MathQuaternionFromEuler_RotationOrder__Const; // 0x0098(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_99[0x3];                                       // 0x0099(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         RigVMModel___RigUnit_VisualDebugTransformItemSpace_Scale__Const; // 0x009C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRigElementKey                         RigVMModel___CollectionChainArray_FirstItem__Const; // 0x00A0(0x000C)(Edit, NoDestructor, HasGetValueTypeHash)
	struct FRigElementKey                         RigVMModel___CollectionChainArray_LastItem__Const; // 0x00AC(0x000C)(Edit, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FPropertyBag_bce9eef10228626) == 0x000010, "Wrong alignment on FPropertyBag_bce9eef10228626");
static_assert(sizeof(FPropertyBag_bce9eef10228626) == 0x0000C0, "Wrong size on FPropertyBag_bce9eef10228626");
static_assert(offsetof(FPropertyBag_bce9eef10228626, RigVMModel___RigUnit_VisualDebugTransformItemSpace_Value__Const) == 0x000000, "Member 'FPropertyBag_bce9eef10228626::RigVMModel___RigUnit_VisualDebugTransformItemSpace_Value__Const' has a wrong offset!");
static_assert(offsetof(FPropertyBag_bce9eef10228626, RigVMModel___MathQuaternionFromEuler_Euler__Const) == 0x000060, "Member 'FPropertyBag_bce9eef10228626::RigVMModel___MathQuaternionFromEuler_Euler__Const' has a wrong offset!");
static_assert(offsetof(FPropertyBag_bce9eef10228626, RigVMModel___MathFloatMul_A__Const) == 0x000078, "Member 'FPropertyBag_bce9eef10228626::RigVMModel___MathFloatMul_A__Const' has a wrong offset!");
static_assert(offsetof(FPropertyBag_bce9eef10228626, RigVMModel___AlphaInterp_Scale__Const) == 0x00007C, "Member 'FPropertyBag_bce9eef10228626::RigVMModel___AlphaInterp_Scale__Const' has a wrong offset!");
static_assert(offsetof(FPropertyBag_bce9eef10228626, RigVMModel___AlphaInterp_Bias__Const) == 0x000080, "Member 'FPropertyBag_bce9eef10228626::RigVMModel___AlphaInterp_Bias__Const' has a wrong offset!");
static_assert(offsetof(FPropertyBag_bce9eef10228626, RigVMModel___AlphaInterp_bMapRange__Const) == 0x000084, "Member 'FPropertyBag_bce9eef10228626::RigVMModel___AlphaInterp_bMapRange__Const' has a wrong offset!");
static_assert(offsetof(FPropertyBag_bce9eef10228626, RigVMModel___AlphaInterp_InRange__Const) == 0x000088, "Member 'FPropertyBag_bce9eef10228626::RigVMModel___AlphaInterp_InRange__Const' has a wrong offset!");
static_assert(offsetof(FPropertyBag_bce9eef10228626, RigVMModel___CollectionChainArray_Reverse__Const) == 0x000090, "Member 'FPropertyBag_bce9eef10228626::RigVMModel___CollectionChainArray_Reverse__Const' has a wrong offset!");
static_assert(offsetof(FPropertyBag_bce9eef10228626, RigVMModel___AlphaInterp_InterpSpeedIncreasing__Const) == 0x000094, "Member 'FPropertyBag_bce9eef10228626::RigVMModel___AlphaInterp_InterpSpeedIncreasing__Const' has a wrong offset!");
static_assert(offsetof(FPropertyBag_bce9eef10228626, RigVMModel___MathQuaternionFromEuler_RotationOrder__Const) == 0x000098, "Member 'FPropertyBag_bce9eef10228626::RigVMModel___MathQuaternionFromEuler_RotationOrder__Const' has a wrong offset!");
static_assert(offsetof(FPropertyBag_bce9eef10228626, RigVMModel___RigUnit_VisualDebugTransformItemSpace_Scale__Const) == 0x00009C, "Member 'FPropertyBag_bce9eef10228626::RigVMModel___RigUnit_VisualDebugTransformItemSpace_Scale__Const' has a wrong offset!");
static_assert(offsetof(FPropertyBag_bce9eef10228626, RigVMModel___CollectionChainArray_FirstItem__Const) == 0x0000A0, "Member 'FPropertyBag_bce9eef10228626::RigVMModel___CollectionChainArray_FirstItem__Const' has a wrong offset!");
static_assert(offsetof(FPropertyBag_bce9eef10228626, RigVMModel___CollectionChainArray_LastItem__Const) == 0x0000AC, "Member 'FPropertyBag_bce9eef10228626::RigVMModel___CollectionChainArray_LastItem__Const' has a wrong offset!");

// PropertyBag Transient.PropertyBag_4cc8a8b4ffe83f75
// 0x0238 (0x0238 - 0x0000)
struct FPropertyBag_4cc8a8b4ffe83f75 final
{
public:
	struct FRigElementKey                         RigVMModel___FootTrace_Ik_Foot_Bone__Const;        // 0x0000(0x000C)(Edit, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                LocalVariableDefault__FootTrace_AnimatedFloorLocation__Const; // 0x0010(0x0018)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                FootTrace___FootTrace_MathVectorAdd_A__Const;      // 0x0028(0x0018)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ERigVMTransformSpace                          FootTrace___FootTrace_GetTransform_Space__Const;   // 0x0040(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          FootTrace___FootTrace_GetTransform_bInitial__Const; // 0x0041(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_42[0x2];                                       // 0x0042(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         FootTrace___FootTrace_MathFloatAdd_B__Const;       // 0x0044(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRigElementKey                         FootTrace___FootTrace_GetTransform_1_Item__Const;  // 0x0048(0x000C)(Edit, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_54[0x4];                                       // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                FootTrace___FootTrace_MathVectorAdd_B__Const;      // 0x0058(0x0018)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          FootTrace___FootTrace_RigUnit_VisualDebugVectorItemSpace_1_bEnabled__Const; // 0x0070(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ERigUnitVisualDebugPointMode                  FootTrace___FootTrace_RigUnit_VisualDebugVectorItemSpace_1_Mode__Const; // 0x0071(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_72[0x2];                                       // 0x0072(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           FootTrace___FootTrace_RigUnit_VisualDebugVectorItemSpace_1_Color__Const; // 0x0074(0x0010)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         FootTrace___FootTrace_RigUnit_VisualDebugVectorItemSpace_1_Thickness__Const; // 0x0084(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         FootTrace___FootTrace_RigUnit_VisualDebugVectorItemSpace_1_Scale__Const; // 0x0088(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8C[0x4];                                       // 0x008C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                FootTrace___FootTrace_MathVectorSub_B__Const;      // 0x0090(0x0018)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ERigUnitVisualDebugPointMode                  FootTrace___FootTrace_RigUnit_VisualDebugVectorItemSpace_2_Mode__Const; // 0x00A8(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETraceTypeQuery                               FootTrace___FootTrace_SphereTraceByTraceChannel_TraceChannel__Const; // 0x00A9(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_AA[0x2];                                       // 0x00AA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         FootTrace___FootTrace_SphereTraceByTraceChannel_Radius__Const; // 0x00AC(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ERigUnitVisualDebugPointMode                  FootTrace___FootTrace_RigUnit_VisualDebugVectorItemSpace_Mode__Const; // 0x00B0(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B1[0x3];                                       // 0x00B1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRigElementKey                         RigVMModel___FootTrace_1_Ik_Foot_Bone__Const;      // 0x00B4(0x000C)(Edit, NoDestructor, HasGetValueTypeHash)
	struct FVector                                FootTrace_1___FootTrace_MathVectorAdd_A__Const;    // 0x00C0(0x0018)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ERigVMTransformSpace                          FootTrace_1___FootTrace_GetTransform_Space__Const; // 0x00D8(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          FootTrace_1___FootTrace_GetTransform_bInitial__Const; // 0x00D9(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_DA[0x2];                                       // 0x00DA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         FootTrace_1___FootTrace_MathFloatAdd_B__Const;     // 0x00DC(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRigElementKey                         FootTrace_1___FootTrace_GetTransform_1_Item__Const; // 0x00E0(0x000C)(Edit, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_EC[0x4];                                       // 0x00EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                FootTrace_1___FootTrace_MathVectorAdd_B__Const;    // 0x00F0(0x0018)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          FootTrace_1___FootTrace_RigUnit_VisualDebugVectorItemSpace_1_bEnabled__Const; // 0x0108(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ERigUnitVisualDebugPointMode                  FootTrace_1___FootTrace_RigUnit_VisualDebugVectorItemSpace_1_Mode__Const; // 0x0109(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_10A[0x2];                                      // 0x010A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           FootTrace_1___FootTrace_RigUnit_VisualDebugVectorItemSpace_1_Color__Const; // 0x010C(0x0010)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         FootTrace_1___FootTrace_RigUnit_VisualDebugVectorItemSpace_1_Thickness__Const; // 0x011C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         FootTrace_1___FootTrace_RigUnit_VisualDebugVectorItemSpace_1_Scale__Const; // 0x0120(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_124[0x4];                                      // 0x0124(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                FootTrace_1___FootTrace_MathVectorSub_B__Const;    // 0x0128(0x0018)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ERigUnitVisualDebugPointMode                  FootTrace_1___FootTrace_RigUnit_VisualDebugVectorItemSpace_2_Mode__Const; // 0x0140(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETraceTypeQuery                               FootTrace_1___FootTrace_SphereTraceByTraceChannel_TraceChannel__Const; // 0x0141(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_142[0x2];                                      // 0x0142(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         FootTrace_1___FootTrace_SphereTraceByTraceChannel_Radius__Const; // 0x0144(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ERigUnitVisualDebugPointMode                  FootTrace_1___FootTrace_RigUnit_VisualDebugVectorItemSpace_Mode__Const; // 0x0148(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_149[0x7];                                      // 0x0149(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        RigVMModel___VariableNode_9_Value__Const;          // 0x0150(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___AlphaInterp_Scale__Const;             // 0x0158(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___AlphaInterp_Bias__Const;              // 0x015C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          RigVMModel___AlphaInterp_bMapRange__Const;         // 0x0160(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_161[0x3];                                      // 0x0161(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FInputRange                            RigVMModel___AlphaInterp_InRange__Const;           // 0x0164(0x0008)(Edit, NoDestructor)
	bool                                          RigVMModel___AlphaInterp_bInterpResult__Const;     // 0x016C(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_16D[0x3];                                      // 0x016D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         RigVMModel___AlphaInterp_InterpSpeedIncreasing__Const; // 0x0170(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_174[0x4];                                      // 0x0174(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FRigUnit_ModifyTransforms_PerItem> RigVMModel___ModifyTransforms_ItemToModify__Const; // 0x0178(0x0010)(Edit)
	EControlRigModifyBoneMode                     RigVMModel___ModifyTransforms_Mode__Const;         // 0x0188(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_189[0x7];                                      // 0x0189(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FRigUnit_ModifyTransforms_PerItem> RigVMModel___ModifyTransforms_1_ItemToModify__Const; // 0x0190(0x0010)(Edit)
	double                                        RigVMModel___Multiply_B__Const;                    // 0x01A0(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FRigUnit_ModifyTransforms_PerItem> RigVMModel___ModifyTransforms_1_1_ItemToModify__Const; // 0x01A8(0x0010)(Edit)
	TArray<struct FPBIKEffector>                  RigVMModel___PBIK_Effectors__Const;                // 0x01B8(0x0010)(Edit)
	ERigVMTransformSpace                          RigVMModel___GetTransform_Space__Const;            // 0x01C8(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C9[0x7];                                      // 0x01C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FPBIKBoneSetting>               RigVMModel___PBIK_BoneSettings__Const;             // 0x01D0(0x0010)(Edit)
	TArray<class FName>                           RigVMModel___PBIK_ExcludedBones__Const;            // 0x01E0(0x0010)(Edit)
	struct FPBIKSolverSettings                    RigVMModel___PBIK_Settings__Const;                 // 0x01F0(0x0040)(Edit, NoDestructor)
	struct FPBIKDebug                             RigVMModel___PBIK_Debug__Const;                    // 0x0230(0x0008)(Edit, NoDestructor)
};
static_assert(alignof(FPropertyBag_4cc8a8b4ffe83f75) == 0x000008, "Wrong alignment on FPropertyBag_4cc8a8b4ffe83f75");
static_assert(sizeof(FPropertyBag_4cc8a8b4ffe83f75) == 0x000238, "Wrong size on FPropertyBag_4cc8a8b4ffe83f75");
static_assert(offsetof(FPropertyBag_4cc8a8b4ffe83f75, RigVMModel___FootTrace_Ik_Foot_Bone__Const) == 0x000000, "Member 'FPropertyBag_4cc8a8b4ffe83f75::RigVMModel___FootTrace_Ik_Foot_Bone__Const' has a wrong offset!");
static_assert(offsetof(FPropertyBag_4cc8a8b4ffe83f75, LocalVariableDefault__FootTrace_AnimatedFloorLocation__Const) == 0x000010, "Member 'FPropertyBag_4cc8a8b4ffe83f75::LocalVariableDefault__FootTrace_AnimatedFloorLocation__Const' has a wrong offset!");
static_assert(offsetof(FPropertyBag_4cc8a8b4ffe83f75, FootTrace___FootTrace_MathVectorAdd_A__Const) == 0x000028, "Member 'FPropertyBag_4cc8a8b4ffe83f75::FootTrace___FootTrace_MathVectorAdd_A__Const' has a wrong offset!");
static_assert(offsetof(FPropertyBag_4cc8a8b4ffe83f75, FootTrace___FootTrace_GetTransform_Space__Const) == 0x000040, "Member 'FPropertyBag_4cc8a8b4ffe83f75::FootTrace___FootTrace_GetTransform_Space__Const' has a wrong offset!");
static_assert(offsetof(FPropertyBag_4cc8a8b4ffe83f75, FootTrace___FootTrace_GetTransform_bInitial__Const) == 0x000041, "Member 'FPropertyBag_4cc8a8b4ffe83f75::FootTrace___FootTrace_GetTransform_bInitial__Const' has a wrong offset!");
static_assert(offsetof(FPropertyBag_4cc8a8b4ffe83f75, FootTrace___FootTrace_MathFloatAdd_B__Const) == 0x000044, "Member 'FPropertyBag_4cc8a8b4ffe83f75::FootTrace___FootTrace_MathFloatAdd_B__Const' has a wrong offset!");
static_assert(offsetof(FPropertyBag_4cc8a8b4ffe83f75, FootTrace___FootTrace_GetTransform_1_Item__Const) == 0x000048, "Member 'FPropertyBag_4cc8a8b4ffe83f75::FootTrace___FootTrace_GetTransform_1_Item__Const' has a wrong offset!");
static_assert(offsetof(FPropertyBag_4cc8a8b4ffe83f75, FootTrace___FootTrace_MathVectorAdd_B__Const) == 0x000058, "Member 'FPropertyBag_4cc8a8b4ffe83f75::FootTrace___FootTrace_MathVectorAdd_B__Const' has a wrong offset!");
static_assert(offsetof(FPropertyBag_4cc8a8b4ffe83f75, FootTrace___FootTrace_RigUnit_VisualDebugVectorItemSpace_1_bEnabled__Const) == 0x000070, "Member 'FPropertyBag_4cc8a8b4ffe83f75::FootTrace___FootTrace_RigUnit_VisualDebugVectorItemSpace_1_bEnabled__Const' has a wrong offset!");
static_assert(offsetof(FPropertyBag_4cc8a8b4ffe83f75, FootTrace___FootTrace_RigUnit_VisualDebugVectorItemSpace_1_Mode__Const) == 0x000071, "Member 'FPropertyBag_4cc8a8b4ffe83f75::FootTrace___FootTrace_RigUnit_VisualDebugVectorItemSpace_1_Mode__Const' has a wrong offset!");
static_assert(offsetof(FPropertyBag_4cc8a8b4ffe83f75, FootTrace___FootTrace_RigUnit_VisualDebugVectorItemSpace_1_Color__Const) == 0x000074, "Member 'FPropertyBag_4cc8a8b4ffe83f75::FootTrace___FootTrace_RigUnit_VisualDebugVectorItemSpace_1_Color__Const' has a wrong offset!");
static_assert(offsetof(FPropertyBag_4cc8a8b4ffe83f75, FootTrace___FootTrace_RigUnit_VisualDebugVectorItemSpace_1_Thickness__Const) == 0x000084, "Member 'FPropertyBag_4cc8a8b4ffe83f75::FootTrace___FootTrace_RigUnit_VisualDebugVectorItemSpace_1_Thickness__Const' has a wrong offset!");
static_assert(offsetof(FPropertyBag_4cc8a8b4ffe83f75, FootTrace___FootTrace_RigUnit_VisualDebugVectorItemSpace_1_Scale__Const) == 0x000088, "Member 'FPropertyBag_4cc8a8b4ffe83f75::FootTrace___FootTrace_RigUnit_VisualDebugVectorItemSpace_1_Scale__Const' has a wrong offset!");
static_assert(offsetof(FPropertyBag_4cc8a8b4ffe83f75, FootTrace___FootTrace_MathVectorSub_B__Const) == 0x000090, "Member 'FPropertyBag_4cc8a8b4ffe83f75::FootTrace___FootTrace_MathVectorSub_B__Const' has a wrong offset!");
static_assert(offsetof(FPropertyBag_4cc8a8b4ffe83f75, FootTrace___FootTrace_RigUnit_VisualDebugVectorItemSpace_2_Mode__Const) == 0x0000A8, "Member 'FPropertyBag_4cc8a8b4ffe83f75::FootTrace___FootTrace_RigUnit_VisualDebugVectorItemSpace_2_Mode__Const' has a wrong offset!");
static_assert(offsetof(FPropertyBag_4cc8a8b4ffe83f75, FootTrace___FootTrace_SphereTraceByTraceChannel_TraceChannel__Const) == 0x0000A9, "Member 'FPropertyBag_4cc8a8b4ffe83f75::FootTrace___FootTrace_SphereTraceByTraceChannel_TraceChannel__Const' has a wrong offset!");
static_assert(offsetof(FPropertyBag_4cc8a8b4ffe83f75, FootTrace___FootTrace_SphereTraceByTraceChannel_Radius__Const) == 0x0000AC, "Member 'FPropertyBag_4cc8a8b4ffe83f75::FootTrace___FootTrace_SphereTraceByTraceChannel_Radius__Const' has a wrong offset!");
static_assert(offsetof(FPropertyBag_4cc8a8b4ffe83f75, FootTrace___FootTrace_RigUnit_VisualDebugVectorItemSpace_Mode__Const) == 0x0000B0, "Member 'FPropertyBag_4cc8a8b4ffe83f75::FootTrace___FootTrace_RigUnit_VisualDebugVectorItemSpace_Mode__Const' has a wrong offset!");
static_assert(offsetof(FPropertyBag_4cc8a8b4ffe83f75, RigVMModel___FootTrace_1_Ik_Foot_Bone__Const) == 0x0000B4, "Member 'FPropertyBag_4cc8a8b4ffe83f75::RigVMModel___FootTrace_1_Ik_Foot_Bone__Const' has a wrong offset!");
static_assert(offsetof(FPropertyBag_4cc8a8b4ffe83f75, FootTrace_1___FootTrace_MathVectorAdd_A__Const) == 0x0000C0, "Member 'FPropertyBag_4cc8a8b4ffe83f75::FootTrace_1___FootTrace_MathVectorAdd_A__Const' has a wrong offset!");
static_assert(offsetof(FPropertyBag_4cc8a8b4ffe83f75, FootTrace_1___FootTrace_GetTransform_Space__Const) == 0x0000D8, "Member 'FPropertyBag_4cc8a8b4ffe83f75::FootTrace_1___FootTrace_GetTransform_Space__Const' has a wrong offset!");
static_assert(offsetof(FPropertyBag_4cc8a8b4ffe83f75, FootTrace_1___FootTrace_GetTransform_bInitial__Const) == 0x0000D9, "Member 'FPropertyBag_4cc8a8b4ffe83f75::FootTrace_1___FootTrace_GetTransform_bInitial__Const' has a wrong offset!");
static_assert(offsetof(FPropertyBag_4cc8a8b4ffe83f75, FootTrace_1___FootTrace_MathFloatAdd_B__Const) == 0x0000DC, "Member 'FPropertyBag_4cc8a8b4ffe83f75::FootTrace_1___FootTrace_MathFloatAdd_B__Const' has a wrong offset!");
static_assert(offsetof(FPropertyBag_4cc8a8b4ffe83f75, FootTrace_1___FootTrace_GetTransform_1_Item__Const) == 0x0000E0, "Member 'FPropertyBag_4cc8a8b4ffe83f75::FootTrace_1___FootTrace_GetTransform_1_Item__Const' has a wrong offset!");
static_assert(offsetof(FPropertyBag_4cc8a8b4ffe83f75, FootTrace_1___FootTrace_MathVectorAdd_B__Const) == 0x0000F0, "Member 'FPropertyBag_4cc8a8b4ffe83f75::FootTrace_1___FootTrace_MathVectorAdd_B__Const' has a wrong offset!");
static_assert(offsetof(FPropertyBag_4cc8a8b4ffe83f75, FootTrace_1___FootTrace_RigUnit_VisualDebugVectorItemSpace_1_bEnabled__Const) == 0x000108, "Member 'FPropertyBag_4cc8a8b4ffe83f75::FootTrace_1___FootTrace_RigUnit_VisualDebugVectorItemSpace_1_bEnabled__Const' has a wrong offset!");
static_assert(offsetof(FPropertyBag_4cc8a8b4ffe83f75, FootTrace_1___FootTrace_RigUnit_VisualDebugVectorItemSpace_1_Mode__Const) == 0x000109, "Member 'FPropertyBag_4cc8a8b4ffe83f75::FootTrace_1___FootTrace_RigUnit_VisualDebugVectorItemSpace_1_Mode__Const' has a wrong offset!");
static_assert(offsetof(FPropertyBag_4cc8a8b4ffe83f75, FootTrace_1___FootTrace_RigUnit_VisualDebugVectorItemSpace_1_Color__Const) == 0x00010C, "Member 'FPropertyBag_4cc8a8b4ffe83f75::FootTrace_1___FootTrace_RigUnit_VisualDebugVectorItemSpace_1_Color__Const' has a wrong offset!");
static_assert(offsetof(FPropertyBag_4cc8a8b4ffe83f75, FootTrace_1___FootTrace_RigUnit_VisualDebugVectorItemSpace_1_Thickness__Const) == 0x00011C, "Member 'FPropertyBag_4cc8a8b4ffe83f75::FootTrace_1___FootTrace_RigUnit_VisualDebugVectorItemSpace_1_Thickness__Const' has a wrong offset!");
static_assert(offsetof(FPropertyBag_4cc8a8b4ffe83f75, FootTrace_1___FootTrace_RigUnit_VisualDebugVectorItemSpace_1_Scale__Const) == 0x000120, "Member 'FPropertyBag_4cc8a8b4ffe83f75::FootTrace_1___FootTrace_RigUnit_VisualDebugVectorItemSpace_1_Scale__Const' has a wrong offset!");
static_assert(offsetof(FPropertyBag_4cc8a8b4ffe83f75, FootTrace_1___FootTrace_MathVectorSub_B__Const) == 0x000128, "Member 'FPropertyBag_4cc8a8b4ffe83f75::FootTrace_1___FootTrace_MathVectorSub_B__Const' has a wrong offset!");
static_assert(offsetof(FPropertyBag_4cc8a8b4ffe83f75, FootTrace_1___FootTrace_RigUnit_VisualDebugVectorItemSpace_2_Mode__Const) == 0x000140, "Member 'FPropertyBag_4cc8a8b4ffe83f75::FootTrace_1___FootTrace_RigUnit_VisualDebugVectorItemSpace_2_Mode__Const' has a wrong offset!");
static_assert(offsetof(FPropertyBag_4cc8a8b4ffe83f75, FootTrace_1___FootTrace_SphereTraceByTraceChannel_TraceChannel__Const) == 0x000141, "Member 'FPropertyBag_4cc8a8b4ffe83f75::FootTrace_1___FootTrace_SphereTraceByTraceChannel_TraceChannel__Const' has a wrong offset!");
static_assert(offsetof(FPropertyBag_4cc8a8b4ffe83f75, FootTrace_1___FootTrace_SphereTraceByTraceChannel_Radius__Const) == 0x000144, "Member 'FPropertyBag_4cc8a8b4ffe83f75::FootTrace_1___FootTrace_SphereTraceByTraceChannel_Radius__Const' has a wrong offset!");
static_assert(offsetof(FPropertyBag_4cc8a8b4ffe83f75, FootTrace_1___FootTrace_RigUnit_VisualDebugVectorItemSpace_Mode__Const) == 0x000148, "Member 'FPropertyBag_4cc8a8b4ffe83f75::FootTrace_1___FootTrace_RigUnit_VisualDebugVectorItemSpace_Mode__Const' has a wrong offset!");
static_assert(offsetof(FPropertyBag_4cc8a8b4ffe83f75, RigVMModel___VariableNode_9_Value__Const) == 0x000150, "Member 'FPropertyBag_4cc8a8b4ffe83f75::RigVMModel___VariableNode_9_Value__Const' has a wrong offset!");
static_assert(offsetof(FPropertyBag_4cc8a8b4ffe83f75, RigVMModel___AlphaInterp_Scale__Const) == 0x000158, "Member 'FPropertyBag_4cc8a8b4ffe83f75::RigVMModel___AlphaInterp_Scale__Const' has a wrong offset!");
static_assert(offsetof(FPropertyBag_4cc8a8b4ffe83f75, RigVMModel___AlphaInterp_Bias__Const) == 0x00015C, "Member 'FPropertyBag_4cc8a8b4ffe83f75::RigVMModel___AlphaInterp_Bias__Const' has a wrong offset!");
static_assert(offsetof(FPropertyBag_4cc8a8b4ffe83f75, RigVMModel___AlphaInterp_bMapRange__Const) == 0x000160, "Member 'FPropertyBag_4cc8a8b4ffe83f75::RigVMModel___AlphaInterp_bMapRange__Const' has a wrong offset!");
static_assert(offsetof(FPropertyBag_4cc8a8b4ffe83f75, RigVMModel___AlphaInterp_InRange__Const) == 0x000164, "Member 'FPropertyBag_4cc8a8b4ffe83f75::RigVMModel___AlphaInterp_InRange__Const' has a wrong offset!");
static_assert(offsetof(FPropertyBag_4cc8a8b4ffe83f75, RigVMModel___AlphaInterp_bInterpResult__Const) == 0x00016C, "Member 'FPropertyBag_4cc8a8b4ffe83f75::RigVMModel___AlphaInterp_bInterpResult__Const' has a wrong offset!");
static_assert(offsetof(FPropertyBag_4cc8a8b4ffe83f75, RigVMModel___AlphaInterp_InterpSpeedIncreasing__Const) == 0x000170, "Member 'FPropertyBag_4cc8a8b4ffe83f75::RigVMModel___AlphaInterp_InterpSpeedIncreasing__Const' has a wrong offset!");
static_assert(offsetof(FPropertyBag_4cc8a8b4ffe83f75, RigVMModel___ModifyTransforms_ItemToModify__Const) == 0x000178, "Member 'FPropertyBag_4cc8a8b4ffe83f75::RigVMModel___ModifyTransforms_ItemToModify__Const' has a wrong offset!");
static_assert(offsetof(FPropertyBag_4cc8a8b4ffe83f75, RigVMModel___ModifyTransforms_Mode__Const) == 0x000188, "Member 'FPropertyBag_4cc8a8b4ffe83f75::RigVMModel___ModifyTransforms_Mode__Const' has a wrong offset!");
static_assert(offsetof(FPropertyBag_4cc8a8b4ffe83f75, RigVMModel___ModifyTransforms_1_ItemToModify__Const) == 0x000190, "Member 'FPropertyBag_4cc8a8b4ffe83f75::RigVMModel___ModifyTransforms_1_ItemToModify__Const' has a wrong offset!");
static_assert(offsetof(FPropertyBag_4cc8a8b4ffe83f75, RigVMModel___Multiply_B__Const) == 0x0001A0, "Member 'FPropertyBag_4cc8a8b4ffe83f75::RigVMModel___Multiply_B__Const' has a wrong offset!");
static_assert(offsetof(FPropertyBag_4cc8a8b4ffe83f75, RigVMModel___ModifyTransforms_1_1_ItemToModify__Const) == 0x0001A8, "Member 'FPropertyBag_4cc8a8b4ffe83f75::RigVMModel___ModifyTransforms_1_1_ItemToModify__Const' has a wrong offset!");
static_assert(offsetof(FPropertyBag_4cc8a8b4ffe83f75, RigVMModel___PBIK_Effectors__Const) == 0x0001B8, "Member 'FPropertyBag_4cc8a8b4ffe83f75::RigVMModel___PBIK_Effectors__Const' has a wrong offset!");
static_assert(offsetof(FPropertyBag_4cc8a8b4ffe83f75, RigVMModel___GetTransform_Space__Const) == 0x0001C8, "Member 'FPropertyBag_4cc8a8b4ffe83f75::RigVMModel___GetTransform_Space__Const' has a wrong offset!");
static_assert(offsetof(FPropertyBag_4cc8a8b4ffe83f75, RigVMModel___PBIK_BoneSettings__Const) == 0x0001D0, "Member 'FPropertyBag_4cc8a8b4ffe83f75::RigVMModel___PBIK_BoneSettings__Const' has a wrong offset!");
static_assert(offsetof(FPropertyBag_4cc8a8b4ffe83f75, RigVMModel___PBIK_ExcludedBones__Const) == 0x0001E0, "Member 'FPropertyBag_4cc8a8b4ffe83f75::RigVMModel___PBIK_ExcludedBones__Const' has a wrong offset!");
static_assert(offsetof(FPropertyBag_4cc8a8b4ffe83f75, RigVMModel___PBIK_Settings__Const) == 0x0001F0, "Member 'FPropertyBag_4cc8a8b4ffe83f75::RigVMModel___PBIK_Settings__Const' has a wrong offset!");
static_assert(offsetof(FPropertyBag_4cc8a8b4ffe83f75, RigVMModel___PBIK_Debug__Const) == 0x000230, "Member 'FPropertyBag_4cc8a8b4ffe83f75::RigVMModel___PBIK_Debug__Const' has a wrong offset!");

// PropertyBag Transient.PropertyBag_270ece7ae9542e6f
// 0x0110 (0x0110 - 0x0000)
struct FPropertyBag_270ece7ae9542e6f final
{
public:
	struct FRigElementKey                         RigVMModel___ArrayIterator_Element;                // 0x0000(0x000C)(Edit, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FQuat                                  RigVMModel___MathQuaternionFromEuler_Result;       // 0x0010(0x0020)(Edit, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___AlphaInterp_Result;                   // 0x0030(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatMul_Result;                  // 0x0034(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathFloatMul_B;                       // 0x0038(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FInputScaleBiasClamp>           RigVMModel___AlphaInterp_ScaleBiasClamp;           // 0x0040(0x0010)(Edit)
	struct FVector                                RigVMModel___MathQuaternionFromEuler_Euler__IO;    // 0x0050(0x0018)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_68[0x8];                                       // 0x0068(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             RigVMModel___RigUnit_VisualDebugTransformItemSpace_Value__IO; // 0x0070(0x0060)(Edit, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              RigVMModel___OffsetTransformForItem_CachedIndex;   // 0x00D0(0x0010)(Edit)
	TArray<struct FRigElementKey>                 RigVMModel___CollectionChainArray_Items;           // 0x00E0(0x0010)(Edit)
	int32                                         RigVMModel___ArrayIterator_Index;                  // 0x00F0(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         RigVMModel___ArrayIterator_Count;                  // 0x00F4(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___ArrayIterator_Ratio;                  // 0x00F8(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   RigVMModel___ArrayIterator_BlockToRun;             // 0x00FC(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FPropertyBag_270ece7ae9542e6f) == 0x000010, "Wrong alignment on FPropertyBag_270ece7ae9542e6f");
static_assert(sizeof(FPropertyBag_270ece7ae9542e6f) == 0x000110, "Wrong size on FPropertyBag_270ece7ae9542e6f");
static_assert(offsetof(FPropertyBag_270ece7ae9542e6f, RigVMModel___ArrayIterator_Element) == 0x000000, "Member 'FPropertyBag_270ece7ae9542e6f::RigVMModel___ArrayIterator_Element' has a wrong offset!");
static_assert(offsetof(FPropertyBag_270ece7ae9542e6f, RigVMModel___MathQuaternionFromEuler_Result) == 0x000010, "Member 'FPropertyBag_270ece7ae9542e6f::RigVMModel___MathQuaternionFromEuler_Result' has a wrong offset!");
static_assert(offsetof(FPropertyBag_270ece7ae9542e6f, RigVMModel___AlphaInterp_Result) == 0x000030, "Member 'FPropertyBag_270ece7ae9542e6f::RigVMModel___AlphaInterp_Result' has a wrong offset!");
static_assert(offsetof(FPropertyBag_270ece7ae9542e6f, RigVMModel___MathFloatMul_Result) == 0x000034, "Member 'FPropertyBag_270ece7ae9542e6f::RigVMModel___MathFloatMul_Result' has a wrong offset!");
static_assert(offsetof(FPropertyBag_270ece7ae9542e6f, RigVMModel___MathFloatMul_B) == 0x000038, "Member 'FPropertyBag_270ece7ae9542e6f::RigVMModel___MathFloatMul_B' has a wrong offset!");
static_assert(offsetof(FPropertyBag_270ece7ae9542e6f, RigVMModel___AlphaInterp_ScaleBiasClamp) == 0x000040, "Member 'FPropertyBag_270ece7ae9542e6f::RigVMModel___AlphaInterp_ScaleBiasClamp' has a wrong offset!");
static_assert(offsetof(FPropertyBag_270ece7ae9542e6f, RigVMModel___MathQuaternionFromEuler_Euler__IO) == 0x000050, "Member 'FPropertyBag_270ece7ae9542e6f::RigVMModel___MathQuaternionFromEuler_Euler__IO' has a wrong offset!");
static_assert(offsetof(FPropertyBag_270ece7ae9542e6f, RigVMModel___RigUnit_VisualDebugTransformItemSpace_Value__IO) == 0x000070, "Member 'FPropertyBag_270ece7ae9542e6f::RigVMModel___RigUnit_VisualDebugTransformItemSpace_Value__IO' has a wrong offset!");
static_assert(offsetof(FPropertyBag_270ece7ae9542e6f, RigVMModel___OffsetTransformForItem_CachedIndex) == 0x0000D0, "Member 'FPropertyBag_270ece7ae9542e6f::RigVMModel___OffsetTransformForItem_CachedIndex' has a wrong offset!");
static_assert(offsetof(FPropertyBag_270ece7ae9542e6f, RigVMModel___CollectionChainArray_Items) == 0x0000E0, "Member 'FPropertyBag_270ece7ae9542e6f::RigVMModel___CollectionChainArray_Items' has a wrong offset!");
static_assert(offsetof(FPropertyBag_270ece7ae9542e6f, RigVMModel___ArrayIterator_Index) == 0x0000F0, "Member 'FPropertyBag_270ece7ae9542e6f::RigVMModel___ArrayIterator_Index' has a wrong offset!");
static_assert(offsetof(FPropertyBag_270ece7ae9542e6f, RigVMModel___ArrayIterator_Count) == 0x0000F4, "Member 'FPropertyBag_270ece7ae9542e6f::RigVMModel___ArrayIterator_Count' has a wrong offset!");
static_assert(offsetof(FPropertyBag_270ece7ae9542e6f, RigVMModel___ArrayIterator_Ratio) == 0x0000F8, "Member 'FPropertyBag_270ece7ae9542e6f::RigVMModel___ArrayIterator_Ratio' has a wrong offset!");
static_assert(offsetof(FPropertyBag_270ece7ae9542e6f, RigVMModel___ArrayIterator_BlockToRun) == 0x0000FC, "Member 'FPropertyBag_270ece7ae9542e6f::RigVMModel___ArrayIterator_BlockToRun' has a wrong offset!");

// PropertyBag Transient.PropertyBag_4cba25cd0f0867e8
// 0x01E0 (0x01E0 - 0x0000)
struct FPropertyBag_4cba25cd0f0867e8 final
{
public:
	struct FRigElementKey                         RigVMModel___ParentConstraint_Child__Const;        // 0x0000(0x000C)(Edit, NoDestructor, HasGetValueTypeHash)
	bool                                          RigVMModel___ParentConstraint_bMaintainOffset__Const; // 0x000C(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransformFilter                       RigVMModel___ParentConstraint_Filter__Const;       // 0x000D(0x0009)(Edit, NoDestructor)
	uint8                                         Pad_16[0x2];                                       // 0x0016(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FConstraintParent>              RigVMModel___ParentConstraint_Parents__Const;      // 0x0018(0x0010)(Edit)
	struct FRigUnit_ParentConstraint_AdvancedSettings RigVMModel___ParentConstraint_AdvancedSettings__Const; // 0x0028(0x0002)(Edit, NoDestructor)
	uint8                                         Pad_2A[0x2];                                       // 0x002A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         RigVMModel___ParentConstraint_Weight__Const;       // 0x002C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRigElementKey                         RigVMModel___ParentConstraint_1_Child__Const;      // 0x0030(0x000C)(Edit, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FConstraintParent>              RigVMModel___ParentConstraint_1_Parents__Const;    // 0x0040(0x0010)(Edit)
	struct FRigElementKey                         RigVMModel___AimConstraintLocalSpaceOffset_1_Child__Const; // 0x0050(0x000C)(Edit, NoDestructor, HasGetValueTypeHash)
	bool                                          RigVMModel___AimConstraintLocalSpaceOffset_1_bMaintainOffset__Const; // 0x005C(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFilterOptionPerAxis                   RigVMModel___AimConstraintLocalSpaceOffset_1_Filter__Const; // 0x005D(0x0003)(Edit, NoDestructor)
	struct FVector                                RigVMModel___AimConstraintLocalSpaceOffset_1_AimAxis__Const; // 0x0060(0x0018)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                RigVMModel___AimConstraintLocalSpaceOffset_1_UpAxis__Const; // 0x0078(0x0018)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRigUnit_AimConstraint_WorldUp         RigVMModel___AimConstraintLocalSpaceOffset_1_WorldUp__Const; // 0x0090(0x0028)(Edit, NoDestructor)
	TArray<struct FConstraintParent>              RigVMModel___AimConstraintLocalSpaceOffset_1_Parents__Const; // 0x00B8(0x0010)(Edit)
	uint8                                         Pad_C8[0x8];                                       // 0x00C8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRigUnit_AimConstraint_AdvancedSettings RigVMModel___AimConstraintLocalSpaceOffset_1_AdvancedSettings__Const; // 0x00D0(0x0080)(Edit, NoDestructor)
	struct FRigElementKey                         RigVMModel___AimConstraintLocalSpaceOffset_1_1_Child__Const; // 0x0150(0x000C)(Edit, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_15C[0x4];                                      // 0x015C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                RigVMModel___AimConstraintLocalSpaceOffset_1_1_AimAxis__Const; // 0x0160(0x0018)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FConstraintParent>              RigVMModel___AimConstraintLocalSpaceOffset_1_1_Parents__Const; // 0x0178(0x0010)(Edit)
	struct FRigElementKey                         RigVMModel___ParentConstraint_2_Child__Const;      // 0x0188(0x000C)(Edit, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_194[0x4];                                      // 0x0194(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FConstraintParent>              RigVMModel___ParentConstraint_2_Parents__Const;    // 0x0198(0x0010)(Edit)
	struct FRigElementKey                         RigVMModel___ParentConstraint_2_1_Child__Const;    // 0x01A8(0x000C)(Edit, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B4[0x4];                                      // 0x01B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FConstraintParent>              RigVMModel___ParentConstraint_2_1_Parents__Const;  // 0x01B8(0x0010)(Edit)
	struct FRigElementKey                         RigVMModel___ParentConstraint_3_Child__Const;      // 0x01C8(0x000C)(Edit, NoDestructor, HasGetValueTypeHash)
	struct FRigElementKey                         RigVMModel___ParentConstraint_3_1_Child__Const;    // 0x01D4(0x000C)(Edit, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FPropertyBag_4cba25cd0f0867e8) == 0x000010, "Wrong alignment on FPropertyBag_4cba25cd0f0867e8");
static_assert(sizeof(FPropertyBag_4cba25cd0f0867e8) == 0x0001E0, "Wrong size on FPropertyBag_4cba25cd0f0867e8");
static_assert(offsetof(FPropertyBag_4cba25cd0f0867e8, RigVMModel___ParentConstraint_Child__Const) == 0x000000, "Member 'FPropertyBag_4cba25cd0f0867e8::RigVMModel___ParentConstraint_Child__Const' has a wrong offset!");
static_assert(offsetof(FPropertyBag_4cba25cd0f0867e8, RigVMModel___ParentConstraint_bMaintainOffset__Const) == 0x00000C, "Member 'FPropertyBag_4cba25cd0f0867e8::RigVMModel___ParentConstraint_bMaintainOffset__Const' has a wrong offset!");
static_assert(offsetof(FPropertyBag_4cba25cd0f0867e8, RigVMModel___ParentConstraint_Filter__Const) == 0x00000D, "Member 'FPropertyBag_4cba25cd0f0867e8::RigVMModel___ParentConstraint_Filter__Const' has a wrong offset!");
static_assert(offsetof(FPropertyBag_4cba25cd0f0867e8, RigVMModel___ParentConstraint_Parents__Const) == 0x000018, "Member 'FPropertyBag_4cba25cd0f0867e8::RigVMModel___ParentConstraint_Parents__Const' has a wrong offset!");
static_assert(offsetof(FPropertyBag_4cba25cd0f0867e8, RigVMModel___ParentConstraint_AdvancedSettings__Const) == 0x000028, "Member 'FPropertyBag_4cba25cd0f0867e8::RigVMModel___ParentConstraint_AdvancedSettings__Const' has a wrong offset!");
static_assert(offsetof(FPropertyBag_4cba25cd0f0867e8, RigVMModel___ParentConstraint_Weight__Const) == 0x00002C, "Member 'FPropertyBag_4cba25cd0f0867e8::RigVMModel___ParentConstraint_Weight__Const' has a wrong offset!");
static_assert(offsetof(FPropertyBag_4cba25cd0f0867e8, RigVMModel___ParentConstraint_1_Child__Const) == 0x000030, "Member 'FPropertyBag_4cba25cd0f0867e8::RigVMModel___ParentConstraint_1_Child__Const' has a wrong offset!");
static_assert(offsetof(FPropertyBag_4cba25cd0f0867e8, RigVMModel___ParentConstraint_1_Parents__Const) == 0x000040, "Member 'FPropertyBag_4cba25cd0f0867e8::RigVMModel___ParentConstraint_1_Parents__Const' has a wrong offset!");
static_assert(offsetof(FPropertyBag_4cba25cd0f0867e8, RigVMModel___AimConstraintLocalSpaceOffset_1_Child__Const) == 0x000050, "Member 'FPropertyBag_4cba25cd0f0867e8::RigVMModel___AimConstraintLocalSpaceOffset_1_Child__Const' has a wrong offset!");
static_assert(offsetof(FPropertyBag_4cba25cd0f0867e8, RigVMModel___AimConstraintLocalSpaceOffset_1_bMaintainOffset__Const) == 0x00005C, "Member 'FPropertyBag_4cba25cd0f0867e8::RigVMModel___AimConstraintLocalSpaceOffset_1_bMaintainOffset__Const' has a wrong offset!");
static_assert(offsetof(FPropertyBag_4cba25cd0f0867e8, RigVMModel___AimConstraintLocalSpaceOffset_1_Filter__Const) == 0x00005D, "Member 'FPropertyBag_4cba25cd0f0867e8::RigVMModel___AimConstraintLocalSpaceOffset_1_Filter__Const' has a wrong offset!");
static_assert(offsetof(FPropertyBag_4cba25cd0f0867e8, RigVMModel___AimConstraintLocalSpaceOffset_1_AimAxis__Const) == 0x000060, "Member 'FPropertyBag_4cba25cd0f0867e8::RigVMModel___AimConstraintLocalSpaceOffset_1_AimAxis__Const' has a wrong offset!");
static_assert(offsetof(FPropertyBag_4cba25cd0f0867e8, RigVMModel___AimConstraintLocalSpaceOffset_1_UpAxis__Const) == 0x000078, "Member 'FPropertyBag_4cba25cd0f0867e8::RigVMModel___AimConstraintLocalSpaceOffset_1_UpAxis__Const' has a wrong offset!");
static_assert(offsetof(FPropertyBag_4cba25cd0f0867e8, RigVMModel___AimConstraintLocalSpaceOffset_1_WorldUp__Const) == 0x000090, "Member 'FPropertyBag_4cba25cd0f0867e8::RigVMModel___AimConstraintLocalSpaceOffset_1_WorldUp__Const' has a wrong offset!");
static_assert(offsetof(FPropertyBag_4cba25cd0f0867e8, RigVMModel___AimConstraintLocalSpaceOffset_1_Parents__Const) == 0x0000B8, "Member 'FPropertyBag_4cba25cd0f0867e8::RigVMModel___AimConstraintLocalSpaceOffset_1_Parents__Const' has a wrong offset!");
static_assert(offsetof(FPropertyBag_4cba25cd0f0867e8, RigVMModel___AimConstraintLocalSpaceOffset_1_AdvancedSettings__Const) == 0x0000D0, "Member 'FPropertyBag_4cba25cd0f0867e8::RigVMModel___AimConstraintLocalSpaceOffset_1_AdvancedSettings__Const' has a wrong offset!");
static_assert(offsetof(FPropertyBag_4cba25cd0f0867e8, RigVMModel___AimConstraintLocalSpaceOffset_1_1_Child__Const) == 0x000150, "Member 'FPropertyBag_4cba25cd0f0867e8::RigVMModel___AimConstraintLocalSpaceOffset_1_1_Child__Const' has a wrong offset!");
static_assert(offsetof(FPropertyBag_4cba25cd0f0867e8, RigVMModel___AimConstraintLocalSpaceOffset_1_1_AimAxis__Const) == 0x000160, "Member 'FPropertyBag_4cba25cd0f0867e8::RigVMModel___AimConstraintLocalSpaceOffset_1_1_AimAxis__Const' has a wrong offset!");
static_assert(offsetof(FPropertyBag_4cba25cd0f0867e8, RigVMModel___AimConstraintLocalSpaceOffset_1_1_Parents__Const) == 0x000178, "Member 'FPropertyBag_4cba25cd0f0867e8::RigVMModel___AimConstraintLocalSpaceOffset_1_1_Parents__Const' has a wrong offset!");
static_assert(offsetof(FPropertyBag_4cba25cd0f0867e8, RigVMModel___ParentConstraint_2_Child__Const) == 0x000188, "Member 'FPropertyBag_4cba25cd0f0867e8::RigVMModel___ParentConstraint_2_Child__Const' has a wrong offset!");
static_assert(offsetof(FPropertyBag_4cba25cd0f0867e8, RigVMModel___ParentConstraint_2_Parents__Const) == 0x000198, "Member 'FPropertyBag_4cba25cd0f0867e8::RigVMModel___ParentConstraint_2_Parents__Const' has a wrong offset!");
static_assert(offsetof(FPropertyBag_4cba25cd0f0867e8, RigVMModel___ParentConstraint_2_1_Child__Const) == 0x0001A8, "Member 'FPropertyBag_4cba25cd0f0867e8::RigVMModel___ParentConstraint_2_1_Child__Const' has a wrong offset!");
static_assert(offsetof(FPropertyBag_4cba25cd0f0867e8, RigVMModel___ParentConstraint_2_1_Parents__Const) == 0x0001B8, "Member 'FPropertyBag_4cba25cd0f0867e8::RigVMModel___ParentConstraint_2_1_Parents__Const' has a wrong offset!");
static_assert(offsetof(FPropertyBag_4cba25cd0f0867e8, RigVMModel___ParentConstraint_3_Child__Const) == 0x0001C8, "Member 'FPropertyBag_4cba25cd0f0867e8::RigVMModel___ParentConstraint_3_Child__Const' has a wrong offset!");
static_assert(offsetof(FPropertyBag_4cba25cd0f0867e8, RigVMModel___ParentConstraint_3_1_Child__Const) == 0x0001D4, "Member 'FPropertyBag_4cba25cd0f0867e8::RigVMModel___ParentConstraint_3_1_Child__Const' has a wrong offset!");

// PropertyBag Transient.PropertyBag_9b62ae703e405981
// 0x0140 (0x0140 - 0x0000)
struct FPropertyBag_9b62ae703e405981 final
{
public:
	TArray<struct FCachedRigElement>              RigVMModel___ParentConstraint_ChildCache;          // 0x0000(0x0010)(Edit)
	TArray<TArray<struct FCachedRigElement>>      RigVMModel___ParentConstraint_ParentCaches;        // 0x0010(0x0010)(Edit)
	TArray<struct FCachedRigElement>              RigVMModel___ParentConstraint_1_ChildCache;        // 0x0020(0x0010)(Edit)
	TArray<TArray<struct FCachedRigElement>>      RigVMModel___ParentConstraint_1_ParentCaches;      // 0x0030(0x0010)(Edit)
	TArray<struct FCachedRigElement>              RigVMModel___AimConstraintLocalSpaceOffset_1_WorldUpSpaceCache; // 0x0040(0x0010)(Edit)
	TArray<struct FCachedRigElement>              RigVMModel___AimConstraintLocalSpaceOffset_1_ChildCache; // 0x0050(0x0010)(Edit)
	TArray<TArray<struct FCachedRigElement>>      RigVMModel___AimConstraintLocalSpaceOffset_1_ParentCaches; // 0x0060(0x0010)(Edit)
	TArray<bool>                                  RigVMModel___AimConstraintLocalSpaceOffset_1_bIsInitialized; // 0x0070(0x0010)(Edit)
	TArray<struct FCachedRigElement>              RigVMModel___AimConstraintLocalSpaceOffset_1_1_WorldUpSpaceCache; // 0x0080(0x0010)(Edit)
	TArray<struct FCachedRigElement>              RigVMModel___AimConstraintLocalSpaceOffset_1_1_ChildCache; // 0x0090(0x0010)(Edit)
	TArray<TArray<struct FCachedRigElement>>      RigVMModel___AimConstraintLocalSpaceOffset_1_1_ParentCaches; // 0x00A0(0x0010)(Edit)
	TArray<bool>                                  RigVMModel___AimConstraintLocalSpaceOffset_1_1_bIsInitialized; // 0x00B0(0x0010)(Edit)
	TArray<struct FCachedRigElement>              RigVMModel___ParentConstraint_2_ChildCache;        // 0x00C0(0x0010)(Edit)
	TArray<TArray<struct FCachedRigElement>>      RigVMModel___ParentConstraint_2_ParentCaches;      // 0x00D0(0x0010)(Edit)
	TArray<struct FCachedRigElement>              RigVMModel___ParentConstraint_2_1_ChildCache;      // 0x00E0(0x0010)(Edit)
	TArray<TArray<struct FCachedRigElement>>      RigVMModel___ParentConstraint_2_1_ParentCaches;    // 0x00F0(0x0010)(Edit)
	TArray<struct FCachedRigElement>              RigVMModel___ParentConstraint_3_ChildCache;        // 0x0100(0x0010)(Edit)
	TArray<TArray<struct FCachedRigElement>>      RigVMModel___ParentConstraint_3_ParentCaches;      // 0x0110(0x0010)(Edit)
	TArray<struct FCachedRigElement>              RigVMModel___ParentConstraint_3_1_ChildCache;      // 0x0120(0x0010)(Edit)
	TArray<TArray<struct FCachedRigElement>>      RigVMModel___ParentConstraint_3_1_ParentCaches;    // 0x0130(0x0010)(Edit)
};
static_assert(alignof(FPropertyBag_9b62ae703e405981) == 0x000008, "Wrong alignment on FPropertyBag_9b62ae703e405981");
static_assert(sizeof(FPropertyBag_9b62ae703e405981) == 0x000140, "Wrong size on FPropertyBag_9b62ae703e405981");
static_assert(offsetof(FPropertyBag_9b62ae703e405981, RigVMModel___ParentConstraint_ChildCache) == 0x000000, "Member 'FPropertyBag_9b62ae703e405981::RigVMModel___ParentConstraint_ChildCache' has a wrong offset!");
static_assert(offsetof(FPropertyBag_9b62ae703e405981, RigVMModel___ParentConstraint_ParentCaches) == 0x000010, "Member 'FPropertyBag_9b62ae703e405981::RigVMModel___ParentConstraint_ParentCaches' has a wrong offset!");
static_assert(offsetof(FPropertyBag_9b62ae703e405981, RigVMModel___ParentConstraint_1_ChildCache) == 0x000020, "Member 'FPropertyBag_9b62ae703e405981::RigVMModel___ParentConstraint_1_ChildCache' has a wrong offset!");
static_assert(offsetof(FPropertyBag_9b62ae703e405981, RigVMModel___ParentConstraint_1_ParentCaches) == 0x000030, "Member 'FPropertyBag_9b62ae703e405981::RigVMModel___ParentConstraint_1_ParentCaches' has a wrong offset!");
static_assert(offsetof(FPropertyBag_9b62ae703e405981, RigVMModel___AimConstraintLocalSpaceOffset_1_WorldUpSpaceCache) == 0x000040, "Member 'FPropertyBag_9b62ae703e405981::RigVMModel___AimConstraintLocalSpaceOffset_1_WorldUpSpaceCache' has a wrong offset!");
static_assert(offsetof(FPropertyBag_9b62ae703e405981, RigVMModel___AimConstraintLocalSpaceOffset_1_ChildCache) == 0x000050, "Member 'FPropertyBag_9b62ae703e405981::RigVMModel___AimConstraintLocalSpaceOffset_1_ChildCache' has a wrong offset!");
static_assert(offsetof(FPropertyBag_9b62ae703e405981, RigVMModel___AimConstraintLocalSpaceOffset_1_ParentCaches) == 0x000060, "Member 'FPropertyBag_9b62ae703e405981::RigVMModel___AimConstraintLocalSpaceOffset_1_ParentCaches' has a wrong offset!");
static_assert(offsetof(FPropertyBag_9b62ae703e405981, RigVMModel___AimConstraintLocalSpaceOffset_1_bIsInitialized) == 0x000070, "Member 'FPropertyBag_9b62ae703e405981::RigVMModel___AimConstraintLocalSpaceOffset_1_bIsInitialized' has a wrong offset!");
static_assert(offsetof(FPropertyBag_9b62ae703e405981, RigVMModel___AimConstraintLocalSpaceOffset_1_1_WorldUpSpaceCache) == 0x000080, "Member 'FPropertyBag_9b62ae703e405981::RigVMModel___AimConstraintLocalSpaceOffset_1_1_WorldUpSpaceCache' has a wrong offset!");
static_assert(offsetof(FPropertyBag_9b62ae703e405981, RigVMModel___AimConstraintLocalSpaceOffset_1_1_ChildCache) == 0x000090, "Member 'FPropertyBag_9b62ae703e405981::RigVMModel___AimConstraintLocalSpaceOffset_1_1_ChildCache' has a wrong offset!");
static_assert(offsetof(FPropertyBag_9b62ae703e405981, RigVMModel___AimConstraintLocalSpaceOffset_1_1_ParentCaches) == 0x0000A0, "Member 'FPropertyBag_9b62ae703e405981::RigVMModel___AimConstraintLocalSpaceOffset_1_1_ParentCaches' has a wrong offset!");
static_assert(offsetof(FPropertyBag_9b62ae703e405981, RigVMModel___AimConstraintLocalSpaceOffset_1_1_bIsInitialized) == 0x0000B0, "Member 'FPropertyBag_9b62ae703e405981::RigVMModel___AimConstraintLocalSpaceOffset_1_1_bIsInitialized' has a wrong offset!");
static_assert(offsetof(FPropertyBag_9b62ae703e405981, RigVMModel___ParentConstraint_2_ChildCache) == 0x0000C0, "Member 'FPropertyBag_9b62ae703e405981::RigVMModel___ParentConstraint_2_ChildCache' has a wrong offset!");
static_assert(offsetof(FPropertyBag_9b62ae703e405981, RigVMModel___ParentConstraint_2_ParentCaches) == 0x0000D0, "Member 'FPropertyBag_9b62ae703e405981::RigVMModel___ParentConstraint_2_ParentCaches' has a wrong offset!");
static_assert(offsetof(FPropertyBag_9b62ae703e405981, RigVMModel___ParentConstraint_2_1_ChildCache) == 0x0000E0, "Member 'FPropertyBag_9b62ae703e405981::RigVMModel___ParentConstraint_2_1_ChildCache' has a wrong offset!");
static_assert(offsetof(FPropertyBag_9b62ae703e405981, RigVMModel___ParentConstraint_2_1_ParentCaches) == 0x0000F0, "Member 'FPropertyBag_9b62ae703e405981::RigVMModel___ParentConstraint_2_1_ParentCaches' has a wrong offset!");
static_assert(offsetof(FPropertyBag_9b62ae703e405981, RigVMModel___ParentConstraint_3_ChildCache) == 0x000100, "Member 'FPropertyBag_9b62ae703e405981::RigVMModel___ParentConstraint_3_ChildCache' has a wrong offset!");
static_assert(offsetof(FPropertyBag_9b62ae703e405981, RigVMModel___ParentConstraint_3_ParentCaches) == 0x000110, "Member 'FPropertyBag_9b62ae703e405981::RigVMModel___ParentConstraint_3_ParentCaches' has a wrong offset!");
static_assert(offsetof(FPropertyBag_9b62ae703e405981, RigVMModel___ParentConstraint_3_1_ChildCache) == 0x000120, "Member 'FPropertyBag_9b62ae703e405981::RigVMModel___ParentConstraint_3_1_ChildCache' has a wrong offset!");
static_assert(offsetof(FPropertyBag_9b62ae703e405981, RigVMModel___ParentConstraint_3_1_ParentCaches) == 0x000130, "Member 'FPropertyBag_9b62ae703e405981::RigVMModel___ParentConstraint_3_1_ParentCaches' has a wrong offset!");

}

