#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: AC_ElectricFenceZapper

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass AC_ElectricFenceZapper.AC_ElectricFenceZapper_C
// 0x0028 (0x00C8 - 0x00A0)
class UAC_ElectricFenceZapper_C final : public UActorComponent
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x00A0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UBoxComponent*                          ZapperCollider;                                    // 0x00A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	FMulticastInlineDelegateProperty_             On_ZappedActor;                                    // 0x00B0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	uint8                                         ZapperTeam;                                        // 0x00C0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ApplyDamage(class AActor* DamagedActor);
	void ExecuteUbergraph_AC_ElectricFenceZapper(int32 EntryPoint);
	bool IsSameTeam(class UObject* OverlappingActor);
	void On_ZappedActor__DelegateSignature(class AActor* Actor);
	void OnComponentBeginOverlap_Event(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
	void ReceiveBeginPlay();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"AC_ElectricFenceZapper_C">();
	}
	static class UAC_ElectricFenceZapper_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAC_ElectricFenceZapper_C>();
	}
};
static_assert(alignof(UAC_ElectricFenceZapper_C) == 0x000008, "Wrong alignment on UAC_ElectricFenceZapper_C");
static_assert(sizeof(UAC_ElectricFenceZapper_C) == 0x0000C8, "Wrong size on UAC_ElectricFenceZapper_C");
static_assert(offsetof(UAC_ElectricFenceZapper_C, UberGraphFrame) == 0x0000A0, "Member 'UAC_ElectricFenceZapper_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UAC_ElectricFenceZapper_C, ZapperCollider) == 0x0000A8, "Member 'UAC_ElectricFenceZapper_C::ZapperCollider' has a wrong offset!");
static_assert(offsetof(UAC_ElectricFenceZapper_C, On_ZappedActor) == 0x0000B0, "Member 'UAC_ElectricFenceZapper_C::On_ZappedActor' has a wrong offset!");
static_assert(offsetof(UAC_ElectricFenceZapper_C, ZapperTeam) == 0x0000C0, "Member 'UAC_ElectricFenceZapper_C::ZapperTeam' has a wrong offset!");

}

