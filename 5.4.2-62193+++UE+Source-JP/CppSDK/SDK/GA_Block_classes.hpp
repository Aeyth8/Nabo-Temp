#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GA_Block

#include "Basic.hpp"

#include "GameplayAbilities_structs.hpp"
#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "GA_Equipment_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass GA_Block.GA_Block_C
// 0x0090 (0x0670 - 0x05E0)
class UGA_Block_C : public UGA_Equipment_C
{
public:
	uint8                                         Pad_5D1[0x7];                                      // 0x05D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPointerToUberGraphFrame               UberGraphFrame_GA_Block_C;                         // 0x05D8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class ABP_BlockingVolume_C*                   BlockingVolume;                                    // 0x05E0(0x0008)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UNiagaraSystem*                         ImpactParticle;                                    // 0x05E8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             BlockSound;                                        // 0x05F0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Active_Scale;                                      // 0x05F8(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Inactive_Scale;                                    // 0x0610(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        UpOffset;                                          // 0x0628(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        ForwardOffset;                                     // 0x0630(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CanBeHeld;                                         // 0x0638(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_639[0x3];                                      // 0x0639(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FActiveGameplayEffectHandle            ArmorHandle;                                       // 0x063C(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_644[0x4];                                      // 0x0644(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        DrainAmount;                                       // 0x0648(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        DrainInterval;                                     // 0x0650(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        DrainWhenHit;                                      // 0x0658(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAbilityTask_RepeatContinuous*          DrainStaminaTask;                                  // 0x0660(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FActiveGameplayEffectHandle            StaminaHandle;                                     // 0x0668(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)

public:
	void AddArmorToUser();
	void AnimSetBlocking(bool Blocking);
	void AttackBlocked(int32 Incoming_Damage, const struct FHitResult& HitResult);
	void Blocked_Cosmetics(const struct FHitResult& Hit);
	void CacheStaminaValues();
	bool CanUseStamina();
	void Drain_Stamina(double Amount);
	void EndBlock_Cosmetics(class ABP_BlockingVolume_C* Shield);
	void ExecuteUbergraph_GA_Block(int32 EntryPoint);
	void GetBlockedSound(class USoundBase** Return);
	void K2_ActivateAbility();
	void K2_OnAbilityAdded();
	void K2_OnAbilityRemoved();
	void K2_OnEndAbility(bool bWasCancelled);
	void OnFinished_9DF805E54703CE52FD56988106538E29(int32 ActionNumber);
	void OnPerformAction_9DF805E54703CE52FD56988106538E29(int32 ActionNumber);
	void OnRelease_EA52071646837E0779D40BA884955F14(float TimeHeld);
	void SpawnBlockingVolume();
	void StopStaminaReg();
	void ToggleStaminaBarVisibility(bool Visible);
	void UpdateBlockingVolume();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"GA_Block_C">();
	}
	static class UGA_Block_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGA_Block_C>();
	}
};
static_assert(alignof(UGA_Block_C) == 0x000010, "Wrong alignment on UGA_Block_C");
static_assert(sizeof(UGA_Block_C) == 0x000670, "Wrong size on UGA_Block_C");
static_assert(offsetof(UGA_Block_C, UberGraphFrame_GA_Block_C) == 0x0005D8, "Member 'UGA_Block_C::UberGraphFrame_GA_Block_C' has a wrong offset!");
static_assert(offsetof(UGA_Block_C, BlockingVolume) == 0x0005E0, "Member 'UGA_Block_C::BlockingVolume' has a wrong offset!");
static_assert(offsetof(UGA_Block_C, ImpactParticle) == 0x0005E8, "Member 'UGA_Block_C::ImpactParticle' has a wrong offset!");
static_assert(offsetof(UGA_Block_C, BlockSound) == 0x0005F0, "Member 'UGA_Block_C::BlockSound' has a wrong offset!");
static_assert(offsetof(UGA_Block_C, Active_Scale) == 0x0005F8, "Member 'UGA_Block_C::Active_Scale' has a wrong offset!");
static_assert(offsetof(UGA_Block_C, Inactive_Scale) == 0x000610, "Member 'UGA_Block_C::Inactive_Scale' has a wrong offset!");
static_assert(offsetof(UGA_Block_C, UpOffset) == 0x000628, "Member 'UGA_Block_C::UpOffset' has a wrong offset!");
static_assert(offsetof(UGA_Block_C, ForwardOffset) == 0x000630, "Member 'UGA_Block_C::ForwardOffset' has a wrong offset!");
static_assert(offsetof(UGA_Block_C, CanBeHeld) == 0x000638, "Member 'UGA_Block_C::CanBeHeld' has a wrong offset!");
static_assert(offsetof(UGA_Block_C, ArmorHandle) == 0x00063C, "Member 'UGA_Block_C::ArmorHandle' has a wrong offset!");
static_assert(offsetof(UGA_Block_C, DrainAmount) == 0x000648, "Member 'UGA_Block_C::DrainAmount' has a wrong offset!");
static_assert(offsetof(UGA_Block_C, DrainInterval) == 0x000650, "Member 'UGA_Block_C::DrainInterval' has a wrong offset!");
static_assert(offsetof(UGA_Block_C, DrainWhenHit) == 0x000658, "Member 'UGA_Block_C::DrainWhenHit' has a wrong offset!");
static_assert(offsetof(UGA_Block_C, DrainStaminaTask) == 0x000660, "Member 'UGA_Block_C::DrainStaminaTask' has a wrong offset!");
static_assert(offsetof(UGA_Block_C, StaminaHandle) == 0x000668, "Member 'UGA_Block_C::StaminaHandle' has a wrong offset!");

}

