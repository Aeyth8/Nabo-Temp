#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: SOD_TutorialTask

#include "Basic.hpp"

#include "JP_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass SOD_TutorialTask.SOD_TutorialTask_C
// 0x0018 (0x0068 - 0x0050)
class USOD_TutorialTask_C : public USubObjectiveDefinition
{
public:
	class UClass*                                 AssociatedTaskInfoSOD;                             // 0x0050(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                          HasAssociatedTaskInfo;                             // 0x0058(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        SpawnDelay;                                        // 0x0060(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"SOD_TutorialTask_C">();
	}
	static class USOD_TutorialTask_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<USOD_TutorialTask_C>();
	}
};
static_assert(alignof(USOD_TutorialTask_C) == 0x000008, "Wrong alignment on USOD_TutorialTask_C");
static_assert(sizeof(USOD_TutorialTask_C) == 0x000068, "Wrong size on USOD_TutorialTask_C");
static_assert(offsetof(USOD_TutorialTask_C, AssociatedTaskInfoSOD) == 0x000050, "Member 'USOD_TutorialTask_C::AssociatedTaskInfoSOD' has a wrong offset!");
static_assert(offsetof(USOD_TutorialTask_C, HasAssociatedTaskInfo) == 0x000058, "Member 'USOD_TutorialTask_C::HasAssociatedTaskInfo' has a wrong offset!");
static_assert(offsetof(USOD_TutorialTask_C, SpawnDelay) == 0x000060, "Member 'USOD_TutorialTask_C::SpawnDelay' has a wrong offset!");

}

