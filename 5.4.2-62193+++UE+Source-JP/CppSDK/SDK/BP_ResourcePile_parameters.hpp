#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_ResourcePile

#include "Basic.hpp"

#include "E_MaterialTypes_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "E_ImpactEffect_structs.hpp"
#include "JP_structs.hpp"
#include "Engine_structs.hpp"
#include "GameplayAbilities_structs.hpp"


namespace SDK::Params
{

// Function BP_ResourcePile.BP_ResourcePile_C.BndEvt__HouseActorBase_Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature
// 0x0118 (0x0118 - 0x0000)
struct BP_ResourcePile_C_BndEvt__HouseActorBase_Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bFromSweep;                                        // 0x001C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             SweepResult;                                       // 0x0020(0x00F8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_ResourcePile_C_BndEvt__HouseActorBase_Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on BP_ResourcePile_C_BndEvt__HouseActorBase_Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(sizeof(BP_ResourcePile_C_BndEvt__HouseActorBase_Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature) == 0x000118, "Wrong size on BP_ResourcePile_C_BndEvt__HouseActorBase_Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(offsetof(BP_ResourcePile_C_BndEvt__HouseActorBase_Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OverlappedComponent) == 0x000000, "Member 'BP_ResourcePile_C_BndEvt__HouseActorBase_Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BP_ResourcePile_C_BndEvt__HouseActorBase_Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'BP_ResourcePile_C_BndEvt__HouseActorBase_Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(BP_ResourcePile_C_BndEvt__HouseActorBase_Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'BP_ResourcePile_C_BndEvt__HouseActorBase_Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(BP_ResourcePile_C_BndEvt__HouseActorBase_Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000018, "Member 'BP_ResourcePile_C_BndEvt__HouseActorBase_Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(BP_ResourcePile_C_BndEvt__HouseActorBase_Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, bFromSweep) == 0x00001C, "Member 'BP_ResourcePile_C_BndEvt__HouseActorBase_Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::bFromSweep' has a wrong offset!");
static_assert(offsetof(BP_ResourcePile_C_BndEvt__HouseActorBase_Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, SweepResult) == 0x000020, "Member 'BP_ResourcePile_C_BndEvt__HouseActorBase_Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::SweepResult' has a wrong offset!");

// Function BP_ResourcePile.BP_ResourcePile_C.BndEvt__HouseActorBase_Sphere_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct BP_ResourcePile_C_BndEvt__HouseActorBase_Sphere_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ResourcePile_C_BndEvt__HouseActorBase_Sphere_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on BP_ResourcePile_C_BndEvt__HouseActorBase_Sphere_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature");
static_assert(sizeof(BP_ResourcePile_C_BndEvt__HouseActorBase_Sphere_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature) == 0x000020, "Wrong size on BP_ResourcePile_C_BndEvt__HouseActorBase_Sphere_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature");
static_assert(offsetof(BP_ResourcePile_C_BndEvt__HouseActorBase_Sphere_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature, OverlappedComponent) == 0x000000, "Member 'BP_ResourcePile_C_BndEvt__HouseActorBase_Sphere_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BP_ResourcePile_C_BndEvt__HouseActorBase_Sphere_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'BP_ResourcePile_C_BndEvt__HouseActorBase_Sphere_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(BP_ResourcePile_C_BndEvt__HouseActorBase_Sphere_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'BP_ResourcePile_C_BndEvt__HouseActorBase_Sphere_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(BP_ResourcePile_C_BndEvt__HouseActorBase_Sphere_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000018, "Member 'BP_ResourcePile_C_BndEvt__HouseActorBase_Sphere_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");

// Function BP_ResourcePile.BP_ResourcePile_C.Cosmetics Hit Reaction
// 0x0038 (0x0038 - 0x0000)
struct BP_ResourcePile_C_Cosmetics_Hit_Reaction final
{
public:
	struct FVector                                Location;                                          // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                HitImpulse;                                        // 0x0018(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_ImpactEffect                                ImpactEffect;                                      // 0x0030(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ResourcePile_C_Cosmetics_Hit_Reaction) == 0x000008, "Wrong alignment on BP_ResourcePile_C_Cosmetics_Hit_Reaction");
static_assert(sizeof(BP_ResourcePile_C_Cosmetics_Hit_Reaction) == 0x000038, "Wrong size on BP_ResourcePile_C_Cosmetics_Hit_Reaction");
static_assert(offsetof(BP_ResourcePile_C_Cosmetics_Hit_Reaction, Location) == 0x000000, "Member 'BP_ResourcePile_C_Cosmetics_Hit_Reaction::Location' has a wrong offset!");
static_assert(offsetof(BP_ResourcePile_C_Cosmetics_Hit_Reaction, HitImpulse) == 0x000018, "Member 'BP_ResourcePile_C_Cosmetics_Hit_Reaction::HitImpulse' has a wrong offset!");
static_assert(offsetof(BP_ResourcePile_C_Cosmetics_Hit_Reaction, ImpactEffect) == 0x000030, "Member 'BP_ResourcePile_C_Cosmetics_Hit_Reaction::ImpactEffect' has a wrong offset!");

// Function BP_ResourcePile.BP_ResourcePile_C.Enable Construction Yard Cosmetics
// 0x0030 (0x0030 - 0x0000)
struct BP_ResourcePile_C_Enable_Construction_Yard_Cosmetics final
{
public:
	class ADowntimeManager_C*                     CallFunc_GetActorOfClass_ReturnValue;              // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_ResourceCrane_C*                    CallFunc_GetActorOfClass_ReturnValue_1;            // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0018(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ResourcePile_C_Enable_Construction_Yard_Cosmetics) == 0x000008, "Wrong alignment on BP_ResourcePile_C_Enable_Construction_Yard_Cosmetics");
static_assert(sizeof(BP_ResourcePile_C_Enable_Construction_Yard_Cosmetics) == 0x000030, "Wrong size on BP_ResourcePile_C_Enable_Construction_Yard_Cosmetics");
static_assert(offsetof(BP_ResourcePile_C_Enable_Construction_Yard_Cosmetics, CallFunc_GetActorOfClass_ReturnValue) == 0x000000, "Member 'BP_ResourcePile_C_Enable_Construction_Yard_Cosmetics::CallFunc_GetActorOfClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ResourcePile_C_Enable_Construction_Yard_Cosmetics, CallFunc_GetActorOfClass_ReturnValue_1) == 0x000008, "Member 'BP_ResourcePile_C_Enable_Construction_Yard_Cosmetics::CallFunc_GetActorOfClass_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ResourcePile_C_Enable_Construction_Yard_Cosmetics, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'BP_ResourcePile_C_Enable_Construction_Yard_Cosmetics::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ResourcePile_C_Enable_Construction_Yard_Cosmetics, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000018, "Member 'BP_ResourcePile_C_Enable_Construction_Yard_Cosmetics::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");

// Function BP_ResourcePile.BP_ResourcePile_C.ExecuteUbergraph_BP_ResourcePile
// 0x0678 (0x0678 - 0x0000)
struct BP_ResourcePile_C_ExecuteUbergraph_BP_ResourcePile final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Conv_DoubleToVector_ReturnValue;          // 0x0008(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue_1;          // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_Delta;                                // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_Event_Causer;                               // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FCombatParticipant                     K2Node_Event_CombatParticipant;                    // 0x0030(0x0060)(ConstParm)
	struct FKillMethod                            K2Node_Event_KillMethod;                           // 0x0090(0x02E8)(ConstParm)
	struct FVector_NetQuantize                    K2Node_Event_Location;                             // 0x0378(0x0018)(NoDestructor, HasGetValueTypeHash)
	const class AActor*                           K2Node_Event_AttackingActor;                       // 0x0390(0x0008)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Event_Direction;                            // 0x0398(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_Health;                               // 0x03B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_MaxHealth;                            // 0x03B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_NormalizeToRange_ReturnValue;             // 0x03B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue;       // 0x03C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C1[0x7];                                      // 0x03C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                K2Node_CustomEvent_Location_1;                     // 0x03C8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_CustomEvent_HitImpulse;                     // 0x03E0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_ImpactEffect                                K2Node_CustomEvent_ImpactEffect;                   // 0x03F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3F9[0x7];                                      // 0x03F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue;        // 0x0400(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0418(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0428(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_429[0x7];                                      // 0x0429(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0430(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UNiagaraComponent*                      CallFunc_SpawnSystemAtLocation_ReturnValue;        // 0x0448(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FVector_NetQuantize                    K2Node_CustomEvent_Location;                       // 0x0450(0x0018)(NoDestructor, HasGetValueTypeHash)
	class UNiagaraComponent*                      CallFunc_SpawnSystemAtLocation_ReturnValue_1;      // 0x0468(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue_1;    // 0x0470(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FActiveGameplayEffectHandle            CallFunc_BP_ApplyGameplayEffectToSelf_ReturnValue; // 0x0488(0x0008)(NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_CustomEvent_NormalizedHealth;               // 0x0490(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue_2;          // 0x0498(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0499(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue_1;               // 0x049A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49B[0x5];                                      // 0x049B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Conv_DoubleToVector_ReturnValue_1;        // 0x04A0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue_1;      // 0x04B8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotFromZ_ReturnValue;                 // 0x04D0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UUserWidget*                            CallFunc_GetUserWidgetObject_ReturnValue;          // 0x04E8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UNiagaraComponent*                      CallFunc_SpawnSystemAtLocation_ReturnValue_2;      // 0x04F0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UItemCompatibleInfoWI_C*                K2Node_DynamicCast_AsItem_Compatible_Info_WI;      // 0x04F8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0500(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_501[0x7];                                      // 0x0501(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent_1;  // 0x0508(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor_1;           // 0x0510(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp_1;            // 0x0518(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex_1;       // 0x0520(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bFromSweep;             // 0x0524(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_525[0x3];                                      // 0x0525(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_ComponentBoundEvent_SweepResult;            // 0x0528(0x00F8)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class APawn*                                  K2Node_DynamicCast_AsPawn;                         // 0x0620(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0628(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_629[0x7];                                      // 0x0629(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent;    // 0x0630(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor;             // 0x0638(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp;              // 0x0640(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex;         // 0x0648(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLocallyControlled_ReturnValue;          // 0x064C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_64D[0x3];                                      // 0x064D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  K2Node_DynamicCast_AsPawn_1;                       // 0x0650(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0658(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLocallyControlled_ReturnValue_1;        // 0x0659(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_65A[0x6];                                      // 0x065A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_NormalizeToRange_Value_ImplicitCast;      // 0x0660(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_LessEqual_DoubleDouble_A_ImplicitCast;    // 0x0668(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_NormalizeToRange_RangeMax_ImplicitCast;   // 0x0670(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ResourcePile_C_ExecuteUbergraph_BP_ResourcePile) == 0x000008, "Wrong alignment on BP_ResourcePile_C_ExecuteUbergraph_BP_ResourcePile");
static_assert(sizeof(BP_ResourcePile_C_ExecuteUbergraph_BP_ResourcePile) == 0x000678, "Wrong size on BP_ResourcePile_C_ExecuteUbergraph_BP_ResourcePile");
static_assert(offsetof(BP_ResourcePile_C_ExecuteUbergraph_BP_ResourcePile, EntryPoint) == 0x000000, "Member 'BP_ResourcePile_C_ExecuteUbergraph_BP_ResourcePile::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_ResourcePile_C_ExecuteUbergraph_BP_ResourcePile, CallFunc_IsDedicatedServer_ReturnValue) == 0x000004, "Member 'BP_ResourcePile_C_ExecuteUbergraph_BP_ResourcePile::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ResourcePile_C_ExecuteUbergraph_BP_ResourcePile, CallFunc_Conv_DoubleToVector_ReturnValue) == 0x000008, "Member 'BP_ResourcePile_C_ExecuteUbergraph_BP_ResourcePile::CallFunc_Conv_DoubleToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ResourcePile_C_ExecuteUbergraph_BP_ResourcePile, CallFunc_IsDedicatedServer_ReturnValue_1) == 0x000020, "Member 'BP_ResourcePile_C_ExecuteUbergraph_BP_ResourcePile::CallFunc_IsDedicatedServer_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ResourcePile_C_ExecuteUbergraph_BP_ResourcePile, K2Node_Event_Delta) == 0x000024, "Member 'BP_ResourcePile_C_ExecuteUbergraph_BP_ResourcePile::K2Node_Event_Delta' has a wrong offset!");
static_assert(offsetof(BP_ResourcePile_C_ExecuteUbergraph_BP_ResourcePile, K2Node_Event_Causer) == 0x000028, "Member 'BP_ResourcePile_C_ExecuteUbergraph_BP_ResourcePile::K2Node_Event_Causer' has a wrong offset!");
static_assert(offsetof(BP_ResourcePile_C_ExecuteUbergraph_BP_ResourcePile, K2Node_Event_CombatParticipant) == 0x000030, "Member 'BP_ResourcePile_C_ExecuteUbergraph_BP_ResourcePile::K2Node_Event_CombatParticipant' has a wrong offset!");
static_assert(offsetof(BP_ResourcePile_C_ExecuteUbergraph_BP_ResourcePile, K2Node_Event_KillMethod) == 0x000090, "Member 'BP_ResourcePile_C_ExecuteUbergraph_BP_ResourcePile::K2Node_Event_KillMethod' has a wrong offset!");
static_assert(offsetof(BP_ResourcePile_C_ExecuteUbergraph_BP_ResourcePile, K2Node_Event_Location) == 0x000378, "Member 'BP_ResourcePile_C_ExecuteUbergraph_BP_ResourcePile::K2Node_Event_Location' has a wrong offset!");
static_assert(offsetof(BP_ResourcePile_C_ExecuteUbergraph_BP_ResourcePile, K2Node_Event_AttackingActor) == 0x000390, "Member 'BP_ResourcePile_C_ExecuteUbergraph_BP_ResourcePile::K2Node_Event_AttackingActor' has a wrong offset!");
static_assert(offsetof(BP_ResourcePile_C_ExecuteUbergraph_BP_ResourcePile, K2Node_Event_Direction) == 0x000398, "Member 'BP_ResourcePile_C_ExecuteUbergraph_BP_ResourcePile::K2Node_Event_Direction' has a wrong offset!");
static_assert(offsetof(BP_ResourcePile_C_ExecuteUbergraph_BP_ResourcePile, K2Node_Event_Health) == 0x0003B0, "Member 'BP_ResourcePile_C_ExecuteUbergraph_BP_ResourcePile::K2Node_Event_Health' has a wrong offset!");
static_assert(offsetof(BP_ResourcePile_C_ExecuteUbergraph_BP_ResourcePile, K2Node_Event_MaxHealth) == 0x0003B4, "Member 'BP_ResourcePile_C_ExecuteUbergraph_BP_ResourcePile::K2Node_Event_MaxHealth' has a wrong offset!");
static_assert(offsetof(BP_ResourcePile_C_ExecuteUbergraph_BP_ResourcePile, CallFunc_NormalizeToRange_ReturnValue) == 0x0003B8, "Member 'BP_ResourcePile_C_ExecuteUbergraph_BP_ResourcePile::CallFunc_NormalizeToRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ResourcePile_C_ExecuteUbergraph_BP_ResourcePile, CallFunc_LessEqual_DoubleDouble_ReturnValue) == 0x0003C0, "Member 'BP_ResourcePile_C_ExecuteUbergraph_BP_ResourcePile::CallFunc_LessEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ResourcePile_C_ExecuteUbergraph_BP_ResourcePile, K2Node_CustomEvent_Location_1) == 0x0003C8, "Member 'BP_ResourcePile_C_ExecuteUbergraph_BP_ResourcePile::K2Node_CustomEvent_Location_1' has a wrong offset!");
static_assert(offsetof(BP_ResourcePile_C_ExecuteUbergraph_BP_ResourcePile, K2Node_CustomEvent_HitImpulse) == 0x0003E0, "Member 'BP_ResourcePile_C_ExecuteUbergraph_BP_ResourcePile::K2Node_CustomEvent_HitImpulse' has a wrong offset!");
static_assert(offsetof(BP_ResourcePile_C_ExecuteUbergraph_BP_ResourcePile, K2Node_CustomEvent_ImpactEffect) == 0x0003F8, "Member 'BP_ResourcePile_C_ExecuteUbergraph_BP_ResourcePile::K2Node_CustomEvent_ImpactEffect' has a wrong offset!");
static_assert(offsetof(BP_ResourcePile_C_ExecuteUbergraph_BP_ResourcePile, CallFunc_Multiply_VectorVector_ReturnValue) == 0x000400, "Member 'BP_ResourcePile_C_ExecuteUbergraph_BP_ResourcePile::CallFunc_Multiply_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ResourcePile_C_ExecuteUbergraph_BP_ResourcePile, K2Node_CreateDelegate_OutputDelegate) == 0x000418, "Member 'BP_ResourcePile_C_ExecuteUbergraph_BP_ResourcePile::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_ResourcePile_C_ExecuteUbergraph_BP_ResourcePile, CallFunc_HasAuthority_ReturnValue) == 0x000428, "Member 'BP_ResourcePile_C_ExecuteUbergraph_BP_ResourcePile::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ResourcePile_C_ExecuteUbergraph_BP_ResourcePile, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000430, "Member 'BP_ResourcePile_C_ExecuteUbergraph_BP_ResourcePile::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ResourcePile_C_ExecuteUbergraph_BP_ResourcePile, CallFunc_SpawnSystemAtLocation_ReturnValue) == 0x000448, "Member 'BP_ResourcePile_C_ExecuteUbergraph_BP_ResourcePile::CallFunc_SpawnSystemAtLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ResourcePile_C_ExecuteUbergraph_BP_ResourcePile, K2Node_CustomEvent_Location) == 0x000450, "Member 'BP_ResourcePile_C_ExecuteUbergraph_BP_ResourcePile::K2Node_CustomEvent_Location' has a wrong offset!");
static_assert(offsetof(BP_ResourcePile_C_ExecuteUbergraph_BP_ResourcePile, CallFunc_SpawnSystemAtLocation_ReturnValue_1) == 0x000468, "Member 'BP_ResourcePile_C_ExecuteUbergraph_BP_ResourcePile::CallFunc_SpawnSystemAtLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ResourcePile_C_ExecuteUbergraph_BP_ResourcePile, CallFunc_K2_GetComponentLocation_ReturnValue_1) == 0x000470, "Member 'BP_ResourcePile_C_ExecuteUbergraph_BP_ResourcePile::CallFunc_K2_GetComponentLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ResourcePile_C_ExecuteUbergraph_BP_ResourcePile, CallFunc_BP_ApplyGameplayEffectToSelf_ReturnValue) == 0x000488, "Member 'BP_ResourcePile_C_ExecuteUbergraph_BP_ResourcePile::CallFunc_BP_ApplyGameplayEffectToSelf_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ResourcePile_C_ExecuteUbergraph_BP_ResourcePile, K2Node_CustomEvent_NormalizedHealth) == 0x000490, "Member 'BP_ResourcePile_C_ExecuteUbergraph_BP_ResourcePile::K2Node_CustomEvent_NormalizedHealth' has a wrong offset!");
static_assert(offsetof(BP_ResourcePile_C_ExecuteUbergraph_BP_ResourcePile, CallFunc_IsDedicatedServer_ReturnValue_2) == 0x000498, "Member 'BP_ResourcePile_C_ExecuteUbergraph_BP_ResourcePile::CallFunc_IsDedicatedServer_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_ResourcePile_C_ExecuteUbergraph_BP_ResourcePile, CallFunc_IsValid_ReturnValue) == 0x000499, "Member 'BP_ResourcePile_C_ExecuteUbergraph_BP_ResourcePile::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ResourcePile_C_ExecuteUbergraph_BP_ResourcePile, CallFunc_HasAuthority_ReturnValue_1) == 0x00049A, "Member 'BP_ResourcePile_C_ExecuteUbergraph_BP_ResourcePile::CallFunc_HasAuthority_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ResourcePile_C_ExecuteUbergraph_BP_ResourcePile, CallFunc_Conv_DoubleToVector_ReturnValue_1) == 0x0004A0, "Member 'BP_ResourcePile_C_ExecuteUbergraph_BP_ResourcePile::CallFunc_Conv_DoubleToVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ResourcePile_C_ExecuteUbergraph_BP_ResourcePile, CallFunc_Multiply_VectorVector_ReturnValue_1) == 0x0004B8, "Member 'BP_ResourcePile_C_ExecuteUbergraph_BP_ResourcePile::CallFunc_Multiply_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ResourcePile_C_ExecuteUbergraph_BP_ResourcePile, CallFunc_MakeRotFromZ_ReturnValue) == 0x0004D0, "Member 'BP_ResourcePile_C_ExecuteUbergraph_BP_ResourcePile::CallFunc_MakeRotFromZ_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ResourcePile_C_ExecuteUbergraph_BP_ResourcePile, CallFunc_GetUserWidgetObject_ReturnValue) == 0x0004E8, "Member 'BP_ResourcePile_C_ExecuteUbergraph_BP_ResourcePile::CallFunc_GetUserWidgetObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ResourcePile_C_ExecuteUbergraph_BP_ResourcePile, CallFunc_SpawnSystemAtLocation_ReturnValue_2) == 0x0004F0, "Member 'BP_ResourcePile_C_ExecuteUbergraph_BP_ResourcePile::CallFunc_SpawnSystemAtLocation_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_ResourcePile_C_ExecuteUbergraph_BP_ResourcePile, K2Node_DynamicCast_AsItem_Compatible_Info_WI) == 0x0004F8, "Member 'BP_ResourcePile_C_ExecuteUbergraph_BP_ResourcePile::K2Node_DynamicCast_AsItem_Compatible_Info_WI' has a wrong offset!");
static_assert(offsetof(BP_ResourcePile_C_ExecuteUbergraph_BP_ResourcePile, K2Node_DynamicCast_bSuccess) == 0x000500, "Member 'BP_ResourcePile_C_ExecuteUbergraph_BP_ResourcePile::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_ResourcePile_C_ExecuteUbergraph_BP_ResourcePile, K2Node_ComponentBoundEvent_OverlappedComponent_1) == 0x000508, "Member 'BP_ResourcePile_C_ExecuteUbergraph_BP_ResourcePile::K2Node_ComponentBoundEvent_OverlappedComponent_1' has a wrong offset!");
static_assert(offsetof(BP_ResourcePile_C_ExecuteUbergraph_BP_ResourcePile, K2Node_ComponentBoundEvent_OtherActor_1) == 0x000510, "Member 'BP_ResourcePile_C_ExecuteUbergraph_BP_ResourcePile::K2Node_ComponentBoundEvent_OtherActor_1' has a wrong offset!");
static_assert(offsetof(BP_ResourcePile_C_ExecuteUbergraph_BP_ResourcePile, K2Node_ComponentBoundEvent_OtherComp_1) == 0x000518, "Member 'BP_ResourcePile_C_ExecuteUbergraph_BP_ResourcePile::K2Node_ComponentBoundEvent_OtherComp_1' has a wrong offset!");
static_assert(offsetof(BP_ResourcePile_C_ExecuteUbergraph_BP_ResourcePile, K2Node_ComponentBoundEvent_OtherBodyIndex_1) == 0x000520, "Member 'BP_ResourcePile_C_ExecuteUbergraph_BP_ResourcePile::K2Node_ComponentBoundEvent_OtherBodyIndex_1' has a wrong offset!");
static_assert(offsetof(BP_ResourcePile_C_ExecuteUbergraph_BP_ResourcePile, K2Node_ComponentBoundEvent_bFromSweep) == 0x000524, "Member 'BP_ResourcePile_C_ExecuteUbergraph_BP_ResourcePile::K2Node_ComponentBoundEvent_bFromSweep' has a wrong offset!");
static_assert(offsetof(BP_ResourcePile_C_ExecuteUbergraph_BP_ResourcePile, K2Node_ComponentBoundEvent_SweepResult) == 0x000528, "Member 'BP_ResourcePile_C_ExecuteUbergraph_BP_ResourcePile::K2Node_ComponentBoundEvent_SweepResult' has a wrong offset!");
static_assert(offsetof(BP_ResourcePile_C_ExecuteUbergraph_BP_ResourcePile, K2Node_DynamicCast_AsPawn) == 0x000620, "Member 'BP_ResourcePile_C_ExecuteUbergraph_BP_ResourcePile::K2Node_DynamicCast_AsPawn' has a wrong offset!");
static_assert(offsetof(BP_ResourcePile_C_ExecuteUbergraph_BP_ResourcePile, K2Node_DynamicCast_bSuccess_1) == 0x000628, "Member 'BP_ResourcePile_C_ExecuteUbergraph_BP_ResourcePile::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_ResourcePile_C_ExecuteUbergraph_BP_ResourcePile, K2Node_ComponentBoundEvent_OverlappedComponent) == 0x000630, "Member 'BP_ResourcePile_C_ExecuteUbergraph_BP_ResourcePile::K2Node_ComponentBoundEvent_OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BP_ResourcePile_C_ExecuteUbergraph_BP_ResourcePile, K2Node_ComponentBoundEvent_OtherActor) == 0x000638, "Member 'BP_ResourcePile_C_ExecuteUbergraph_BP_ResourcePile::K2Node_ComponentBoundEvent_OtherActor' has a wrong offset!");
static_assert(offsetof(BP_ResourcePile_C_ExecuteUbergraph_BP_ResourcePile, K2Node_ComponentBoundEvent_OtherComp) == 0x000640, "Member 'BP_ResourcePile_C_ExecuteUbergraph_BP_ResourcePile::K2Node_ComponentBoundEvent_OtherComp' has a wrong offset!");
static_assert(offsetof(BP_ResourcePile_C_ExecuteUbergraph_BP_ResourcePile, K2Node_ComponentBoundEvent_OtherBodyIndex) == 0x000648, "Member 'BP_ResourcePile_C_ExecuteUbergraph_BP_ResourcePile::K2Node_ComponentBoundEvent_OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(BP_ResourcePile_C_ExecuteUbergraph_BP_ResourcePile, CallFunc_IsLocallyControlled_ReturnValue) == 0x00064C, "Member 'BP_ResourcePile_C_ExecuteUbergraph_BP_ResourcePile::CallFunc_IsLocallyControlled_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ResourcePile_C_ExecuteUbergraph_BP_ResourcePile, K2Node_DynamicCast_AsPawn_1) == 0x000650, "Member 'BP_ResourcePile_C_ExecuteUbergraph_BP_ResourcePile::K2Node_DynamicCast_AsPawn_1' has a wrong offset!");
static_assert(offsetof(BP_ResourcePile_C_ExecuteUbergraph_BP_ResourcePile, K2Node_DynamicCast_bSuccess_2) == 0x000658, "Member 'BP_ResourcePile_C_ExecuteUbergraph_BP_ResourcePile::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_ResourcePile_C_ExecuteUbergraph_BP_ResourcePile, CallFunc_IsLocallyControlled_ReturnValue_1) == 0x000659, "Member 'BP_ResourcePile_C_ExecuteUbergraph_BP_ResourcePile::CallFunc_IsLocallyControlled_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ResourcePile_C_ExecuteUbergraph_BP_ResourcePile, CallFunc_NormalizeToRange_Value_ImplicitCast) == 0x000660, "Member 'BP_ResourcePile_C_ExecuteUbergraph_BP_ResourcePile::CallFunc_NormalizeToRange_Value_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_ResourcePile_C_ExecuteUbergraph_BP_ResourcePile, CallFunc_LessEqual_DoubleDouble_A_ImplicitCast) == 0x000668, "Member 'BP_ResourcePile_C_ExecuteUbergraph_BP_ResourcePile::CallFunc_LessEqual_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_ResourcePile_C_ExecuteUbergraph_BP_ResourcePile, CallFunc_NormalizeToRange_RangeMax_ImplicitCast) == 0x000670, "Member 'BP_ResourcePile_C_ExecuteUbergraph_BP_ResourcePile::CallFunc_NormalizeToRange_RangeMax_ImplicitCast' has a wrong offset!");

// Function BP_ResourcePile.BP_ResourcePile_C.GetDurabilityCostWhenHit
// 0x0008 (0x0008 - 0x0000)
struct BP_ResourcePile_C_GetDurabilityCostWhenHit final
{
public:
	double                                        Amount;                                            // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ResourcePile_C_GetDurabilityCostWhenHit) == 0x000008, "Wrong alignment on BP_ResourcePile_C_GetDurabilityCostWhenHit");
static_assert(sizeof(BP_ResourcePile_C_GetDurabilityCostWhenHit) == 0x000008, "Wrong size on BP_ResourcePile_C_GetDurabilityCostWhenHit");
static_assert(offsetof(BP_ResourcePile_C_GetDurabilityCostWhenHit, Amount) == 0x000000, "Member 'BP_ResourcePile_C_GetDurabilityCostWhenHit::Amount' has a wrong offset!");

// Function BP_ResourcePile.BP_ResourcePile_C.GetMaterialType
// 0x0001 (0x0001 - 0x0000)
struct BP_ResourcePile_C_GetMaterialType final
{
public:
	E_MaterialTypes                               MaterialType;                                      // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ResourcePile_C_GetMaterialType) == 0x000001, "Wrong alignment on BP_ResourcePile_C_GetMaterialType");
static_assert(sizeof(BP_ResourcePile_C_GetMaterialType) == 0x000001, "Wrong size on BP_ResourcePile_C_GetMaterialType");
static_assert(offsetof(BP_ResourcePile_C_GetMaterialType, MaterialType) == 0x000000, "Member 'BP_ResourcePile_C_GetMaterialType::MaterialType' has a wrong offset!");

// Function BP_ResourcePile.BP_ResourcePile_C.HitInterface
// 0x0018 (0x0018 - 0x0000)
struct BP_ResourcePile_C_HitInterface final
{
public:
	struct FVector                                Direction;                                         // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ResourcePile_C_HitInterface) == 0x000008, "Wrong alignment on BP_ResourcePile_C_HitInterface");
static_assert(sizeof(BP_ResourcePile_C_HitInterface) == 0x000018, "Wrong size on BP_ResourcePile_C_HitInterface");
static_assert(offsetof(BP_ResourcePile_C_HitInterface, Direction) == 0x000000, "Member 'BP_ResourcePile_C_HitInterface::Direction' has a wrong offset!");

// Function BP_ResourcePile.BP_ResourcePile_C.ImpactCosmetics
// 0x0048 (0x0048 - 0x0000)
struct BP_ResourcePile_C_ImpactCosmetics final
{
public:
	class APawn*                                  ImpactCauser;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Location;                                          // 0x0008(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                HitImpulse;                                        // 0x0020(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_ImpactEffect                                ImpactEffect;                                      // 0x0038(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x3];                                       // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   BoneName;                                          // 0x003C(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ChangedAttributes;                                 // 0x0044(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ResourcePile_C_ImpactCosmetics) == 0x000008, "Wrong alignment on BP_ResourcePile_C_ImpactCosmetics");
static_assert(sizeof(BP_ResourcePile_C_ImpactCosmetics) == 0x000048, "Wrong size on BP_ResourcePile_C_ImpactCosmetics");
static_assert(offsetof(BP_ResourcePile_C_ImpactCosmetics, ImpactCauser) == 0x000000, "Member 'BP_ResourcePile_C_ImpactCosmetics::ImpactCauser' has a wrong offset!");
static_assert(offsetof(BP_ResourcePile_C_ImpactCosmetics, Location) == 0x000008, "Member 'BP_ResourcePile_C_ImpactCosmetics::Location' has a wrong offset!");
static_assert(offsetof(BP_ResourcePile_C_ImpactCosmetics, HitImpulse) == 0x000020, "Member 'BP_ResourcePile_C_ImpactCosmetics::HitImpulse' has a wrong offset!");
static_assert(offsetof(BP_ResourcePile_C_ImpactCosmetics, ImpactEffect) == 0x000038, "Member 'BP_ResourcePile_C_ImpactCosmetics::ImpactEffect' has a wrong offset!");
static_assert(offsetof(BP_ResourcePile_C_ImpactCosmetics, BoneName) == 0x00003C, "Member 'BP_ResourcePile_C_ImpactCosmetics::BoneName' has a wrong offset!");
static_assert(offsetof(BP_ResourcePile_C_ImpactCosmetics, ChangedAttributes) == 0x000044, "Member 'BP_ResourcePile_C_ImpactCosmetics::ChangedAttributes' has a wrong offset!");

// Function BP_ResourcePile.BP_ResourcePile_C.MeleeHit
// 0x0008 (0x0008 - 0x0000)
struct BP_ResourcePile_C_MeleeHit final
{
public:
	const class AActor*                           AttackingActor;                                    // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ResourcePile_C_MeleeHit) == 0x000008, "Wrong alignment on BP_ResourcePile_C_MeleeHit");
static_assert(sizeof(BP_ResourcePile_C_MeleeHit) == 0x000008, "Wrong size on BP_ResourcePile_C_MeleeHit");
static_assert(offsetof(BP_ResourcePile_C_MeleeHit, AttackingActor) == 0x000000, "Member 'BP_ResourcePile_C_MeleeHit::AttackingActor' has a wrong offset!");

// Function BP_ResourcePile.BP_ResourcePile_C.Multi_Cosmetics Grant Resource
// 0x0018 (0x0018 - 0x0000)
struct BP_ResourcePile_C_Multi_Cosmetics_Grant_Resource final
{
public:
	struct FVector_NetQuantize                    Location;                                          // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ResourcePile_C_Multi_Cosmetics_Grant_Resource) == 0x000008, "Wrong alignment on BP_ResourcePile_C_Multi_Cosmetics_Grant_Resource");
static_assert(sizeof(BP_ResourcePile_C_Multi_Cosmetics_Grant_Resource) == 0x000018, "Wrong size on BP_ResourcePile_C_Multi_Cosmetics_Grant_Resource");
static_assert(offsetof(BP_ResourcePile_C_Multi_Cosmetics_Grant_Resource, Location) == 0x000000, "Member 'BP_ResourcePile_C_Multi_Cosmetics_Grant_Resource::Location' has a wrong offset!");

// Function BP_ResourcePile.BP_ResourcePile_C.OnDamaged
// 0x0370 (0x0370 - 0x0000)
struct BP_ResourcePile_C_OnDamaged final
{
public:
	float                                         Delta;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 Causer;                                            // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FCombatParticipant                     CombatParticipant;                                 // 0x0010(0x0060)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm)
	struct FKillMethod                            KillMethod;                                        // 0x0070(0x02E8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm)
	struct FVector_NetQuantize                    Location;                                          // 0x0358(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ResourcePile_C_OnDamaged) == 0x000008, "Wrong alignment on BP_ResourcePile_C_OnDamaged");
static_assert(sizeof(BP_ResourcePile_C_OnDamaged) == 0x000370, "Wrong size on BP_ResourcePile_C_OnDamaged");
static_assert(offsetof(BP_ResourcePile_C_OnDamaged, Delta) == 0x000000, "Member 'BP_ResourcePile_C_OnDamaged::Delta' has a wrong offset!");
static_assert(offsetof(BP_ResourcePile_C_OnDamaged, Causer) == 0x000008, "Member 'BP_ResourcePile_C_OnDamaged::Causer' has a wrong offset!");
static_assert(offsetof(BP_ResourcePile_C_OnDamaged, CombatParticipant) == 0x000010, "Member 'BP_ResourcePile_C_OnDamaged::CombatParticipant' has a wrong offset!");
static_assert(offsetof(BP_ResourcePile_C_OnDamaged, KillMethod) == 0x000070, "Member 'BP_ResourcePile_C_OnDamaged::KillMethod' has a wrong offset!");
static_assert(offsetof(BP_ResourcePile_C_OnDamaged, Location) == 0x000358, "Member 'BP_ResourcePile_C_OnDamaged::Location' has a wrong offset!");

// Function BP_ResourcePile.BP_ResourcePile_C.OnHealthChanged
// 0x0008 (0x0008 - 0x0000)
struct BP_ResourcePile_C_OnHealthChanged final
{
public:
	float                                         Health;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MaxHealth;                                         // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ResourcePile_C_OnHealthChanged) == 0x000004, "Wrong alignment on BP_ResourcePile_C_OnHealthChanged");
static_assert(sizeof(BP_ResourcePile_C_OnHealthChanged) == 0x000008, "Wrong size on BP_ResourcePile_C_OnHealthChanged");
static_assert(offsetof(BP_ResourcePile_C_OnHealthChanged, Health) == 0x000000, "Member 'BP_ResourcePile_C_OnHealthChanged::Health' has a wrong offset!");
static_assert(offsetof(BP_ResourcePile_C_OnHealthChanged, MaxHealth) == 0x000004, "Member 'BP_ResourcePile_C_OnHealthChanged::MaxHealth' has a wrong offset!");

// Function BP_ResourcePile.BP_ResourcePile_C.SpawnCrateAtComponent
// 0x0110 (0x0110 - 0x0000)
struct BP_ResourcePile_C_SpawnCrateAtComponent final
{
public:
	struct FVector                                Location;                                          // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_18[0x8];                                       // 0x0018(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x0020(0x0060)(ConstParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_TransformLocation_ReturnValue;            // 0x0080(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_98[0x8];                                       // 0x0098(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x00A0(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x0100(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_ResourceCrate_C*                    CallFunc_FinishSpawningActor_ReturnValue;          // 0x0108(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ResourcePile_C_SpawnCrateAtComponent) == 0x000010, "Wrong alignment on BP_ResourcePile_C_SpawnCrateAtComponent");
static_assert(sizeof(BP_ResourcePile_C_SpawnCrateAtComponent) == 0x000110, "Wrong size on BP_ResourcePile_C_SpawnCrateAtComponent");
static_assert(offsetof(BP_ResourcePile_C_SpawnCrateAtComponent, Location) == 0x000000, "Member 'BP_ResourcePile_C_SpawnCrateAtComponent::Location' has a wrong offset!");
static_assert(offsetof(BP_ResourcePile_C_SpawnCrateAtComponent, CallFunc_GetTransform_ReturnValue) == 0x000020, "Member 'BP_ResourcePile_C_SpawnCrateAtComponent::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ResourcePile_C_SpawnCrateAtComponent, CallFunc_TransformLocation_ReturnValue) == 0x000080, "Member 'BP_ResourcePile_C_SpawnCrateAtComponent::CallFunc_TransformLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ResourcePile_C_SpawnCrateAtComponent, CallFunc_MakeTransform_ReturnValue) == 0x0000A0, "Member 'BP_ResourcePile_C_SpawnCrateAtComponent::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ResourcePile_C_SpawnCrateAtComponent, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x000100, "Member 'BP_ResourcePile_C_SpawnCrateAtComponent::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ResourcePile_C_SpawnCrateAtComponent, CallFunc_FinishSpawningActor_ReturnValue) == 0x000108, "Member 'BP_ResourcePile_C_SpawnCrateAtComponent::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");

// Function BP_ResourcePile.BP_ResourcePile_C.SpawnCratesBasedOnDaysPassed
// 0x0078 (0x0078 - 0x0000)
struct BP_ResourcePile_C_SpawnCratesBasedOnDaysPassed final
{
public:
	int32                                         Temp_int_Variable;                                 // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_2;                               // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_3;                               // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_4;                               // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Array_Get_Item;                           // 0x0030(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Select_Default;                             // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0050(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_69[0x3];                                       // 0x0069(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ResourcePile_C_SpawnCratesBasedOnDaysPassed) == 0x000008, "Wrong alignment on BP_ResourcePile_C_SpawnCratesBasedOnDaysPassed");
static_assert(sizeof(BP_ResourcePile_C_SpawnCratesBasedOnDaysPassed) == 0x000078, "Wrong size on BP_ResourcePile_C_SpawnCratesBasedOnDaysPassed");
static_assert(offsetof(BP_ResourcePile_C_SpawnCratesBasedOnDaysPassed, Temp_int_Variable) == 0x000000, "Member 'BP_ResourcePile_C_SpawnCratesBasedOnDaysPassed::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_ResourcePile_C_SpawnCratesBasedOnDaysPassed, Temp_int_Variable_1) == 0x000004, "Member 'BP_ResourcePile_C_SpawnCratesBasedOnDaysPassed::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_ResourcePile_C_SpawnCratesBasedOnDaysPassed, Temp_int_Variable_2) == 0x000008, "Member 'BP_ResourcePile_C_SpawnCratesBasedOnDaysPassed::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_ResourcePile_C_SpawnCratesBasedOnDaysPassed, Temp_bool_True_if_break_was_hit_Variable) == 0x00000C, "Member 'BP_ResourcePile_C_SpawnCratesBasedOnDaysPassed::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(BP_ResourcePile_C_SpawnCratesBasedOnDaysPassed, Temp_int_Array_Index_Variable) == 0x000010, "Member 'BP_ResourcePile_C_SpawnCratesBasedOnDaysPassed::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_ResourcePile_C_SpawnCratesBasedOnDaysPassed, CallFunc_Add_IntInt_ReturnValue) == 0x000014, "Member 'BP_ResourcePile_C_SpawnCratesBasedOnDaysPassed::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ResourcePile_C_SpawnCratesBasedOnDaysPassed, CallFunc_Not_PreBool_ReturnValue) == 0x000018, "Member 'BP_ResourcePile_C_SpawnCratesBasedOnDaysPassed::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ResourcePile_C_SpawnCratesBasedOnDaysPassed, Temp_int_Loop_Counter_Variable) == 0x00001C, "Member 'BP_ResourcePile_C_SpawnCratesBasedOnDaysPassed::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_ResourcePile_C_SpawnCratesBasedOnDaysPassed, Temp_int_Variable_3) == 0x000020, "Member 'BP_ResourcePile_C_SpawnCratesBasedOnDaysPassed::Temp_int_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_ResourcePile_C_SpawnCratesBasedOnDaysPassed, CallFunc_Add_IntInt_ReturnValue_1) == 0x000024, "Member 'BP_ResourcePile_C_SpawnCratesBasedOnDaysPassed::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ResourcePile_C_SpawnCratesBasedOnDaysPassed, Temp_int_Variable_4) == 0x000028, "Member 'BP_ResourcePile_C_SpawnCratesBasedOnDaysPassed::Temp_int_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_ResourcePile_C_SpawnCratesBasedOnDaysPassed, CallFunc_Array_Get_Item) == 0x000030, "Member 'BP_ResourcePile_C_SpawnCratesBasedOnDaysPassed::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_ResourcePile_C_SpawnCratesBasedOnDaysPassed, K2Node_Select_Default) == 0x000048, "Member 'BP_ResourcePile_C_SpawnCratesBasedOnDaysPassed::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_ResourcePile_C_SpawnCratesBasedOnDaysPassed, CallFunc_Add_VectorVector_ReturnValue) == 0x000050, "Member 'BP_ResourcePile_C_SpawnCratesBasedOnDaysPassed::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ResourcePile_C_SpawnCratesBasedOnDaysPassed, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000068, "Member 'BP_ResourcePile_C_SpawnCratesBasedOnDaysPassed::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ResourcePile_C_SpawnCratesBasedOnDaysPassed, CallFunc_Array_Length_ReturnValue) == 0x00006C, "Member 'BP_ResourcePile_C_SpawnCratesBasedOnDaysPassed::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ResourcePile_C_SpawnCratesBasedOnDaysPassed, CallFunc_Less_IntInt_ReturnValue) == 0x000070, "Member 'BP_ResourcePile_C_SpawnCratesBasedOnDaysPassed::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ResourcePile_C_SpawnCratesBasedOnDaysPassed, CallFunc_BooleanAND_ReturnValue) == 0x000071, "Member 'BP_ResourcePile_C_SpawnCratesBasedOnDaysPassed::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function BP_ResourcePile.BP_ResourcePile_C.Update Widget Health
// 0x0008 (0x0008 - 0x0000)
struct BP_ResourcePile_C_Update_Widget_Health final
{
public:
	double                                        NormalizedHealth;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ResourcePile_C_Update_Widget_Health) == 0x000008, "Wrong alignment on BP_ResourcePile_C_Update_Widget_Health");
static_assert(sizeof(BP_ResourcePile_C_Update_Widget_Health) == 0x000008, "Wrong size on BP_ResourcePile_C_Update_Widget_Health");
static_assert(offsetof(BP_ResourcePile_C_Update_Widget_Health, NormalizedHealth) == 0x000000, "Member 'BP_ResourcePile_C_Update_Widget_Health::NormalizedHealth' has a wrong offset!");

// Function BP_ResourcePile.BP_ResourcePile_C.UserConstructionScript
// 0x0010 (0x0010 - 0x0000)
struct BP_ResourcePile_C_UserConstructionScript final
{
public:
	TArray<class UMeshComponent*>                 K2Node_MakeArray_Array;                            // 0x0000(0x0010)(ReferenceParm, ContainsInstancedReference)
};
static_assert(alignof(BP_ResourcePile_C_UserConstructionScript) == 0x000008, "Wrong alignment on BP_ResourcePile_C_UserConstructionScript");
static_assert(sizeof(BP_ResourcePile_C_UserConstructionScript) == 0x000010, "Wrong size on BP_ResourcePile_C_UserConstructionScript");
static_assert(offsetof(BP_ResourcePile_C_UserConstructionScript, K2Node_MakeArray_Array) == 0x000000, "Member 'BP_ResourcePile_C_UserConstructionScript::K2Node_MakeArray_Array' has a wrong offset!");

}

