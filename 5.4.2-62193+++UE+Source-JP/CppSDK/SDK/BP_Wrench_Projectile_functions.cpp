#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Wrench_Projectile

#include "Basic.hpp"

#include "BP_Wrench_Projectile_classes.hpp"
#include "BP_Wrench_Projectile_parameters.hpp"


namespace SDK
{

// Function BP_Wrench_Projectile.BP_Wrench_Projectile_C.ExecuteUbergraph_BP_Wrench_Projectile
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Wrench_Projectile_C::ExecuteUbergraph_BP_Wrench_Projectile(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Wrench_Projectile_C", "ExecuteUbergraph_BP_Wrench_Projectile");

	Params::BP_Wrench_Projectile_C_ExecuteUbergraph_BP_Wrench_Projectile Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Wrench_Projectile.BP_Wrench_Projectile_C.LookForTargetsInFront
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UCameraComponent*                 HeadComponent                                          (Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void ABP_Wrench_Projectile_C::LookForTargetsInFront(class UCameraComponent** HeadComponent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Wrench_Projectile_C", "LookForTargetsInFront");

	Params::BP_Wrench_Projectile_C_LookForTargetsInFront Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (HeadComponent != nullptr)
		*HeadComponent = Parms.HeadComponent;
}


// Function BP_Wrench_Projectile.BP_Wrench_Projectile_C.On Particle Timer Elapsed
// (BlueprintCallable, BlueprintEvent)

void ABP_Wrench_Projectile_C::On_Particle_Timer_Elapsed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Wrench_Projectile_C", "On Particle Timer Elapsed");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Wrench_Projectile.BP_Wrench_Projectile_C.SetHomingVariables
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_Wrench_Projectile_C::SetHomingVariables()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Wrench_Projectile_C", "SetHomingVariables");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Wrench_Projectile.BP_Wrench_Projectile_C.DeactivatePooledActor
// (Event, Public, BlueprintCallable, BlueprintEvent)

void ABP_Wrench_Projectile_C::DeactivatePooledActor()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Wrench_Projectile_C", "DeactivatePooledActor");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Wrench_Projectile.BP_Wrench_Projectile_C.PlayImpactEffect
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FHitResult                       Hit                                                    (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference)

void ABP_Wrench_Projectile_C::PlayImpactEffect(const struct FHitResult& Hit)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Wrench_Projectile_C", "PlayImpactEffect");

	Params::BP_Wrench_Projectile_C_PlayImpactEffect Parms{};

	Parms.Hit = std::move(Hit);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Wrench_Projectile.BP_Wrench_Projectile_C.PooledBeginPlay
// (Event, Public, BlueprintEvent)

void ABP_Wrench_Projectile_C::PooledBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Wrench_Projectile_C", "PooledBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}

}

