#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: QueryContext_LocationInFront

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function QueryContext_LocationInFront.QueryContext_LocationInFront_C.ProvideSingleLocation
// 0x0070 (0x0070 - 0x0000)
struct QueryContext_LocationInFront_C_ProvideSingleLocation final
{
public:
	class UObject*                                QuerierObject;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 QuerierActor;                                      // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                ResultingLocation;                                 // 0x0010(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_DoubleToVector_ReturnValue;          // 0x0028(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorForwardVector_ReturnValue;        // 0x0040(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue;        // 0x0058(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(QueryContext_LocationInFront_C_ProvideSingleLocation) == 0x000008, "Wrong alignment on QueryContext_LocationInFront_C_ProvideSingleLocation");
static_assert(sizeof(QueryContext_LocationInFront_C_ProvideSingleLocation) == 0x000070, "Wrong size on QueryContext_LocationInFront_C_ProvideSingleLocation");
static_assert(offsetof(QueryContext_LocationInFront_C_ProvideSingleLocation, QuerierObject) == 0x000000, "Member 'QueryContext_LocationInFront_C_ProvideSingleLocation::QuerierObject' has a wrong offset!");
static_assert(offsetof(QueryContext_LocationInFront_C_ProvideSingleLocation, QuerierActor) == 0x000008, "Member 'QueryContext_LocationInFront_C_ProvideSingleLocation::QuerierActor' has a wrong offset!");
static_assert(offsetof(QueryContext_LocationInFront_C_ProvideSingleLocation, ResultingLocation) == 0x000010, "Member 'QueryContext_LocationInFront_C_ProvideSingleLocation::ResultingLocation' has a wrong offset!");
static_assert(offsetof(QueryContext_LocationInFront_C_ProvideSingleLocation, CallFunc_Conv_DoubleToVector_ReturnValue) == 0x000028, "Member 'QueryContext_LocationInFront_C_ProvideSingleLocation::CallFunc_Conv_DoubleToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(QueryContext_LocationInFront_C_ProvideSingleLocation, CallFunc_GetActorForwardVector_ReturnValue) == 0x000040, "Member 'QueryContext_LocationInFront_C_ProvideSingleLocation::CallFunc_GetActorForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(QueryContext_LocationInFront_C_ProvideSingleLocation, CallFunc_Multiply_VectorVector_ReturnValue) == 0x000058, "Member 'QueryContext_LocationInFront_C_ProvideSingleLocation::CallFunc_Multiply_VectorVector_ReturnValue' has a wrong offset!");

}

