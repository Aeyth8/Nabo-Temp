#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_IndoorTrashcan

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_IndoorTrashcan.BP_IndoorTrashcan_C
// 0x0060 (0x02F0 - 0x0290)
class ABP_IndoorTrashcan_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0290(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UAudioComponent*                        SC_Garbage_SuckToBin_;                             // 0x0298(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SeeThrough;                                        // 0x02A0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UCapsuleComponent*                      Capsule;                                           // 0x02A8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UGroundskeeperReference*                GroundskeeperReference;                            // 0x02B0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   StaticMesh;                                        // 0x02B8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<class ABP_GarbageItem_C*>              HeldGarbage;                                       // 0x02C0(0x0010)(Edit, BlueprintVisible, Net, DisableEditOnTemplate, DisableEditOnInstance)
	int32                                         CurrentCapacityLevel;                              // 0x02D0(0x0004)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2D4[0x4];                                      // 0x02D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_GarbageItem_C*                      CurrentTrashInOverlap;                             // 0x02D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           RetriggerOverlapTimer;                             // 0x02E0(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	uint8                                         TeamId;                                            // 0x02E8(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void BndEvt__BP_Trashcan_Capsule_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
	void BndEvt__BP_Trashcan_Capsule_K2Node_ComponentBoundEvent_4_ComponentEndOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex);
	void Collect();
	void ExecuteUbergraph_BP_IndoorTrashcan(int32 EntryPoint);
	void GetCollectEffectLocation(struct FVector* SpawnLocation);
	void PlayFeedback();
	void ReceiveBeginPlay();
	void RecheckOverlap();
	void SetGarbageCollectionPath(class ABP_GarbageItem_C* Garbage);
	void SetTeam();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_IndoorTrashcan_C">();
	}
	static class ABP_IndoorTrashcan_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_IndoorTrashcan_C>();
	}
};
static_assert(alignof(ABP_IndoorTrashcan_C) == 0x000008, "Wrong alignment on ABP_IndoorTrashcan_C");
static_assert(sizeof(ABP_IndoorTrashcan_C) == 0x0002F0, "Wrong size on ABP_IndoorTrashcan_C");
static_assert(offsetof(ABP_IndoorTrashcan_C, UberGraphFrame) == 0x000290, "Member 'ABP_IndoorTrashcan_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_IndoorTrashcan_C, SC_Garbage_SuckToBin_) == 0x000298, "Member 'ABP_IndoorTrashcan_C::SC_Garbage_SuckToBin_' has a wrong offset!");
static_assert(offsetof(ABP_IndoorTrashcan_C, SeeThrough) == 0x0002A0, "Member 'ABP_IndoorTrashcan_C::SeeThrough' has a wrong offset!");
static_assert(offsetof(ABP_IndoorTrashcan_C, Capsule) == 0x0002A8, "Member 'ABP_IndoorTrashcan_C::Capsule' has a wrong offset!");
static_assert(offsetof(ABP_IndoorTrashcan_C, GroundskeeperReference) == 0x0002B0, "Member 'ABP_IndoorTrashcan_C::GroundskeeperReference' has a wrong offset!");
static_assert(offsetof(ABP_IndoorTrashcan_C, StaticMesh) == 0x0002B8, "Member 'ABP_IndoorTrashcan_C::StaticMesh' has a wrong offset!");
static_assert(offsetof(ABP_IndoorTrashcan_C, HeldGarbage) == 0x0002C0, "Member 'ABP_IndoorTrashcan_C::HeldGarbage' has a wrong offset!");
static_assert(offsetof(ABP_IndoorTrashcan_C, CurrentCapacityLevel) == 0x0002D0, "Member 'ABP_IndoorTrashcan_C::CurrentCapacityLevel' has a wrong offset!");
static_assert(offsetof(ABP_IndoorTrashcan_C, CurrentTrashInOverlap) == 0x0002D8, "Member 'ABP_IndoorTrashcan_C::CurrentTrashInOverlap' has a wrong offset!");
static_assert(offsetof(ABP_IndoorTrashcan_C, RetriggerOverlapTimer) == 0x0002E0, "Member 'ABP_IndoorTrashcan_C::RetriggerOverlapTimer' has a wrong offset!");
static_assert(offsetof(ABP_IndoorTrashcan_C, TeamId) == 0x0002E8, "Member 'ABP_IndoorTrashcan_C::TeamId' has a wrong offset!");

}

