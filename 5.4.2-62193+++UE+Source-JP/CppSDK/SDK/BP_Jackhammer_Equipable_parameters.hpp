#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Jackhammer_Equipable

#include "Basic.hpp"

#include "E_TimeOfDay_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BP_Jackhammer_Equipable.BP_Jackhammer_Equipable_C.ExecuteUbergraph_BP_Jackhammer_Equipable
// 0x0038 (0x0038 - 0x0000)
struct BP_Jackhammer_Equipable_C_ExecuteUbergraph_BP_Jackhammer_Equipable final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(bool InitialState, E_TimeOfDay TimeOfDay)> K2Node_CreateDelegate_OutputDelegate;              // 0x0004(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimer_ReturnValue;                  // 0x0018(0x0008)(NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        CallFunc_SpawnSoundAttached_ReturnValue;           // 0x0020(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class ADowntimeManager_C*                     CallFunc_GetActorOfClass_ReturnValue;              // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_InitialState;                   // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_TimeOfDay                                   K2Node_CustomEvent_TimeOfDay;                      // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0032(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Jackhammer_Equipable_C_ExecuteUbergraph_BP_Jackhammer_Equipable) == 0x000008, "Wrong alignment on BP_Jackhammer_Equipable_C_ExecuteUbergraph_BP_Jackhammer_Equipable");
static_assert(sizeof(BP_Jackhammer_Equipable_C_ExecuteUbergraph_BP_Jackhammer_Equipable) == 0x000038, "Wrong size on BP_Jackhammer_Equipable_C_ExecuteUbergraph_BP_Jackhammer_Equipable");
static_assert(offsetof(BP_Jackhammer_Equipable_C_ExecuteUbergraph_BP_Jackhammer_Equipable, EntryPoint) == 0x000000, "Member 'BP_Jackhammer_Equipable_C_ExecuteUbergraph_BP_Jackhammer_Equipable::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_Jackhammer_Equipable_C_ExecuteUbergraph_BP_Jackhammer_Equipable, K2Node_CreateDelegate_OutputDelegate) == 0x000004, "Member 'BP_Jackhammer_Equipable_C_ExecuteUbergraph_BP_Jackhammer_Equipable::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_Jackhammer_Equipable_C_ExecuteUbergraph_BP_Jackhammer_Equipable, CallFunc_K2_SetTimer_ReturnValue) == 0x000018, "Member 'BP_Jackhammer_Equipable_C_ExecuteUbergraph_BP_Jackhammer_Equipable::CallFunc_K2_SetTimer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Jackhammer_Equipable_C_ExecuteUbergraph_BP_Jackhammer_Equipable, CallFunc_SpawnSoundAttached_ReturnValue) == 0x000020, "Member 'BP_Jackhammer_Equipable_C_ExecuteUbergraph_BP_Jackhammer_Equipable::CallFunc_SpawnSoundAttached_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Jackhammer_Equipable_C_ExecuteUbergraph_BP_Jackhammer_Equipable, CallFunc_GetActorOfClass_ReturnValue) == 0x000028, "Member 'BP_Jackhammer_Equipable_C_ExecuteUbergraph_BP_Jackhammer_Equipable::CallFunc_GetActorOfClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Jackhammer_Equipable_C_ExecuteUbergraph_BP_Jackhammer_Equipable, K2Node_CustomEvent_InitialState) == 0x000030, "Member 'BP_Jackhammer_Equipable_C_ExecuteUbergraph_BP_Jackhammer_Equipable::K2Node_CustomEvent_InitialState' has a wrong offset!");
static_assert(offsetof(BP_Jackhammer_Equipable_C_ExecuteUbergraph_BP_Jackhammer_Equipable, K2Node_CustomEvent_TimeOfDay) == 0x000031, "Member 'BP_Jackhammer_Equipable_C_ExecuteUbergraph_BP_Jackhammer_Equipable::K2Node_CustomEvent_TimeOfDay' has a wrong offset!");
static_assert(offsetof(BP_Jackhammer_Equipable_C_ExecuteUbergraph_BP_Jackhammer_Equipable, K2Node_SwitchEnum_CmpSuccess) == 0x000032, "Member 'BP_Jackhammer_Equipable_C_ExecuteUbergraph_BP_Jackhammer_Equipable::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function BP_Jackhammer_Equipable.BP_Jackhammer_Equipable_C.On_Client_TimeOfDayChange_Event
// 0x0002 (0x0002 - 0x0000)
struct BP_Jackhammer_Equipable_C_On_Client_TimeOfDayChange_Event final
{
public:
	bool                                          InitialState;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_TimeOfDay                                   TimeOfDay;                                         // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Jackhammer_Equipable_C_On_Client_TimeOfDayChange_Event) == 0x000001, "Wrong alignment on BP_Jackhammer_Equipable_C_On_Client_TimeOfDayChange_Event");
static_assert(sizeof(BP_Jackhammer_Equipable_C_On_Client_TimeOfDayChange_Event) == 0x000002, "Wrong size on BP_Jackhammer_Equipable_C_On_Client_TimeOfDayChange_Event");
static_assert(offsetof(BP_Jackhammer_Equipable_C_On_Client_TimeOfDayChange_Event, InitialState) == 0x000000, "Member 'BP_Jackhammer_Equipable_C_On_Client_TimeOfDayChange_Event::InitialState' has a wrong offset!");
static_assert(offsetof(BP_Jackhammer_Equipable_C_On_Client_TimeOfDayChange_Event, TimeOfDay) == 0x000001, "Member 'BP_Jackhammer_Equipable_C_On_Client_TimeOfDayChange_Event::TimeOfDay' has a wrong offset!");

}

