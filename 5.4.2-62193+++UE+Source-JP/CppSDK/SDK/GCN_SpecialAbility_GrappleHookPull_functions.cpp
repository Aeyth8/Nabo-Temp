#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GCN_SpecialAbility_GrappleHookPull

#include "Basic.hpp"

#include "GCN_SpecialAbility_GrappleHookPull_classes.hpp"
#include "GCN_SpecialAbility_GrappleHookPull_parameters.hpp"


namespace SDK
{

// Function GCN_SpecialAbility_GrappleHookPull.GCN_SpecialAbility_GrappleHookPull_C.Add Cue
// (BlueprintCallable, BlueprintEvent)

void AGCN_SpecialAbility_GrappleHookPull_C::Add_Cue()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GCN_SpecialAbility_GrappleHookPull_C", "Add Cue");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GCN_SpecialAbility_GrappleHookPull.GCN_SpecialAbility_GrappleHookPull_C.BndEvt__GCN_SpecialAbility_GrappleHookPull_CurveInterpolation_K2Node_ComponentBoundEvent_0_OnCurveInterpolationUpdate__DelegateSignature
// (BlueprintEvent)
// Parameters:
// float                                   InterpolatedValue                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AGCN_SpecialAbility_GrappleHookPull_C::BndEvt__GCN_SpecialAbility_GrappleHookPull_CurveInterpolation_K2Node_ComponentBoundEvent_0_OnCurveInterpolationUpdate__DelegateSignature(float InterpolatedValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GCN_SpecialAbility_GrappleHookPull_C", "BndEvt__GCN_SpecialAbility_GrappleHookPull_CurveInterpolation_K2Node_ComponentBoundEvent_0_OnCurveInterpolationUpdate__DelegateSignature");

	Params::GCN_SpecialAbility_GrappleHookPull_C_BndEvt__GCN_SpecialAbility_GrappleHookPull_CurveInterpolation_K2Node_ComponentBoundEvent_0_OnCurveInterpolationUpdate__DelegateSignature Parms{};

	Parms.InterpolatedValue = InterpolatedValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function GCN_SpecialAbility_GrappleHookPull.GCN_SpecialAbility_GrappleHookPull_C.BndEvt__GCN_SpecialAbility_GrappleHookPull_CurveInterpolation_K2Node_ComponentBoundEvent_1_OnCurveInterpolationComplete__DelegateSignature
// (BlueprintEvent)

void AGCN_SpecialAbility_GrappleHookPull_C::BndEvt__GCN_SpecialAbility_GrappleHookPull_CurveInterpolation_K2Node_ComponentBoundEvent_1_OnCurveInterpolationComplete__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GCN_SpecialAbility_GrappleHookPull_C", "BndEvt__GCN_SpecialAbility_GrappleHookPull_CurveInterpolation_K2Node_ComponentBoundEvent_1_OnCurveInterpolationComplete__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GCN_SpecialAbility_GrappleHookPull.GCN_SpecialAbility_GrappleHookPull_C.EnableSpeedLines
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Enable                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AGCN_SpecialAbility_GrappleHookPull_C::EnableSpeedLines(bool Enable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GCN_SpecialAbility_GrappleHookPull_C", "EnableSpeedLines");

	Params::GCN_SpecialAbility_GrappleHookPull_C_EnableSpeedLines Parms{};

	Parms.Enable = Enable;

	UObject::ProcessEvent(Func, &Parms);
}


// Function GCN_SpecialAbility_GrappleHookPull.GCN_SpecialAbility_GrappleHookPull_C.ExecuteUbergraph_GCN_SpecialAbility_GrappleHookPull
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AGCN_SpecialAbility_GrappleHookPull_C::ExecuteUbergraph_GCN_SpecialAbility_GrappleHookPull(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GCN_SpecialAbility_GrappleHookPull_C", "ExecuteUbergraph_GCN_SpecialAbility_GrappleHookPull");

	Params::GCN_SpecialAbility_GrappleHookPull_C_ExecuteUbergraph_GCN_SpecialAbility_GrappleHookPull Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function GCN_SpecialAbility_GrappleHookPull.GCN_SpecialAbility_GrappleHookPull_C.LandedDelegate_Event
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FHitResult                       Hit                                                    (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)

void AGCN_SpecialAbility_GrappleHookPull_C::LandedDelegate_Event(const struct FHitResult& Hit)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GCN_SpecialAbility_GrappleHookPull_C", "LandedDelegate_Event");

	Params::GCN_SpecialAbility_GrappleHookPull_C_LandedDelegate_Event Parms{};

	Parms.Hit = std::move(Hit);

	UObject::ProcessEvent(Func, &Parms);
}


// Function GCN_SpecialAbility_GrappleHookPull.GCN_SpecialAbility_GrappleHookPull_C.OnActive
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           MyTarget                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// struct FGameplayCueParameters           Parameters_0                                           (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool AGCN_SpecialAbility_GrappleHookPull_C::OnActive(class AActor* MyTarget, const struct FGameplayCueParameters& Parameters_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GCN_SpecialAbility_GrappleHookPull_C", "OnActive");

	Params::GCN_SpecialAbility_GrappleHookPull_C_OnActive Parms{};

	Parms.MyTarget = MyTarget;
	Parms.Parameters_0 = std::move(Parameters_0);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function GCN_SpecialAbility_GrappleHookPull.GCN_SpecialAbility_GrappleHookPull_C.OnRemove
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           MyTarget                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// struct FGameplayCueParameters           Parameters_0                                           (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool AGCN_SpecialAbility_GrappleHookPull_C::OnRemove(class AActor* MyTarget, const struct FGameplayCueParameters& Parameters_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GCN_SpecialAbility_GrappleHookPull_C", "OnRemove");

	Params::GCN_SpecialAbility_GrappleHookPull_C_OnRemove Parms{};

	Parms.MyTarget = MyTarget;
	Parms.Parameters_0 = std::move(Parameters_0);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function GCN_SpecialAbility_GrappleHookPull.GCN_SpecialAbility_GrappleHookPull_C.PlaySoundAttached
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class USoundBase*                       Sound                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class UAudioComponent*                  AudioComponent                                         (Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void AGCN_SpecialAbility_GrappleHookPull_C::PlaySoundAttached(class USoundBase* Sound, class UAudioComponent** AudioComponent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GCN_SpecialAbility_GrappleHookPull_C", "PlaySoundAttached");

	Params::GCN_SpecialAbility_GrappleHookPull_C_PlaySoundAttached Parms{};

	Parms.Sound = Sound;

	UObject::ProcessEvent(Func, &Parms);

	if (AudioComponent != nullptr)
		*AudioComponent = Parms.AudioComponent;
}


// Function GCN_SpecialAbility_GrappleHookPull.GCN_SpecialAbility_GrappleHookPull_C.ReceiveTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AGCN_SpecialAbility_GrappleHookPull_C::ReceiveTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GCN_SpecialAbility_GrappleHookPull_C", "ReceiveTick");

	Params::GCN_SpecialAbility_GrappleHookPull_C_ReceiveTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function GCN_SpecialAbility_GrappleHookPull.GCN_SpecialAbility_GrappleHookPull_C.Remove Cue
// (BlueprintCallable, BlueprintEvent)

void AGCN_SpecialAbility_GrappleHookPull_C::Remove_Cue()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GCN_SpecialAbility_GrappleHookPull_C", "Remove Cue");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GCN_SpecialAbility_GrappleHookPull.GCN_SpecialAbility_GrappleHookPull_C.SetCableEndLocation
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void AGCN_SpecialAbility_GrappleHookPull_C::SetCableEndLocation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GCN_SpecialAbility_GrappleHookPull_C", "SetCableEndLocation");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GCN_SpecialAbility_GrappleHookPull.GCN_SpecialAbility_GrappleHookPull_C.SetWindVolumeMultiplierBasedOnVelocity
// (Public, BlueprintCallable, BlueprintEvent)

void AGCN_SpecialAbility_GrappleHookPull_C::SetWindVolumeMultiplierBasedOnVelocity()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GCN_SpecialAbility_GrappleHookPull_C", "SetWindVolumeMultiplierBasedOnVelocity");

	UObject::ProcessEvent(Func, nullptr);
}

}

