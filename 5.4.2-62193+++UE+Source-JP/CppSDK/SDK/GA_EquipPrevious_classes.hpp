#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GA_EquipPrevious

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "GASIW_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass GA_EquipPrevious.GA_EquipPrevious_C
// 0x0010 (0x0470 - 0x0460)
class UGA_EquipPrevious_C final : public UGameplayAbilityIW
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0460(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UEquipmentInstance*                     NewVar;                                            // 0x0468(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_GA_EquipPrevious(int32 EntryPoint);
	void K2_ActivateAbility();

	class UEquipmentManagerComponent* GetEquipmentManager() const;
	class UCharacterItemWheelComponent_C* GetItemWheelComponent() const;
	bool K2_CanActivateAbility(const struct FGameplayAbilityActorInfo& ActorInfo, const struct FGameplayAbilitySpecHandle& Handle, struct FGameplayTagContainer* RelevantTags) const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"GA_EquipPrevious_C">();
	}
	static class UGA_EquipPrevious_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGA_EquipPrevious_C>();
	}
};
static_assert(alignof(UGA_EquipPrevious_C) == 0x000010, "Wrong alignment on UGA_EquipPrevious_C");
static_assert(sizeof(UGA_EquipPrevious_C) == 0x000470, "Wrong size on UGA_EquipPrevious_C");
static_assert(offsetof(UGA_EquipPrevious_C, UberGraphFrame) == 0x000460, "Member 'UGA_EquipPrevious_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UGA_EquipPrevious_C, NewVar) == 0x000468, "Member 'UGA_EquipPrevious_C::NewVar' has a wrong offset!");

}

