#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_MultipointDeployableEquipmentInstance

#include "Basic.hpp"

#include "BP_EquipmentInstance_classes.hpp"
#include "Engine_structs.hpp"
#include "JP_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_MultipointDeployableEquipmentInstance.BP_MultipointDeployableEquipmentInstance_C
// 0x0050 (0x0190 - 0x0140)
class UBP_MultipointDeployableEquipmentInstance_C : public UBP_EquipmentInstance_C
{
public:
	TArray<class UPhysicalMaterial*>              IllegalPhysicalMaterials;                          // 0x0140(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<class UStaticMesh*>                    PlacementPreviewMeshes;                            // 0x0150(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<EObjectTypeQuery>                      AllowedObjectTypes;                                // 0x0160(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<EDirectionAxis>                        AllowedDeploymentAngles;                           // 0x0170(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	bool                                          PreviewMeshBoundCheck;                             // 0x0180(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          HomeOnly;                                          // 0x0181(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          NotOnEnemyTeam;                                    // 0x0182(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CheckCollisionAgainstDynamics;                     // 0x0183(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_184[0x4];                                      // 0x0184(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        MinimumHeight;                                     // 0x0188(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_MultipointDeployableEquipmentInstance_C">();
	}
	static class UBP_MultipointDeployableEquipmentInstance_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_MultipointDeployableEquipmentInstance_C>();
	}
};
static_assert(alignof(UBP_MultipointDeployableEquipmentInstance_C) == 0x000008, "Wrong alignment on UBP_MultipointDeployableEquipmentInstance_C");
static_assert(sizeof(UBP_MultipointDeployableEquipmentInstance_C) == 0x000190, "Wrong size on UBP_MultipointDeployableEquipmentInstance_C");
static_assert(offsetof(UBP_MultipointDeployableEquipmentInstance_C, IllegalPhysicalMaterials) == 0x000140, "Member 'UBP_MultipointDeployableEquipmentInstance_C::IllegalPhysicalMaterials' has a wrong offset!");
static_assert(offsetof(UBP_MultipointDeployableEquipmentInstance_C, PlacementPreviewMeshes) == 0x000150, "Member 'UBP_MultipointDeployableEquipmentInstance_C::PlacementPreviewMeshes' has a wrong offset!");
static_assert(offsetof(UBP_MultipointDeployableEquipmentInstance_C, AllowedObjectTypes) == 0x000160, "Member 'UBP_MultipointDeployableEquipmentInstance_C::AllowedObjectTypes' has a wrong offset!");
static_assert(offsetof(UBP_MultipointDeployableEquipmentInstance_C, AllowedDeploymentAngles) == 0x000170, "Member 'UBP_MultipointDeployableEquipmentInstance_C::AllowedDeploymentAngles' has a wrong offset!");
static_assert(offsetof(UBP_MultipointDeployableEquipmentInstance_C, PreviewMeshBoundCheck) == 0x000180, "Member 'UBP_MultipointDeployableEquipmentInstance_C::PreviewMeshBoundCheck' has a wrong offset!");
static_assert(offsetof(UBP_MultipointDeployableEquipmentInstance_C, HomeOnly) == 0x000181, "Member 'UBP_MultipointDeployableEquipmentInstance_C::HomeOnly' has a wrong offset!");
static_assert(offsetof(UBP_MultipointDeployableEquipmentInstance_C, NotOnEnemyTeam) == 0x000182, "Member 'UBP_MultipointDeployableEquipmentInstance_C::NotOnEnemyTeam' has a wrong offset!");
static_assert(offsetof(UBP_MultipointDeployableEquipmentInstance_C, CheckCollisionAgainstDynamics) == 0x000183, "Member 'UBP_MultipointDeployableEquipmentInstance_C::CheckCollisionAgainstDynamics' has a wrong offset!");
static_assert(offsetof(UBP_MultipointDeployableEquipmentInstance_C, MinimumHeight) == 0x000188, "Member 'UBP_MultipointDeployableEquipmentInstance_C::MinimumHeight' has a wrong offset!");

}

