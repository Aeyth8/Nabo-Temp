#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WI_NeighborDetailsPerkSelect

#include "Basic.hpp"

#include "GameplayTags_structs.hpp"
#include "JP_structs.hpp"


namespace SDK::Params
{

// Function WI_NeighborDetailsPerkSelect.WI_NeighborDetailsPerkSelect_C.AddPerkButtonToContainer
// 0x0028 (0x0028 - 0x0000)
struct WI_NeighborDetailsPerkSelect_C_AddPerkButtonToContainer final
{
public:
	class UWI_NeighborDetailsPerkSelectElement_C* PerkButton;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           CallFunc_GetPerkID_PerkID;                         // 0x000C(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_MatchesTag_ReturnValue;                   // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UWrapBox*                               K2Node_Select_Default;                             // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWrapBoxSlot*                           CallFunc_AddChildToWrapBox_ReturnValue;            // 0x0020(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WI_NeighborDetailsPerkSelect_C_AddPerkButtonToContainer) == 0x000008, "Wrong alignment on WI_NeighborDetailsPerkSelect_C_AddPerkButtonToContainer");
static_assert(sizeof(WI_NeighborDetailsPerkSelect_C_AddPerkButtonToContainer) == 0x000028, "Wrong size on WI_NeighborDetailsPerkSelect_C_AddPerkButtonToContainer");
static_assert(offsetof(WI_NeighborDetailsPerkSelect_C_AddPerkButtonToContainer, PerkButton) == 0x000000, "Member 'WI_NeighborDetailsPerkSelect_C_AddPerkButtonToContainer::PerkButton' has a wrong offset!");
static_assert(offsetof(WI_NeighborDetailsPerkSelect_C_AddPerkButtonToContainer, Temp_bool_Variable) == 0x000008, "Member 'WI_NeighborDetailsPerkSelect_C_AddPerkButtonToContainer::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WI_NeighborDetailsPerkSelect_C_AddPerkButtonToContainer, CallFunc_GetPerkID_PerkID) == 0x00000C, "Member 'WI_NeighborDetailsPerkSelect_C_AddPerkButtonToContainer::CallFunc_GetPerkID_PerkID' has a wrong offset!");
static_assert(offsetof(WI_NeighborDetailsPerkSelect_C_AddPerkButtonToContainer, CallFunc_MatchesTag_ReturnValue) == 0x000014, "Member 'WI_NeighborDetailsPerkSelect_C_AddPerkButtonToContainer::CallFunc_MatchesTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(WI_NeighborDetailsPerkSelect_C_AddPerkButtonToContainer, K2Node_Select_Default) == 0x000018, "Member 'WI_NeighborDetailsPerkSelect_C_AddPerkButtonToContainer::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WI_NeighborDetailsPerkSelect_C_AddPerkButtonToContainer, CallFunc_AddChildToWrapBox_ReturnValue) == 0x000020, "Member 'WI_NeighborDetailsPerkSelect_C_AddPerkButtonToContainer::CallFunc_AddChildToWrapBox_ReturnValue' has a wrong offset!");

// Function WI_NeighborDetailsPerkSelect.WI_NeighborDetailsPerkSelect_C.BindPerkButtonEvents
// 0x0028 (0x0028 - 0x0000)
struct WI_NeighborDetailsPerkSelect_C_BindPerkButtonEvents final
{
public:
	class UWI_NeighborDetailsPerkSelectElement_C* PerkSelectElement;                                 // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UWI_NeighborDetailsPerkSelectElement_C* PerkSelectElement)> K2Node_CreateDelegate_OutputDelegate;              // 0x0008(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UWI_NeighborDetailsPerkSelectElement_C* PerkSelectElement)> K2Node_CreateDelegate_OutputDelegate_1;            // 0x0018(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WI_NeighborDetailsPerkSelect_C_BindPerkButtonEvents) == 0x000008, "Wrong alignment on WI_NeighborDetailsPerkSelect_C_BindPerkButtonEvents");
static_assert(sizeof(WI_NeighborDetailsPerkSelect_C_BindPerkButtonEvents) == 0x000028, "Wrong size on WI_NeighborDetailsPerkSelect_C_BindPerkButtonEvents");
static_assert(offsetof(WI_NeighborDetailsPerkSelect_C_BindPerkButtonEvents, PerkSelectElement) == 0x000000, "Member 'WI_NeighborDetailsPerkSelect_C_BindPerkButtonEvents::PerkSelectElement' has a wrong offset!");
static_assert(offsetof(WI_NeighborDetailsPerkSelect_C_BindPerkButtonEvents, K2Node_CreateDelegate_OutputDelegate) == 0x000008, "Member 'WI_NeighborDetailsPerkSelect_C_BindPerkButtonEvents::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WI_NeighborDetailsPerkSelect_C_BindPerkButtonEvents, K2Node_CreateDelegate_OutputDelegate_1) == 0x000018, "Member 'WI_NeighborDetailsPerkSelect_C_BindPerkButtonEvents::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");

// Function WI_NeighborDetailsPerkSelect.WI_NeighborDetailsPerkSelect_C.ExecuteUbergraph_WI_NeighborDetailsPerkSelect
// 0x0014 (0x0014 - 0x0000)
struct WI_NeighborDetailsPerkSelect_C_ExecuteUbergraph_WI_NeighborDetailsPerkSelect final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           K2Node_CustomEvent_NeighborID;                     // 0x0004(0x0008)(NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_NeighborLevel;                  // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WI_NeighborDetailsPerkSelect_C_ExecuteUbergraph_WI_NeighborDetailsPerkSelect) == 0x000004, "Wrong alignment on WI_NeighborDetailsPerkSelect_C_ExecuteUbergraph_WI_NeighborDetailsPerkSelect");
static_assert(sizeof(WI_NeighborDetailsPerkSelect_C_ExecuteUbergraph_WI_NeighborDetailsPerkSelect) == 0x000014, "Wrong size on WI_NeighborDetailsPerkSelect_C_ExecuteUbergraph_WI_NeighborDetailsPerkSelect");
static_assert(offsetof(WI_NeighborDetailsPerkSelect_C_ExecuteUbergraph_WI_NeighborDetailsPerkSelect, EntryPoint) == 0x000000, "Member 'WI_NeighborDetailsPerkSelect_C_ExecuteUbergraph_WI_NeighborDetailsPerkSelect::EntryPoint' has a wrong offset!");
static_assert(offsetof(WI_NeighborDetailsPerkSelect_C_ExecuteUbergraph_WI_NeighborDetailsPerkSelect, K2Node_CustomEvent_NeighborID) == 0x000004, "Member 'WI_NeighborDetailsPerkSelect_C_ExecuteUbergraph_WI_NeighborDetailsPerkSelect::K2Node_CustomEvent_NeighborID' has a wrong offset!");
static_assert(offsetof(WI_NeighborDetailsPerkSelect_C_ExecuteUbergraph_WI_NeighborDetailsPerkSelect, K2Node_CustomEvent_NeighborLevel) == 0x00000C, "Member 'WI_NeighborDetailsPerkSelect_C_ExecuteUbergraph_WI_NeighborDetailsPerkSelect::K2Node_CustomEvent_NeighborLevel' has a wrong offset!");
static_assert(offsetof(WI_NeighborDetailsPerkSelect_C_ExecuteUbergraph_WI_NeighborDetailsPerkSelect, K2Node_Event_IsDesignTime) == 0x000010, "Member 'WI_NeighborDetailsPerkSelect_C_ExecuteUbergraph_WI_NeighborDetailsPerkSelect::K2Node_Event_IsDesignTime' has a wrong offset!");

// Function WI_NeighborDetailsPerkSelect.WI_NeighborDetailsPerkSelect_C.Initialize Perk Slot
// 0x0028 (0x0028 - 0x0000)
struct WI_NeighborDetailsPerkSelect_C_Initialize_Perk_Slot final
{
public:
	class UWI_PerkDetailsPanel_C*                 Perk_Panel;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           PerkID;                                            // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ShouldLockPerkSlot_IsLocked;              // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_ShouldLockPerkSlot_Lock_Description;      // 0x0018(0x0010)()
};
static_assert(alignof(WI_NeighborDetailsPerkSelect_C_Initialize_Perk_Slot) == 0x000008, "Wrong alignment on WI_NeighborDetailsPerkSelect_C_Initialize_Perk_Slot");
static_assert(sizeof(WI_NeighborDetailsPerkSelect_C_Initialize_Perk_Slot) == 0x000028, "Wrong size on WI_NeighborDetailsPerkSelect_C_Initialize_Perk_Slot");
static_assert(offsetof(WI_NeighborDetailsPerkSelect_C_Initialize_Perk_Slot, Perk_Panel) == 0x000000, "Member 'WI_NeighborDetailsPerkSelect_C_Initialize_Perk_Slot::Perk_Panel' has a wrong offset!");
static_assert(offsetof(WI_NeighborDetailsPerkSelect_C_Initialize_Perk_Slot, PerkID) == 0x000008, "Member 'WI_NeighborDetailsPerkSelect_C_Initialize_Perk_Slot::PerkID' has a wrong offset!");
static_assert(offsetof(WI_NeighborDetailsPerkSelect_C_Initialize_Perk_Slot, CallFunc_ShouldLockPerkSlot_IsLocked) == 0x000010, "Member 'WI_NeighborDetailsPerkSelect_C_Initialize_Perk_Slot::CallFunc_ShouldLockPerkSlot_IsLocked' has a wrong offset!");
static_assert(offsetof(WI_NeighborDetailsPerkSelect_C_Initialize_Perk_Slot, CallFunc_ShouldLockPerkSlot_Lock_Description) == 0x000018, "Member 'WI_NeighborDetailsPerkSelect_C_Initialize_Perk_Slot::CallFunc_ShouldLockPerkSlot_Lock_Description' has a wrong offset!");

// Function WI_NeighborDetailsPerkSelect.WI_NeighborDetailsPerkSelect_C.InitializeNeighborPerkSlot
// 0x0018 (0x0018 - 0x0000)
struct WI_NeighborDetailsPerkSelect_C_InitializeNeighborPerkSlot final
{
public:
	bool                                          CallFunc_ShouldLockPerkSlot_IsLocked;              // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_ShouldLockPerkSlot_Lock_Description;      // 0x0008(0x0010)()
};
static_assert(alignof(WI_NeighborDetailsPerkSelect_C_InitializeNeighborPerkSlot) == 0x000008, "Wrong alignment on WI_NeighborDetailsPerkSelect_C_InitializeNeighborPerkSlot");
static_assert(sizeof(WI_NeighborDetailsPerkSelect_C_InitializeNeighborPerkSlot) == 0x000018, "Wrong size on WI_NeighborDetailsPerkSelect_C_InitializeNeighborPerkSlot");
static_assert(offsetof(WI_NeighborDetailsPerkSelect_C_InitializeNeighborPerkSlot, CallFunc_ShouldLockPerkSlot_IsLocked) == 0x000000, "Member 'WI_NeighborDetailsPerkSelect_C_InitializeNeighborPerkSlot::CallFunc_ShouldLockPerkSlot_IsLocked' has a wrong offset!");
static_assert(offsetof(WI_NeighborDetailsPerkSelect_C_InitializeNeighborPerkSlot, CallFunc_ShouldLockPerkSlot_Lock_Description) == 0x000008, "Member 'WI_NeighborDetailsPerkSelect_C_InitializeNeighborPerkSlot::CallFunc_ShouldLockPerkSlot_Lock_Description' has a wrong offset!");

// Function WI_NeighborDetailsPerkSelect.WI_NeighborDetailsPerkSelect_C.InitializePerkDetails
// 0x000C (0x000C - 0x0000)
struct WI_NeighborDetailsPerkSelect_C_InitializePerkDetails final
{
public:
	struct FGameplayTag                           NeighborID_0;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	int32                                         NeighborLevel_0;                                   // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WI_NeighborDetailsPerkSelect_C_InitializePerkDetails) == 0x000004, "Wrong alignment on WI_NeighborDetailsPerkSelect_C_InitializePerkDetails");
static_assert(sizeof(WI_NeighborDetailsPerkSelect_C_InitializePerkDetails) == 0x00000C, "Wrong size on WI_NeighborDetailsPerkSelect_C_InitializePerkDetails");
static_assert(offsetof(WI_NeighborDetailsPerkSelect_C_InitializePerkDetails, NeighborID_0) == 0x000000, "Member 'WI_NeighborDetailsPerkSelect_C_InitializePerkDetails::NeighborID_0' has a wrong offset!");
static_assert(offsetof(WI_NeighborDetailsPerkSelect_C_InitializePerkDetails, NeighborLevel_0) == 0x000008, "Member 'WI_NeighborDetailsPerkSelect_C_InitializePerkDetails::NeighborLevel_0' has a wrong offset!");

// Function WI_NeighborDetailsPerkSelect.WI_NeighborDetailsPerkSelect_C.OnNewPerkActivatedHandler
// 0x0010 (0x0010 - 0x0000)
struct WI_NeighborDetailsPerkSelect_C_OnNewPerkActivatedHandler final
{
public:
	class UWI_NeighborDetailsPerkSelectElement_C* PerkSelectElement;                                 // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WI_NeighborDetailsPerkSelect_C_OnNewPerkActivatedHandler) == 0x000008, "Wrong alignment on WI_NeighborDetailsPerkSelect_C_OnNewPerkActivatedHandler");
static_assert(sizeof(WI_NeighborDetailsPerkSelect_C_OnNewPerkActivatedHandler) == 0x000010, "Wrong size on WI_NeighborDetailsPerkSelect_C_OnNewPerkActivatedHandler");
static_assert(offsetof(WI_NeighborDetailsPerkSelect_C_OnNewPerkActivatedHandler, PerkSelectElement) == 0x000000, "Member 'WI_NeighborDetailsPerkSelect_C_OnNewPerkActivatedHandler::PerkSelectElement' has a wrong offset!");
static_assert(offsetof(WI_NeighborDetailsPerkSelect_C_OnNewPerkActivatedHandler, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000008, "Member 'WI_NeighborDetailsPerkSelect_C_OnNewPerkActivatedHandler::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(WI_NeighborDetailsPerkSelect_C_OnNewPerkActivatedHandler, CallFunc_IsValid_ReturnValue) == 0x000009, "Member 'WI_NeighborDetailsPerkSelect_C_OnNewPerkActivatedHandler::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function WI_NeighborDetailsPerkSelect.WI_NeighborDetailsPerkSelect_C.OnNewPerkElementActivated__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct WI_NeighborDetailsPerkSelect_C_OnNewPerkElementActivated__DelegateSignature final
{
public:
	class UWI_NeighborDetailsPerkSelectElement_C* PerkSelectElement;                                 // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WI_NeighborDetailsPerkSelect_C_OnNewPerkElementActivated__DelegateSignature) == 0x000008, "Wrong alignment on WI_NeighborDetailsPerkSelect_C_OnNewPerkElementActivated__DelegateSignature");
static_assert(sizeof(WI_NeighborDetailsPerkSelect_C_OnNewPerkElementActivated__DelegateSignature) == 0x000008, "Wrong size on WI_NeighborDetailsPerkSelect_C_OnNewPerkElementActivated__DelegateSignature");
static_assert(offsetof(WI_NeighborDetailsPerkSelect_C_OnNewPerkElementActivated__DelegateSignature, PerkSelectElement) == 0x000000, "Member 'WI_NeighborDetailsPerkSelect_C_OnNewPerkElementActivated__DelegateSignature::PerkSelectElement' has a wrong offset!");

// Function WI_NeighborDetailsPerkSelect.WI_NeighborDetailsPerkSelect_C.OnNewPerkEquippedHandler
// 0x0028 (0x0028 - 0x0000)
struct WI_NeighborDetailsPerkSelect_C_OnNewPerkEquippedHandler final
{
public:
	class UWI_NeighborDetailsPerkSelectElement_C* PerkSelectElement;                                 // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           CallFunc_GetPerkID_PerkID;                         // 0x000C(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_MatchesTag_ReturnValue;                   // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UWI_NeighborDetailsPerkSelectElement_C* K2Node_Select_Default;                             // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WI_NeighborDetailsPerkSelect_C_OnNewPerkEquippedHandler) == 0x000008, "Wrong alignment on WI_NeighborDetailsPerkSelect_C_OnNewPerkEquippedHandler");
static_assert(sizeof(WI_NeighborDetailsPerkSelect_C_OnNewPerkEquippedHandler) == 0x000028, "Wrong size on WI_NeighborDetailsPerkSelect_C_OnNewPerkEquippedHandler");
static_assert(offsetof(WI_NeighborDetailsPerkSelect_C_OnNewPerkEquippedHandler, PerkSelectElement) == 0x000000, "Member 'WI_NeighborDetailsPerkSelect_C_OnNewPerkEquippedHandler::PerkSelectElement' has a wrong offset!");
static_assert(offsetof(WI_NeighborDetailsPerkSelect_C_OnNewPerkEquippedHandler, Temp_bool_Variable) == 0x000008, "Member 'WI_NeighborDetailsPerkSelect_C_OnNewPerkEquippedHandler::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WI_NeighborDetailsPerkSelect_C_OnNewPerkEquippedHandler, CallFunc_GetPerkID_PerkID) == 0x00000C, "Member 'WI_NeighborDetailsPerkSelect_C_OnNewPerkEquippedHandler::CallFunc_GetPerkID_PerkID' has a wrong offset!");
static_assert(offsetof(WI_NeighborDetailsPerkSelect_C_OnNewPerkEquippedHandler, CallFunc_MatchesTag_ReturnValue) == 0x000014, "Member 'WI_NeighborDetailsPerkSelect_C_OnNewPerkEquippedHandler::CallFunc_MatchesTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(WI_NeighborDetailsPerkSelect_C_OnNewPerkEquippedHandler, K2Node_Select_Default) == 0x000018, "Member 'WI_NeighborDetailsPerkSelect_C_OnNewPerkEquippedHandler::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WI_NeighborDetailsPerkSelect_C_OnNewPerkEquippedHandler, CallFunc_IsValid_ReturnValue) == 0x000020, "Member 'WI_NeighborDetailsPerkSelect_C_OnNewPerkEquippedHandler::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WI_NeighborDetailsPerkSelect_C_OnNewPerkEquippedHandler, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000021, "Member 'WI_NeighborDetailsPerkSelect_C_OnNewPerkEquippedHandler::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");

// Function WI_NeighborDetailsPerkSelect.WI_NeighborDetailsPerkSelect_C.OnPerkGridElementClicked__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct WI_NeighborDetailsPerkSelect_C_OnPerkGridElementClicked__DelegateSignature final
{
public:
	class UWI_NeighborDetailsPerkSelectElement_C* PerkSelectElement;                                 // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WI_NeighborDetailsPerkSelect_C_OnPerkGridElementClicked__DelegateSignature) == 0x000008, "Wrong alignment on WI_NeighborDetailsPerkSelect_C_OnPerkGridElementClicked__DelegateSignature");
static_assert(sizeof(WI_NeighborDetailsPerkSelect_C_OnPerkGridElementClicked__DelegateSignature) == 0x000008, "Wrong size on WI_NeighborDetailsPerkSelect_C_OnPerkGridElementClicked__DelegateSignature");
static_assert(offsetof(WI_NeighborDetailsPerkSelect_C_OnPerkGridElementClicked__DelegateSignature, PerkSelectElement) == 0x000000, "Member 'WI_NeighborDetailsPerkSelect_C_OnPerkGridElementClicked__DelegateSignature::PerkSelectElement' has a wrong offset!");

// Function WI_NeighborDetailsPerkSelect.WI_NeighborDetailsPerkSelect_C.OnPerkGridElementClickedHandler
// 0x0008 (0x0008 - 0x0000)
struct WI_NeighborDetailsPerkSelect_C_OnPerkGridElementClickedHandler final
{
public:
	class UWI_NeighborDetailsPerkSelectElement_C* PerkSelectElement;                                 // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WI_NeighborDetailsPerkSelect_C_OnPerkGridElementClickedHandler) == 0x000008, "Wrong alignment on WI_NeighborDetailsPerkSelect_C_OnPerkGridElementClickedHandler");
static_assert(sizeof(WI_NeighborDetailsPerkSelect_C_OnPerkGridElementClickedHandler) == 0x000008, "Wrong size on WI_NeighborDetailsPerkSelect_C_OnPerkGridElementClickedHandler");
static_assert(offsetof(WI_NeighborDetailsPerkSelect_C_OnPerkGridElementClickedHandler, PerkSelectElement) == 0x000000, "Member 'WI_NeighborDetailsPerkSelect_C_OnPerkGridElementClickedHandler::PerkSelectElement' has a wrong offset!");

// Function WI_NeighborDetailsPerkSelect.WI_NeighborDetailsPerkSelect_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct WI_NeighborDetailsPerkSelect_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WI_NeighborDetailsPerkSelect_C_PreConstruct) == 0x000001, "Wrong alignment on WI_NeighborDetailsPerkSelect_C_PreConstruct");
static_assert(sizeof(WI_NeighborDetailsPerkSelect_C_PreConstruct) == 0x000001, "Wrong size on WI_NeighborDetailsPerkSelect_C_PreConstruct");
static_assert(offsetof(WI_NeighborDetailsPerkSelect_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'WI_NeighborDetailsPerkSelect_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function WI_NeighborDetailsPerkSelect.WI_NeighborDetailsPerkSelect_C.PreconstructGeneralPerksGrid
// 0x0020 (0x0020 - 0x0000)
struct WI_NeighborDetailsPerkSelect_C_PreconstructGeneralPerksGrid final
{
public:
	class UWI_NeighborDetailsPerkSelectElement_C* CallFunc_Create_ReturnValue;                       // 0x0000(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWrapBoxSlot*                           CallFunc_AddChildToWrapBox_ReturnValue;            // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WI_NeighborDetailsPerkSelect_C_PreconstructGeneralPerksGrid) == 0x000008, "Wrong alignment on WI_NeighborDetailsPerkSelect_C_PreconstructGeneralPerksGrid");
static_assert(sizeof(WI_NeighborDetailsPerkSelect_C_PreconstructGeneralPerksGrid) == 0x000020, "Wrong size on WI_NeighborDetailsPerkSelect_C_PreconstructGeneralPerksGrid");
static_assert(offsetof(WI_NeighborDetailsPerkSelect_C_PreconstructGeneralPerksGrid, CallFunc_Create_ReturnValue) == 0x000000, "Member 'WI_NeighborDetailsPerkSelect_C_PreconstructGeneralPerksGrid::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(WI_NeighborDetailsPerkSelect_C_PreconstructGeneralPerksGrid, Temp_int_Variable) == 0x000008, "Member 'WI_NeighborDetailsPerkSelect_C_PreconstructGeneralPerksGrid::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(WI_NeighborDetailsPerkSelect_C_PreconstructGeneralPerksGrid, CallFunc_LessEqual_IntInt_ReturnValue) == 0x00000C, "Member 'WI_NeighborDetailsPerkSelect_C_PreconstructGeneralPerksGrid::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WI_NeighborDetailsPerkSelect_C_PreconstructGeneralPerksGrid, CallFunc_Add_IntInt_ReturnValue) == 0x000010, "Member 'WI_NeighborDetailsPerkSelect_C_PreconstructGeneralPerksGrid::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WI_NeighborDetailsPerkSelect_C_PreconstructGeneralPerksGrid, CallFunc_AddChildToWrapBox_ReturnValue) == 0x000018, "Member 'WI_NeighborDetailsPerkSelect_C_PreconstructGeneralPerksGrid::CallFunc_AddChildToWrapBox_ReturnValue' has a wrong offset!");

// Function WI_NeighborDetailsPerkSelect.WI_NeighborDetailsPerkSelect_C.PreconstructNeighborPerksGrid
// 0x0020 (0x0020 - 0x0000)
struct WI_NeighborDetailsPerkSelect_C_PreconstructNeighborPerksGrid final
{
public:
	class UWI_NeighborDetailsPerkSelectElement_C* CallFunc_Create_ReturnValue;                       // 0x0000(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWrapBoxSlot*                           CallFunc_AddChildToWrapBox_ReturnValue;            // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WI_NeighborDetailsPerkSelect_C_PreconstructNeighborPerksGrid) == 0x000008, "Wrong alignment on WI_NeighborDetailsPerkSelect_C_PreconstructNeighborPerksGrid");
static_assert(sizeof(WI_NeighborDetailsPerkSelect_C_PreconstructNeighborPerksGrid) == 0x000020, "Wrong size on WI_NeighborDetailsPerkSelect_C_PreconstructNeighborPerksGrid");
static_assert(offsetof(WI_NeighborDetailsPerkSelect_C_PreconstructNeighborPerksGrid, CallFunc_Create_ReturnValue) == 0x000000, "Member 'WI_NeighborDetailsPerkSelect_C_PreconstructNeighborPerksGrid::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(WI_NeighborDetailsPerkSelect_C_PreconstructNeighborPerksGrid, Temp_int_Variable) == 0x000008, "Member 'WI_NeighborDetailsPerkSelect_C_PreconstructNeighborPerksGrid::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(WI_NeighborDetailsPerkSelect_C_PreconstructNeighborPerksGrid, CallFunc_LessEqual_IntInt_ReturnValue) == 0x00000C, "Member 'WI_NeighborDetailsPerkSelect_C_PreconstructNeighborPerksGrid::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WI_NeighborDetailsPerkSelect_C_PreconstructNeighborPerksGrid, CallFunc_Add_IntInt_ReturnValue) == 0x000010, "Member 'WI_NeighborDetailsPerkSelect_C_PreconstructNeighborPerksGrid::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WI_NeighborDetailsPerkSelect_C_PreconstructNeighborPerksGrid, CallFunc_AddChildToWrapBox_ReturnValue) == 0x000018, "Member 'WI_NeighborDetailsPerkSelect_C_PreconstructNeighborPerksGrid::CallFunc_AddChildToWrapBox_ReturnValue' has a wrong offset!");

// Function WI_NeighborDetailsPerkSelect.WI_NeighborDetailsPerkSelect_C.ProcessPerkReward
// 0x0018 (0x0018 - 0x0000)
struct WI_NeighborDetailsPerkSelect_C_ProcessPerkReward final
{
public:
	struct FGameplayTag                           PerkID;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	int32                                         Level;                                             // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_TryCreatePerkButton_Succeeded;            // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UWI_NeighborDetailsPerkSelectElement_C* CallFunc_TryCreatePerkButton_PerkButton;           // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WI_NeighborDetailsPerkSelect_C_ProcessPerkReward) == 0x000008, "Wrong alignment on WI_NeighborDetailsPerkSelect_C_ProcessPerkReward");
static_assert(sizeof(WI_NeighborDetailsPerkSelect_C_ProcessPerkReward) == 0x000018, "Wrong size on WI_NeighborDetailsPerkSelect_C_ProcessPerkReward");
static_assert(offsetof(WI_NeighborDetailsPerkSelect_C_ProcessPerkReward, PerkID) == 0x000000, "Member 'WI_NeighborDetailsPerkSelect_C_ProcessPerkReward::PerkID' has a wrong offset!");
static_assert(offsetof(WI_NeighborDetailsPerkSelect_C_ProcessPerkReward, Level) == 0x000008, "Member 'WI_NeighborDetailsPerkSelect_C_ProcessPerkReward::Level' has a wrong offset!");
static_assert(offsetof(WI_NeighborDetailsPerkSelect_C_ProcessPerkReward, CallFunc_TryCreatePerkButton_Succeeded) == 0x00000C, "Member 'WI_NeighborDetailsPerkSelect_C_ProcessPerkReward::CallFunc_TryCreatePerkButton_Succeeded' has a wrong offset!");
static_assert(offsetof(WI_NeighborDetailsPerkSelect_C_ProcessPerkReward, CallFunc_TryCreatePerkButton_PerkButton) == 0x000010, "Member 'WI_NeighborDetailsPerkSelect_C_ProcessPerkReward::CallFunc_TryCreatePerkButton_PerkButton' has a wrong offset!");

// Function WI_NeighborDetailsPerkSelect.WI_NeighborDetailsPerkSelect_C.ProcessRewardsByNeighbor
// 0x0090 (0x0090 - 0x0000)
struct WI_NeighborDetailsPerkSelect_C_ProcessRewardsByNeighbor final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USeasonPassGameInstanceSubsystem*       CallFunc_GetGameInstanceSubsystem_ReturnValue;     // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TMap<int32, struct FGameplayTag>              CallFunc_GetNeighborPerkRewardsByLevel_ReturnValue; // 0x0018(0x0050)()
	TArray<int32>                                 CallFunc_Map_Keys_Keys;                            // 0x0068(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Get_Item;                           // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           CallFunc_Map_Find_Value;                           // 0x0080(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0089(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WI_NeighborDetailsPerkSelect_C_ProcessRewardsByNeighbor) == 0x000008, "Wrong alignment on WI_NeighborDetailsPerkSelect_C_ProcessRewardsByNeighbor");
static_assert(sizeof(WI_NeighborDetailsPerkSelect_C_ProcessRewardsByNeighbor) == 0x000090, "Wrong size on WI_NeighborDetailsPerkSelect_C_ProcessRewardsByNeighbor");
static_assert(offsetof(WI_NeighborDetailsPerkSelect_C_ProcessRewardsByNeighbor, Temp_int_Array_Index_Variable) == 0x000000, "Member 'WI_NeighborDetailsPerkSelect_C_ProcessRewardsByNeighbor::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WI_NeighborDetailsPerkSelect_C_ProcessRewardsByNeighbor, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'WI_NeighborDetailsPerkSelect_C_ProcessRewardsByNeighbor::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WI_NeighborDetailsPerkSelect_C_ProcessRewardsByNeighbor, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'WI_NeighborDetailsPerkSelect_C_ProcessRewardsByNeighbor::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WI_NeighborDetailsPerkSelect_C_ProcessRewardsByNeighbor, CallFunc_GetGameInstanceSubsystem_ReturnValue) == 0x000010, "Member 'WI_NeighborDetailsPerkSelect_C_ProcessRewardsByNeighbor::CallFunc_GetGameInstanceSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(WI_NeighborDetailsPerkSelect_C_ProcessRewardsByNeighbor, CallFunc_GetNeighborPerkRewardsByLevel_ReturnValue) == 0x000018, "Member 'WI_NeighborDetailsPerkSelect_C_ProcessRewardsByNeighbor::CallFunc_GetNeighborPerkRewardsByLevel_ReturnValue' has a wrong offset!");
static_assert(offsetof(WI_NeighborDetailsPerkSelect_C_ProcessRewardsByNeighbor, CallFunc_Map_Keys_Keys) == 0x000068, "Member 'WI_NeighborDetailsPerkSelect_C_ProcessRewardsByNeighbor::CallFunc_Map_Keys_Keys' has a wrong offset!");
static_assert(offsetof(WI_NeighborDetailsPerkSelect_C_ProcessRewardsByNeighbor, CallFunc_Array_Get_Item) == 0x000078, "Member 'WI_NeighborDetailsPerkSelect_C_ProcessRewardsByNeighbor::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WI_NeighborDetailsPerkSelect_C_ProcessRewardsByNeighbor, CallFunc_Array_Length_ReturnValue) == 0x00007C, "Member 'WI_NeighborDetailsPerkSelect_C_ProcessRewardsByNeighbor::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WI_NeighborDetailsPerkSelect_C_ProcessRewardsByNeighbor, CallFunc_Map_Find_Value) == 0x000080, "Member 'WI_NeighborDetailsPerkSelect_C_ProcessRewardsByNeighbor::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(WI_NeighborDetailsPerkSelect_C_ProcessRewardsByNeighbor, CallFunc_Map_Find_ReturnValue) == 0x000088, "Member 'WI_NeighborDetailsPerkSelect_C_ProcessRewardsByNeighbor::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(WI_NeighborDetailsPerkSelect_C_ProcessRewardsByNeighbor, CallFunc_Less_IntInt_ReturnValue) == 0x000089, "Member 'WI_NeighborDetailsPerkSelect_C_ProcessRewardsByNeighbor::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function WI_NeighborDetailsPerkSelect.WI_NeighborDetailsPerkSelect_C.SelectEquippedPerk
// 0x0068 (0x0068 - 0x0000)
struct WI_NeighborDetailsPerkSelect_C_SelectEquippedPerk final
{
public:
	bool                                          SelectEquippedGeneralPerk_0;                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x2];                                        // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWidget*                                CallFunc_GetChildAt_ReturnValue;                   // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWI_NeighborDetailsPerkSelectElement_C* K2Node_DynamicCast_AsWI_Neighbor_Details_Perk_Select_Element; // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPanelWidget*                           K2Node_Select_Default;                             // 0x0028(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TArray<class UWidget*>                        CallFunc_GetAllChildren_ReturnValue;               // 0x0030(0x0010)(ReferenceParm, ContainsInstancedReference)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                CallFunc_Array_Get_Item;                           // 0x0048(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWI_NeighborDetailsPerkSelectElement_C* K2Node_DynamicCast_AsWI_Neighbor_Details_Perk_Select_Element_1; // 0x0058(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetIsEquipped_IsEquipped;                 // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WI_NeighborDetailsPerkSelect_C_SelectEquippedPerk) == 0x000008, "Wrong alignment on WI_NeighborDetailsPerkSelect_C_SelectEquippedPerk");
static_assert(sizeof(WI_NeighborDetailsPerkSelect_C_SelectEquippedPerk) == 0x000068, "Wrong size on WI_NeighborDetailsPerkSelect_C_SelectEquippedPerk");
static_assert(offsetof(WI_NeighborDetailsPerkSelect_C_SelectEquippedPerk, SelectEquippedGeneralPerk_0) == 0x000000, "Member 'WI_NeighborDetailsPerkSelect_C_SelectEquippedPerk::SelectEquippedGeneralPerk_0' has a wrong offset!");
static_assert(offsetof(WI_NeighborDetailsPerkSelect_C_SelectEquippedPerk, Temp_bool_Variable) == 0x000001, "Member 'WI_NeighborDetailsPerkSelect_C_SelectEquippedPerk::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WI_NeighborDetailsPerkSelect_C_SelectEquippedPerk, Temp_int_Array_Index_Variable) == 0x000004, "Member 'WI_NeighborDetailsPerkSelect_C_SelectEquippedPerk::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WI_NeighborDetailsPerkSelect_C_SelectEquippedPerk, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'WI_NeighborDetailsPerkSelect_C_SelectEquippedPerk::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WI_NeighborDetailsPerkSelect_C_SelectEquippedPerk, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'WI_NeighborDetailsPerkSelect_C_SelectEquippedPerk::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WI_NeighborDetailsPerkSelect_C_SelectEquippedPerk, CallFunc_GetChildAt_ReturnValue) == 0x000010, "Member 'WI_NeighborDetailsPerkSelect_C_SelectEquippedPerk::CallFunc_GetChildAt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WI_NeighborDetailsPerkSelect_C_SelectEquippedPerk, K2Node_DynamicCast_AsWI_Neighbor_Details_Perk_Select_Element) == 0x000018, "Member 'WI_NeighborDetailsPerkSelect_C_SelectEquippedPerk::K2Node_DynamicCast_AsWI_Neighbor_Details_Perk_Select_Element' has a wrong offset!");
static_assert(offsetof(WI_NeighborDetailsPerkSelect_C_SelectEquippedPerk, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'WI_NeighborDetailsPerkSelect_C_SelectEquippedPerk::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WI_NeighborDetailsPerkSelect_C_SelectEquippedPerk, K2Node_Select_Default) == 0x000028, "Member 'WI_NeighborDetailsPerkSelect_C_SelectEquippedPerk::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WI_NeighborDetailsPerkSelect_C_SelectEquippedPerk, CallFunc_GetAllChildren_ReturnValue) == 0x000030, "Member 'WI_NeighborDetailsPerkSelect_C_SelectEquippedPerk::CallFunc_GetAllChildren_ReturnValue' has a wrong offset!");
static_assert(offsetof(WI_NeighborDetailsPerkSelect_C_SelectEquippedPerk, CallFunc_Array_Length_ReturnValue) == 0x000040, "Member 'WI_NeighborDetailsPerkSelect_C_SelectEquippedPerk::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WI_NeighborDetailsPerkSelect_C_SelectEquippedPerk, CallFunc_Array_Get_Item) == 0x000048, "Member 'WI_NeighborDetailsPerkSelect_C_SelectEquippedPerk::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WI_NeighborDetailsPerkSelect_C_SelectEquippedPerk, CallFunc_Less_IntInt_ReturnValue) == 0x000050, "Member 'WI_NeighborDetailsPerkSelect_C_SelectEquippedPerk::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WI_NeighborDetailsPerkSelect_C_SelectEquippedPerk, K2Node_DynamicCast_AsWI_Neighbor_Details_Perk_Select_Element_1) == 0x000058, "Member 'WI_NeighborDetailsPerkSelect_C_SelectEquippedPerk::K2Node_DynamicCast_AsWI_Neighbor_Details_Perk_Select_Element_1' has a wrong offset!");
static_assert(offsetof(WI_NeighborDetailsPerkSelect_C_SelectEquippedPerk, K2Node_DynamicCast_bSuccess_1) == 0x000060, "Member 'WI_NeighborDetailsPerkSelect_C_SelectEquippedPerk::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(WI_NeighborDetailsPerkSelect_C_SelectEquippedPerk, CallFunc_GetIsEquipped_IsEquipped) == 0x000061, "Member 'WI_NeighborDetailsPerkSelect_C_SelectEquippedPerk::CallFunc_GetIsEquipped_IsEquipped' has a wrong offset!");

// Function WI_NeighborDetailsPerkSelect.WI_NeighborDetailsPerkSelect_C.SetNeighborID
// 0x0008 (0x0008 - 0x0000)
struct WI_NeighborDetailsPerkSelect_C_SetNeighborID final
{
public:
	struct FGameplayTag                           NeighborID_0;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WI_NeighborDetailsPerkSelect_C_SetNeighborID) == 0x000004, "Wrong alignment on WI_NeighborDetailsPerkSelect_C_SetNeighborID");
static_assert(sizeof(WI_NeighborDetailsPerkSelect_C_SetNeighborID) == 0x000008, "Wrong size on WI_NeighborDetailsPerkSelect_C_SetNeighborID");
static_assert(offsetof(WI_NeighborDetailsPerkSelect_C_SetNeighborID, NeighborID_0) == 0x000000, "Member 'WI_NeighborDetailsPerkSelect_C_SetNeighborID::NeighborID_0' has a wrong offset!");

// Function WI_NeighborDetailsPerkSelect.WI_NeighborDetailsPerkSelect_C.SetNeighborLevel
// 0x0018 (0x0018 - 0x0000)
struct WI_NeighborDetailsPerkSelect_C_SetNeighborLevel final
{
public:
	int32                                         NeighborLevel_0;                                   // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0008(0x0010)()
};
static_assert(alignof(WI_NeighborDetailsPerkSelect_C_SetNeighborLevel) == 0x000008, "Wrong alignment on WI_NeighborDetailsPerkSelect_C_SetNeighborLevel");
static_assert(sizeof(WI_NeighborDetailsPerkSelect_C_SetNeighborLevel) == 0x000018, "Wrong size on WI_NeighborDetailsPerkSelect_C_SetNeighborLevel");
static_assert(offsetof(WI_NeighborDetailsPerkSelect_C_SetNeighborLevel, NeighborLevel_0) == 0x000000, "Member 'WI_NeighborDetailsPerkSelect_C_SetNeighborLevel::NeighborLevel_0' has a wrong offset!");
static_assert(offsetof(WI_NeighborDetailsPerkSelect_C_SetNeighborLevel, CallFunc_Conv_IntToText_ReturnValue) == 0x000008, "Member 'WI_NeighborDetailsPerkSelect_C_SetNeighborLevel::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");

// Function WI_NeighborDetailsPerkSelect.WI_NeighborDetailsPerkSelect_C.TryCreatePerkButton
// 0x0088 (0x0088 - 0x0000)
struct WI_NeighborDetailsPerkSelect_C_TryCreatePerkButton final
{
public:
	struct FGameplayTag                           PerkID;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	int32                                         LevelRequirement;                                  // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Succeeded;                                         // 0x000C(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UWI_NeighborDetailsPerkSelectElement_C* PerkButton;                                        // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_MatchesTag_ReturnValue;                   // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_MatchesTag_ReturnValue_1;                 // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_MatchesTag_ReturnValue_2;                 // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x001B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWI_NeighborDetailsPerkSelectElement_C* CallFunc_Create_ReturnValue;                       // 0x0020(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class ULocalUserOnlineServicesGameInstanceSubsystem* CallFunc_GetGameInstanceSubsystem_ReturnValue;     // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_MatchesTag_ReturnValue_3;                 // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_32[0x6];                                       // 0x0032(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FNeighborLoadout                       CallFunc_GetNeighborLoadout_ReturnValue;           // 0x0038(0x0030)()
	struct FGameplayTag                           K2Node_Select_Default;                             // 0x0068(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_GameplayTag_ReturnValue;       // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_71[0x7];                                       // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue_1;                // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WI_NeighborDetailsPerkSelect_C_TryCreatePerkButton) == 0x000008, "Wrong alignment on WI_NeighborDetailsPerkSelect_C_TryCreatePerkButton");
static_assert(sizeof(WI_NeighborDetailsPerkSelect_C_TryCreatePerkButton) == 0x000088, "Wrong size on WI_NeighborDetailsPerkSelect_C_TryCreatePerkButton");
static_assert(offsetof(WI_NeighborDetailsPerkSelect_C_TryCreatePerkButton, PerkID) == 0x000000, "Member 'WI_NeighborDetailsPerkSelect_C_TryCreatePerkButton::PerkID' has a wrong offset!");
static_assert(offsetof(WI_NeighborDetailsPerkSelect_C_TryCreatePerkButton, LevelRequirement) == 0x000008, "Member 'WI_NeighborDetailsPerkSelect_C_TryCreatePerkButton::LevelRequirement' has a wrong offset!");
static_assert(offsetof(WI_NeighborDetailsPerkSelect_C_TryCreatePerkButton, Succeeded) == 0x00000C, "Member 'WI_NeighborDetailsPerkSelect_C_TryCreatePerkButton::Succeeded' has a wrong offset!");
static_assert(offsetof(WI_NeighborDetailsPerkSelect_C_TryCreatePerkButton, PerkButton) == 0x000010, "Member 'WI_NeighborDetailsPerkSelect_C_TryCreatePerkButton::PerkButton' has a wrong offset!");
static_assert(offsetof(WI_NeighborDetailsPerkSelect_C_TryCreatePerkButton, CallFunc_MatchesTag_ReturnValue) == 0x000018, "Member 'WI_NeighborDetailsPerkSelect_C_TryCreatePerkButton::CallFunc_MatchesTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(WI_NeighborDetailsPerkSelect_C_TryCreatePerkButton, CallFunc_MatchesTag_ReturnValue_1) == 0x000019, "Member 'WI_NeighborDetailsPerkSelect_C_TryCreatePerkButton::CallFunc_MatchesTag_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WI_NeighborDetailsPerkSelect_C_TryCreatePerkButton, CallFunc_MatchesTag_ReturnValue_2) == 0x00001A, "Member 'WI_NeighborDetailsPerkSelect_C_TryCreatePerkButton::CallFunc_MatchesTag_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WI_NeighborDetailsPerkSelect_C_TryCreatePerkButton, CallFunc_BooleanOR_ReturnValue) == 0x00001B, "Member 'WI_NeighborDetailsPerkSelect_C_TryCreatePerkButton::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(WI_NeighborDetailsPerkSelect_C_TryCreatePerkButton, CallFunc_Create_ReturnValue) == 0x000020, "Member 'WI_NeighborDetailsPerkSelect_C_TryCreatePerkButton::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(WI_NeighborDetailsPerkSelect_C_TryCreatePerkButton, CallFunc_GetGameInstanceSubsystem_ReturnValue) == 0x000028, "Member 'WI_NeighborDetailsPerkSelect_C_TryCreatePerkButton::CallFunc_GetGameInstanceSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(WI_NeighborDetailsPerkSelect_C_TryCreatePerkButton, CallFunc_MatchesTag_ReturnValue_3) == 0x000030, "Member 'WI_NeighborDetailsPerkSelect_C_TryCreatePerkButton::CallFunc_MatchesTag_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WI_NeighborDetailsPerkSelect_C_TryCreatePerkButton, Temp_bool_Variable) == 0x000031, "Member 'WI_NeighborDetailsPerkSelect_C_TryCreatePerkButton::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WI_NeighborDetailsPerkSelect_C_TryCreatePerkButton, CallFunc_GetNeighborLoadout_ReturnValue) == 0x000038, "Member 'WI_NeighborDetailsPerkSelect_C_TryCreatePerkButton::CallFunc_GetNeighborLoadout_ReturnValue' has a wrong offset!");
static_assert(offsetof(WI_NeighborDetailsPerkSelect_C_TryCreatePerkButton, K2Node_Select_Default) == 0x000068, "Member 'WI_NeighborDetailsPerkSelect_C_TryCreatePerkButton::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WI_NeighborDetailsPerkSelect_C_TryCreatePerkButton, CallFunc_EqualEqual_GameplayTag_ReturnValue) == 0x000070, "Member 'WI_NeighborDetailsPerkSelect_C_TryCreatePerkButton::CallFunc_EqualEqual_GameplayTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(WI_NeighborDetailsPerkSelect_C_TryCreatePerkButton, CallFunc_SelectFloat_ReturnValue) == 0x000078, "Member 'WI_NeighborDetailsPerkSelect_C_TryCreatePerkButton::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WI_NeighborDetailsPerkSelect_C_TryCreatePerkButton, CallFunc_SelectFloat_ReturnValue_1) == 0x000080, "Member 'WI_NeighborDetailsPerkSelect_C_TryCreatePerkButton::CallFunc_SelectFloat_ReturnValue_1' has a wrong offset!");

// Function WI_NeighborDetailsPerkSelect.WI_NeighborDetailsPerkSelect_C.UpdateEquippedPerks
// 0x0038 (0x0038 - 0x0000)
struct WI_NeighborDetailsPerkSelect_C_UpdateEquippedPerks final
{
public:
	class ULocalUserOnlineServicesGameInstanceSubsystem* CallFunc_GetGameInstanceSubsystem_ReturnValue;     // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FNeighborLoadout                       CallFunc_GetNeighborLoadout_ReturnValue;           // 0x0008(0x0030)()
};
static_assert(alignof(WI_NeighborDetailsPerkSelect_C_UpdateEquippedPerks) == 0x000008, "Wrong alignment on WI_NeighborDetailsPerkSelect_C_UpdateEquippedPerks");
static_assert(sizeof(WI_NeighborDetailsPerkSelect_C_UpdateEquippedPerks) == 0x000038, "Wrong size on WI_NeighborDetailsPerkSelect_C_UpdateEquippedPerks");
static_assert(offsetof(WI_NeighborDetailsPerkSelect_C_UpdateEquippedPerks, CallFunc_GetGameInstanceSubsystem_ReturnValue) == 0x000000, "Member 'WI_NeighborDetailsPerkSelect_C_UpdateEquippedPerks::CallFunc_GetGameInstanceSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(WI_NeighborDetailsPerkSelect_C_UpdateEquippedPerks, CallFunc_GetNeighborLoadout_ReturnValue) == 0x000008, "Member 'WI_NeighborDetailsPerkSelect_C_UpdateEquippedPerks::CallFunc_GetNeighborLoadout_ReturnValue' has a wrong offset!");

}

