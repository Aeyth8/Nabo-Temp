#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Wrench_Projectile

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function BP_Wrench_Projectile.BP_Wrench_Projectile_C.ExecuteUbergraph_BP_Wrench_Projectile
// 0x0078 (0x0078 - 0x0000)
struct BP_Wrench_Projectile_C_ExecuteUbergraph_BP_Wrench_Projectile final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0008(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCameraComponent*                       CallFunc_LookForTargetsInFront_HeadComponent;      // 0x0020(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x002C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0040(0x0008)(NoDestructor, HasGetValueTypeHash)
	class UProjectileMovementComponent*           CallFunc_GetProjectileComponent_ProjectileComponent; // 0x0048(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UProjectileMovementComponent*           CallFunc_GetProjectileComponent_ProjectileComponent_1; // 0x0050(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_Conv_VectorToRotator_ReturnValue;         // 0x0058(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UNiagaraComponent*                      CallFunc_SpawnSystemAtLocation_ReturnValue;        // 0x0070(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Wrench_Projectile_C_ExecuteUbergraph_BP_Wrench_Projectile) == 0x000008, "Wrong alignment on BP_Wrench_Projectile_C_ExecuteUbergraph_BP_Wrench_Projectile");
static_assert(sizeof(BP_Wrench_Projectile_C_ExecuteUbergraph_BP_Wrench_Projectile) == 0x000078, "Wrong size on BP_Wrench_Projectile_C_ExecuteUbergraph_BP_Wrench_Projectile");
static_assert(offsetof(BP_Wrench_Projectile_C_ExecuteUbergraph_BP_Wrench_Projectile, EntryPoint) == 0x000000, "Member 'BP_Wrench_Projectile_C_ExecuteUbergraph_BP_Wrench_Projectile::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_Wrench_Projectile_C_ExecuteUbergraph_BP_Wrench_Projectile, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000008, "Member 'BP_Wrench_Projectile_C_ExecuteUbergraph_BP_Wrench_Projectile::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Wrench_Projectile_C_ExecuteUbergraph_BP_Wrench_Projectile, CallFunc_LookForTargetsInFront_HeadComponent) == 0x000020, "Member 'BP_Wrench_Projectile_C_ExecuteUbergraph_BP_Wrench_Projectile::CallFunc_LookForTargetsInFront_HeadComponent' has a wrong offset!");
static_assert(offsetof(BP_Wrench_Projectile_C_ExecuteUbergraph_BP_Wrench_Projectile, CallFunc_IsValid_ReturnValue) == 0x000028, "Member 'BP_Wrench_Projectile_C_ExecuteUbergraph_BP_Wrench_Projectile::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Wrench_Projectile_C_ExecuteUbergraph_BP_Wrench_Projectile, K2Node_CreateDelegate_OutputDelegate) == 0x00002C, "Member 'BP_Wrench_Projectile_C_ExecuteUbergraph_BP_Wrench_Projectile::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_Wrench_Projectile_C_ExecuteUbergraph_BP_Wrench_Projectile, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000040, "Member 'BP_Wrench_Projectile_C_ExecuteUbergraph_BP_Wrench_Projectile::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Wrench_Projectile_C_ExecuteUbergraph_BP_Wrench_Projectile, CallFunc_GetProjectileComponent_ProjectileComponent) == 0x000048, "Member 'BP_Wrench_Projectile_C_ExecuteUbergraph_BP_Wrench_Projectile::CallFunc_GetProjectileComponent_ProjectileComponent' has a wrong offset!");
static_assert(offsetof(BP_Wrench_Projectile_C_ExecuteUbergraph_BP_Wrench_Projectile, CallFunc_GetProjectileComponent_ProjectileComponent_1) == 0x000050, "Member 'BP_Wrench_Projectile_C_ExecuteUbergraph_BP_Wrench_Projectile::CallFunc_GetProjectileComponent_ProjectileComponent_1' has a wrong offset!");
static_assert(offsetof(BP_Wrench_Projectile_C_ExecuteUbergraph_BP_Wrench_Projectile, CallFunc_Conv_VectorToRotator_ReturnValue) == 0x000058, "Member 'BP_Wrench_Projectile_C_ExecuteUbergraph_BP_Wrench_Projectile::CallFunc_Conv_VectorToRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Wrench_Projectile_C_ExecuteUbergraph_BP_Wrench_Projectile, CallFunc_SpawnSystemAtLocation_ReturnValue) == 0x000070, "Member 'BP_Wrench_Projectile_C_ExecuteUbergraph_BP_Wrench_Projectile::CallFunc_SpawnSystemAtLocation_ReturnValue' has a wrong offset!");

// Function BP_Wrench_Projectile.BP_Wrench_Projectile_C.LookForTargetsInFront
// 0x0320 (0x0320 - 0x0000)
struct BP_Wrench_Projectile_C_LookForTargetsInFront final
{
public:
	class UCameraComponent*                       HeadComponent;                                     // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	uint8                                         Temp_byte_Variable;                                // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class ITeamableInterface>    K2Node_DynamicCast_AsTeamable_Interface;           // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetTeamID_ReturnValue;                    // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2A[0x6];                                       // 0x002A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Conv_DoubleToVector_ReturnValue;          // 0x0030(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorForwardVector_ReturnValue;        // 0x0048(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_GetInstigator_ReturnValue;                // 0x0060(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue;        // 0x0068(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         K2Node_MakeArray_Array;                            // 0x0080(0x0010)(ConstParm, ReferenceParm)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0090(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x00A8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Temp_byte_Variable_1;                              // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C1[0x7];                                       // 0x00C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<EObjectTypeQuery>                      K2Node_MakeArray_Array_1;                          // 0x00C8(0x0010)(ConstParm, ReferenceParm)
	TArray<struct FHitResult>                     CallFunc_SphereTraceMultiForObjects_OutHits;       // 0x00D8(0x0010)(ReferenceParm, ContainsInstancedReference)
	bool                                          CallFunc_SphereTraceMultiForObjects_ReturnValue;   // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E9[0x7];                                       // 0x00E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_Array_Get_Item;                           // 0x00F0(0x00F8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x01E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x01EC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x01ED(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1EE[0x2];                                      // 0x01EE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x01F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x01F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x01F8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x0210(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x0228(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x0240(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0258(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0260(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0268(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0270(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_BoneName;                  // 0x0278(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0280(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x0284(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x0288(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_28C[0x4];                                      // 0x028C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x0290(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x02A8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x02C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C1[0x7];                                      // 0x02C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharacter*                             K2Node_DynamicCast_AsCharacter;                    // 0x02C8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x02D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2D1[0x7];                                      // 0x02D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class ITeamableInterface>    K2Node_DynamicCast_AsTeamable_Interface_1;         // 0x02D8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x02E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2E9[0x7];                                      // 0x02E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UCameraComponent*>               CallFunc_GetComponentsByTag_ReturnValue;           // 0x02F0(0x0010)(ReferenceParm, ContainsInstancedReference)
	uint8                                         CallFunc_GetTeamID_ReturnValue_1;                  // 0x0300(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_301[0x7];                                      // 0x0301(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCameraComponent*                       CallFunc_Array_Get_Item_1;                         // 0x0308(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0310(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0311(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_312[0x6];                                      // 0x0312(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Conv_DoubleToVector_InDouble_ImplicitCast; // 0x0318(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Wrench_Projectile_C_LookForTargetsInFront) == 0x000008, "Wrong alignment on BP_Wrench_Projectile_C_LookForTargetsInFront");
static_assert(sizeof(BP_Wrench_Projectile_C_LookForTargetsInFront) == 0x000320, "Wrong size on BP_Wrench_Projectile_C_LookForTargetsInFront");
static_assert(offsetof(BP_Wrench_Projectile_C_LookForTargetsInFront, HeadComponent) == 0x000000, "Member 'BP_Wrench_Projectile_C_LookForTargetsInFront::HeadComponent' has a wrong offset!");
static_assert(offsetof(BP_Wrench_Projectile_C_LookForTargetsInFront, Temp_byte_Variable) == 0x000008, "Member 'BP_Wrench_Projectile_C_LookForTargetsInFront::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_Wrench_Projectile_C_LookForTargetsInFront, Temp_int_Array_Index_Variable) == 0x00000C, "Member 'BP_Wrench_Projectile_C_LookForTargetsInFront::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_Wrench_Projectile_C_LookForTargetsInFront, Temp_int_Loop_Counter_Variable) == 0x000010, "Member 'BP_Wrench_Projectile_C_LookForTargetsInFront::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_Wrench_Projectile_C_LookForTargetsInFront, CallFunc_Add_IntInt_ReturnValue) == 0x000014, "Member 'BP_Wrench_Projectile_C_LookForTargetsInFront::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Wrench_Projectile_C_LookForTargetsInFront, K2Node_DynamicCast_AsTeamable_Interface) == 0x000018, "Member 'BP_Wrench_Projectile_C_LookForTargetsInFront::K2Node_DynamicCast_AsTeamable_Interface' has a wrong offset!");
static_assert(offsetof(BP_Wrench_Projectile_C_LookForTargetsInFront, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'BP_Wrench_Projectile_C_LookForTargetsInFront::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_Wrench_Projectile_C_LookForTargetsInFront, CallFunc_GetTeamID_ReturnValue) == 0x000029, "Member 'BP_Wrench_Projectile_C_LookForTargetsInFront::CallFunc_GetTeamID_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Wrench_Projectile_C_LookForTargetsInFront, CallFunc_Conv_DoubleToVector_ReturnValue) == 0x000030, "Member 'BP_Wrench_Projectile_C_LookForTargetsInFront::CallFunc_Conv_DoubleToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Wrench_Projectile_C_LookForTargetsInFront, CallFunc_GetActorForwardVector_ReturnValue) == 0x000048, "Member 'BP_Wrench_Projectile_C_LookForTargetsInFront::CallFunc_GetActorForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Wrench_Projectile_C_LookForTargetsInFront, CallFunc_GetInstigator_ReturnValue) == 0x000060, "Member 'BP_Wrench_Projectile_C_LookForTargetsInFront::CallFunc_GetInstigator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Wrench_Projectile_C_LookForTargetsInFront, CallFunc_Multiply_VectorVector_ReturnValue) == 0x000068, "Member 'BP_Wrench_Projectile_C_LookForTargetsInFront::CallFunc_Multiply_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Wrench_Projectile_C_LookForTargetsInFront, K2Node_MakeArray_Array) == 0x000080, "Member 'BP_Wrench_Projectile_C_LookForTargetsInFront::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_Wrench_Projectile_C_LookForTargetsInFront, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000090, "Member 'BP_Wrench_Projectile_C_LookForTargetsInFront::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Wrench_Projectile_C_LookForTargetsInFront, CallFunc_Add_VectorVector_ReturnValue) == 0x0000A8, "Member 'BP_Wrench_Projectile_C_LookForTargetsInFront::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Wrench_Projectile_C_LookForTargetsInFront, Temp_byte_Variable_1) == 0x0000C0, "Member 'BP_Wrench_Projectile_C_LookForTargetsInFront::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_Wrench_Projectile_C_LookForTargetsInFront, K2Node_MakeArray_Array_1) == 0x0000C8, "Member 'BP_Wrench_Projectile_C_LookForTargetsInFront::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(BP_Wrench_Projectile_C_LookForTargetsInFront, CallFunc_SphereTraceMultiForObjects_OutHits) == 0x0000D8, "Member 'BP_Wrench_Projectile_C_LookForTargetsInFront::CallFunc_SphereTraceMultiForObjects_OutHits' has a wrong offset!");
static_assert(offsetof(BP_Wrench_Projectile_C_LookForTargetsInFront, CallFunc_SphereTraceMultiForObjects_ReturnValue) == 0x0000E8, "Member 'BP_Wrench_Projectile_C_LookForTargetsInFront::CallFunc_SphereTraceMultiForObjects_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Wrench_Projectile_C_LookForTargetsInFront, CallFunc_Array_Get_Item) == 0x0000F0, "Member 'BP_Wrench_Projectile_C_LookForTargetsInFront::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_Wrench_Projectile_C_LookForTargetsInFront, CallFunc_Array_Length_ReturnValue) == 0x0001E8, "Member 'BP_Wrench_Projectile_C_LookForTargetsInFront::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Wrench_Projectile_C_LookForTargetsInFront, CallFunc_BreakHitResult_bBlockingHit) == 0x0001EC, "Member 'BP_Wrench_Projectile_C_LookForTargetsInFront::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(BP_Wrench_Projectile_C_LookForTargetsInFront, CallFunc_BreakHitResult_bInitialOverlap) == 0x0001ED, "Member 'BP_Wrench_Projectile_C_LookForTargetsInFront::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(BP_Wrench_Projectile_C_LookForTargetsInFront, CallFunc_BreakHitResult_Time) == 0x0001F0, "Member 'BP_Wrench_Projectile_C_LookForTargetsInFront::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(BP_Wrench_Projectile_C_LookForTargetsInFront, CallFunc_BreakHitResult_Distance) == 0x0001F4, "Member 'BP_Wrench_Projectile_C_LookForTargetsInFront::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(BP_Wrench_Projectile_C_LookForTargetsInFront, CallFunc_BreakHitResult_Location) == 0x0001F8, "Member 'BP_Wrench_Projectile_C_LookForTargetsInFront::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(BP_Wrench_Projectile_C_LookForTargetsInFront, CallFunc_BreakHitResult_ImpactPoint) == 0x000210, "Member 'BP_Wrench_Projectile_C_LookForTargetsInFront::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(BP_Wrench_Projectile_C_LookForTargetsInFront, CallFunc_BreakHitResult_Normal) == 0x000228, "Member 'BP_Wrench_Projectile_C_LookForTargetsInFront::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(BP_Wrench_Projectile_C_LookForTargetsInFront, CallFunc_BreakHitResult_ImpactNormal) == 0x000240, "Member 'BP_Wrench_Projectile_C_LookForTargetsInFront::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(BP_Wrench_Projectile_C_LookForTargetsInFront, CallFunc_BreakHitResult_PhysMat) == 0x000258, "Member 'BP_Wrench_Projectile_C_LookForTargetsInFront::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(BP_Wrench_Projectile_C_LookForTargetsInFront, CallFunc_BreakHitResult_HitActor) == 0x000260, "Member 'BP_Wrench_Projectile_C_LookForTargetsInFront::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(BP_Wrench_Projectile_C_LookForTargetsInFront, CallFunc_BreakHitResult_HitComponent) == 0x000268, "Member 'BP_Wrench_Projectile_C_LookForTargetsInFront::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(BP_Wrench_Projectile_C_LookForTargetsInFront, CallFunc_BreakHitResult_HitBoneName) == 0x000270, "Member 'BP_Wrench_Projectile_C_LookForTargetsInFront::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(BP_Wrench_Projectile_C_LookForTargetsInFront, CallFunc_BreakHitResult_BoneName) == 0x000278, "Member 'BP_Wrench_Projectile_C_LookForTargetsInFront::CallFunc_BreakHitResult_BoneName' has a wrong offset!");
static_assert(offsetof(BP_Wrench_Projectile_C_LookForTargetsInFront, CallFunc_BreakHitResult_HitItem) == 0x000280, "Member 'BP_Wrench_Projectile_C_LookForTargetsInFront::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(BP_Wrench_Projectile_C_LookForTargetsInFront, CallFunc_BreakHitResult_ElementIndex) == 0x000284, "Member 'BP_Wrench_Projectile_C_LookForTargetsInFront::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(BP_Wrench_Projectile_C_LookForTargetsInFront, CallFunc_BreakHitResult_FaceIndex) == 0x000288, "Member 'BP_Wrench_Projectile_C_LookForTargetsInFront::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(BP_Wrench_Projectile_C_LookForTargetsInFront, CallFunc_BreakHitResult_TraceStart) == 0x000290, "Member 'BP_Wrench_Projectile_C_LookForTargetsInFront::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(BP_Wrench_Projectile_C_LookForTargetsInFront, CallFunc_BreakHitResult_TraceEnd) == 0x0002A8, "Member 'BP_Wrench_Projectile_C_LookForTargetsInFront::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(BP_Wrench_Projectile_C_LookForTargetsInFront, CallFunc_Less_IntInt_ReturnValue) == 0x0002C0, "Member 'BP_Wrench_Projectile_C_LookForTargetsInFront::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Wrench_Projectile_C_LookForTargetsInFront, K2Node_DynamicCast_AsCharacter) == 0x0002C8, "Member 'BP_Wrench_Projectile_C_LookForTargetsInFront::K2Node_DynamicCast_AsCharacter' has a wrong offset!");
static_assert(offsetof(BP_Wrench_Projectile_C_LookForTargetsInFront, K2Node_DynamicCast_bSuccess_1) == 0x0002D0, "Member 'BP_Wrench_Projectile_C_LookForTargetsInFront::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_Wrench_Projectile_C_LookForTargetsInFront, K2Node_DynamicCast_AsTeamable_Interface_1) == 0x0002D8, "Member 'BP_Wrench_Projectile_C_LookForTargetsInFront::K2Node_DynamicCast_AsTeamable_Interface_1' has a wrong offset!");
static_assert(offsetof(BP_Wrench_Projectile_C_LookForTargetsInFront, K2Node_DynamicCast_bSuccess_2) == 0x0002E8, "Member 'BP_Wrench_Projectile_C_LookForTargetsInFront::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_Wrench_Projectile_C_LookForTargetsInFront, CallFunc_GetComponentsByTag_ReturnValue) == 0x0002F0, "Member 'BP_Wrench_Projectile_C_LookForTargetsInFront::CallFunc_GetComponentsByTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Wrench_Projectile_C_LookForTargetsInFront, CallFunc_GetTeamID_ReturnValue_1) == 0x000300, "Member 'BP_Wrench_Projectile_C_LookForTargetsInFront::CallFunc_GetTeamID_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Wrench_Projectile_C_LookForTargetsInFront, CallFunc_Array_Get_Item_1) == 0x000308, "Member 'BP_Wrench_Projectile_C_LookForTargetsInFront::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_Wrench_Projectile_C_LookForTargetsInFront, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000310, "Member 'BP_Wrench_Projectile_C_LookForTargetsInFront::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Wrench_Projectile_C_LookForTargetsInFront, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000311, "Member 'BP_Wrench_Projectile_C_LookForTargetsInFront::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Wrench_Projectile_C_LookForTargetsInFront, CallFunc_Conv_DoubleToVector_InDouble_ImplicitCast) == 0x000318, "Member 'BP_Wrench_Projectile_C_LookForTargetsInFront::CallFunc_Conv_DoubleToVector_InDouble_ImplicitCast' has a wrong offset!");

// Function BP_Wrench_Projectile.BP_Wrench_Projectile_C.SetHomingVariables
// 0x0008 (0x0008 - 0x0000)
struct BP_Wrench_Projectile_C_SetHomingVariables final
{
public:
	class UProjectileMovementComponent*           CallFunc_GetProjectileComponent_ProjectileComponent; // 0x0000(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Wrench_Projectile_C_SetHomingVariables) == 0x000008, "Wrong alignment on BP_Wrench_Projectile_C_SetHomingVariables");
static_assert(sizeof(BP_Wrench_Projectile_C_SetHomingVariables) == 0x000008, "Wrong size on BP_Wrench_Projectile_C_SetHomingVariables");
static_assert(offsetof(BP_Wrench_Projectile_C_SetHomingVariables, CallFunc_GetProjectileComponent_ProjectileComponent) == 0x000000, "Member 'BP_Wrench_Projectile_C_SetHomingVariables::CallFunc_GetProjectileComponent_ProjectileComponent' has a wrong offset!");

// Function BP_Wrench_Projectile.BP_Wrench_Projectile_C.PlayImpactEffect
// 0x0208 (0x0208 - 0x0000)
struct BP_Wrench_Projectile_C_PlayImpactEffect final
{
public:
	struct FHitResult                             Hit;                                               // 0x0000(0x00F8)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x00F8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x0111(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_112[0x2];                                      // 0x0112(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x0114(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x0118(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11C[0x4];                                      // 0x011C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x0120(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x0138(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x0150(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x0168(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0180(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0188(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0190(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0198(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_BoneName;                  // 0x01A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x01A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x01AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x01B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B4[0x4];                                      // 0x01B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x01B8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x01D0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotFromZ_ReturnValue;                 // 0x01E8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UNiagaraComponent*                      CallFunc_SpawnSystemAtLocation_ReturnValue;        // 0x0200(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Wrench_Projectile_C_PlayImpactEffect) == 0x000008, "Wrong alignment on BP_Wrench_Projectile_C_PlayImpactEffect");
static_assert(sizeof(BP_Wrench_Projectile_C_PlayImpactEffect) == 0x000208, "Wrong size on BP_Wrench_Projectile_C_PlayImpactEffect");
static_assert(offsetof(BP_Wrench_Projectile_C_PlayImpactEffect, Hit) == 0x000000, "Member 'BP_Wrench_Projectile_C_PlayImpactEffect::Hit' has a wrong offset!");
static_assert(offsetof(BP_Wrench_Projectile_C_PlayImpactEffect, CallFunc_K2_GetActorLocation_ReturnValue) == 0x0000F8, "Member 'BP_Wrench_Projectile_C_PlayImpactEffect::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Wrench_Projectile_C_PlayImpactEffect, CallFunc_BreakHitResult_bBlockingHit) == 0x000110, "Member 'BP_Wrench_Projectile_C_PlayImpactEffect::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(BP_Wrench_Projectile_C_PlayImpactEffect, CallFunc_BreakHitResult_bInitialOverlap) == 0x000111, "Member 'BP_Wrench_Projectile_C_PlayImpactEffect::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(BP_Wrench_Projectile_C_PlayImpactEffect, CallFunc_BreakHitResult_Time) == 0x000114, "Member 'BP_Wrench_Projectile_C_PlayImpactEffect::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(BP_Wrench_Projectile_C_PlayImpactEffect, CallFunc_BreakHitResult_Distance) == 0x000118, "Member 'BP_Wrench_Projectile_C_PlayImpactEffect::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(BP_Wrench_Projectile_C_PlayImpactEffect, CallFunc_BreakHitResult_Location) == 0x000120, "Member 'BP_Wrench_Projectile_C_PlayImpactEffect::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(BP_Wrench_Projectile_C_PlayImpactEffect, CallFunc_BreakHitResult_ImpactPoint) == 0x000138, "Member 'BP_Wrench_Projectile_C_PlayImpactEffect::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(BP_Wrench_Projectile_C_PlayImpactEffect, CallFunc_BreakHitResult_Normal) == 0x000150, "Member 'BP_Wrench_Projectile_C_PlayImpactEffect::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(BP_Wrench_Projectile_C_PlayImpactEffect, CallFunc_BreakHitResult_ImpactNormal) == 0x000168, "Member 'BP_Wrench_Projectile_C_PlayImpactEffect::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(BP_Wrench_Projectile_C_PlayImpactEffect, CallFunc_BreakHitResult_PhysMat) == 0x000180, "Member 'BP_Wrench_Projectile_C_PlayImpactEffect::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(BP_Wrench_Projectile_C_PlayImpactEffect, CallFunc_BreakHitResult_HitActor) == 0x000188, "Member 'BP_Wrench_Projectile_C_PlayImpactEffect::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(BP_Wrench_Projectile_C_PlayImpactEffect, CallFunc_BreakHitResult_HitComponent) == 0x000190, "Member 'BP_Wrench_Projectile_C_PlayImpactEffect::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(BP_Wrench_Projectile_C_PlayImpactEffect, CallFunc_BreakHitResult_HitBoneName) == 0x000198, "Member 'BP_Wrench_Projectile_C_PlayImpactEffect::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(BP_Wrench_Projectile_C_PlayImpactEffect, CallFunc_BreakHitResult_BoneName) == 0x0001A0, "Member 'BP_Wrench_Projectile_C_PlayImpactEffect::CallFunc_BreakHitResult_BoneName' has a wrong offset!");
static_assert(offsetof(BP_Wrench_Projectile_C_PlayImpactEffect, CallFunc_BreakHitResult_HitItem) == 0x0001A8, "Member 'BP_Wrench_Projectile_C_PlayImpactEffect::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(BP_Wrench_Projectile_C_PlayImpactEffect, CallFunc_BreakHitResult_ElementIndex) == 0x0001AC, "Member 'BP_Wrench_Projectile_C_PlayImpactEffect::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(BP_Wrench_Projectile_C_PlayImpactEffect, CallFunc_BreakHitResult_FaceIndex) == 0x0001B0, "Member 'BP_Wrench_Projectile_C_PlayImpactEffect::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(BP_Wrench_Projectile_C_PlayImpactEffect, CallFunc_BreakHitResult_TraceStart) == 0x0001B8, "Member 'BP_Wrench_Projectile_C_PlayImpactEffect::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(BP_Wrench_Projectile_C_PlayImpactEffect, CallFunc_BreakHitResult_TraceEnd) == 0x0001D0, "Member 'BP_Wrench_Projectile_C_PlayImpactEffect::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(BP_Wrench_Projectile_C_PlayImpactEffect, CallFunc_MakeRotFromZ_ReturnValue) == 0x0001E8, "Member 'BP_Wrench_Projectile_C_PlayImpactEffect::CallFunc_MakeRotFromZ_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Wrench_Projectile_C_PlayImpactEffect, CallFunc_SpawnSystemAtLocation_ReturnValue) == 0x000200, "Member 'BP_Wrench_Projectile_C_PlayImpactEffect::CallFunc_SpawnSystemAtLocation_ReturnValue' has a wrong offset!");

}

