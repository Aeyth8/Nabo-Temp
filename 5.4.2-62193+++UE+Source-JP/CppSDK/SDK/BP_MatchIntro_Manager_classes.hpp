#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_MatchIntro_Manager

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "E_IntroType_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_MatchIntro_Manager.BP_MatchIntro_Manager_C
// 0x00B8 (0x0348 - 0x0290)
class ABP_MatchIntro_Manager_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0290(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x0298(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<class ABP_HouseEssential_Cube_C*>      FriendlyEssentials;                                // 0x02A0(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, DisableEditOnInstance)
	TArray<class ABP_HouseEssential_Cube_C*>      EnemyEssentials;                                   // 0x02B0(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, DisableEditOnInstance)
	class ABP_CaptureTheFlagDeedSafe_C*           FriendlySafe;                                      // 0x02C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class ABP_CaptureTheFlagDeedSafe_C*           EnemySafe;                                         // 0x02C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	TArray<E_IntroType>                           IntrosToPlay;                                      // 0x02D0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	int32                                         CurrentEssentialIndex;                             // 0x02E0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CurrentIntroIndex;                                 // 0x02E4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWI_IntroOverlayBase_C*                 IntroWidget;                                       // 0x02E8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	double                                        EssentialFocusDuration;                            // 0x02F0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        SafeFocusDuration;                                 // 0x02F8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        MapFocusDuration;                                  // 0x0300(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        TeamFocusDuration;                                 // 0x0308(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	FMulticastInlineDelegateProperty_             OnIntroFinished;                                   // 0x0310(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	class UAudioComponent*                        LevelIntroMusic;                                   // 0x0320(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWI_IntroManagerLoadScreen_C*           LoadScreenWidget;                                  // 0x0328(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          IntroCanceledByLocalUser;                          // 0x0330(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_331[0x7];                                      // 0x0331(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	FMulticastInlineDelegateProperty_             On_IntroMusicFinished;                             // 0x0338(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)

public:
	void CancelIntro();
	void CreateIntroWidget();
	void DetermineIntrosToPlay();
	void ExecuteUbergraph_BP_MatchIntro_Manager(int32 EntryPoint);
	void FilterEssentialsBasedOnTeam();
	void FilterSafesBasedOnTeam();
	void FinishSafeIntro();
	void HideUI_AndRemoveControls();
	bool IsAcceptableEssentialIndex(int32* Index_0);
	bool IsOnSameTeamAsPlayer(class AActor* TargetActor);
	void MapIntroFinished();
	void On_IntroMusicFinished__DelegateSignature();
	void OnAudioFinished_Event();
	void OnGameStarted_Event();
	void OnIntroFinished__DelegateSignature();
	void OnPossessedPawnChanged_Event(class APawn* OldPawn, class APawn* NewPawn);
	void PlayEssentialsIntro();
	void PlayIntro(E_IntroType Intro);
	void PlayIntroEnemyEssentials(class ABP_HouseEssential_Cube_C* Actor);
	void PlayLevelIntroEssentialCountSound(int32 Index_0);
	void PlayMapIntro();
	void PlayNextIntro();
	void PlaySafeIntro();
	void PlayTeamIntro();
	void ReceiveBeginPlay();
	void ReturnToPlayerView();
	void SetAudioListener();
	class APlayerController* SetInputContextToIntro();
	void ShowNextEnemyEssential();
	void ShowUI_AndEnableControls();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_MatchIntro_Manager_C">();
	}
	static class ABP_MatchIntro_Manager_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_MatchIntro_Manager_C>();
	}
};
static_assert(alignof(ABP_MatchIntro_Manager_C) == 0x000008, "Wrong alignment on ABP_MatchIntro_Manager_C");
static_assert(sizeof(ABP_MatchIntro_Manager_C) == 0x000348, "Wrong size on ABP_MatchIntro_Manager_C");
static_assert(offsetof(ABP_MatchIntro_Manager_C, UberGraphFrame) == 0x000290, "Member 'ABP_MatchIntro_Manager_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_MatchIntro_Manager_C, DefaultSceneRoot) == 0x000298, "Member 'ABP_MatchIntro_Manager_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ABP_MatchIntro_Manager_C, FriendlyEssentials) == 0x0002A0, "Member 'ABP_MatchIntro_Manager_C::FriendlyEssentials' has a wrong offset!");
static_assert(offsetof(ABP_MatchIntro_Manager_C, EnemyEssentials) == 0x0002B0, "Member 'ABP_MatchIntro_Manager_C::EnemyEssentials' has a wrong offset!");
static_assert(offsetof(ABP_MatchIntro_Manager_C, FriendlySafe) == 0x0002C0, "Member 'ABP_MatchIntro_Manager_C::FriendlySafe' has a wrong offset!");
static_assert(offsetof(ABP_MatchIntro_Manager_C, EnemySafe) == 0x0002C8, "Member 'ABP_MatchIntro_Manager_C::EnemySafe' has a wrong offset!");
static_assert(offsetof(ABP_MatchIntro_Manager_C, IntrosToPlay) == 0x0002D0, "Member 'ABP_MatchIntro_Manager_C::IntrosToPlay' has a wrong offset!");
static_assert(offsetof(ABP_MatchIntro_Manager_C, CurrentEssentialIndex) == 0x0002E0, "Member 'ABP_MatchIntro_Manager_C::CurrentEssentialIndex' has a wrong offset!");
static_assert(offsetof(ABP_MatchIntro_Manager_C, CurrentIntroIndex) == 0x0002E4, "Member 'ABP_MatchIntro_Manager_C::CurrentIntroIndex' has a wrong offset!");
static_assert(offsetof(ABP_MatchIntro_Manager_C, IntroWidget) == 0x0002E8, "Member 'ABP_MatchIntro_Manager_C::IntroWidget' has a wrong offset!");
static_assert(offsetof(ABP_MatchIntro_Manager_C, EssentialFocusDuration) == 0x0002F0, "Member 'ABP_MatchIntro_Manager_C::EssentialFocusDuration' has a wrong offset!");
static_assert(offsetof(ABP_MatchIntro_Manager_C, SafeFocusDuration) == 0x0002F8, "Member 'ABP_MatchIntro_Manager_C::SafeFocusDuration' has a wrong offset!");
static_assert(offsetof(ABP_MatchIntro_Manager_C, MapFocusDuration) == 0x000300, "Member 'ABP_MatchIntro_Manager_C::MapFocusDuration' has a wrong offset!");
static_assert(offsetof(ABP_MatchIntro_Manager_C, TeamFocusDuration) == 0x000308, "Member 'ABP_MatchIntro_Manager_C::TeamFocusDuration' has a wrong offset!");
static_assert(offsetof(ABP_MatchIntro_Manager_C, OnIntroFinished) == 0x000310, "Member 'ABP_MatchIntro_Manager_C::OnIntroFinished' has a wrong offset!");
static_assert(offsetof(ABP_MatchIntro_Manager_C, LevelIntroMusic) == 0x000320, "Member 'ABP_MatchIntro_Manager_C::LevelIntroMusic' has a wrong offset!");
static_assert(offsetof(ABP_MatchIntro_Manager_C, LoadScreenWidget) == 0x000328, "Member 'ABP_MatchIntro_Manager_C::LoadScreenWidget' has a wrong offset!");
static_assert(offsetof(ABP_MatchIntro_Manager_C, IntroCanceledByLocalUser) == 0x000330, "Member 'ABP_MatchIntro_Manager_C::IntroCanceledByLocalUser' has a wrong offset!");
static_assert(offsetof(ABP_MatchIntro_Manager_C, On_IntroMusicFinished) == 0x000338, "Member 'ABP_MatchIntro_Manager_C::On_IntroMusicFinished' has a wrong offset!");

}

