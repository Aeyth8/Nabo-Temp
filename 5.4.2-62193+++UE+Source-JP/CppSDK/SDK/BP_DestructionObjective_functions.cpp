#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_DestructionObjective

#include "Basic.hpp"

#include "BP_DestructionObjective_classes.hpp"
#include "BP_DestructionObjective_parameters.hpp"


namespace SDK
{

// Function BP_DestructionObjective.BP_DestructionObjective_C.ExecuteUbergraph_BP_DestructionObjective
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_DestructionObjective_C::ExecuteUbergraph_BP_DestructionObjective(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DestructionObjective_C", "ExecuteUbergraph_BP_DestructionObjective");

	Params::BP_DestructionObjective_C_ExecuteUbergraph_BP_DestructionObjective Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DestructionObjective.BP_DestructionObjective_C.OnCreated
// (Event, Protected, BlueprintEvent)

void UBP_DestructionObjective_C::OnCreated()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DestructionObjective_C", "OnCreated");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_DestructionObjective.BP_DestructionObjective_C.GetState
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// EObjectiveState                         ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

EObjectiveState UBP_DestructionObjective_C::GetState() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DestructionObjective_C", "GetState");

	Params::BP_DestructionObjective_C_GetState Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}

}

