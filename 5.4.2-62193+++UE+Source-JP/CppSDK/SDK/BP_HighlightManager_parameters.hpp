#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_HighlightManager

#include "Basic.hpp"

#include "E_HighlightLevel_structs.hpp"
#include "JP_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "S_HighlightParameters_structs.hpp"
#include "E_HighlightCategory_structs.hpp"


namespace SDK::Params
{

// Function BP_HighlightManager.BP_HighlightManager_C.ActivateObjectiveHighlight
// 0x0008 (0x0008 - 0x0000)
struct BP_HighlightManager_C_ActivateObjectiveHighlight final
{
public:
	class ABP_HouseEssential_Cube_C*              AffectedObjective;                                 // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_HighlightManager_C_ActivateObjectiveHighlight) == 0x000008, "Wrong alignment on BP_HighlightManager_C_ActivateObjectiveHighlight");
static_assert(sizeof(BP_HighlightManager_C_ActivateObjectiveHighlight) == 0x000008, "Wrong size on BP_HighlightManager_C_ActivateObjectiveHighlight");
static_assert(offsetof(BP_HighlightManager_C_ActivateObjectiveHighlight, AffectedObjective) == 0x000000, "Member 'BP_HighlightManager_C_ActivateObjectiveHighlight::AffectedObjective' has a wrong offset!");

// Function BP_HighlightManager.BP_HighlightManager_C.ActivateTaskHighlight
// 0x0010 (0x0010 - 0x0000)
struct BP_HighlightManager_C_ActivateTaskHighlight final
{
public:
	struct FS_HighlightParameters                 Params_0;                                          // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_HighlightManager_C_ActivateTaskHighlight) == 0x000008, "Wrong alignment on BP_HighlightManager_C_ActivateTaskHighlight");
static_assert(sizeof(BP_HighlightManager_C_ActivateTaskHighlight) == 0x000010, "Wrong size on BP_HighlightManager_C_ActivateTaskHighlight");
static_assert(offsetof(BP_HighlightManager_C_ActivateTaskHighlight, Params_0) == 0x000000, "Member 'BP_HighlightManager_C_ActivateTaskHighlight::Params_0' has a wrong offset!");

// Function BP_HighlightManager.BP_HighlightManager_C.AddObjectToTaskPool
// 0x0010 (0x0010 - 0x0000)
struct BP_HighlightManager_C_AddObjectToTaskPool final
{
public:
	E_HighlightCategory                           Params_0;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 ActorToAdd;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_HighlightManager_C_AddObjectToTaskPool) == 0x000008, "Wrong alignment on BP_HighlightManager_C_AddObjectToTaskPool");
static_assert(sizeof(BP_HighlightManager_C_AddObjectToTaskPool) == 0x000010, "Wrong size on BP_HighlightManager_C_AddObjectToTaskPool");
static_assert(offsetof(BP_HighlightManager_C_AddObjectToTaskPool, Params_0) == 0x000000, "Member 'BP_HighlightManager_C_AddObjectToTaskPool::Params_0' has a wrong offset!");
static_assert(offsetof(BP_HighlightManager_C_AddObjectToTaskPool, ActorToAdd) == 0x000008, "Member 'BP_HighlightManager_C_AddObjectToTaskPool::ActorToAdd' has a wrong offset!");

// Function BP_HighlightManager.BP_HighlightManager_C.CacheAllFlowers
// 0x0010 (0x0010 - 0x0000)
struct BP_HighlightManager_C_CacheAllFlowers final
{
public:
	TArray<class ABP_Flower_C*>                   CallFunc_GetAllActorsOfClass_OutActors;            // 0x0000(0x0010)(ReferenceParm)
};
static_assert(alignof(BP_HighlightManager_C_CacheAllFlowers) == 0x000008, "Wrong alignment on BP_HighlightManager_C_CacheAllFlowers");
static_assert(sizeof(BP_HighlightManager_C_CacheAllFlowers) == 0x000010, "Wrong size on BP_HighlightManager_C_CacheAllFlowers");
static_assert(offsetof(BP_HighlightManager_C_CacheAllFlowers, CallFunc_GetAllActorsOfClass_OutActors) == 0x000000, "Member 'BP_HighlightManager_C_CacheAllFlowers::CallFunc_GetAllActorsOfClass_OutActors' has a wrong offset!");

// Function BP_HighlightManager.BP_HighlightManager_C.CacheAllGarbage
// 0x0010 (0x0010 - 0x0000)
struct BP_HighlightManager_C_CacheAllGarbage final
{
public:
	TArray<class ABP_GarbageItem_C*>              CallFunc_GetAllActorsOfClass_OutActors;            // 0x0000(0x0010)(ReferenceParm)
};
static_assert(alignof(BP_HighlightManager_C_CacheAllGarbage) == 0x000008, "Wrong alignment on BP_HighlightManager_C_CacheAllGarbage");
static_assert(sizeof(BP_HighlightManager_C_CacheAllGarbage) == 0x000010, "Wrong size on BP_HighlightManager_C_CacheAllGarbage");
static_assert(offsetof(BP_HighlightManager_C_CacheAllGarbage, CallFunc_GetAllActorsOfClass_OutActors) == 0x000000, "Member 'BP_HighlightManager_C_CacheAllGarbage::CallFunc_GetAllActorsOfClass_OutActors' has a wrong offset!");

// Function BP_HighlightManager.BP_HighlightManager_C.CacheAllHedges
// 0x0010 (0x0010 - 0x0000)
struct BP_HighlightManager_C_CacheAllHedges final
{
public:
	TArray<class ABP_Hedge_Branch_C*>             CallFunc_GetAllActorsOfClass_OutActors;            // 0x0000(0x0010)(ReferenceParm)
};
static_assert(alignof(BP_HighlightManager_C_CacheAllHedges) == 0x000008, "Wrong alignment on BP_HighlightManager_C_CacheAllHedges");
static_assert(sizeof(BP_HighlightManager_C_CacheAllHedges) == 0x000010, "Wrong size on BP_HighlightManager_C_CacheAllHedges");
static_assert(offsetof(BP_HighlightManager_C_CacheAllHedges, CallFunc_GetAllActorsOfClass_OutActors) == 0x000000, "Member 'BP_HighlightManager_C_CacheAllHedges::CallFunc_GetAllActorsOfClass_OutActors' has a wrong offset!");

// Function BP_HighlightManager.BP_HighlightManager_C.ClearAllHighlightsOnDeath
// 0x0168 (0x0168 - 0x0000)
struct BP_HighlightManager_C_ClearAllHighlightsOnDeath final
{
public:
	class ABP_ResidentCharacter_C*                Character;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_3;                  // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_3;                   // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_4;                  // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_4;                 // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_4;                   // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetTeamIDFromPawn_ReturnValue;            // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            CallFunc_GetController_ReturnValue;                // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APlayerControllerJP_MatchBP_C*          K2Node_DynamicCast_AsPlayer_Controller_JP_Match_BP; // 0x0058(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ABP_CaptureTheFlagDeedSafe_C*>   CallFunc_GetAllActorsOfClass_OutActors;            // 0x0068(0x0010)(ReferenceParm)
	int32                                         Temp_int_Loop_Counter_Variable_5;                  // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7C[0x4];                                       // 0x007C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_CaptureTheFlagDeedSafe_C*           CallFunc_Array_Get_Item;                           // 0x0080(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0089(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8A[0x2];                                       // 0x008A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_5;                 // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0094(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_95[0x3];                                       // 0x0095(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_5;                   // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9C[0x4];                                       // 0x009C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            CallFunc_GetController_ReturnValue_1;              // 0x00A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_WaterTap_C*                         CallFunc_Array_Get_Item_1;                         // 0x00A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APlayerControllerJP_MatchBP_C*          K2Node_DynamicCast_AsPlayer_Controller_JP_Match_BP_1; // 0x00B0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x00B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_BA[0x2];                                       // 0x00BA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C1[0x7];                                       // 0x00C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            CallFunc_GetController_ReturnValue_2;              // 0x00C8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APlayerControllerJP_MatchBP_C*          K2Node_DynamicCast_AsPlayer_Controller_JP_Match_BP_2; // 0x00D0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D9[0x7];                                       // 0x00D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_HouseDecalBase_C*                   CallFunc_Array_Get_Item_2;                         // 0x00E0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AController*                            CallFunc_GetController_ReturnValue_3;              // 0x00E8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APlayerControllerJP_MatchBP_C*          K2Node_DynamicCast_AsPlayer_Controller_JP_Match_BP_3; // 0x00F0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x00F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_FA[0x2];                                       // 0x00FA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x00FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_101[0x7];                                      // 0x0101(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_Hedge_Branch_C*                     CallFunc_Array_Get_Item_3;                         // 0x0108(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_3;               // 0x0110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_3;                // 0x0114(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x0115(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_116[0x2];                                      // 0x0116(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            CallFunc_GetController_ReturnValue_4;              // 0x0118(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_GarbageItem_C*                      CallFunc_Array_Get_Item_4;                         // 0x0120(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APlayerControllerJP_MatchBP_C*          K2Node_DynamicCast_AsPlayer_Controller_JP_Match_BP_4; // 0x0128(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_5;                    // 0x0131(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_132[0x2];                                      // 0x0132(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_4;               // 0x0134(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_4;                // 0x0138(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_139[0x7];                                      // 0x0139(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            CallFunc_GetController_ReturnValue_5;              // 0x0140(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APlayerControllerJP_MatchBP_C*          K2Node_DynamicCast_AsPlayer_Controller_JP_Match_BP_5; // 0x0148(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_5;                     // 0x0150(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_151[0x7];                                      // 0x0151(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_Flower_C*                           CallFunc_Array_Get_Item_5;                         // 0x0158(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_5;               // 0x0160(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_5;                // 0x0164(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_6;                    // 0x0165(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_HighlightManager_C_ClearAllHighlightsOnDeath) == 0x000008, "Wrong alignment on BP_HighlightManager_C_ClearAllHighlightsOnDeath");
static_assert(sizeof(BP_HighlightManager_C_ClearAllHighlightsOnDeath) == 0x000168, "Wrong size on BP_HighlightManager_C_ClearAllHighlightsOnDeath");
static_assert(offsetof(BP_HighlightManager_C_ClearAllHighlightsOnDeath, Character) == 0x000000, "Member 'BP_HighlightManager_C_ClearAllHighlightsOnDeath::Character' has a wrong offset!");
static_assert(offsetof(BP_HighlightManager_C_ClearAllHighlightsOnDeath, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'BP_HighlightManager_C_ClearAllHighlightsOnDeath::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_HighlightManager_C_ClearAllHighlightsOnDeath, CallFunc_IsValid_ReturnValue) == 0x00000C, "Member 'BP_HighlightManager_C_ClearAllHighlightsOnDeath::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HighlightManager_C_ClearAllHighlightsOnDeath, CallFunc_Add_IntInt_ReturnValue) == 0x000010, "Member 'BP_HighlightManager_C_ClearAllHighlightsOnDeath::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HighlightManager_C_ClearAllHighlightsOnDeath, Temp_int_Loop_Counter_Variable_1) == 0x000014, "Member 'BP_HighlightManager_C_ClearAllHighlightsOnDeath::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_HighlightManager_C_ClearAllHighlightsOnDeath, CallFunc_Add_IntInt_ReturnValue_1) == 0x000018, "Member 'BP_HighlightManager_C_ClearAllHighlightsOnDeath::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_HighlightManager_C_ClearAllHighlightsOnDeath, Temp_int_Array_Index_Variable) == 0x00001C, "Member 'BP_HighlightManager_C_ClearAllHighlightsOnDeath::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_HighlightManager_C_ClearAllHighlightsOnDeath, Temp_int_Array_Index_Variable_1) == 0x000020, "Member 'BP_HighlightManager_C_ClearAllHighlightsOnDeath::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_HighlightManager_C_ClearAllHighlightsOnDeath, Temp_int_Loop_Counter_Variable_2) == 0x000024, "Member 'BP_HighlightManager_C_ClearAllHighlightsOnDeath::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_HighlightManager_C_ClearAllHighlightsOnDeath, CallFunc_Add_IntInt_ReturnValue_2) == 0x000028, "Member 'BP_HighlightManager_C_ClearAllHighlightsOnDeath::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_HighlightManager_C_ClearAllHighlightsOnDeath, Temp_int_Array_Index_Variable_2) == 0x00002C, "Member 'BP_HighlightManager_C_ClearAllHighlightsOnDeath::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_HighlightManager_C_ClearAllHighlightsOnDeath, Temp_int_Loop_Counter_Variable_3) == 0x000030, "Member 'BP_HighlightManager_C_ClearAllHighlightsOnDeath::Temp_int_Loop_Counter_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_HighlightManager_C_ClearAllHighlightsOnDeath, CallFunc_Add_IntInt_ReturnValue_3) == 0x000034, "Member 'BP_HighlightManager_C_ClearAllHighlightsOnDeath::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_HighlightManager_C_ClearAllHighlightsOnDeath, Temp_int_Array_Index_Variable_3) == 0x000038, "Member 'BP_HighlightManager_C_ClearAllHighlightsOnDeath::Temp_int_Array_Index_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_HighlightManager_C_ClearAllHighlightsOnDeath, Temp_int_Loop_Counter_Variable_4) == 0x00003C, "Member 'BP_HighlightManager_C_ClearAllHighlightsOnDeath::Temp_int_Loop_Counter_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_HighlightManager_C_ClearAllHighlightsOnDeath, CallFunc_Add_IntInt_ReturnValue_4) == 0x000040, "Member 'BP_HighlightManager_C_ClearAllHighlightsOnDeath::CallFunc_Add_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_HighlightManager_C_ClearAllHighlightsOnDeath, Temp_int_Array_Index_Variable_4) == 0x000044, "Member 'BP_HighlightManager_C_ClearAllHighlightsOnDeath::Temp_int_Array_Index_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_HighlightManager_C_ClearAllHighlightsOnDeath, CallFunc_GetTeamIDFromPawn_ReturnValue) == 0x000048, "Member 'BP_HighlightManager_C_ClearAllHighlightsOnDeath::CallFunc_GetTeamIDFromPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HighlightManager_C_ClearAllHighlightsOnDeath, CallFunc_GetController_ReturnValue) == 0x000050, "Member 'BP_HighlightManager_C_ClearAllHighlightsOnDeath::CallFunc_GetController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HighlightManager_C_ClearAllHighlightsOnDeath, K2Node_DynamicCast_AsPlayer_Controller_JP_Match_BP) == 0x000058, "Member 'BP_HighlightManager_C_ClearAllHighlightsOnDeath::K2Node_DynamicCast_AsPlayer_Controller_JP_Match_BP' has a wrong offset!");
static_assert(offsetof(BP_HighlightManager_C_ClearAllHighlightsOnDeath, K2Node_DynamicCast_bSuccess) == 0x000060, "Member 'BP_HighlightManager_C_ClearAllHighlightsOnDeath::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_HighlightManager_C_ClearAllHighlightsOnDeath, CallFunc_GetAllActorsOfClass_OutActors) == 0x000068, "Member 'BP_HighlightManager_C_ClearAllHighlightsOnDeath::CallFunc_GetAllActorsOfClass_OutActors' has a wrong offset!");
static_assert(offsetof(BP_HighlightManager_C_ClearAllHighlightsOnDeath, Temp_int_Loop_Counter_Variable_5) == 0x000078, "Member 'BP_HighlightManager_C_ClearAllHighlightsOnDeath::Temp_int_Loop_Counter_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_HighlightManager_C_ClearAllHighlightsOnDeath, CallFunc_Array_Get_Item) == 0x000080, "Member 'BP_HighlightManager_C_ClearAllHighlightsOnDeath::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_HighlightManager_C_ClearAllHighlightsOnDeath, CallFunc_IsValid_ReturnValue_1) == 0x000088, "Member 'BP_HighlightManager_C_ClearAllHighlightsOnDeath::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_HighlightManager_C_ClearAllHighlightsOnDeath, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000089, "Member 'BP_HighlightManager_C_ClearAllHighlightsOnDeath::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HighlightManager_C_ClearAllHighlightsOnDeath, CallFunc_Add_IntInt_ReturnValue_5) == 0x00008C, "Member 'BP_HighlightManager_C_ClearAllHighlightsOnDeath::CallFunc_Add_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_HighlightManager_C_ClearAllHighlightsOnDeath, CallFunc_Array_Length_ReturnValue) == 0x000090, "Member 'BP_HighlightManager_C_ClearAllHighlightsOnDeath::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HighlightManager_C_ClearAllHighlightsOnDeath, CallFunc_Less_IntInt_ReturnValue) == 0x000094, "Member 'BP_HighlightManager_C_ClearAllHighlightsOnDeath::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HighlightManager_C_ClearAllHighlightsOnDeath, Temp_int_Array_Index_Variable_5) == 0x000098, "Member 'BP_HighlightManager_C_ClearAllHighlightsOnDeath::Temp_int_Array_Index_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_HighlightManager_C_ClearAllHighlightsOnDeath, CallFunc_GetController_ReturnValue_1) == 0x0000A0, "Member 'BP_HighlightManager_C_ClearAllHighlightsOnDeath::CallFunc_GetController_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_HighlightManager_C_ClearAllHighlightsOnDeath, CallFunc_Array_Get_Item_1) == 0x0000A8, "Member 'BP_HighlightManager_C_ClearAllHighlightsOnDeath::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_HighlightManager_C_ClearAllHighlightsOnDeath, K2Node_DynamicCast_AsPlayer_Controller_JP_Match_BP_1) == 0x0000B0, "Member 'BP_HighlightManager_C_ClearAllHighlightsOnDeath::K2Node_DynamicCast_AsPlayer_Controller_JP_Match_BP_1' has a wrong offset!");
static_assert(offsetof(BP_HighlightManager_C_ClearAllHighlightsOnDeath, K2Node_DynamicCast_bSuccess_1) == 0x0000B8, "Member 'BP_HighlightManager_C_ClearAllHighlightsOnDeath::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_HighlightManager_C_ClearAllHighlightsOnDeath, CallFunc_IsValid_ReturnValue_2) == 0x0000B9, "Member 'BP_HighlightManager_C_ClearAllHighlightsOnDeath::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_HighlightManager_C_ClearAllHighlightsOnDeath, CallFunc_Array_Length_ReturnValue_1) == 0x0000BC, "Member 'BP_HighlightManager_C_ClearAllHighlightsOnDeath::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_HighlightManager_C_ClearAllHighlightsOnDeath, CallFunc_Less_IntInt_ReturnValue_1) == 0x0000C0, "Member 'BP_HighlightManager_C_ClearAllHighlightsOnDeath::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_HighlightManager_C_ClearAllHighlightsOnDeath, CallFunc_GetController_ReturnValue_2) == 0x0000C8, "Member 'BP_HighlightManager_C_ClearAllHighlightsOnDeath::CallFunc_GetController_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_HighlightManager_C_ClearAllHighlightsOnDeath, K2Node_DynamicCast_AsPlayer_Controller_JP_Match_BP_2) == 0x0000D0, "Member 'BP_HighlightManager_C_ClearAllHighlightsOnDeath::K2Node_DynamicCast_AsPlayer_Controller_JP_Match_BP_2' has a wrong offset!");
static_assert(offsetof(BP_HighlightManager_C_ClearAllHighlightsOnDeath, K2Node_DynamicCast_bSuccess_2) == 0x0000D8, "Member 'BP_HighlightManager_C_ClearAllHighlightsOnDeath::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_HighlightManager_C_ClearAllHighlightsOnDeath, CallFunc_Array_Get_Item_2) == 0x0000E0, "Member 'BP_HighlightManager_C_ClearAllHighlightsOnDeath::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(BP_HighlightManager_C_ClearAllHighlightsOnDeath, CallFunc_GetController_ReturnValue_3) == 0x0000E8, "Member 'BP_HighlightManager_C_ClearAllHighlightsOnDeath::CallFunc_GetController_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_HighlightManager_C_ClearAllHighlightsOnDeath, K2Node_DynamicCast_AsPlayer_Controller_JP_Match_BP_3) == 0x0000F0, "Member 'BP_HighlightManager_C_ClearAllHighlightsOnDeath::K2Node_DynamicCast_AsPlayer_Controller_JP_Match_BP_3' has a wrong offset!");
static_assert(offsetof(BP_HighlightManager_C_ClearAllHighlightsOnDeath, K2Node_DynamicCast_bSuccess_3) == 0x0000F8, "Member 'BP_HighlightManager_C_ClearAllHighlightsOnDeath::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(BP_HighlightManager_C_ClearAllHighlightsOnDeath, CallFunc_IsValid_ReturnValue_3) == 0x0000F9, "Member 'BP_HighlightManager_C_ClearAllHighlightsOnDeath::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_HighlightManager_C_ClearAllHighlightsOnDeath, CallFunc_Array_Length_ReturnValue_2) == 0x0000FC, "Member 'BP_HighlightManager_C_ClearAllHighlightsOnDeath::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_HighlightManager_C_ClearAllHighlightsOnDeath, CallFunc_Less_IntInt_ReturnValue_2) == 0x000100, "Member 'BP_HighlightManager_C_ClearAllHighlightsOnDeath::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_HighlightManager_C_ClearAllHighlightsOnDeath, CallFunc_Array_Get_Item_3) == 0x000108, "Member 'BP_HighlightManager_C_ClearAllHighlightsOnDeath::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(BP_HighlightManager_C_ClearAllHighlightsOnDeath, CallFunc_Array_Length_ReturnValue_3) == 0x000110, "Member 'BP_HighlightManager_C_ClearAllHighlightsOnDeath::CallFunc_Array_Length_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_HighlightManager_C_ClearAllHighlightsOnDeath, CallFunc_Less_IntInt_ReturnValue_3) == 0x000114, "Member 'BP_HighlightManager_C_ClearAllHighlightsOnDeath::CallFunc_Less_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_HighlightManager_C_ClearAllHighlightsOnDeath, CallFunc_IsValid_ReturnValue_4) == 0x000115, "Member 'BP_HighlightManager_C_ClearAllHighlightsOnDeath::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_HighlightManager_C_ClearAllHighlightsOnDeath, CallFunc_GetController_ReturnValue_4) == 0x000118, "Member 'BP_HighlightManager_C_ClearAllHighlightsOnDeath::CallFunc_GetController_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_HighlightManager_C_ClearAllHighlightsOnDeath, CallFunc_Array_Get_Item_4) == 0x000120, "Member 'BP_HighlightManager_C_ClearAllHighlightsOnDeath::CallFunc_Array_Get_Item_4' has a wrong offset!");
static_assert(offsetof(BP_HighlightManager_C_ClearAllHighlightsOnDeath, K2Node_DynamicCast_AsPlayer_Controller_JP_Match_BP_4) == 0x000128, "Member 'BP_HighlightManager_C_ClearAllHighlightsOnDeath::K2Node_DynamicCast_AsPlayer_Controller_JP_Match_BP_4' has a wrong offset!");
static_assert(offsetof(BP_HighlightManager_C_ClearAllHighlightsOnDeath, K2Node_DynamicCast_bSuccess_4) == 0x000130, "Member 'BP_HighlightManager_C_ClearAllHighlightsOnDeath::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(BP_HighlightManager_C_ClearAllHighlightsOnDeath, CallFunc_IsValid_ReturnValue_5) == 0x000131, "Member 'BP_HighlightManager_C_ClearAllHighlightsOnDeath::CallFunc_IsValid_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_HighlightManager_C_ClearAllHighlightsOnDeath, CallFunc_Array_Length_ReturnValue_4) == 0x000134, "Member 'BP_HighlightManager_C_ClearAllHighlightsOnDeath::CallFunc_Array_Length_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_HighlightManager_C_ClearAllHighlightsOnDeath, CallFunc_Less_IntInt_ReturnValue_4) == 0x000138, "Member 'BP_HighlightManager_C_ClearAllHighlightsOnDeath::CallFunc_Less_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_HighlightManager_C_ClearAllHighlightsOnDeath, CallFunc_GetController_ReturnValue_5) == 0x000140, "Member 'BP_HighlightManager_C_ClearAllHighlightsOnDeath::CallFunc_GetController_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_HighlightManager_C_ClearAllHighlightsOnDeath, K2Node_DynamicCast_AsPlayer_Controller_JP_Match_BP_5) == 0x000148, "Member 'BP_HighlightManager_C_ClearAllHighlightsOnDeath::K2Node_DynamicCast_AsPlayer_Controller_JP_Match_BP_5' has a wrong offset!");
static_assert(offsetof(BP_HighlightManager_C_ClearAllHighlightsOnDeath, K2Node_DynamicCast_bSuccess_5) == 0x000150, "Member 'BP_HighlightManager_C_ClearAllHighlightsOnDeath::K2Node_DynamicCast_bSuccess_5' has a wrong offset!");
static_assert(offsetof(BP_HighlightManager_C_ClearAllHighlightsOnDeath, CallFunc_Array_Get_Item_5) == 0x000158, "Member 'BP_HighlightManager_C_ClearAllHighlightsOnDeath::CallFunc_Array_Get_Item_5' has a wrong offset!");
static_assert(offsetof(BP_HighlightManager_C_ClearAllHighlightsOnDeath, CallFunc_Array_Length_ReturnValue_5) == 0x000160, "Member 'BP_HighlightManager_C_ClearAllHighlightsOnDeath::CallFunc_Array_Length_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_HighlightManager_C_ClearAllHighlightsOnDeath, CallFunc_Less_IntInt_ReturnValue_5) == 0x000164, "Member 'BP_HighlightManager_C_ClearAllHighlightsOnDeath::CallFunc_Less_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_HighlightManager_C_ClearAllHighlightsOnDeath, CallFunc_IsValid_ReturnValue_6) == 0x000165, "Member 'BP_HighlightManager_C_ClearAllHighlightsOnDeath::CallFunc_IsValid_ReturnValue_6' has a wrong offset!");

// Function BP_HighlightManager.BP_HighlightManager_C.CompareOwnerWithCurrentCaller
// 0x0038 (0x0038 - 0x0000)
struct BP_HighlightManager_C_CompareOwnerWithCurrentCaller final
{
public:
	class AActor*                                 Owner_0;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          IsSame;                                            // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_GetPlayerPawn_ReturnValue;                // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_ResidentCharacter_C*                K2Node_DynamicCast_AsBP_Resident_Character;        // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_ResidentCharacter_C*                K2Node_DynamicCast_AsBP_Resident_Character_1;      // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_HighlightManager_C_CompareOwnerWithCurrentCaller) == 0x000008, "Wrong alignment on BP_HighlightManager_C_CompareOwnerWithCurrentCaller");
static_assert(sizeof(BP_HighlightManager_C_CompareOwnerWithCurrentCaller) == 0x000038, "Wrong size on BP_HighlightManager_C_CompareOwnerWithCurrentCaller");
static_assert(offsetof(BP_HighlightManager_C_CompareOwnerWithCurrentCaller, Owner_0) == 0x000000, "Member 'BP_HighlightManager_C_CompareOwnerWithCurrentCaller::Owner_0' has a wrong offset!");
static_assert(offsetof(BP_HighlightManager_C_CompareOwnerWithCurrentCaller, IsSame) == 0x000008, "Member 'BP_HighlightManager_C_CompareOwnerWithCurrentCaller::IsSame' has a wrong offset!");
static_assert(offsetof(BP_HighlightManager_C_CompareOwnerWithCurrentCaller, CallFunc_GetPlayerPawn_ReturnValue) == 0x000010, "Member 'BP_HighlightManager_C_CompareOwnerWithCurrentCaller::CallFunc_GetPlayerPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HighlightManager_C_CompareOwnerWithCurrentCaller, K2Node_DynamicCast_AsBP_Resident_Character) == 0x000018, "Member 'BP_HighlightManager_C_CompareOwnerWithCurrentCaller::K2Node_DynamicCast_AsBP_Resident_Character' has a wrong offset!");
static_assert(offsetof(BP_HighlightManager_C_CompareOwnerWithCurrentCaller, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'BP_HighlightManager_C_CompareOwnerWithCurrentCaller::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_HighlightManager_C_CompareOwnerWithCurrentCaller, K2Node_DynamicCast_AsBP_Resident_Character_1) == 0x000028, "Member 'BP_HighlightManager_C_CompareOwnerWithCurrentCaller::K2Node_DynamicCast_AsBP_Resident_Character_1' has a wrong offset!");
static_assert(offsetof(BP_HighlightManager_C_CompareOwnerWithCurrentCaller, K2Node_DynamicCast_bSuccess_1) == 0x000030, "Member 'BP_HighlightManager_C_CompareOwnerWithCurrentCaller::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_HighlightManager_C_CompareOwnerWithCurrentCaller, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000031, "Member 'BP_HighlightManager_C_CompareOwnerWithCurrentCaller::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");

// Function BP_HighlightManager.BP_HighlightManager_C.DeactivateObjectiveHighlight
// 0x0008 (0x0008 - 0x0000)
struct BP_HighlightManager_C_DeactivateObjectiveHighlight final
{
public:
	class ABP_HouseEssential_Cube_C*              AffectedObjective;                                 // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_HighlightManager_C_DeactivateObjectiveHighlight) == 0x000008, "Wrong alignment on BP_HighlightManager_C_DeactivateObjectiveHighlight");
static_assert(sizeof(BP_HighlightManager_C_DeactivateObjectiveHighlight) == 0x000008, "Wrong size on BP_HighlightManager_C_DeactivateObjectiveHighlight");
static_assert(offsetof(BP_HighlightManager_C_DeactivateObjectiveHighlight, AffectedObjective) == 0x000000, "Member 'BP_HighlightManager_C_DeactivateObjectiveHighlight::AffectedObjective' has a wrong offset!");

// Function BP_HighlightManager.BP_HighlightManager_C.DeactivateTaskHighlight
// 0x0010 (0x0010 - 0x0000)
struct BP_HighlightManager_C_DeactivateTaskHighlight final
{
public:
	struct FS_HighlightParameters                 Params_0;                                          // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_HighlightManager_C_DeactivateTaskHighlight) == 0x000008, "Wrong alignment on BP_HighlightManager_C_DeactivateTaskHighlight");
static_assert(sizeof(BP_HighlightManager_C_DeactivateTaskHighlight) == 0x000010, "Wrong size on BP_HighlightManager_C_DeactivateTaskHighlight");
static_assert(offsetof(BP_HighlightManager_C_DeactivateTaskHighlight, Params_0) == 0x000000, "Member 'BP_HighlightManager_C_DeactivateTaskHighlight::Params_0' has a wrong offset!");

// Function BP_HighlightManager.BP_HighlightManager_C.ExecuteUbergraph_BP_HighlightManager
// 0x0128 (0x0128 - 0x0000)
struct BP_HighlightManager_C_ExecuteUbergraph_BP_HighlightManager final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetLocalPlayerTeamId_ReturnValue;         // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_HighlightParameters                 K2Node_CustomEvent_Params_4;                       // 0x0008(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_ResidentCharacter_C*                K2Node_DynamicCast_AsBP_Resident_Character;        // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2A[0x6];                                       // 0x002A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_HighlightParameters                 K2Node_CustomEvent_Params_3;                       // 0x0030(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FS_HighlightParameters                 K2Node_CustomEvent_Params_2;                       // 0x0040(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CompareOwnerWithCurrentCaller_IsSame;     // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CompareOwnerWithCurrentCaller_IsSame_1;   // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_52[0x6];                                       // 0x0052(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_ResidentCharacter_C*                K2Node_DynamicCast_AsBP_Resident_Character_1;      // 0x0058(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_1;                    // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_62[0x6];                                       // 0x0062(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_ResidentCharacter_C*                K2Node_DynamicCast_AsBP_Resident_Character_2;      // 0x0068(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_2;                    // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_72[0x6];                                       // 0x0072(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_HouseEssential_Cube_C*              K2Node_CustomEvent_AffectedObjective_1;            // 0x0078(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_HouseEssential_Cube_C*              K2Node_CustomEvent_AffectedObjective;              // 0x0080(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	E_HighlightCategory                           K2Node_CustomEvent_Params_1;                       // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_89[0x7];                                       // 0x0089(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_CustomEvent_ActorToAdd_1;                   // 0x0090(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_UpgradePlanBase_C*                  K2Node_DynamicCast_AsBP_Upgrade_Plan_Base;         // 0x0098(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A1[0x7];                                       // 0x00A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_WaterTap_C*                         K2Node_DynamicCast_AsBP_Water_Tap;                 // 0x00A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B1[0x7];                                       // 0x00B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_Flower_C*                           K2Node_DynamicCast_AsBP_Flower;                    // 0x00B8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_5;                     // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x00C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C2[0x6];                                       // 0x00C2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_HouseDecalBase_C*                   K2Node_DynamicCast_AsBP_House_Decal_Base;          // 0x00C8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_6;                     // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D1[0x3];                                       // 0x00D1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_Hedge_Branch_C*                     K2Node_DynamicCast_AsBP_Hedge_Branch;              // 0x00D8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_7;                     // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E1[0x7];                                       // 0x00E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_GarbageItem_C*                      K2Node_DynamicCast_AsBP_Garbage_Item;              // 0x00E8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_8;                     // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F1[0x3];                                       // 0x00F1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_AddUnique_ReturnValue_1;            // 0x00F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_AddUnique_ReturnValue_2;            // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_3;                    // 0x00FC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_FD[0x3];                                       // 0x00FD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_AddUnique_ReturnValue_3;            // 0x0100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_AddUnique_ReturnValue_4;            // 0x0104(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_AddUnique_ReturnValue_5;            // 0x0108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_HighlightCategory                           K2Node_CustomEvent_Params;                         // 0x010C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_10D[0x3];                                      // 0x010D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_CustomEvent_ActorToAdd;                     // 0x0110(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_UpgradePlanBase_C*                  K2Node_DynamicCast_AsBP_Upgrade_Plan_Base_1;       // 0x0118(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_9;                     // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_4;                    // 0x0121(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue;             // 0x0122(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_HighlightManager_C_ExecuteUbergraph_BP_HighlightManager) == 0x000008, "Wrong alignment on BP_HighlightManager_C_ExecuteUbergraph_BP_HighlightManager");
static_assert(sizeof(BP_HighlightManager_C_ExecuteUbergraph_BP_HighlightManager) == 0x000128, "Wrong size on BP_HighlightManager_C_ExecuteUbergraph_BP_HighlightManager");
static_assert(offsetof(BP_HighlightManager_C_ExecuteUbergraph_BP_HighlightManager, EntryPoint) == 0x000000, "Member 'BP_HighlightManager_C_ExecuteUbergraph_BP_HighlightManager::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_HighlightManager_C_ExecuteUbergraph_BP_HighlightManager, CallFunc_GetLocalPlayerTeamId_ReturnValue) == 0x000004, "Member 'BP_HighlightManager_C_ExecuteUbergraph_BP_HighlightManager::CallFunc_GetLocalPlayerTeamId_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HighlightManager_C_ExecuteUbergraph_BP_HighlightManager, K2Node_CustomEvent_Params_4) == 0x000008, "Member 'BP_HighlightManager_C_ExecuteUbergraph_BP_HighlightManager::K2Node_CustomEvent_Params_4' has a wrong offset!");
static_assert(offsetof(BP_HighlightManager_C_ExecuteUbergraph_BP_HighlightManager, CallFunc_HasAuthority_ReturnValue) == 0x000018, "Member 'BP_HighlightManager_C_ExecuteUbergraph_BP_HighlightManager::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HighlightManager_C_ExecuteUbergraph_BP_HighlightManager, K2Node_DynamicCast_AsBP_Resident_Character) == 0x000020, "Member 'BP_HighlightManager_C_ExecuteUbergraph_BP_HighlightManager::K2Node_DynamicCast_AsBP_Resident_Character' has a wrong offset!");
static_assert(offsetof(BP_HighlightManager_C_ExecuteUbergraph_BP_HighlightManager, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'BP_HighlightManager_C_ExecuteUbergraph_BP_HighlightManager::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_HighlightManager_C_ExecuteUbergraph_BP_HighlightManager, K2Node_SwitchEnum_CmpSuccess) == 0x000029, "Member 'BP_HighlightManager_C_ExecuteUbergraph_BP_HighlightManager::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_HighlightManager_C_ExecuteUbergraph_BP_HighlightManager, K2Node_CustomEvent_Params_3) == 0x000030, "Member 'BP_HighlightManager_C_ExecuteUbergraph_BP_HighlightManager::K2Node_CustomEvent_Params_3' has a wrong offset!");
static_assert(offsetof(BP_HighlightManager_C_ExecuteUbergraph_BP_HighlightManager, K2Node_CustomEvent_Params_2) == 0x000040, "Member 'BP_HighlightManager_C_ExecuteUbergraph_BP_HighlightManager::K2Node_CustomEvent_Params_2' has a wrong offset!");
static_assert(offsetof(BP_HighlightManager_C_ExecuteUbergraph_BP_HighlightManager, CallFunc_CompareOwnerWithCurrentCaller_IsSame) == 0x000050, "Member 'BP_HighlightManager_C_ExecuteUbergraph_BP_HighlightManager::CallFunc_CompareOwnerWithCurrentCaller_IsSame' has a wrong offset!");
static_assert(offsetof(BP_HighlightManager_C_ExecuteUbergraph_BP_HighlightManager, CallFunc_CompareOwnerWithCurrentCaller_IsSame_1) == 0x000051, "Member 'BP_HighlightManager_C_ExecuteUbergraph_BP_HighlightManager::CallFunc_CompareOwnerWithCurrentCaller_IsSame_1' has a wrong offset!");
static_assert(offsetof(BP_HighlightManager_C_ExecuteUbergraph_BP_HighlightManager, K2Node_DynamicCast_AsBP_Resident_Character_1) == 0x000058, "Member 'BP_HighlightManager_C_ExecuteUbergraph_BP_HighlightManager::K2Node_DynamicCast_AsBP_Resident_Character_1' has a wrong offset!");
static_assert(offsetof(BP_HighlightManager_C_ExecuteUbergraph_BP_HighlightManager, K2Node_DynamicCast_bSuccess_1) == 0x000060, "Member 'BP_HighlightManager_C_ExecuteUbergraph_BP_HighlightManager::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_HighlightManager_C_ExecuteUbergraph_BP_HighlightManager, K2Node_SwitchEnum_CmpSuccess_1) == 0x000061, "Member 'BP_HighlightManager_C_ExecuteUbergraph_BP_HighlightManager::K2Node_SwitchEnum_CmpSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_HighlightManager_C_ExecuteUbergraph_BP_HighlightManager, K2Node_DynamicCast_AsBP_Resident_Character_2) == 0x000068, "Member 'BP_HighlightManager_C_ExecuteUbergraph_BP_HighlightManager::K2Node_DynamicCast_AsBP_Resident_Character_2' has a wrong offset!");
static_assert(offsetof(BP_HighlightManager_C_ExecuteUbergraph_BP_HighlightManager, K2Node_DynamicCast_bSuccess_2) == 0x000070, "Member 'BP_HighlightManager_C_ExecuteUbergraph_BP_HighlightManager::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_HighlightManager_C_ExecuteUbergraph_BP_HighlightManager, K2Node_SwitchEnum_CmpSuccess_2) == 0x000071, "Member 'BP_HighlightManager_C_ExecuteUbergraph_BP_HighlightManager::K2Node_SwitchEnum_CmpSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_HighlightManager_C_ExecuteUbergraph_BP_HighlightManager, K2Node_CustomEvent_AffectedObjective_1) == 0x000078, "Member 'BP_HighlightManager_C_ExecuteUbergraph_BP_HighlightManager::K2Node_CustomEvent_AffectedObjective_1' has a wrong offset!");
static_assert(offsetof(BP_HighlightManager_C_ExecuteUbergraph_BP_HighlightManager, K2Node_CustomEvent_AffectedObjective) == 0x000080, "Member 'BP_HighlightManager_C_ExecuteUbergraph_BP_HighlightManager::K2Node_CustomEvent_AffectedObjective' has a wrong offset!");
static_assert(offsetof(BP_HighlightManager_C_ExecuteUbergraph_BP_HighlightManager, K2Node_CustomEvent_Params_1) == 0x000088, "Member 'BP_HighlightManager_C_ExecuteUbergraph_BP_HighlightManager::K2Node_CustomEvent_Params_1' has a wrong offset!");
static_assert(offsetof(BP_HighlightManager_C_ExecuteUbergraph_BP_HighlightManager, K2Node_CustomEvent_ActorToAdd_1) == 0x000090, "Member 'BP_HighlightManager_C_ExecuteUbergraph_BP_HighlightManager::K2Node_CustomEvent_ActorToAdd_1' has a wrong offset!");
static_assert(offsetof(BP_HighlightManager_C_ExecuteUbergraph_BP_HighlightManager, K2Node_DynamicCast_AsBP_Upgrade_Plan_Base) == 0x000098, "Member 'BP_HighlightManager_C_ExecuteUbergraph_BP_HighlightManager::K2Node_DynamicCast_AsBP_Upgrade_Plan_Base' has a wrong offset!");
static_assert(offsetof(BP_HighlightManager_C_ExecuteUbergraph_BP_HighlightManager, K2Node_DynamicCast_bSuccess_3) == 0x0000A0, "Member 'BP_HighlightManager_C_ExecuteUbergraph_BP_HighlightManager::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(BP_HighlightManager_C_ExecuteUbergraph_BP_HighlightManager, K2Node_DynamicCast_AsBP_Water_Tap) == 0x0000A8, "Member 'BP_HighlightManager_C_ExecuteUbergraph_BP_HighlightManager::K2Node_DynamicCast_AsBP_Water_Tap' has a wrong offset!");
static_assert(offsetof(BP_HighlightManager_C_ExecuteUbergraph_BP_HighlightManager, K2Node_DynamicCast_bSuccess_4) == 0x0000B0, "Member 'BP_HighlightManager_C_ExecuteUbergraph_BP_HighlightManager::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(BP_HighlightManager_C_ExecuteUbergraph_BP_HighlightManager, K2Node_DynamicCast_AsBP_Flower) == 0x0000B8, "Member 'BP_HighlightManager_C_ExecuteUbergraph_BP_HighlightManager::K2Node_DynamicCast_AsBP_Flower' has a wrong offset!");
static_assert(offsetof(BP_HighlightManager_C_ExecuteUbergraph_BP_HighlightManager, K2Node_DynamicCast_bSuccess_5) == 0x0000C0, "Member 'BP_HighlightManager_C_ExecuteUbergraph_BP_HighlightManager::K2Node_DynamicCast_bSuccess_5' has a wrong offset!");
static_assert(offsetof(BP_HighlightManager_C_ExecuteUbergraph_BP_HighlightManager, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x0000C1, "Member 'BP_HighlightManager_C_ExecuteUbergraph_BP_HighlightManager::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HighlightManager_C_ExecuteUbergraph_BP_HighlightManager, K2Node_DynamicCast_AsBP_House_Decal_Base) == 0x0000C8, "Member 'BP_HighlightManager_C_ExecuteUbergraph_BP_HighlightManager::K2Node_DynamicCast_AsBP_House_Decal_Base' has a wrong offset!");
static_assert(offsetof(BP_HighlightManager_C_ExecuteUbergraph_BP_HighlightManager, K2Node_DynamicCast_bSuccess_6) == 0x0000D0, "Member 'BP_HighlightManager_C_ExecuteUbergraph_BP_HighlightManager::K2Node_DynamicCast_bSuccess_6' has a wrong offset!");
static_assert(offsetof(BP_HighlightManager_C_ExecuteUbergraph_BP_HighlightManager, CallFunc_Array_AddUnique_ReturnValue) == 0x0000D4, "Member 'BP_HighlightManager_C_ExecuteUbergraph_BP_HighlightManager::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HighlightManager_C_ExecuteUbergraph_BP_HighlightManager, K2Node_DynamicCast_AsBP_Hedge_Branch) == 0x0000D8, "Member 'BP_HighlightManager_C_ExecuteUbergraph_BP_HighlightManager::K2Node_DynamicCast_AsBP_Hedge_Branch' has a wrong offset!");
static_assert(offsetof(BP_HighlightManager_C_ExecuteUbergraph_BP_HighlightManager, K2Node_DynamicCast_bSuccess_7) == 0x0000E0, "Member 'BP_HighlightManager_C_ExecuteUbergraph_BP_HighlightManager::K2Node_DynamicCast_bSuccess_7' has a wrong offset!");
static_assert(offsetof(BP_HighlightManager_C_ExecuteUbergraph_BP_HighlightManager, K2Node_DynamicCast_AsBP_Garbage_Item) == 0x0000E8, "Member 'BP_HighlightManager_C_ExecuteUbergraph_BP_HighlightManager::K2Node_DynamicCast_AsBP_Garbage_Item' has a wrong offset!");
static_assert(offsetof(BP_HighlightManager_C_ExecuteUbergraph_BP_HighlightManager, K2Node_DynamicCast_bSuccess_8) == 0x0000F0, "Member 'BP_HighlightManager_C_ExecuteUbergraph_BP_HighlightManager::K2Node_DynamicCast_bSuccess_8' has a wrong offset!");
static_assert(offsetof(BP_HighlightManager_C_ExecuteUbergraph_BP_HighlightManager, CallFunc_Array_AddUnique_ReturnValue_1) == 0x0000F4, "Member 'BP_HighlightManager_C_ExecuteUbergraph_BP_HighlightManager::CallFunc_Array_AddUnique_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_HighlightManager_C_ExecuteUbergraph_BP_HighlightManager, CallFunc_Array_AddUnique_ReturnValue_2) == 0x0000F8, "Member 'BP_HighlightManager_C_ExecuteUbergraph_BP_HighlightManager::CallFunc_Array_AddUnique_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_HighlightManager_C_ExecuteUbergraph_BP_HighlightManager, K2Node_SwitchEnum_CmpSuccess_3) == 0x0000FC, "Member 'BP_HighlightManager_C_ExecuteUbergraph_BP_HighlightManager::K2Node_SwitchEnum_CmpSuccess_3' has a wrong offset!");
static_assert(offsetof(BP_HighlightManager_C_ExecuteUbergraph_BP_HighlightManager, CallFunc_Array_AddUnique_ReturnValue_3) == 0x000100, "Member 'BP_HighlightManager_C_ExecuteUbergraph_BP_HighlightManager::CallFunc_Array_AddUnique_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_HighlightManager_C_ExecuteUbergraph_BP_HighlightManager, CallFunc_Array_AddUnique_ReturnValue_4) == 0x000104, "Member 'BP_HighlightManager_C_ExecuteUbergraph_BP_HighlightManager::CallFunc_Array_AddUnique_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_HighlightManager_C_ExecuteUbergraph_BP_HighlightManager, CallFunc_Array_AddUnique_ReturnValue_5) == 0x000108, "Member 'BP_HighlightManager_C_ExecuteUbergraph_BP_HighlightManager::CallFunc_Array_AddUnique_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_HighlightManager_C_ExecuteUbergraph_BP_HighlightManager, K2Node_CustomEvent_Params) == 0x00010C, "Member 'BP_HighlightManager_C_ExecuteUbergraph_BP_HighlightManager::K2Node_CustomEvent_Params' has a wrong offset!");
static_assert(offsetof(BP_HighlightManager_C_ExecuteUbergraph_BP_HighlightManager, K2Node_CustomEvent_ActorToAdd) == 0x000110, "Member 'BP_HighlightManager_C_ExecuteUbergraph_BP_HighlightManager::K2Node_CustomEvent_ActorToAdd' has a wrong offset!");
static_assert(offsetof(BP_HighlightManager_C_ExecuteUbergraph_BP_HighlightManager, K2Node_DynamicCast_AsBP_Upgrade_Plan_Base_1) == 0x000118, "Member 'BP_HighlightManager_C_ExecuteUbergraph_BP_HighlightManager::K2Node_DynamicCast_AsBP_Upgrade_Plan_Base_1' has a wrong offset!");
static_assert(offsetof(BP_HighlightManager_C_ExecuteUbergraph_BP_HighlightManager, K2Node_DynamicCast_bSuccess_9) == 0x000120, "Member 'BP_HighlightManager_C_ExecuteUbergraph_BP_HighlightManager::K2Node_DynamicCast_bSuccess_9' has a wrong offset!");
static_assert(offsetof(BP_HighlightManager_C_ExecuteUbergraph_BP_HighlightManager, K2Node_SwitchEnum_CmpSuccess_4) == 0x000121, "Member 'BP_HighlightManager_C_ExecuteUbergraph_BP_HighlightManager::K2Node_SwitchEnum_CmpSuccess_4' has a wrong offset!");
static_assert(offsetof(BP_HighlightManager_C_ExecuteUbergraph_BP_HighlightManager, CallFunc_Array_RemoveItem_ReturnValue) == 0x000122, "Member 'BP_HighlightManager_C_ExecuteUbergraph_BP_HighlightManager::CallFunc_Array_RemoveItem_ReturnValue' has a wrong offset!");

// Function BP_HighlightManager.BP_HighlightManager_C.RemoveObjectFromTaskPool
// 0x0010 (0x0010 - 0x0000)
struct BP_HighlightManager_C_RemoveObjectFromTaskPool final
{
public:
	E_HighlightCategory                           Params_0;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 ActorToAdd;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_HighlightManager_C_RemoveObjectFromTaskPool) == 0x000008, "Wrong alignment on BP_HighlightManager_C_RemoveObjectFromTaskPool");
static_assert(sizeof(BP_HighlightManager_C_RemoveObjectFromTaskPool) == 0x000010, "Wrong size on BP_HighlightManager_C_RemoveObjectFromTaskPool");
static_assert(offsetof(BP_HighlightManager_C_RemoveObjectFromTaskPool, Params_0) == 0x000000, "Member 'BP_HighlightManager_C_RemoveObjectFromTaskPool::Params_0' has a wrong offset!");
static_assert(offsetof(BP_HighlightManager_C_RemoveObjectFromTaskPool, ActorToAdd) == 0x000008, "Member 'BP_HighlightManager_C_RemoveObjectFromTaskPool::ActorToAdd' has a wrong offset!");

// Function BP_HighlightManager.BP_HighlightManager_C.TempHighlightRemover
// 0x0010 (0x0010 - 0x0000)
struct BP_HighlightManager_C_TempHighlightRemover final
{
public:
	struct FS_HighlightParameters                 Params_0;                                          // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_HighlightManager_C_TempHighlightRemover) == 0x000008, "Wrong alignment on BP_HighlightManager_C_TempHighlightRemover");
static_assert(sizeof(BP_HighlightManager_C_TempHighlightRemover) == 0x000010, "Wrong size on BP_HighlightManager_C_TempHighlightRemover");
static_assert(offsetof(BP_HighlightManager_C_TempHighlightRemover, Params_0) == 0x000000, "Member 'BP_HighlightManager_C_TempHighlightRemover::Params_0' has a wrong offset!");

// Function BP_HighlightManager.BP_HighlightManager_C.ToggleDecals
// 0x00F0 (0x00F0 - 0x0000)
struct BP_HighlightManager_C_ToggleDecals final
{
public:
	E_HighlightLevel                              Verbosity;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_ResidentCharacter_C*                Instigator_0;                                      // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Activate;                                          // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            CallFunc_GetController_ReturnValue;                // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FTeam                                  CallFunc_GetTeam_ReturnValue;                      // 0x0020(0x0038)(NoDestructor)
	class APlayerControllerJP_MatchBP_C*          K2Node_DynamicCast_AsPlayer_Controller_JP_Match_BP; // 0x0058(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_62[0x2];                                       // 0x0062(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_74[0x4];                                       // 0x0074(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_HouseDecalBase_C*                   CallFunc_Array_Get_Item;                           // 0x0078(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0081(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_82[0x6];                                       // 0x0082(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0088(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetTeamAtPoint_bFoundTeam;                // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A1[0x3];                                       // 0x00A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           CallFunc_GetTeamAtPoint_TeamVolumeGameplayTag;     // 0x00A4(0x0008)(NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_AC[0x4];                                       // 0x00AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTeam                                  CallFunc_GetTeamAtPoint_ReturnValue;               // 0x00B0(0x0038)(ConstParm, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_HighlightManager_C_ToggleDecals) == 0x000008, "Wrong alignment on BP_HighlightManager_C_ToggleDecals");
static_assert(sizeof(BP_HighlightManager_C_ToggleDecals) == 0x0000F0, "Wrong size on BP_HighlightManager_C_ToggleDecals");
static_assert(offsetof(BP_HighlightManager_C_ToggleDecals, Verbosity) == 0x000000, "Member 'BP_HighlightManager_C_ToggleDecals::Verbosity' has a wrong offset!");
static_assert(offsetof(BP_HighlightManager_C_ToggleDecals, Instigator_0) == 0x000008, "Member 'BP_HighlightManager_C_ToggleDecals::Instigator_0' has a wrong offset!");
static_assert(offsetof(BP_HighlightManager_C_ToggleDecals, Activate) == 0x000010, "Member 'BP_HighlightManager_C_ToggleDecals::Activate' has a wrong offset!");
static_assert(offsetof(BP_HighlightManager_C_ToggleDecals, CallFunc_GetController_ReturnValue) == 0x000018, "Member 'BP_HighlightManager_C_ToggleDecals::CallFunc_GetController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HighlightManager_C_ToggleDecals, CallFunc_GetTeam_ReturnValue) == 0x000020, "Member 'BP_HighlightManager_C_ToggleDecals::CallFunc_GetTeam_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HighlightManager_C_ToggleDecals, K2Node_DynamicCast_AsPlayer_Controller_JP_Match_BP) == 0x000058, "Member 'BP_HighlightManager_C_ToggleDecals::K2Node_DynamicCast_AsPlayer_Controller_JP_Match_BP' has a wrong offset!");
static_assert(offsetof(BP_HighlightManager_C_ToggleDecals, K2Node_DynamicCast_bSuccess) == 0x000060, "Member 'BP_HighlightManager_C_ToggleDecals::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_HighlightManager_C_ToggleDecals, K2Node_SwitchEnum_CmpSuccess) == 0x000061, "Member 'BP_HighlightManager_C_ToggleDecals::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_HighlightManager_C_ToggleDecals, Temp_int_Array_Index_Variable) == 0x000064, "Member 'BP_HighlightManager_C_ToggleDecals::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_HighlightManager_C_ToggleDecals, Temp_int_Loop_Counter_Variable) == 0x000068, "Member 'BP_HighlightManager_C_ToggleDecals::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_HighlightManager_C_ToggleDecals, CallFunc_Add_IntInt_ReturnValue) == 0x00006C, "Member 'BP_HighlightManager_C_ToggleDecals::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HighlightManager_C_ToggleDecals, CallFunc_Array_Length_ReturnValue) == 0x000070, "Member 'BP_HighlightManager_C_ToggleDecals::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HighlightManager_C_ToggleDecals, CallFunc_Array_Get_Item) == 0x000078, "Member 'BP_HighlightManager_C_ToggleDecals::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_HighlightManager_C_ToggleDecals, CallFunc_Less_IntInt_ReturnValue) == 0x000080, "Member 'BP_HighlightManager_C_ToggleDecals::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HighlightManager_C_ToggleDecals, CallFunc_IsValid_ReturnValue) == 0x000081, "Member 'BP_HighlightManager_C_ToggleDecals::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HighlightManager_C_ToggleDecals, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000088, "Member 'BP_HighlightManager_C_ToggleDecals::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HighlightManager_C_ToggleDecals, CallFunc_GetTeamAtPoint_bFoundTeam) == 0x0000A0, "Member 'BP_HighlightManager_C_ToggleDecals::CallFunc_GetTeamAtPoint_bFoundTeam' has a wrong offset!");
static_assert(offsetof(BP_HighlightManager_C_ToggleDecals, CallFunc_GetTeamAtPoint_TeamVolumeGameplayTag) == 0x0000A4, "Member 'BP_HighlightManager_C_ToggleDecals::CallFunc_GetTeamAtPoint_TeamVolumeGameplayTag' has a wrong offset!");
static_assert(offsetof(BP_HighlightManager_C_ToggleDecals, CallFunc_GetTeamAtPoint_ReturnValue) == 0x0000B0, "Member 'BP_HighlightManager_C_ToggleDecals::CallFunc_GetTeamAtPoint_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HighlightManager_C_ToggleDecals, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x0000E8, "Member 'BP_HighlightManager_C_ToggleDecals::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function BP_HighlightManager.BP_HighlightManager_C.ToggleDefences
// 0x0028 (0x0028 - 0x0000)
struct BP_HighlightManager_C_ToggleDefences final
{
public:
	bool                                          Activate;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_UpgradePlanBase_C*                  CallFunc_Array_Get_Item;                           // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_HighlightManager_C_ToggleDefences) == 0x000008, "Wrong alignment on BP_HighlightManager_C_ToggleDefences");
static_assert(sizeof(BP_HighlightManager_C_ToggleDefences) == 0x000028, "Wrong size on BP_HighlightManager_C_ToggleDefences");
static_assert(offsetof(BP_HighlightManager_C_ToggleDefences, Activate) == 0x000000, "Member 'BP_HighlightManager_C_ToggleDefences::Activate' has a wrong offset!");
static_assert(offsetof(BP_HighlightManager_C_ToggleDefences, Temp_int_Array_Index_Variable) == 0x000004, "Member 'BP_HighlightManager_C_ToggleDefences::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_HighlightManager_C_ToggleDefences, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'BP_HighlightManager_C_ToggleDefences::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_HighlightManager_C_ToggleDefences, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'BP_HighlightManager_C_ToggleDefences::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HighlightManager_C_ToggleDefences, K2Node_SwitchEnum_CmpSuccess) == 0x000010, "Member 'BP_HighlightManager_C_ToggleDefences::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_HighlightManager_C_ToggleDefences, CallFunc_Array_Get_Item) == 0x000018, "Member 'BP_HighlightManager_C_ToggleDefences::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_HighlightManager_C_ToggleDefences, CallFunc_Array_Length_ReturnValue) == 0x000020, "Member 'BP_HighlightManager_C_ToggleDefences::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HighlightManager_C_ToggleDefences, CallFunc_Less_IntInt_ReturnValue) == 0x000024, "Member 'BP_HighlightManager_C_ToggleDefences::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function BP_HighlightManager.BP_HighlightManager_C.ToggleFlowers
// 0x00D0 (0x00D0 - 0x0000)
struct BP_HighlightManager_C_ToggleFlowers final
{
public:
	E_HighlightLevel                              Verbosity;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_ResidentCharacter_C*                Instigator_0;                                      // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Activate;                                          // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetTeamIDFromPawn_ReturnValue;            // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            CallFunc_GetController_ReturnValue;                // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerControllerJP_MatchBP_C*          K2Node_DynamicCast_AsPlayer_Controller_JP_Match_BP; // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerControllerJP_MatchBP_C*          K2Node_DynamicCast_AsPlayer_Controller_JP_Match_BP_1; // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49[0x3];                                       // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_Flower_C*                           CallFunc_Array_Get_Item;                           // 0x0058(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0068(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetTeamAtPoint_bFoundTeam;                // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_81[0x3];                                       // 0x0081(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           CallFunc_GetTeamAtPoint_TeamVolumeGameplayTag;     // 0x0084(0x0008)(NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8C[0x4];                                       // 0x008C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTeam                                  CallFunc_GetTeamAtPoint_ReturnValue;               // 0x0090(0x0038)(ConstParm, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_HighlightManager_C_ToggleFlowers) == 0x000008, "Wrong alignment on BP_HighlightManager_C_ToggleFlowers");
static_assert(sizeof(BP_HighlightManager_C_ToggleFlowers) == 0x0000D0, "Wrong size on BP_HighlightManager_C_ToggleFlowers");
static_assert(offsetof(BP_HighlightManager_C_ToggleFlowers, Verbosity) == 0x000000, "Member 'BP_HighlightManager_C_ToggleFlowers::Verbosity' has a wrong offset!");
static_assert(offsetof(BP_HighlightManager_C_ToggleFlowers, Instigator_0) == 0x000008, "Member 'BP_HighlightManager_C_ToggleFlowers::Instigator_0' has a wrong offset!");
static_assert(offsetof(BP_HighlightManager_C_ToggleFlowers, Activate) == 0x000010, "Member 'BP_HighlightManager_C_ToggleFlowers::Activate' has a wrong offset!");
static_assert(offsetof(BP_HighlightManager_C_ToggleFlowers, Temp_int_Array_Index_Variable) == 0x000014, "Member 'BP_HighlightManager_C_ToggleFlowers::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_HighlightManager_C_ToggleFlowers, CallFunc_GetTeamIDFromPawn_ReturnValue) == 0x000018, "Member 'BP_HighlightManager_C_ToggleFlowers::CallFunc_GetTeamIDFromPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HighlightManager_C_ToggleFlowers, CallFunc_GetController_ReturnValue) == 0x000020, "Member 'BP_HighlightManager_C_ToggleFlowers::CallFunc_GetController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HighlightManager_C_ToggleFlowers, K2Node_SwitchEnum_CmpSuccess) == 0x000028, "Member 'BP_HighlightManager_C_ToggleFlowers::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_HighlightManager_C_ToggleFlowers, K2Node_DynamicCast_AsPlayer_Controller_JP_Match_BP) == 0x000030, "Member 'BP_HighlightManager_C_ToggleFlowers::K2Node_DynamicCast_AsPlayer_Controller_JP_Match_BP' has a wrong offset!");
static_assert(offsetof(BP_HighlightManager_C_ToggleFlowers, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'BP_HighlightManager_C_ToggleFlowers::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_HighlightManager_C_ToggleFlowers, K2Node_DynamicCast_AsPlayer_Controller_JP_Match_BP_1) == 0x000040, "Member 'BP_HighlightManager_C_ToggleFlowers::K2Node_DynamicCast_AsPlayer_Controller_JP_Match_BP_1' has a wrong offset!");
static_assert(offsetof(BP_HighlightManager_C_ToggleFlowers, K2Node_DynamicCast_bSuccess_1) == 0x000048, "Member 'BP_HighlightManager_C_ToggleFlowers::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_HighlightManager_C_ToggleFlowers, Temp_int_Loop_Counter_Variable) == 0x00004C, "Member 'BP_HighlightManager_C_ToggleFlowers::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_HighlightManager_C_ToggleFlowers, CallFunc_Add_IntInt_ReturnValue) == 0x000050, "Member 'BP_HighlightManager_C_ToggleFlowers::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HighlightManager_C_ToggleFlowers, CallFunc_Array_Length_ReturnValue) == 0x000054, "Member 'BP_HighlightManager_C_ToggleFlowers::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HighlightManager_C_ToggleFlowers, CallFunc_Array_Get_Item) == 0x000058, "Member 'BP_HighlightManager_C_ToggleFlowers::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_HighlightManager_C_ToggleFlowers, CallFunc_Less_IntInt_ReturnValue) == 0x000060, "Member 'BP_HighlightManager_C_ToggleFlowers::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HighlightManager_C_ToggleFlowers, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000068, "Member 'BP_HighlightManager_C_ToggleFlowers::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HighlightManager_C_ToggleFlowers, CallFunc_GetTeamAtPoint_bFoundTeam) == 0x000080, "Member 'BP_HighlightManager_C_ToggleFlowers::CallFunc_GetTeamAtPoint_bFoundTeam' has a wrong offset!");
static_assert(offsetof(BP_HighlightManager_C_ToggleFlowers, CallFunc_GetTeamAtPoint_TeamVolumeGameplayTag) == 0x000084, "Member 'BP_HighlightManager_C_ToggleFlowers::CallFunc_GetTeamAtPoint_TeamVolumeGameplayTag' has a wrong offset!");
static_assert(offsetof(BP_HighlightManager_C_ToggleFlowers, CallFunc_GetTeamAtPoint_ReturnValue) == 0x000090, "Member 'BP_HighlightManager_C_ToggleFlowers::CallFunc_GetTeamAtPoint_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HighlightManager_C_ToggleFlowers, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x0000C8, "Member 'BP_HighlightManager_C_ToggleFlowers::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function BP_HighlightManager.BP_HighlightManager_C.ToggleGarbage
// 0x00F0 (0x00F0 - 0x0000)
struct BP_HighlightManager_C_ToggleGarbage final
{
public:
	E_HighlightLevel                              Verbosity;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_ResidentCharacter_C*                Instigator_0;                                      // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Activate;                                          // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTeam                                  CallFunc_GetTeam_ReturnValue;                      // 0x0020(0x0038)(NoDestructor)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5C[0x4];                                       // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            CallFunc_GetController_ReturnValue;                // 0x0060(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APlayerControllerJP_MatchBP_C*          K2Node_DynamicCast_AsPlayer_Controller_JP_Match_BP; // 0x0068(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_71[0x3];                                       // 0x0071(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_GarbageItem_C*                      CallFunc_Array_Get_Item;                           // 0x0078(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_81[0x7];                                       // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0088(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetTeamAtPoint_bFoundTeam;                // 0x00A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A2[0x2];                                       // 0x00A2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           CallFunc_GetTeamAtPoint_TeamVolumeGameplayTag;     // 0x00A4(0x0008)(NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_AC[0x4];                                       // 0x00AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTeam                                  CallFunc_GetTeamAtPoint_ReturnValue;               // 0x00B0(0x0038)(ConstParm, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_HighlightManager_C_ToggleGarbage) == 0x000008, "Wrong alignment on BP_HighlightManager_C_ToggleGarbage");
static_assert(sizeof(BP_HighlightManager_C_ToggleGarbage) == 0x0000F0, "Wrong size on BP_HighlightManager_C_ToggleGarbage");
static_assert(offsetof(BP_HighlightManager_C_ToggleGarbage, Verbosity) == 0x000000, "Member 'BP_HighlightManager_C_ToggleGarbage::Verbosity' has a wrong offset!");
static_assert(offsetof(BP_HighlightManager_C_ToggleGarbage, Instigator_0) == 0x000008, "Member 'BP_HighlightManager_C_ToggleGarbage::Instigator_0' has a wrong offset!");
static_assert(offsetof(BP_HighlightManager_C_ToggleGarbage, Activate) == 0x000010, "Member 'BP_HighlightManager_C_ToggleGarbage::Activate' has a wrong offset!");
static_assert(offsetof(BP_HighlightManager_C_ToggleGarbage, Temp_int_Array_Index_Variable) == 0x000014, "Member 'BP_HighlightManager_C_ToggleGarbage::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_HighlightManager_C_ToggleGarbage, K2Node_SwitchEnum_CmpSuccess) == 0x000018, "Member 'BP_HighlightManager_C_ToggleGarbage::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_HighlightManager_C_ToggleGarbage, Temp_int_Loop_Counter_Variable) == 0x00001C, "Member 'BP_HighlightManager_C_ToggleGarbage::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_HighlightManager_C_ToggleGarbage, CallFunc_GetTeam_ReturnValue) == 0x000020, "Member 'BP_HighlightManager_C_ToggleGarbage::CallFunc_GetTeam_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HighlightManager_C_ToggleGarbage, CallFunc_Add_IntInt_ReturnValue) == 0x000058, "Member 'BP_HighlightManager_C_ToggleGarbage::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HighlightManager_C_ToggleGarbage, CallFunc_GetController_ReturnValue) == 0x000060, "Member 'BP_HighlightManager_C_ToggleGarbage::CallFunc_GetController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HighlightManager_C_ToggleGarbage, K2Node_DynamicCast_AsPlayer_Controller_JP_Match_BP) == 0x000068, "Member 'BP_HighlightManager_C_ToggleGarbage::K2Node_DynamicCast_AsPlayer_Controller_JP_Match_BP' has a wrong offset!");
static_assert(offsetof(BP_HighlightManager_C_ToggleGarbage, K2Node_DynamicCast_bSuccess) == 0x000070, "Member 'BP_HighlightManager_C_ToggleGarbage::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_HighlightManager_C_ToggleGarbage, CallFunc_Array_Length_ReturnValue) == 0x000074, "Member 'BP_HighlightManager_C_ToggleGarbage::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HighlightManager_C_ToggleGarbage, CallFunc_Array_Get_Item) == 0x000078, "Member 'BP_HighlightManager_C_ToggleGarbage::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_HighlightManager_C_ToggleGarbage, CallFunc_Less_IntInt_ReturnValue) == 0x000080, "Member 'BP_HighlightManager_C_ToggleGarbage::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HighlightManager_C_ToggleGarbage, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000088, "Member 'BP_HighlightManager_C_ToggleGarbage::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HighlightManager_C_ToggleGarbage, CallFunc_IsValid_ReturnValue) == 0x0000A0, "Member 'BP_HighlightManager_C_ToggleGarbage::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HighlightManager_C_ToggleGarbage, CallFunc_GetTeamAtPoint_bFoundTeam) == 0x0000A1, "Member 'BP_HighlightManager_C_ToggleGarbage::CallFunc_GetTeamAtPoint_bFoundTeam' has a wrong offset!");
static_assert(offsetof(BP_HighlightManager_C_ToggleGarbage, CallFunc_GetTeamAtPoint_TeamVolumeGameplayTag) == 0x0000A4, "Member 'BP_HighlightManager_C_ToggleGarbage::CallFunc_GetTeamAtPoint_TeamVolumeGameplayTag' has a wrong offset!");
static_assert(offsetof(BP_HighlightManager_C_ToggleGarbage, CallFunc_GetTeamAtPoint_ReturnValue) == 0x0000B0, "Member 'BP_HighlightManager_C_ToggleGarbage::CallFunc_GetTeamAtPoint_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HighlightManager_C_ToggleGarbage, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x0000E8, "Member 'BP_HighlightManager_C_ToggleGarbage::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function BP_HighlightManager.BP_HighlightManager_C.ToggleHedges
// 0x00F0 (0x00F0 - 0x0000)
struct BP_HighlightManager_C_ToggleHedges final
{
public:
	E_HighlightLevel                              Verbosity;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_ResidentCharacter_C*                Instigator_0;                                      // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Activate;                                          // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            CallFunc_GetController_ReturnValue;                // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FTeam                                  CallFunc_GetTeam_ReturnValue;                      // 0x0020(0x0038)(NoDestructor)
	class APlayerControllerJP_MatchBP_C*          K2Node_DynamicCast_AsPlayer_Controller_JP_Match_BP; // 0x0058(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_62[0x2];                                       // 0x0062(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_74[0x4];                                       // 0x0074(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_Hedge_Branch_C*                     CallFunc_Array_Get_Item;                           // 0x0078(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0081(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_82[0x6];                                       // 0x0082(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0088(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetTeamAtPoint_bFoundTeam;                // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A1[0x3];                                       // 0x00A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           CallFunc_GetTeamAtPoint_TeamVolumeGameplayTag;     // 0x00A4(0x0008)(NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_AC[0x4];                                       // 0x00AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTeam                                  CallFunc_GetTeamAtPoint_ReturnValue;               // 0x00B0(0x0038)(ConstParm, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_HighlightManager_C_ToggleHedges) == 0x000008, "Wrong alignment on BP_HighlightManager_C_ToggleHedges");
static_assert(sizeof(BP_HighlightManager_C_ToggleHedges) == 0x0000F0, "Wrong size on BP_HighlightManager_C_ToggleHedges");
static_assert(offsetof(BP_HighlightManager_C_ToggleHedges, Verbosity) == 0x000000, "Member 'BP_HighlightManager_C_ToggleHedges::Verbosity' has a wrong offset!");
static_assert(offsetof(BP_HighlightManager_C_ToggleHedges, Instigator_0) == 0x000008, "Member 'BP_HighlightManager_C_ToggleHedges::Instigator_0' has a wrong offset!");
static_assert(offsetof(BP_HighlightManager_C_ToggleHedges, Activate) == 0x000010, "Member 'BP_HighlightManager_C_ToggleHedges::Activate' has a wrong offset!");
static_assert(offsetof(BP_HighlightManager_C_ToggleHedges, CallFunc_GetController_ReturnValue) == 0x000018, "Member 'BP_HighlightManager_C_ToggleHedges::CallFunc_GetController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HighlightManager_C_ToggleHedges, CallFunc_GetTeam_ReturnValue) == 0x000020, "Member 'BP_HighlightManager_C_ToggleHedges::CallFunc_GetTeam_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HighlightManager_C_ToggleHedges, K2Node_DynamicCast_AsPlayer_Controller_JP_Match_BP) == 0x000058, "Member 'BP_HighlightManager_C_ToggleHedges::K2Node_DynamicCast_AsPlayer_Controller_JP_Match_BP' has a wrong offset!");
static_assert(offsetof(BP_HighlightManager_C_ToggleHedges, K2Node_DynamicCast_bSuccess) == 0x000060, "Member 'BP_HighlightManager_C_ToggleHedges::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_HighlightManager_C_ToggleHedges, K2Node_SwitchEnum_CmpSuccess) == 0x000061, "Member 'BP_HighlightManager_C_ToggleHedges::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_HighlightManager_C_ToggleHedges, Temp_int_Array_Index_Variable) == 0x000064, "Member 'BP_HighlightManager_C_ToggleHedges::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_HighlightManager_C_ToggleHedges, Temp_int_Loop_Counter_Variable) == 0x000068, "Member 'BP_HighlightManager_C_ToggleHedges::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_HighlightManager_C_ToggleHedges, CallFunc_Add_IntInt_ReturnValue) == 0x00006C, "Member 'BP_HighlightManager_C_ToggleHedges::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HighlightManager_C_ToggleHedges, CallFunc_Array_Length_ReturnValue) == 0x000070, "Member 'BP_HighlightManager_C_ToggleHedges::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HighlightManager_C_ToggleHedges, CallFunc_Array_Get_Item) == 0x000078, "Member 'BP_HighlightManager_C_ToggleHedges::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_HighlightManager_C_ToggleHedges, CallFunc_Less_IntInt_ReturnValue) == 0x000080, "Member 'BP_HighlightManager_C_ToggleHedges::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HighlightManager_C_ToggleHedges, CallFunc_IsValid_ReturnValue) == 0x000081, "Member 'BP_HighlightManager_C_ToggleHedges::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HighlightManager_C_ToggleHedges, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000088, "Member 'BP_HighlightManager_C_ToggleHedges::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HighlightManager_C_ToggleHedges, CallFunc_GetTeamAtPoint_bFoundTeam) == 0x0000A0, "Member 'BP_HighlightManager_C_ToggleHedges::CallFunc_GetTeamAtPoint_bFoundTeam' has a wrong offset!");
static_assert(offsetof(BP_HighlightManager_C_ToggleHedges, CallFunc_GetTeamAtPoint_TeamVolumeGameplayTag) == 0x0000A4, "Member 'BP_HighlightManager_C_ToggleHedges::CallFunc_GetTeamAtPoint_TeamVolumeGameplayTag' has a wrong offset!");
static_assert(offsetof(BP_HighlightManager_C_ToggleHedges, CallFunc_GetTeamAtPoint_ReturnValue) == 0x0000B0, "Member 'BP_HighlightManager_C_ToggleHedges::CallFunc_GetTeamAtPoint_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HighlightManager_C_ToggleHedges, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x0000E8, "Member 'BP_HighlightManager_C_ToggleHedges::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function BP_HighlightManager.BP_HighlightManager_C.ToggleObjectiveHighlight
// 0x0080 (0x0080 - 0x0000)
struct BP_HighlightManager_C_ToggleObjectiveHighlight final
{
public:
	bool                                          Activate;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_HouseEssential_Cube_C*              Objective;                                         // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetTeamID_ReturnValue;                    // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class APlayerStateJP*>                 CallFunc_GetPlayersOfTeam_ReturnValue;             // 0x0018(0x0010)(ReferenceParm)
	uint8                                         CallFunc_GetTeamID_ReturnValue_1;                  // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerStateJP*                         CallFunc_Array_Get_Item;                           // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            CallFunc_GetController_ReturnValue;                // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APlayerControllerJP_MatchBP_C*          K2Node_DynamicCast_AsPlayer_Controller_JP_Match_BP; // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51[0x3];                                       // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59[0x3];                                       // 0x0059(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerState*                           CallFunc_GetPlayerState_ReturnValue;               // 0x0068(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_ResidentCharacter_C*                K2Node_DynamicCast_AsBP_Resident_Character;        // 0x0070(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetTeamIDFromPawn_ReturnValue;            // 0x0079(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x007A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_HighlightManager_C_ToggleObjectiveHighlight) == 0x000008, "Wrong alignment on BP_HighlightManager_C_ToggleObjectiveHighlight");
static_assert(sizeof(BP_HighlightManager_C_ToggleObjectiveHighlight) == 0x000080, "Wrong size on BP_HighlightManager_C_ToggleObjectiveHighlight");
static_assert(offsetof(BP_HighlightManager_C_ToggleObjectiveHighlight, Activate) == 0x000000, "Member 'BP_HighlightManager_C_ToggleObjectiveHighlight::Activate' has a wrong offset!");
static_assert(offsetof(BP_HighlightManager_C_ToggleObjectiveHighlight, Objective) == 0x000008, "Member 'BP_HighlightManager_C_ToggleObjectiveHighlight::Objective' has a wrong offset!");
static_assert(offsetof(BP_HighlightManager_C_ToggleObjectiveHighlight, Temp_int_Array_Index_Variable) == 0x000010, "Member 'BP_HighlightManager_C_ToggleObjectiveHighlight::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_HighlightManager_C_ToggleObjectiveHighlight, CallFunc_GetTeamID_ReturnValue) == 0x000014, "Member 'BP_HighlightManager_C_ToggleObjectiveHighlight::CallFunc_GetTeamID_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HighlightManager_C_ToggleObjectiveHighlight, CallFunc_GetPlayersOfTeam_ReturnValue) == 0x000018, "Member 'BP_HighlightManager_C_ToggleObjectiveHighlight::CallFunc_GetPlayersOfTeam_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HighlightManager_C_ToggleObjectiveHighlight, CallFunc_GetTeamID_ReturnValue_1) == 0x000028, "Member 'BP_HighlightManager_C_ToggleObjectiveHighlight::CallFunc_GetTeamID_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_HighlightManager_C_ToggleObjectiveHighlight, CallFunc_Array_Get_Item) == 0x000030, "Member 'BP_HighlightManager_C_ToggleObjectiveHighlight::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_HighlightManager_C_ToggleObjectiveHighlight, CallFunc_Array_Length_ReturnValue) == 0x000038, "Member 'BP_HighlightManager_C_ToggleObjectiveHighlight::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HighlightManager_C_ToggleObjectiveHighlight, CallFunc_GetController_ReturnValue) == 0x000040, "Member 'BP_HighlightManager_C_ToggleObjectiveHighlight::CallFunc_GetController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HighlightManager_C_ToggleObjectiveHighlight, K2Node_DynamicCast_AsPlayer_Controller_JP_Match_BP) == 0x000048, "Member 'BP_HighlightManager_C_ToggleObjectiveHighlight::K2Node_DynamicCast_AsPlayer_Controller_JP_Match_BP' has a wrong offset!");
static_assert(offsetof(BP_HighlightManager_C_ToggleObjectiveHighlight, K2Node_DynamicCast_bSuccess) == 0x000050, "Member 'BP_HighlightManager_C_ToggleObjectiveHighlight::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_HighlightManager_C_ToggleObjectiveHighlight, Temp_int_Loop_Counter_Variable) == 0x000054, "Member 'BP_HighlightManager_C_ToggleObjectiveHighlight::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_HighlightManager_C_ToggleObjectiveHighlight, CallFunc_Less_IntInt_ReturnValue) == 0x000058, "Member 'BP_HighlightManager_C_ToggleObjectiveHighlight::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HighlightManager_C_ToggleObjectiveHighlight, CallFunc_Add_IntInt_ReturnValue) == 0x00005C, "Member 'BP_HighlightManager_C_ToggleObjectiveHighlight::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HighlightManager_C_ToggleObjectiveHighlight, CallFunc_HasAuthority_ReturnValue) == 0x000060, "Member 'BP_HighlightManager_C_ToggleObjectiveHighlight::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HighlightManager_C_ToggleObjectiveHighlight, CallFunc_GetPlayerState_ReturnValue) == 0x000068, "Member 'BP_HighlightManager_C_ToggleObjectiveHighlight::CallFunc_GetPlayerState_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HighlightManager_C_ToggleObjectiveHighlight, K2Node_DynamicCast_AsBP_Resident_Character) == 0x000070, "Member 'BP_HighlightManager_C_ToggleObjectiveHighlight::K2Node_DynamicCast_AsBP_Resident_Character' has a wrong offset!");
static_assert(offsetof(BP_HighlightManager_C_ToggleObjectiveHighlight, K2Node_DynamicCast_bSuccess_1) == 0x000078, "Member 'BP_HighlightManager_C_ToggleObjectiveHighlight::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_HighlightManager_C_ToggleObjectiveHighlight, CallFunc_GetTeamIDFromPawn_ReturnValue) == 0x000079, "Member 'BP_HighlightManager_C_ToggleObjectiveHighlight::CallFunc_GetTeamIDFromPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HighlightManager_C_ToggleObjectiveHighlight, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x00007A, "Member 'BP_HighlightManager_C_ToggleObjectiveHighlight::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function BP_HighlightManager.BP_HighlightManager_C.ToggleWaterTaps
// 0x0058 (0x0058 - 0x0000)
struct BP_HighlightManager_C_ToggleWaterTaps final
{
public:
	E_HighlightLevel                              Verbosity;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_ResidentCharacter_C*                Instigator_0;                                      // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Activate;                                          // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            CallFunc_GetController_ReturnValue;                // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerControllerJP_MatchBP_C*          K2Node_DynamicCast_AsPlayer_Controller_JP_Match_BP; // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_WaterTap_C*                         CallFunc_Array_Get_Item;                           // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_HighlightManager_C_ToggleWaterTaps) == 0x000008, "Wrong alignment on BP_HighlightManager_C_ToggleWaterTaps");
static_assert(sizeof(BP_HighlightManager_C_ToggleWaterTaps) == 0x000058, "Wrong size on BP_HighlightManager_C_ToggleWaterTaps");
static_assert(offsetof(BP_HighlightManager_C_ToggleWaterTaps, Verbosity) == 0x000000, "Member 'BP_HighlightManager_C_ToggleWaterTaps::Verbosity' has a wrong offset!");
static_assert(offsetof(BP_HighlightManager_C_ToggleWaterTaps, Instigator_0) == 0x000008, "Member 'BP_HighlightManager_C_ToggleWaterTaps::Instigator_0' has a wrong offset!");
static_assert(offsetof(BP_HighlightManager_C_ToggleWaterTaps, Activate) == 0x000010, "Member 'BP_HighlightManager_C_ToggleWaterTaps::Activate' has a wrong offset!");
static_assert(offsetof(BP_HighlightManager_C_ToggleWaterTaps, CallFunc_GetController_ReturnValue) == 0x000018, "Member 'BP_HighlightManager_C_ToggleWaterTaps::CallFunc_GetController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HighlightManager_C_ToggleWaterTaps, K2Node_SwitchEnum_CmpSuccess) == 0x000020, "Member 'BP_HighlightManager_C_ToggleWaterTaps::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_HighlightManager_C_ToggleWaterTaps, K2Node_DynamicCast_AsPlayer_Controller_JP_Match_BP) == 0x000028, "Member 'BP_HighlightManager_C_ToggleWaterTaps::K2Node_DynamicCast_AsPlayer_Controller_JP_Match_BP' has a wrong offset!");
static_assert(offsetof(BP_HighlightManager_C_ToggleWaterTaps, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'BP_HighlightManager_C_ToggleWaterTaps::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_HighlightManager_C_ToggleWaterTaps, Temp_int_Array_Index_Variable) == 0x000034, "Member 'BP_HighlightManager_C_ToggleWaterTaps::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_HighlightManager_C_ToggleWaterTaps, Temp_int_Loop_Counter_Variable) == 0x000038, "Member 'BP_HighlightManager_C_ToggleWaterTaps::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_HighlightManager_C_ToggleWaterTaps, CallFunc_Add_IntInt_ReturnValue) == 0x00003C, "Member 'BP_HighlightManager_C_ToggleWaterTaps::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HighlightManager_C_ToggleWaterTaps, CallFunc_Array_Length_ReturnValue) == 0x000040, "Member 'BP_HighlightManager_C_ToggleWaterTaps::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HighlightManager_C_ToggleWaterTaps, CallFunc_Array_Get_Item) == 0x000048, "Member 'BP_HighlightManager_C_ToggleWaterTaps::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_HighlightManager_C_ToggleWaterTaps, CallFunc_Less_IntInt_ReturnValue) == 0x000050, "Member 'BP_HighlightManager_C_ToggleWaterTaps::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

}

