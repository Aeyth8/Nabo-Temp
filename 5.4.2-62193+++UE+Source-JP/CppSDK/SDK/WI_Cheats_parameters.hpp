#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WI_Cheats

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function WI_Cheats.WI_Cheats_C.CacheMousePos
// 0x0010 (0x0010 - 0x0000)
struct WI_Cheats_C_CacheMousePos final
{
public:
	struct FVector2D                              CallFunc_GetMousePos_ReturnValue;                  // 0x0000(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WI_Cheats_C_CacheMousePos) == 0x000008, "Wrong alignment on WI_Cheats_C_CacheMousePos");
static_assert(sizeof(WI_Cheats_C_CacheMousePos) == 0x000010, "Wrong size on WI_Cheats_C_CacheMousePos");
static_assert(offsetof(WI_Cheats_C_CacheMousePos, CallFunc_GetMousePos_ReturnValue) == 0x000000, "Member 'WI_Cheats_C_CacheMousePos::CallFunc_GetMousePos_ReturnValue' has a wrong offset!");

// Function WI_Cheats.WI_Cheats_C.DoMove
// 0x0030 (0x0030 - 0x0000)
struct WI_Cheats_C_DoMove final
{
public:
	struct FVector2D                              CallFunc_GetPosition_ReturnValue;                  // 0x0000(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetMouseDelta_ReturnValue;                // 0x0010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Add_Vector2DVector2D_ReturnValue;         // 0x0020(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WI_Cheats_C_DoMove) == 0x000008, "Wrong alignment on WI_Cheats_C_DoMove");
static_assert(sizeof(WI_Cheats_C_DoMove) == 0x000030, "Wrong size on WI_Cheats_C_DoMove");
static_assert(offsetof(WI_Cheats_C_DoMove, CallFunc_GetPosition_ReturnValue) == 0x000000, "Member 'WI_Cheats_C_DoMove::CallFunc_GetPosition_ReturnValue' has a wrong offset!");
static_assert(offsetof(WI_Cheats_C_DoMove, CallFunc_GetMouseDelta_ReturnValue) == 0x000010, "Member 'WI_Cheats_C_DoMove::CallFunc_GetMouseDelta_ReturnValue' has a wrong offset!");
static_assert(offsetof(WI_Cheats_C_DoMove, CallFunc_Add_Vector2DVector2D_ReturnValue) == 0x000020, "Member 'WI_Cheats_C_DoMove::CallFunc_Add_Vector2DVector2D_ReturnValue' has a wrong offset!");

// Function WI_Cheats.WI_Cheats_C.DoResize
// 0x0030 (0x0030 - 0x0000)
struct WI_Cheats_C_DoResize final
{
public:
	struct FVector2D                              CallFunc_GetSize_ReturnValue;                      // 0x0000(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetMouseDelta_ReturnValue;                // 0x0010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Add_Vector2DVector2D_ReturnValue;         // 0x0020(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WI_Cheats_C_DoResize) == 0x000008, "Wrong alignment on WI_Cheats_C_DoResize");
static_assert(sizeof(WI_Cheats_C_DoResize) == 0x000030, "Wrong size on WI_Cheats_C_DoResize");
static_assert(offsetof(WI_Cheats_C_DoResize, CallFunc_GetSize_ReturnValue) == 0x000000, "Member 'WI_Cheats_C_DoResize::CallFunc_GetSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(WI_Cheats_C_DoResize, CallFunc_GetMouseDelta_ReturnValue) == 0x000010, "Member 'WI_Cheats_C_DoResize::CallFunc_GetMouseDelta_ReturnValue' has a wrong offset!");
static_assert(offsetof(WI_Cheats_C_DoResize, CallFunc_Add_Vector2DVector2D_ReturnValue) == 0x000020, "Member 'WI_Cheats_C_DoResize::CallFunc_Add_Vector2DVector2D_ReturnValue' has a wrong offset!");

// Function WI_Cheats.WI_Cheats_C.ExecuteUbergraph_WI_Cheats
// 0x0030 (0x0030 - 0x0000)
struct WI_Cheats_C_ExecuteUbergraph_WI_Cheats final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0004(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UWI_CheatInputField_C* CheatInputField)> K2Node_CreateDelegate_OutputDelegate_1;            // 0x0014(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_25[0x3];                                       // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UWI_CheatInputField_C*                  K2Node_CustomEvent_CheatInputField;                // 0x0028(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WI_Cheats_C_ExecuteUbergraph_WI_Cheats) == 0x000008, "Wrong alignment on WI_Cheats_C_ExecuteUbergraph_WI_Cheats");
static_assert(sizeof(WI_Cheats_C_ExecuteUbergraph_WI_Cheats) == 0x000030, "Wrong size on WI_Cheats_C_ExecuteUbergraph_WI_Cheats");
static_assert(offsetof(WI_Cheats_C_ExecuteUbergraph_WI_Cheats, EntryPoint) == 0x000000, "Member 'WI_Cheats_C_ExecuteUbergraph_WI_Cheats::EntryPoint' has a wrong offset!");
static_assert(offsetof(WI_Cheats_C_ExecuteUbergraph_WI_Cheats, K2Node_CreateDelegate_OutputDelegate) == 0x000004, "Member 'WI_Cheats_C_ExecuteUbergraph_WI_Cheats::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WI_Cheats_C_ExecuteUbergraph_WI_Cheats, K2Node_CreateDelegate_OutputDelegate_1) == 0x000014, "Member 'WI_Cheats_C_ExecuteUbergraph_WI_Cheats::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(WI_Cheats_C_ExecuteUbergraph_WI_Cheats, K2Node_Event_IsDesignTime) == 0x000024, "Member 'WI_Cheats_C_ExecuteUbergraph_WI_Cheats::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(WI_Cheats_C_ExecuteUbergraph_WI_Cheats, K2Node_CustomEvent_CheatInputField) == 0x000028, "Member 'WI_Cheats_C_ExecuteUbergraph_WI_Cheats::K2Node_CustomEvent_CheatInputField' has a wrong offset!");

// Function WI_Cheats.WI_Cheats_C.HandleChangeTeamClicked
// 0x0008 (0x0008 - 0x0000)
struct WI_Cheats_C_HandleChangeTeamClicked final
{
public:
	class UWI_CheatInputField_C*                  CheatInputField;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WI_Cheats_C_HandleChangeTeamClicked) == 0x000008, "Wrong alignment on WI_Cheats_C_HandleChangeTeamClicked");
static_assert(sizeof(WI_Cheats_C_HandleChangeTeamClicked) == 0x000008, "Wrong size on WI_Cheats_C_HandleChangeTeamClicked");
static_assert(offsetof(WI_Cheats_C_HandleChangeTeamClicked, CheatInputField) == 0x000000, "Member 'WI_Cheats_C_HandleChangeTeamClicked::CheatInputField' has a wrong offset!");

// Function WI_Cheats.WI_Cheats_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct WI_Cheats_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WI_Cheats_C_PreConstruct) == 0x000001, "Wrong alignment on WI_Cheats_C_PreConstruct");
static_assert(sizeof(WI_Cheats_C_PreConstruct) == 0x000001, "Wrong size on WI_Cheats_C_PreConstruct");
static_assert(offsetof(WI_Cheats_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'WI_Cheats_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function WI_Cheats.WI_Cheats_C.SetGameInputMode
// 0x0028 (0x0028 - 0x0000)
struct WI_Cheats_C_SetGameInputMode final
{
public:
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasMatchEnded_ReturnValue;                // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue_1;        // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue_2;        // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WI_Cheats_C_SetGameInputMode) == 0x000008, "Wrong alignment on WI_Cheats_C_SetGameInputMode");
static_assert(sizeof(WI_Cheats_C_SetGameInputMode) == 0x000028, "Wrong size on WI_Cheats_C_SetGameInputMode");
static_assert(offsetof(WI_Cheats_C_SetGameInputMode, CallFunc_GetGameState_ReturnValue) == 0x000000, "Member 'WI_Cheats_C_SetGameInputMode::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(WI_Cheats_C_SetGameInputMode, CallFunc_GetPlayerController_ReturnValue) == 0x000008, "Member 'WI_Cheats_C_SetGameInputMode::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(WI_Cheats_C_SetGameInputMode, CallFunc_HasMatchEnded_ReturnValue) == 0x000010, "Member 'WI_Cheats_C_SetGameInputMode::CallFunc_HasMatchEnded_ReturnValue' has a wrong offset!");
static_assert(offsetof(WI_Cheats_C_SetGameInputMode, CallFunc_GetPlayerController_ReturnValue_1) == 0x000018, "Member 'WI_Cheats_C_SetGameInputMode::CallFunc_GetPlayerController_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WI_Cheats_C_SetGameInputMode, CallFunc_GetPlayerController_ReturnValue_2) == 0x000020, "Member 'WI_Cheats_C_SetGameInputMode::CallFunc_GetPlayerController_ReturnValue_2' has a wrong offset!");

// Function WI_Cheats.WI_Cheats_C.SetPosition
// 0x0020 (0x0020 - 0x0000)
struct WI_Cheats_C_SetPosition final
{
public:
	struct FVector2D                              InPosition;                                        // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_ClampPossiblePosition_Output;             // 0x0010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WI_Cheats_C_SetPosition) == 0x000008, "Wrong alignment on WI_Cheats_C_SetPosition");
static_assert(sizeof(WI_Cheats_C_SetPosition) == 0x000020, "Wrong size on WI_Cheats_C_SetPosition");
static_assert(offsetof(WI_Cheats_C_SetPosition, InPosition) == 0x000000, "Member 'WI_Cheats_C_SetPosition::InPosition' has a wrong offset!");
static_assert(offsetof(WI_Cheats_C_SetPosition, CallFunc_ClampPossiblePosition_Output) == 0x000010, "Member 'WI_Cheats_C_SetPosition::CallFunc_ClampPossiblePosition_Output' has a wrong offset!");

// Function WI_Cheats.WI_Cheats_C.SetSize
// 0x0020 (0x0020 - 0x0000)
struct WI_Cheats_C_SetSize final
{
public:
	struct FVector2D                              InSize;                                            // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_ClampPossibleSize_ReturnValue;            // 0x0010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WI_Cheats_C_SetSize) == 0x000008, "Wrong alignment on WI_Cheats_C_SetSize");
static_assert(sizeof(WI_Cheats_C_SetSize) == 0x000020, "Wrong size on WI_Cheats_C_SetSize");
static_assert(offsetof(WI_Cheats_C_SetSize, InSize) == 0x000000, "Member 'WI_Cheats_C_SetSize::InSize' has a wrong offset!");
static_assert(offsetof(WI_Cheats_C_SetSize, CallFunc_ClampPossibleSize_ReturnValue) == 0x000010, "Member 'WI_Cheats_C_SetSize::CallFunc_ClampPossibleSize_ReturnValue' has a wrong offset!");

// Function WI_Cheats.WI_Cheats_C.SetUIInputMode
// 0x0018 (0x0018 - 0x0000)
struct WI_Cheats_C_SetUIInputMode final
{
public:
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue_1;        // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue_2;        // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WI_Cheats_C_SetUIInputMode) == 0x000008, "Wrong alignment on WI_Cheats_C_SetUIInputMode");
static_assert(sizeof(WI_Cheats_C_SetUIInputMode) == 0x000018, "Wrong size on WI_Cheats_C_SetUIInputMode");
static_assert(offsetof(WI_Cheats_C_SetUIInputMode, CallFunc_GetPlayerController_ReturnValue) == 0x000000, "Member 'WI_Cheats_C_SetUIInputMode::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(WI_Cheats_C_SetUIInputMode, CallFunc_GetPlayerController_ReturnValue_1) == 0x000008, "Member 'WI_Cheats_C_SetUIInputMode::CallFunc_GetPlayerController_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WI_Cheats_C_SetUIInputMode, CallFunc_GetPlayerController_ReturnValue_2) == 0x000010, "Member 'WI_Cheats_C_SetUIInputMode::CallFunc_GetPlayerController_ReturnValue_2' has a wrong offset!");

// Function WI_Cheats.WI_Cheats_C.UpdateYourTeamLabel
// 0x0078 (0x0078 - 0x0000)
struct WI_Cheats_C_UpdateYourTeamLabel final
{
public:
	uint8                                         CallFunc_GetLocalPlayerTeamId_ReturnValue;         // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	int64                                         CallFunc_Conv_ByteToInt64_ReturnValue;             // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0010(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0058(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0068(0x0010)()
};
static_assert(alignof(WI_Cheats_C_UpdateYourTeamLabel) == 0x000008, "Wrong alignment on WI_Cheats_C_UpdateYourTeamLabel");
static_assert(sizeof(WI_Cheats_C_UpdateYourTeamLabel) == 0x000078, "Wrong size on WI_Cheats_C_UpdateYourTeamLabel");
static_assert(offsetof(WI_Cheats_C_UpdateYourTeamLabel, CallFunc_GetLocalPlayerTeamId_ReturnValue) == 0x000000, "Member 'WI_Cheats_C_UpdateYourTeamLabel::CallFunc_GetLocalPlayerTeamId_ReturnValue' has a wrong offset!");
static_assert(offsetof(WI_Cheats_C_UpdateYourTeamLabel, CallFunc_Conv_ByteToInt64_ReturnValue) == 0x000008, "Member 'WI_Cheats_C_UpdateYourTeamLabel::CallFunc_Conv_ByteToInt64_ReturnValue' has a wrong offset!");
static_assert(offsetof(WI_Cheats_C_UpdateYourTeamLabel, K2Node_MakeStruct_FormatArgumentData) == 0x000010, "Member 'WI_Cheats_C_UpdateYourTeamLabel::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(WI_Cheats_C_UpdateYourTeamLabel, K2Node_MakeArray_Array) == 0x000058, "Member 'WI_Cheats_C_UpdateYourTeamLabel::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(WI_Cheats_C_UpdateYourTeamLabel, CallFunc_Format_ReturnValue) == 0x000068, "Member 'WI_Cheats_C_UpdateYourTeamLabel::CallFunc_Format_ReturnValue' has a wrong offset!");

// Function WI_Cheats.WI_Cheats_C.ClampPossiblePosition
// 0x00F8 (0x00F8 - 0x0000)
struct WI_Cheats_C_ClampPossiblePosition final
{
public:
	struct FVector2D                              Input;                                             // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              Output;                                            // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X;                          // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y;                          // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGeometry                              CallFunc_GetPaintSpaceGeometry_ReturnValue;        // 0x0030(0x0038)(ConstParm, IsPlainOldData, NoDestructor)
	struct FVector2D                              CallFunc_GetViewportSize_ReturnValue;              // 0x0068(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetAbsoluteSize_ReturnValue;              // 0x0078(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X_1;                        // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y_1;                        // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X_2;                        // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y_2;                        // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetViewportSize_ReturnValue_1;            // 0x00A8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X_3;                        // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y_3;                        // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue;                       // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_1;      // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue_1;                     // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x00E8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WI_Cheats_C_ClampPossiblePosition) == 0x000008, "Wrong alignment on WI_Cheats_C_ClampPossiblePosition");
static_assert(sizeof(WI_Cheats_C_ClampPossiblePosition) == 0x0000F8, "Wrong size on WI_Cheats_C_ClampPossiblePosition");
static_assert(offsetof(WI_Cheats_C_ClampPossiblePosition, Input) == 0x000000, "Member 'WI_Cheats_C_ClampPossiblePosition::Input' has a wrong offset!");
static_assert(offsetof(WI_Cheats_C_ClampPossiblePosition, Output) == 0x000010, "Member 'WI_Cheats_C_ClampPossiblePosition::Output' has a wrong offset!");
static_assert(offsetof(WI_Cheats_C_ClampPossiblePosition, CallFunc_BreakVector2D_X) == 0x000020, "Member 'WI_Cheats_C_ClampPossiblePosition::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(WI_Cheats_C_ClampPossiblePosition, CallFunc_BreakVector2D_Y) == 0x000028, "Member 'WI_Cheats_C_ClampPossiblePosition::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(WI_Cheats_C_ClampPossiblePosition, CallFunc_GetPaintSpaceGeometry_ReturnValue) == 0x000030, "Member 'WI_Cheats_C_ClampPossiblePosition::CallFunc_GetPaintSpaceGeometry_ReturnValue' has a wrong offset!");
static_assert(offsetof(WI_Cheats_C_ClampPossiblePosition, CallFunc_GetViewportSize_ReturnValue) == 0x000068, "Member 'WI_Cheats_C_ClampPossiblePosition::CallFunc_GetViewportSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(WI_Cheats_C_ClampPossiblePosition, CallFunc_GetAbsoluteSize_ReturnValue) == 0x000078, "Member 'WI_Cheats_C_ClampPossiblePosition::CallFunc_GetAbsoluteSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(WI_Cheats_C_ClampPossiblePosition, CallFunc_BreakVector2D_X_1) == 0x000088, "Member 'WI_Cheats_C_ClampPossiblePosition::CallFunc_BreakVector2D_X_1' has a wrong offset!");
static_assert(offsetof(WI_Cheats_C_ClampPossiblePosition, CallFunc_BreakVector2D_Y_1) == 0x000090, "Member 'WI_Cheats_C_ClampPossiblePosition::CallFunc_BreakVector2D_Y_1' has a wrong offset!");
static_assert(offsetof(WI_Cheats_C_ClampPossiblePosition, CallFunc_BreakVector2D_X_2) == 0x000098, "Member 'WI_Cheats_C_ClampPossiblePosition::CallFunc_BreakVector2D_X_2' has a wrong offset!");
static_assert(offsetof(WI_Cheats_C_ClampPossiblePosition, CallFunc_BreakVector2D_Y_2) == 0x0000A0, "Member 'WI_Cheats_C_ClampPossiblePosition::CallFunc_BreakVector2D_Y_2' has a wrong offset!");
static_assert(offsetof(WI_Cheats_C_ClampPossiblePosition, CallFunc_GetViewportSize_ReturnValue_1) == 0x0000A8, "Member 'WI_Cheats_C_ClampPossiblePosition::CallFunc_GetViewportSize_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WI_Cheats_C_ClampPossiblePosition, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x0000B8, "Member 'WI_Cheats_C_ClampPossiblePosition::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WI_Cheats_C_ClampPossiblePosition, CallFunc_BreakVector2D_X_3) == 0x0000C0, "Member 'WI_Cheats_C_ClampPossiblePosition::CallFunc_BreakVector2D_X_3' has a wrong offset!");
static_assert(offsetof(WI_Cheats_C_ClampPossiblePosition, CallFunc_BreakVector2D_Y_3) == 0x0000C8, "Member 'WI_Cheats_C_ClampPossiblePosition::CallFunc_BreakVector2D_Y_3' has a wrong offset!");
static_assert(offsetof(WI_Cheats_C_ClampPossiblePosition, CallFunc_FClamp_ReturnValue) == 0x0000D0, "Member 'WI_Cheats_C_ClampPossiblePosition::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(WI_Cheats_C_ClampPossiblePosition, CallFunc_Subtract_DoubleDouble_ReturnValue_1) == 0x0000D8, "Member 'WI_Cheats_C_ClampPossiblePosition::CallFunc_Subtract_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WI_Cheats_C_ClampPossiblePosition, CallFunc_FClamp_ReturnValue_1) == 0x0000E0, "Member 'WI_Cheats_C_ClampPossiblePosition::CallFunc_FClamp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WI_Cheats_C_ClampPossiblePosition, CallFunc_MakeVector2D_ReturnValue) == 0x0000E8, "Member 'WI_Cheats_C_ClampPossiblePosition::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");

// Function WI_Cheats.WI_Cheats_C.ClampPossibleSize
// 0x0130 (0x0130 - 0x0000)
struct WI_Cheats_C_ClampPossibleSize final
{
public:
	struct FVector2D                              Input;                                             // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              ReturnValue;                                       // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetViewportSize_ReturnValue;              // 0x0020(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X;                          // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y;                          // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X_1;                        // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y_1;                        // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetPosition_ReturnValue;                  // 0x0050(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetViewportSize_ReturnValue_1;            // 0x0060(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X_2;                        // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y_2;                        // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X_3;                        // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y_3;                        // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetPosition_ReturnValue_1;                // 0x0098(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X_4;                        // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y_4;                        // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X_5;                        // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y_5;                        // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_1;      // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetViewportSize_ReturnValue_2;            // 0x00D0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Subtract_Vector2DVector2D_ReturnValue;    // 0x00E0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X_6;                        // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y_6;                        // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FMin_ReturnValue;                         // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FMin_ReturnValue_1;                       // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue;                       // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue_1;                     // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0120(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WI_Cheats_C_ClampPossibleSize) == 0x000008, "Wrong alignment on WI_Cheats_C_ClampPossibleSize");
static_assert(sizeof(WI_Cheats_C_ClampPossibleSize) == 0x000130, "Wrong size on WI_Cheats_C_ClampPossibleSize");
static_assert(offsetof(WI_Cheats_C_ClampPossibleSize, Input) == 0x000000, "Member 'WI_Cheats_C_ClampPossibleSize::Input' has a wrong offset!");
static_assert(offsetof(WI_Cheats_C_ClampPossibleSize, ReturnValue) == 0x000010, "Member 'WI_Cheats_C_ClampPossibleSize::ReturnValue' has a wrong offset!");
static_assert(offsetof(WI_Cheats_C_ClampPossibleSize, CallFunc_GetViewportSize_ReturnValue) == 0x000020, "Member 'WI_Cheats_C_ClampPossibleSize::CallFunc_GetViewportSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(WI_Cheats_C_ClampPossibleSize, CallFunc_BreakVector2D_X) == 0x000030, "Member 'WI_Cheats_C_ClampPossibleSize::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(WI_Cheats_C_ClampPossibleSize, CallFunc_BreakVector2D_Y) == 0x000038, "Member 'WI_Cheats_C_ClampPossibleSize::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(WI_Cheats_C_ClampPossibleSize, CallFunc_BreakVector2D_X_1) == 0x000040, "Member 'WI_Cheats_C_ClampPossibleSize::CallFunc_BreakVector2D_X_1' has a wrong offset!");
static_assert(offsetof(WI_Cheats_C_ClampPossibleSize, CallFunc_BreakVector2D_Y_1) == 0x000048, "Member 'WI_Cheats_C_ClampPossibleSize::CallFunc_BreakVector2D_Y_1' has a wrong offset!");
static_assert(offsetof(WI_Cheats_C_ClampPossibleSize, CallFunc_GetPosition_ReturnValue) == 0x000050, "Member 'WI_Cheats_C_ClampPossibleSize::CallFunc_GetPosition_ReturnValue' has a wrong offset!");
static_assert(offsetof(WI_Cheats_C_ClampPossibleSize, CallFunc_GetViewportSize_ReturnValue_1) == 0x000060, "Member 'WI_Cheats_C_ClampPossibleSize::CallFunc_GetViewportSize_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WI_Cheats_C_ClampPossibleSize, CallFunc_BreakVector2D_X_2) == 0x000070, "Member 'WI_Cheats_C_ClampPossibleSize::CallFunc_BreakVector2D_X_2' has a wrong offset!");
static_assert(offsetof(WI_Cheats_C_ClampPossibleSize, CallFunc_BreakVector2D_Y_2) == 0x000078, "Member 'WI_Cheats_C_ClampPossibleSize::CallFunc_BreakVector2D_Y_2' has a wrong offset!");
static_assert(offsetof(WI_Cheats_C_ClampPossibleSize, CallFunc_BreakVector2D_X_3) == 0x000080, "Member 'WI_Cheats_C_ClampPossibleSize::CallFunc_BreakVector2D_X_3' has a wrong offset!");
static_assert(offsetof(WI_Cheats_C_ClampPossibleSize, CallFunc_BreakVector2D_Y_3) == 0x000088, "Member 'WI_Cheats_C_ClampPossibleSize::CallFunc_BreakVector2D_Y_3' has a wrong offset!");
static_assert(offsetof(WI_Cheats_C_ClampPossibleSize, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000090, "Member 'WI_Cheats_C_ClampPossibleSize::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WI_Cheats_C_ClampPossibleSize, CallFunc_GetPosition_ReturnValue_1) == 0x000098, "Member 'WI_Cheats_C_ClampPossibleSize::CallFunc_GetPosition_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WI_Cheats_C_ClampPossibleSize, CallFunc_BreakVector2D_X_4) == 0x0000A8, "Member 'WI_Cheats_C_ClampPossibleSize::CallFunc_BreakVector2D_X_4' has a wrong offset!");
static_assert(offsetof(WI_Cheats_C_ClampPossibleSize, CallFunc_BreakVector2D_Y_4) == 0x0000B0, "Member 'WI_Cheats_C_ClampPossibleSize::CallFunc_BreakVector2D_Y_4' has a wrong offset!");
static_assert(offsetof(WI_Cheats_C_ClampPossibleSize, CallFunc_BreakVector2D_X_5) == 0x0000B8, "Member 'WI_Cheats_C_ClampPossibleSize::CallFunc_BreakVector2D_X_5' has a wrong offset!");
static_assert(offsetof(WI_Cheats_C_ClampPossibleSize, CallFunc_BreakVector2D_Y_5) == 0x0000C0, "Member 'WI_Cheats_C_ClampPossibleSize::CallFunc_BreakVector2D_Y_5' has a wrong offset!");
static_assert(offsetof(WI_Cheats_C_ClampPossibleSize, CallFunc_Subtract_DoubleDouble_ReturnValue_1) == 0x0000C8, "Member 'WI_Cheats_C_ClampPossibleSize::CallFunc_Subtract_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WI_Cheats_C_ClampPossibleSize, CallFunc_GetViewportSize_ReturnValue_2) == 0x0000D0, "Member 'WI_Cheats_C_ClampPossibleSize::CallFunc_GetViewportSize_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WI_Cheats_C_ClampPossibleSize, CallFunc_Subtract_Vector2DVector2D_ReturnValue) == 0x0000E0, "Member 'WI_Cheats_C_ClampPossibleSize::CallFunc_Subtract_Vector2DVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(WI_Cheats_C_ClampPossibleSize, CallFunc_BreakVector2D_X_6) == 0x0000F0, "Member 'WI_Cheats_C_ClampPossibleSize::CallFunc_BreakVector2D_X_6' has a wrong offset!");
static_assert(offsetof(WI_Cheats_C_ClampPossibleSize, CallFunc_BreakVector2D_Y_6) == 0x0000F8, "Member 'WI_Cheats_C_ClampPossibleSize::CallFunc_BreakVector2D_Y_6' has a wrong offset!");
static_assert(offsetof(WI_Cheats_C_ClampPossibleSize, CallFunc_FMin_ReturnValue) == 0x000100, "Member 'WI_Cheats_C_ClampPossibleSize::CallFunc_FMin_ReturnValue' has a wrong offset!");
static_assert(offsetof(WI_Cheats_C_ClampPossibleSize, CallFunc_FMin_ReturnValue_1) == 0x000108, "Member 'WI_Cheats_C_ClampPossibleSize::CallFunc_FMin_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WI_Cheats_C_ClampPossibleSize, CallFunc_FClamp_ReturnValue) == 0x000110, "Member 'WI_Cheats_C_ClampPossibleSize::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(WI_Cheats_C_ClampPossibleSize, CallFunc_FClamp_ReturnValue_1) == 0x000118, "Member 'WI_Cheats_C_ClampPossibleSize::CallFunc_FClamp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WI_Cheats_C_ClampPossibleSize, CallFunc_MakeVector2D_ReturnValue) == 0x000120, "Member 'WI_Cheats_C_ClampPossibleSize::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");

// Function WI_Cheats.WI_Cheats_C.GetMouseDelta
// 0x0030 (0x0030 - 0x0000)
struct WI_Cheats_C_GetMouseDelta final
{
public:
	struct FVector2D                              ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetMousePos_ReturnValue;                  // 0x0010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Subtract_Vector2DVector2D_ReturnValue;    // 0x0020(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WI_Cheats_C_GetMouseDelta) == 0x000008, "Wrong alignment on WI_Cheats_C_GetMouseDelta");
static_assert(sizeof(WI_Cheats_C_GetMouseDelta) == 0x000030, "Wrong size on WI_Cheats_C_GetMouseDelta");
static_assert(offsetof(WI_Cheats_C_GetMouseDelta, ReturnValue) == 0x000000, "Member 'WI_Cheats_C_GetMouseDelta::ReturnValue' has a wrong offset!");
static_assert(offsetof(WI_Cheats_C_GetMouseDelta, CallFunc_GetMousePos_ReturnValue) == 0x000010, "Member 'WI_Cheats_C_GetMouseDelta::CallFunc_GetMousePos_ReturnValue' has a wrong offset!");
static_assert(offsetof(WI_Cheats_C_GetMouseDelta, CallFunc_Subtract_Vector2DVector2D_ReturnValue) == 0x000020, "Member 'WI_Cheats_C_GetMouseDelta::CallFunc_Subtract_Vector2DVector2D_ReturnValue' has a wrong offset!");

// Function WI_Cheats.WI_Cheats_C.GetMousePos
// 0x0020 (0x0020 - 0x0000)
struct WI_Cheats_C_GetMousePos final
{
public:
	struct FVector2D                              ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetMousePositionOnViewport_ReturnValue;   // 0x0010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WI_Cheats_C_GetMousePos) == 0x000008, "Wrong alignment on WI_Cheats_C_GetMousePos");
static_assert(sizeof(WI_Cheats_C_GetMousePos) == 0x000020, "Wrong size on WI_Cheats_C_GetMousePos");
static_assert(offsetof(WI_Cheats_C_GetMousePos, ReturnValue) == 0x000000, "Member 'WI_Cheats_C_GetMousePos::ReturnValue' has a wrong offset!");
static_assert(offsetof(WI_Cheats_C_GetMousePos, CallFunc_GetMousePositionOnViewport_ReturnValue) == 0x000010, "Member 'WI_Cheats_C_GetMousePos::CallFunc_GetMousePositionOnViewport_ReturnValue' has a wrong offset!");

// Function WI_Cheats.WI_Cheats_C.GetPosition
// 0x0030 (0x0030 - 0x0000)
struct WI_Cheats_C_GetPosition final
{
public:
	struct FVector2D                              ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_LocalToViewport_PixelPosition;            // 0x0010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_LocalToViewport_ViewportPosition;         // 0x0020(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WI_Cheats_C_GetPosition) == 0x000008, "Wrong alignment on WI_Cheats_C_GetPosition");
static_assert(sizeof(WI_Cheats_C_GetPosition) == 0x000030, "Wrong size on WI_Cheats_C_GetPosition");
static_assert(offsetof(WI_Cheats_C_GetPosition, ReturnValue) == 0x000000, "Member 'WI_Cheats_C_GetPosition::ReturnValue' has a wrong offset!");
static_assert(offsetof(WI_Cheats_C_GetPosition, CallFunc_LocalToViewport_PixelPosition) == 0x000010, "Member 'WI_Cheats_C_GetPosition::CallFunc_LocalToViewport_PixelPosition' has a wrong offset!");
static_assert(offsetof(WI_Cheats_C_GetPosition, CallFunc_LocalToViewport_ViewportPosition) == 0x000020, "Member 'WI_Cheats_C_GetPosition::CallFunc_LocalToViewport_ViewportPosition' has a wrong offset!");

// Function WI_Cheats.WI_Cheats_C.GetSize
// 0x0020 (0x0020 - 0x0000)
struct WI_Cheats_C_GetSize final
{
public:
	struct FVector2D                              ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetLocalSize_ReturnValue;                 // 0x0010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WI_Cheats_C_GetSize) == 0x000008, "Wrong alignment on WI_Cheats_C_GetSize");
static_assert(sizeof(WI_Cheats_C_GetSize) == 0x000020, "Wrong size on WI_Cheats_C_GetSize");
static_assert(offsetof(WI_Cheats_C_GetSize, ReturnValue) == 0x000000, "Member 'WI_Cheats_C_GetSize::ReturnValue' has a wrong offset!");
static_assert(offsetof(WI_Cheats_C_GetSize, CallFunc_GetLocalSize_ReturnValue) == 0x000010, "Member 'WI_Cheats_C_GetSize::CallFunc_GetLocalSize_ReturnValue' has a wrong offset!");

}

