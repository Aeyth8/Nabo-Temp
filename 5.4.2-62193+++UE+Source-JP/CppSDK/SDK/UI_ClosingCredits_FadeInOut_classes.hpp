#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UI_ClosingCredits_FadeInOut

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "S_VideoPlayer_structs.hpp"
#include "E_Skip_structs.hpp"
#include "Engine_structs.hpp"
#include "S_LogoFadeInOut_structs.hpp"
#include "S_Keys_structs.hpp"
#include "S_Music_structs.hpp"
#include "E_InputMode_structs.hpp"
#include "E_MediaType_structs.hpp"
#include "S_Video_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "S_Slides_structs.hpp"
#include "E_SectionLocation_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass UI_ClosingCredits_FadeInOut.UI_ClosingCredits_FadeInOut_C
// 0x0240 (0x0520 - 0x02E0)
class UUI_ClosingCredits_FadeInOut_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02E0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       FadeInOutRoles;                                    // 0x02E8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       LogoFadeInOut;                                     // 0x02F0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       FadeInOutSlide;                                    // 0x02F8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       ShowHideSkip;                                      // 0x0300(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       FadeIn;                                            // 0x0308(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       FadeOut;                                           // 0x0310(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UImage*                                 Background;                                        // 0x0318(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 BlackBackground;                                   // 0x0320(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Logo;                                              // 0x0328(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCanvasPanel*                           SkipPanel;                                         // 0x0330(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UProgressBar*                           SkipProgressBar;                                   // 0x0338(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWidgetSwitcher*                        Switcher;                                          // 0x0340(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 VideoSlideBackground;                              // 0x0348(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	double                                        Credits_Time_Duration__seconds_;                   // 0x0350(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	double                                        Starting_Delay__seconds_;                          // 0x0358(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	double                                        Space_Between_Role_Title_and_Section;              // 0x0360(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	double                                        Timer;                                             // 0x0368(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Start_with_Fade_in_Effect;                         // 0x0370(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	uint8                                         Pad_371[0x7];                                      // 0x0371(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Starting_Fade_In_Duration__seconds_;               // 0x0378(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	double                                        General_Fade_In_Speed;                             // 0x0380(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	double                                        General_Fade_Out_Speed;                            // 0x0388(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	struct FS_LogoFadeInOut                       Show_Logo_First;                                   // 0x0390(0x0038)(Edit, BlueprintVisible, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	bool                                          Fade_Out_After_Finished;                           // 0x03C8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	uint8                                         Pad_3C9[0x7];                                      // 0x03C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Closing_Fade_Out_Duration__seconds_;               // 0x03D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	double                                        Closing_Fade_Out_Delay_After_Finished__seconds_;   // 0x03D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	E_InputMode                                   Input_Mode;                                        // 0x03E0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	bool                                          IsSkippable;                                       // 0x03E1(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	E_Skip                                        Skip_Action;                                       // 0x03E2(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	uint8                                         Pad_3E3[0x5];                                      // 0x03E3(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               VideoMaterialReference;                            // 0x03E8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FS_VideoPlayer                         MediaPlayer;                                       // 0x03F0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	double                                        Fade_Speed_Multiplier;                             // 0x0400(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        Sound_2D_Reference;                                // 0x0408(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	double                                        Space_Between_Sections;                            // 0x0410(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	double                                        Space_Between_Section_and_Names;                   // 0x0418(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	double                                        SkipTime;                                          // 0x0420(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Skipping;                                          // 0x0428(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_429[0x7];                                      // 0x0429(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Skip_Press_and_Hold_Duration__seconds_;            // 0x0430(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	double                                        Fast_Forward_Speed_Multiplier;                     // 0x0438(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	struct FS_Keys                                Keys_to_Skip__or_fast_forward_;                    // 0x0440(0x0030)(Edit, BlueprintVisible, ExposeOnSpawn, HasGetValueTypeHash)
	struct FS_Music                               Music;                                             // 0x0470(0x0018)(Edit, BlueprintVisible, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	E_MediaType                                   Presentation_Type;                                 // 0x0488(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	uint8                                         Pad_489[0x7];                                      // 0x0489(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_Video                               Video;                                             // 0x0490(0x0010)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	struct FLinearColor                           Solid_Background_Color_and_Opacity;                // 0x04A0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	struct FS_Slides                              Images_Slides;                                     // 0x04B0(0x0018)(Edit, BlueprintVisible, ExposeOnSpawn, HasGetValueTypeHash)
	int32                                         CurrentSlide;                                      // 0x04C8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4CC[0x4];                                      // 0x04CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           SlideTimerHandle;                                  // 0x04D0(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	double                                        Space_Between_Lines;                               // 0x04D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	bool                                          Freeze_in_the_Last_Item;                           // 0x04E0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	E_SectionLocation                             Section_Position;                                  // 0x04E1(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	EHorizontalAlignment                          Credits_Horizontal_Alignment;                      // 0x04E2(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	EVerticalAlignment                            Credits_Vertical_Alignment;                        // 0x04E3(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	struct FMargin                                Insert_Padding;                                    // 0x04E4(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn)
	uint8                                         Pad_4F4[0x4];                                      // 0x04F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UDataTable*                             Credits_Sequence_Data_Table;                       // 0x04F8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Open_Level_when_Finished;                          // 0x0500(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	uint8                                         Pad_501[0x3];                                      // 0x0501(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   Level_To_Open;                                     // 0x0504(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	E_InputMode                                   Input_Mode_After_Credits;                          // 0x050C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	bool                                          CanSkip;                                           // 0x050D(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EHorizontalAlignment                          Role_Title_Alignment;                              // 0x050E(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	EHorizontalAlignment                          Section_Alignment;                                 // 0x050F(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	EHorizontalAlignment                          Section_Without_Title_Alignment;                   // 0x0510(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	EHorizontalAlignment                          Names_Alignment;                                   // 0x0511(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	uint8                                         Pad_512[0x6];                                      // 0x0512(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Last_Item_Duration__seconds_;                      // 0x0518(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)

public:
	void Add_Vertical_Spacer(class UVerticalBox* VerticalBox, double Size);
	void AnyKeyPressed(const struct FKey& Key);
	void CollectDataTableSequence();
	void Construct();
	void CreditsEnd();
	void Destruct();
	void ExecuteUbergraph_UI_ClosingCredits_FadeInOut(int32 EntryPoint);
	float FillProgressBar();
	void HorizontalAlignAsVerticalBoxSlot(class UPanelWidget* Vertical_Box, EHorizontalAlignment InHorizontalAlignment);
	void KeyReleased();
	void MediaAndBackground();
	struct FEventReply OnKeyDown(const struct FGeometry& MyGeometry, const struct FKeyEvent& InKeyEvent);
	struct FEventReply OnKeyUp(const struct FGeometry& MyGeometry, const struct FKeyEvent& InKeyEvent);
	void PreConstruct(bool IsDesignTime);
	void SetAlignment(class UUI_Role_C* Role);
	void SetGameInputMode(E_InputMode Input_Mode_0);
	void Skip_Fade_in_out();
	void Skip_Settings();
	void Slideshow();
	void Start_Fade_in_out();
	void UpdateSlide();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"UI_ClosingCredits_FadeInOut_C">();
	}
	static class UUI_ClosingCredits_FadeInOut_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UUI_ClosingCredits_FadeInOut_C>();
	}
};
static_assert(alignof(UUI_ClosingCredits_FadeInOut_C) == 0x000008, "Wrong alignment on UUI_ClosingCredits_FadeInOut_C");
static_assert(sizeof(UUI_ClosingCredits_FadeInOut_C) == 0x000520, "Wrong size on UUI_ClosingCredits_FadeInOut_C");
static_assert(offsetof(UUI_ClosingCredits_FadeInOut_C, UberGraphFrame) == 0x0002E0, "Member 'UUI_ClosingCredits_FadeInOut_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UUI_ClosingCredits_FadeInOut_C, FadeInOutRoles) == 0x0002E8, "Member 'UUI_ClosingCredits_FadeInOut_C::FadeInOutRoles' has a wrong offset!");
static_assert(offsetof(UUI_ClosingCredits_FadeInOut_C, LogoFadeInOut) == 0x0002F0, "Member 'UUI_ClosingCredits_FadeInOut_C::LogoFadeInOut' has a wrong offset!");
static_assert(offsetof(UUI_ClosingCredits_FadeInOut_C, FadeInOutSlide) == 0x0002F8, "Member 'UUI_ClosingCredits_FadeInOut_C::FadeInOutSlide' has a wrong offset!");
static_assert(offsetof(UUI_ClosingCredits_FadeInOut_C, ShowHideSkip) == 0x000300, "Member 'UUI_ClosingCredits_FadeInOut_C::ShowHideSkip' has a wrong offset!");
static_assert(offsetof(UUI_ClosingCredits_FadeInOut_C, FadeIn) == 0x000308, "Member 'UUI_ClosingCredits_FadeInOut_C::FadeIn' has a wrong offset!");
static_assert(offsetof(UUI_ClosingCredits_FadeInOut_C, FadeOut) == 0x000310, "Member 'UUI_ClosingCredits_FadeInOut_C::FadeOut' has a wrong offset!");
static_assert(offsetof(UUI_ClosingCredits_FadeInOut_C, Background) == 0x000318, "Member 'UUI_ClosingCredits_FadeInOut_C::Background' has a wrong offset!");
static_assert(offsetof(UUI_ClosingCredits_FadeInOut_C, BlackBackground) == 0x000320, "Member 'UUI_ClosingCredits_FadeInOut_C::BlackBackground' has a wrong offset!");
static_assert(offsetof(UUI_ClosingCredits_FadeInOut_C, Logo) == 0x000328, "Member 'UUI_ClosingCredits_FadeInOut_C::Logo' has a wrong offset!");
static_assert(offsetof(UUI_ClosingCredits_FadeInOut_C, SkipPanel) == 0x000330, "Member 'UUI_ClosingCredits_FadeInOut_C::SkipPanel' has a wrong offset!");
static_assert(offsetof(UUI_ClosingCredits_FadeInOut_C, SkipProgressBar) == 0x000338, "Member 'UUI_ClosingCredits_FadeInOut_C::SkipProgressBar' has a wrong offset!");
static_assert(offsetof(UUI_ClosingCredits_FadeInOut_C, Switcher) == 0x000340, "Member 'UUI_ClosingCredits_FadeInOut_C::Switcher' has a wrong offset!");
static_assert(offsetof(UUI_ClosingCredits_FadeInOut_C, VideoSlideBackground) == 0x000348, "Member 'UUI_ClosingCredits_FadeInOut_C::VideoSlideBackground' has a wrong offset!");
static_assert(offsetof(UUI_ClosingCredits_FadeInOut_C, Credits_Time_Duration__seconds_) == 0x000350, "Member 'UUI_ClosingCredits_FadeInOut_C::Credits_Time_Duration__seconds_' has a wrong offset!");
static_assert(offsetof(UUI_ClosingCredits_FadeInOut_C, Starting_Delay__seconds_) == 0x000358, "Member 'UUI_ClosingCredits_FadeInOut_C::Starting_Delay__seconds_' has a wrong offset!");
static_assert(offsetof(UUI_ClosingCredits_FadeInOut_C, Space_Between_Role_Title_and_Section) == 0x000360, "Member 'UUI_ClosingCredits_FadeInOut_C::Space_Between_Role_Title_and_Section' has a wrong offset!");
static_assert(offsetof(UUI_ClosingCredits_FadeInOut_C, Timer) == 0x000368, "Member 'UUI_ClosingCredits_FadeInOut_C::Timer' has a wrong offset!");
static_assert(offsetof(UUI_ClosingCredits_FadeInOut_C, Start_with_Fade_in_Effect) == 0x000370, "Member 'UUI_ClosingCredits_FadeInOut_C::Start_with_Fade_in_Effect' has a wrong offset!");
static_assert(offsetof(UUI_ClosingCredits_FadeInOut_C, Starting_Fade_In_Duration__seconds_) == 0x000378, "Member 'UUI_ClosingCredits_FadeInOut_C::Starting_Fade_In_Duration__seconds_' has a wrong offset!");
static_assert(offsetof(UUI_ClosingCredits_FadeInOut_C, General_Fade_In_Speed) == 0x000380, "Member 'UUI_ClosingCredits_FadeInOut_C::General_Fade_In_Speed' has a wrong offset!");
static_assert(offsetof(UUI_ClosingCredits_FadeInOut_C, General_Fade_Out_Speed) == 0x000388, "Member 'UUI_ClosingCredits_FadeInOut_C::General_Fade_Out_Speed' has a wrong offset!");
static_assert(offsetof(UUI_ClosingCredits_FadeInOut_C, Show_Logo_First) == 0x000390, "Member 'UUI_ClosingCredits_FadeInOut_C::Show_Logo_First' has a wrong offset!");
static_assert(offsetof(UUI_ClosingCredits_FadeInOut_C, Fade_Out_After_Finished) == 0x0003C8, "Member 'UUI_ClosingCredits_FadeInOut_C::Fade_Out_After_Finished' has a wrong offset!");
static_assert(offsetof(UUI_ClosingCredits_FadeInOut_C, Closing_Fade_Out_Duration__seconds_) == 0x0003D0, "Member 'UUI_ClosingCredits_FadeInOut_C::Closing_Fade_Out_Duration__seconds_' has a wrong offset!");
static_assert(offsetof(UUI_ClosingCredits_FadeInOut_C, Closing_Fade_Out_Delay_After_Finished__seconds_) == 0x0003D8, "Member 'UUI_ClosingCredits_FadeInOut_C::Closing_Fade_Out_Delay_After_Finished__seconds_' has a wrong offset!");
static_assert(offsetof(UUI_ClosingCredits_FadeInOut_C, Input_Mode) == 0x0003E0, "Member 'UUI_ClosingCredits_FadeInOut_C::Input_Mode' has a wrong offset!");
static_assert(offsetof(UUI_ClosingCredits_FadeInOut_C, IsSkippable) == 0x0003E1, "Member 'UUI_ClosingCredits_FadeInOut_C::IsSkippable' has a wrong offset!");
static_assert(offsetof(UUI_ClosingCredits_FadeInOut_C, Skip_Action) == 0x0003E2, "Member 'UUI_ClosingCredits_FadeInOut_C::Skip_Action' has a wrong offset!");
static_assert(offsetof(UUI_ClosingCredits_FadeInOut_C, VideoMaterialReference) == 0x0003E8, "Member 'UUI_ClosingCredits_FadeInOut_C::VideoMaterialReference' has a wrong offset!");
static_assert(offsetof(UUI_ClosingCredits_FadeInOut_C, MediaPlayer) == 0x0003F0, "Member 'UUI_ClosingCredits_FadeInOut_C::MediaPlayer' has a wrong offset!");
static_assert(offsetof(UUI_ClosingCredits_FadeInOut_C, Fade_Speed_Multiplier) == 0x000400, "Member 'UUI_ClosingCredits_FadeInOut_C::Fade_Speed_Multiplier' has a wrong offset!");
static_assert(offsetof(UUI_ClosingCredits_FadeInOut_C, Sound_2D_Reference) == 0x000408, "Member 'UUI_ClosingCredits_FadeInOut_C::Sound_2D_Reference' has a wrong offset!");
static_assert(offsetof(UUI_ClosingCredits_FadeInOut_C, Space_Between_Sections) == 0x000410, "Member 'UUI_ClosingCredits_FadeInOut_C::Space_Between_Sections' has a wrong offset!");
static_assert(offsetof(UUI_ClosingCredits_FadeInOut_C, Space_Between_Section_and_Names) == 0x000418, "Member 'UUI_ClosingCredits_FadeInOut_C::Space_Between_Section_and_Names' has a wrong offset!");
static_assert(offsetof(UUI_ClosingCredits_FadeInOut_C, SkipTime) == 0x000420, "Member 'UUI_ClosingCredits_FadeInOut_C::SkipTime' has a wrong offset!");
static_assert(offsetof(UUI_ClosingCredits_FadeInOut_C, Skipping) == 0x000428, "Member 'UUI_ClosingCredits_FadeInOut_C::Skipping' has a wrong offset!");
static_assert(offsetof(UUI_ClosingCredits_FadeInOut_C, Skip_Press_and_Hold_Duration__seconds_) == 0x000430, "Member 'UUI_ClosingCredits_FadeInOut_C::Skip_Press_and_Hold_Duration__seconds_' has a wrong offset!");
static_assert(offsetof(UUI_ClosingCredits_FadeInOut_C, Fast_Forward_Speed_Multiplier) == 0x000438, "Member 'UUI_ClosingCredits_FadeInOut_C::Fast_Forward_Speed_Multiplier' has a wrong offset!");
static_assert(offsetof(UUI_ClosingCredits_FadeInOut_C, Keys_to_Skip__or_fast_forward_) == 0x000440, "Member 'UUI_ClosingCredits_FadeInOut_C::Keys_to_Skip__or_fast_forward_' has a wrong offset!");
static_assert(offsetof(UUI_ClosingCredits_FadeInOut_C, Music) == 0x000470, "Member 'UUI_ClosingCredits_FadeInOut_C::Music' has a wrong offset!");
static_assert(offsetof(UUI_ClosingCredits_FadeInOut_C, Presentation_Type) == 0x000488, "Member 'UUI_ClosingCredits_FadeInOut_C::Presentation_Type' has a wrong offset!");
static_assert(offsetof(UUI_ClosingCredits_FadeInOut_C, Video) == 0x000490, "Member 'UUI_ClosingCredits_FadeInOut_C::Video' has a wrong offset!");
static_assert(offsetof(UUI_ClosingCredits_FadeInOut_C, Solid_Background_Color_and_Opacity) == 0x0004A0, "Member 'UUI_ClosingCredits_FadeInOut_C::Solid_Background_Color_and_Opacity' has a wrong offset!");
static_assert(offsetof(UUI_ClosingCredits_FadeInOut_C, Images_Slides) == 0x0004B0, "Member 'UUI_ClosingCredits_FadeInOut_C::Images_Slides' has a wrong offset!");
static_assert(offsetof(UUI_ClosingCredits_FadeInOut_C, CurrentSlide) == 0x0004C8, "Member 'UUI_ClosingCredits_FadeInOut_C::CurrentSlide' has a wrong offset!");
static_assert(offsetof(UUI_ClosingCredits_FadeInOut_C, SlideTimerHandle) == 0x0004D0, "Member 'UUI_ClosingCredits_FadeInOut_C::SlideTimerHandle' has a wrong offset!");
static_assert(offsetof(UUI_ClosingCredits_FadeInOut_C, Space_Between_Lines) == 0x0004D8, "Member 'UUI_ClosingCredits_FadeInOut_C::Space_Between_Lines' has a wrong offset!");
static_assert(offsetof(UUI_ClosingCredits_FadeInOut_C, Freeze_in_the_Last_Item) == 0x0004E0, "Member 'UUI_ClosingCredits_FadeInOut_C::Freeze_in_the_Last_Item' has a wrong offset!");
static_assert(offsetof(UUI_ClosingCredits_FadeInOut_C, Section_Position) == 0x0004E1, "Member 'UUI_ClosingCredits_FadeInOut_C::Section_Position' has a wrong offset!");
static_assert(offsetof(UUI_ClosingCredits_FadeInOut_C, Credits_Horizontal_Alignment) == 0x0004E2, "Member 'UUI_ClosingCredits_FadeInOut_C::Credits_Horizontal_Alignment' has a wrong offset!");
static_assert(offsetof(UUI_ClosingCredits_FadeInOut_C, Credits_Vertical_Alignment) == 0x0004E3, "Member 'UUI_ClosingCredits_FadeInOut_C::Credits_Vertical_Alignment' has a wrong offset!");
static_assert(offsetof(UUI_ClosingCredits_FadeInOut_C, Insert_Padding) == 0x0004E4, "Member 'UUI_ClosingCredits_FadeInOut_C::Insert_Padding' has a wrong offset!");
static_assert(offsetof(UUI_ClosingCredits_FadeInOut_C, Credits_Sequence_Data_Table) == 0x0004F8, "Member 'UUI_ClosingCredits_FadeInOut_C::Credits_Sequence_Data_Table' has a wrong offset!");
static_assert(offsetof(UUI_ClosingCredits_FadeInOut_C, Open_Level_when_Finished) == 0x000500, "Member 'UUI_ClosingCredits_FadeInOut_C::Open_Level_when_Finished' has a wrong offset!");
static_assert(offsetof(UUI_ClosingCredits_FadeInOut_C, Level_To_Open) == 0x000504, "Member 'UUI_ClosingCredits_FadeInOut_C::Level_To_Open' has a wrong offset!");
static_assert(offsetof(UUI_ClosingCredits_FadeInOut_C, Input_Mode_After_Credits) == 0x00050C, "Member 'UUI_ClosingCredits_FadeInOut_C::Input_Mode_After_Credits' has a wrong offset!");
static_assert(offsetof(UUI_ClosingCredits_FadeInOut_C, CanSkip) == 0x00050D, "Member 'UUI_ClosingCredits_FadeInOut_C::CanSkip' has a wrong offset!");
static_assert(offsetof(UUI_ClosingCredits_FadeInOut_C, Role_Title_Alignment) == 0x00050E, "Member 'UUI_ClosingCredits_FadeInOut_C::Role_Title_Alignment' has a wrong offset!");
static_assert(offsetof(UUI_ClosingCredits_FadeInOut_C, Section_Alignment) == 0x00050F, "Member 'UUI_ClosingCredits_FadeInOut_C::Section_Alignment' has a wrong offset!");
static_assert(offsetof(UUI_ClosingCredits_FadeInOut_C, Section_Without_Title_Alignment) == 0x000510, "Member 'UUI_ClosingCredits_FadeInOut_C::Section_Without_Title_Alignment' has a wrong offset!");
static_assert(offsetof(UUI_ClosingCredits_FadeInOut_C, Names_Alignment) == 0x000511, "Member 'UUI_ClosingCredits_FadeInOut_C::Names_Alignment' has a wrong offset!");
static_assert(offsetof(UUI_ClosingCredits_FadeInOut_C, Last_Item_Duration__seconds_) == 0x000518, "Member 'UUI_ClosingCredits_FadeInOut_C::Last_Item_Duration__seconds_' has a wrong offset!");

}

