#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Leloi

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "GameplayAbilities_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "E_LeloiStates_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "JP_structs.hpp"
#include "Engine_structs.hpp"
#include "ELeloiStates_structs.hpp"
#include "ELeloiIdleStates_structs.hpp"


namespace SDK::Params
{

// Function BP_Leloi.BP_Leloi_C.AnimInstanceDogActor
// 0x0080 (0x0080 - 0x0000)
struct BP_Leloi_C_AnimInstanceDogActor final
{
public:
	class ABP_MovementCharacter_C*                Target;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Condition;                                         // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue;              // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue_1;            // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class II_CharacterAnimation_C> K2Node_DynamicCast_AsI_Character_Animation;        // 0x0020(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class II_CharacterAnimation_C> K2Node_DynamicCast_AsI_Character_Animation_1;      // 0x0038(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class II_CharacterAnimation_C> K2Node_DynamicCast_AsI_Character_Animation_2;      // 0x0050(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_62[0x6];                                       // 0x0062(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class II_CharacterAnimation_C> K2Node_DynamicCast_AsI_Character_Animation_3;      // 0x0068(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0079(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Leloi_C_AnimInstanceDogActor) == 0x000008, "Wrong alignment on BP_Leloi_C_AnimInstanceDogActor");
static_assert(sizeof(BP_Leloi_C_AnimInstanceDogActor) == 0x000080, "Wrong size on BP_Leloi_C_AnimInstanceDogActor");
static_assert(offsetof(BP_Leloi_C_AnimInstanceDogActor, Target) == 0x000000, "Member 'BP_Leloi_C_AnimInstanceDogActor::Target' has a wrong offset!");
static_assert(offsetof(BP_Leloi_C_AnimInstanceDogActor, Condition) == 0x000008, "Member 'BP_Leloi_C_AnimInstanceDogActor::Condition' has a wrong offset!");
static_assert(offsetof(BP_Leloi_C_AnimInstanceDogActor, CallFunc_GetAnimInstance_ReturnValue) == 0x000010, "Member 'BP_Leloi_C_AnimInstanceDogActor::CallFunc_GetAnimInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Leloi_C_AnimInstanceDogActor, CallFunc_GetAnimInstance_ReturnValue_1) == 0x000018, "Member 'BP_Leloi_C_AnimInstanceDogActor::CallFunc_GetAnimInstance_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Leloi_C_AnimInstanceDogActor, K2Node_DynamicCast_AsI_Character_Animation) == 0x000020, "Member 'BP_Leloi_C_AnimInstanceDogActor::K2Node_DynamicCast_AsI_Character_Animation' has a wrong offset!");
static_assert(offsetof(BP_Leloi_C_AnimInstanceDogActor, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'BP_Leloi_C_AnimInstanceDogActor::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_Leloi_C_AnimInstanceDogActor, K2Node_DynamicCast_AsI_Character_Animation_1) == 0x000038, "Member 'BP_Leloi_C_AnimInstanceDogActor::K2Node_DynamicCast_AsI_Character_Animation_1' has a wrong offset!");
static_assert(offsetof(BP_Leloi_C_AnimInstanceDogActor, K2Node_DynamicCast_bSuccess_1) == 0x000048, "Member 'BP_Leloi_C_AnimInstanceDogActor::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_Leloi_C_AnimInstanceDogActor, K2Node_DynamicCast_AsI_Character_Animation_2) == 0x000050, "Member 'BP_Leloi_C_AnimInstanceDogActor::K2Node_DynamicCast_AsI_Character_Animation_2' has a wrong offset!");
static_assert(offsetof(BP_Leloi_C_AnimInstanceDogActor, K2Node_DynamicCast_bSuccess_2) == 0x000060, "Member 'BP_Leloi_C_AnimInstanceDogActor::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_Leloi_C_AnimInstanceDogActor, CallFunc_IsValid_ReturnValue) == 0x000061, "Member 'BP_Leloi_C_AnimInstanceDogActor::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Leloi_C_AnimInstanceDogActor, K2Node_DynamicCast_AsI_Character_Animation_3) == 0x000068, "Member 'BP_Leloi_C_AnimInstanceDogActor::K2Node_DynamicCast_AsI_Character_Animation_3' has a wrong offset!");
static_assert(offsetof(BP_Leloi_C_AnimInstanceDogActor, K2Node_DynamicCast_bSuccess_3) == 0x000078, "Member 'BP_Leloi_C_AnimInstanceDogActor::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(BP_Leloi_C_AnimInstanceDogActor, CallFunc_IsValid_ReturnValue_1) == 0x000079, "Member 'BP_Leloi_C_AnimInstanceDogActor::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function BP_Leloi.BP_Leloi_C.BndEvt__BP_GuardDog_Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature
// 0x0118 (0x0118 - 0x0000)
struct BP_Leloi_C_BndEvt__BP_GuardDog_Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bFromSweep;                                        // 0x001C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             SweepResult;                                       // 0x0020(0x00F8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_Leloi_C_BndEvt__BP_GuardDog_Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on BP_Leloi_C_BndEvt__BP_GuardDog_Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(sizeof(BP_Leloi_C_BndEvt__BP_GuardDog_Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature) == 0x000118, "Wrong size on BP_Leloi_C_BndEvt__BP_GuardDog_Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(offsetof(BP_Leloi_C_BndEvt__BP_GuardDog_Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OverlappedComponent) == 0x000000, "Member 'BP_Leloi_C_BndEvt__BP_GuardDog_Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BP_Leloi_C_BndEvt__BP_GuardDog_Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'BP_Leloi_C_BndEvt__BP_GuardDog_Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(BP_Leloi_C_BndEvt__BP_GuardDog_Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'BP_Leloi_C_BndEvt__BP_GuardDog_Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(BP_Leloi_C_BndEvt__BP_GuardDog_Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000018, "Member 'BP_Leloi_C_BndEvt__BP_GuardDog_Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(BP_Leloi_C_BndEvt__BP_GuardDog_Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, bFromSweep) == 0x00001C, "Member 'BP_Leloi_C_BndEvt__BP_GuardDog_Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::bFromSweep' has a wrong offset!");
static_assert(offsetof(BP_Leloi_C_BndEvt__BP_GuardDog_Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, SweepResult) == 0x000020, "Member 'BP_Leloi_C_BndEvt__BP_GuardDog_Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::SweepResult' has a wrong offset!");

// Function BP_Leloi.BP_Leloi_C.BndEvt__BP_GuardDog_Box_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct BP_Leloi_C_BndEvt__BP_GuardDog_Box_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Leloi_C_BndEvt__BP_GuardDog_Box_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on BP_Leloi_C_BndEvt__BP_GuardDog_Box_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature");
static_assert(sizeof(BP_Leloi_C_BndEvt__BP_GuardDog_Box_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature) == 0x000020, "Wrong size on BP_Leloi_C_BndEvt__BP_GuardDog_Box_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature");
static_assert(offsetof(BP_Leloi_C_BndEvt__BP_GuardDog_Box_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature, OverlappedComponent) == 0x000000, "Member 'BP_Leloi_C_BndEvt__BP_GuardDog_Box_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BP_Leloi_C_BndEvt__BP_GuardDog_Box_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'BP_Leloi_C_BndEvt__BP_GuardDog_Box_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(BP_Leloi_C_BndEvt__BP_GuardDog_Box_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'BP_Leloi_C_BndEvt__BP_GuardDog_Box_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(BP_Leloi_C_BndEvt__BP_GuardDog_Box_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000018, "Member 'BP_Leloi_C_BndEvt__BP_GuardDog_Box_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");

// Function BP_Leloi.BP_Leloi_C.BndEvt__BP_Leloi_CanInteractBox_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature
// 0x0118 (0x0118 - 0x0000)
struct BP_Leloi_C_BndEvt__BP_Leloi_CanInteractBox_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bFromSweep;                                        // 0x001C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             SweepResult;                                       // 0x0020(0x00F8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_Leloi_C_BndEvt__BP_Leloi_CanInteractBox_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on BP_Leloi_C_BndEvt__BP_Leloi_CanInteractBox_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(sizeof(BP_Leloi_C_BndEvt__BP_Leloi_CanInteractBox_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature) == 0x000118, "Wrong size on BP_Leloi_C_BndEvt__BP_Leloi_CanInteractBox_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(offsetof(BP_Leloi_C_BndEvt__BP_Leloi_CanInteractBox_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature, OverlappedComponent) == 0x000000, "Member 'BP_Leloi_C_BndEvt__BP_Leloi_CanInteractBox_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BP_Leloi_C_BndEvt__BP_Leloi_CanInteractBox_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'BP_Leloi_C_BndEvt__BP_Leloi_CanInteractBox_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(BP_Leloi_C_BndEvt__BP_Leloi_CanInteractBox_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'BP_Leloi_C_BndEvt__BP_Leloi_CanInteractBox_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(BP_Leloi_C_BndEvt__BP_Leloi_CanInteractBox_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000018, "Member 'BP_Leloi_C_BndEvt__BP_Leloi_CanInteractBox_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(BP_Leloi_C_BndEvt__BP_Leloi_CanInteractBox_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature, bFromSweep) == 0x00001C, "Member 'BP_Leloi_C_BndEvt__BP_Leloi_CanInteractBox_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature::bFromSweep' has a wrong offset!");
static_assert(offsetof(BP_Leloi_C_BndEvt__BP_Leloi_CanInteractBox_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature, SweepResult) == 0x000020, "Member 'BP_Leloi_C_BndEvt__BP_Leloi_CanInteractBox_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature::SweepResult' has a wrong offset!");

// Function BP_Leloi.BP_Leloi_C.BndEvt__BP_Leloi_CanInteractBox_K2Node_ComponentBoundEvent_3_ComponentEndOverlapSignature__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct BP_Leloi_C_BndEvt__BP_Leloi_CanInteractBox_K2Node_ComponentBoundEvent_3_ComponentEndOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Leloi_C_BndEvt__BP_Leloi_CanInteractBox_K2Node_ComponentBoundEvent_3_ComponentEndOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on BP_Leloi_C_BndEvt__BP_Leloi_CanInteractBox_K2Node_ComponentBoundEvent_3_ComponentEndOverlapSignature__DelegateSignature");
static_assert(sizeof(BP_Leloi_C_BndEvt__BP_Leloi_CanInteractBox_K2Node_ComponentBoundEvent_3_ComponentEndOverlapSignature__DelegateSignature) == 0x000020, "Wrong size on BP_Leloi_C_BndEvt__BP_Leloi_CanInteractBox_K2Node_ComponentBoundEvent_3_ComponentEndOverlapSignature__DelegateSignature");
static_assert(offsetof(BP_Leloi_C_BndEvt__BP_Leloi_CanInteractBox_K2Node_ComponentBoundEvent_3_ComponentEndOverlapSignature__DelegateSignature, OverlappedComponent) == 0x000000, "Member 'BP_Leloi_C_BndEvt__BP_Leloi_CanInteractBox_K2Node_ComponentBoundEvent_3_ComponentEndOverlapSignature__DelegateSignature::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BP_Leloi_C_BndEvt__BP_Leloi_CanInteractBox_K2Node_ComponentBoundEvent_3_ComponentEndOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'BP_Leloi_C_BndEvt__BP_Leloi_CanInteractBox_K2Node_ComponentBoundEvent_3_ComponentEndOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(BP_Leloi_C_BndEvt__BP_Leloi_CanInteractBox_K2Node_ComponentBoundEvent_3_ComponentEndOverlapSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'BP_Leloi_C_BndEvt__BP_Leloi_CanInteractBox_K2Node_ComponentBoundEvent_3_ComponentEndOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(BP_Leloi_C_BndEvt__BP_Leloi_CanInteractBox_K2Node_ComponentBoundEvent_3_ComponentEndOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000018, "Member 'BP_Leloi_C_BndEvt__BP_Leloi_CanInteractBox_K2Node_ComponentBoundEvent_3_ComponentEndOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");

// Function BP_Leloi.BP_Leloi_C.CancelInteraction
// 0x0008 (0x0008 - 0x0000)
struct BP_Leloi_C_CancelInteraction final
{
public:
	class UPrimitiveComponent*                    InteractionComponent;                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Leloi_C_CancelInteraction) == 0x000008, "Wrong alignment on BP_Leloi_C_CancelInteraction");
static_assert(sizeof(BP_Leloi_C_CancelInteraction) == 0x000008, "Wrong size on BP_Leloi_C_CancelInteraction");
static_assert(offsetof(BP_Leloi_C_CancelInteraction, InteractionComponent) == 0x000000, "Member 'BP_Leloi_C_CancelInteraction::InteractionComponent' has a wrong offset!");

// Function BP_Leloi.BP_Leloi_C.DealDamage
// 0x01E8 (0x01E8 - 0x0000)
struct BP_Leloi_C_DealDamage final
{
public:
	class AActor*                                 Target;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayEffectSpecHandle              DamageSpecHandle;                                  // 0x0008(0x0010)(Edit, BlueprintVisible)
	class UAbilitySystemComponent*                CallFunc_GetAbilitySystemComponent_ReturnValue;    // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FGameplayEffectSpecHandle              CallFunc_MakeOutgoingSpec_ReturnValue;             // 0x0020(0x0010)()
	struct FCombatParticipant                     K2Node_MakeStruct_CombatParticipant;               // 0x0030(0x0060)()
	struct FGameplayEffectSpecHandle              CallFunc_AssignTagSetByCallerMagnitude_ReturnValue; // 0x0090(0x0010)()
	struct FGameplayEffectContextHandle           CallFunc_GetEffectContext_ReturnValue;             // 0x00A0(0x0018)()
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x00B8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_MakeHitResult_ReturnValue;                // 0x00D0(0x00F8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class UAbilitySystemComponent*                CallFunc_GetAbilitySystemComponent_ReturnValue_1;  // 0x01C8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UAbilitySystemComponentIW*              K2Node_DynamicCast_AsAbility_System_Component_IW;  // 0x01D0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x01D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ApplyGameplayEffectSpecToTargetWithChange_Changed; // 0x01D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1DA[0x2];                                      // 0x01DA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FActiveGameplayEffectHandle            CallFunc_ApplyGameplayEffectSpecToTargetWithChange_ReturnValue; // 0x01DC(0x0008)(NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Leloi_C_DealDamage) == 0x000008, "Wrong alignment on BP_Leloi_C_DealDamage");
static_assert(sizeof(BP_Leloi_C_DealDamage) == 0x0001E8, "Wrong size on BP_Leloi_C_DealDamage");
static_assert(offsetof(BP_Leloi_C_DealDamage, Target) == 0x000000, "Member 'BP_Leloi_C_DealDamage::Target' has a wrong offset!");
static_assert(offsetof(BP_Leloi_C_DealDamage, DamageSpecHandle) == 0x000008, "Member 'BP_Leloi_C_DealDamage::DamageSpecHandle' has a wrong offset!");
static_assert(offsetof(BP_Leloi_C_DealDamage, CallFunc_GetAbilitySystemComponent_ReturnValue) == 0x000018, "Member 'BP_Leloi_C_DealDamage::CallFunc_GetAbilitySystemComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Leloi_C_DealDamage, CallFunc_MakeOutgoingSpec_ReturnValue) == 0x000020, "Member 'BP_Leloi_C_DealDamage::CallFunc_MakeOutgoingSpec_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Leloi_C_DealDamage, K2Node_MakeStruct_CombatParticipant) == 0x000030, "Member 'BP_Leloi_C_DealDamage::K2Node_MakeStruct_CombatParticipant' has a wrong offset!");
static_assert(offsetof(BP_Leloi_C_DealDamage, CallFunc_AssignTagSetByCallerMagnitude_ReturnValue) == 0x000090, "Member 'BP_Leloi_C_DealDamage::CallFunc_AssignTagSetByCallerMagnitude_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Leloi_C_DealDamage, CallFunc_GetEffectContext_ReturnValue) == 0x0000A0, "Member 'BP_Leloi_C_DealDamage::CallFunc_GetEffectContext_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Leloi_C_DealDamage, CallFunc_K2_GetActorLocation_ReturnValue) == 0x0000B8, "Member 'BP_Leloi_C_DealDamage::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Leloi_C_DealDamage, CallFunc_MakeHitResult_ReturnValue) == 0x0000D0, "Member 'BP_Leloi_C_DealDamage::CallFunc_MakeHitResult_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Leloi_C_DealDamage, CallFunc_GetAbilitySystemComponent_ReturnValue_1) == 0x0001C8, "Member 'BP_Leloi_C_DealDamage::CallFunc_GetAbilitySystemComponent_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Leloi_C_DealDamage, K2Node_DynamicCast_AsAbility_System_Component_IW) == 0x0001D0, "Member 'BP_Leloi_C_DealDamage::K2Node_DynamicCast_AsAbility_System_Component_IW' has a wrong offset!");
static_assert(offsetof(BP_Leloi_C_DealDamage, K2Node_DynamicCast_bSuccess) == 0x0001D8, "Member 'BP_Leloi_C_DealDamage::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_Leloi_C_DealDamage, CallFunc_ApplyGameplayEffectSpecToTargetWithChange_Changed) == 0x0001D9, "Member 'BP_Leloi_C_DealDamage::CallFunc_ApplyGameplayEffectSpecToTargetWithChange_Changed' has a wrong offset!");
static_assert(offsetof(BP_Leloi_C_DealDamage, CallFunc_ApplyGameplayEffectSpecToTargetWithChange_ReturnValue) == 0x0001DC, "Member 'BP_Leloi_C_DealDamage::CallFunc_ApplyGameplayEffectSpecToTargetWithChange_ReturnValue' has a wrong offset!");

// Function BP_Leloi.BP_Leloi_C.EnableGlowingEyes
// 0x0001 (0x0001 - 0x0000)
struct BP_Leloi_C_EnableGlowingEyes final
{
public:
	bool                                          Enable;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Leloi_C_EnableGlowingEyes) == 0x000001, "Wrong alignment on BP_Leloi_C_EnableGlowingEyes");
static_assert(sizeof(BP_Leloi_C_EnableGlowingEyes) == 0x000001, "Wrong size on BP_Leloi_C_EnableGlowingEyes");
static_assert(offsetof(BP_Leloi_C_EnableGlowingEyes, Enable) == 0x000000, "Member 'BP_Leloi_C_EnableGlowingEyes::Enable' has a wrong offset!");

// Function BP_Leloi.BP_Leloi_C.ExecuteUbergraph_BP_Leloi
// 0x0B30 (0x0B30 - 0x0000)
struct BP_Leloi_C_ExecuteUbergraph_BP_Leloi final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0008(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_16;                  // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_15;                  // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate;              // 0x0030(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable;                                // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_1;            // 0x0048(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_14;                  // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_13;                  // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_2;            // 0x0068(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_12;                  // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_3;            // 0x0080(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_11;                  // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_4;            // 0x0098(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_10;                  // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_5;            // 0x00B0(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_1;                              // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_6;            // 0x00C8(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_9;                   // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_8;                   // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_7;            // 0x00E8(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_7;                   // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_8;            // 0x0100(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_6;                   // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_9;            // 0x0118(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_5;                   // 0x0128(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_10;           // 0x0130(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_2;                              // 0x0140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(bool IsEnabled)>               K2Node_CreateDelegate_OutputDelegate_11;           // 0x0148(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           Temp_struct_Variable;                              // 0x0158(0x0008)(ConstParm, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_12;           // 0x0160(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_4;                   // 0x0170(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_3;                   // 0x0178(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_13;           // 0x0180(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_2;                   // 0x0190(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_14;           // 0x0198(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_1;                   // 0x01A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_15;           // 0x01B0(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName;                     // 0x01C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_16;           // 0x01C8(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_3;                              // 0x01D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AController*                            CallFunc_GetControllerReference_OGPlayerController; // 0x01E0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_17;           // 0x01E8(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable;                       // 0x01F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable;                 // 0x01F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x01FA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1FB[0x1];                                      // 0x01FB(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_18;           // 0x01FC(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_20C[0x4];                                      // 0x020C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    K2Node_Event_InteractionComponent_5;               // 0x0210(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_Event_InteractionComponent_4;               // 0x0218(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_Event_InteractingActor_6;                   // 0x0220(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_Event_InteractionComponent_3;               // 0x0228(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_Event_InteractionComponent_2;               // 0x0230(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_Event_InteractingActor_5;                   // 0x0238(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_Event_InteractionComponent_1;               // 0x0240(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_Event_InteractingActor_4;                   // 0x0248(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_Event_InteractingActor_3;                   // 0x0250(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_Event_InteractingActor_2;                   // 0x0258(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_Event_InteractingActor_1;                   // 0x0260(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_Event_Focusing_Actor;                       // 0x0268(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_Interactable;                         // 0x0270(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_Sitting;                              // 0x0271(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_InView;                               // 0x0272(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ELeloiStates                                  K2Node_Event_State;                                // 0x0273(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ELeloiIdleStates                              K2Node_Event_IdleState;                            // 0x0274(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_275[0x3];                                      // 0x0275(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_Event_Barking;                              // 0x0278(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_Event_Breathing;                            // 0x0280(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_MovementCharacter_C*                K2Node_Event_PlayerRef;                            // 0x0288(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	E_LeloiStates                                 K2Node_CustomEvent_Input;                          // 0x0290(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetMovementSpeed_Void;                    // 0x0291(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_292[0x6];                                      // 0x0292(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent_3;  // 0x0298(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor_3;           // 0x02A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp_3;            // 0x02A8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex_3;       // 0x02B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bFromSweep_1;           // 0x02B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2B5[0x3];                                      // 0x02B5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_ComponentBoundEvent_SweepResult_1;          // 0x02B8(0x00F8)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent_2;  // 0x03B0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor_2;           // 0x03B8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp_2;            // 0x03C0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex_2;       // 0x03C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3CC[0x4];                                      // 0x03CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_ResidentCharacter_C*                K2Node_DynamicCast_AsBP_Resident_Character;        // 0x03D0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x03D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D9[0x7];                                      // 0x03D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_ResidentCharacter_C*                K2Node_DynamicCast_AsBP_Resident_Character_1;      // 0x03E0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x03E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable_1;                     // 0x03E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3EA[0x2];                                      // 0x03EA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_CustomEvent_NotifyName_19;                  // 0x03EC(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3F4[0x4];                                      // 0x03F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                K2Node_Event_Location;                             // 0x03F8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0410(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_411[0x7];                                      // 0x0411(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_BreakVector_X;                            // 0x0418(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0420(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0428(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x0430(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_19;           // 0x0448(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0458(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_2;        // 0x0460(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0478(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_SuggestProjectileVelocity_CustomArc_OutLaunchVelocity; // 0x0490(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SuggestProjectileVelocity_CustomArc_ReturnValue; // 0x04A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A9[0x7];                                      // 0x04A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetBBTargetActor_Actor;                   // 0x04B0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetBBTargetActor_Actor_1;                 // 0x04B8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class II_Character_C>        K2Node_DynamicCast_AsI_Character;                  // 0x04C0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x04D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4D1[0x7];                                      // 0x04D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetGuardDogTargetOffset_TargetOffset;     // 0x04D8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue_1;          // 0x04F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4F1[0x7];                                      // 0x04F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_SuggestProjectileVelocity_MovingTarget_OutLaunchVelocity; // 0x04F8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SuggestProjectileVelocity_MovingTarget_ReturnValue; // 0x0510(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_511[0x7];                                      // 0x0511(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_ClampVectorSize_ReturnValue;              // 0x0518(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_VSize_ReturnValue;                        // 0x0530(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_3;        // 0x0538(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_LeloiStates                                 K2Node_Event_BehaviourState;                       // 0x0550(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_551[0x7];                                      // 0x0551(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_CustomEvent_VectorLength;                   // 0x0558(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGameUserSettings*                      CallFunc_GetGameUserSettings_ReturnValue;          // 0x0560(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_IsEnabled;                      // 0x0568(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_569[0x7];                                      // 0x0569(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ULyraSettingsLocal*                     K2Node_DynamicCast_AsLyra_Settings_Local;          // 0x0570(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0578(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_579[0x7];                                      // 0x0579(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_4;        // 0x0580(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UNiagaraComponent*                      CallFunc_SpawnSystemAtLocation_ReturnValue;        // 0x0598(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable_1;               // 0x05A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable_2;               // 0x05A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5A2[0xE];                                      // 0x05A2(0x000E)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_K2_GetComponentToWorld_ReturnValue;       // 0x05B0(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0610(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x0628(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x0640(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_TeleportTo_ReturnValue;                // 0x0658(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_659[0x3];                                      // 0x0659(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_CustomEvent_NotifyName_17;                  // 0x065C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_20;           // 0x0664(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_674[0x4];                                      // 0x0674(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                K2Node_CustomEvent_DestLocation_1;                 // 0x0678(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_21;           // 0x0690(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_TeleportTo_ReturnValue_1;              // 0x06A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6A1[0x7];                                      // 0x06A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                K2Node_CustomEvent_DestLocation;                   // 0x06A8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_TeleportTo_ReturnValue_2;              // 0x06C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable_2;                     // 0x06C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6C2[0x6];                                      // 0x06C2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UPlayMontageCallbackProxy*              CallFunc_CreateProxyObjectForPlayMontage_ReturnValue; // 0x06C8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPlayMontageCallbackProxy*              CallFunc_CreateProxyObjectForPlayMontage_ReturnValue_1; // 0x06D0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x06D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x06D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6DA[0x6];                                      // 0x06DA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UPlayMontageCallbackProxy*              CallFunc_CreateProxyObjectForPlayMontage_ReturnValue_2; // 0x06E0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x06E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6E9[0x7];                                      // 0x06E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_Event_InteractingActor;                     // 0x06F0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_Event_InteractionComponent;                 // 0x06F8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_18;                  // 0x0700(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_ResidentCharacter_C*                K2Node_DynamicCast_AsBP_Resident_Character_2;      // 0x0708(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x0710(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_711[0x7];                                      // 0x0711(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_5;        // 0x0718(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_FindLookAtRotation_ReturnValue;           // 0x0730(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0748(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x0760(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x0764(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x0768(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_76C[0x4];                                      // 0x076C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_BreakVector_X_1;                          // 0x0770(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_1;                          // 0x0778(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_1;                          // 0x0780(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent_1;  // 0x0788(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor_1;           // 0x0790(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp_1;            // 0x0798(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex_1;       // 0x07A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bFromSweep;             // 0x07A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7A5[0x3];                                      // 0x07A5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_ComponentBoundEvent_SweepResult;            // 0x07A8(0x00F8)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent;    // 0x08A0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor;             // 0x08A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp;              // 0x08B0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex;         // 0x08B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8BC[0x4];                                      // 0x08BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_ResidentCharacter_C*                K2Node_DynamicCast_AsBP_Resident_Character_3;      // 0x08C0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_5;                     // 0x08C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8C9[0x7];                                      // 0x08C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_ResidentCharacter_C*                K2Node_DynamicCast_AsBP_Resident_Character_4;      // 0x08D0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_6;                     // 0x08D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8D9[0x7];                                      // 0x08D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            CallFunc_GetController_ReturnValue;                // 0x08E0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APlayerControllerJP_MatchBP_C*          K2Node_DynamicCast_AsPlayer_Controller_JP_Match_BP; // 0x08E8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_7;                     // 0x08F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bBeingPet;                            // 0x08F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8F2[0x6];                                      // 0x08F2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UPlayMontageCallbackProxy*              CallFunc_CreateProxyObjectForPlayMontage_ReturnValue_3; // 0x08F8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetPlayLength_ReturnValue;                // 0x0900(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_904[0x4];                                      // 0x0904(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0908(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0910(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_911[0x7];                                      // 0x0911(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAbilitySystemComponent*                CallFunc_GetAbilitySystemComponent_ReturnValue;    // 0x0918(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IGameplayTagAssetInterface> CallFunc_GetOwnedGameplayTags_self_CastInput;      // 0x0920(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTagContainer                  CallFunc_GetOwnedGameplayTags_TagContainer;        // 0x0930(0x0020)()
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_6;        // 0x0950(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FGameplayTag>                   CallFunc_BreakGameplayTagContainer_GameplayTags;   // 0x0968(0x0010)(ReferenceParm)
	double                                        CallFunc_BreakVector_X_2;                          // 0x0978(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_2;                          // 0x0980(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_2;                          // 0x0988(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x0990(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_991[0x7];                                      // 0x0991(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_MakeVector_ReturnValue_1;                 // 0x0998(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetActorLocation_SweepHitResult;       // 0x09B0(0x00F8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_SetActorLocation_ReturnValue;          // 0x0AA8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_AA9[0x7];                                      // 0x0AA9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_7;        // 0x0AB0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_FindLookAtRotation_ReturnValue_1;         // 0x0AC8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll_1;                      // 0x0AE0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch_1;                     // 0x0AE4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw_1;                       // 0x0AE8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Roll_2;                      // 0x0AEC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch_2;                     // 0x0AF0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw_2;                       // 0x0AF4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0AF8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue_1;                // 0x0B10(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_K2_SetActorRotation_ReturnValue;          // 0x0B28(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Leloi_C_ExecuteUbergraph_BP_Leloi) == 0x000010, "Wrong alignment on BP_Leloi_C_ExecuteUbergraph_BP_Leloi");
static_assert(sizeof(BP_Leloi_C_ExecuteUbergraph_BP_Leloi) == 0x000B30, "Wrong size on BP_Leloi_C_ExecuteUbergraph_BP_Leloi");
static_assert(offsetof(BP_Leloi_C_ExecuteUbergraph_BP_Leloi, EntryPoint) == 0x000000, "Member 'BP_Leloi_C_ExecuteUbergraph_BP_Leloi::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_Leloi_C_ExecuteUbergraph_BP_Leloi, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000008, "Member 'BP_Leloi_C_ExecuteUbergraph_BP_Leloi::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Leloi_C_ExecuteUbergraph_BP_Leloi, K2Node_CustomEvent_NotifyName_16) == 0x000020, "Member 'BP_Leloi_C_ExecuteUbergraph_BP_Leloi::K2Node_CustomEvent_NotifyName_16' has a wrong offset!");
static_assert(offsetof(BP_Leloi_C_ExecuteUbergraph_BP_Leloi, K2Node_CustomEvent_NotifyName_15) == 0x000028, "Member 'BP_Leloi_C_ExecuteUbergraph_BP_Leloi::K2Node_CustomEvent_NotifyName_15' has a wrong offset!");
static_assert(offsetof(BP_Leloi_C_ExecuteUbergraph_BP_Leloi, K2Node_CreateDelegate_OutputDelegate) == 0x000030, "Member 'BP_Leloi_C_ExecuteUbergraph_BP_Leloi::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_Leloi_C_ExecuteUbergraph_BP_Leloi, Temp_name_Variable) == 0x000040, "Member 'BP_Leloi_C_ExecuteUbergraph_BP_Leloi::Temp_name_Variable' has a wrong offset!");
static_assert(offsetof(BP_Leloi_C_ExecuteUbergraph_BP_Leloi, K2Node_CreateDelegate_OutputDelegate_1) == 0x000048, "Member 'BP_Leloi_C_ExecuteUbergraph_BP_Leloi::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(BP_Leloi_C_ExecuteUbergraph_BP_Leloi, K2Node_CustomEvent_NotifyName_14) == 0x000058, "Member 'BP_Leloi_C_ExecuteUbergraph_BP_Leloi::K2Node_CustomEvent_NotifyName_14' has a wrong offset!");
static_assert(offsetof(BP_Leloi_C_ExecuteUbergraph_BP_Leloi, K2Node_CustomEvent_NotifyName_13) == 0x000060, "Member 'BP_Leloi_C_ExecuteUbergraph_BP_Leloi::K2Node_CustomEvent_NotifyName_13' has a wrong offset!");
static_assert(offsetof(BP_Leloi_C_ExecuteUbergraph_BP_Leloi, K2Node_CreateDelegate_OutputDelegate_2) == 0x000068, "Member 'BP_Leloi_C_ExecuteUbergraph_BP_Leloi::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(BP_Leloi_C_ExecuteUbergraph_BP_Leloi, K2Node_CustomEvent_NotifyName_12) == 0x000078, "Member 'BP_Leloi_C_ExecuteUbergraph_BP_Leloi::K2Node_CustomEvent_NotifyName_12' has a wrong offset!");
static_assert(offsetof(BP_Leloi_C_ExecuteUbergraph_BP_Leloi, K2Node_CreateDelegate_OutputDelegate_3) == 0x000080, "Member 'BP_Leloi_C_ExecuteUbergraph_BP_Leloi::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(BP_Leloi_C_ExecuteUbergraph_BP_Leloi, K2Node_CustomEvent_NotifyName_11) == 0x000090, "Member 'BP_Leloi_C_ExecuteUbergraph_BP_Leloi::K2Node_CustomEvent_NotifyName_11' has a wrong offset!");
static_assert(offsetof(BP_Leloi_C_ExecuteUbergraph_BP_Leloi, K2Node_CreateDelegate_OutputDelegate_4) == 0x000098, "Member 'BP_Leloi_C_ExecuteUbergraph_BP_Leloi::K2Node_CreateDelegate_OutputDelegate_4' has a wrong offset!");
static_assert(offsetof(BP_Leloi_C_ExecuteUbergraph_BP_Leloi, K2Node_CustomEvent_NotifyName_10) == 0x0000A8, "Member 'BP_Leloi_C_ExecuteUbergraph_BP_Leloi::K2Node_CustomEvent_NotifyName_10' has a wrong offset!");
static_assert(offsetof(BP_Leloi_C_ExecuteUbergraph_BP_Leloi, K2Node_CreateDelegate_OutputDelegate_5) == 0x0000B0, "Member 'BP_Leloi_C_ExecuteUbergraph_BP_Leloi::K2Node_CreateDelegate_OutputDelegate_5' has a wrong offset!");
static_assert(offsetof(BP_Leloi_C_ExecuteUbergraph_BP_Leloi, Temp_name_Variable_1) == 0x0000C0, "Member 'BP_Leloi_C_ExecuteUbergraph_BP_Leloi::Temp_name_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_Leloi_C_ExecuteUbergraph_BP_Leloi, K2Node_CreateDelegate_OutputDelegate_6) == 0x0000C8, "Member 'BP_Leloi_C_ExecuteUbergraph_BP_Leloi::K2Node_CreateDelegate_OutputDelegate_6' has a wrong offset!");
static_assert(offsetof(BP_Leloi_C_ExecuteUbergraph_BP_Leloi, K2Node_CustomEvent_NotifyName_9) == 0x0000D8, "Member 'BP_Leloi_C_ExecuteUbergraph_BP_Leloi::K2Node_CustomEvent_NotifyName_9' has a wrong offset!");
static_assert(offsetof(BP_Leloi_C_ExecuteUbergraph_BP_Leloi, K2Node_CustomEvent_NotifyName_8) == 0x0000E0, "Member 'BP_Leloi_C_ExecuteUbergraph_BP_Leloi::K2Node_CustomEvent_NotifyName_8' has a wrong offset!");
static_assert(offsetof(BP_Leloi_C_ExecuteUbergraph_BP_Leloi, K2Node_CreateDelegate_OutputDelegate_7) == 0x0000E8, "Member 'BP_Leloi_C_ExecuteUbergraph_BP_Leloi::K2Node_CreateDelegate_OutputDelegate_7' has a wrong offset!");
static_assert(offsetof(BP_Leloi_C_ExecuteUbergraph_BP_Leloi, K2Node_CustomEvent_NotifyName_7) == 0x0000F8, "Member 'BP_Leloi_C_ExecuteUbergraph_BP_Leloi::K2Node_CustomEvent_NotifyName_7' has a wrong offset!");
static_assert(offsetof(BP_Leloi_C_ExecuteUbergraph_BP_Leloi, K2Node_CreateDelegate_OutputDelegate_8) == 0x000100, "Member 'BP_Leloi_C_ExecuteUbergraph_BP_Leloi::K2Node_CreateDelegate_OutputDelegate_8' has a wrong offset!");
static_assert(offsetof(BP_Leloi_C_ExecuteUbergraph_BP_Leloi, K2Node_CustomEvent_NotifyName_6) == 0x000110, "Member 'BP_Leloi_C_ExecuteUbergraph_BP_Leloi::K2Node_CustomEvent_NotifyName_6' has a wrong offset!");
static_assert(offsetof(BP_Leloi_C_ExecuteUbergraph_BP_Leloi, K2Node_CreateDelegate_OutputDelegate_9) == 0x000118, "Member 'BP_Leloi_C_ExecuteUbergraph_BP_Leloi::K2Node_CreateDelegate_OutputDelegate_9' has a wrong offset!");
static_assert(offsetof(BP_Leloi_C_ExecuteUbergraph_BP_Leloi, K2Node_CustomEvent_NotifyName_5) == 0x000128, "Member 'BP_Leloi_C_ExecuteUbergraph_BP_Leloi::K2Node_CustomEvent_NotifyName_5' has a wrong offset!");
static_assert(offsetof(BP_Leloi_C_ExecuteUbergraph_BP_Leloi, K2Node_CreateDelegate_OutputDelegate_10) == 0x000130, "Member 'BP_Leloi_C_ExecuteUbergraph_BP_Leloi::K2Node_CreateDelegate_OutputDelegate_10' has a wrong offset!");
static_assert(offsetof(BP_Leloi_C_ExecuteUbergraph_BP_Leloi, Temp_name_Variable_2) == 0x000140, "Member 'BP_Leloi_C_ExecuteUbergraph_BP_Leloi::Temp_name_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_Leloi_C_ExecuteUbergraph_BP_Leloi, K2Node_CreateDelegate_OutputDelegate_11) == 0x000148, "Member 'BP_Leloi_C_ExecuteUbergraph_BP_Leloi::K2Node_CreateDelegate_OutputDelegate_11' has a wrong offset!");
static_assert(offsetof(BP_Leloi_C_ExecuteUbergraph_BP_Leloi, Temp_struct_Variable) == 0x000158, "Member 'BP_Leloi_C_ExecuteUbergraph_BP_Leloi::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(BP_Leloi_C_ExecuteUbergraph_BP_Leloi, K2Node_CreateDelegate_OutputDelegate_12) == 0x000160, "Member 'BP_Leloi_C_ExecuteUbergraph_BP_Leloi::K2Node_CreateDelegate_OutputDelegate_12' has a wrong offset!");
static_assert(offsetof(BP_Leloi_C_ExecuteUbergraph_BP_Leloi, K2Node_CustomEvent_NotifyName_4) == 0x000170, "Member 'BP_Leloi_C_ExecuteUbergraph_BP_Leloi::K2Node_CustomEvent_NotifyName_4' has a wrong offset!");
static_assert(offsetof(BP_Leloi_C_ExecuteUbergraph_BP_Leloi, K2Node_CustomEvent_NotifyName_3) == 0x000178, "Member 'BP_Leloi_C_ExecuteUbergraph_BP_Leloi::K2Node_CustomEvent_NotifyName_3' has a wrong offset!");
static_assert(offsetof(BP_Leloi_C_ExecuteUbergraph_BP_Leloi, K2Node_CreateDelegate_OutputDelegate_13) == 0x000180, "Member 'BP_Leloi_C_ExecuteUbergraph_BP_Leloi::K2Node_CreateDelegate_OutputDelegate_13' has a wrong offset!");
static_assert(offsetof(BP_Leloi_C_ExecuteUbergraph_BP_Leloi, K2Node_CustomEvent_NotifyName_2) == 0x000190, "Member 'BP_Leloi_C_ExecuteUbergraph_BP_Leloi::K2Node_CustomEvent_NotifyName_2' has a wrong offset!");
static_assert(offsetof(BP_Leloi_C_ExecuteUbergraph_BP_Leloi, K2Node_CreateDelegate_OutputDelegate_14) == 0x000198, "Member 'BP_Leloi_C_ExecuteUbergraph_BP_Leloi::K2Node_CreateDelegate_OutputDelegate_14' has a wrong offset!");
static_assert(offsetof(BP_Leloi_C_ExecuteUbergraph_BP_Leloi, K2Node_CustomEvent_NotifyName_1) == 0x0001A8, "Member 'BP_Leloi_C_ExecuteUbergraph_BP_Leloi::K2Node_CustomEvent_NotifyName_1' has a wrong offset!");
static_assert(offsetof(BP_Leloi_C_ExecuteUbergraph_BP_Leloi, K2Node_CreateDelegate_OutputDelegate_15) == 0x0001B0, "Member 'BP_Leloi_C_ExecuteUbergraph_BP_Leloi::K2Node_CreateDelegate_OutputDelegate_15' has a wrong offset!");
static_assert(offsetof(BP_Leloi_C_ExecuteUbergraph_BP_Leloi, K2Node_CustomEvent_NotifyName) == 0x0001C0, "Member 'BP_Leloi_C_ExecuteUbergraph_BP_Leloi::K2Node_CustomEvent_NotifyName' has a wrong offset!");
static_assert(offsetof(BP_Leloi_C_ExecuteUbergraph_BP_Leloi, K2Node_CreateDelegate_OutputDelegate_16) == 0x0001C8, "Member 'BP_Leloi_C_ExecuteUbergraph_BP_Leloi::K2Node_CreateDelegate_OutputDelegate_16' has a wrong offset!");
static_assert(offsetof(BP_Leloi_C_ExecuteUbergraph_BP_Leloi, Temp_name_Variable_3) == 0x0001D8, "Member 'BP_Leloi_C_ExecuteUbergraph_BP_Leloi::Temp_name_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_Leloi_C_ExecuteUbergraph_BP_Leloi, CallFunc_GetControllerReference_OGPlayerController) == 0x0001E0, "Member 'BP_Leloi_C_ExecuteUbergraph_BP_Leloi::CallFunc_GetControllerReference_OGPlayerController' has a wrong offset!");
static_assert(offsetof(BP_Leloi_C_ExecuteUbergraph_BP_Leloi, K2Node_CreateDelegate_OutputDelegate_17) == 0x0001E8, "Member 'BP_Leloi_C_ExecuteUbergraph_BP_Leloi::K2Node_CreateDelegate_OutputDelegate_17' has a wrong offset!");
static_assert(offsetof(BP_Leloi_C_ExecuteUbergraph_BP_Leloi, Temp_bool_IsClosed_Variable) == 0x0001F8, "Member 'BP_Leloi_C_ExecuteUbergraph_BP_Leloi::Temp_bool_IsClosed_Variable' has a wrong offset!");
static_assert(offsetof(BP_Leloi_C_ExecuteUbergraph_BP_Leloi, Temp_bool_Has_Been_Initd_Variable) == 0x0001F9, "Member 'BP_Leloi_C_ExecuteUbergraph_BP_Leloi::Temp_bool_Has_Been_Initd_Variable' has a wrong offset!");
static_assert(offsetof(BP_Leloi_C_ExecuteUbergraph_BP_Leloi, CallFunc_HasAuthority_ReturnValue) == 0x0001FA, "Member 'BP_Leloi_C_ExecuteUbergraph_BP_Leloi::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Leloi_C_ExecuteUbergraph_BP_Leloi, K2Node_CreateDelegate_OutputDelegate_18) == 0x0001FC, "Member 'BP_Leloi_C_ExecuteUbergraph_BP_Leloi::K2Node_CreateDelegate_OutputDelegate_18' has a wrong offset!");
static_assert(offsetof(BP_Leloi_C_ExecuteUbergraph_BP_Leloi, K2Node_Event_InteractionComponent_5) == 0x000210, "Member 'BP_Leloi_C_ExecuteUbergraph_BP_Leloi::K2Node_Event_InteractionComponent_5' has a wrong offset!");
static_assert(offsetof(BP_Leloi_C_ExecuteUbergraph_BP_Leloi, K2Node_Event_InteractionComponent_4) == 0x000218, "Member 'BP_Leloi_C_ExecuteUbergraph_BP_Leloi::K2Node_Event_InteractionComponent_4' has a wrong offset!");
static_assert(offsetof(BP_Leloi_C_ExecuteUbergraph_BP_Leloi, K2Node_Event_InteractingActor_6) == 0x000220, "Member 'BP_Leloi_C_ExecuteUbergraph_BP_Leloi::K2Node_Event_InteractingActor_6' has a wrong offset!");
static_assert(offsetof(BP_Leloi_C_ExecuteUbergraph_BP_Leloi, K2Node_Event_InteractionComponent_3) == 0x000228, "Member 'BP_Leloi_C_ExecuteUbergraph_BP_Leloi::K2Node_Event_InteractionComponent_3' has a wrong offset!");
static_assert(offsetof(BP_Leloi_C_ExecuteUbergraph_BP_Leloi, K2Node_Event_InteractionComponent_2) == 0x000230, "Member 'BP_Leloi_C_ExecuteUbergraph_BP_Leloi::K2Node_Event_InteractionComponent_2' has a wrong offset!");
static_assert(offsetof(BP_Leloi_C_ExecuteUbergraph_BP_Leloi, K2Node_Event_InteractingActor_5) == 0x000238, "Member 'BP_Leloi_C_ExecuteUbergraph_BP_Leloi::K2Node_Event_InteractingActor_5' has a wrong offset!");
static_assert(offsetof(BP_Leloi_C_ExecuteUbergraph_BP_Leloi, K2Node_Event_InteractionComponent_1) == 0x000240, "Member 'BP_Leloi_C_ExecuteUbergraph_BP_Leloi::K2Node_Event_InteractionComponent_1' has a wrong offset!");
static_assert(offsetof(BP_Leloi_C_ExecuteUbergraph_BP_Leloi, K2Node_Event_InteractingActor_4) == 0x000248, "Member 'BP_Leloi_C_ExecuteUbergraph_BP_Leloi::K2Node_Event_InteractingActor_4' has a wrong offset!");
static_assert(offsetof(BP_Leloi_C_ExecuteUbergraph_BP_Leloi, K2Node_Event_InteractingActor_3) == 0x000250, "Member 'BP_Leloi_C_ExecuteUbergraph_BP_Leloi::K2Node_Event_InteractingActor_3' has a wrong offset!");
static_assert(offsetof(BP_Leloi_C_ExecuteUbergraph_BP_Leloi, K2Node_Event_InteractingActor_2) == 0x000258, "Member 'BP_Leloi_C_ExecuteUbergraph_BP_Leloi::K2Node_Event_InteractingActor_2' has a wrong offset!");
static_assert(offsetof(BP_Leloi_C_ExecuteUbergraph_BP_Leloi, K2Node_Event_InteractingActor_1) == 0x000260, "Member 'BP_Leloi_C_ExecuteUbergraph_BP_Leloi::K2Node_Event_InteractingActor_1' has a wrong offset!");
static_assert(offsetof(BP_Leloi_C_ExecuteUbergraph_BP_Leloi, K2Node_Event_Focusing_Actor) == 0x000268, "Member 'BP_Leloi_C_ExecuteUbergraph_BP_Leloi::K2Node_Event_Focusing_Actor' has a wrong offset!");
static_assert(offsetof(BP_Leloi_C_ExecuteUbergraph_BP_Leloi, K2Node_Event_Interactable) == 0x000270, "Member 'BP_Leloi_C_ExecuteUbergraph_BP_Leloi::K2Node_Event_Interactable' has a wrong offset!");
static_assert(offsetof(BP_Leloi_C_ExecuteUbergraph_BP_Leloi, K2Node_Event_Sitting) == 0x000271, "Member 'BP_Leloi_C_ExecuteUbergraph_BP_Leloi::K2Node_Event_Sitting' has a wrong offset!");
static_assert(offsetof(BP_Leloi_C_ExecuteUbergraph_BP_Leloi, K2Node_Event_InView) == 0x000272, "Member 'BP_Leloi_C_ExecuteUbergraph_BP_Leloi::K2Node_Event_InView' has a wrong offset!");
static_assert(offsetof(BP_Leloi_C_ExecuteUbergraph_BP_Leloi, K2Node_Event_State) == 0x000273, "Member 'BP_Leloi_C_ExecuteUbergraph_BP_Leloi::K2Node_Event_State' has a wrong offset!");
static_assert(offsetof(BP_Leloi_C_ExecuteUbergraph_BP_Leloi, K2Node_Event_IdleState) == 0x000274, "Member 'BP_Leloi_C_ExecuteUbergraph_BP_Leloi::K2Node_Event_IdleState' has a wrong offset!");
static_assert(offsetof(BP_Leloi_C_ExecuteUbergraph_BP_Leloi, K2Node_Event_Barking) == 0x000278, "Member 'BP_Leloi_C_ExecuteUbergraph_BP_Leloi::K2Node_Event_Barking' has a wrong offset!");
static_assert(offsetof(BP_Leloi_C_ExecuteUbergraph_BP_Leloi, K2Node_Event_Breathing) == 0x000280, "Member 'BP_Leloi_C_ExecuteUbergraph_BP_Leloi::K2Node_Event_Breathing' has a wrong offset!");
static_assert(offsetof(BP_Leloi_C_ExecuteUbergraph_BP_Leloi, K2Node_Event_PlayerRef) == 0x000288, "Member 'BP_Leloi_C_ExecuteUbergraph_BP_Leloi::K2Node_Event_PlayerRef' has a wrong offset!");
static_assert(offsetof(BP_Leloi_C_ExecuteUbergraph_BP_Leloi, K2Node_CustomEvent_Input) == 0x000290, "Member 'BP_Leloi_C_ExecuteUbergraph_BP_Leloi::K2Node_CustomEvent_Input' has a wrong offset!");
static_assert(offsetof(BP_Leloi_C_ExecuteUbergraph_BP_Leloi, CallFunc_SetMovementSpeed_Void) == 0x000291, "Member 'BP_Leloi_C_ExecuteUbergraph_BP_Leloi::CallFunc_SetMovementSpeed_Void' has a wrong offset!");
static_assert(offsetof(BP_Leloi_C_ExecuteUbergraph_BP_Leloi, K2Node_ComponentBoundEvent_OverlappedComponent_3) == 0x000298, "Member 'BP_Leloi_C_ExecuteUbergraph_BP_Leloi::K2Node_ComponentBoundEvent_OverlappedComponent_3' has a wrong offset!");
static_assert(offsetof(BP_Leloi_C_ExecuteUbergraph_BP_Leloi, K2Node_ComponentBoundEvent_OtherActor_3) == 0x0002A0, "Member 'BP_Leloi_C_ExecuteUbergraph_BP_Leloi::K2Node_ComponentBoundEvent_OtherActor_3' has a wrong offset!");
static_assert(offsetof(BP_Leloi_C_ExecuteUbergraph_BP_Leloi, K2Node_ComponentBoundEvent_OtherComp_3) == 0x0002A8, "Member 'BP_Leloi_C_ExecuteUbergraph_BP_Leloi::K2Node_ComponentBoundEvent_OtherComp_3' has a wrong offset!");
static_assert(offsetof(BP_Leloi_C_ExecuteUbergraph_BP_Leloi, K2Node_ComponentBoundEvent_OtherBodyIndex_3) == 0x0002B0, "Member 'BP_Leloi_C_ExecuteUbergraph_BP_Leloi::K2Node_ComponentBoundEvent_OtherBodyIndex_3' has a wrong offset!");
static_assert(offsetof(BP_Leloi_C_ExecuteUbergraph_BP_Leloi, K2Node_ComponentBoundEvent_bFromSweep_1) == 0x0002B4, "Member 'BP_Leloi_C_ExecuteUbergraph_BP_Leloi::K2Node_ComponentBoundEvent_bFromSweep_1' has a wrong offset!");
static_assert(offsetof(BP_Leloi_C_ExecuteUbergraph_BP_Leloi, K2Node_ComponentBoundEvent_SweepResult_1) == 0x0002B8, "Member 'BP_Leloi_C_ExecuteUbergraph_BP_Leloi::K2Node_ComponentBoundEvent_SweepResult_1' has a wrong offset!");
static_assert(offsetof(BP_Leloi_C_ExecuteUbergraph_BP_Leloi, K2Node_ComponentBoundEvent_OverlappedComponent_2) == 0x0003B0, "Member 'BP_Leloi_C_ExecuteUbergraph_BP_Leloi::K2Node_ComponentBoundEvent_OverlappedComponent_2' has a wrong offset!");
static_assert(offsetof(BP_Leloi_C_ExecuteUbergraph_BP_Leloi, K2Node_ComponentBoundEvent_OtherActor_2) == 0x0003B8, "Member 'BP_Leloi_C_ExecuteUbergraph_BP_Leloi::K2Node_ComponentBoundEvent_OtherActor_2' has a wrong offset!");
static_assert(offsetof(BP_Leloi_C_ExecuteUbergraph_BP_Leloi, K2Node_ComponentBoundEvent_OtherComp_2) == 0x0003C0, "Member 'BP_Leloi_C_ExecuteUbergraph_BP_Leloi::K2Node_ComponentBoundEvent_OtherComp_2' has a wrong offset!");
static_assert(offsetof(BP_Leloi_C_ExecuteUbergraph_BP_Leloi, K2Node_ComponentBoundEvent_OtherBodyIndex_2) == 0x0003C8, "Member 'BP_Leloi_C_ExecuteUbergraph_BP_Leloi::K2Node_ComponentBoundEvent_OtherBodyIndex_2' has a wrong offset!");
static_assert(offsetof(BP_Leloi_C_ExecuteUbergraph_BP_Leloi, K2Node_DynamicCast_AsBP_Resident_Character) == 0x0003D0, "Member 'BP_Leloi_C_ExecuteUbergraph_BP_Leloi::K2Node_DynamicCast_AsBP_Resident_Character' has a wrong offset!");
static_assert(offsetof(BP_Leloi_C_ExecuteUbergraph_BP_Leloi, K2Node_DynamicCast_bSuccess) == 0x0003D8, "Member 'BP_Leloi_C_ExecuteUbergraph_BP_Leloi::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_Leloi_C_ExecuteUbergraph_BP_Leloi, K2Node_DynamicCast_AsBP_Resident_Character_1) == 0x0003E0, "Member 'BP_Leloi_C_ExecuteUbergraph_BP_Leloi::K2Node_DynamicCast_AsBP_Resident_Character_1' has a wrong offset!");
static_assert(offsetof(BP_Leloi_C_ExecuteUbergraph_BP_Leloi, K2Node_DynamicCast_bSuccess_1) == 0x0003E8, "Member 'BP_Leloi_C_ExecuteUbergraph_BP_Leloi::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_Leloi_C_ExecuteUbergraph_BP_Leloi, Temp_bool_IsClosed_Variable_1) == 0x0003E9, "Member 'BP_Leloi_C_ExecuteUbergraph_BP_Leloi::Temp_bool_IsClosed_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_Leloi_C_ExecuteUbergraph_BP_Leloi, K2Node_CustomEvent_NotifyName_19) == 0x0003EC, "Member 'BP_Leloi_C_ExecuteUbergraph_BP_Leloi::K2Node_CustomEvent_NotifyName_19' has a wrong offset!");
static_assert(offsetof(BP_Leloi_C_ExecuteUbergraph_BP_Leloi, K2Node_Event_Location) == 0x0003F8, "Member 'BP_Leloi_C_ExecuteUbergraph_BP_Leloi::K2Node_Event_Location' has a wrong offset!");
static_assert(offsetof(BP_Leloi_C_ExecuteUbergraph_BP_Leloi, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000410, "Member 'BP_Leloi_C_ExecuteUbergraph_BP_Leloi::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Leloi_C_ExecuteUbergraph_BP_Leloi, CallFunc_BreakVector_X) == 0x000418, "Member 'BP_Leloi_C_ExecuteUbergraph_BP_Leloi::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_Leloi_C_ExecuteUbergraph_BP_Leloi, CallFunc_BreakVector_Y) == 0x000420, "Member 'BP_Leloi_C_ExecuteUbergraph_BP_Leloi::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_Leloi_C_ExecuteUbergraph_BP_Leloi, CallFunc_BreakVector_Z) == 0x000428, "Member 'BP_Leloi_C_ExecuteUbergraph_BP_Leloi::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_Leloi_C_ExecuteUbergraph_BP_Leloi, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x000430, "Member 'BP_Leloi_C_ExecuteUbergraph_BP_Leloi::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Leloi_C_ExecuteUbergraph_BP_Leloi, K2Node_CreateDelegate_OutputDelegate_19) == 0x000448, "Member 'BP_Leloi_C_ExecuteUbergraph_BP_Leloi::K2Node_CreateDelegate_OutputDelegate_19' has a wrong offset!");
static_assert(offsetof(BP_Leloi_C_ExecuteUbergraph_BP_Leloi, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000458, "Member 'BP_Leloi_C_ExecuteUbergraph_BP_Leloi::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Leloi_C_ExecuteUbergraph_BP_Leloi, CallFunc_K2_GetActorLocation_ReturnValue_2) == 0x000460, "Member 'BP_Leloi_C_ExecuteUbergraph_BP_Leloi::CallFunc_K2_GetActorLocation_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Leloi_C_ExecuteUbergraph_BP_Leloi, CallFunc_MakeVector_ReturnValue) == 0x000478, "Member 'BP_Leloi_C_ExecuteUbergraph_BP_Leloi::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Leloi_C_ExecuteUbergraph_BP_Leloi, CallFunc_SuggestProjectileVelocity_CustomArc_OutLaunchVelocity) == 0x000490, "Member 'BP_Leloi_C_ExecuteUbergraph_BP_Leloi::CallFunc_SuggestProjectileVelocity_CustomArc_OutLaunchVelocity' has a wrong offset!");
static_assert(offsetof(BP_Leloi_C_ExecuteUbergraph_BP_Leloi, CallFunc_SuggestProjectileVelocity_CustomArc_ReturnValue) == 0x0004A8, "Member 'BP_Leloi_C_ExecuteUbergraph_BP_Leloi::CallFunc_SuggestProjectileVelocity_CustomArc_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Leloi_C_ExecuteUbergraph_BP_Leloi, CallFunc_GetBBTargetActor_Actor) == 0x0004B0, "Member 'BP_Leloi_C_ExecuteUbergraph_BP_Leloi::CallFunc_GetBBTargetActor_Actor' has a wrong offset!");
static_assert(offsetof(BP_Leloi_C_ExecuteUbergraph_BP_Leloi, CallFunc_GetBBTargetActor_Actor_1) == 0x0004B8, "Member 'BP_Leloi_C_ExecuteUbergraph_BP_Leloi::CallFunc_GetBBTargetActor_Actor_1' has a wrong offset!");
static_assert(offsetof(BP_Leloi_C_ExecuteUbergraph_BP_Leloi, K2Node_DynamicCast_AsI_Character) == 0x0004C0, "Member 'BP_Leloi_C_ExecuteUbergraph_BP_Leloi::K2Node_DynamicCast_AsI_Character' has a wrong offset!");
static_assert(offsetof(BP_Leloi_C_ExecuteUbergraph_BP_Leloi, K2Node_DynamicCast_bSuccess_2) == 0x0004D0, "Member 'BP_Leloi_C_ExecuteUbergraph_BP_Leloi::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_Leloi_C_ExecuteUbergraph_BP_Leloi, CallFunc_GetGuardDogTargetOffset_TargetOffset) == 0x0004D8, "Member 'BP_Leloi_C_ExecuteUbergraph_BP_Leloi::CallFunc_GetGuardDogTargetOffset_TargetOffset' has a wrong offset!");
static_assert(offsetof(BP_Leloi_C_ExecuteUbergraph_BP_Leloi, CallFunc_NotEqual_ByteByte_ReturnValue_1) == 0x0004F0, "Member 'BP_Leloi_C_ExecuteUbergraph_BP_Leloi::CallFunc_NotEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Leloi_C_ExecuteUbergraph_BP_Leloi, CallFunc_SuggestProjectileVelocity_MovingTarget_OutLaunchVelocity) == 0x0004F8, "Member 'BP_Leloi_C_ExecuteUbergraph_BP_Leloi::CallFunc_SuggestProjectileVelocity_MovingTarget_OutLaunchVelocity' has a wrong offset!");
static_assert(offsetof(BP_Leloi_C_ExecuteUbergraph_BP_Leloi, CallFunc_SuggestProjectileVelocity_MovingTarget_ReturnValue) == 0x000510, "Member 'BP_Leloi_C_ExecuteUbergraph_BP_Leloi::CallFunc_SuggestProjectileVelocity_MovingTarget_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Leloi_C_ExecuteUbergraph_BP_Leloi, CallFunc_ClampVectorSize_ReturnValue) == 0x000518, "Member 'BP_Leloi_C_ExecuteUbergraph_BP_Leloi::CallFunc_ClampVectorSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Leloi_C_ExecuteUbergraph_BP_Leloi, CallFunc_VSize_ReturnValue) == 0x000530, "Member 'BP_Leloi_C_ExecuteUbergraph_BP_Leloi::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Leloi_C_ExecuteUbergraph_BP_Leloi, CallFunc_K2_GetActorLocation_ReturnValue_3) == 0x000538, "Member 'BP_Leloi_C_ExecuteUbergraph_BP_Leloi::CallFunc_K2_GetActorLocation_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Leloi_C_ExecuteUbergraph_BP_Leloi, K2Node_Event_BehaviourState) == 0x000550, "Member 'BP_Leloi_C_ExecuteUbergraph_BP_Leloi::K2Node_Event_BehaviourState' has a wrong offset!");
static_assert(offsetof(BP_Leloi_C_ExecuteUbergraph_BP_Leloi, K2Node_CustomEvent_VectorLength) == 0x000558, "Member 'BP_Leloi_C_ExecuteUbergraph_BP_Leloi::K2Node_CustomEvent_VectorLength' has a wrong offset!");
static_assert(offsetof(BP_Leloi_C_ExecuteUbergraph_BP_Leloi, CallFunc_GetGameUserSettings_ReturnValue) == 0x000560, "Member 'BP_Leloi_C_ExecuteUbergraph_BP_Leloi::CallFunc_GetGameUserSettings_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Leloi_C_ExecuteUbergraph_BP_Leloi, K2Node_CustomEvent_IsEnabled) == 0x000568, "Member 'BP_Leloi_C_ExecuteUbergraph_BP_Leloi::K2Node_CustomEvent_IsEnabled' has a wrong offset!");
static_assert(offsetof(BP_Leloi_C_ExecuteUbergraph_BP_Leloi, K2Node_DynamicCast_AsLyra_Settings_Local) == 0x000570, "Member 'BP_Leloi_C_ExecuteUbergraph_BP_Leloi::K2Node_DynamicCast_AsLyra_Settings_Local' has a wrong offset!");
static_assert(offsetof(BP_Leloi_C_ExecuteUbergraph_BP_Leloi, K2Node_DynamicCast_bSuccess_3) == 0x000578, "Member 'BP_Leloi_C_ExecuteUbergraph_BP_Leloi::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(BP_Leloi_C_ExecuteUbergraph_BP_Leloi, CallFunc_K2_GetActorLocation_ReturnValue_4) == 0x000580, "Member 'BP_Leloi_C_ExecuteUbergraph_BP_Leloi::CallFunc_K2_GetActorLocation_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_Leloi_C_ExecuteUbergraph_BP_Leloi, CallFunc_SpawnSystemAtLocation_ReturnValue) == 0x000598, "Member 'BP_Leloi_C_ExecuteUbergraph_BP_Leloi::CallFunc_SpawnSystemAtLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Leloi_C_ExecuteUbergraph_BP_Leloi, Temp_bool_Has_Been_Initd_Variable_1) == 0x0005A0, "Member 'BP_Leloi_C_ExecuteUbergraph_BP_Leloi::Temp_bool_Has_Been_Initd_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_Leloi_C_ExecuteUbergraph_BP_Leloi, Temp_bool_Has_Been_Initd_Variable_2) == 0x0005A1, "Member 'BP_Leloi_C_ExecuteUbergraph_BP_Leloi::Temp_bool_Has_Been_Initd_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_Leloi_C_ExecuteUbergraph_BP_Leloi, CallFunc_K2_GetComponentToWorld_ReturnValue) == 0x0005B0, "Member 'BP_Leloi_C_ExecuteUbergraph_BP_Leloi::CallFunc_K2_GetComponentToWorld_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Leloi_C_ExecuteUbergraph_BP_Leloi, CallFunc_BreakTransform_Location) == 0x000610, "Member 'BP_Leloi_C_ExecuteUbergraph_BP_Leloi::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(BP_Leloi_C_ExecuteUbergraph_BP_Leloi, CallFunc_BreakTransform_Rotation) == 0x000628, "Member 'BP_Leloi_C_ExecuteUbergraph_BP_Leloi::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(BP_Leloi_C_ExecuteUbergraph_BP_Leloi, CallFunc_BreakTransform_Scale) == 0x000640, "Member 'BP_Leloi_C_ExecuteUbergraph_BP_Leloi::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(BP_Leloi_C_ExecuteUbergraph_BP_Leloi, CallFunc_K2_TeleportTo_ReturnValue) == 0x000658, "Member 'BP_Leloi_C_ExecuteUbergraph_BP_Leloi::CallFunc_K2_TeleportTo_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Leloi_C_ExecuteUbergraph_BP_Leloi, K2Node_CustomEvent_NotifyName_17) == 0x00065C, "Member 'BP_Leloi_C_ExecuteUbergraph_BP_Leloi::K2Node_CustomEvent_NotifyName_17' has a wrong offset!");
static_assert(offsetof(BP_Leloi_C_ExecuteUbergraph_BP_Leloi, K2Node_CreateDelegate_OutputDelegate_20) == 0x000664, "Member 'BP_Leloi_C_ExecuteUbergraph_BP_Leloi::K2Node_CreateDelegate_OutputDelegate_20' has a wrong offset!");
static_assert(offsetof(BP_Leloi_C_ExecuteUbergraph_BP_Leloi, K2Node_CustomEvent_DestLocation_1) == 0x000678, "Member 'BP_Leloi_C_ExecuteUbergraph_BP_Leloi::K2Node_CustomEvent_DestLocation_1' has a wrong offset!");
static_assert(offsetof(BP_Leloi_C_ExecuteUbergraph_BP_Leloi, K2Node_CreateDelegate_OutputDelegate_21) == 0x000690, "Member 'BP_Leloi_C_ExecuteUbergraph_BP_Leloi::K2Node_CreateDelegate_OutputDelegate_21' has a wrong offset!");
static_assert(offsetof(BP_Leloi_C_ExecuteUbergraph_BP_Leloi, CallFunc_K2_TeleportTo_ReturnValue_1) == 0x0006A0, "Member 'BP_Leloi_C_ExecuteUbergraph_BP_Leloi::CallFunc_K2_TeleportTo_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Leloi_C_ExecuteUbergraph_BP_Leloi, K2Node_CustomEvent_DestLocation) == 0x0006A8, "Member 'BP_Leloi_C_ExecuteUbergraph_BP_Leloi::K2Node_CustomEvent_DestLocation' has a wrong offset!");
static_assert(offsetof(BP_Leloi_C_ExecuteUbergraph_BP_Leloi, CallFunc_K2_TeleportTo_ReturnValue_2) == 0x0006C0, "Member 'BP_Leloi_C_ExecuteUbergraph_BP_Leloi::CallFunc_K2_TeleportTo_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Leloi_C_ExecuteUbergraph_BP_Leloi, Temp_bool_IsClosed_Variable_2) == 0x0006C1, "Member 'BP_Leloi_C_ExecuteUbergraph_BP_Leloi::Temp_bool_IsClosed_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_Leloi_C_ExecuteUbergraph_BP_Leloi, CallFunc_CreateProxyObjectForPlayMontage_ReturnValue) == 0x0006C8, "Member 'BP_Leloi_C_ExecuteUbergraph_BP_Leloi::CallFunc_CreateProxyObjectForPlayMontage_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Leloi_C_ExecuteUbergraph_BP_Leloi, CallFunc_CreateProxyObjectForPlayMontage_ReturnValue_1) == 0x0006D0, "Member 'BP_Leloi_C_ExecuteUbergraph_BP_Leloi::CallFunc_CreateProxyObjectForPlayMontage_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Leloi_C_ExecuteUbergraph_BP_Leloi, CallFunc_IsValid_ReturnValue) == 0x0006D8, "Member 'BP_Leloi_C_ExecuteUbergraph_BP_Leloi::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Leloi_C_ExecuteUbergraph_BP_Leloi, CallFunc_IsValid_ReturnValue_1) == 0x0006D9, "Member 'BP_Leloi_C_ExecuteUbergraph_BP_Leloi::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Leloi_C_ExecuteUbergraph_BP_Leloi, CallFunc_CreateProxyObjectForPlayMontage_ReturnValue_2) == 0x0006E0, "Member 'BP_Leloi_C_ExecuteUbergraph_BP_Leloi::CallFunc_CreateProxyObjectForPlayMontage_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Leloi_C_ExecuteUbergraph_BP_Leloi, CallFunc_IsValid_ReturnValue_2) == 0x0006E8, "Member 'BP_Leloi_C_ExecuteUbergraph_BP_Leloi::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Leloi_C_ExecuteUbergraph_BP_Leloi, K2Node_Event_InteractingActor) == 0x0006F0, "Member 'BP_Leloi_C_ExecuteUbergraph_BP_Leloi::K2Node_Event_InteractingActor' has a wrong offset!");
static_assert(offsetof(BP_Leloi_C_ExecuteUbergraph_BP_Leloi, K2Node_Event_InteractionComponent) == 0x0006F8, "Member 'BP_Leloi_C_ExecuteUbergraph_BP_Leloi::K2Node_Event_InteractionComponent' has a wrong offset!");
static_assert(offsetof(BP_Leloi_C_ExecuteUbergraph_BP_Leloi, K2Node_CustomEvent_NotifyName_18) == 0x000700, "Member 'BP_Leloi_C_ExecuteUbergraph_BP_Leloi::K2Node_CustomEvent_NotifyName_18' has a wrong offset!");
static_assert(offsetof(BP_Leloi_C_ExecuteUbergraph_BP_Leloi, K2Node_DynamicCast_AsBP_Resident_Character_2) == 0x000708, "Member 'BP_Leloi_C_ExecuteUbergraph_BP_Leloi::K2Node_DynamicCast_AsBP_Resident_Character_2' has a wrong offset!");
static_assert(offsetof(BP_Leloi_C_ExecuteUbergraph_BP_Leloi, K2Node_DynamicCast_bSuccess_4) == 0x000710, "Member 'BP_Leloi_C_ExecuteUbergraph_BP_Leloi::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(BP_Leloi_C_ExecuteUbergraph_BP_Leloi, CallFunc_K2_GetActorLocation_ReturnValue_5) == 0x000718, "Member 'BP_Leloi_C_ExecuteUbergraph_BP_Leloi::CallFunc_K2_GetActorLocation_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_Leloi_C_ExecuteUbergraph_BP_Leloi, CallFunc_FindLookAtRotation_ReturnValue) == 0x000730, "Member 'BP_Leloi_C_ExecuteUbergraph_BP_Leloi::CallFunc_FindLookAtRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Leloi_C_ExecuteUbergraph_BP_Leloi, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000748, "Member 'BP_Leloi_C_ExecuteUbergraph_BP_Leloi::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Leloi_C_ExecuteUbergraph_BP_Leloi, CallFunc_BreakRotator_Roll) == 0x000760, "Member 'BP_Leloi_C_ExecuteUbergraph_BP_Leloi::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(BP_Leloi_C_ExecuteUbergraph_BP_Leloi, CallFunc_BreakRotator_Pitch) == 0x000764, "Member 'BP_Leloi_C_ExecuteUbergraph_BP_Leloi::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(BP_Leloi_C_ExecuteUbergraph_BP_Leloi, CallFunc_BreakRotator_Yaw) == 0x000768, "Member 'BP_Leloi_C_ExecuteUbergraph_BP_Leloi::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(BP_Leloi_C_ExecuteUbergraph_BP_Leloi, CallFunc_BreakVector_X_1) == 0x000770, "Member 'BP_Leloi_C_ExecuteUbergraph_BP_Leloi::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(BP_Leloi_C_ExecuteUbergraph_BP_Leloi, CallFunc_BreakVector_Y_1) == 0x000778, "Member 'BP_Leloi_C_ExecuteUbergraph_BP_Leloi::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(BP_Leloi_C_ExecuteUbergraph_BP_Leloi, CallFunc_BreakVector_Z_1) == 0x000780, "Member 'BP_Leloi_C_ExecuteUbergraph_BP_Leloi::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(BP_Leloi_C_ExecuteUbergraph_BP_Leloi, K2Node_ComponentBoundEvent_OverlappedComponent_1) == 0x000788, "Member 'BP_Leloi_C_ExecuteUbergraph_BP_Leloi::K2Node_ComponentBoundEvent_OverlappedComponent_1' has a wrong offset!");
static_assert(offsetof(BP_Leloi_C_ExecuteUbergraph_BP_Leloi, K2Node_ComponentBoundEvent_OtherActor_1) == 0x000790, "Member 'BP_Leloi_C_ExecuteUbergraph_BP_Leloi::K2Node_ComponentBoundEvent_OtherActor_1' has a wrong offset!");
static_assert(offsetof(BP_Leloi_C_ExecuteUbergraph_BP_Leloi, K2Node_ComponentBoundEvent_OtherComp_1) == 0x000798, "Member 'BP_Leloi_C_ExecuteUbergraph_BP_Leloi::K2Node_ComponentBoundEvent_OtherComp_1' has a wrong offset!");
static_assert(offsetof(BP_Leloi_C_ExecuteUbergraph_BP_Leloi, K2Node_ComponentBoundEvent_OtherBodyIndex_1) == 0x0007A0, "Member 'BP_Leloi_C_ExecuteUbergraph_BP_Leloi::K2Node_ComponentBoundEvent_OtherBodyIndex_1' has a wrong offset!");
static_assert(offsetof(BP_Leloi_C_ExecuteUbergraph_BP_Leloi, K2Node_ComponentBoundEvent_bFromSweep) == 0x0007A4, "Member 'BP_Leloi_C_ExecuteUbergraph_BP_Leloi::K2Node_ComponentBoundEvent_bFromSweep' has a wrong offset!");
static_assert(offsetof(BP_Leloi_C_ExecuteUbergraph_BP_Leloi, K2Node_ComponentBoundEvent_SweepResult) == 0x0007A8, "Member 'BP_Leloi_C_ExecuteUbergraph_BP_Leloi::K2Node_ComponentBoundEvent_SweepResult' has a wrong offset!");
static_assert(offsetof(BP_Leloi_C_ExecuteUbergraph_BP_Leloi, K2Node_ComponentBoundEvent_OverlappedComponent) == 0x0008A0, "Member 'BP_Leloi_C_ExecuteUbergraph_BP_Leloi::K2Node_ComponentBoundEvent_OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BP_Leloi_C_ExecuteUbergraph_BP_Leloi, K2Node_ComponentBoundEvent_OtherActor) == 0x0008A8, "Member 'BP_Leloi_C_ExecuteUbergraph_BP_Leloi::K2Node_ComponentBoundEvent_OtherActor' has a wrong offset!");
static_assert(offsetof(BP_Leloi_C_ExecuteUbergraph_BP_Leloi, K2Node_ComponentBoundEvent_OtherComp) == 0x0008B0, "Member 'BP_Leloi_C_ExecuteUbergraph_BP_Leloi::K2Node_ComponentBoundEvent_OtherComp' has a wrong offset!");
static_assert(offsetof(BP_Leloi_C_ExecuteUbergraph_BP_Leloi, K2Node_ComponentBoundEvent_OtherBodyIndex) == 0x0008B8, "Member 'BP_Leloi_C_ExecuteUbergraph_BP_Leloi::K2Node_ComponentBoundEvent_OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(BP_Leloi_C_ExecuteUbergraph_BP_Leloi, K2Node_DynamicCast_AsBP_Resident_Character_3) == 0x0008C0, "Member 'BP_Leloi_C_ExecuteUbergraph_BP_Leloi::K2Node_DynamicCast_AsBP_Resident_Character_3' has a wrong offset!");
static_assert(offsetof(BP_Leloi_C_ExecuteUbergraph_BP_Leloi, K2Node_DynamicCast_bSuccess_5) == 0x0008C8, "Member 'BP_Leloi_C_ExecuteUbergraph_BP_Leloi::K2Node_DynamicCast_bSuccess_5' has a wrong offset!");
static_assert(offsetof(BP_Leloi_C_ExecuteUbergraph_BP_Leloi, K2Node_DynamicCast_AsBP_Resident_Character_4) == 0x0008D0, "Member 'BP_Leloi_C_ExecuteUbergraph_BP_Leloi::K2Node_DynamicCast_AsBP_Resident_Character_4' has a wrong offset!");
static_assert(offsetof(BP_Leloi_C_ExecuteUbergraph_BP_Leloi, K2Node_DynamicCast_bSuccess_6) == 0x0008D8, "Member 'BP_Leloi_C_ExecuteUbergraph_BP_Leloi::K2Node_DynamicCast_bSuccess_6' has a wrong offset!");
static_assert(offsetof(BP_Leloi_C_ExecuteUbergraph_BP_Leloi, CallFunc_GetController_ReturnValue) == 0x0008E0, "Member 'BP_Leloi_C_ExecuteUbergraph_BP_Leloi::CallFunc_GetController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Leloi_C_ExecuteUbergraph_BP_Leloi, K2Node_DynamicCast_AsPlayer_Controller_JP_Match_BP) == 0x0008E8, "Member 'BP_Leloi_C_ExecuteUbergraph_BP_Leloi::K2Node_DynamicCast_AsPlayer_Controller_JP_Match_BP' has a wrong offset!");
static_assert(offsetof(BP_Leloi_C_ExecuteUbergraph_BP_Leloi, K2Node_DynamicCast_bSuccess_7) == 0x0008F0, "Member 'BP_Leloi_C_ExecuteUbergraph_BP_Leloi::K2Node_DynamicCast_bSuccess_7' has a wrong offset!");
static_assert(offsetof(BP_Leloi_C_ExecuteUbergraph_BP_Leloi, K2Node_Event_bBeingPet) == 0x0008F1, "Member 'BP_Leloi_C_ExecuteUbergraph_BP_Leloi::K2Node_Event_bBeingPet' has a wrong offset!");
static_assert(offsetof(BP_Leloi_C_ExecuteUbergraph_BP_Leloi, CallFunc_CreateProxyObjectForPlayMontage_ReturnValue_3) == 0x0008F8, "Member 'BP_Leloi_C_ExecuteUbergraph_BP_Leloi::CallFunc_CreateProxyObjectForPlayMontage_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Leloi_C_ExecuteUbergraph_BP_Leloi, CallFunc_GetPlayLength_ReturnValue) == 0x000900, "Member 'BP_Leloi_C_ExecuteUbergraph_BP_Leloi::CallFunc_GetPlayLength_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Leloi_C_ExecuteUbergraph_BP_Leloi, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000908, "Member 'BP_Leloi_C_ExecuteUbergraph_BP_Leloi::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Leloi_C_ExecuteUbergraph_BP_Leloi, CallFunc_IsValid_ReturnValue_3) == 0x000910, "Member 'BP_Leloi_C_ExecuteUbergraph_BP_Leloi::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Leloi_C_ExecuteUbergraph_BP_Leloi, CallFunc_GetAbilitySystemComponent_ReturnValue) == 0x000918, "Member 'BP_Leloi_C_ExecuteUbergraph_BP_Leloi::CallFunc_GetAbilitySystemComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Leloi_C_ExecuteUbergraph_BP_Leloi, CallFunc_GetOwnedGameplayTags_self_CastInput) == 0x000920, "Member 'BP_Leloi_C_ExecuteUbergraph_BP_Leloi::CallFunc_GetOwnedGameplayTags_self_CastInput' has a wrong offset!");
static_assert(offsetof(BP_Leloi_C_ExecuteUbergraph_BP_Leloi, CallFunc_GetOwnedGameplayTags_TagContainer) == 0x000930, "Member 'BP_Leloi_C_ExecuteUbergraph_BP_Leloi::CallFunc_GetOwnedGameplayTags_TagContainer' has a wrong offset!");
static_assert(offsetof(BP_Leloi_C_ExecuteUbergraph_BP_Leloi, CallFunc_K2_GetActorLocation_ReturnValue_6) == 0x000950, "Member 'BP_Leloi_C_ExecuteUbergraph_BP_Leloi::CallFunc_K2_GetActorLocation_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_Leloi_C_ExecuteUbergraph_BP_Leloi, CallFunc_BreakGameplayTagContainer_GameplayTags) == 0x000968, "Member 'BP_Leloi_C_ExecuteUbergraph_BP_Leloi::CallFunc_BreakGameplayTagContainer_GameplayTags' has a wrong offset!");
static_assert(offsetof(BP_Leloi_C_ExecuteUbergraph_BP_Leloi, CallFunc_BreakVector_X_2) == 0x000978, "Member 'BP_Leloi_C_ExecuteUbergraph_BP_Leloi::CallFunc_BreakVector_X_2' has a wrong offset!");
static_assert(offsetof(BP_Leloi_C_ExecuteUbergraph_BP_Leloi, CallFunc_BreakVector_Y_2) == 0x000980, "Member 'BP_Leloi_C_ExecuteUbergraph_BP_Leloi::CallFunc_BreakVector_Y_2' has a wrong offset!");
static_assert(offsetof(BP_Leloi_C_ExecuteUbergraph_BP_Leloi, CallFunc_BreakVector_Z_2) == 0x000988, "Member 'BP_Leloi_C_ExecuteUbergraph_BP_Leloi::CallFunc_BreakVector_Z_2' has a wrong offset!");
static_assert(offsetof(BP_Leloi_C_ExecuteUbergraph_BP_Leloi, CallFunc_Array_Contains_ReturnValue) == 0x000990, "Member 'BP_Leloi_C_ExecuteUbergraph_BP_Leloi::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Leloi_C_ExecuteUbergraph_BP_Leloi, CallFunc_MakeVector_ReturnValue_1) == 0x000998, "Member 'BP_Leloi_C_ExecuteUbergraph_BP_Leloi::CallFunc_MakeVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Leloi_C_ExecuteUbergraph_BP_Leloi, CallFunc_K2_SetActorLocation_SweepHitResult) == 0x0009B0, "Member 'BP_Leloi_C_ExecuteUbergraph_BP_Leloi::CallFunc_K2_SetActorLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_Leloi_C_ExecuteUbergraph_BP_Leloi, CallFunc_K2_SetActorLocation_ReturnValue) == 0x000AA8, "Member 'BP_Leloi_C_ExecuteUbergraph_BP_Leloi::CallFunc_K2_SetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Leloi_C_ExecuteUbergraph_BP_Leloi, CallFunc_K2_GetActorLocation_ReturnValue_7) == 0x000AB0, "Member 'BP_Leloi_C_ExecuteUbergraph_BP_Leloi::CallFunc_K2_GetActorLocation_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_Leloi_C_ExecuteUbergraph_BP_Leloi, CallFunc_FindLookAtRotation_ReturnValue_1) == 0x000AC8, "Member 'BP_Leloi_C_ExecuteUbergraph_BP_Leloi::CallFunc_FindLookAtRotation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Leloi_C_ExecuteUbergraph_BP_Leloi, CallFunc_BreakRotator_Roll_1) == 0x000AE0, "Member 'BP_Leloi_C_ExecuteUbergraph_BP_Leloi::CallFunc_BreakRotator_Roll_1' has a wrong offset!");
static_assert(offsetof(BP_Leloi_C_ExecuteUbergraph_BP_Leloi, CallFunc_BreakRotator_Pitch_1) == 0x000AE4, "Member 'BP_Leloi_C_ExecuteUbergraph_BP_Leloi::CallFunc_BreakRotator_Pitch_1' has a wrong offset!");
static_assert(offsetof(BP_Leloi_C_ExecuteUbergraph_BP_Leloi, CallFunc_BreakRotator_Yaw_1) == 0x000AE8, "Member 'BP_Leloi_C_ExecuteUbergraph_BP_Leloi::CallFunc_BreakRotator_Yaw_1' has a wrong offset!");
static_assert(offsetof(BP_Leloi_C_ExecuteUbergraph_BP_Leloi, CallFunc_BreakRotator_Roll_2) == 0x000AEC, "Member 'BP_Leloi_C_ExecuteUbergraph_BP_Leloi::CallFunc_BreakRotator_Roll_2' has a wrong offset!");
static_assert(offsetof(BP_Leloi_C_ExecuteUbergraph_BP_Leloi, CallFunc_BreakRotator_Pitch_2) == 0x000AF0, "Member 'BP_Leloi_C_ExecuteUbergraph_BP_Leloi::CallFunc_BreakRotator_Pitch_2' has a wrong offset!");
static_assert(offsetof(BP_Leloi_C_ExecuteUbergraph_BP_Leloi, CallFunc_BreakRotator_Yaw_2) == 0x000AF4, "Member 'BP_Leloi_C_ExecuteUbergraph_BP_Leloi::CallFunc_BreakRotator_Yaw_2' has a wrong offset!");
static_assert(offsetof(BP_Leloi_C_ExecuteUbergraph_BP_Leloi, CallFunc_MakeRotator_ReturnValue) == 0x000AF8, "Member 'BP_Leloi_C_ExecuteUbergraph_BP_Leloi::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Leloi_C_ExecuteUbergraph_BP_Leloi, CallFunc_MakeRotator_ReturnValue_1) == 0x000B10, "Member 'BP_Leloi_C_ExecuteUbergraph_BP_Leloi::CallFunc_MakeRotator_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Leloi_C_ExecuteUbergraph_BP_Leloi, CallFunc_K2_SetActorRotation_ReturnValue) == 0x000B28, "Member 'BP_Leloi_C_ExecuteUbergraph_BP_Leloi::CallFunc_K2_SetActorRotation_ReturnValue' has a wrong offset!");

// Function BP_Leloi.BP_Leloi_C.GetBBTargetActor
// 0x0030 (0x0030 - 0x0000)
struct BP_Leloi_C_GetBBTargetActor final
{
public:
	class AActor*                                 Actor;                                             // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_MakeLiteralName_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBlackboardComponent*                   CallFunc_GetBlackboard_ReturnValue;                // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_GetValueAsObject_ReturnValue;             // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_DynamicCast_AsActor;                        // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Leloi_C_GetBBTargetActor) == 0x000008, "Wrong alignment on BP_Leloi_C_GetBBTargetActor");
static_assert(sizeof(BP_Leloi_C_GetBBTargetActor) == 0x000030, "Wrong size on BP_Leloi_C_GetBBTargetActor");
static_assert(offsetof(BP_Leloi_C_GetBBTargetActor, Actor) == 0x000000, "Member 'BP_Leloi_C_GetBBTargetActor::Actor' has a wrong offset!");
static_assert(offsetof(BP_Leloi_C_GetBBTargetActor, CallFunc_MakeLiteralName_ReturnValue) == 0x000008, "Member 'BP_Leloi_C_GetBBTargetActor::CallFunc_MakeLiteralName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Leloi_C_GetBBTargetActor, CallFunc_GetBlackboard_ReturnValue) == 0x000010, "Member 'BP_Leloi_C_GetBBTargetActor::CallFunc_GetBlackboard_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Leloi_C_GetBBTargetActor, CallFunc_GetValueAsObject_ReturnValue) == 0x000018, "Member 'BP_Leloi_C_GetBBTargetActor::CallFunc_GetValueAsObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Leloi_C_GetBBTargetActor, K2Node_DynamicCast_AsActor) == 0x000020, "Member 'BP_Leloi_C_GetBBTargetActor::K2Node_DynamicCast_AsActor' has a wrong offset!");
static_assert(offsetof(BP_Leloi_C_GetBBTargetActor, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'BP_Leloi_C_GetBBTargetActor::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BP_Leloi.BP_Leloi_C.GetDogHouse
// 0x0008 (0x0008 - 0x0000)
struct BP_Leloi_C_GetDogHouse final
{
public:
	class ABP_DogHouse_V2_C*                      DogHouse_0;                                        // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Leloi_C_GetDogHouse) == 0x000008, "Wrong alignment on BP_Leloi_C_GetDogHouse");
static_assert(sizeof(BP_Leloi_C_GetDogHouse) == 0x000008, "Wrong size on BP_Leloi_C_GetDogHouse");
static_assert(offsetof(BP_Leloi_C_GetDogHouse, DogHouse_0) == 0x000000, "Member 'BP_Leloi_C_GetDogHouse::DogHouse_0' has a wrong offset!");

// Function BP_Leloi.BP_Leloi_C.GetEQSPropertyBlocker
// 0x0008 (0x0008 - 0x0000)
struct BP_Leloi_C_GetEQSPropertyBlocker final
{
public:
	class AActor*                                 Actor;                                             // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Leloi_C_GetEQSPropertyBlocker) == 0x000008, "Wrong alignment on BP_Leloi_C_GetEQSPropertyBlocker");
static_assert(sizeof(BP_Leloi_C_GetEQSPropertyBlocker) == 0x000008, "Wrong size on BP_Leloi_C_GetEQSPropertyBlocker");
static_assert(offsetof(BP_Leloi_C_GetEQSPropertyBlocker, Actor) == 0x000000, "Member 'BP_Leloi_C_GetEQSPropertyBlocker::Actor' has a wrong offset!");

// Function BP_Leloi.BP_Leloi_C.GetNewWidgetColor
// 0x0014 (0x0014 - 0x0000)
struct BP_Leloi_C_GetNewWidgetColor final
{
public:
	struct FSlateColor                            NewColor;                                          // 0x0000(0x0014)(Parm, OutParm)
};
static_assert(alignof(BP_Leloi_C_GetNewWidgetColor) == 0x000004, "Wrong alignment on BP_Leloi_C_GetNewWidgetColor");
static_assert(sizeof(BP_Leloi_C_GetNewWidgetColor) == 0x000014, "Wrong size on BP_Leloi_C_GetNewWidgetColor");
static_assert(offsetof(BP_Leloi_C_GetNewWidgetColor, NewColor) == 0x000000, "Member 'BP_Leloi_C_GetNewWidgetColor::NewColor' has a wrong offset!");

// Function BP_Leloi.BP_Leloi_C.GetOptionalText
// 0x0020 (0x0020 - 0x0000)
struct BP_Leloi_C_GetOptionalText final
{
public:
	class FText                                   Return;                                            // 0x0000(0x0010)(Parm, OutParm)
	class FText                                   Optional_Second_Line;                              // 0x0010(0x0010)(Parm, OutParm)
};
static_assert(alignof(BP_Leloi_C_GetOptionalText) == 0x000008, "Wrong alignment on BP_Leloi_C_GetOptionalText");
static_assert(sizeof(BP_Leloi_C_GetOptionalText) == 0x000020, "Wrong size on BP_Leloi_C_GetOptionalText");
static_assert(offsetof(BP_Leloi_C_GetOptionalText, Return) == 0x000000, "Member 'BP_Leloi_C_GetOptionalText::Return' has a wrong offset!");
static_assert(offsetof(BP_Leloi_C_GetOptionalText, Optional_Second_Line) == 0x000010, "Member 'BP_Leloi_C_GetOptionalText::Optional_Second_Line' has a wrong offset!");

// Function BP_Leloi.BP_Leloi_C.GetPriority
// 0x0004 (0x0004 - 0x0000)
struct BP_Leloi_C_GetPriority final
{
public:
	int32                                         Priority;                                          // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Leloi_C_GetPriority) == 0x000004, "Wrong alignment on BP_Leloi_C_GetPriority");
static_assert(sizeof(BP_Leloi_C_GetPriority) == 0x000004, "Wrong size on BP_Leloi_C_GetPriority");
static_assert(offsetof(BP_Leloi_C_GetPriority, Priority) == 0x000000, "Member 'BP_Leloi_C_GetPriority::Priority' has a wrong offset!");

// Function BP_Leloi.BP_Leloi_C.GetWidgetLocation
// 0x0030 (0x0030 - 0x0000)
struct BP_Leloi_C_GetWidgetLocation final
{
public:
	struct FVector                                Location;                                          // 0x0000(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0018(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Leloi_C_GetWidgetLocation) == 0x000008, "Wrong alignment on BP_Leloi_C_GetWidgetLocation");
static_assert(sizeof(BP_Leloi_C_GetWidgetLocation) == 0x000030, "Wrong size on BP_Leloi_C_GetWidgetLocation");
static_assert(offsetof(BP_Leloi_C_GetWidgetLocation, Location) == 0x000000, "Member 'BP_Leloi_C_GetWidgetLocation::Location' has a wrong offset!");
static_assert(offsetof(BP_Leloi_C_GetWidgetLocation, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000018, "Member 'BP_Leloi_C_GetWidgetLocation::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");

// Function BP_Leloi.BP_Leloi_C.HideInteractionWidget
// 0x0001 (0x0001 - 0x0000)
struct BP_Leloi_C_HideInteractionWidget final
{
public:
	bool                                          Return;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Leloi_C_HideInteractionWidget) == 0x000001, "Wrong alignment on BP_Leloi_C_HideInteractionWidget");
static_assert(sizeof(BP_Leloi_C_HideInteractionWidget) == 0x000001, "Wrong size on BP_Leloi_C_HideInteractionWidget");
static_assert(offsetof(BP_Leloi_C_HideInteractionWidget, Return) == 0x000000, "Member 'BP_Leloi_C_HideInteractionWidget::Return' has a wrong offset!");

// Function BP_Leloi.BP_Leloi_C.HighConstrastModeChanged
// 0x0001 (0x0001 - 0x0000)
struct BP_Leloi_C_HighConstrastModeChanged final
{
public:
	bool                                          IsEnabled;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Leloi_C_HighConstrastModeChanged) == 0x000001, "Wrong alignment on BP_Leloi_C_HighConstrastModeChanged");
static_assert(sizeof(BP_Leloi_C_HighConstrastModeChanged) == 0x000001, "Wrong size on BP_Leloi_C_HighConstrastModeChanged");
static_assert(offsetof(BP_Leloi_C_HighConstrastModeChanged, IsEnabled) == 0x000000, "Member 'BP_Leloi_C_HighConstrastModeChanged::IsEnabled' has a wrong offset!");

// Function BP_Leloi.BP_Leloi_C.InteractableCancelInteraction
// 0x0008 (0x0008 - 0x0000)
struct BP_Leloi_C_InteractableCancelInteraction final
{
public:
	class UPrimitiveComponent*                    InteractionComponent;                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Leloi_C_InteractableCancelInteraction) == 0x000008, "Wrong alignment on BP_Leloi_C_InteractableCancelInteraction");
static_assert(sizeof(BP_Leloi_C_InteractableCancelInteraction) == 0x000008, "Wrong size on BP_Leloi_C_InteractableCancelInteraction");
static_assert(offsetof(BP_Leloi_C_InteractableCancelInteraction, InteractionComponent) == 0x000000, "Member 'BP_Leloi_C_InteractableCancelInteraction::InteractionComponent' has a wrong offset!");

// Function BP_Leloi.BP_Leloi_C.InteractPressed
// 0x0008 (0x0008 - 0x0000)
struct BP_Leloi_C_InteractPressed final
{
public:
	class AActor*                                 InteractingActor;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Leloi_C_InteractPressed) == 0x000008, "Wrong alignment on BP_Leloi_C_InteractPressed");
static_assert(sizeof(BP_Leloi_C_InteractPressed) == 0x000008, "Wrong size on BP_Leloi_C_InteractPressed");
static_assert(offsetof(BP_Leloi_C_InteractPressed, InteractingActor) == 0x000000, "Member 'BP_Leloi_C_InteractPressed::InteractingActor' has a wrong offset!");

// Function BP_Leloi.BP_Leloi_C.InteractReleased
// 0x0008 (0x0008 - 0x0000)
struct BP_Leloi_C_InteractReleased final
{
public:
	class AActor*                                 InteractingActor;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Leloi_C_InteractReleased) == 0x000008, "Wrong alignment on BP_Leloi_C_InteractReleased");
static_assert(sizeof(BP_Leloi_C_InteractReleased) == 0x000008, "Wrong size on BP_Leloi_C_InteractReleased");
static_assert(offsetof(BP_Leloi_C_InteractReleased, InteractingActor) == 0x000000, "Member 'BP_Leloi_C_InteractReleased::InteractingActor' has a wrong offset!");

// Function BP_Leloi.BP_Leloi_C.InView
// 0x0028 (0x0028 - 0x0000)
struct BP_Leloi_C_InView final
{
public:
	bool                                          InView_0;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class II_LeloiAnimation_C>   K2Node_DynamicCast_AsI_Leloi_Animation;            // 0x0010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Leloi_C_InView) == 0x000008, "Wrong alignment on BP_Leloi_C_InView");
static_assert(sizeof(BP_Leloi_C_InView) == 0x000028, "Wrong size on BP_Leloi_C_InView");
static_assert(offsetof(BP_Leloi_C_InView, InView_0) == 0x000000, "Member 'BP_Leloi_C_InView::InView_0' has a wrong offset!");
static_assert(offsetof(BP_Leloi_C_InView, CallFunc_GetAnimInstance_ReturnValue) == 0x000008, "Member 'BP_Leloi_C_InView::CallFunc_GetAnimInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Leloi_C_InView, K2Node_DynamicCast_AsI_Leloi_Animation) == 0x000010, "Member 'BP_Leloi_C_InView::K2Node_DynamicCast_AsI_Leloi_Animation' has a wrong offset!");
static_assert(offsetof(BP_Leloi_C_InView, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'BP_Leloi_C_InView::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BP_Leloi.BP_Leloi_C.IsInFocus
// 0x0008 (0x0008 - 0x0000)
struct BP_Leloi_C_IsInFocus final
{
public:
	class AActor*                                 Focusing_Actor;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Leloi_C_IsInFocus) == 0x000008, "Wrong alignment on BP_Leloi_C_IsInFocus");
static_assert(sizeof(BP_Leloi_C_IsInFocus) == 0x000008, "Wrong size on BP_Leloi_C_IsInFocus");
static_assert(offsetof(BP_Leloi_C_IsInFocus, Focusing_Actor) == 0x000000, "Member 'BP_Leloi_C_IsInFocus::Focusing_Actor' has a wrong offset!");

// Function BP_Leloi.BP_Leloi_C.IsInteractable
// 0x0005 (0x0005 - 0x0000)
struct BP_Leloi_C_IsInteractable final
{
public:
	bool                                          Interactable;                                      // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Leloi_C_IsInteractable) == 0x000001, "Wrong alignment on BP_Leloi_C_IsInteractable");
static_assert(sizeof(BP_Leloi_C_IsInteractable) == 0x000005, "Wrong size on BP_Leloi_C_IsInteractable");
static_assert(offsetof(BP_Leloi_C_IsInteractable, Interactable) == 0x000000, "Member 'BP_Leloi_C_IsInteractable::Interactable' has a wrong offset!");
static_assert(offsetof(BP_Leloi_C_IsInteractable, CallFunc_Not_PreBool_ReturnValue) == 0x000001, "Member 'BP_Leloi_C_IsInteractable::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Leloi_C_IsInteractable, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000002, "Member 'BP_Leloi_C_IsInteractable::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Leloi_C_IsInteractable, CallFunc_BooleanAND_ReturnValue) == 0x000003, "Member 'BP_Leloi_C_IsInteractable::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Leloi_C_IsInteractable, CallFunc_BooleanAND_ReturnValue_1) == 0x000004, "Member 'BP_Leloi_C_IsInteractable::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");

// Function BP_Leloi.BP_Leloi_C.JumpToLocation
// 0x0018 (0x0018 - 0x0000)
struct BP_Leloi_C_JumpToLocation final
{
public:
	struct FVector                                Location;                                          // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Leloi_C_JumpToLocation) == 0x000008, "Wrong alignment on BP_Leloi_C_JumpToLocation");
static_assert(sizeof(BP_Leloi_C_JumpToLocation) == 0x000018, "Wrong size on BP_Leloi_C_JumpToLocation");
static_assert(offsetof(BP_Leloi_C_JumpToLocation, Location) == 0x000000, "Member 'BP_Leloi_C_JumpToLocation::Location' has a wrong offset!");

// Function BP_Leloi.BP_Leloi_C.Leloi_Interact
// 0x0008 (0x0008 - 0x0000)
struct BP_Leloi_C_Leloi_Interact final
{
public:
	class AActor*                                 InteractingActor;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Leloi_C_Leloi_Interact) == 0x000008, "Wrong alignment on BP_Leloi_C_Leloi_Interact");
static_assert(sizeof(BP_Leloi_C_Leloi_Interact) == 0x000008, "Wrong size on BP_Leloi_C_Leloi_Interact");
static_assert(offsetof(BP_Leloi_C_Leloi_Interact, InteractingActor) == 0x000000, "Member 'BP_Leloi_C_Leloi_Interact::InteractingActor' has a wrong offset!");

// Function BP_Leloi.BP_Leloi_C.Multi_Leap Attack Animation
// 0x0008 (0x0008 - 0x0000)
struct BP_Leloi_C_Multi_Leap_Attack_Animation final
{
public:
	double                                        VectorLength;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Leloi_C_Multi_Leap_Attack_Animation) == 0x000008, "Wrong alignment on BP_Leloi_C_Multi_Leap_Attack_Animation");
static_assert(sizeof(BP_Leloi_C_Multi_Leap_Attack_Animation) == 0x000008, "Wrong size on BP_Leloi_C_Multi_Leap_Attack_Animation");
static_assert(offsetof(BP_Leloi_C_Multi_Leap_Attack_Animation, VectorLength) == 0x000000, "Member 'BP_Leloi_C_Multi_Leap_Attack_Animation::VectorLength' has a wrong offset!");

// Function BP_Leloi.BP_Leloi_C.OnBlendOut_0127D2E64356528CAC18A387685BCAAB
// 0x0008 (0x0008 - 0x0000)
struct BP_Leloi_C_OnBlendOut_0127D2E64356528CAC18A387685BCAAB final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Leloi_C_OnBlendOut_0127D2E64356528CAC18A387685BCAAB) == 0x000004, "Wrong alignment on BP_Leloi_C_OnBlendOut_0127D2E64356528CAC18A387685BCAAB");
static_assert(sizeof(BP_Leloi_C_OnBlendOut_0127D2E64356528CAC18A387685BCAAB) == 0x000008, "Wrong size on BP_Leloi_C_OnBlendOut_0127D2E64356528CAC18A387685BCAAB");
static_assert(offsetof(BP_Leloi_C_OnBlendOut_0127D2E64356528CAC18A387685BCAAB, NotifyName) == 0x000000, "Member 'BP_Leloi_C_OnBlendOut_0127D2E64356528CAC18A387685BCAAB::NotifyName' has a wrong offset!");

// Function BP_Leloi.BP_Leloi_C.OnBlendOut_93A4C49B4FD8DF18A1098BA37F4B8F2A
// 0x0008 (0x0008 - 0x0000)
struct BP_Leloi_C_OnBlendOut_93A4C49B4FD8DF18A1098BA37F4B8F2A final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Leloi_C_OnBlendOut_93A4C49B4FD8DF18A1098BA37F4B8F2A) == 0x000004, "Wrong alignment on BP_Leloi_C_OnBlendOut_93A4C49B4FD8DF18A1098BA37F4B8F2A");
static_assert(sizeof(BP_Leloi_C_OnBlendOut_93A4C49B4FD8DF18A1098BA37F4B8F2A) == 0x000008, "Wrong size on BP_Leloi_C_OnBlendOut_93A4C49B4FD8DF18A1098BA37F4B8F2A");
static_assert(offsetof(BP_Leloi_C_OnBlendOut_93A4C49B4FD8DF18A1098BA37F4B8F2A, NotifyName) == 0x000000, "Member 'BP_Leloi_C_OnBlendOut_93A4C49B4FD8DF18A1098BA37F4B8F2A::NotifyName' has a wrong offset!");

// Function BP_Leloi.BP_Leloi_C.OnBlendOut_955EB29E4FEFC39DB39E77A7E976A091
// 0x0008 (0x0008 - 0x0000)
struct BP_Leloi_C_OnBlendOut_955EB29E4FEFC39DB39E77A7E976A091 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Leloi_C_OnBlendOut_955EB29E4FEFC39DB39E77A7E976A091) == 0x000004, "Wrong alignment on BP_Leloi_C_OnBlendOut_955EB29E4FEFC39DB39E77A7E976A091");
static_assert(sizeof(BP_Leloi_C_OnBlendOut_955EB29E4FEFC39DB39E77A7E976A091) == 0x000008, "Wrong size on BP_Leloi_C_OnBlendOut_955EB29E4FEFC39DB39E77A7E976A091");
static_assert(offsetof(BP_Leloi_C_OnBlendOut_955EB29E4FEFC39DB39E77A7E976A091, NotifyName) == 0x000000, "Member 'BP_Leloi_C_OnBlendOut_955EB29E4FEFC39DB39E77A7E976A091::NotifyName' has a wrong offset!");

// Function BP_Leloi.BP_Leloi_C.OnBlendOut_F813E04F4F1B614F4C8CF6A16C8F82FA
// 0x0008 (0x0008 - 0x0000)
struct BP_Leloi_C_OnBlendOut_F813E04F4F1B614F4C8CF6A16C8F82FA final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Leloi_C_OnBlendOut_F813E04F4F1B614F4C8CF6A16C8F82FA) == 0x000004, "Wrong alignment on BP_Leloi_C_OnBlendOut_F813E04F4F1B614F4C8CF6A16C8F82FA");
static_assert(sizeof(BP_Leloi_C_OnBlendOut_F813E04F4F1B614F4C8CF6A16C8F82FA) == 0x000008, "Wrong size on BP_Leloi_C_OnBlendOut_F813E04F4F1B614F4C8CF6A16C8F82FA");
static_assert(offsetof(BP_Leloi_C_OnBlendOut_F813E04F4F1B614F4C8CF6A16C8F82FA, NotifyName) == 0x000000, "Member 'BP_Leloi_C_OnBlendOut_F813E04F4F1B614F4C8CF6A16C8F82FA::NotifyName' has a wrong offset!");

// Function BP_Leloi.BP_Leloi_C.OnCompleted_0127D2E64356528CAC18A387685BCAAB
// 0x0008 (0x0008 - 0x0000)
struct BP_Leloi_C_OnCompleted_0127D2E64356528CAC18A387685BCAAB final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Leloi_C_OnCompleted_0127D2E64356528CAC18A387685BCAAB) == 0x000004, "Wrong alignment on BP_Leloi_C_OnCompleted_0127D2E64356528CAC18A387685BCAAB");
static_assert(sizeof(BP_Leloi_C_OnCompleted_0127D2E64356528CAC18A387685BCAAB) == 0x000008, "Wrong size on BP_Leloi_C_OnCompleted_0127D2E64356528CAC18A387685BCAAB");
static_assert(offsetof(BP_Leloi_C_OnCompleted_0127D2E64356528CAC18A387685BCAAB, NotifyName) == 0x000000, "Member 'BP_Leloi_C_OnCompleted_0127D2E64356528CAC18A387685BCAAB::NotifyName' has a wrong offset!");

// Function BP_Leloi.BP_Leloi_C.OnCompleted_93A4C49B4FD8DF18A1098BA37F4B8F2A
// 0x0008 (0x0008 - 0x0000)
struct BP_Leloi_C_OnCompleted_93A4C49B4FD8DF18A1098BA37F4B8F2A final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Leloi_C_OnCompleted_93A4C49B4FD8DF18A1098BA37F4B8F2A) == 0x000004, "Wrong alignment on BP_Leloi_C_OnCompleted_93A4C49B4FD8DF18A1098BA37F4B8F2A");
static_assert(sizeof(BP_Leloi_C_OnCompleted_93A4C49B4FD8DF18A1098BA37F4B8F2A) == 0x000008, "Wrong size on BP_Leloi_C_OnCompleted_93A4C49B4FD8DF18A1098BA37F4B8F2A");
static_assert(offsetof(BP_Leloi_C_OnCompleted_93A4C49B4FD8DF18A1098BA37F4B8F2A, NotifyName) == 0x000000, "Member 'BP_Leloi_C_OnCompleted_93A4C49B4FD8DF18A1098BA37F4B8F2A::NotifyName' has a wrong offset!");

// Function BP_Leloi.BP_Leloi_C.OnCompleted_955EB29E4FEFC39DB39E77A7E976A091
// 0x0008 (0x0008 - 0x0000)
struct BP_Leloi_C_OnCompleted_955EB29E4FEFC39DB39E77A7E976A091 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Leloi_C_OnCompleted_955EB29E4FEFC39DB39E77A7E976A091) == 0x000004, "Wrong alignment on BP_Leloi_C_OnCompleted_955EB29E4FEFC39DB39E77A7E976A091");
static_assert(sizeof(BP_Leloi_C_OnCompleted_955EB29E4FEFC39DB39E77A7E976A091) == 0x000008, "Wrong size on BP_Leloi_C_OnCompleted_955EB29E4FEFC39DB39E77A7E976A091");
static_assert(offsetof(BP_Leloi_C_OnCompleted_955EB29E4FEFC39DB39E77A7E976A091, NotifyName) == 0x000000, "Member 'BP_Leloi_C_OnCompleted_955EB29E4FEFC39DB39E77A7E976A091::NotifyName' has a wrong offset!");

// Function BP_Leloi.BP_Leloi_C.OnCompleted_F813E04F4F1B614F4C8CF6A16C8F82FA
// 0x0008 (0x0008 - 0x0000)
struct BP_Leloi_C_OnCompleted_F813E04F4F1B614F4C8CF6A16C8F82FA final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Leloi_C_OnCompleted_F813E04F4F1B614F4C8CF6A16C8F82FA) == 0x000004, "Wrong alignment on BP_Leloi_C_OnCompleted_F813E04F4F1B614F4C8CF6A16C8F82FA");
static_assert(sizeof(BP_Leloi_C_OnCompleted_F813E04F4F1B614F4C8CF6A16C8F82FA) == 0x000008, "Wrong size on BP_Leloi_C_OnCompleted_F813E04F4F1B614F4C8CF6A16C8F82FA");
static_assert(offsetof(BP_Leloi_C_OnCompleted_F813E04F4F1B614F4C8CF6A16C8F82FA, NotifyName) == 0x000000, "Member 'BP_Leloi_C_OnCompleted_F813E04F4F1B614F4C8CF6A16C8F82FA::NotifyName' has a wrong offset!");

// Function BP_Leloi.BP_Leloi_C.OnInterrupted_0127D2E64356528CAC18A387685BCAAB
// 0x0008 (0x0008 - 0x0000)
struct BP_Leloi_C_OnInterrupted_0127D2E64356528CAC18A387685BCAAB final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Leloi_C_OnInterrupted_0127D2E64356528CAC18A387685BCAAB) == 0x000004, "Wrong alignment on BP_Leloi_C_OnInterrupted_0127D2E64356528CAC18A387685BCAAB");
static_assert(sizeof(BP_Leloi_C_OnInterrupted_0127D2E64356528CAC18A387685BCAAB) == 0x000008, "Wrong size on BP_Leloi_C_OnInterrupted_0127D2E64356528CAC18A387685BCAAB");
static_assert(offsetof(BP_Leloi_C_OnInterrupted_0127D2E64356528CAC18A387685BCAAB, NotifyName) == 0x000000, "Member 'BP_Leloi_C_OnInterrupted_0127D2E64356528CAC18A387685BCAAB::NotifyName' has a wrong offset!");

// Function BP_Leloi.BP_Leloi_C.OnInterrupted_93A4C49B4FD8DF18A1098BA37F4B8F2A
// 0x0008 (0x0008 - 0x0000)
struct BP_Leloi_C_OnInterrupted_93A4C49B4FD8DF18A1098BA37F4B8F2A final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Leloi_C_OnInterrupted_93A4C49B4FD8DF18A1098BA37F4B8F2A) == 0x000004, "Wrong alignment on BP_Leloi_C_OnInterrupted_93A4C49B4FD8DF18A1098BA37F4B8F2A");
static_assert(sizeof(BP_Leloi_C_OnInterrupted_93A4C49B4FD8DF18A1098BA37F4B8F2A) == 0x000008, "Wrong size on BP_Leloi_C_OnInterrupted_93A4C49B4FD8DF18A1098BA37F4B8F2A");
static_assert(offsetof(BP_Leloi_C_OnInterrupted_93A4C49B4FD8DF18A1098BA37F4B8F2A, NotifyName) == 0x000000, "Member 'BP_Leloi_C_OnInterrupted_93A4C49B4FD8DF18A1098BA37F4B8F2A::NotifyName' has a wrong offset!");

// Function BP_Leloi.BP_Leloi_C.OnInterrupted_955EB29E4FEFC39DB39E77A7E976A091
// 0x0008 (0x0008 - 0x0000)
struct BP_Leloi_C_OnInterrupted_955EB29E4FEFC39DB39E77A7E976A091 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Leloi_C_OnInterrupted_955EB29E4FEFC39DB39E77A7E976A091) == 0x000004, "Wrong alignment on BP_Leloi_C_OnInterrupted_955EB29E4FEFC39DB39E77A7E976A091");
static_assert(sizeof(BP_Leloi_C_OnInterrupted_955EB29E4FEFC39DB39E77A7E976A091) == 0x000008, "Wrong size on BP_Leloi_C_OnInterrupted_955EB29E4FEFC39DB39E77A7E976A091");
static_assert(offsetof(BP_Leloi_C_OnInterrupted_955EB29E4FEFC39DB39E77A7E976A091, NotifyName) == 0x000000, "Member 'BP_Leloi_C_OnInterrupted_955EB29E4FEFC39DB39E77A7E976A091::NotifyName' has a wrong offset!");

// Function BP_Leloi.BP_Leloi_C.OnInterrupted_F813E04F4F1B614F4C8CF6A16C8F82FA
// 0x0008 (0x0008 - 0x0000)
struct BP_Leloi_C_OnInterrupted_F813E04F4F1B614F4C8CF6A16C8F82FA final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Leloi_C_OnInterrupted_F813E04F4F1B614F4C8CF6A16C8F82FA) == 0x000004, "Wrong alignment on BP_Leloi_C_OnInterrupted_F813E04F4F1B614F4C8CF6A16C8F82FA");
static_assert(sizeof(BP_Leloi_C_OnInterrupted_F813E04F4F1B614F4C8CF6A16C8F82FA) == 0x000008, "Wrong size on BP_Leloi_C_OnInterrupted_F813E04F4F1B614F4C8CF6A16C8F82FA");
static_assert(offsetof(BP_Leloi_C_OnInterrupted_F813E04F4F1B614F4C8CF6A16C8F82FA, NotifyName) == 0x000000, "Member 'BP_Leloi_C_OnInterrupted_F813E04F4F1B614F4C8CF6A16C8F82FA::NotifyName' has a wrong offset!");

// Function BP_Leloi.BP_Leloi_C.OnNotifyBegin_0127D2E64356528CAC18A387685BCAAB
// 0x0008 (0x0008 - 0x0000)
struct BP_Leloi_C_OnNotifyBegin_0127D2E64356528CAC18A387685BCAAB final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Leloi_C_OnNotifyBegin_0127D2E64356528CAC18A387685BCAAB) == 0x000004, "Wrong alignment on BP_Leloi_C_OnNotifyBegin_0127D2E64356528CAC18A387685BCAAB");
static_assert(sizeof(BP_Leloi_C_OnNotifyBegin_0127D2E64356528CAC18A387685BCAAB) == 0x000008, "Wrong size on BP_Leloi_C_OnNotifyBegin_0127D2E64356528CAC18A387685BCAAB");
static_assert(offsetof(BP_Leloi_C_OnNotifyBegin_0127D2E64356528CAC18A387685BCAAB, NotifyName) == 0x000000, "Member 'BP_Leloi_C_OnNotifyBegin_0127D2E64356528CAC18A387685BCAAB::NotifyName' has a wrong offset!");

// Function BP_Leloi.BP_Leloi_C.OnNotifyBegin_93A4C49B4FD8DF18A1098BA37F4B8F2A
// 0x0008 (0x0008 - 0x0000)
struct BP_Leloi_C_OnNotifyBegin_93A4C49B4FD8DF18A1098BA37F4B8F2A final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Leloi_C_OnNotifyBegin_93A4C49B4FD8DF18A1098BA37F4B8F2A) == 0x000004, "Wrong alignment on BP_Leloi_C_OnNotifyBegin_93A4C49B4FD8DF18A1098BA37F4B8F2A");
static_assert(sizeof(BP_Leloi_C_OnNotifyBegin_93A4C49B4FD8DF18A1098BA37F4B8F2A) == 0x000008, "Wrong size on BP_Leloi_C_OnNotifyBegin_93A4C49B4FD8DF18A1098BA37F4B8F2A");
static_assert(offsetof(BP_Leloi_C_OnNotifyBegin_93A4C49B4FD8DF18A1098BA37F4B8F2A, NotifyName) == 0x000000, "Member 'BP_Leloi_C_OnNotifyBegin_93A4C49B4FD8DF18A1098BA37F4B8F2A::NotifyName' has a wrong offset!");

// Function BP_Leloi.BP_Leloi_C.OnNotifyBegin_955EB29E4FEFC39DB39E77A7E976A091
// 0x0008 (0x0008 - 0x0000)
struct BP_Leloi_C_OnNotifyBegin_955EB29E4FEFC39DB39E77A7E976A091 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Leloi_C_OnNotifyBegin_955EB29E4FEFC39DB39E77A7E976A091) == 0x000004, "Wrong alignment on BP_Leloi_C_OnNotifyBegin_955EB29E4FEFC39DB39E77A7E976A091");
static_assert(sizeof(BP_Leloi_C_OnNotifyBegin_955EB29E4FEFC39DB39E77A7E976A091) == 0x000008, "Wrong size on BP_Leloi_C_OnNotifyBegin_955EB29E4FEFC39DB39E77A7E976A091");
static_assert(offsetof(BP_Leloi_C_OnNotifyBegin_955EB29E4FEFC39DB39E77A7E976A091, NotifyName) == 0x000000, "Member 'BP_Leloi_C_OnNotifyBegin_955EB29E4FEFC39DB39E77A7E976A091::NotifyName' has a wrong offset!");

// Function BP_Leloi.BP_Leloi_C.OnNotifyBegin_F813E04F4F1B614F4C8CF6A16C8F82FA
// 0x0008 (0x0008 - 0x0000)
struct BP_Leloi_C_OnNotifyBegin_F813E04F4F1B614F4C8CF6A16C8F82FA final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Leloi_C_OnNotifyBegin_F813E04F4F1B614F4C8CF6A16C8F82FA) == 0x000004, "Wrong alignment on BP_Leloi_C_OnNotifyBegin_F813E04F4F1B614F4C8CF6A16C8F82FA");
static_assert(sizeof(BP_Leloi_C_OnNotifyBegin_F813E04F4F1B614F4C8CF6A16C8F82FA) == 0x000008, "Wrong size on BP_Leloi_C_OnNotifyBegin_F813E04F4F1B614F4C8CF6A16C8F82FA");
static_assert(offsetof(BP_Leloi_C_OnNotifyBegin_F813E04F4F1B614F4C8CF6A16C8F82FA, NotifyName) == 0x000000, "Member 'BP_Leloi_C_OnNotifyBegin_F813E04F4F1B614F4C8CF6A16C8F82FA::NotifyName' has a wrong offset!");

// Function BP_Leloi.BP_Leloi_C.OnNotifyEnd_0127D2E64356528CAC18A387685BCAAB
// 0x0008 (0x0008 - 0x0000)
struct BP_Leloi_C_OnNotifyEnd_0127D2E64356528CAC18A387685BCAAB final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Leloi_C_OnNotifyEnd_0127D2E64356528CAC18A387685BCAAB) == 0x000004, "Wrong alignment on BP_Leloi_C_OnNotifyEnd_0127D2E64356528CAC18A387685BCAAB");
static_assert(sizeof(BP_Leloi_C_OnNotifyEnd_0127D2E64356528CAC18A387685BCAAB) == 0x000008, "Wrong size on BP_Leloi_C_OnNotifyEnd_0127D2E64356528CAC18A387685BCAAB");
static_assert(offsetof(BP_Leloi_C_OnNotifyEnd_0127D2E64356528CAC18A387685BCAAB, NotifyName) == 0x000000, "Member 'BP_Leloi_C_OnNotifyEnd_0127D2E64356528CAC18A387685BCAAB::NotifyName' has a wrong offset!");

// Function BP_Leloi.BP_Leloi_C.OnNotifyEnd_93A4C49B4FD8DF18A1098BA37F4B8F2A
// 0x0008 (0x0008 - 0x0000)
struct BP_Leloi_C_OnNotifyEnd_93A4C49B4FD8DF18A1098BA37F4B8F2A final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Leloi_C_OnNotifyEnd_93A4C49B4FD8DF18A1098BA37F4B8F2A) == 0x000004, "Wrong alignment on BP_Leloi_C_OnNotifyEnd_93A4C49B4FD8DF18A1098BA37F4B8F2A");
static_assert(sizeof(BP_Leloi_C_OnNotifyEnd_93A4C49B4FD8DF18A1098BA37F4B8F2A) == 0x000008, "Wrong size on BP_Leloi_C_OnNotifyEnd_93A4C49B4FD8DF18A1098BA37F4B8F2A");
static_assert(offsetof(BP_Leloi_C_OnNotifyEnd_93A4C49B4FD8DF18A1098BA37F4B8F2A, NotifyName) == 0x000000, "Member 'BP_Leloi_C_OnNotifyEnd_93A4C49B4FD8DF18A1098BA37F4B8F2A::NotifyName' has a wrong offset!");

// Function BP_Leloi.BP_Leloi_C.OnNotifyEnd_955EB29E4FEFC39DB39E77A7E976A091
// 0x0008 (0x0008 - 0x0000)
struct BP_Leloi_C_OnNotifyEnd_955EB29E4FEFC39DB39E77A7E976A091 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Leloi_C_OnNotifyEnd_955EB29E4FEFC39DB39E77A7E976A091) == 0x000004, "Wrong alignment on BP_Leloi_C_OnNotifyEnd_955EB29E4FEFC39DB39E77A7E976A091");
static_assert(sizeof(BP_Leloi_C_OnNotifyEnd_955EB29E4FEFC39DB39E77A7E976A091) == 0x000008, "Wrong size on BP_Leloi_C_OnNotifyEnd_955EB29E4FEFC39DB39E77A7E976A091");
static_assert(offsetof(BP_Leloi_C_OnNotifyEnd_955EB29E4FEFC39DB39E77A7E976A091, NotifyName) == 0x000000, "Member 'BP_Leloi_C_OnNotifyEnd_955EB29E4FEFC39DB39E77A7E976A091::NotifyName' has a wrong offset!");

// Function BP_Leloi.BP_Leloi_C.OnNotifyEnd_F813E04F4F1B614F4C8CF6A16C8F82FA
// 0x0008 (0x0008 - 0x0000)
struct BP_Leloi_C_OnNotifyEnd_F813E04F4F1B614F4C8CF6A16C8F82FA final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Leloi_C_OnNotifyEnd_F813E04F4F1B614F4C8CF6A16C8F82FA) == 0x000004, "Wrong alignment on BP_Leloi_C_OnNotifyEnd_F813E04F4F1B614F4C8CF6A16C8F82FA");
static_assert(sizeof(BP_Leloi_C_OnNotifyEnd_F813E04F4F1B614F4C8CF6A16C8F82FA) == 0x000008, "Wrong size on BP_Leloi_C_OnNotifyEnd_F813E04F4F1B614F4C8CF6A16C8F82FA");
static_assert(offsetof(BP_Leloi_C_OnNotifyEnd_F813E04F4F1B614F4C8CF6A16C8F82FA, NotifyName) == 0x000000, "Member 'BP_Leloi_C_OnNotifyEnd_F813E04F4F1B614F4C8CF6A16C8F82FA::NotifyName' has a wrong offset!");

// Function BP_Leloi.BP_Leloi_C.OnRep_LeloiAnimationBehaviorState
// 0x0028 (0x0028 - 0x0000)
struct BP_Leloi_C_OnRep_LeloiAnimationBehaviorState final
{
public:
	E_LeloiStates                                 Temp_byte_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_LeloiStates                                 Temp_byte_Variable_1;                              // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_LeloiStates                                 Temp_byte_Variable_2;                              // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_LeloiStates                                 Temp_byte_Variable_3;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_LeloiStates                                 Temp_byte_Variable_4;                              // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_LeloiStates                                 Temp_byte_Variable_5;                              // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_LeloiStates                                 K2Node_Select_Default;                             // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7[0x1];                                        // 0x0007(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class II_LeloiAnimation_C>   K2Node_DynamicCast_AsI_Leloi_Animation;            // 0x0010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Leloi_C_OnRep_LeloiAnimationBehaviorState) == 0x000008, "Wrong alignment on BP_Leloi_C_OnRep_LeloiAnimationBehaviorState");
static_assert(sizeof(BP_Leloi_C_OnRep_LeloiAnimationBehaviorState) == 0x000028, "Wrong size on BP_Leloi_C_OnRep_LeloiAnimationBehaviorState");
static_assert(offsetof(BP_Leloi_C_OnRep_LeloiAnimationBehaviorState, Temp_byte_Variable) == 0x000000, "Member 'BP_Leloi_C_OnRep_LeloiAnimationBehaviorState::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_Leloi_C_OnRep_LeloiAnimationBehaviorState, Temp_byte_Variable_1) == 0x000001, "Member 'BP_Leloi_C_OnRep_LeloiAnimationBehaviorState::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_Leloi_C_OnRep_LeloiAnimationBehaviorState, Temp_byte_Variable_2) == 0x000002, "Member 'BP_Leloi_C_OnRep_LeloiAnimationBehaviorState::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_Leloi_C_OnRep_LeloiAnimationBehaviorState, Temp_byte_Variable_3) == 0x000003, "Member 'BP_Leloi_C_OnRep_LeloiAnimationBehaviorState::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_Leloi_C_OnRep_LeloiAnimationBehaviorState, Temp_byte_Variable_4) == 0x000004, "Member 'BP_Leloi_C_OnRep_LeloiAnimationBehaviorState::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_Leloi_C_OnRep_LeloiAnimationBehaviorState, Temp_byte_Variable_5) == 0x000005, "Member 'BP_Leloi_C_OnRep_LeloiAnimationBehaviorState::Temp_byte_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_Leloi_C_OnRep_LeloiAnimationBehaviorState, K2Node_Select_Default) == 0x000006, "Member 'BP_Leloi_C_OnRep_LeloiAnimationBehaviorState::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_Leloi_C_OnRep_LeloiAnimationBehaviorState, CallFunc_GetAnimInstance_ReturnValue) == 0x000008, "Member 'BP_Leloi_C_OnRep_LeloiAnimationBehaviorState::CallFunc_GetAnimInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Leloi_C_OnRep_LeloiAnimationBehaviorState, K2Node_DynamicCast_AsI_Leloi_Animation) == 0x000010, "Member 'BP_Leloi_C_OnRep_LeloiAnimationBehaviorState::K2Node_DynamicCast_AsI_Leloi_Animation' has a wrong offset!");
static_assert(offsetof(BP_Leloi_C_OnRep_LeloiAnimationBehaviorState, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'BP_Leloi_C_OnRep_LeloiAnimationBehaviorState::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BP_Leloi.BP_Leloi_C.OnRep_LeloiState
// 0x0090 (0x0090 - 0x0000)
struct BP_Leloi_C_OnRep_LeloiState final
{
public:
	E_LeloiStates                                 Temp_byte_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundBase*                             Temp_object_Variable;                              // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_1;                            // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_2;                            // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_3;                            // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_4;                            // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	E_LeloiStates                                 Temp_byte_Variable_1;                              // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0032(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x0033(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_3;                              // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_4;                              // 0x0035(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_LeloiStates                                 Temp_byte_Variable_2;                              // 0x0036(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_37[0x1];                                       // 0x0037(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class UNiagaraSystem*                         Temp_object_Variable_5;                            // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UNiagaraSystem*                         Temp_object_Variable_6;                            // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UNiagaraSystem*                         Temp_object_Variable_7;                            // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UNiagaraSystem*                         Temp_object_Variable_8;                            // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UNiagaraSystem*                         Temp_object_Variable_9;                            // 0x0058(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        CallFunc_SpawnSoundAttached_ReturnValue;           // 0x0060(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        CallFunc_SpawnSoundAttached_ReturnValue_1;         // 0x0068(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_71[0x7];                                       // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundBase*                             K2Node_Select_Default;                             // 0x0078(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UNiagaraSystem*                         K2Node_Select_Default_1;                           // 0x0080(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Select_Default_2;                           // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Leloi_C_OnRep_LeloiState) == 0x000008, "Wrong alignment on BP_Leloi_C_OnRep_LeloiState");
static_assert(sizeof(BP_Leloi_C_OnRep_LeloiState) == 0x000090, "Wrong size on BP_Leloi_C_OnRep_LeloiState");
static_assert(offsetof(BP_Leloi_C_OnRep_LeloiState, Temp_byte_Variable) == 0x000000, "Member 'BP_Leloi_C_OnRep_LeloiState::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_Leloi_C_OnRep_LeloiState, Temp_object_Variable) == 0x000008, "Member 'BP_Leloi_C_OnRep_LeloiState::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BP_Leloi_C_OnRep_LeloiState, Temp_object_Variable_1) == 0x000010, "Member 'BP_Leloi_C_OnRep_LeloiState::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_Leloi_C_OnRep_LeloiState, Temp_object_Variable_2) == 0x000018, "Member 'BP_Leloi_C_OnRep_LeloiState::Temp_object_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_Leloi_C_OnRep_LeloiState, Temp_object_Variable_3) == 0x000020, "Member 'BP_Leloi_C_OnRep_LeloiState::Temp_object_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_Leloi_C_OnRep_LeloiState, Temp_object_Variable_4) == 0x000028, "Member 'BP_Leloi_C_OnRep_LeloiState::Temp_object_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_Leloi_C_OnRep_LeloiState, Temp_byte_Variable_1) == 0x000030, "Member 'BP_Leloi_C_OnRep_LeloiState::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_Leloi_C_OnRep_LeloiState, Temp_bool_Variable) == 0x000031, "Member 'BP_Leloi_C_OnRep_LeloiState::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_Leloi_C_OnRep_LeloiState, Temp_bool_Variable_1) == 0x000032, "Member 'BP_Leloi_C_OnRep_LeloiState::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_Leloi_C_OnRep_LeloiState, Temp_bool_Variable_2) == 0x000033, "Member 'BP_Leloi_C_OnRep_LeloiState::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_Leloi_C_OnRep_LeloiState, Temp_bool_Variable_3) == 0x000034, "Member 'BP_Leloi_C_OnRep_LeloiState::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_Leloi_C_OnRep_LeloiState, Temp_bool_Variable_4) == 0x000035, "Member 'BP_Leloi_C_OnRep_LeloiState::Temp_bool_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_Leloi_C_OnRep_LeloiState, Temp_byte_Variable_2) == 0x000036, "Member 'BP_Leloi_C_OnRep_LeloiState::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_Leloi_C_OnRep_LeloiState, Temp_object_Variable_5) == 0x000038, "Member 'BP_Leloi_C_OnRep_LeloiState::Temp_object_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_Leloi_C_OnRep_LeloiState, Temp_object_Variable_6) == 0x000040, "Member 'BP_Leloi_C_OnRep_LeloiState::Temp_object_Variable_6' has a wrong offset!");
static_assert(offsetof(BP_Leloi_C_OnRep_LeloiState, Temp_object_Variable_7) == 0x000048, "Member 'BP_Leloi_C_OnRep_LeloiState::Temp_object_Variable_7' has a wrong offset!");
static_assert(offsetof(BP_Leloi_C_OnRep_LeloiState, Temp_object_Variable_8) == 0x000050, "Member 'BP_Leloi_C_OnRep_LeloiState::Temp_object_Variable_8' has a wrong offset!");
static_assert(offsetof(BP_Leloi_C_OnRep_LeloiState, Temp_object_Variable_9) == 0x000058, "Member 'BP_Leloi_C_OnRep_LeloiState::Temp_object_Variable_9' has a wrong offset!");
static_assert(offsetof(BP_Leloi_C_OnRep_LeloiState, CallFunc_SpawnSoundAttached_ReturnValue) == 0x000060, "Member 'BP_Leloi_C_OnRep_LeloiState::CallFunc_SpawnSoundAttached_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Leloi_C_OnRep_LeloiState, CallFunc_SpawnSoundAttached_ReturnValue_1) == 0x000068, "Member 'BP_Leloi_C_OnRep_LeloiState::CallFunc_SpawnSoundAttached_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Leloi_C_OnRep_LeloiState, K2Node_SwitchEnum_CmpSuccess) == 0x000070, "Member 'BP_Leloi_C_OnRep_LeloiState::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_Leloi_C_OnRep_LeloiState, K2Node_Select_Default) == 0x000078, "Member 'BP_Leloi_C_OnRep_LeloiState::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_Leloi_C_OnRep_LeloiState, K2Node_Select_Default_1) == 0x000080, "Member 'BP_Leloi_C_OnRep_LeloiState::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BP_Leloi_C_OnRep_LeloiState, K2Node_Select_Default_2) == 0x000088, "Member 'BP_Leloi_C_OnRep_LeloiState::K2Node_Select_Default_2' has a wrong offset!");

// Function BP_Leloi.BP_Leloi_C.PetTheDogCosmetics
// 0x0070 (0x0070 - 0x0000)
struct BP_Leloi_C_PetTheDogCosmetics final
{
public:
	class ABP_MovementCharacter_C*                ResidentCharacter;                                 // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          bEnabled;                                          // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A[0x2];                                        // 0x000A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_real_Variable;                                // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_real_Variable_1;                              // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Select_Default;                             // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue;              // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class II_LeloiAnimation_C>   K2Node_DynamicCast_AsI_Leloi_Animation;            // 0x0028(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class II_LeloiAnimation_C>   K2Node_DynamicCast_AsI_Leloi_Animation_1;          // 0x0040(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class II_LeloiAnimation_C>   K2Node_DynamicCast_AsI_Leloi_Animation_2;          // 0x0058(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Leloi_C_PetTheDogCosmetics) == 0x000008, "Wrong alignment on BP_Leloi_C_PetTheDogCosmetics");
static_assert(sizeof(BP_Leloi_C_PetTheDogCosmetics) == 0x000070, "Wrong size on BP_Leloi_C_PetTheDogCosmetics");
static_assert(offsetof(BP_Leloi_C_PetTheDogCosmetics, ResidentCharacter) == 0x000000, "Member 'BP_Leloi_C_PetTheDogCosmetics::ResidentCharacter' has a wrong offset!");
static_assert(offsetof(BP_Leloi_C_PetTheDogCosmetics, bEnabled) == 0x000008, "Member 'BP_Leloi_C_PetTheDogCosmetics::bEnabled' has a wrong offset!");
static_assert(offsetof(BP_Leloi_C_PetTheDogCosmetics, Temp_bool_Variable) == 0x000009, "Member 'BP_Leloi_C_PetTheDogCosmetics::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_Leloi_C_PetTheDogCosmetics, Temp_real_Variable) == 0x00000C, "Member 'BP_Leloi_C_PetTheDogCosmetics::Temp_real_Variable' has a wrong offset!");
static_assert(offsetof(BP_Leloi_C_PetTheDogCosmetics, Temp_real_Variable_1) == 0x000010, "Member 'BP_Leloi_C_PetTheDogCosmetics::Temp_real_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_Leloi_C_PetTheDogCosmetics, CallFunc_Not_PreBool_ReturnValue) == 0x000014, "Member 'BP_Leloi_C_PetTheDogCosmetics::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Leloi_C_PetTheDogCosmetics, K2Node_Select_Default) == 0x000018, "Member 'BP_Leloi_C_PetTheDogCosmetics::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_Leloi_C_PetTheDogCosmetics, CallFunc_GetAnimInstance_ReturnValue) == 0x000020, "Member 'BP_Leloi_C_PetTheDogCosmetics::CallFunc_GetAnimInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Leloi_C_PetTheDogCosmetics, K2Node_DynamicCast_AsI_Leloi_Animation) == 0x000028, "Member 'BP_Leloi_C_PetTheDogCosmetics::K2Node_DynamicCast_AsI_Leloi_Animation' has a wrong offset!");
static_assert(offsetof(BP_Leloi_C_PetTheDogCosmetics, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'BP_Leloi_C_PetTheDogCosmetics::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_Leloi_C_PetTheDogCosmetics, K2Node_DynamicCast_AsI_Leloi_Animation_1) == 0x000040, "Member 'BP_Leloi_C_PetTheDogCosmetics::K2Node_DynamicCast_AsI_Leloi_Animation_1' has a wrong offset!");
static_assert(offsetof(BP_Leloi_C_PetTheDogCosmetics, K2Node_DynamicCast_bSuccess_1) == 0x000050, "Member 'BP_Leloi_C_PetTheDogCosmetics::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_Leloi_C_PetTheDogCosmetics, K2Node_DynamicCast_AsI_Leloi_Animation_2) == 0x000058, "Member 'BP_Leloi_C_PetTheDogCosmetics::K2Node_DynamicCast_AsI_Leloi_Animation_2' has a wrong offset!");
static_assert(offsetof(BP_Leloi_C_PetTheDogCosmetics, K2Node_DynamicCast_bSuccess_2) == 0x000068, "Member 'BP_Leloi_C_PetTheDogCosmetics::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");

// Function BP_Leloi.BP_Leloi_C.PostInteract
// 0x0010 (0x0010 - 0x0000)
struct BP_Leloi_C_PostInteract final
{
public:
	class AActor*                                 InteractingActor;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    InteractionComponent;                              // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Leloi_C_PostInteract) == 0x000008, "Wrong alignment on BP_Leloi_C_PostInteract");
static_assert(sizeof(BP_Leloi_C_PostInteract) == 0x000010, "Wrong size on BP_Leloi_C_PostInteract");
static_assert(offsetof(BP_Leloi_C_PostInteract, InteractingActor) == 0x000000, "Member 'BP_Leloi_C_PostInteract::InteractingActor' has a wrong offset!");
static_assert(offsetof(BP_Leloi_C_PostInteract, InteractionComponent) == 0x000008, "Member 'BP_Leloi_C_PostInteract::InteractionComponent' has a wrong offset!");

// Function BP_Leloi.BP_Leloi_C.PreInteract
// 0x0010 (0x0010 - 0x0000)
struct BP_Leloi_C_PreInteract final
{
public:
	class AActor*                                 InteractingActor;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    InteractionComponent;                              // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Leloi_C_PreInteract) == 0x000008, "Wrong alignment on BP_Leloi_C_PreInteract");
static_assert(sizeof(BP_Leloi_C_PreInteract) == 0x000010, "Wrong size on BP_Leloi_C_PreInteract");
static_assert(offsetof(BP_Leloi_C_PreInteract, InteractingActor) == 0x000000, "Member 'BP_Leloi_C_PreInteract::InteractingActor' has a wrong offset!");
static_assert(offsetof(BP_Leloi_C_PreInteract, InteractionComponent) == 0x000008, "Member 'BP_Leloi_C_PreInteract::InteractionComponent' has a wrong offset!");

// Function BP_Leloi.BP_Leloi_C.RegisterInteracter
// 0x0010 (0x0010 - 0x0000)
struct BP_Leloi_C_RegisterInteracter final
{
public:
	class UPrimitiveComponent*                    InteractionComponent;                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 InteractingActor;                                  // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Leloi_C_RegisterInteracter) == 0x000008, "Wrong alignment on BP_Leloi_C_RegisterInteracter");
static_assert(sizeof(BP_Leloi_C_RegisterInteracter) == 0x000010, "Wrong size on BP_Leloi_C_RegisterInteracter");
static_assert(offsetof(BP_Leloi_C_RegisterInteracter, InteractionComponent) == 0x000000, "Member 'BP_Leloi_C_RegisterInteracter::InteractionComponent' has a wrong offset!");
static_assert(offsetof(BP_Leloi_C_RegisterInteracter, InteractingActor) == 0x000008, "Member 'BP_Leloi_C_RegisterInteracter::InteractingActor' has a wrong offset!");

// Function BP_Leloi.BP_Leloi_C.Set Leloi State Cosmetics
// 0x0001 (0x0001 - 0x0000)
struct BP_Leloi_C_Set_Leloi_State_Cosmetics final
{
public:
	E_LeloiStates                                 Input;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Leloi_C_Set_Leloi_State_Cosmetics) == 0x000001, "Wrong alignment on BP_Leloi_C_Set_Leloi_State_Cosmetics");
static_assert(sizeof(BP_Leloi_C_Set_Leloi_State_Cosmetics) == 0x000001, "Wrong size on BP_Leloi_C_Set_Leloi_State_Cosmetics");
static_assert(offsetof(BP_Leloi_C_Set_Leloi_State_Cosmetics, Input) == 0x000000, "Member 'BP_Leloi_C_Set_Leloi_State_Cosmetics::Input' has a wrong offset!");

// Function BP_Leloi.BP_Leloi_C.SetBarkingAlpha
// 0x0008 (0x0008 - 0x0000)
struct BP_Leloi_C_SetBarkingAlpha final
{
public:
	double                                        Barking;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Leloi_C_SetBarkingAlpha) == 0x000008, "Wrong alignment on BP_Leloi_C_SetBarkingAlpha");
static_assert(sizeof(BP_Leloi_C_SetBarkingAlpha) == 0x000008, "Wrong size on BP_Leloi_C_SetBarkingAlpha");
static_assert(offsetof(BP_Leloi_C_SetBarkingAlpha, Barking) == 0x000000, "Member 'BP_Leloi_C_SetBarkingAlpha::Barking' has a wrong offset!");

// Function BP_Leloi.BP_Leloi_C.SetBehaviourState
// 0x0001 (0x0001 - 0x0000)
struct BP_Leloi_C_SetBehaviourState final
{
public:
	E_LeloiStates                                 BehaviourState;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Leloi_C_SetBehaviourState) == 0x000001, "Wrong alignment on BP_Leloi_C_SetBehaviourState");
static_assert(sizeof(BP_Leloi_C_SetBehaviourState) == 0x000001, "Wrong size on BP_Leloi_C_SetBehaviourState");
static_assert(offsetof(BP_Leloi_C_SetBehaviourState, BehaviourState) == 0x000000, "Member 'BP_Leloi_C_SetBehaviourState::BehaviourState' has a wrong offset!");

// Function BP_Leloi.BP_Leloi_C.SetBeingPet
// 0x0001 (0x0001 - 0x0000)
struct BP_Leloi_C_SetBeingPet final
{
public:
	bool                                          bBeingPet_0;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Leloi_C_SetBeingPet) == 0x000001, "Wrong alignment on BP_Leloi_C_SetBeingPet");
static_assert(sizeof(BP_Leloi_C_SetBeingPet) == 0x000001, "Wrong size on BP_Leloi_C_SetBeingPet");
static_assert(offsetof(BP_Leloi_C_SetBeingPet, bBeingPet_0) == 0x000000, "Member 'BP_Leloi_C_SetBeingPet::bBeingPet_0' has a wrong offset!");

// Function BP_Leloi.BP_Leloi_C.SetBeingPetted
// 0x0010 (0x0010 - 0x0000)
struct BP_Leloi_C_SetBeingPetted final
{
public:
	bool                                          BoolValue;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBlackboardComponent*                   CallFunc_GetBlackboard_ReturnValue;                // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Leloi_C_SetBeingPetted) == 0x000008, "Wrong alignment on BP_Leloi_C_SetBeingPetted");
static_assert(sizeof(BP_Leloi_C_SetBeingPetted) == 0x000010, "Wrong size on BP_Leloi_C_SetBeingPetted");
static_assert(offsetof(BP_Leloi_C_SetBeingPetted, BoolValue) == 0x000000, "Member 'BP_Leloi_C_SetBeingPetted::BoolValue' has a wrong offset!");
static_assert(offsetof(BP_Leloi_C_SetBeingPetted, CallFunc_GetBlackboard_ReturnValue) == 0x000008, "Member 'BP_Leloi_C_SetBeingPetted::CallFunc_GetBlackboard_ReturnValue' has a wrong offset!");

// Function BP_Leloi.BP_Leloi_C.SetBreathingAlpha
// 0x0008 (0x0008 - 0x0000)
struct BP_Leloi_C_SetBreathingAlpha final
{
public:
	double                                        Breathing;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Leloi_C_SetBreathingAlpha) == 0x000008, "Wrong alignment on BP_Leloi_C_SetBreathingAlpha");
static_assert(sizeof(BP_Leloi_C_SetBreathingAlpha) == 0x000008, "Wrong size on BP_Leloi_C_SetBreathingAlpha");
static_assert(offsetof(BP_Leloi_C_SetBreathingAlpha, Breathing) == 0x000000, "Member 'BP_Leloi_C_SetBreathingAlpha::Breathing' has a wrong offset!");

// Function BP_Leloi.BP_Leloi_C.SetHighContrastMode
// 0x0060 (0x0060 - 0x0000)
struct BP_Leloi_C_SetHighContrastMode final
{
public:
	bool                                          Enabled;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Conv_BoolToDouble_ReturnValue;            // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetTeamID_ReturnValue;                    // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetLocalPlayerTeamId_ReturnValue;         // 0x001D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x001E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1F[0x1];                                       // 0x001F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UMaterialInterface*>             CallFunc_GetMaterials_ReturnValue;                 // 0x0020(0x0010)(ReferenceParm)
	double                                        CallFunc_Conv_BoolToDouble_ReturnValue_1;          // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     CallFunc_Array_Get_Item;                           // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51[0x3];                                       // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast; // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_1; // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Leloi_C_SetHighContrastMode) == 0x000008, "Wrong alignment on BP_Leloi_C_SetHighContrastMode");
static_assert(sizeof(BP_Leloi_C_SetHighContrastMode) == 0x000060, "Wrong size on BP_Leloi_C_SetHighContrastMode");
static_assert(offsetof(BP_Leloi_C_SetHighContrastMode, Enabled) == 0x000000, "Member 'BP_Leloi_C_SetHighContrastMode::Enabled' has a wrong offset!");
static_assert(offsetof(BP_Leloi_C_SetHighContrastMode, CallFunc_Conv_BoolToDouble_ReturnValue) == 0x000008, "Member 'BP_Leloi_C_SetHighContrastMode::CallFunc_Conv_BoolToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Leloi_C_SetHighContrastMode, Temp_int_Array_Index_Variable) == 0x000010, "Member 'BP_Leloi_C_SetHighContrastMode::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_Leloi_C_SetHighContrastMode, Temp_int_Loop_Counter_Variable) == 0x000014, "Member 'BP_Leloi_C_SetHighContrastMode::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_Leloi_C_SetHighContrastMode, CallFunc_Add_IntInt_ReturnValue) == 0x000018, "Member 'BP_Leloi_C_SetHighContrastMode::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Leloi_C_SetHighContrastMode, CallFunc_GetTeamID_ReturnValue) == 0x00001C, "Member 'BP_Leloi_C_SetHighContrastMode::CallFunc_GetTeamID_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Leloi_C_SetHighContrastMode, CallFunc_GetLocalPlayerTeamId_ReturnValue) == 0x00001D, "Member 'BP_Leloi_C_SetHighContrastMode::CallFunc_GetLocalPlayerTeamId_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Leloi_C_SetHighContrastMode, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x00001E, "Member 'BP_Leloi_C_SetHighContrastMode::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Leloi_C_SetHighContrastMode, CallFunc_GetMaterials_ReturnValue) == 0x000020, "Member 'BP_Leloi_C_SetHighContrastMode::CallFunc_GetMaterials_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Leloi_C_SetHighContrastMode, CallFunc_Conv_BoolToDouble_ReturnValue_1) == 0x000030, "Member 'BP_Leloi_C_SetHighContrastMode::CallFunc_Conv_BoolToDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Leloi_C_SetHighContrastMode, CallFunc_Array_Get_Item) == 0x000038, "Member 'BP_Leloi_C_SetHighContrastMode::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_Leloi_C_SetHighContrastMode, CallFunc_Array_Length_ReturnValue) == 0x000040, "Member 'BP_Leloi_C_SetHighContrastMode::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Leloi_C_SetHighContrastMode, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x000048, "Member 'BP_Leloi_C_SetHighContrastMode::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Leloi_C_SetHighContrastMode, CallFunc_Less_IntInt_ReturnValue) == 0x000050, "Member 'BP_Leloi_C_SetHighContrastMode::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Leloi_C_SetHighContrastMode, CallFunc_SetScalarParameterValue_Value_ImplicitCast) == 0x000054, "Member 'BP_Leloi_C_SetHighContrastMode::CallFunc_SetScalarParameterValue_Value_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_Leloi_C_SetHighContrastMode, CallFunc_SetScalarParameterValue_Value_ImplicitCast_1) == 0x000058, "Member 'BP_Leloi_C_SetHighContrastMode::CallFunc_SetScalarParameterValue_Value_ImplicitCast_1' has a wrong offset!");

// Function BP_Leloi.BP_Leloi_C.SetHoveredComponent
// 0x0010 (0x0010 - 0x0000)
struct BP_Leloi_C_SetHoveredComponent final
{
public:
	class UInteractionComponent_C*                HoveredComponent;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          Void;                                              // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Leloi_C_SetHoveredComponent) == 0x000008, "Wrong alignment on BP_Leloi_C_SetHoveredComponent");
static_assert(sizeof(BP_Leloi_C_SetHoveredComponent) == 0x000010, "Wrong size on BP_Leloi_C_SetHoveredComponent");
static_assert(offsetof(BP_Leloi_C_SetHoveredComponent, HoveredComponent) == 0x000000, "Member 'BP_Leloi_C_SetHoveredComponent::HoveredComponent' has a wrong offset!");
static_assert(offsetof(BP_Leloi_C_SetHoveredComponent, Void) == 0x000008, "Member 'BP_Leloi_C_SetHoveredComponent::Void' has a wrong offset!");

// Function BP_Leloi.BP_Leloi_C.SetIdleState
// 0x0001 (0x0001 - 0x0000)
struct BP_Leloi_C_SetIdleState final
{
public:
	ELeloiIdleStates                              IdleState;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Leloi_C_SetIdleState) == 0x000001, "Wrong alignment on BP_Leloi_C_SetIdleState");
static_assert(sizeof(BP_Leloi_C_SetIdleState) == 0x000001, "Wrong size on BP_Leloi_C_SetIdleState");
static_assert(offsetof(BP_Leloi_C_SetIdleState, IdleState) == 0x000000, "Member 'BP_Leloi_C_SetIdleState::IdleState' has a wrong offset!");

// Function BP_Leloi.BP_Leloi_C.SetInteractable
// 0x0001 (0x0001 - 0x0000)
struct BP_Leloi_C_SetInteractable final
{
public:
	bool                                          Interactable;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Leloi_C_SetInteractable) == 0x000001, "Wrong alignment on BP_Leloi_C_SetInteractable");
static_assert(sizeof(BP_Leloi_C_SetInteractable) == 0x000001, "Wrong size on BP_Leloi_C_SetInteractable");
static_assert(offsetof(BP_Leloi_C_SetInteractable, Interactable) == 0x000000, "Member 'BP_Leloi_C_SetInteractable::Interactable' has a wrong offset!");

// Function BP_Leloi.BP_Leloi_C.SetInteractablePlayer
// 0x0008 (0x0008 - 0x0000)
struct BP_Leloi_C_SetInteractablePlayer final
{
public:
	class ABP_MovementCharacter_C*                PlayerRef;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Leloi_C_SetInteractablePlayer) == 0x000008, "Wrong alignment on BP_Leloi_C_SetInteractablePlayer");
static_assert(sizeof(BP_Leloi_C_SetInteractablePlayer) == 0x000008, "Wrong size on BP_Leloi_C_SetInteractablePlayer");
static_assert(offsetof(BP_Leloi_C_SetInteractablePlayer, PlayerRef) == 0x000000, "Member 'BP_Leloi_C_SetInteractablePlayer::PlayerRef' has a wrong offset!");

// Function BP_Leloi.BP_Leloi_C.SetMovementSpeed
// 0x000C (0x000C - 0x0000)
struct BP_Leloi_C_SetMovementSpeed final
{
public:
	E_LeloiStates                                 State;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Void;                                              // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_LeloiStates                                 Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3[0x1];                                        // 0x0003(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_real_Variable;                                // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default;                             // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Leloi_C_SetMovementSpeed) == 0x000004, "Wrong alignment on BP_Leloi_C_SetMovementSpeed");
static_assert(sizeof(BP_Leloi_C_SetMovementSpeed) == 0x00000C, "Wrong size on BP_Leloi_C_SetMovementSpeed");
static_assert(offsetof(BP_Leloi_C_SetMovementSpeed, State) == 0x000000, "Member 'BP_Leloi_C_SetMovementSpeed::State' has a wrong offset!");
static_assert(offsetof(BP_Leloi_C_SetMovementSpeed, Void) == 0x000001, "Member 'BP_Leloi_C_SetMovementSpeed::Void' has a wrong offset!");
static_assert(offsetof(BP_Leloi_C_SetMovementSpeed, Temp_byte_Variable) == 0x000002, "Member 'BP_Leloi_C_SetMovementSpeed::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_Leloi_C_SetMovementSpeed, Temp_real_Variable) == 0x000004, "Member 'BP_Leloi_C_SetMovementSpeed::Temp_real_Variable' has a wrong offset!");
static_assert(offsetof(BP_Leloi_C_SetMovementSpeed, K2Node_Select_Default) == 0x000008, "Member 'BP_Leloi_C_SetMovementSpeed::K2Node_Select_Default' has a wrong offset!");

// Function BP_Leloi.BP_Leloi_C.SetPlayerInView
// 0x0001 (0x0001 - 0x0000)
struct BP_Leloi_C_SetPlayerInView final
{
public:
	bool                                          InView_0;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Leloi_C_SetPlayerInView) == 0x000001, "Wrong alignment on BP_Leloi_C_SetPlayerInView");
static_assert(sizeof(BP_Leloi_C_SetPlayerInView) == 0x000001, "Wrong size on BP_Leloi_C_SetPlayerInView");
static_assert(offsetof(BP_Leloi_C_SetPlayerInView, InView_0) == 0x000000, "Member 'BP_Leloi_C_SetPlayerInView::InView_0' has a wrong offset!");

// Function BP_Leloi.BP_Leloi_C.SetSitting
// 0x0001 (0x0001 - 0x0000)
struct BP_Leloi_C_SetSitting final
{
public:
	bool                                          Sitting;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Leloi_C_SetSitting) == 0x000001, "Wrong alignment on BP_Leloi_C_SetSitting");
static_assert(sizeof(BP_Leloi_C_SetSitting) == 0x000001, "Wrong size on BP_Leloi_C_SetSitting");
static_assert(offsetof(BP_Leloi_C_SetSitting, Sitting) == 0x000000, "Member 'BP_Leloi_C_SetSitting::Sitting' has a wrong offset!");

// Function BP_Leloi.BP_Leloi_C.SetState
// 0x0001 (0x0001 - 0x0000)
struct BP_Leloi_C_SetState final
{
public:
	ELeloiStates                                  State;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Leloi_C_SetState) == 0x000001, "Wrong alignment on BP_Leloi_C_SetState");
static_assert(sizeof(BP_Leloi_C_SetState) == 0x000001, "Wrong size on BP_Leloi_C_SetState");
static_assert(offsetof(BP_Leloi_C_SetState, State) == 0x000000, "Member 'BP_Leloi_C_SetState::State' has a wrong offset!");

// Function BP_Leloi.BP_Leloi_C.SetupOutlines
// 0x002C (0x002C - 0x0000)
struct BP_Leloi_C_SetupOutlines final
{
public:
	ETeamType                                     Temp_byte_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetTeamID_ReturnValue;                    // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETeamType                                     CallFunc_GetTeamTypeFromTeamId_ReturnValue;        // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E[0x2];                                        // 0x000E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           CallFunc_MakeLiteralGameplayTag_ReturnValue;       // 0x0010(0x0008)(NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetStencilValueFromMask_ReturnValue;      // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           CallFunc_MakeLiteralGameplayTag_ReturnValue_1;     // 0x001C(0x0008)(NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetStencilValueFromMask_ReturnValue_1;    // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Select_Default;                             // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Leloi_C_SetupOutlines) == 0x000004, "Wrong alignment on BP_Leloi_C_SetupOutlines");
static_assert(sizeof(BP_Leloi_C_SetupOutlines) == 0x00002C, "Wrong size on BP_Leloi_C_SetupOutlines");
static_assert(offsetof(BP_Leloi_C_SetupOutlines, Temp_byte_Variable) == 0x000000, "Member 'BP_Leloi_C_SetupOutlines::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_Leloi_C_SetupOutlines, Temp_int_Variable) == 0x000004, "Member 'BP_Leloi_C_SetupOutlines::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_Leloi_C_SetupOutlines, Temp_int_Variable_1) == 0x000008, "Member 'BP_Leloi_C_SetupOutlines::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_Leloi_C_SetupOutlines, CallFunc_GetTeamID_ReturnValue) == 0x00000C, "Member 'BP_Leloi_C_SetupOutlines::CallFunc_GetTeamID_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Leloi_C_SetupOutlines, CallFunc_GetTeamTypeFromTeamId_ReturnValue) == 0x00000D, "Member 'BP_Leloi_C_SetupOutlines::CallFunc_GetTeamTypeFromTeamId_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Leloi_C_SetupOutlines, CallFunc_MakeLiteralGameplayTag_ReturnValue) == 0x000010, "Member 'BP_Leloi_C_SetupOutlines::CallFunc_MakeLiteralGameplayTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Leloi_C_SetupOutlines, CallFunc_GetStencilValueFromMask_ReturnValue) == 0x000018, "Member 'BP_Leloi_C_SetupOutlines::CallFunc_GetStencilValueFromMask_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Leloi_C_SetupOutlines, CallFunc_MakeLiteralGameplayTag_ReturnValue_1) == 0x00001C, "Member 'BP_Leloi_C_SetupOutlines::CallFunc_MakeLiteralGameplayTag_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Leloi_C_SetupOutlines, CallFunc_GetStencilValueFromMask_ReturnValue_1) == 0x000024, "Member 'BP_Leloi_C_SetupOutlines::CallFunc_GetStencilValueFromMask_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Leloi_C_SetupOutlines, K2Node_Select_Default) == 0x000028, "Member 'BP_Leloi_C_SetupOutlines::K2Node_Select_Default' has a wrong offset!");

// Function BP_Leloi.BP_Leloi_C.SetupPings
// 0x00D8 (0x00D8 - 0x0000)
struct BP_Leloi_C_SetupPings final
{
public:
	ETeamType                                     Temp_byte_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftClassPtr<class UClass>                   Temp_softclass_Variable;                           // 0x0008(0x0028)(UObjectWrapper, HasGetValueTypeHash)
	TSoftClassPtr<class UClass>                   Temp_softclass_Variable_1;                         // 0x0030(0x0028)(UObjectWrapper, HasGetValueTypeHash)
	TSoftClassPtr<class UClass>                   Temp_softclass_Variable_2;                         // 0x0058(0x0028)(UObjectWrapper, HasGetValueTypeHash)
	TSoftClassPtr<class UClass>                   Temp_softclass_Variable_3;                         // 0x0080(0x0028)(UObjectWrapper, HasGetValueTypeHash)
	uint8                                         CallFunc_GetTeamID_ReturnValue;                    // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETeamType                                     CallFunc_GetTeamTypeFromTeamId_ReturnValue;        // 0x00A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_AA[0x6];                                       // 0x00AA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftClassPtr<class UClass>                   K2Node_Select_Default;                             // 0x00B0(0x0028)(UObjectWrapper, HasGetValueTypeHash)
};
static_assert(alignof(BP_Leloi_C_SetupPings) == 0x000008, "Wrong alignment on BP_Leloi_C_SetupPings");
static_assert(sizeof(BP_Leloi_C_SetupPings) == 0x0000D8, "Wrong size on BP_Leloi_C_SetupPings");
static_assert(offsetof(BP_Leloi_C_SetupPings, Temp_byte_Variable) == 0x000000, "Member 'BP_Leloi_C_SetupPings::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_Leloi_C_SetupPings, Temp_softclass_Variable) == 0x000008, "Member 'BP_Leloi_C_SetupPings::Temp_softclass_Variable' has a wrong offset!");
static_assert(offsetof(BP_Leloi_C_SetupPings, Temp_softclass_Variable_1) == 0x000030, "Member 'BP_Leloi_C_SetupPings::Temp_softclass_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_Leloi_C_SetupPings, Temp_softclass_Variable_2) == 0x000058, "Member 'BP_Leloi_C_SetupPings::Temp_softclass_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_Leloi_C_SetupPings, Temp_softclass_Variable_3) == 0x000080, "Member 'BP_Leloi_C_SetupPings::Temp_softclass_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_Leloi_C_SetupPings, CallFunc_GetTeamID_ReturnValue) == 0x0000A8, "Member 'BP_Leloi_C_SetupPings::CallFunc_GetTeamID_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Leloi_C_SetupPings, CallFunc_GetTeamTypeFromTeamId_ReturnValue) == 0x0000A9, "Member 'BP_Leloi_C_SetupPings::CallFunc_GetTeamTypeFromTeamId_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Leloi_C_SetupPings, K2Node_Select_Default) == 0x0000B0, "Member 'BP_Leloi_C_SetupPings::K2Node_Select_Default' has a wrong offset!");

// Function BP_Leloi.BP_Leloi_C.Teleport Leloi To Target
// 0x0018 (0x0018 - 0x0000)
struct BP_Leloi_C_Teleport_Leloi_To_Target final
{
public:
	struct FVector                                DestLocation;                                      // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Leloi_C_Teleport_Leloi_To_Target) == 0x000008, "Wrong alignment on BP_Leloi_C_Teleport_Leloi_To_Target");
static_assert(sizeof(BP_Leloi_C_Teleport_Leloi_To_Target) == 0x000018, "Wrong size on BP_Leloi_C_Teleport_Leloi_To_Target");
static_assert(offsetof(BP_Leloi_C_Teleport_Leloi_To_Target, DestLocation) == 0x000000, "Member 'BP_Leloi_C_Teleport_Leloi_To_Target::DestLocation' has a wrong offset!");

// Function BP_Leloi.BP_Leloi_C.Teleport To Location
// 0x0018 (0x0018 - 0x0000)
struct BP_Leloi_C_Teleport_To_Location final
{
public:
	struct FVector                                DestLocation;                                      // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Leloi_C_Teleport_To_Location) == 0x000008, "Wrong alignment on BP_Leloi_C_Teleport_To_Location");
static_assert(sizeof(BP_Leloi_C_Teleport_To_Location) == 0x000018, "Wrong size on BP_Leloi_C_Teleport_To_Location");
static_assert(offsetof(BP_Leloi_C_Teleport_To_Location, DestLocation) == 0x000000, "Member 'BP_Leloi_C_Teleport_To_Location::DestLocation' has a wrong offset!");

// Function BP_Leloi.BP_Leloi_C.UnregisterInteracter
// 0x0010 (0x0010 - 0x0000)
struct BP_Leloi_C_UnregisterInteracter final
{
public:
	class UPrimitiveComponent*                    InteractionComponent;                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 InteractingActor;                                  // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Leloi_C_UnregisterInteracter) == 0x000008, "Wrong alignment on BP_Leloi_C_UnregisterInteracter");
static_assert(sizeof(BP_Leloi_C_UnregisterInteracter) == 0x000010, "Wrong size on BP_Leloi_C_UnregisterInteracter");
static_assert(offsetof(BP_Leloi_C_UnregisterInteracter, InteractionComponent) == 0x000000, "Member 'BP_Leloi_C_UnregisterInteracter::InteractionComponent' has a wrong offset!");
static_assert(offsetof(BP_Leloi_C_UnregisterInteracter, InteractingActor) == 0x000008, "Member 'BP_Leloi_C_UnregisterInteracter::InteractingActor' has a wrong offset!");

// Function BP_Leloi.BP_Leloi_C.GetInteractionDuration
// 0x0010 (0x0010 - 0x0000)
struct BP_Leloi_C_GetInteractionDuration final
{
public:
	class UPrimitiveComponent*                    InteractionComponent;                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	float                                         ReturnValue;                                       // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Leloi_C_GetInteractionDuration) == 0x000008, "Wrong alignment on BP_Leloi_C_GetInteractionDuration");
static_assert(sizeof(BP_Leloi_C_GetInteractionDuration) == 0x000010, "Wrong size on BP_Leloi_C_GetInteractionDuration");
static_assert(offsetof(BP_Leloi_C_GetInteractionDuration, InteractionComponent) == 0x000000, "Member 'BP_Leloi_C_GetInteractionDuration::InteractionComponent' has a wrong offset!");
static_assert(offsetof(BP_Leloi_C_GetInteractionDuration, ReturnValue) == 0x000008, "Member 'BP_Leloi_C_GetInteractionDuration::ReturnValue' has a wrong offset!");

// Function BP_Leloi.BP_Leloi_C.GetPostInteractSyncType
// 0x0010 (0x0010 - 0x0000)
struct BP_Leloi_C_GetPostInteractSyncType final
{
public:
	bool                                          bShouldSync;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EAbilityTaskNetSyncType                       Type;                                              // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    InteractionComponent;                              // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Leloi_C_GetPostInteractSyncType) == 0x000008, "Wrong alignment on BP_Leloi_C_GetPostInteractSyncType");
static_assert(sizeof(BP_Leloi_C_GetPostInteractSyncType) == 0x000010, "Wrong size on BP_Leloi_C_GetPostInteractSyncType");
static_assert(offsetof(BP_Leloi_C_GetPostInteractSyncType, bShouldSync) == 0x000000, "Member 'BP_Leloi_C_GetPostInteractSyncType::bShouldSync' has a wrong offset!");
static_assert(offsetof(BP_Leloi_C_GetPostInteractSyncType, Type) == 0x000001, "Member 'BP_Leloi_C_GetPostInteractSyncType::Type' has a wrong offset!");
static_assert(offsetof(BP_Leloi_C_GetPostInteractSyncType, InteractionComponent) == 0x000008, "Member 'BP_Leloi_C_GetPostInteractSyncType::InteractionComponent' has a wrong offset!");

// Function BP_Leloi.BP_Leloi_C.GetPreInteractSyncType
// 0x0010 (0x0010 - 0x0000)
struct BP_Leloi_C_GetPreInteractSyncType final
{
public:
	bool                                          bShouldSync;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EAbilityTaskNetSyncType                       Type;                                              // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    InteractionComponent;                              // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Leloi_C_GetPreInteractSyncType) == 0x000008, "Wrong alignment on BP_Leloi_C_GetPreInteractSyncType");
static_assert(sizeof(BP_Leloi_C_GetPreInteractSyncType) == 0x000010, "Wrong size on BP_Leloi_C_GetPreInteractSyncType");
static_assert(offsetof(BP_Leloi_C_GetPreInteractSyncType, bShouldSync) == 0x000000, "Member 'BP_Leloi_C_GetPreInteractSyncType::bShouldSync' has a wrong offset!");
static_assert(offsetof(BP_Leloi_C_GetPreInteractSyncType, Type) == 0x000001, "Member 'BP_Leloi_C_GetPreInteractSyncType::Type' has a wrong offset!");
static_assert(offsetof(BP_Leloi_C_GetPreInteractSyncType, InteractionComponent) == 0x000008, "Member 'BP_Leloi_C_GetPreInteractSyncType::InteractionComponent' has a wrong offset!");

// Function BP_Leloi.BP_Leloi_C.GetTeam
// 0x0038 (0x0038 - 0x0000)
struct BP_Leloi_C_GetTeam final
{
public:
	struct FTeam                                  ReturnValue;                                       // 0x0000(0x0038)(Parm, OutParm, ReturnParm, NoDestructor)
};
static_assert(alignof(BP_Leloi_C_GetTeam) == 0x000008, "Wrong alignment on BP_Leloi_C_GetTeam");
static_assert(sizeof(BP_Leloi_C_GetTeam) == 0x000038, "Wrong size on BP_Leloi_C_GetTeam");
static_assert(offsetof(BP_Leloi_C_GetTeam, ReturnValue) == 0x000000, "Member 'BP_Leloi_C_GetTeam::ReturnValue' has a wrong offset!");

// Function BP_Leloi.BP_Leloi_C.GetTeamID
// 0x0001 (0x0001 - 0x0000)
struct BP_Leloi_C_GetTeamID final
{
public:
	uint8                                         ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Leloi_C_GetTeamID) == 0x000001, "Wrong alignment on BP_Leloi_C_GetTeamID");
static_assert(sizeof(BP_Leloi_C_GetTeamID) == 0x000001, "Wrong size on BP_Leloi_C_GetTeamID");
static_assert(offsetof(BP_Leloi_C_GetTeamID, ReturnValue) == 0x000000, "Member 'BP_Leloi_C_GetTeamID::ReturnValue' has a wrong offset!");

// Function BP_Leloi.BP_Leloi_C.HasTeam
// 0x0002 (0x0002 - 0x0000)
struct BP_Leloi_C_HasTeam final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsTeamValid_ReturnValue;                  // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Leloi_C_HasTeam) == 0x000001, "Wrong alignment on BP_Leloi_C_HasTeam");
static_assert(sizeof(BP_Leloi_C_HasTeam) == 0x000002, "Wrong size on BP_Leloi_C_HasTeam");
static_assert(offsetof(BP_Leloi_C_HasTeam, ReturnValue) == 0x000000, "Member 'BP_Leloi_C_HasTeam::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Leloi_C_HasTeam, CallFunc_IsTeamValid_ReturnValue) == 0x000001, "Member 'BP_Leloi_C_HasTeam::CallFunc_IsTeamValid_ReturnValue' has a wrong offset!");

// Function BP_Leloi.BP_Leloi_C.IsAvailableForEnemyTeam
// 0x0010 (0x0010 - 0x0000)
struct BP_Leloi_C_IsAvailableForEnemyTeam final
{
public:
	class UPrimitiveComponent*                    InteractionComponent;                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Leloi_C_IsAvailableForEnemyTeam) == 0x000008, "Wrong alignment on BP_Leloi_C_IsAvailableForEnemyTeam");
static_assert(sizeof(BP_Leloi_C_IsAvailableForEnemyTeam) == 0x000010, "Wrong size on BP_Leloi_C_IsAvailableForEnemyTeam");
static_assert(offsetof(BP_Leloi_C_IsAvailableForEnemyTeam, InteractionComponent) == 0x000000, "Member 'BP_Leloi_C_IsAvailableForEnemyTeam::InteractionComponent' has a wrong offset!");
static_assert(offsetof(BP_Leloi_C_IsAvailableForEnemyTeam, ReturnValue) == 0x000008, "Member 'BP_Leloi_C_IsAvailableForEnemyTeam::ReturnValue' has a wrong offset!");

// Function BP_Leloi.BP_Leloi_C.IsAvailableForInteraction
// 0x0018 (0x0018 - 0x0000)
struct BP_Leloi_C_IsAvailableForInteraction final
{
public:
	class AActor*                                 InteractingActor;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    InteractionComponent;                              // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0013(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Leloi_C_IsAvailableForInteraction) == 0x000008, "Wrong alignment on BP_Leloi_C_IsAvailableForInteraction");
static_assert(sizeof(BP_Leloi_C_IsAvailableForInteraction) == 0x000018, "Wrong size on BP_Leloi_C_IsAvailableForInteraction");
static_assert(offsetof(BP_Leloi_C_IsAvailableForInteraction, InteractingActor) == 0x000000, "Member 'BP_Leloi_C_IsAvailableForInteraction::InteractingActor' has a wrong offset!");
static_assert(offsetof(BP_Leloi_C_IsAvailableForInteraction, InteractionComponent) == 0x000008, "Member 'BP_Leloi_C_IsAvailableForInteraction::InteractionComponent' has a wrong offset!");
static_assert(offsetof(BP_Leloi_C_IsAvailableForInteraction, ReturnValue) == 0x000010, "Member 'BP_Leloi_C_IsAvailableForInteraction::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Leloi_C_IsAvailableForInteraction, CallFunc_Not_PreBool_ReturnValue) == 0x000011, "Member 'BP_Leloi_C_IsAvailableForInteraction::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Leloi_C_IsAvailableForInteraction, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000012, "Member 'BP_Leloi_C_IsAvailableForInteraction::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Leloi_C_IsAvailableForInteraction, CallFunc_BooleanAND_ReturnValue) == 0x000013, "Member 'BP_Leloi_C_IsAvailableForInteraction::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Leloi_C_IsAvailableForInteraction, CallFunc_BooleanAND_ReturnValue_1) == 0x000014, "Member 'BP_Leloi_C_IsAvailableForInteraction::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");

// Function BP_Leloi.BP_Leloi_C.TakeDamageFromAllTeams
// 0x0001 (0x0001 - 0x0000)
struct BP_Leloi_C_TakeDamageFromAllTeams final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Leloi_C_TakeDamageFromAllTeams) == 0x000001, "Wrong alignment on BP_Leloi_C_TakeDamageFromAllTeams");
static_assert(sizeof(BP_Leloi_C_TakeDamageFromAllTeams) == 0x000001, "Wrong size on BP_Leloi_C_TakeDamageFromAllTeams");
static_assert(offsetof(BP_Leloi_C_TakeDamageFromAllTeams, ReturnValue) == 0x000000, "Member 'BP_Leloi_C_TakeDamageFromAllTeams::ReturnValue' has a wrong offset!");

}

