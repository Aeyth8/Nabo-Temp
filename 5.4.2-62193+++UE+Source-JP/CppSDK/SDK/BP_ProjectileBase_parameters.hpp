#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_ProjectileBase

#include "Basic.hpp"

#include "PhysicsCore_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "GameplayAbilities_structs.hpp"
#include "JP_structs.hpp"


namespace SDK::Params
{

// Function BP_ProjectileBase.BP_ProjectileBase_C.ActivateNiagaraSystems
// 0x0050 (0x0050 - 0x0000)
struct BP_ProjectileBase_C_ActivateNiagaraSystems final
{
public:
	bool                                          Actrivate;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UNiagaraComponent*>              CallFunc_K2_GetComponentsByClass_ReturnValue;      // 0x0010(0x0010)(ReferenceParm, ContainsInstancedReference)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UNiagaraComponent*                      CallFunc_Array_Get_Item;                           // 0x0028(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UNiagaraComponent*                      CallFunc_Array_Get_Item_1;                         // 0x0038(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x3];                                       // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ProjectileBase_C_ActivateNiagaraSystems) == 0x000008, "Wrong alignment on BP_ProjectileBase_C_ActivateNiagaraSystems");
static_assert(sizeof(BP_ProjectileBase_C_ActivateNiagaraSystems) == 0x000050, "Wrong size on BP_ProjectileBase_C_ActivateNiagaraSystems");
static_assert(offsetof(BP_ProjectileBase_C_ActivateNiagaraSystems, Actrivate) == 0x000000, "Member 'BP_ProjectileBase_C_ActivateNiagaraSystems::Actrivate' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_ActivateNiagaraSystems, Temp_int_Variable) == 0x000004, "Member 'BP_ProjectileBase_C_ActivateNiagaraSystems::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_ActivateNiagaraSystems, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'BP_ProjectileBase_C_ActivateNiagaraSystems::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_ActivateNiagaraSystems, Temp_int_Variable_1) == 0x00000C, "Member 'BP_ProjectileBase_C_ActivateNiagaraSystems::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_ActivateNiagaraSystems, CallFunc_K2_GetComponentsByClass_ReturnValue) == 0x000010, "Member 'BP_ProjectileBase_C_ActivateNiagaraSystems::CallFunc_K2_GetComponentsByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_ActivateNiagaraSystems, CallFunc_Add_IntInt_ReturnValue_1) == 0x000020, "Member 'BP_ProjectileBase_C_ActivateNiagaraSystems::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_ActivateNiagaraSystems, CallFunc_Array_Get_Item) == 0x000028, "Member 'BP_ProjectileBase_C_ActivateNiagaraSystems::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_ActivateNiagaraSystems, CallFunc_Array_Length_ReturnValue) == 0x000030, "Member 'BP_ProjectileBase_C_ActivateNiagaraSystems::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_ActivateNiagaraSystems, CallFunc_Array_Get_Item_1) == 0x000038, "Member 'BP_ProjectileBase_C_ActivateNiagaraSystems::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_ActivateNiagaraSystems, CallFunc_Less_IntInt_ReturnValue) == 0x000040, "Member 'BP_ProjectileBase_C_ActivateNiagaraSystems::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_ActivateNiagaraSystems, CallFunc_Array_Length_ReturnValue_1) == 0x000044, "Member 'BP_ProjectileBase_C_ActivateNiagaraSystems::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_ActivateNiagaraSystems, CallFunc_Less_IntInt_ReturnValue_1) == 0x000048, "Member 'BP_ProjectileBase_C_ActivateNiagaraSystems::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");

// Function BP_ProjectileBase.BP_ProjectileBase_C.Apply Hit Effects On Valid Entity
// 0x0108 (0x0108 - 0x0000)
struct BP_ProjectileBase_C_Apply_Hit_Effects_On_Valid_Entity final
{
public:
	struct FHitResult                             Hit_Result;                                        // 0x0000(0x00F8)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class UAbilitySystemComponent*                Instigator_ASC;                                    // 0x00F8(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UAbilitySystemComponent*                HitTarget_ASC;                                     // 0x0100(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ProjectileBase_C_Apply_Hit_Effects_On_Valid_Entity) == 0x000008, "Wrong alignment on BP_ProjectileBase_C_Apply_Hit_Effects_On_Valid_Entity");
static_assert(sizeof(BP_ProjectileBase_C_Apply_Hit_Effects_On_Valid_Entity) == 0x000108, "Wrong size on BP_ProjectileBase_C_Apply_Hit_Effects_On_Valid_Entity");
static_assert(offsetof(BP_ProjectileBase_C_Apply_Hit_Effects_On_Valid_Entity, Hit_Result) == 0x000000, "Member 'BP_ProjectileBase_C_Apply_Hit_Effects_On_Valid_Entity::Hit_Result' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_Apply_Hit_Effects_On_Valid_Entity, Instigator_ASC) == 0x0000F8, "Member 'BP_ProjectileBase_C_Apply_Hit_Effects_On_Valid_Entity::Instigator_ASC' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_Apply_Hit_Effects_On_Valid_Entity, HitTarget_ASC) == 0x000100, "Member 'BP_ProjectileBase_C_Apply_Hit_Effects_On_Valid_Entity::HitTarget_ASC' has a wrong offset!");

// Function BP_ProjectileBase.BP_ProjectileBase_C.ApplyHitEffects
// 0x00F8 (0x00F8 - 0x0000)
struct BP_ProjectileBase_C_ApplyHitEffects final
{
public:
	struct FHitResult                             Hit;                                               // 0x0000(0x00F8)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_ProjectileBase_C_ApplyHitEffects) == 0x000008, "Wrong alignment on BP_ProjectileBase_C_ApplyHitEffects");
static_assert(sizeof(BP_ProjectileBase_C_ApplyHitEffects) == 0x0000F8, "Wrong size on BP_ProjectileBase_C_ApplyHitEffects");
static_assert(offsetof(BP_ProjectileBase_C_ApplyHitEffects, Hit) == 0x000000, "Member 'BP_ProjectileBase_C_ApplyHitEffects::Hit' has a wrong offset!");

// Function BP_ProjectileBase.BP_ProjectileBase_C.ApplyKillAssistedEffect
// 0x00D0 (0x00D0 - 0x0000)
struct BP_ProjectileBase_C_ApplyKillAssistedEffect final
{
public:
	class UAbilitySystemComponent*                TargetASC;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FGameplayEffectSpecHandle              AssistGESpecHandle;                                // 0x0008(0x0010)(Edit, BlueprintVisible)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayEffectContextHandle           CallFunc_GetEffectContext_ReturnValue;             // 0x0020(0x0018)()
	class APawn*                                  CallFunc_GetPawn_ReturnValue;                      // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APlayerStateJP_Match*                   K2Node_DynamicCast_AsPlayer_State_JP_Match;        // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAbilitySystemComponent*                CallFunc_GetAbilitySystemComponent_ReturnValue;    // 0x0050(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FCombatParticipant                     CallFunc_CreateCombatParticipantFromPlayer_ReturnValue; // 0x0058(0x0060)()
	struct FActiveGameplayEffectHandle            CallFunc_BP_ApplyGameplayEffectSpecToTarget_ReturnValue; // 0x00B8(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FGameplayEffectSpecHandle              CallFunc_MakeOutgoingSpec_ReturnValue;             // 0x00C0(0x0010)()
};
static_assert(alignof(BP_ProjectileBase_C_ApplyKillAssistedEffect) == 0x000008, "Wrong alignment on BP_ProjectileBase_C_ApplyKillAssistedEffect");
static_assert(sizeof(BP_ProjectileBase_C_ApplyKillAssistedEffect) == 0x0000D0, "Wrong size on BP_ProjectileBase_C_ApplyKillAssistedEffect");
static_assert(offsetof(BP_ProjectileBase_C_ApplyKillAssistedEffect, TargetASC) == 0x000000, "Member 'BP_ProjectileBase_C_ApplyKillAssistedEffect::TargetASC' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_ApplyKillAssistedEffect, AssistGESpecHandle) == 0x000008, "Member 'BP_ProjectileBase_C_ApplyKillAssistedEffect::AssistGESpecHandle' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_ApplyKillAssistedEffect, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'BP_ProjectileBase_C_ApplyKillAssistedEffect::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_ApplyKillAssistedEffect, CallFunc_GetEffectContext_ReturnValue) == 0x000020, "Member 'BP_ProjectileBase_C_ApplyKillAssistedEffect::CallFunc_GetEffectContext_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_ApplyKillAssistedEffect, CallFunc_GetPawn_ReturnValue) == 0x000038, "Member 'BP_ProjectileBase_C_ApplyKillAssistedEffect::CallFunc_GetPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_ApplyKillAssistedEffect, K2Node_DynamicCast_AsPlayer_State_JP_Match) == 0x000040, "Member 'BP_ProjectileBase_C_ApplyKillAssistedEffect::K2Node_DynamicCast_AsPlayer_State_JP_Match' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_ApplyKillAssistedEffect, K2Node_DynamicCast_bSuccess) == 0x000048, "Member 'BP_ProjectileBase_C_ApplyKillAssistedEffect::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_ApplyKillAssistedEffect, CallFunc_GetAbilitySystemComponent_ReturnValue) == 0x000050, "Member 'BP_ProjectileBase_C_ApplyKillAssistedEffect::CallFunc_GetAbilitySystemComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_ApplyKillAssistedEffect, CallFunc_CreateCombatParticipantFromPlayer_ReturnValue) == 0x000058, "Member 'BP_ProjectileBase_C_ApplyKillAssistedEffect::CallFunc_CreateCombatParticipantFromPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_ApplyKillAssistedEffect, CallFunc_BP_ApplyGameplayEffectSpecToTarget_ReturnValue) == 0x0000B8, "Member 'BP_ProjectileBase_C_ApplyKillAssistedEffect::CallFunc_BP_ApplyGameplayEffectSpecToTarget_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_ApplyKillAssistedEffect, CallFunc_MakeOutgoingSpec_ReturnValue) == 0x0000C0, "Member 'BP_ProjectileBase_C_ApplyKillAssistedEffect::CallFunc_MakeOutgoingSpec_ReturnValue' has a wrong offset!");

// Function BP_ProjectileBase.BP_ProjectileBase_C.Audio Default Impact
// 0x0018 (0x0018 - 0x0000)
struct BP_ProjectileBase_C_Audio_Default_Impact final
{
public:
	struct FVector                                Location;                                          // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ProjectileBase_C_Audio_Default_Impact) == 0x000008, "Wrong alignment on BP_ProjectileBase_C_Audio_Default_Impact");
static_assert(sizeof(BP_ProjectileBase_C_Audio_Default_Impact) == 0x000018, "Wrong size on BP_ProjectileBase_C_Audio_Default_Impact");
static_assert(offsetof(BP_ProjectileBase_C_Audio_Default_Impact, Location) == 0x000000, "Member 'BP_ProjectileBase_C_Audio_Default_Impact::Location' has a wrong offset!");

// Function BP_ProjectileBase.BP_ProjectileBase_C.Audio Material Layer
// 0x0020 (0x0020 - 0x0000)
struct BP_ProjectileBase_C_Audio_Material_Layer final
{
public:
	struct FVector                                Location;                                          // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      PhysicalMaterial;                                  // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ProjectileBase_C_Audio_Material_Layer) == 0x000008, "Wrong alignment on BP_ProjectileBase_C_Audio_Material_Layer");
static_assert(sizeof(BP_ProjectileBase_C_Audio_Material_Layer) == 0x000020, "Wrong size on BP_ProjectileBase_C_Audio_Material_Layer");
static_assert(offsetof(BP_ProjectileBase_C_Audio_Material_Layer, Location) == 0x000000, "Member 'BP_ProjectileBase_C_Audio_Material_Layer::Location' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_Audio_Material_Layer, PhysicalMaterial) == 0x000018, "Member 'BP_ProjectileBase_C_Audio_Material_Layer::PhysicalMaterial' has a wrong offset!");

// Function BP_ProjectileBase.BP_ProjectileBase_C.BndEvt__BP_ProjectileBase_PlayerCollider_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature
// 0x0118 (0x0118 - 0x0000)
struct BP_ProjectileBase_C_BndEvt__BP_ProjectileBase_PlayerCollider_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bFromSweep;                                        // 0x001C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             SweepResult;                                       // 0x0020(0x00F8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_ProjectileBase_C_BndEvt__BP_ProjectileBase_PlayerCollider_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on BP_ProjectileBase_C_BndEvt__BP_ProjectileBase_PlayerCollider_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(sizeof(BP_ProjectileBase_C_BndEvt__BP_ProjectileBase_PlayerCollider_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature) == 0x000118, "Wrong size on BP_ProjectileBase_C_BndEvt__BP_ProjectileBase_PlayerCollider_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(offsetof(BP_ProjectileBase_C_BndEvt__BP_ProjectileBase_PlayerCollider_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OverlappedComponent) == 0x000000, "Member 'BP_ProjectileBase_C_BndEvt__BP_ProjectileBase_PlayerCollider_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_BndEvt__BP_ProjectileBase_PlayerCollider_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'BP_ProjectileBase_C_BndEvt__BP_ProjectileBase_PlayerCollider_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_BndEvt__BP_ProjectileBase_PlayerCollider_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'BP_ProjectileBase_C_BndEvt__BP_ProjectileBase_PlayerCollider_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_BndEvt__BP_ProjectileBase_PlayerCollider_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000018, "Member 'BP_ProjectileBase_C_BndEvt__BP_ProjectileBase_PlayerCollider_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_BndEvt__BP_ProjectileBase_PlayerCollider_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, bFromSweep) == 0x00001C, "Member 'BP_ProjectileBase_C_BndEvt__BP_ProjectileBase_PlayerCollider_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::bFromSweep' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_BndEvt__BP_ProjectileBase_PlayerCollider_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, SweepResult) == 0x000020, "Member 'BP_ProjectileBase_C_BndEvt__BP_ProjectileBase_PlayerCollider_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::SweepResult' has a wrong offset!");

// Function BP_ProjectileBase.BP_ProjectileBase_C.CacheOwnerInfo
// 0x0020 (0x0020 - 0x0000)
struct BP_ProjectileBase_C_CacheOwnerInfo final
{
public:
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAbilitySystemComponent*                CallFunc_GetAbilitySystemComponent_ReturnValue;    // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  K2Node_DynamicCast_AsPawn;                         // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ProjectileBase_C_CacheOwnerInfo) == 0x000008, "Wrong alignment on BP_ProjectileBase_C_CacheOwnerInfo");
static_assert(sizeof(BP_ProjectileBase_C_CacheOwnerInfo) == 0x000020, "Wrong size on BP_ProjectileBase_C_CacheOwnerInfo");
static_assert(offsetof(BP_ProjectileBase_C_CacheOwnerInfo, CallFunc_GetOwner_ReturnValue) == 0x000000, "Member 'BP_ProjectileBase_C_CacheOwnerInfo::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_CacheOwnerInfo, CallFunc_GetAbilitySystemComponent_ReturnValue) == 0x000008, "Member 'BP_ProjectileBase_C_CacheOwnerInfo::CallFunc_GetAbilitySystemComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_CacheOwnerInfo, K2Node_DynamicCast_AsPawn) == 0x000010, "Member 'BP_ProjectileBase_C_CacheOwnerInfo::K2Node_DynamicCast_AsPawn' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_CacheOwnerInfo, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_ProjectileBase_C_CacheOwnerInfo::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BP_ProjectileBase.BP_ProjectileBase_C.CalculateDamageFalloffMultiplier
// 0x0060 (0x0060 - 0x0000)
struct BP_ProjectileBase_C_CalculateDamageFalloffMultiplier final
{
public:
	double                                        ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Temp_real_Variable;                                // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0018(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Vector_Distance_ReturnValue;              // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_EvaluateRuntimeFloatCurve_ReturnValue;    // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_Select_Default;                             // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_EvaluateRuntimeFloatCurve_time_ImplicitCast; // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_54[0x4];                                       // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_Select_Option_1_ImplicitCast;               // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ProjectileBase_C_CalculateDamageFalloffMultiplier) == 0x000008, "Wrong alignment on BP_ProjectileBase_C_CalculateDamageFalloffMultiplier");
static_assert(sizeof(BP_ProjectileBase_C_CalculateDamageFalloffMultiplier) == 0x000060, "Wrong size on BP_ProjectileBase_C_CalculateDamageFalloffMultiplier");
static_assert(offsetof(BP_ProjectileBase_C_CalculateDamageFalloffMultiplier, ReturnValue) == 0x000000, "Member 'BP_ProjectileBase_C_CalculateDamageFalloffMultiplier::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_CalculateDamageFalloffMultiplier, Temp_bool_Variable) == 0x000008, "Member 'BP_ProjectileBase_C_CalculateDamageFalloffMultiplier::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_CalculateDamageFalloffMultiplier, Temp_real_Variable) == 0x000010, "Member 'BP_ProjectileBase_C_CalculateDamageFalloffMultiplier::Temp_real_Variable' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_CalculateDamageFalloffMultiplier, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000018, "Member 'BP_ProjectileBase_C_CalculateDamageFalloffMultiplier::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_CalculateDamageFalloffMultiplier, CallFunc_Vector_Distance_ReturnValue) == 0x000030, "Member 'BP_ProjectileBase_C_CalculateDamageFalloffMultiplier::CallFunc_Vector_Distance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_CalculateDamageFalloffMultiplier, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000038, "Member 'BP_ProjectileBase_C_CalculateDamageFalloffMultiplier::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_CalculateDamageFalloffMultiplier, CallFunc_EvaluateRuntimeFloatCurve_ReturnValue) == 0x000040, "Member 'BP_ProjectileBase_C_CalculateDamageFalloffMultiplier::CallFunc_EvaluateRuntimeFloatCurve_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_CalculateDamageFalloffMultiplier, K2Node_Select_Default) == 0x000048, "Member 'BP_ProjectileBase_C_CalculateDamageFalloffMultiplier::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_CalculateDamageFalloffMultiplier, CallFunc_EvaluateRuntimeFloatCurve_time_ImplicitCast) == 0x000050, "Member 'BP_ProjectileBase_C_CalculateDamageFalloffMultiplier::CallFunc_EvaluateRuntimeFloatCurve_time_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_CalculateDamageFalloffMultiplier, K2Node_Select_Option_1_ImplicitCast) == 0x000058, "Member 'BP_ProjectileBase_C_CalculateDamageFalloffMultiplier::K2Node_Select_Option_1_ImplicitCast' has a wrong offset!");

// Function BP_ProjectileBase.BP_ProjectileBase_C.CalculateImpactAngle
// 0x0230 (0x0230 - 0x0000)
struct BP_ProjectileBase_C_CalculateImpactAngle final
{
public:
	struct FHitResult                             Hit;                                               // 0x0000(0x00F8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FVector                                Impact_Velocity;                                   // 0x00F8(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        ReturnValue;                                       // 0x0110(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x0119(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11A[0x2];                                      // 0x011A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x011C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x0120(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_124[0x4];                                      // 0x0124(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x0128(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x0140(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x0158(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x0170(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0188(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0190(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0198(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x01A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_BoneName;                  // 0x01A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x01B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x01B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x01B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1BC[0x4];                                      // 0x01BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x01C0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x01D8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x01F0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue;        // 0x0208(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Dot_VectorVector_ReturnValue;             // 0x0220(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_RadiansToDegrees_ReturnValue;             // 0x0228(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ProjectileBase_C_CalculateImpactAngle) == 0x000008, "Wrong alignment on BP_ProjectileBase_C_CalculateImpactAngle");
static_assert(sizeof(BP_ProjectileBase_C_CalculateImpactAngle) == 0x000230, "Wrong size on BP_ProjectileBase_C_CalculateImpactAngle");
static_assert(offsetof(BP_ProjectileBase_C_CalculateImpactAngle, Hit) == 0x000000, "Member 'BP_ProjectileBase_C_CalculateImpactAngle::Hit' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_CalculateImpactAngle, Impact_Velocity) == 0x0000F8, "Member 'BP_ProjectileBase_C_CalculateImpactAngle::Impact_Velocity' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_CalculateImpactAngle, ReturnValue) == 0x000110, "Member 'BP_ProjectileBase_C_CalculateImpactAngle::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_CalculateImpactAngle, CallFunc_BreakHitResult_bBlockingHit) == 0x000118, "Member 'BP_ProjectileBase_C_CalculateImpactAngle::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_CalculateImpactAngle, CallFunc_BreakHitResult_bInitialOverlap) == 0x000119, "Member 'BP_ProjectileBase_C_CalculateImpactAngle::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_CalculateImpactAngle, CallFunc_BreakHitResult_Time) == 0x00011C, "Member 'BP_ProjectileBase_C_CalculateImpactAngle::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_CalculateImpactAngle, CallFunc_BreakHitResult_Distance) == 0x000120, "Member 'BP_ProjectileBase_C_CalculateImpactAngle::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_CalculateImpactAngle, CallFunc_BreakHitResult_Location) == 0x000128, "Member 'BP_ProjectileBase_C_CalculateImpactAngle::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_CalculateImpactAngle, CallFunc_BreakHitResult_ImpactPoint) == 0x000140, "Member 'BP_ProjectileBase_C_CalculateImpactAngle::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_CalculateImpactAngle, CallFunc_BreakHitResult_Normal) == 0x000158, "Member 'BP_ProjectileBase_C_CalculateImpactAngle::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_CalculateImpactAngle, CallFunc_BreakHitResult_ImpactNormal) == 0x000170, "Member 'BP_ProjectileBase_C_CalculateImpactAngle::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_CalculateImpactAngle, CallFunc_BreakHitResult_PhysMat) == 0x000188, "Member 'BP_ProjectileBase_C_CalculateImpactAngle::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_CalculateImpactAngle, CallFunc_BreakHitResult_HitActor) == 0x000190, "Member 'BP_ProjectileBase_C_CalculateImpactAngle::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_CalculateImpactAngle, CallFunc_BreakHitResult_HitComponent) == 0x000198, "Member 'BP_ProjectileBase_C_CalculateImpactAngle::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_CalculateImpactAngle, CallFunc_BreakHitResult_HitBoneName) == 0x0001A0, "Member 'BP_ProjectileBase_C_CalculateImpactAngle::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_CalculateImpactAngle, CallFunc_BreakHitResult_BoneName) == 0x0001A8, "Member 'BP_ProjectileBase_C_CalculateImpactAngle::CallFunc_BreakHitResult_BoneName' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_CalculateImpactAngle, CallFunc_BreakHitResult_HitItem) == 0x0001B0, "Member 'BP_ProjectileBase_C_CalculateImpactAngle::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_CalculateImpactAngle, CallFunc_BreakHitResult_ElementIndex) == 0x0001B4, "Member 'BP_ProjectileBase_C_CalculateImpactAngle::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_CalculateImpactAngle, CallFunc_BreakHitResult_FaceIndex) == 0x0001B8, "Member 'BP_ProjectileBase_C_CalculateImpactAngle::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_CalculateImpactAngle, CallFunc_BreakHitResult_TraceStart) == 0x0001C0, "Member 'BP_ProjectileBase_C_CalculateImpactAngle::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_CalculateImpactAngle, CallFunc_BreakHitResult_TraceEnd) == 0x0001D8, "Member 'BP_ProjectileBase_C_CalculateImpactAngle::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_CalculateImpactAngle, CallFunc_Normal_ReturnValue) == 0x0001F0, "Member 'BP_ProjectileBase_C_CalculateImpactAngle::CallFunc_Normal_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_CalculateImpactAngle, CallFunc_Multiply_VectorVector_ReturnValue) == 0x000208, "Member 'BP_ProjectileBase_C_CalculateImpactAngle::CallFunc_Multiply_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_CalculateImpactAngle, CallFunc_Dot_VectorVector_ReturnValue) == 0x000220, "Member 'BP_ProjectileBase_C_CalculateImpactAngle::CallFunc_Dot_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_CalculateImpactAngle, CallFunc_RadiansToDegrees_ReturnValue) == 0x000228, "Member 'BP_ProjectileBase_C_CalculateImpactAngle::CallFunc_RadiansToDegrees_ReturnValue' has a wrong offset!");

// Function BP_ProjectileBase.BP_ProjectileBase_C.CanActivateTrap
// 0x0001 (0x0001 - 0x0000)
struct BP_ProjectileBase_C_CanActivateTrap final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ProjectileBase_C_CanActivateTrap) == 0x000001, "Wrong alignment on BP_ProjectileBase_C_CanActivateTrap");
static_assert(sizeof(BP_ProjectileBase_C_CanActivateTrap) == 0x000001, "Wrong size on BP_ProjectileBase_C_CanActivateTrap");
static_assert(offsetof(BP_ProjectileBase_C_CanActivateTrap, ReturnValue) == 0x000000, "Member 'BP_ProjectileBase_C_CanActivateTrap::ReturnValue' has a wrong offset!");

// Function BP_ProjectileBase.BP_ProjectileBase_C.CheckImpactAbilitySystemComponents
// 0x0328 (0x0328 - 0x0000)
struct BP_ProjectileBase_C_CheckImpactAbilitySystemComponents final
{
public:
	struct FHitResult                             Hit;                                               // 0x0000(0x00F8)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class FString                                 Reason;                                            // 0x00F8(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	bool                                          Is_Valid;                                          // 0x0108(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_109[0x7];                                      // 0x0109(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAbilitySystemComponent*                Instigator_ASC;                                    // 0x0110(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UAbilitySystemComponent*                Target_ASC;                                        // 0x0118(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          FoundValidASCs;                                    // 0x0120(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_121[0x7];                                      // 0x0121(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAbilitySystemComponent*                Hit_Actor_Ability_System_Component;                // 0x0128(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UAbilitySystemComponent*                Instigator_Ability_System_Component;               // 0x0130(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x0138(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x0139(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_13A[0x2];                                      // 0x013A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x013C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x0140(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_144[0x4];                                      // 0x0144(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x0148(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x0160(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x0178(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x0190(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x01A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x01B0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x01B8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x01C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_BoneName;                  // 0x01C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x01D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x01D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x01D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1DC[0x4];                                      // 0x01DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x01E0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x01F8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_GetInstigator_ReturnValue;                // 0x0210(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit_1;            // 0x0218(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap_1;         // 0x0219(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21A[0x2];                                      // 0x021A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time_1;                    // 0x021C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance_1;                // 0x0220(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_224[0x4];                                      // 0x0224(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_Location_1;                // 0x0228(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint_1;             // 0x0240(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal_1;                  // 0x0258(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal_1;            // 0x0270(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat_1;                 // 0x0288(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor_1;                // 0x0290(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent_1;            // 0x0298(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName_1;             // 0x02A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_BoneName_1;                // 0x02A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem_1;                 // 0x02B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex_1;            // 0x02B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex_1;               // 0x02B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2BC[0x4];                                      // 0x02BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_TraceStart_1;              // 0x02C0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd_1;                // 0x02D8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasValidAbilitySystemComponent_is_Valid;  // 0x02F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2F1[0x7];                                      // 0x02F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAbilitySystemComponent*                CallFunc_HasValidAbilitySystemComponent_Target_Ability_System_Component; // 0x02F8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasValidAbilitySystemComponent_is_Valid_1; // 0x0300(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_301[0x7];                                      // 0x0301(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAbilitySystemComponent*                CallFunc_HasValidAbilitySystemComponent_Target_Ability_System_Component_1; // 0x0308(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_GetInstigator_ReturnValue_1;              // 0x0310(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasValidAbilitySystemComponent_is_Valid_2; // 0x0318(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_319[0x7];                                      // 0x0319(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAbilitySystemComponent*                CallFunc_HasValidAbilitySystemComponent_Target_Ability_System_Component_2; // 0x0320(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ProjectileBase_C_CheckImpactAbilitySystemComponents) == 0x000008, "Wrong alignment on BP_ProjectileBase_C_CheckImpactAbilitySystemComponents");
static_assert(sizeof(BP_ProjectileBase_C_CheckImpactAbilitySystemComponents) == 0x000328, "Wrong size on BP_ProjectileBase_C_CheckImpactAbilitySystemComponents");
static_assert(offsetof(BP_ProjectileBase_C_CheckImpactAbilitySystemComponents, Hit) == 0x000000, "Member 'BP_ProjectileBase_C_CheckImpactAbilitySystemComponents::Hit' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_CheckImpactAbilitySystemComponents, Reason) == 0x0000F8, "Member 'BP_ProjectileBase_C_CheckImpactAbilitySystemComponents::Reason' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_CheckImpactAbilitySystemComponents, Is_Valid) == 0x000108, "Member 'BP_ProjectileBase_C_CheckImpactAbilitySystemComponents::Is_Valid' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_CheckImpactAbilitySystemComponents, Instigator_ASC) == 0x000110, "Member 'BP_ProjectileBase_C_CheckImpactAbilitySystemComponents::Instigator_ASC' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_CheckImpactAbilitySystemComponents, Target_ASC) == 0x000118, "Member 'BP_ProjectileBase_C_CheckImpactAbilitySystemComponents::Target_ASC' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_CheckImpactAbilitySystemComponents, FoundValidASCs) == 0x000120, "Member 'BP_ProjectileBase_C_CheckImpactAbilitySystemComponents::FoundValidASCs' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_CheckImpactAbilitySystemComponents, Hit_Actor_Ability_System_Component) == 0x000128, "Member 'BP_ProjectileBase_C_CheckImpactAbilitySystemComponents::Hit_Actor_Ability_System_Component' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_CheckImpactAbilitySystemComponents, Instigator_Ability_System_Component) == 0x000130, "Member 'BP_ProjectileBase_C_CheckImpactAbilitySystemComponents::Instigator_Ability_System_Component' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_CheckImpactAbilitySystemComponents, CallFunc_BreakHitResult_bBlockingHit) == 0x000138, "Member 'BP_ProjectileBase_C_CheckImpactAbilitySystemComponents::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_CheckImpactAbilitySystemComponents, CallFunc_BreakHitResult_bInitialOverlap) == 0x000139, "Member 'BP_ProjectileBase_C_CheckImpactAbilitySystemComponents::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_CheckImpactAbilitySystemComponents, CallFunc_BreakHitResult_Time) == 0x00013C, "Member 'BP_ProjectileBase_C_CheckImpactAbilitySystemComponents::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_CheckImpactAbilitySystemComponents, CallFunc_BreakHitResult_Distance) == 0x000140, "Member 'BP_ProjectileBase_C_CheckImpactAbilitySystemComponents::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_CheckImpactAbilitySystemComponents, CallFunc_BreakHitResult_Location) == 0x000148, "Member 'BP_ProjectileBase_C_CheckImpactAbilitySystemComponents::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_CheckImpactAbilitySystemComponents, CallFunc_BreakHitResult_ImpactPoint) == 0x000160, "Member 'BP_ProjectileBase_C_CheckImpactAbilitySystemComponents::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_CheckImpactAbilitySystemComponents, CallFunc_BreakHitResult_Normal) == 0x000178, "Member 'BP_ProjectileBase_C_CheckImpactAbilitySystemComponents::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_CheckImpactAbilitySystemComponents, CallFunc_BreakHitResult_ImpactNormal) == 0x000190, "Member 'BP_ProjectileBase_C_CheckImpactAbilitySystemComponents::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_CheckImpactAbilitySystemComponents, CallFunc_BreakHitResult_PhysMat) == 0x0001A8, "Member 'BP_ProjectileBase_C_CheckImpactAbilitySystemComponents::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_CheckImpactAbilitySystemComponents, CallFunc_BreakHitResult_HitActor) == 0x0001B0, "Member 'BP_ProjectileBase_C_CheckImpactAbilitySystemComponents::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_CheckImpactAbilitySystemComponents, CallFunc_BreakHitResult_HitComponent) == 0x0001B8, "Member 'BP_ProjectileBase_C_CheckImpactAbilitySystemComponents::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_CheckImpactAbilitySystemComponents, CallFunc_BreakHitResult_HitBoneName) == 0x0001C0, "Member 'BP_ProjectileBase_C_CheckImpactAbilitySystemComponents::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_CheckImpactAbilitySystemComponents, CallFunc_BreakHitResult_BoneName) == 0x0001C8, "Member 'BP_ProjectileBase_C_CheckImpactAbilitySystemComponents::CallFunc_BreakHitResult_BoneName' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_CheckImpactAbilitySystemComponents, CallFunc_BreakHitResult_HitItem) == 0x0001D0, "Member 'BP_ProjectileBase_C_CheckImpactAbilitySystemComponents::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_CheckImpactAbilitySystemComponents, CallFunc_BreakHitResult_ElementIndex) == 0x0001D4, "Member 'BP_ProjectileBase_C_CheckImpactAbilitySystemComponents::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_CheckImpactAbilitySystemComponents, CallFunc_BreakHitResult_FaceIndex) == 0x0001D8, "Member 'BP_ProjectileBase_C_CheckImpactAbilitySystemComponents::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_CheckImpactAbilitySystemComponents, CallFunc_BreakHitResult_TraceStart) == 0x0001E0, "Member 'BP_ProjectileBase_C_CheckImpactAbilitySystemComponents::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_CheckImpactAbilitySystemComponents, CallFunc_BreakHitResult_TraceEnd) == 0x0001F8, "Member 'BP_ProjectileBase_C_CheckImpactAbilitySystemComponents::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_CheckImpactAbilitySystemComponents, CallFunc_GetInstigator_ReturnValue) == 0x000210, "Member 'BP_ProjectileBase_C_CheckImpactAbilitySystemComponents::CallFunc_GetInstigator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_CheckImpactAbilitySystemComponents, CallFunc_BreakHitResult_bBlockingHit_1) == 0x000218, "Member 'BP_ProjectileBase_C_CheckImpactAbilitySystemComponents::CallFunc_BreakHitResult_bBlockingHit_1' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_CheckImpactAbilitySystemComponents, CallFunc_BreakHitResult_bInitialOverlap_1) == 0x000219, "Member 'BP_ProjectileBase_C_CheckImpactAbilitySystemComponents::CallFunc_BreakHitResult_bInitialOverlap_1' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_CheckImpactAbilitySystemComponents, CallFunc_BreakHitResult_Time_1) == 0x00021C, "Member 'BP_ProjectileBase_C_CheckImpactAbilitySystemComponents::CallFunc_BreakHitResult_Time_1' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_CheckImpactAbilitySystemComponents, CallFunc_BreakHitResult_Distance_1) == 0x000220, "Member 'BP_ProjectileBase_C_CheckImpactAbilitySystemComponents::CallFunc_BreakHitResult_Distance_1' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_CheckImpactAbilitySystemComponents, CallFunc_BreakHitResult_Location_1) == 0x000228, "Member 'BP_ProjectileBase_C_CheckImpactAbilitySystemComponents::CallFunc_BreakHitResult_Location_1' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_CheckImpactAbilitySystemComponents, CallFunc_BreakHitResult_ImpactPoint_1) == 0x000240, "Member 'BP_ProjectileBase_C_CheckImpactAbilitySystemComponents::CallFunc_BreakHitResult_ImpactPoint_1' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_CheckImpactAbilitySystemComponents, CallFunc_BreakHitResult_Normal_1) == 0x000258, "Member 'BP_ProjectileBase_C_CheckImpactAbilitySystemComponents::CallFunc_BreakHitResult_Normal_1' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_CheckImpactAbilitySystemComponents, CallFunc_BreakHitResult_ImpactNormal_1) == 0x000270, "Member 'BP_ProjectileBase_C_CheckImpactAbilitySystemComponents::CallFunc_BreakHitResult_ImpactNormal_1' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_CheckImpactAbilitySystemComponents, CallFunc_BreakHitResult_PhysMat_1) == 0x000288, "Member 'BP_ProjectileBase_C_CheckImpactAbilitySystemComponents::CallFunc_BreakHitResult_PhysMat_1' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_CheckImpactAbilitySystemComponents, CallFunc_BreakHitResult_HitActor_1) == 0x000290, "Member 'BP_ProjectileBase_C_CheckImpactAbilitySystemComponents::CallFunc_BreakHitResult_HitActor_1' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_CheckImpactAbilitySystemComponents, CallFunc_BreakHitResult_HitComponent_1) == 0x000298, "Member 'BP_ProjectileBase_C_CheckImpactAbilitySystemComponents::CallFunc_BreakHitResult_HitComponent_1' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_CheckImpactAbilitySystemComponents, CallFunc_BreakHitResult_HitBoneName_1) == 0x0002A0, "Member 'BP_ProjectileBase_C_CheckImpactAbilitySystemComponents::CallFunc_BreakHitResult_HitBoneName_1' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_CheckImpactAbilitySystemComponents, CallFunc_BreakHitResult_BoneName_1) == 0x0002A8, "Member 'BP_ProjectileBase_C_CheckImpactAbilitySystemComponents::CallFunc_BreakHitResult_BoneName_1' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_CheckImpactAbilitySystemComponents, CallFunc_BreakHitResult_HitItem_1) == 0x0002B0, "Member 'BP_ProjectileBase_C_CheckImpactAbilitySystemComponents::CallFunc_BreakHitResult_HitItem_1' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_CheckImpactAbilitySystemComponents, CallFunc_BreakHitResult_ElementIndex_1) == 0x0002B4, "Member 'BP_ProjectileBase_C_CheckImpactAbilitySystemComponents::CallFunc_BreakHitResult_ElementIndex_1' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_CheckImpactAbilitySystemComponents, CallFunc_BreakHitResult_FaceIndex_1) == 0x0002B8, "Member 'BP_ProjectileBase_C_CheckImpactAbilitySystemComponents::CallFunc_BreakHitResult_FaceIndex_1' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_CheckImpactAbilitySystemComponents, CallFunc_BreakHitResult_TraceStart_1) == 0x0002C0, "Member 'BP_ProjectileBase_C_CheckImpactAbilitySystemComponents::CallFunc_BreakHitResult_TraceStart_1' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_CheckImpactAbilitySystemComponents, CallFunc_BreakHitResult_TraceEnd_1) == 0x0002D8, "Member 'BP_ProjectileBase_C_CheckImpactAbilitySystemComponents::CallFunc_BreakHitResult_TraceEnd_1' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_CheckImpactAbilitySystemComponents, CallFunc_HasValidAbilitySystemComponent_is_Valid) == 0x0002F0, "Member 'BP_ProjectileBase_C_CheckImpactAbilitySystemComponents::CallFunc_HasValidAbilitySystemComponent_is_Valid' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_CheckImpactAbilitySystemComponents, CallFunc_HasValidAbilitySystemComponent_Target_Ability_System_Component) == 0x0002F8, "Member 'BP_ProjectileBase_C_CheckImpactAbilitySystemComponents::CallFunc_HasValidAbilitySystemComponent_Target_Ability_System_Component' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_CheckImpactAbilitySystemComponents, CallFunc_HasValidAbilitySystemComponent_is_Valid_1) == 0x000300, "Member 'BP_ProjectileBase_C_CheckImpactAbilitySystemComponents::CallFunc_HasValidAbilitySystemComponent_is_Valid_1' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_CheckImpactAbilitySystemComponents, CallFunc_HasValidAbilitySystemComponent_Target_Ability_System_Component_1) == 0x000308, "Member 'BP_ProjectileBase_C_CheckImpactAbilitySystemComponents::CallFunc_HasValidAbilitySystemComponent_Target_Ability_System_Component_1' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_CheckImpactAbilitySystemComponents, CallFunc_GetInstigator_ReturnValue_1) == 0x000310, "Member 'BP_ProjectileBase_C_CheckImpactAbilitySystemComponents::CallFunc_GetInstigator_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_CheckImpactAbilitySystemComponents, CallFunc_HasValidAbilitySystemComponent_is_Valid_2) == 0x000318, "Member 'BP_ProjectileBase_C_CheckImpactAbilitySystemComponents::CallFunc_HasValidAbilitySystemComponent_is_Valid_2' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_CheckImpactAbilitySystemComponents, CallFunc_HasValidAbilitySystemComponent_Target_Ability_System_Component_2) == 0x000320, "Member 'BP_ProjectileBase_C_CheckImpactAbilitySystemComponents::CallFunc_HasValidAbilitySystemComponent_Target_Ability_System_Component_2' has a wrong offset!");

// Function BP_ProjectileBase.BP_ProjectileBase_C.DamageAppliedCue
// 0x00F8 (0x00F8 - 0x0000)
struct BP_ProjectileBase_C_DamageAppliedCue final
{
public:
	class APawn*                                  CallFunc_GetInstigator_ReturnValue;                // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0008(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayCueParameters                 CallFunc_MakeGameplayCueParameters_ReturnValue;    // 0x0020(0x00D8)(ContainsInstancedReference)
};
static_assert(alignof(BP_ProjectileBase_C_DamageAppliedCue) == 0x000008, "Wrong alignment on BP_ProjectileBase_C_DamageAppliedCue");
static_assert(sizeof(BP_ProjectileBase_C_DamageAppliedCue) == 0x0000F8, "Wrong size on BP_ProjectileBase_C_DamageAppliedCue");
static_assert(offsetof(BP_ProjectileBase_C_DamageAppliedCue, CallFunc_GetInstigator_ReturnValue) == 0x000000, "Member 'BP_ProjectileBase_C_DamageAppliedCue::CallFunc_GetInstigator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_DamageAppliedCue, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000008, "Member 'BP_ProjectileBase_C_DamageAppliedCue::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_DamageAppliedCue, CallFunc_MakeGameplayCueParameters_ReturnValue) == 0x000020, "Member 'BP_ProjectileBase_C_DamageAppliedCue::CallFunc_MakeGameplayCueParameters_ReturnValue' has a wrong offset!");

// Function BP_ProjectileBase.BP_ProjectileBase_C.DamageTarget
// 0x05C0 (0x05C0 - 0x0000)
struct BP_ProjectileBase_C_DamageTarget final
{
public:
	struct FHitResult                             Hit;                                               // 0x0000(0x00F8)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class UAbilitySystemComponent*                Instigator_Ability_System_Component;               // 0x00F8(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UAbilitySystemComponent*                Hit_Actor_Ability_System_Component;                // 0x0100(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	double                                        DamageToDeal;                                      // 0x0108(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAbilitySystemComponent*                Remove_this;                                       // 0x0110(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UAbilitySystemComponent*                Test;                                              // 0x0118(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FGameplayEffectContextHandle           CallFunc_MakeEffectContext_ReturnValue;            // 0x0120(0x0018)()
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0138(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsSameTeam_Return;                        // 0x0140(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_141[0x7];                                      // 0x0141(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_GetInstigator_ReturnValue;                // 0x0148(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ObjectIsA_ReturnValue;                    // 0x0150(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_151[0x7];                                      // 0x0151(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetDebugStringFromGameplayTagContainer_ReturnValue; // 0x0158(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x0168(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x0169(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_16A[0x2];                                      // 0x016A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x016C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x0170(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_174[0x4];                                      // 0x0174(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x0178(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x0190(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x01A8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x01C0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x01D8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x01E0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x01E8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x01F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_BoneName;                  // 0x01F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0200(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x0204(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x0208(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_20C[0x4];                                      // 0x020C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x0210(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x0228(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0240(0x0010)()
	class FText                                   CallFunc_Conv_ObjectToText_ReturnValue;            // 0x0250(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0260(0x0048)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x02A8(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x02F0(0x0010)(ReferenceParm)
	class FString                                 CallFunc_Get_ClassLog_Name_name;                   // 0x0300(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0310(0x0010)()
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x0320(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_GetInstigator_ReturnValue_1;              // 0x0330(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_ObjectToText_ReturnValue_1;          // 0x0338(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_2;            // 0x0348(0x0048)(HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit_1;            // 0x0390(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap_1;         // 0x0391(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_392[0x2];                                      // 0x0392(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time_1;                    // 0x0394(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance_1;                // 0x0398(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39C[0x4];                                      // 0x039C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_Location_1;                // 0x03A0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint_1;             // 0x03B8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal_1;                  // 0x03D0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal_1;            // 0x03E8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat_1;                 // 0x0400(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor_1;                // 0x0408(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent_1;            // 0x0410(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName_1;             // 0x0418(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_BoneName_1;                // 0x0420(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem_1;                 // 0x0428(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex_1;            // 0x042C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex_1;               // 0x0430(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_434[0x4];                                      // 0x0434(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_TraceStart_1;              // 0x0438(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd_1;                // 0x0450(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_ObjectToText_ReturnValue_2;          // 0x0468(0x0010)()
	class FString                                 CallFunc_Get_ClassLog_Name_name_1;                 // 0x0478(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_3;            // 0x0488(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_1;                          // 0x04D0(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue_1;                     // 0x04E0(0x0010)()
	struct FGameplayTagContainer                  CallFunc_MakeLiteralGameplayTagContainer_ReturnValue; // 0x04F0(0x0020)()
	class FString                                 CallFunc_Conv_TextToString_ReturnValue_1;          // 0x0510(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	TScriptInterface<class IGameplayTagAssetInterface> CallFunc_HasAnyMatchingGameplayTags_self_CastInput; // 0x0520(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAnyMatchingGameplayTags_ReturnValue;   // 0x0530(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_531[0x7];                                      // 0x0531(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GetDamage_ReturnValue;                    // 0x0538(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_GetInstigator_ReturnValue_2;              // 0x0540(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0548(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_ModifyOutgoingDamageByPerk_ModifiedOutgoingDamage; // 0x0550(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayEffectSpecHandle              CallFunc_MakeOutgoingSpec_ReturnValue;             // 0x0558(0x0010)()
	struct FGameplayEffectSpecHandle              CallFunc_AssignTagSetByCallerMagnitude_ReturnValue; // 0x0568(0x0010)()
	bool                                          CallFunc_NearlyEqual_FloatFloat_ReturnValue;       // 0x0578(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_579[0x7];                                      // 0x0579(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayEffectSpecHandle              CallFunc_AssignTagSetByCallerMagnitude_ReturnValue_1; // 0x0580(0x0010)()
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0590(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_591[0x3];                                      // 0x0591(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FActiveGameplayEffectHandle            CallFunc_BP_ApplyGameplayEffectSpecToTarget_ReturnValue; // 0x0594(0x0008)(NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59C[0x4];                                      // 0x059C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayEffectContextHandle           CallFunc_GetEffectContext_ReturnValue;             // 0x05A0(0x0018)()
	float                                         CallFunc_AssignTagSetByCallerMagnitude_Magnitude_ImplicitCast; // 0x05B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_AssignTagSetByCallerMagnitude_Magnitude_ImplicitCast_1; // 0x05BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ProjectileBase_C_DamageTarget) == 0x000008, "Wrong alignment on BP_ProjectileBase_C_DamageTarget");
static_assert(sizeof(BP_ProjectileBase_C_DamageTarget) == 0x0005C0, "Wrong size on BP_ProjectileBase_C_DamageTarget");
static_assert(offsetof(BP_ProjectileBase_C_DamageTarget, Hit) == 0x000000, "Member 'BP_ProjectileBase_C_DamageTarget::Hit' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_DamageTarget, Instigator_Ability_System_Component) == 0x0000F8, "Member 'BP_ProjectileBase_C_DamageTarget::Instigator_Ability_System_Component' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_DamageTarget, Hit_Actor_Ability_System_Component) == 0x000100, "Member 'BP_ProjectileBase_C_DamageTarget::Hit_Actor_Ability_System_Component' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_DamageTarget, DamageToDeal) == 0x000108, "Member 'BP_ProjectileBase_C_DamageTarget::DamageToDeal' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_DamageTarget, Remove_this) == 0x000110, "Member 'BP_ProjectileBase_C_DamageTarget::Remove_this' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_DamageTarget, Test) == 0x000118, "Member 'BP_ProjectileBase_C_DamageTarget::Test' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_DamageTarget, CallFunc_MakeEffectContext_ReturnValue) == 0x000120, "Member 'BP_ProjectileBase_C_DamageTarget::CallFunc_MakeEffectContext_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_DamageTarget, CallFunc_GetOwner_ReturnValue) == 0x000138, "Member 'BP_ProjectileBase_C_DamageTarget::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_DamageTarget, CallFunc_IsSameTeam_Return) == 0x000140, "Member 'BP_ProjectileBase_C_DamageTarget::CallFunc_IsSameTeam_Return' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_DamageTarget, CallFunc_GetInstigator_ReturnValue) == 0x000148, "Member 'BP_ProjectileBase_C_DamageTarget::CallFunc_GetInstigator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_DamageTarget, CallFunc_ObjectIsA_ReturnValue) == 0x000150, "Member 'BP_ProjectileBase_C_DamageTarget::CallFunc_ObjectIsA_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_DamageTarget, CallFunc_GetDebugStringFromGameplayTagContainer_ReturnValue) == 0x000158, "Member 'BP_ProjectileBase_C_DamageTarget::CallFunc_GetDebugStringFromGameplayTagContainer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_DamageTarget, CallFunc_BreakHitResult_bBlockingHit) == 0x000168, "Member 'BP_ProjectileBase_C_DamageTarget::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_DamageTarget, CallFunc_BreakHitResult_bInitialOverlap) == 0x000169, "Member 'BP_ProjectileBase_C_DamageTarget::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_DamageTarget, CallFunc_BreakHitResult_Time) == 0x00016C, "Member 'BP_ProjectileBase_C_DamageTarget::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_DamageTarget, CallFunc_BreakHitResult_Distance) == 0x000170, "Member 'BP_ProjectileBase_C_DamageTarget::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_DamageTarget, CallFunc_BreakHitResult_Location) == 0x000178, "Member 'BP_ProjectileBase_C_DamageTarget::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_DamageTarget, CallFunc_BreakHitResult_ImpactPoint) == 0x000190, "Member 'BP_ProjectileBase_C_DamageTarget::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_DamageTarget, CallFunc_BreakHitResult_Normal) == 0x0001A8, "Member 'BP_ProjectileBase_C_DamageTarget::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_DamageTarget, CallFunc_BreakHitResult_ImpactNormal) == 0x0001C0, "Member 'BP_ProjectileBase_C_DamageTarget::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_DamageTarget, CallFunc_BreakHitResult_PhysMat) == 0x0001D8, "Member 'BP_ProjectileBase_C_DamageTarget::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_DamageTarget, CallFunc_BreakHitResult_HitActor) == 0x0001E0, "Member 'BP_ProjectileBase_C_DamageTarget::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_DamageTarget, CallFunc_BreakHitResult_HitComponent) == 0x0001E8, "Member 'BP_ProjectileBase_C_DamageTarget::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_DamageTarget, CallFunc_BreakHitResult_HitBoneName) == 0x0001F0, "Member 'BP_ProjectileBase_C_DamageTarget::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_DamageTarget, CallFunc_BreakHitResult_BoneName) == 0x0001F8, "Member 'BP_ProjectileBase_C_DamageTarget::CallFunc_BreakHitResult_BoneName' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_DamageTarget, CallFunc_BreakHitResult_HitItem) == 0x000200, "Member 'BP_ProjectileBase_C_DamageTarget::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_DamageTarget, CallFunc_BreakHitResult_ElementIndex) == 0x000204, "Member 'BP_ProjectileBase_C_DamageTarget::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_DamageTarget, CallFunc_BreakHitResult_FaceIndex) == 0x000208, "Member 'BP_ProjectileBase_C_DamageTarget::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_DamageTarget, CallFunc_BreakHitResult_TraceStart) == 0x000210, "Member 'BP_ProjectileBase_C_DamageTarget::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_DamageTarget, CallFunc_BreakHitResult_TraceEnd) == 0x000228, "Member 'BP_ProjectileBase_C_DamageTarget::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_DamageTarget, CallFunc_Conv_StringToText_ReturnValue) == 0x000240, "Member 'BP_ProjectileBase_C_DamageTarget::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_DamageTarget, CallFunc_Conv_ObjectToText_ReturnValue) == 0x000250, "Member 'BP_ProjectileBase_C_DamageTarget::CallFunc_Conv_ObjectToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_DamageTarget, K2Node_MakeStruct_FormatArgumentData) == 0x000260, "Member 'BP_ProjectileBase_C_DamageTarget::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_DamageTarget, K2Node_MakeStruct_FormatArgumentData_1) == 0x0002A8, "Member 'BP_ProjectileBase_C_DamageTarget::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_DamageTarget, K2Node_MakeArray_Array) == 0x0002F0, "Member 'BP_ProjectileBase_C_DamageTarget::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_DamageTarget, CallFunc_Get_ClassLog_Name_name) == 0x000300, "Member 'BP_ProjectileBase_C_DamageTarget::CallFunc_Get_ClassLog_Name_name' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_DamageTarget, CallFunc_Format_ReturnValue) == 0x000310, "Member 'BP_ProjectileBase_C_DamageTarget::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_DamageTarget, CallFunc_Conv_TextToString_ReturnValue) == 0x000320, "Member 'BP_ProjectileBase_C_DamageTarget::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_DamageTarget, CallFunc_GetInstigator_ReturnValue_1) == 0x000330, "Member 'BP_ProjectileBase_C_DamageTarget::CallFunc_GetInstigator_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_DamageTarget, CallFunc_Conv_ObjectToText_ReturnValue_1) == 0x000338, "Member 'BP_ProjectileBase_C_DamageTarget::CallFunc_Conv_ObjectToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_DamageTarget, K2Node_MakeStruct_FormatArgumentData_2) == 0x000348, "Member 'BP_ProjectileBase_C_DamageTarget::K2Node_MakeStruct_FormatArgumentData_2' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_DamageTarget, CallFunc_BreakHitResult_bBlockingHit_1) == 0x000390, "Member 'BP_ProjectileBase_C_DamageTarget::CallFunc_BreakHitResult_bBlockingHit_1' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_DamageTarget, CallFunc_BreakHitResult_bInitialOverlap_1) == 0x000391, "Member 'BP_ProjectileBase_C_DamageTarget::CallFunc_BreakHitResult_bInitialOverlap_1' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_DamageTarget, CallFunc_BreakHitResult_Time_1) == 0x000394, "Member 'BP_ProjectileBase_C_DamageTarget::CallFunc_BreakHitResult_Time_1' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_DamageTarget, CallFunc_BreakHitResult_Distance_1) == 0x000398, "Member 'BP_ProjectileBase_C_DamageTarget::CallFunc_BreakHitResult_Distance_1' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_DamageTarget, CallFunc_BreakHitResult_Location_1) == 0x0003A0, "Member 'BP_ProjectileBase_C_DamageTarget::CallFunc_BreakHitResult_Location_1' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_DamageTarget, CallFunc_BreakHitResult_ImpactPoint_1) == 0x0003B8, "Member 'BP_ProjectileBase_C_DamageTarget::CallFunc_BreakHitResult_ImpactPoint_1' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_DamageTarget, CallFunc_BreakHitResult_Normal_1) == 0x0003D0, "Member 'BP_ProjectileBase_C_DamageTarget::CallFunc_BreakHitResult_Normal_1' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_DamageTarget, CallFunc_BreakHitResult_ImpactNormal_1) == 0x0003E8, "Member 'BP_ProjectileBase_C_DamageTarget::CallFunc_BreakHitResult_ImpactNormal_1' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_DamageTarget, CallFunc_BreakHitResult_PhysMat_1) == 0x000400, "Member 'BP_ProjectileBase_C_DamageTarget::CallFunc_BreakHitResult_PhysMat_1' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_DamageTarget, CallFunc_BreakHitResult_HitActor_1) == 0x000408, "Member 'BP_ProjectileBase_C_DamageTarget::CallFunc_BreakHitResult_HitActor_1' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_DamageTarget, CallFunc_BreakHitResult_HitComponent_1) == 0x000410, "Member 'BP_ProjectileBase_C_DamageTarget::CallFunc_BreakHitResult_HitComponent_1' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_DamageTarget, CallFunc_BreakHitResult_HitBoneName_1) == 0x000418, "Member 'BP_ProjectileBase_C_DamageTarget::CallFunc_BreakHitResult_HitBoneName_1' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_DamageTarget, CallFunc_BreakHitResult_BoneName_1) == 0x000420, "Member 'BP_ProjectileBase_C_DamageTarget::CallFunc_BreakHitResult_BoneName_1' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_DamageTarget, CallFunc_BreakHitResult_HitItem_1) == 0x000428, "Member 'BP_ProjectileBase_C_DamageTarget::CallFunc_BreakHitResult_HitItem_1' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_DamageTarget, CallFunc_BreakHitResult_ElementIndex_1) == 0x00042C, "Member 'BP_ProjectileBase_C_DamageTarget::CallFunc_BreakHitResult_ElementIndex_1' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_DamageTarget, CallFunc_BreakHitResult_FaceIndex_1) == 0x000430, "Member 'BP_ProjectileBase_C_DamageTarget::CallFunc_BreakHitResult_FaceIndex_1' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_DamageTarget, CallFunc_BreakHitResult_TraceStart_1) == 0x000438, "Member 'BP_ProjectileBase_C_DamageTarget::CallFunc_BreakHitResult_TraceStart_1' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_DamageTarget, CallFunc_BreakHitResult_TraceEnd_1) == 0x000450, "Member 'BP_ProjectileBase_C_DamageTarget::CallFunc_BreakHitResult_TraceEnd_1' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_DamageTarget, CallFunc_Conv_ObjectToText_ReturnValue_2) == 0x000468, "Member 'BP_ProjectileBase_C_DamageTarget::CallFunc_Conv_ObjectToText_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_DamageTarget, CallFunc_Get_ClassLog_Name_name_1) == 0x000478, "Member 'BP_ProjectileBase_C_DamageTarget::CallFunc_Get_ClassLog_Name_name_1' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_DamageTarget, K2Node_MakeStruct_FormatArgumentData_3) == 0x000488, "Member 'BP_ProjectileBase_C_DamageTarget::K2Node_MakeStruct_FormatArgumentData_3' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_DamageTarget, K2Node_MakeArray_Array_1) == 0x0004D0, "Member 'BP_ProjectileBase_C_DamageTarget::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_DamageTarget, CallFunc_Format_ReturnValue_1) == 0x0004E0, "Member 'BP_ProjectileBase_C_DamageTarget::CallFunc_Format_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_DamageTarget, CallFunc_MakeLiteralGameplayTagContainer_ReturnValue) == 0x0004F0, "Member 'BP_ProjectileBase_C_DamageTarget::CallFunc_MakeLiteralGameplayTagContainer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_DamageTarget, CallFunc_Conv_TextToString_ReturnValue_1) == 0x000510, "Member 'BP_ProjectileBase_C_DamageTarget::CallFunc_Conv_TextToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_DamageTarget, CallFunc_HasAnyMatchingGameplayTags_self_CastInput) == 0x000520, "Member 'BP_ProjectileBase_C_DamageTarget::CallFunc_HasAnyMatchingGameplayTags_self_CastInput' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_DamageTarget, CallFunc_HasAnyMatchingGameplayTags_ReturnValue) == 0x000530, "Member 'BP_ProjectileBase_C_DamageTarget::CallFunc_HasAnyMatchingGameplayTags_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_DamageTarget, CallFunc_GetDamage_ReturnValue) == 0x000538, "Member 'BP_ProjectileBase_C_DamageTarget::CallFunc_GetDamage_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_DamageTarget, CallFunc_GetInstigator_ReturnValue_2) == 0x000540, "Member 'BP_ProjectileBase_C_DamageTarget::CallFunc_GetInstigator_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_DamageTarget, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000548, "Member 'BP_ProjectileBase_C_DamageTarget::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_DamageTarget, CallFunc_ModifyOutgoingDamageByPerk_ModifiedOutgoingDamage) == 0x000550, "Member 'BP_ProjectileBase_C_DamageTarget::CallFunc_ModifyOutgoingDamageByPerk_ModifiedOutgoingDamage' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_DamageTarget, CallFunc_MakeOutgoingSpec_ReturnValue) == 0x000558, "Member 'BP_ProjectileBase_C_DamageTarget::CallFunc_MakeOutgoingSpec_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_DamageTarget, CallFunc_AssignTagSetByCallerMagnitude_ReturnValue) == 0x000568, "Member 'BP_ProjectileBase_C_DamageTarget::CallFunc_AssignTagSetByCallerMagnitude_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_DamageTarget, CallFunc_NearlyEqual_FloatFloat_ReturnValue) == 0x000578, "Member 'BP_ProjectileBase_C_DamageTarget::CallFunc_NearlyEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_DamageTarget, CallFunc_AssignTagSetByCallerMagnitude_ReturnValue_1) == 0x000580, "Member 'BP_ProjectileBase_C_DamageTarget::CallFunc_AssignTagSetByCallerMagnitude_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_DamageTarget, CallFunc_Not_PreBool_ReturnValue) == 0x000590, "Member 'BP_ProjectileBase_C_DamageTarget::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_DamageTarget, CallFunc_BP_ApplyGameplayEffectSpecToTarget_ReturnValue) == 0x000594, "Member 'BP_ProjectileBase_C_DamageTarget::CallFunc_BP_ApplyGameplayEffectSpecToTarget_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_DamageTarget, CallFunc_GetEffectContext_ReturnValue) == 0x0005A0, "Member 'BP_ProjectileBase_C_DamageTarget::CallFunc_GetEffectContext_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_DamageTarget, CallFunc_AssignTagSetByCallerMagnitude_Magnitude_ImplicitCast) == 0x0005B8, "Member 'BP_ProjectileBase_C_DamageTarget::CallFunc_AssignTagSetByCallerMagnitude_Magnitude_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_DamageTarget, CallFunc_AssignTagSetByCallerMagnitude_Magnitude_ImplicitCast_1) == 0x0005BC, "Member 'BP_ProjectileBase_C_DamageTarget::CallFunc_AssignTagSetByCallerMagnitude_Magnitude_ImplicitCast_1' has a wrong offset!");

// Function BP_ProjectileBase.BP_ProjectileBase_C.DoTargetImpactCosmetics
// 0x02A0 (0x02A0 - 0x0000)
struct BP_ProjectileBase_C_DoTargetImpactCosmetics final
{
public:
	struct FHitResult                             Hit;                                               // 0x0000(0x00F8)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class APawn*                                  CallFunc_GetInstigator_ReturnValue;                // 0x00F8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x0101(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_102[0x2];                                      // 0x0102(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x0104(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x0108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_10C[0x4];                                      // 0x010C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x0110(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x0128(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x0140(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x0158(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0170(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0178(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0180(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0188(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_BoneName;                  // 0x0190(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0198(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x019C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x01A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A4[0x4];                                      // 0x01A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x01A8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x01C0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class ITeamableInterface>    K2Node_DynamicCast_AsTeamable_Interface;           // 0x01D8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x01E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E9[0x7];                                      // 0x01E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x01F0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetTeamID_ReturnValue;                    // 0x0208(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_209[0x7];                                      // 0x0209(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x0210(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class II_Hittable_C>         K2Node_DynamicCast_AsI_Hittable;                   // 0x0228(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0238(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_239[0x7];                                      // 0x0239(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class ITeamableInterface>    K2Node_DynamicCast_AsTeamable_Interface_1;         // 0x0240(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0250(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_DoesImplementInterface_ReturnValue;       // 0x0251(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetTeamID_ReturnValue_1;                  // 0x0252(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0253(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_254[0x4];                                      // 0x0254(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_MakeLiteralDouble_ReturnValue;            // 0x0258(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_DoubleToVector_ReturnValue;          // 0x0260(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_GetInstigator_ReturnValue_1;              // 0x0278(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue;        // 0x0280(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ImpactCosmetics_ChangedAttributes;        // 0x0298(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ProjectileBase_C_DoTargetImpactCosmetics) == 0x000008, "Wrong alignment on BP_ProjectileBase_C_DoTargetImpactCosmetics");
static_assert(sizeof(BP_ProjectileBase_C_DoTargetImpactCosmetics) == 0x0002A0, "Wrong size on BP_ProjectileBase_C_DoTargetImpactCosmetics");
static_assert(offsetof(BP_ProjectileBase_C_DoTargetImpactCosmetics, Hit) == 0x000000, "Member 'BP_ProjectileBase_C_DoTargetImpactCosmetics::Hit' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_DoTargetImpactCosmetics, CallFunc_GetInstigator_ReturnValue) == 0x0000F8, "Member 'BP_ProjectileBase_C_DoTargetImpactCosmetics::CallFunc_GetInstigator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_DoTargetImpactCosmetics, CallFunc_BreakHitResult_bBlockingHit) == 0x000100, "Member 'BP_ProjectileBase_C_DoTargetImpactCosmetics::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_DoTargetImpactCosmetics, CallFunc_BreakHitResult_bInitialOverlap) == 0x000101, "Member 'BP_ProjectileBase_C_DoTargetImpactCosmetics::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_DoTargetImpactCosmetics, CallFunc_BreakHitResult_Time) == 0x000104, "Member 'BP_ProjectileBase_C_DoTargetImpactCosmetics::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_DoTargetImpactCosmetics, CallFunc_BreakHitResult_Distance) == 0x000108, "Member 'BP_ProjectileBase_C_DoTargetImpactCosmetics::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_DoTargetImpactCosmetics, CallFunc_BreakHitResult_Location) == 0x000110, "Member 'BP_ProjectileBase_C_DoTargetImpactCosmetics::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_DoTargetImpactCosmetics, CallFunc_BreakHitResult_ImpactPoint) == 0x000128, "Member 'BP_ProjectileBase_C_DoTargetImpactCosmetics::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_DoTargetImpactCosmetics, CallFunc_BreakHitResult_Normal) == 0x000140, "Member 'BP_ProjectileBase_C_DoTargetImpactCosmetics::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_DoTargetImpactCosmetics, CallFunc_BreakHitResult_ImpactNormal) == 0x000158, "Member 'BP_ProjectileBase_C_DoTargetImpactCosmetics::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_DoTargetImpactCosmetics, CallFunc_BreakHitResult_PhysMat) == 0x000170, "Member 'BP_ProjectileBase_C_DoTargetImpactCosmetics::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_DoTargetImpactCosmetics, CallFunc_BreakHitResult_HitActor) == 0x000178, "Member 'BP_ProjectileBase_C_DoTargetImpactCosmetics::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_DoTargetImpactCosmetics, CallFunc_BreakHitResult_HitComponent) == 0x000180, "Member 'BP_ProjectileBase_C_DoTargetImpactCosmetics::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_DoTargetImpactCosmetics, CallFunc_BreakHitResult_HitBoneName) == 0x000188, "Member 'BP_ProjectileBase_C_DoTargetImpactCosmetics::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_DoTargetImpactCosmetics, CallFunc_BreakHitResult_BoneName) == 0x000190, "Member 'BP_ProjectileBase_C_DoTargetImpactCosmetics::CallFunc_BreakHitResult_BoneName' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_DoTargetImpactCosmetics, CallFunc_BreakHitResult_HitItem) == 0x000198, "Member 'BP_ProjectileBase_C_DoTargetImpactCosmetics::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_DoTargetImpactCosmetics, CallFunc_BreakHitResult_ElementIndex) == 0x00019C, "Member 'BP_ProjectileBase_C_DoTargetImpactCosmetics::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_DoTargetImpactCosmetics, CallFunc_BreakHitResult_FaceIndex) == 0x0001A0, "Member 'BP_ProjectileBase_C_DoTargetImpactCosmetics::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_DoTargetImpactCosmetics, CallFunc_BreakHitResult_TraceStart) == 0x0001A8, "Member 'BP_ProjectileBase_C_DoTargetImpactCosmetics::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_DoTargetImpactCosmetics, CallFunc_BreakHitResult_TraceEnd) == 0x0001C0, "Member 'BP_ProjectileBase_C_DoTargetImpactCosmetics::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_DoTargetImpactCosmetics, K2Node_DynamicCast_AsTeamable_Interface) == 0x0001D8, "Member 'BP_ProjectileBase_C_DoTargetImpactCosmetics::K2Node_DynamicCast_AsTeamable_Interface' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_DoTargetImpactCosmetics, K2Node_DynamicCast_bSuccess) == 0x0001E8, "Member 'BP_ProjectileBase_C_DoTargetImpactCosmetics::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_DoTargetImpactCosmetics, CallFunc_Subtract_VectorVector_ReturnValue) == 0x0001F0, "Member 'BP_ProjectileBase_C_DoTargetImpactCosmetics::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_DoTargetImpactCosmetics, CallFunc_GetTeamID_ReturnValue) == 0x000208, "Member 'BP_ProjectileBase_C_DoTargetImpactCosmetics::CallFunc_GetTeamID_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_DoTargetImpactCosmetics, CallFunc_Normal_ReturnValue) == 0x000210, "Member 'BP_ProjectileBase_C_DoTargetImpactCosmetics::CallFunc_Normal_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_DoTargetImpactCosmetics, K2Node_DynamicCast_AsI_Hittable) == 0x000228, "Member 'BP_ProjectileBase_C_DoTargetImpactCosmetics::K2Node_DynamicCast_AsI_Hittable' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_DoTargetImpactCosmetics, K2Node_DynamicCast_bSuccess_1) == 0x000238, "Member 'BP_ProjectileBase_C_DoTargetImpactCosmetics::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_DoTargetImpactCosmetics, K2Node_DynamicCast_AsTeamable_Interface_1) == 0x000240, "Member 'BP_ProjectileBase_C_DoTargetImpactCosmetics::K2Node_DynamicCast_AsTeamable_Interface_1' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_DoTargetImpactCosmetics, K2Node_DynamicCast_bSuccess_2) == 0x000250, "Member 'BP_ProjectileBase_C_DoTargetImpactCosmetics::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_DoTargetImpactCosmetics, CallFunc_DoesImplementInterface_ReturnValue) == 0x000251, "Member 'BP_ProjectileBase_C_DoTargetImpactCosmetics::CallFunc_DoesImplementInterface_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_DoTargetImpactCosmetics, CallFunc_GetTeamID_ReturnValue_1) == 0x000252, "Member 'BP_ProjectileBase_C_DoTargetImpactCosmetics::CallFunc_GetTeamID_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_DoTargetImpactCosmetics, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000253, "Member 'BP_ProjectileBase_C_DoTargetImpactCosmetics::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_DoTargetImpactCosmetics, CallFunc_MakeLiteralDouble_ReturnValue) == 0x000258, "Member 'BP_ProjectileBase_C_DoTargetImpactCosmetics::CallFunc_MakeLiteralDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_DoTargetImpactCosmetics, CallFunc_Conv_DoubleToVector_ReturnValue) == 0x000260, "Member 'BP_ProjectileBase_C_DoTargetImpactCosmetics::CallFunc_Conv_DoubleToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_DoTargetImpactCosmetics, CallFunc_GetInstigator_ReturnValue_1) == 0x000278, "Member 'BP_ProjectileBase_C_DoTargetImpactCosmetics::CallFunc_GetInstigator_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_DoTargetImpactCosmetics, CallFunc_Multiply_VectorVector_ReturnValue) == 0x000280, "Member 'BP_ProjectileBase_C_DoTargetImpactCosmetics::CallFunc_Multiply_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_DoTargetImpactCosmetics, CallFunc_ImpactCosmetics_ChangedAttributes) == 0x000298, "Member 'BP_ProjectileBase_C_DoTargetImpactCosmetics::CallFunc_ImpactCosmetics_ChangedAttributes' has a wrong offset!");

// Function BP_ProjectileBase.BP_ProjectileBase_C.ExecuteUbergraph_BP_ProjectileBase
// 0x0870 (0x0870 - 0x0000)
struct BP_ProjectileBase_C_ExecuteUbergraph_BP_ProjectileBase final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_K2_SetActorLocation_SweepHitResult;       // 0x0008(0x00F8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_SetActorLocation_ReturnValue;          // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_101[0x3];                                      // 0x0101(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0104(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_2;                               // 0x010C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_3;                               // 0x0110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_4;                               // 0x0114(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_5;                               // 0x0118(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_6;                               // 0x011C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_7;                               // 0x0120(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_8;                               // 0x0124(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_9;                               // 0x0128(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_10;                              // 0x012C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(bool IsEnabled)>               K2Node_CreateDelegate_OutputDelegate;              // 0x0130(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(struct FHitResult& ImpactResult)> K2Node_CreateDelegate_OutputDelegate_1;            // 0x0140(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(struct FHitResult& ImpactResult, struct FVector& ImpactVelocity)> K2Node_CreateDelegate_OutputDelegate_2;            // 0x0150(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UProjectileMovementComponent*           CallFunc_AddComponentByClass_ReturnValue;          // 0x0160(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0168(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Temp_byte_Variable;                                // 0x0169(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x016A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Temp_byte_Variable_1;                              // 0x016B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x016C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_16D[0x3];                                      // 0x016D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                K2Node_CustomEvent_Location_1;                     // 0x0170(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      K2Node_CustomEvent_PhysicalMaterial;               // 0x0188(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             K2Node_CustomEvent_HitResult;                      // 0x0190(0x00F8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class UAudioComponent*                        CallFunc_SpawnSoundAtLocation_ReturnValue;         // 0x0288(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0290(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_291[0x7];                                      // 0x0291(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                K2Node_CustomEvent_Location;                       // 0x0298(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_11;                              // 0x02B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2B4[0x4];                                      // 0x02B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAudioComponent*                        CallFunc_SpawnSoundAtLocation_ReturnValue_1;       // 0x02B8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x02C0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Get_ClassLog_Name_name;                   // 0x02D8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_VectorToString_ReturnValue;          // 0x02E8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FVector                                K2Node_CustomEvent_NewVelocityWorldSpace;          // 0x02F8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x0310(0x0060)(ConstParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_GetInstigator_ReturnValue;                // 0x0370(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_InverseTransformDirection_ReturnValue;    // 0x0378(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  K2Node_CustomEvent_NewInstigator;                  // 0x0390(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_GetInstigator_ReturnValue_1;              // 0x0398(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_12;                              // 0x03A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A4[0x4];                                      // 0x03A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameUserSettings*                      CallFunc_GetGameUserSettings_ReturnValue;          // 0x03A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ULyraSettingsLocal*                     K2Node_DynamicCast_AsLyra_Settings_Local;          // 0x03B0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x03B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_IsEnabled;                      // 0x03B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3BA[0x6];                                      // 0x03BA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_CustomEvent_ImpactResult_1;                 // 0x03C0(0x00F8)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FHitResult                             K2Node_CustomEvent_ImpactResult;                   // 0x04B8(0x00F8)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FVector                                K2Node_CustomEvent_ImpactVelocity;                 // 0x05B0(0x0018)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x05C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5C9[0x3];                                      // 0x05C9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_13;                              // 0x05CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_GetInstigator_ReturnValue_2;              // 0x05D0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_14;                              // 0x05D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_15;                              // 0x05DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_16;                              // 0x05E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_17;                              // 0x05E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPhysicalSurface                              Temp_byte_Variable_2;                              // 0x05E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5E9[0x3];                                      // 0x05E9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_18;                              // 0x05EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_GetInstigator_ReturnValue_3;              // 0x05F0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Select_Default;                             // 0x05F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5FC[0x4];                                      // 0x05FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class ITeamableInterface>    K2Node_DynamicCast_AsTeamable_Interface;           // 0x0600(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0610(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetTeamID_ReturnValue;                    // 0x0611(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_612[0x6];                                      // 0x0612(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x0618(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent;    // 0x0630(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor;             // 0x0638(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp;              // 0x0640(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex;         // 0x0648(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bFromSweep;             // 0x064C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_64D[0x3];                                      // 0x064D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_ComponentBoundEvent_SweepResult;            // 0x0650(0x00F8)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FHitResult                             CallFunc_MakeHitResult_ReturnValue;                // 0x0748(0x00F8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class ACharacter*                             K2Node_DynamicCast_AsCharacter;                    // 0x0840(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0848(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_849[0x7];                                      // 0x0849(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class ITeamableInterface>    K2Node_DynamicCast_AsTeamable_Interface_1;         // 0x0850(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0860(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetTeamID_ReturnValue_1;                  // 0x0861(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ProjectileBase_C_ExecuteUbergraph_BP_ProjectileBase) == 0x000010, "Wrong alignment on BP_ProjectileBase_C_ExecuteUbergraph_BP_ProjectileBase");
static_assert(sizeof(BP_ProjectileBase_C_ExecuteUbergraph_BP_ProjectileBase) == 0x000870, "Wrong size on BP_ProjectileBase_C_ExecuteUbergraph_BP_ProjectileBase");
static_assert(offsetof(BP_ProjectileBase_C_ExecuteUbergraph_BP_ProjectileBase, EntryPoint) == 0x000000, "Member 'BP_ProjectileBase_C_ExecuteUbergraph_BP_ProjectileBase::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_ExecuteUbergraph_BP_ProjectileBase, CallFunc_K2_SetActorLocation_SweepHitResult) == 0x000008, "Member 'BP_ProjectileBase_C_ExecuteUbergraph_BP_ProjectileBase::CallFunc_K2_SetActorLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_ExecuteUbergraph_BP_ProjectileBase, CallFunc_K2_SetActorLocation_ReturnValue) == 0x000100, "Member 'BP_ProjectileBase_C_ExecuteUbergraph_BP_ProjectileBase::CallFunc_K2_SetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_ExecuteUbergraph_BP_ProjectileBase, Temp_int_Variable) == 0x000104, "Member 'BP_ProjectileBase_C_ExecuteUbergraph_BP_ProjectileBase::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_ExecuteUbergraph_BP_ProjectileBase, Temp_int_Variable_1) == 0x000108, "Member 'BP_ProjectileBase_C_ExecuteUbergraph_BP_ProjectileBase::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_ExecuteUbergraph_BP_ProjectileBase, Temp_int_Variable_2) == 0x00010C, "Member 'BP_ProjectileBase_C_ExecuteUbergraph_BP_ProjectileBase::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_ExecuteUbergraph_BP_ProjectileBase, Temp_int_Variable_3) == 0x000110, "Member 'BP_ProjectileBase_C_ExecuteUbergraph_BP_ProjectileBase::Temp_int_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_ExecuteUbergraph_BP_ProjectileBase, Temp_int_Variable_4) == 0x000114, "Member 'BP_ProjectileBase_C_ExecuteUbergraph_BP_ProjectileBase::Temp_int_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_ExecuteUbergraph_BP_ProjectileBase, Temp_int_Variable_5) == 0x000118, "Member 'BP_ProjectileBase_C_ExecuteUbergraph_BP_ProjectileBase::Temp_int_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_ExecuteUbergraph_BP_ProjectileBase, Temp_int_Variable_6) == 0x00011C, "Member 'BP_ProjectileBase_C_ExecuteUbergraph_BP_ProjectileBase::Temp_int_Variable_6' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_ExecuteUbergraph_BP_ProjectileBase, Temp_int_Variable_7) == 0x000120, "Member 'BP_ProjectileBase_C_ExecuteUbergraph_BP_ProjectileBase::Temp_int_Variable_7' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_ExecuteUbergraph_BP_ProjectileBase, Temp_int_Variable_8) == 0x000124, "Member 'BP_ProjectileBase_C_ExecuteUbergraph_BP_ProjectileBase::Temp_int_Variable_8' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_ExecuteUbergraph_BP_ProjectileBase, Temp_int_Variable_9) == 0x000128, "Member 'BP_ProjectileBase_C_ExecuteUbergraph_BP_ProjectileBase::Temp_int_Variable_9' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_ExecuteUbergraph_BP_ProjectileBase, Temp_int_Variable_10) == 0x00012C, "Member 'BP_ProjectileBase_C_ExecuteUbergraph_BP_ProjectileBase::Temp_int_Variable_10' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_ExecuteUbergraph_BP_ProjectileBase, K2Node_CreateDelegate_OutputDelegate) == 0x000130, "Member 'BP_ProjectileBase_C_ExecuteUbergraph_BP_ProjectileBase::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_ExecuteUbergraph_BP_ProjectileBase, K2Node_CreateDelegate_OutputDelegate_1) == 0x000140, "Member 'BP_ProjectileBase_C_ExecuteUbergraph_BP_ProjectileBase::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_ExecuteUbergraph_BP_ProjectileBase, K2Node_CreateDelegate_OutputDelegate_2) == 0x000150, "Member 'BP_ProjectileBase_C_ExecuteUbergraph_BP_ProjectileBase::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_ExecuteUbergraph_BP_ProjectileBase, CallFunc_AddComponentByClass_ReturnValue) == 0x000160, "Member 'BP_ProjectileBase_C_ExecuteUbergraph_BP_ProjectileBase::CallFunc_AddComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_ExecuteUbergraph_BP_ProjectileBase, CallFunc_IsValid_ReturnValue) == 0x000168, "Member 'BP_ProjectileBase_C_ExecuteUbergraph_BP_ProjectileBase::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_ExecuteUbergraph_BP_ProjectileBase, Temp_byte_Variable) == 0x000169, "Member 'BP_ProjectileBase_C_ExecuteUbergraph_BP_ProjectileBase::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_ExecuteUbergraph_BP_ProjectileBase, CallFunc_IsValid_ReturnValue_1) == 0x00016A, "Member 'BP_ProjectileBase_C_ExecuteUbergraph_BP_ProjectileBase::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_ExecuteUbergraph_BP_ProjectileBase, Temp_byte_Variable_1) == 0x00016B, "Member 'BP_ProjectileBase_C_ExecuteUbergraph_BP_ProjectileBase::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_ExecuteUbergraph_BP_ProjectileBase, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x00016C, "Member 'BP_ProjectileBase_C_ExecuteUbergraph_BP_ProjectileBase::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_ExecuteUbergraph_BP_ProjectileBase, K2Node_CustomEvent_Location_1) == 0x000170, "Member 'BP_ProjectileBase_C_ExecuteUbergraph_BP_ProjectileBase::K2Node_CustomEvent_Location_1' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_ExecuteUbergraph_BP_ProjectileBase, K2Node_CustomEvent_PhysicalMaterial) == 0x000188, "Member 'BP_ProjectileBase_C_ExecuteUbergraph_BP_ProjectileBase::K2Node_CustomEvent_PhysicalMaterial' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_ExecuteUbergraph_BP_ProjectileBase, K2Node_CustomEvent_HitResult) == 0x000190, "Member 'BP_ProjectileBase_C_ExecuteUbergraph_BP_ProjectileBase::K2Node_CustomEvent_HitResult' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_ExecuteUbergraph_BP_ProjectileBase, CallFunc_SpawnSoundAtLocation_ReturnValue) == 0x000288, "Member 'BP_ProjectileBase_C_ExecuteUbergraph_BP_ProjectileBase::CallFunc_SpawnSoundAtLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_ExecuteUbergraph_BP_ProjectileBase, CallFunc_IsValid_ReturnValue_2) == 0x000290, "Member 'BP_ProjectileBase_C_ExecuteUbergraph_BP_ProjectileBase::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_ExecuteUbergraph_BP_ProjectileBase, K2Node_CustomEvent_Location) == 0x000298, "Member 'BP_ProjectileBase_C_ExecuteUbergraph_BP_ProjectileBase::K2Node_CustomEvent_Location' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_ExecuteUbergraph_BP_ProjectileBase, Temp_int_Variable_11) == 0x0002B0, "Member 'BP_ProjectileBase_C_ExecuteUbergraph_BP_ProjectileBase::Temp_int_Variable_11' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_ExecuteUbergraph_BP_ProjectileBase, CallFunc_SpawnSoundAtLocation_ReturnValue_1) == 0x0002B8, "Member 'BP_ProjectileBase_C_ExecuteUbergraph_BP_ProjectileBase::CallFunc_SpawnSoundAtLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_ExecuteUbergraph_BP_ProjectileBase, CallFunc_K2_GetActorLocation_ReturnValue) == 0x0002C0, "Member 'BP_ProjectileBase_C_ExecuteUbergraph_BP_ProjectileBase::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_ExecuteUbergraph_BP_ProjectileBase, CallFunc_Get_ClassLog_Name_name) == 0x0002D8, "Member 'BP_ProjectileBase_C_ExecuteUbergraph_BP_ProjectileBase::CallFunc_Get_ClassLog_Name_name' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_ExecuteUbergraph_BP_ProjectileBase, CallFunc_Conv_VectorToString_ReturnValue) == 0x0002E8, "Member 'BP_ProjectileBase_C_ExecuteUbergraph_BP_ProjectileBase::CallFunc_Conv_VectorToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_ExecuteUbergraph_BP_ProjectileBase, K2Node_CustomEvent_NewVelocityWorldSpace) == 0x0002F8, "Member 'BP_ProjectileBase_C_ExecuteUbergraph_BP_ProjectileBase::K2Node_CustomEvent_NewVelocityWorldSpace' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_ExecuteUbergraph_BP_ProjectileBase, CallFunc_GetTransform_ReturnValue) == 0x000310, "Member 'BP_ProjectileBase_C_ExecuteUbergraph_BP_ProjectileBase::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_ExecuteUbergraph_BP_ProjectileBase, CallFunc_GetInstigator_ReturnValue) == 0x000370, "Member 'BP_ProjectileBase_C_ExecuteUbergraph_BP_ProjectileBase::CallFunc_GetInstigator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_ExecuteUbergraph_BP_ProjectileBase, CallFunc_InverseTransformDirection_ReturnValue) == 0x000378, "Member 'BP_ProjectileBase_C_ExecuteUbergraph_BP_ProjectileBase::CallFunc_InverseTransformDirection_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_ExecuteUbergraph_BP_ProjectileBase, K2Node_CustomEvent_NewInstigator) == 0x000390, "Member 'BP_ProjectileBase_C_ExecuteUbergraph_BP_ProjectileBase::K2Node_CustomEvent_NewInstigator' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_ExecuteUbergraph_BP_ProjectileBase, CallFunc_GetInstigator_ReturnValue_1) == 0x000398, "Member 'BP_ProjectileBase_C_ExecuteUbergraph_BP_ProjectileBase::CallFunc_GetInstigator_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_ExecuteUbergraph_BP_ProjectileBase, Temp_int_Variable_12) == 0x0003A0, "Member 'BP_ProjectileBase_C_ExecuteUbergraph_BP_ProjectileBase::Temp_int_Variable_12' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_ExecuteUbergraph_BP_ProjectileBase, CallFunc_GetGameUserSettings_ReturnValue) == 0x0003A8, "Member 'BP_ProjectileBase_C_ExecuteUbergraph_BP_ProjectileBase::CallFunc_GetGameUserSettings_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_ExecuteUbergraph_BP_ProjectileBase, K2Node_DynamicCast_AsLyra_Settings_Local) == 0x0003B0, "Member 'BP_ProjectileBase_C_ExecuteUbergraph_BP_ProjectileBase::K2Node_DynamicCast_AsLyra_Settings_Local' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_ExecuteUbergraph_BP_ProjectileBase, K2Node_DynamicCast_bSuccess) == 0x0003B8, "Member 'BP_ProjectileBase_C_ExecuteUbergraph_BP_ProjectileBase::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_ExecuteUbergraph_BP_ProjectileBase, K2Node_CustomEvent_IsEnabled) == 0x0003B9, "Member 'BP_ProjectileBase_C_ExecuteUbergraph_BP_ProjectileBase::K2Node_CustomEvent_IsEnabled' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_ExecuteUbergraph_BP_ProjectileBase, K2Node_CustomEvent_ImpactResult_1) == 0x0003C0, "Member 'BP_ProjectileBase_C_ExecuteUbergraph_BP_ProjectileBase::K2Node_CustomEvent_ImpactResult_1' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_ExecuteUbergraph_BP_ProjectileBase, K2Node_CustomEvent_ImpactResult) == 0x0004B8, "Member 'BP_ProjectileBase_C_ExecuteUbergraph_BP_ProjectileBase::K2Node_CustomEvent_ImpactResult' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_ExecuteUbergraph_BP_ProjectileBase, K2Node_CustomEvent_ImpactVelocity) == 0x0005B0, "Member 'BP_ProjectileBase_C_ExecuteUbergraph_BP_ProjectileBase::K2Node_CustomEvent_ImpactVelocity' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_ExecuteUbergraph_BP_ProjectileBase, CallFunc_IsValid_ReturnValue_3) == 0x0005C8, "Member 'BP_ProjectileBase_C_ExecuteUbergraph_BP_ProjectileBase::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_ExecuteUbergraph_BP_ProjectileBase, Temp_int_Variable_13) == 0x0005CC, "Member 'BP_ProjectileBase_C_ExecuteUbergraph_BP_ProjectileBase::Temp_int_Variable_13' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_ExecuteUbergraph_BP_ProjectileBase, CallFunc_GetInstigator_ReturnValue_2) == 0x0005D0, "Member 'BP_ProjectileBase_C_ExecuteUbergraph_BP_ProjectileBase::CallFunc_GetInstigator_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_ExecuteUbergraph_BP_ProjectileBase, Temp_int_Variable_14) == 0x0005D8, "Member 'BP_ProjectileBase_C_ExecuteUbergraph_BP_ProjectileBase::Temp_int_Variable_14' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_ExecuteUbergraph_BP_ProjectileBase, Temp_int_Variable_15) == 0x0005DC, "Member 'BP_ProjectileBase_C_ExecuteUbergraph_BP_ProjectileBase::Temp_int_Variable_15' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_ExecuteUbergraph_BP_ProjectileBase, Temp_int_Variable_16) == 0x0005E0, "Member 'BP_ProjectileBase_C_ExecuteUbergraph_BP_ProjectileBase::Temp_int_Variable_16' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_ExecuteUbergraph_BP_ProjectileBase, Temp_int_Variable_17) == 0x0005E4, "Member 'BP_ProjectileBase_C_ExecuteUbergraph_BP_ProjectileBase::Temp_int_Variable_17' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_ExecuteUbergraph_BP_ProjectileBase, Temp_byte_Variable_2) == 0x0005E8, "Member 'BP_ProjectileBase_C_ExecuteUbergraph_BP_ProjectileBase::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_ExecuteUbergraph_BP_ProjectileBase, Temp_int_Variable_18) == 0x0005EC, "Member 'BP_ProjectileBase_C_ExecuteUbergraph_BP_ProjectileBase::Temp_int_Variable_18' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_ExecuteUbergraph_BP_ProjectileBase, CallFunc_GetInstigator_ReturnValue_3) == 0x0005F0, "Member 'BP_ProjectileBase_C_ExecuteUbergraph_BP_ProjectileBase::CallFunc_GetInstigator_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_ExecuteUbergraph_BP_ProjectileBase, K2Node_Select_Default) == 0x0005F8, "Member 'BP_ProjectileBase_C_ExecuteUbergraph_BP_ProjectileBase::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_ExecuteUbergraph_BP_ProjectileBase, K2Node_DynamicCast_AsTeamable_Interface) == 0x000600, "Member 'BP_ProjectileBase_C_ExecuteUbergraph_BP_ProjectileBase::K2Node_DynamicCast_AsTeamable_Interface' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_ExecuteUbergraph_BP_ProjectileBase, K2Node_DynamicCast_bSuccess_1) == 0x000610, "Member 'BP_ProjectileBase_C_ExecuteUbergraph_BP_ProjectileBase::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_ExecuteUbergraph_BP_ProjectileBase, CallFunc_GetTeamID_ReturnValue) == 0x000611, "Member 'BP_ProjectileBase_C_ExecuteUbergraph_BP_ProjectileBase::CallFunc_GetTeamID_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_ExecuteUbergraph_BP_ProjectileBase, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x000618, "Member 'BP_ProjectileBase_C_ExecuteUbergraph_BP_ProjectileBase::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_ExecuteUbergraph_BP_ProjectileBase, K2Node_ComponentBoundEvent_OverlappedComponent) == 0x000630, "Member 'BP_ProjectileBase_C_ExecuteUbergraph_BP_ProjectileBase::K2Node_ComponentBoundEvent_OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_ExecuteUbergraph_BP_ProjectileBase, K2Node_ComponentBoundEvent_OtherActor) == 0x000638, "Member 'BP_ProjectileBase_C_ExecuteUbergraph_BP_ProjectileBase::K2Node_ComponentBoundEvent_OtherActor' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_ExecuteUbergraph_BP_ProjectileBase, K2Node_ComponentBoundEvent_OtherComp) == 0x000640, "Member 'BP_ProjectileBase_C_ExecuteUbergraph_BP_ProjectileBase::K2Node_ComponentBoundEvent_OtherComp' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_ExecuteUbergraph_BP_ProjectileBase, K2Node_ComponentBoundEvent_OtherBodyIndex) == 0x000648, "Member 'BP_ProjectileBase_C_ExecuteUbergraph_BP_ProjectileBase::K2Node_ComponentBoundEvent_OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_ExecuteUbergraph_BP_ProjectileBase, K2Node_ComponentBoundEvent_bFromSweep) == 0x00064C, "Member 'BP_ProjectileBase_C_ExecuteUbergraph_BP_ProjectileBase::K2Node_ComponentBoundEvent_bFromSweep' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_ExecuteUbergraph_BP_ProjectileBase, K2Node_ComponentBoundEvent_SweepResult) == 0x000650, "Member 'BP_ProjectileBase_C_ExecuteUbergraph_BP_ProjectileBase::K2Node_ComponentBoundEvent_SweepResult' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_ExecuteUbergraph_BP_ProjectileBase, CallFunc_MakeHitResult_ReturnValue) == 0x000748, "Member 'BP_ProjectileBase_C_ExecuteUbergraph_BP_ProjectileBase::CallFunc_MakeHitResult_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_ExecuteUbergraph_BP_ProjectileBase, K2Node_DynamicCast_AsCharacter) == 0x000840, "Member 'BP_ProjectileBase_C_ExecuteUbergraph_BP_ProjectileBase::K2Node_DynamicCast_AsCharacter' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_ExecuteUbergraph_BP_ProjectileBase, K2Node_DynamicCast_bSuccess_2) == 0x000848, "Member 'BP_ProjectileBase_C_ExecuteUbergraph_BP_ProjectileBase::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_ExecuteUbergraph_BP_ProjectileBase, K2Node_DynamicCast_AsTeamable_Interface_1) == 0x000850, "Member 'BP_ProjectileBase_C_ExecuteUbergraph_BP_ProjectileBase::K2Node_DynamicCast_AsTeamable_Interface_1' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_ExecuteUbergraph_BP_ProjectileBase, K2Node_DynamicCast_bSuccess_3) == 0x000860, "Member 'BP_ProjectileBase_C_ExecuteUbergraph_BP_ProjectileBase::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_ExecuteUbergraph_BP_ProjectileBase, CallFunc_GetTeamID_ReturnValue_1) == 0x000861, "Member 'BP_ProjectileBase_C_ExecuteUbergraph_BP_ProjectileBase::CallFunc_GetTeamID_ReturnValue_1' has a wrong offset!");

// Function BP_ProjectileBase.BP_ProjectileBase_C.GetDamage
// 0x0028 (0x0028 - 0x0000)
struct BP_ProjectileBase_C_GetDamage final
{
public:
	double                                        ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_CalculateDamageFalloffMultiplier_ReturnValue; // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_DoubleDouble_ReturnValue;    // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Lerp_ReturnValue;                         // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ProjectileBase_C_GetDamage) == 0x000008, "Wrong alignment on BP_ProjectileBase_C_GetDamage");
static_assert(sizeof(BP_ProjectileBase_C_GetDamage) == 0x000028, "Wrong size on BP_ProjectileBase_C_GetDamage");
static_assert(offsetof(BP_ProjectileBase_C_GetDamage, ReturnValue) == 0x000000, "Member 'BP_ProjectileBase_C_GetDamage::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_GetDamage, CallFunc_CalculateDamageFalloffMultiplier_ReturnValue) == 0x000008, "Member 'BP_ProjectileBase_C_GetDamage::CallFunc_CalculateDamageFalloffMultiplier_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_GetDamage, CallFunc_GreaterEqual_DoubleDouble_ReturnValue) == 0x000010, "Member 'BP_ProjectileBase_C_GetDamage::CallFunc_GreaterEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_GetDamage, CallFunc_Lerp_ReturnValue) == 0x000018, "Member 'BP_ProjectileBase_C_GetDamage::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_GetDamage, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000020, "Member 'BP_ProjectileBase_C_GetDamage::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");

// Function BP_ProjectileBase.BP_ProjectileBase_C.GetProjectileComponent
// 0x0008 (0x0008 - 0x0000)
struct BP_ProjectileBase_C_GetProjectileComponent final
{
public:
	class UProjectileMovementComponent*           ProjectileComponent_0;                             // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ProjectileBase_C_GetProjectileComponent) == 0x000008, "Wrong alignment on BP_ProjectileBase_C_GetProjectileComponent");
static_assert(sizeof(BP_ProjectileBase_C_GetProjectileComponent) == 0x000008, "Wrong size on BP_ProjectileBase_C_GetProjectileComponent");
static_assert(offsetof(BP_ProjectileBase_C_GetProjectileComponent, ProjectileComponent_0) == 0x000000, "Member 'BP_ProjectileBase_C_GetProjectileComponent::ProjectileComponent_0' has a wrong offset!");

// Function BP_ProjectileBase.BP_ProjectileBase_C.HandleBounce
// 0x0218 (0x0218 - 0x0000)
struct BP_ProjectileBase_C_HandleBounce final
{
public:
	struct FHitResult                             Hit;                                               // 0x0000(0x00F8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FVector                                Impact_Velocity;                                   // 0x00F8(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsServer_ReturnValue;                     // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_111[0x7];                                      // 0x0111(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_CalculateImpactAngle_ReturnValue;         // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x0121(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_122[0x2];                                      // 0x0122(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x0124(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x0128(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12C[0x4];                                      // 0x012C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x0130(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x0148(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x0160(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x0178(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0190(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0198(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x01A0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x01A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_BoneName;                  // 0x01B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x01B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x01BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x01C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C4[0x4];                                      // 0x01C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x01C8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x01E0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_BlockingVolume_C*                   K2Node_DynamicCast_AsBP_Blocking_Volume;           // 0x01F8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0200(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0201(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_202[0x6];                                      // 0x0202(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UAbilitySystemComponent*                CallFunc_GetAbilitySystemComponent_ReturnValue;    // 0x0208(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0210(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x0211(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x0212(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ProjectileBase_C_HandleBounce) == 0x000008, "Wrong alignment on BP_ProjectileBase_C_HandleBounce");
static_assert(sizeof(BP_ProjectileBase_C_HandleBounce) == 0x000218, "Wrong size on BP_ProjectileBase_C_HandleBounce");
static_assert(offsetof(BP_ProjectileBase_C_HandleBounce, Hit) == 0x000000, "Member 'BP_ProjectileBase_C_HandleBounce::Hit' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_HandleBounce, Impact_Velocity) == 0x0000F8, "Member 'BP_ProjectileBase_C_HandleBounce::Impact_Velocity' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_HandleBounce, CallFunc_IsServer_ReturnValue) == 0x000110, "Member 'BP_ProjectileBase_C_HandleBounce::CallFunc_IsServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_HandleBounce, CallFunc_CalculateImpactAngle_ReturnValue) == 0x000118, "Member 'BP_ProjectileBase_C_HandleBounce::CallFunc_CalculateImpactAngle_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_HandleBounce, CallFunc_BreakHitResult_bBlockingHit) == 0x000120, "Member 'BP_ProjectileBase_C_HandleBounce::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_HandleBounce, CallFunc_BreakHitResult_bInitialOverlap) == 0x000121, "Member 'BP_ProjectileBase_C_HandleBounce::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_HandleBounce, CallFunc_BreakHitResult_Time) == 0x000124, "Member 'BP_ProjectileBase_C_HandleBounce::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_HandleBounce, CallFunc_BreakHitResult_Distance) == 0x000128, "Member 'BP_ProjectileBase_C_HandleBounce::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_HandleBounce, CallFunc_BreakHitResult_Location) == 0x000130, "Member 'BP_ProjectileBase_C_HandleBounce::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_HandleBounce, CallFunc_BreakHitResult_ImpactPoint) == 0x000148, "Member 'BP_ProjectileBase_C_HandleBounce::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_HandleBounce, CallFunc_BreakHitResult_Normal) == 0x000160, "Member 'BP_ProjectileBase_C_HandleBounce::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_HandleBounce, CallFunc_BreakHitResult_ImpactNormal) == 0x000178, "Member 'BP_ProjectileBase_C_HandleBounce::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_HandleBounce, CallFunc_BreakHitResult_PhysMat) == 0x000190, "Member 'BP_ProjectileBase_C_HandleBounce::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_HandleBounce, CallFunc_BreakHitResult_HitActor) == 0x000198, "Member 'BP_ProjectileBase_C_HandleBounce::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_HandleBounce, CallFunc_BreakHitResult_HitComponent) == 0x0001A0, "Member 'BP_ProjectileBase_C_HandleBounce::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_HandleBounce, CallFunc_BreakHitResult_HitBoneName) == 0x0001A8, "Member 'BP_ProjectileBase_C_HandleBounce::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_HandleBounce, CallFunc_BreakHitResult_BoneName) == 0x0001B0, "Member 'BP_ProjectileBase_C_HandleBounce::CallFunc_BreakHitResult_BoneName' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_HandleBounce, CallFunc_BreakHitResult_HitItem) == 0x0001B8, "Member 'BP_ProjectileBase_C_HandleBounce::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_HandleBounce, CallFunc_BreakHitResult_ElementIndex) == 0x0001BC, "Member 'BP_ProjectileBase_C_HandleBounce::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_HandleBounce, CallFunc_BreakHitResult_FaceIndex) == 0x0001C0, "Member 'BP_ProjectileBase_C_HandleBounce::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_HandleBounce, CallFunc_BreakHitResult_TraceStart) == 0x0001C8, "Member 'BP_ProjectileBase_C_HandleBounce::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_HandleBounce, CallFunc_BreakHitResult_TraceEnd) == 0x0001E0, "Member 'BP_ProjectileBase_C_HandleBounce::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_HandleBounce, K2Node_DynamicCast_AsBP_Blocking_Volume) == 0x0001F8, "Member 'BP_ProjectileBase_C_HandleBounce::K2Node_DynamicCast_AsBP_Blocking_Volume' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_HandleBounce, K2Node_DynamicCast_bSuccess) == 0x000200, "Member 'BP_ProjectileBase_C_HandleBounce::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_HandleBounce, CallFunc_IsValid_ReturnValue) == 0x000201, "Member 'BP_ProjectileBase_C_HandleBounce::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_HandleBounce, CallFunc_GetAbilitySystemComponent_ReturnValue) == 0x000208, "Member 'BP_ProjectileBase_C_HandleBounce::CallFunc_GetAbilitySystemComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_HandleBounce, CallFunc_IsValid_ReturnValue_1) == 0x000210, "Member 'BP_ProjectileBase_C_HandleBounce::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_HandleBounce, CallFunc_Less_DoubleDouble_ReturnValue) == 0x000211, "Member 'BP_ProjectileBase_C_HandleBounce::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_HandleBounce, CallFunc_IsDedicatedServer_ReturnValue) == 0x000212, "Member 'BP_ProjectileBase_C_HandleBounce::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");

// Function BP_ProjectileBase.BP_ProjectileBase_C.HandleProjectileStop
// 0x02E0 (0x02E0 - 0x0000)
struct BP_ProjectileBase_C_HandleProjectileStop final
{
public:
	struct FHitResult                             Hit;                                               // 0x0000(0x00F8)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_CheckImpactAbilitySystemComponents_is_Valid; // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F9[0x7];                                       // 0x00F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAbilitySystemComponent*                CallFunc_CheckImpactAbilitySystemComponents_instigator_ASC; // 0x0100(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UAbilitySystemComponent*                CallFunc_CheckImpactAbilitySystemComponents_target_ASC; // 0x0108(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x0111(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_112[0x2];                                      // 0x0112(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x0114(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x0118(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11C[0x4];                                      // 0x011C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x0120(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x0138(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x0150(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x0168(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0180(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0188(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0190(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0198(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_BoneName;                  // 0x01A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x01A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x01AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x01B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B4[0x4];                                      // 0x01B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x01B8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x01D0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_ResidentCharacter_C*                K2Node_DynamicCast_AsBP_Resident_Character;        // 0x01E8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x01F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1F1[0x7];                                      // 0x01F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABlockingVolume*                        K2Node_DynamicCast_AsBlocking_Volume;              // 0x01F8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0200(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsNewTarget_IsNewTarget;                  // 0x0201(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit_1;            // 0x0202(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap_1;         // 0x0203(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Time_1;                    // 0x0204(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance_1;                // 0x0208(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_20C[0x4];                                      // 0x020C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_Location_1;                // 0x0210(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint_1;             // 0x0228(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal_1;                  // 0x0240(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal_1;            // 0x0258(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat_1;                 // 0x0270(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor_1;                // 0x0278(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent_1;            // 0x0280(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName_1;             // 0x0288(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_BoneName_1;                // 0x0290(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem_1;                 // 0x0298(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex_1;            // 0x029C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex_1;               // 0x02A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2A4[0x4];                                      // 0x02A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_TraceStart_1;              // 0x02A8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd_1;                // 0x02C0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x02D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsServer_ReturnValue;                     // 0x02D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsServer_ReturnValue_1;                   // 0x02DA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ProjectileBase_C_HandleProjectileStop) == 0x000008, "Wrong alignment on BP_ProjectileBase_C_HandleProjectileStop");
static_assert(sizeof(BP_ProjectileBase_C_HandleProjectileStop) == 0x0002E0, "Wrong size on BP_ProjectileBase_C_HandleProjectileStop");
static_assert(offsetof(BP_ProjectileBase_C_HandleProjectileStop, Hit) == 0x000000, "Member 'BP_ProjectileBase_C_HandleProjectileStop::Hit' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_HandleProjectileStop, CallFunc_CheckImpactAbilitySystemComponents_is_Valid) == 0x0000F8, "Member 'BP_ProjectileBase_C_HandleProjectileStop::CallFunc_CheckImpactAbilitySystemComponents_is_Valid' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_HandleProjectileStop, CallFunc_CheckImpactAbilitySystemComponents_instigator_ASC) == 0x000100, "Member 'BP_ProjectileBase_C_HandleProjectileStop::CallFunc_CheckImpactAbilitySystemComponents_instigator_ASC' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_HandleProjectileStop, CallFunc_CheckImpactAbilitySystemComponents_target_ASC) == 0x000108, "Member 'BP_ProjectileBase_C_HandleProjectileStop::CallFunc_CheckImpactAbilitySystemComponents_target_ASC' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_HandleProjectileStop, CallFunc_BreakHitResult_bBlockingHit) == 0x000110, "Member 'BP_ProjectileBase_C_HandleProjectileStop::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_HandleProjectileStop, CallFunc_BreakHitResult_bInitialOverlap) == 0x000111, "Member 'BP_ProjectileBase_C_HandleProjectileStop::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_HandleProjectileStop, CallFunc_BreakHitResult_Time) == 0x000114, "Member 'BP_ProjectileBase_C_HandleProjectileStop::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_HandleProjectileStop, CallFunc_BreakHitResult_Distance) == 0x000118, "Member 'BP_ProjectileBase_C_HandleProjectileStop::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_HandleProjectileStop, CallFunc_BreakHitResult_Location) == 0x000120, "Member 'BP_ProjectileBase_C_HandleProjectileStop::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_HandleProjectileStop, CallFunc_BreakHitResult_ImpactPoint) == 0x000138, "Member 'BP_ProjectileBase_C_HandleProjectileStop::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_HandleProjectileStop, CallFunc_BreakHitResult_Normal) == 0x000150, "Member 'BP_ProjectileBase_C_HandleProjectileStop::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_HandleProjectileStop, CallFunc_BreakHitResult_ImpactNormal) == 0x000168, "Member 'BP_ProjectileBase_C_HandleProjectileStop::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_HandleProjectileStop, CallFunc_BreakHitResult_PhysMat) == 0x000180, "Member 'BP_ProjectileBase_C_HandleProjectileStop::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_HandleProjectileStop, CallFunc_BreakHitResult_HitActor) == 0x000188, "Member 'BP_ProjectileBase_C_HandleProjectileStop::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_HandleProjectileStop, CallFunc_BreakHitResult_HitComponent) == 0x000190, "Member 'BP_ProjectileBase_C_HandleProjectileStop::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_HandleProjectileStop, CallFunc_BreakHitResult_HitBoneName) == 0x000198, "Member 'BP_ProjectileBase_C_HandleProjectileStop::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_HandleProjectileStop, CallFunc_BreakHitResult_BoneName) == 0x0001A0, "Member 'BP_ProjectileBase_C_HandleProjectileStop::CallFunc_BreakHitResult_BoneName' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_HandleProjectileStop, CallFunc_BreakHitResult_HitItem) == 0x0001A8, "Member 'BP_ProjectileBase_C_HandleProjectileStop::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_HandleProjectileStop, CallFunc_BreakHitResult_ElementIndex) == 0x0001AC, "Member 'BP_ProjectileBase_C_HandleProjectileStop::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_HandleProjectileStop, CallFunc_BreakHitResult_FaceIndex) == 0x0001B0, "Member 'BP_ProjectileBase_C_HandleProjectileStop::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_HandleProjectileStop, CallFunc_BreakHitResult_TraceStart) == 0x0001B8, "Member 'BP_ProjectileBase_C_HandleProjectileStop::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_HandleProjectileStop, CallFunc_BreakHitResult_TraceEnd) == 0x0001D0, "Member 'BP_ProjectileBase_C_HandleProjectileStop::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_HandleProjectileStop, K2Node_DynamicCast_AsBP_Resident_Character) == 0x0001E8, "Member 'BP_ProjectileBase_C_HandleProjectileStop::K2Node_DynamicCast_AsBP_Resident_Character' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_HandleProjectileStop, K2Node_DynamicCast_bSuccess) == 0x0001F0, "Member 'BP_ProjectileBase_C_HandleProjectileStop::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_HandleProjectileStop, K2Node_DynamicCast_AsBlocking_Volume) == 0x0001F8, "Member 'BP_ProjectileBase_C_HandleProjectileStop::K2Node_DynamicCast_AsBlocking_Volume' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_HandleProjectileStop, K2Node_DynamicCast_bSuccess_1) == 0x000200, "Member 'BP_ProjectileBase_C_HandleProjectileStop::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_HandleProjectileStop, CallFunc_IsNewTarget_IsNewTarget) == 0x000201, "Member 'BP_ProjectileBase_C_HandleProjectileStop::CallFunc_IsNewTarget_IsNewTarget' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_HandleProjectileStop, CallFunc_BreakHitResult_bBlockingHit_1) == 0x000202, "Member 'BP_ProjectileBase_C_HandleProjectileStop::CallFunc_BreakHitResult_bBlockingHit_1' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_HandleProjectileStop, CallFunc_BreakHitResult_bInitialOverlap_1) == 0x000203, "Member 'BP_ProjectileBase_C_HandleProjectileStop::CallFunc_BreakHitResult_bInitialOverlap_1' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_HandleProjectileStop, CallFunc_BreakHitResult_Time_1) == 0x000204, "Member 'BP_ProjectileBase_C_HandleProjectileStop::CallFunc_BreakHitResult_Time_1' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_HandleProjectileStop, CallFunc_BreakHitResult_Distance_1) == 0x000208, "Member 'BP_ProjectileBase_C_HandleProjectileStop::CallFunc_BreakHitResult_Distance_1' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_HandleProjectileStop, CallFunc_BreakHitResult_Location_1) == 0x000210, "Member 'BP_ProjectileBase_C_HandleProjectileStop::CallFunc_BreakHitResult_Location_1' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_HandleProjectileStop, CallFunc_BreakHitResult_ImpactPoint_1) == 0x000228, "Member 'BP_ProjectileBase_C_HandleProjectileStop::CallFunc_BreakHitResult_ImpactPoint_1' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_HandleProjectileStop, CallFunc_BreakHitResult_Normal_1) == 0x000240, "Member 'BP_ProjectileBase_C_HandleProjectileStop::CallFunc_BreakHitResult_Normal_1' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_HandleProjectileStop, CallFunc_BreakHitResult_ImpactNormal_1) == 0x000258, "Member 'BP_ProjectileBase_C_HandleProjectileStop::CallFunc_BreakHitResult_ImpactNormal_1' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_HandleProjectileStop, CallFunc_BreakHitResult_PhysMat_1) == 0x000270, "Member 'BP_ProjectileBase_C_HandleProjectileStop::CallFunc_BreakHitResult_PhysMat_1' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_HandleProjectileStop, CallFunc_BreakHitResult_HitActor_1) == 0x000278, "Member 'BP_ProjectileBase_C_HandleProjectileStop::CallFunc_BreakHitResult_HitActor_1' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_HandleProjectileStop, CallFunc_BreakHitResult_HitComponent_1) == 0x000280, "Member 'BP_ProjectileBase_C_HandleProjectileStop::CallFunc_BreakHitResult_HitComponent_1' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_HandleProjectileStop, CallFunc_BreakHitResult_HitBoneName_1) == 0x000288, "Member 'BP_ProjectileBase_C_HandleProjectileStop::CallFunc_BreakHitResult_HitBoneName_1' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_HandleProjectileStop, CallFunc_BreakHitResult_BoneName_1) == 0x000290, "Member 'BP_ProjectileBase_C_HandleProjectileStop::CallFunc_BreakHitResult_BoneName_1' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_HandleProjectileStop, CallFunc_BreakHitResult_HitItem_1) == 0x000298, "Member 'BP_ProjectileBase_C_HandleProjectileStop::CallFunc_BreakHitResult_HitItem_1' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_HandleProjectileStop, CallFunc_BreakHitResult_ElementIndex_1) == 0x00029C, "Member 'BP_ProjectileBase_C_HandleProjectileStop::CallFunc_BreakHitResult_ElementIndex_1' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_HandleProjectileStop, CallFunc_BreakHitResult_FaceIndex_1) == 0x0002A0, "Member 'BP_ProjectileBase_C_HandleProjectileStop::CallFunc_BreakHitResult_FaceIndex_1' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_HandleProjectileStop, CallFunc_BreakHitResult_TraceStart_1) == 0x0002A8, "Member 'BP_ProjectileBase_C_HandleProjectileStop::CallFunc_BreakHitResult_TraceStart_1' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_HandleProjectileStop, CallFunc_BreakHitResult_TraceEnd_1) == 0x0002C0, "Member 'BP_ProjectileBase_C_HandleProjectileStop::CallFunc_BreakHitResult_TraceEnd_1' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_HandleProjectileStop, CallFunc_IsValid_ReturnValue) == 0x0002D8, "Member 'BP_ProjectileBase_C_HandleProjectileStop::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_HandleProjectileStop, CallFunc_IsServer_ReturnValue) == 0x0002D9, "Member 'BP_ProjectileBase_C_HandleProjectileStop::CallFunc_IsServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_HandleProjectileStop, CallFunc_IsServer_ReturnValue_1) == 0x0002DA, "Member 'BP_ProjectileBase_C_HandleProjectileStop::CallFunc_IsServer_ReturnValue_1' has a wrong offset!");

// Function BP_ProjectileBase.BP_ProjectileBase_C.HandleShieldImpact
// 0x01F8 (0x01F8 - 0x0000)
struct BP_ProjectileBase_C_HandleShieldImpact final
{
public:
	struct FHitResult                             HitResult;                                         // 0x0000(0x00F8)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	double                                        CallFunc_GetDamage_ReturnValue;                    // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x0101(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_102[0x2];                                      // 0x0102(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x0104(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x0108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_10C[0x4];                                      // 0x010C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x0110(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x0128(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x0140(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x0158(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0170(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0178(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0180(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0188(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_BoneName;                  // 0x0190(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0198(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x019C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x01A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A4[0x4];                                      // 0x01A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x01A8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x01C0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue;                       // 0x01D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1DC[0x4];                                      // 0x01DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class II_ShieldBlock_C>      K2Node_DynamicCast_AsI_Shield_Block;               // 0x01E0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x01F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ProjectileBase_C_HandleShieldImpact) == 0x000008, "Wrong alignment on BP_ProjectileBase_C_HandleShieldImpact");
static_assert(sizeof(BP_ProjectileBase_C_HandleShieldImpact) == 0x0001F8, "Wrong size on BP_ProjectileBase_C_HandleShieldImpact");
static_assert(offsetof(BP_ProjectileBase_C_HandleShieldImpact, HitResult) == 0x000000, "Member 'BP_ProjectileBase_C_HandleShieldImpact::HitResult' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_HandleShieldImpact, CallFunc_GetDamage_ReturnValue) == 0x0000F8, "Member 'BP_ProjectileBase_C_HandleShieldImpact::CallFunc_GetDamage_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_HandleShieldImpact, CallFunc_BreakHitResult_bBlockingHit) == 0x000100, "Member 'BP_ProjectileBase_C_HandleShieldImpact::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_HandleShieldImpact, CallFunc_BreakHitResult_bInitialOverlap) == 0x000101, "Member 'BP_ProjectileBase_C_HandleShieldImpact::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_HandleShieldImpact, CallFunc_BreakHitResult_Time) == 0x000104, "Member 'BP_ProjectileBase_C_HandleShieldImpact::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_HandleShieldImpact, CallFunc_BreakHitResult_Distance) == 0x000108, "Member 'BP_ProjectileBase_C_HandleShieldImpact::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_HandleShieldImpact, CallFunc_BreakHitResult_Location) == 0x000110, "Member 'BP_ProjectileBase_C_HandleShieldImpact::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_HandleShieldImpact, CallFunc_BreakHitResult_ImpactPoint) == 0x000128, "Member 'BP_ProjectileBase_C_HandleShieldImpact::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_HandleShieldImpact, CallFunc_BreakHitResult_Normal) == 0x000140, "Member 'BP_ProjectileBase_C_HandleShieldImpact::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_HandleShieldImpact, CallFunc_BreakHitResult_ImpactNormal) == 0x000158, "Member 'BP_ProjectileBase_C_HandleShieldImpact::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_HandleShieldImpact, CallFunc_BreakHitResult_PhysMat) == 0x000170, "Member 'BP_ProjectileBase_C_HandleShieldImpact::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_HandleShieldImpact, CallFunc_BreakHitResult_HitActor) == 0x000178, "Member 'BP_ProjectileBase_C_HandleShieldImpact::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_HandleShieldImpact, CallFunc_BreakHitResult_HitComponent) == 0x000180, "Member 'BP_ProjectileBase_C_HandleShieldImpact::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_HandleShieldImpact, CallFunc_BreakHitResult_HitBoneName) == 0x000188, "Member 'BP_ProjectileBase_C_HandleShieldImpact::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_HandleShieldImpact, CallFunc_BreakHitResult_BoneName) == 0x000190, "Member 'BP_ProjectileBase_C_HandleShieldImpact::CallFunc_BreakHitResult_BoneName' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_HandleShieldImpact, CallFunc_BreakHitResult_HitItem) == 0x000198, "Member 'BP_ProjectileBase_C_HandleShieldImpact::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_HandleShieldImpact, CallFunc_BreakHitResult_ElementIndex) == 0x00019C, "Member 'BP_ProjectileBase_C_HandleShieldImpact::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_HandleShieldImpact, CallFunc_BreakHitResult_FaceIndex) == 0x0001A0, "Member 'BP_ProjectileBase_C_HandleShieldImpact::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_HandleShieldImpact, CallFunc_BreakHitResult_TraceStart) == 0x0001A8, "Member 'BP_ProjectileBase_C_HandleShieldImpact::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_HandleShieldImpact, CallFunc_BreakHitResult_TraceEnd) == 0x0001C0, "Member 'BP_ProjectileBase_C_HandleShieldImpact::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_HandleShieldImpact, CallFunc_FTrunc_ReturnValue) == 0x0001D8, "Member 'BP_ProjectileBase_C_HandleShieldImpact::CallFunc_FTrunc_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_HandleShieldImpact, K2Node_DynamicCast_AsI_Shield_Block) == 0x0001E0, "Member 'BP_ProjectileBase_C_HandleShieldImpact::K2Node_DynamicCast_AsI_Shield_Block' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_HandleShieldImpact, K2Node_DynamicCast_bSuccess) == 0x0001F0, "Member 'BP_ProjectileBase_C_HandleShieldImpact::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BP_ProjectileBase.BP_ProjectileBase_C.HasValidAbilitySystemComponent
// 0x0060 (0x0060 - 0x0000)
struct BP_ProjectileBase_C_HasValidAbilitySystemComponent final
{
public:
	class AActor*                                 Validation_Target;                                 // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          LogReason;                                         // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Reason;                                            // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Target_ASC;                                        // 0x0020(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	bool                                          Is_Valid;                                          // 0x0030(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAbilitySystemComponent*                Target_Ability_System_Component;                   // 0x0038(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UAbilitySystemComponent*                TargetAbilitySystemComponent;                      // 0x0040(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          ASCIsValid;                                        // 0x0048(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAbilitySystemComponent*                CallFunc_GetAbilitySystemComponent_ReturnValue;    // 0x0050(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ProjectileBase_C_HasValidAbilitySystemComponent) == 0x000008, "Wrong alignment on BP_ProjectileBase_C_HasValidAbilitySystemComponent");
static_assert(sizeof(BP_ProjectileBase_C_HasValidAbilitySystemComponent) == 0x000060, "Wrong size on BP_ProjectileBase_C_HasValidAbilitySystemComponent");
static_assert(offsetof(BP_ProjectileBase_C_HasValidAbilitySystemComponent, Validation_Target) == 0x000000, "Member 'BP_ProjectileBase_C_HasValidAbilitySystemComponent::Validation_Target' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_HasValidAbilitySystemComponent, LogReason) == 0x000008, "Member 'BP_ProjectileBase_C_HasValidAbilitySystemComponent::LogReason' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_HasValidAbilitySystemComponent, Reason) == 0x000010, "Member 'BP_ProjectileBase_C_HasValidAbilitySystemComponent::Reason' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_HasValidAbilitySystemComponent, Target_ASC) == 0x000020, "Member 'BP_ProjectileBase_C_HasValidAbilitySystemComponent::Target_ASC' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_HasValidAbilitySystemComponent, Is_Valid) == 0x000030, "Member 'BP_ProjectileBase_C_HasValidAbilitySystemComponent::Is_Valid' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_HasValidAbilitySystemComponent, Target_Ability_System_Component) == 0x000038, "Member 'BP_ProjectileBase_C_HasValidAbilitySystemComponent::Target_Ability_System_Component' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_HasValidAbilitySystemComponent, TargetAbilitySystemComponent) == 0x000040, "Member 'BP_ProjectileBase_C_HasValidAbilitySystemComponent::TargetAbilitySystemComponent' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_HasValidAbilitySystemComponent, ASCIsValid) == 0x000048, "Member 'BP_ProjectileBase_C_HasValidAbilitySystemComponent::ASCIsValid' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_HasValidAbilitySystemComponent, CallFunc_GetAbilitySystemComponent_ReturnValue) == 0x000050, "Member 'BP_ProjectileBase_C_HasValidAbilitySystemComponent::CallFunc_GetAbilitySystemComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_HasValidAbilitySystemComponent, CallFunc_IsValid_ReturnValue) == 0x000058, "Member 'BP_ProjectileBase_C_HasValidAbilitySystemComponent::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_ProjectileBase.BP_ProjectileBase_C.HighConstrastModeChanged
// 0x0001 (0x0001 - 0x0000)
struct BP_ProjectileBase_C_HighConstrastModeChanged final
{
public:
	bool                                          IsEnabled;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ProjectileBase_C_HighConstrastModeChanged) == 0x000001, "Wrong alignment on BP_ProjectileBase_C_HighConstrastModeChanged");
static_assert(sizeof(BP_ProjectileBase_C_HighConstrastModeChanged) == 0x000001, "Wrong size on BP_ProjectileBase_C_HighConstrastModeChanged");
static_assert(offsetof(BP_ProjectileBase_C_HighConstrastModeChanged, IsEnabled) == 0x000000, "Member 'BP_ProjectileBase_C_HighConstrastModeChanged::IsEnabled' has a wrong offset!");

// Function BP_ProjectileBase.BP_ProjectileBase_C.Hit Self on Spawn
// 0x0030 (0x0030 - 0x0000)
struct BP_ProjectileBase_C_Hit_Self_on_Spawn final
{
public:
	class AActor*                                 OtherActor;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          HitSelf;                                           // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A[0x2];                                        // 0x000A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetLifeSpan_ReturnValue;                  // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue;       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A[0x6];                                       // 0x001A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Subtract_DoubleDouble_A_ImplicitCast;     // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_B_ImplicitCast;     // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ProjectileBase_C_Hit_Self_on_Spawn) == 0x000008, "Wrong alignment on BP_ProjectileBase_C_Hit_Self_on_Spawn");
static_assert(sizeof(BP_ProjectileBase_C_Hit_Self_on_Spawn) == 0x000030, "Wrong size on BP_ProjectileBase_C_Hit_Self_on_Spawn");
static_assert(offsetof(BP_ProjectileBase_C_Hit_Self_on_Spawn, OtherActor) == 0x000000, "Member 'BP_ProjectileBase_C_Hit_Self_on_Spawn::OtherActor' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_Hit_Self_on_Spawn, HitSelf) == 0x000008, "Member 'BP_ProjectileBase_C_Hit_Self_on_Spawn::HitSelf' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_Hit_Self_on_Spawn, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000009, "Member 'BP_ProjectileBase_C_Hit_Self_on_Spawn::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_Hit_Self_on_Spawn, CallFunc_GetLifeSpan_ReturnValue) == 0x00000C, "Member 'BP_ProjectileBase_C_Hit_Self_on_Spawn::CallFunc_GetLifeSpan_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_Hit_Self_on_Spawn, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000010, "Member 'BP_ProjectileBase_C_Hit_Self_on_Spawn::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_Hit_Self_on_Spawn, CallFunc_LessEqual_DoubleDouble_ReturnValue) == 0x000018, "Member 'BP_ProjectileBase_C_Hit_Self_on_Spawn::CallFunc_LessEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_Hit_Self_on_Spawn, CallFunc_BooleanAND_ReturnValue) == 0x000019, "Member 'BP_ProjectileBase_C_Hit_Self_on_Spawn::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_Hit_Self_on_Spawn, CallFunc_Subtract_DoubleDouble_A_ImplicitCast) == 0x000020, "Member 'BP_ProjectileBase_C_Hit_Self_on_Spawn::CallFunc_Subtract_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_Hit_Self_on_Spawn, CallFunc_Subtract_DoubleDouble_B_ImplicitCast) == 0x000028, "Member 'BP_ProjectileBase_C_Hit_Self_on_Spawn::CallFunc_Subtract_DoubleDouble_B_ImplicitCast' has a wrong offset!");

// Function BP_ProjectileBase.BP_ProjectileBase_C.IgnoreCollisionWithTeammates
// 0x0048 (0x0048 - 0x0000)
struct BP_ProjectileBase_C_IgnoreCollisionWithTeammates final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_GetInstigator_ReturnValue;                // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<class ABP_ResidentCharacter_C*>        CallFunc_GetAllActorsOfClass_OutActors;            // 0x0018(0x0010)(ReferenceParm)
	class ABP_ResidentCharacter_C*                K2Node_DynamicCast_AsBP_Resident_Character;        // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_ResidentCharacter_C*                CallFunc_Array_Get_Item;                           // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetTeamID_ReturnValue;                    // 0x0045(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0046(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ProjectileBase_C_IgnoreCollisionWithTeammates) == 0x000008, "Wrong alignment on BP_ProjectileBase_C_IgnoreCollisionWithTeammates");
static_assert(sizeof(BP_ProjectileBase_C_IgnoreCollisionWithTeammates) == 0x000048, "Wrong size on BP_ProjectileBase_C_IgnoreCollisionWithTeammates");
static_assert(offsetof(BP_ProjectileBase_C_IgnoreCollisionWithTeammates, Temp_int_Array_Index_Variable) == 0x000000, "Member 'BP_ProjectileBase_C_IgnoreCollisionWithTeammates::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_IgnoreCollisionWithTeammates, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'BP_ProjectileBase_C_IgnoreCollisionWithTeammates::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_IgnoreCollisionWithTeammates, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'BP_ProjectileBase_C_IgnoreCollisionWithTeammates::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_IgnoreCollisionWithTeammates, CallFunc_GetInstigator_ReturnValue) == 0x000010, "Member 'BP_ProjectileBase_C_IgnoreCollisionWithTeammates::CallFunc_GetInstigator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_IgnoreCollisionWithTeammates, CallFunc_GetAllActorsOfClass_OutActors) == 0x000018, "Member 'BP_ProjectileBase_C_IgnoreCollisionWithTeammates::CallFunc_GetAllActorsOfClass_OutActors' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_IgnoreCollisionWithTeammates, K2Node_DynamicCast_AsBP_Resident_Character) == 0x000028, "Member 'BP_ProjectileBase_C_IgnoreCollisionWithTeammates::K2Node_DynamicCast_AsBP_Resident_Character' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_IgnoreCollisionWithTeammates, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'BP_ProjectileBase_C_IgnoreCollisionWithTeammates::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_IgnoreCollisionWithTeammates, CallFunc_Array_Get_Item) == 0x000038, "Member 'BP_ProjectileBase_C_IgnoreCollisionWithTeammates::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_IgnoreCollisionWithTeammates, CallFunc_Array_Length_ReturnValue) == 0x000040, "Member 'BP_ProjectileBase_C_IgnoreCollisionWithTeammates::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_IgnoreCollisionWithTeammates, CallFunc_Less_IntInt_ReturnValue) == 0x000044, "Member 'BP_ProjectileBase_C_IgnoreCollisionWithTeammates::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_IgnoreCollisionWithTeammates, CallFunc_GetTeamID_ReturnValue) == 0x000045, "Member 'BP_ProjectileBase_C_IgnoreCollisionWithTeammates::CallFunc_GetTeamID_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_IgnoreCollisionWithTeammates, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000046, "Member 'BP_ProjectileBase_C_IgnoreCollisionWithTeammates::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function BP_ProjectileBase.BP_ProjectileBase_C.IsNewTarget
// 0x0010 (0x0010 - 0x0000)
struct BP_ProjectileBase_C_IsNewTarget final
{
public:
	class AActor*                                 HitActor;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          IsNewTarget_0;                                     // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue;        // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ProjectileBase_C_IsNewTarget) == 0x000008, "Wrong alignment on BP_ProjectileBase_C_IsNewTarget");
static_assert(sizeof(BP_ProjectileBase_C_IsNewTarget) == 0x000010, "Wrong size on BP_ProjectileBase_C_IsNewTarget");
static_assert(offsetof(BP_ProjectileBase_C_IsNewTarget, HitActor) == 0x000000, "Member 'BP_ProjectileBase_C_IsNewTarget::HitActor' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_IsNewTarget, IsNewTarget_0) == 0x000008, "Member 'BP_ProjectileBase_C_IsNewTarget::IsNewTarget_0' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_IsNewTarget, CallFunc_NotEqual_ObjectObject_ReturnValue) == 0x000009, "Member 'BP_ProjectileBase_C_IsNewTarget::CallFunc_NotEqual_ObjectObject_ReturnValue' has a wrong offset!");

// Function BP_ProjectileBase.BP_ProjectileBase_C.IsSameTeam
// 0x0048 (0x0048 - 0x0000)
struct BP_ProjectileBase_C_IsSameTeam final
{
public:
	class UObject*                                HitActor;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Return;                                            // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Temp_byte_Variable;                                // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A[0x6];                                        // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class ITeamableInterface>    K2Node_DynamicCast_AsTeamable_Interface;           // 0x0010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetTeamID_ReturnValue;                    // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_22[0x6];                                       // 0x0022(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_GetInstigator_ReturnValue;                // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class ITeamableInterface>    K2Node_DynamicCast_AsTeamable_Interface_1;         // 0x0030(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Temp_byte_Variable_1;                              // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetTeamID_ReturnValue_1;                  // 0x0042(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0043(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ProjectileBase_C_IsSameTeam) == 0x000008, "Wrong alignment on BP_ProjectileBase_C_IsSameTeam");
static_assert(sizeof(BP_ProjectileBase_C_IsSameTeam) == 0x000048, "Wrong size on BP_ProjectileBase_C_IsSameTeam");
static_assert(offsetof(BP_ProjectileBase_C_IsSameTeam, HitActor) == 0x000000, "Member 'BP_ProjectileBase_C_IsSameTeam::HitActor' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_IsSameTeam, Return) == 0x000008, "Member 'BP_ProjectileBase_C_IsSameTeam::Return' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_IsSameTeam, Temp_byte_Variable) == 0x000009, "Member 'BP_ProjectileBase_C_IsSameTeam::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_IsSameTeam, K2Node_DynamicCast_AsTeamable_Interface) == 0x000010, "Member 'BP_ProjectileBase_C_IsSameTeam::K2Node_DynamicCast_AsTeamable_Interface' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_IsSameTeam, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'BP_ProjectileBase_C_IsSameTeam::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_IsSameTeam, CallFunc_GetTeamID_ReturnValue) == 0x000021, "Member 'BP_ProjectileBase_C_IsSameTeam::CallFunc_GetTeamID_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_IsSameTeam, CallFunc_GetInstigator_ReturnValue) == 0x000028, "Member 'BP_ProjectileBase_C_IsSameTeam::CallFunc_GetInstigator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_IsSameTeam, K2Node_DynamicCast_AsTeamable_Interface_1) == 0x000030, "Member 'BP_ProjectileBase_C_IsSameTeam::K2Node_DynamicCast_AsTeamable_Interface_1' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_IsSameTeam, K2Node_DynamicCast_bSuccess_1) == 0x000040, "Member 'BP_ProjectileBase_C_IsSameTeam::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_IsSameTeam, Temp_byte_Variable_1) == 0x000041, "Member 'BP_ProjectileBase_C_IsSameTeam::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_IsSameTeam, CallFunc_GetTeamID_ReturnValue_1) == 0x000042, "Member 'BP_ProjectileBase_C_IsSameTeam::CallFunc_GetTeamID_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_IsSameTeam, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000043, "Member 'BP_ProjectileBase_C_IsSameTeam::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function BP_ProjectileBase.BP_ProjectileBase_C.OnProjectileBounce
// 0x0110 (0x0110 - 0x0000)
struct BP_ProjectileBase_C_OnProjectileBounce final
{
public:
	struct FHitResult                             ImpactResult;                                      // 0x0000(0x00F8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FVector                                ImpactVelocity;                                    // 0x00F8(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ProjectileBase_C_OnProjectileBounce) == 0x000008, "Wrong alignment on BP_ProjectileBase_C_OnProjectileBounce");
static_assert(sizeof(BP_ProjectileBase_C_OnProjectileBounce) == 0x000110, "Wrong size on BP_ProjectileBase_C_OnProjectileBounce");
static_assert(offsetof(BP_ProjectileBase_C_OnProjectileBounce, ImpactResult) == 0x000000, "Member 'BP_ProjectileBase_C_OnProjectileBounce::ImpactResult' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_OnProjectileBounce, ImpactVelocity) == 0x0000F8, "Member 'BP_ProjectileBase_C_OnProjectileBounce::ImpactVelocity' has a wrong offset!");

// Function BP_ProjectileBase.BP_ProjectileBase_C.OnProjectileStop
// 0x00F8 (0x00F8 - 0x0000)
struct BP_ProjectileBase_C_OnProjectileStop final
{
public:
	struct FHitResult                             ImpactResult;                                      // 0x0000(0x00F8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_ProjectileBase_C_OnProjectileStop) == 0x000008, "Wrong alignment on BP_ProjectileBase_C_OnProjectileStop");
static_assert(sizeof(BP_ProjectileBase_C_OnProjectileStop) == 0x0000F8, "Wrong size on BP_ProjectileBase_C_OnProjectileStop");
static_assert(offsetof(BP_ProjectileBase_C_OnProjectileStop, ImpactResult) == 0x000000, "Member 'BP_ProjectileBase_C_OnProjectileStop::ImpactResult' has a wrong offset!");

// Function BP_ProjectileBase.BP_ProjectileBase_C.OnVelocityRedirect
// 0x0018 (0x0018 - 0x0000)
struct BP_ProjectileBase_C_OnVelocityRedirect final
{
public:
	struct FVector                                NewVelocityWorldSpace;                             // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ProjectileBase_C_OnVelocityRedirect) == 0x000008, "Wrong alignment on BP_ProjectileBase_C_OnVelocityRedirect");
static_assert(sizeof(BP_ProjectileBase_C_OnVelocityRedirect) == 0x000018, "Wrong size on BP_ProjectileBase_C_OnVelocityRedirect");
static_assert(offsetof(BP_ProjectileBase_C_OnVelocityRedirect, NewVelocityWorldSpace) == 0x000000, "Member 'BP_ProjectileBase_C_OnVelocityRedirect::NewVelocityWorldSpace' has a wrong offset!");

// Function BP_ProjectileBase.BP_ProjectileBase_C.PlayHitMarker
// 0x0068 (0x0068 - 0x0000)
struct BP_ProjectileBase_C_PlayHitMarker final
{
public:
	class AActor*                                 Hit_Actor;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APlayerControllerJP_Match*              CallFunc_GetLocalPlayerControllerJP_Match_ReturnValue; // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsSameTeam_Return;                        // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_StoreBase_C*                        K2Node_DynamicCast_AsBP_Store_Base;                // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_MessItem_C*                         K2Node_DynamicCast_AsBP_Mess_Item;                 // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_DoesImplementInterface_ReturnValue;       // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_32[0x6];                                       // 0x0032(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_GetInstigator_ReturnValue;                // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_ResidentCharacter_C*                K2Node_DynamicCast_AsBP_Resident_Character;        // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            CallFunc_GetController_ReturnValue;                // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UWI_Character_C*                        CallFunc_GetCharacterWI_CharacterWI;               // 0x0058(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ProjectileBase_C_PlayHitMarker) == 0x000008, "Wrong alignment on BP_ProjectileBase_C_PlayHitMarker");
static_assert(sizeof(BP_ProjectileBase_C_PlayHitMarker) == 0x000068, "Wrong size on BP_ProjectileBase_C_PlayHitMarker");
static_assert(offsetof(BP_ProjectileBase_C_PlayHitMarker, Hit_Actor) == 0x000000, "Member 'BP_ProjectileBase_C_PlayHitMarker::Hit_Actor' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_PlayHitMarker, CallFunc_GetLocalPlayerControllerJP_Match_ReturnValue) == 0x000008, "Member 'BP_ProjectileBase_C_PlayHitMarker::CallFunc_GetLocalPlayerControllerJP_Match_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_PlayHitMarker, CallFunc_IsSameTeam_Return) == 0x000010, "Member 'BP_ProjectileBase_C_PlayHitMarker::CallFunc_IsSameTeam_Return' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_PlayHitMarker, K2Node_DynamicCast_AsBP_Store_Base) == 0x000018, "Member 'BP_ProjectileBase_C_PlayHitMarker::K2Node_DynamicCast_AsBP_Store_Base' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_PlayHitMarker, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'BP_ProjectileBase_C_PlayHitMarker::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_PlayHitMarker, K2Node_DynamicCast_AsBP_Mess_Item) == 0x000028, "Member 'BP_ProjectileBase_C_PlayHitMarker::K2Node_DynamicCast_AsBP_Mess_Item' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_PlayHitMarker, K2Node_DynamicCast_bSuccess_1) == 0x000030, "Member 'BP_ProjectileBase_C_PlayHitMarker::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_PlayHitMarker, CallFunc_DoesImplementInterface_ReturnValue) == 0x000031, "Member 'BP_ProjectileBase_C_PlayHitMarker::CallFunc_DoesImplementInterface_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_PlayHitMarker, CallFunc_GetInstigator_ReturnValue) == 0x000038, "Member 'BP_ProjectileBase_C_PlayHitMarker::CallFunc_GetInstigator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_PlayHitMarker, K2Node_DynamicCast_AsBP_Resident_Character) == 0x000040, "Member 'BP_ProjectileBase_C_PlayHitMarker::K2Node_DynamicCast_AsBP_Resident_Character' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_PlayHitMarker, K2Node_DynamicCast_bSuccess_2) == 0x000048, "Member 'BP_ProjectileBase_C_PlayHitMarker::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_PlayHitMarker, CallFunc_GetController_ReturnValue) == 0x000050, "Member 'BP_ProjectileBase_C_PlayHitMarker::CallFunc_GetController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_PlayHitMarker, CallFunc_GetCharacterWI_CharacterWI) == 0x000058, "Member 'BP_ProjectileBase_C_PlayHitMarker::CallFunc_GetCharacterWI_CharacterWI' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_PlayHitMarker, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000060, "Member 'BP_ProjectileBase_C_PlayHitMarker::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");

// Function BP_ProjectileBase.BP_ProjectileBase_C.PlayImpactEffect
// 0x02F0 (0x02F0 - 0x0000)
struct BP_ProjectileBase_C_PlayImpactEffect final
{
public:
	struct FHitResult                             Hit;                                               // 0x0000(0x00F8)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x00F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_FA[0x2];                                       // 0x00FA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x00FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x0100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_104[0x4];                                      // 0x0104(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x0108(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x0120(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x0138(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x0150(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0168(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0170(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0178(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0180(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_BoneName;                  // 0x0188(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0190(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x0194(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x0198(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19C[0x4];                                      // 0x019C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x01A0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x01B8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x01D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D1[0x7];                                      // 0x01D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_MakeRotFromX_ReturnValue;                 // 0x01D8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_K2_SetWorldLocationAndRotation_SweepHitResult; // 0x01F0(0x00F8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class UNiagaraComponent*                      CallFunc_SpawnSystemAtLocation_ReturnValue;        // 0x02E8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ProjectileBase_C_PlayImpactEffect) == 0x000008, "Wrong alignment on BP_ProjectileBase_C_PlayImpactEffect");
static_assert(sizeof(BP_ProjectileBase_C_PlayImpactEffect) == 0x0002F0, "Wrong size on BP_ProjectileBase_C_PlayImpactEffect");
static_assert(offsetof(BP_ProjectileBase_C_PlayImpactEffect, Hit) == 0x000000, "Member 'BP_ProjectileBase_C_PlayImpactEffect::Hit' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_PlayImpactEffect, CallFunc_BreakHitResult_bBlockingHit) == 0x0000F8, "Member 'BP_ProjectileBase_C_PlayImpactEffect::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_PlayImpactEffect, CallFunc_BreakHitResult_bInitialOverlap) == 0x0000F9, "Member 'BP_ProjectileBase_C_PlayImpactEffect::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_PlayImpactEffect, CallFunc_BreakHitResult_Time) == 0x0000FC, "Member 'BP_ProjectileBase_C_PlayImpactEffect::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_PlayImpactEffect, CallFunc_BreakHitResult_Distance) == 0x000100, "Member 'BP_ProjectileBase_C_PlayImpactEffect::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_PlayImpactEffect, CallFunc_BreakHitResult_Location) == 0x000108, "Member 'BP_ProjectileBase_C_PlayImpactEffect::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_PlayImpactEffect, CallFunc_BreakHitResult_ImpactPoint) == 0x000120, "Member 'BP_ProjectileBase_C_PlayImpactEffect::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_PlayImpactEffect, CallFunc_BreakHitResult_Normal) == 0x000138, "Member 'BP_ProjectileBase_C_PlayImpactEffect::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_PlayImpactEffect, CallFunc_BreakHitResult_ImpactNormal) == 0x000150, "Member 'BP_ProjectileBase_C_PlayImpactEffect::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_PlayImpactEffect, CallFunc_BreakHitResult_PhysMat) == 0x000168, "Member 'BP_ProjectileBase_C_PlayImpactEffect::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_PlayImpactEffect, CallFunc_BreakHitResult_HitActor) == 0x000170, "Member 'BP_ProjectileBase_C_PlayImpactEffect::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_PlayImpactEffect, CallFunc_BreakHitResult_HitComponent) == 0x000178, "Member 'BP_ProjectileBase_C_PlayImpactEffect::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_PlayImpactEffect, CallFunc_BreakHitResult_HitBoneName) == 0x000180, "Member 'BP_ProjectileBase_C_PlayImpactEffect::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_PlayImpactEffect, CallFunc_BreakHitResult_BoneName) == 0x000188, "Member 'BP_ProjectileBase_C_PlayImpactEffect::CallFunc_BreakHitResult_BoneName' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_PlayImpactEffect, CallFunc_BreakHitResult_HitItem) == 0x000190, "Member 'BP_ProjectileBase_C_PlayImpactEffect::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_PlayImpactEffect, CallFunc_BreakHitResult_ElementIndex) == 0x000194, "Member 'BP_ProjectileBase_C_PlayImpactEffect::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_PlayImpactEffect, CallFunc_BreakHitResult_FaceIndex) == 0x000198, "Member 'BP_ProjectileBase_C_PlayImpactEffect::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_PlayImpactEffect, CallFunc_BreakHitResult_TraceStart) == 0x0001A0, "Member 'BP_ProjectileBase_C_PlayImpactEffect::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_PlayImpactEffect, CallFunc_BreakHitResult_TraceEnd) == 0x0001B8, "Member 'BP_ProjectileBase_C_PlayImpactEffect::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_PlayImpactEffect, CallFunc_IsValid_ReturnValue) == 0x0001D0, "Member 'BP_ProjectileBase_C_PlayImpactEffect::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_PlayImpactEffect, CallFunc_MakeRotFromX_ReturnValue) == 0x0001D8, "Member 'BP_ProjectileBase_C_PlayImpactEffect::CallFunc_MakeRotFromX_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_PlayImpactEffect, CallFunc_K2_SetWorldLocationAndRotation_SweepHitResult) == 0x0001F0, "Member 'BP_ProjectileBase_C_PlayImpactEffect::CallFunc_K2_SetWorldLocationAndRotation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_PlayImpactEffect, CallFunc_SpawnSystemAtLocation_ReturnValue) == 0x0002E8, "Member 'BP_ProjectileBase_C_PlayImpactEffect::CallFunc_SpawnSystemAtLocation_ReturnValue' has a wrong offset!");

// Function BP_ProjectileBase.BP_ProjectileBase_C.ProjectileBelongsToLocalPlayer
// 0x0020 (0x0020 - 0x0000)
struct BP_ProjectileBase_C_ProjectileBelongsToLocalPlayer final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerState*                           CallFunc_GetPlayerState_ReturnValue;               // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APlayerStateJP_Match*                   K2Node_DynamicCast_AsPlayer_State_JP_Match;        // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ProjectileBase_C_ProjectileBelongsToLocalPlayer) == 0x000008, "Wrong alignment on BP_ProjectileBase_C_ProjectileBelongsToLocalPlayer");
static_assert(sizeof(BP_ProjectileBase_C_ProjectileBelongsToLocalPlayer) == 0x000020, "Wrong size on BP_ProjectileBase_C_ProjectileBelongsToLocalPlayer");
static_assert(offsetof(BP_ProjectileBase_C_ProjectileBelongsToLocalPlayer, ReturnValue) == 0x000000, "Member 'BP_ProjectileBase_C_ProjectileBelongsToLocalPlayer::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_ProjectileBelongsToLocalPlayer, CallFunc_GetPlayerState_ReturnValue) == 0x000008, "Member 'BP_ProjectileBase_C_ProjectileBelongsToLocalPlayer::CallFunc_GetPlayerState_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_ProjectileBelongsToLocalPlayer, K2Node_DynamicCast_AsPlayer_State_JP_Match) == 0x000010, "Member 'BP_ProjectileBase_C_ProjectileBelongsToLocalPlayer::K2Node_DynamicCast_AsPlayer_State_JP_Match' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_ProjectileBelongsToLocalPlayer, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_ProjectileBase_C_ProjectileBelongsToLocalPlayer::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_ProjectileBelongsToLocalPlayer, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000019, "Member 'BP_ProjectileBase_C_ProjectileBelongsToLocalPlayer::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");

// Function BP_ProjectileBase.BP_ProjectileBase_C.Server_SpawnDecals
// 0x00F8 (0x00F8 - 0x0000)
struct BP_ProjectileBase_C_Server_SpawnDecals final
{
public:
	struct FHitResult                             HitResult;                                         // 0x0000(0x00F8)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_ProjectileBase_C_Server_SpawnDecals) == 0x000008, "Wrong alignment on BP_ProjectileBase_C_Server_SpawnDecals");
static_assert(sizeof(BP_ProjectileBase_C_Server_SpawnDecals) == 0x0000F8, "Wrong size on BP_ProjectileBase_C_Server_SpawnDecals");
static_assert(offsetof(BP_ProjectileBase_C_Server_SpawnDecals, HitResult) == 0x000000, "Member 'BP_ProjectileBase_C_Server_SpawnDecals::HitResult' has a wrong offset!");

// Function BP_ProjectileBase.BP_ProjectileBase_C.Set Collisions With
// 0x0010 (0x0010 - 0x0000)
struct BP_ProjectileBase_C_Set_Collisions_With final
{
public:
	class AActor*                                 TargetActor;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Ignore;                                            // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ProjectileBase_C_Set_Collisions_With) == 0x000008, "Wrong alignment on BP_ProjectileBase_C_Set_Collisions_With");
static_assert(sizeof(BP_ProjectileBase_C_Set_Collisions_With) == 0x000010, "Wrong size on BP_ProjectileBase_C_Set_Collisions_With");
static_assert(offsetof(BP_ProjectileBase_C_Set_Collisions_With, TargetActor) == 0x000000, "Member 'BP_ProjectileBase_C_Set_Collisions_With::TargetActor' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_Set_Collisions_With, Ignore) == 0x000008, "Member 'BP_ProjectileBase_C_Set_Collisions_With::Ignore' has a wrong offset!");

// Function BP_ProjectileBase.BP_ProjectileBase_C.SetHighContrastMode
// 0x0058 (0x0058 - 0x0000)
struct BP_ProjectileBase_C_SetHighContrastMode final
{
public:
	bool                                          Enabled;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Conv_BoolToDouble_ReturnValue;            // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_BoolToDouble_ReturnValue_1;          // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UMaterialInterface*>             CallFunc_GetMaterials_ReturnValue;                 // 0x0028(0x0010)(ReferenceParm)
	class UMaterialInterface*                     CallFunc_Array_Get_Item;                           // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0045(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_46[0x2];                                       // 0x0046(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast; // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_1; // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ProjectileBase_C_SetHighContrastMode) == 0x000008, "Wrong alignment on BP_ProjectileBase_C_SetHighContrastMode");
static_assert(sizeof(BP_ProjectileBase_C_SetHighContrastMode) == 0x000058, "Wrong size on BP_ProjectileBase_C_SetHighContrastMode");
static_assert(offsetof(BP_ProjectileBase_C_SetHighContrastMode, Enabled) == 0x000000, "Member 'BP_ProjectileBase_C_SetHighContrastMode::Enabled' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_SetHighContrastMode, CallFunc_Conv_BoolToDouble_ReturnValue) == 0x000008, "Member 'BP_ProjectileBase_C_SetHighContrastMode::CallFunc_Conv_BoolToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_SetHighContrastMode, CallFunc_Conv_BoolToDouble_ReturnValue_1) == 0x000010, "Member 'BP_ProjectileBase_C_SetHighContrastMode::CallFunc_Conv_BoolToDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_SetHighContrastMode, Temp_int_Array_Index_Variable) == 0x000018, "Member 'BP_ProjectileBase_C_SetHighContrastMode::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_SetHighContrastMode, Temp_int_Loop_Counter_Variable) == 0x00001C, "Member 'BP_ProjectileBase_C_SetHighContrastMode::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_SetHighContrastMode, CallFunc_Add_IntInt_ReturnValue) == 0x000020, "Member 'BP_ProjectileBase_C_SetHighContrastMode::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_SetHighContrastMode, CallFunc_GetMaterials_ReturnValue) == 0x000028, "Member 'BP_ProjectileBase_C_SetHighContrastMode::CallFunc_GetMaterials_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_SetHighContrastMode, CallFunc_Array_Get_Item) == 0x000038, "Member 'BP_ProjectileBase_C_SetHighContrastMode::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_SetHighContrastMode, CallFunc_Array_Length_ReturnValue) == 0x000040, "Member 'BP_ProjectileBase_C_SetHighContrastMode::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_SetHighContrastMode, CallFunc_IsValid_ReturnValue) == 0x000044, "Member 'BP_ProjectileBase_C_SetHighContrastMode::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_SetHighContrastMode, CallFunc_Less_IntInt_ReturnValue) == 0x000045, "Member 'BP_ProjectileBase_C_SetHighContrastMode::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_SetHighContrastMode, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x000048, "Member 'BP_ProjectileBase_C_SetHighContrastMode::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_SetHighContrastMode, CallFunc_SetScalarParameterValue_Value_ImplicitCast) == 0x000050, "Member 'BP_ProjectileBase_C_SetHighContrastMode::CallFunc_SetScalarParameterValue_Value_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_SetHighContrastMode, CallFunc_SetScalarParameterValue_Value_ImplicitCast_1) == 0x000054, "Member 'BP_ProjectileBase_C_SetHighContrastMode::CallFunc_SetScalarParameterValue_Value_ImplicitCast_1' has a wrong offset!");

// Function BP_ProjectileBase.BP_ProjectileBase_C.SetLocationRotationAndInitialVelocity
// 0x0118 (0x0118 - 0x0000)
struct BP_ProjectileBase_C_SetLocationRotationAndInitialVelocity final
{
public:
	struct FHitResult                             CallFunc_K2_SetActorLocationAndRotation_SweepHitResult; // 0x0000(0x00F8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_SetActorLocationAndRotation_ReturnValue; // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F9[0x7];                                       // 0x00F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0100(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ProjectileBase_C_SetLocationRotationAndInitialVelocity) == 0x000008, "Wrong alignment on BP_ProjectileBase_C_SetLocationRotationAndInitialVelocity");
static_assert(sizeof(BP_ProjectileBase_C_SetLocationRotationAndInitialVelocity) == 0x000118, "Wrong size on BP_ProjectileBase_C_SetLocationRotationAndInitialVelocity");
static_assert(offsetof(BP_ProjectileBase_C_SetLocationRotationAndInitialVelocity, CallFunc_K2_SetActorLocationAndRotation_SweepHitResult) == 0x000000, "Member 'BP_ProjectileBase_C_SetLocationRotationAndInitialVelocity::CallFunc_K2_SetActorLocationAndRotation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_SetLocationRotationAndInitialVelocity, CallFunc_K2_SetActorLocationAndRotation_ReturnValue) == 0x0000F8, "Member 'BP_ProjectileBase_C_SetLocationRotationAndInitialVelocity::CallFunc_K2_SetActorLocationAndRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_SetLocationRotationAndInitialVelocity, CallFunc_MakeVector_ReturnValue) == 0x000100, "Member 'BP_ProjectileBase_C_SetLocationRotationAndInitialVelocity::CallFunc_MakeVector_ReturnValue' has a wrong offset!");

// Function BP_ProjectileBase.BP_ProjectileBase_C.SetNewInstigator
// 0x0008 (0x0008 - 0x0000)
struct BP_ProjectileBase_C_SetNewInstigator final
{
public:
	class APawn*                                  NewInstigator;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ProjectileBase_C_SetNewInstigator) == 0x000008, "Wrong alignment on BP_ProjectileBase_C_SetNewInstigator");
static_assert(sizeof(BP_ProjectileBase_C_SetNewInstigator) == 0x000008, "Wrong size on BP_ProjectileBase_C_SetNewInstigator");
static_assert(offsetof(BP_ProjectileBase_C_SetNewInstigator, NewInstigator) == 0x000000, "Member 'BP_ProjectileBase_C_SetNewInstigator::NewInstigator' has a wrong offset!");

// Function BP_ProjectileBase.BP_ProjectileBase_C.SetSpeed
// 0x0008 (0x0008 - 0x0000)
struct BP_ProjectileBase_C_SetSpeed final
{
public:
	float                                         K2Node_VariableSet_ProjectileGravityScale_ImplicitCast; // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_VariableSet_MaxSpeed_ImplicitCast;          // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ProjectileBase_C_SetSpeed) == 0x000004, "Wrong alignment on BP_ProjectileBase_C_SetSpeed");
static_assert(sizeof(BP_ProjectileBase_C_SetSpeed) == 0x000008, "Wrong size on BP_ProjectileBase_C_SetSpeed");
static_assert(offsetof(BP_ProjectileBase_C_SetSpeed, K2Node_VariableSet_ProjectileGravityScale_ImplicitCast) == 0x000000, "Member 'BP_ProjectileBase_C_SetSpeed::K2Node_VariableSet_ProjectileGravityScale_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_SetSpeed, K2Node_VariableSet_MaxSpeed_ImplicitCast) == 0x000004, "Member 'BP_ProjectileBase_C_SetSpeed::K2Node_VariableSet_MaxSpeed_ImplicitCast' has a wrong offset!");

// Function BP_ProjectileBase.BP_ProjectileBase_C.Spawn Hit Cosmetics
// 0x01F0 (0x01F0 - 0x0000)
struct BP_ProjectileBase_C_Spawn_Hit_Cosmetics final
{
public:
	struct FHitResult                             Hit;                                               // 0x0000(0x00F8)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x00F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_FA[0x2];                                       // 0x00FA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x00FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x0100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_104[0x4];                                      // 0x0104(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x0108(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x0120(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x0138(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x0150(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0168(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0170(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0178(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0180(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_BoneName;                  // 0x0188(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0190(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x0194(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x0198(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19C[0x4];                                      // 0x019C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x01A0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x01B8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x01D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D1[0x7];                                      // 0x01D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInterface*                     CallFunc_GetMaterial_ReturnValue;                  // 0x01D8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x01E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E1[0x7];                                      // 0x01E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPhysicalMaterial*                      CallFunc_GetPhysicalMaterial_ReturnValue;          // 0x01E8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ProjectileBase_C_Spawn_Hit_Cosmetics) == 0x000008, "Wrong alignment on BP_ProjectileBase_C_Spawn_Hit_Cosmetics");
static_assert(sizeof(BP_ProjectileBase_C_Spawn_Hit_Cosmetics) == 0x0001F0, "Wrong size on BP_ProjectileBase_C_Spawn_Hit_Cosmetics");
static_assert(offsetof(BP_ProjectileBase_C_Spawn_Hit_Cosmetics, Hit) == 0x000000, "Member 'BP_ProjectileBase_C_Spawn_Hit_Cosmetics::Hit' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_Spawn_Hit_Cosmetics, CallFunc_BreakHitResult_bBlockingHit) == 0x0000F8, "Member 'BP_ProjectileBase_C_Spawn_Hit_Cosmetics::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_Spawn_Hit_Cosmetics, CallFunc_BreakHitResult_bInitialOverlap) == 0x0000F9, "Member 'BP_ProjectileBase_C_Spawn_Hit_Cosmetics::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_Spawn_Hit_Cosmetics, CallFunc_BreakHitResult_Time) == 0x0000FC, "Member 'BP_ProjectileBase_C_Spawn_Hit_Cosmetics::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_Spawn_Hit_Cosmetics, CallFunc_BreakHitResult_Distance) == 0x000100, "Member 'BP_ProjectileBase_C_Spawn_Hit_Cosmetics::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_Spawn_Hit_Cosmetics, CallFunc_BreakHitResult_Location) == 0x000108, "Member 'BP_ProjectileBase_C_Spawn_Hit_Cosmetics::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_Spawn_Hit_Cosmetics, CallFunc_BreakHitResult_ImpactPoint) == 0x000120, "Member 'BP_ProjectileBase_C_Spawn_Hit_Cosmetics::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_Spawn_Hit_Cosmetics, CallFunc_BreakHitResult_Normal) == 0x000138, "Member 'BP_ProjectileBase_C_Spawn_Hit_Cosmetics::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_Spawn_Hit_Cosmetics, CallFunc_BreakHitResult_ImpactNormal) == 0x000150, "Member 'BP_ProjectileBase_C_Spawn_Hit_Cosmetics::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_Spawn_Hit_Cosmetics, CallFunc_BreakHitResult_PhysMat) == 0x000168, "Member 'BP_ProjectileBase_C_Spawn_Hit_Cosmetics::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_Spawn_Hit_Cosmetics, CallFunc_BreakHitResult_HitActor) == 0x000170, "Member 'BP_ProjectileBase_C_Spawn_Hit_Cosmetics::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_Spawn_Hit_Cosmetics, CallFunc_BreakHitResult_HitComponent) == 0x000178, "Member 'BP_ProjectileBase_C_Spawn_Hit_Cosmetics::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_Spawn_Hit_Cosmetics, CallFunc_BreakHitResult_HitBoneName) == 0x000180, "Member 'BP_ProjectileBase_C_Spawn_Hit_Cosmetics::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_Spawn_Hit_Cosmetics, CallFunc_BreakHitResult_BoneName) == 0x000188, "Member 'BP_ProjectileBase_C_Spawn_Hit_Cosmetics::CallFunc_BreakHitResult_BoneName' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_Spawn_Hit_Cosmetics, CallFunc_BreakHitResult_HitItem) == 0x000190, "Member 'BP_ProjectileBase_C_Spawn_Hit_Cosmetics::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_Spawn_Hit_Cosmetics, CallFunc_BreakHitResult_ElementIndex) == 0x000194, "Member 'BP_ProjectileBase_C_Spawn_Hit_Cosmetics::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_Spawn_Hit_Cosmetics, CallFunc_BreakHitResult_FaceIndex) == 0x000198, "Member 'BP_ProjectileBase_C_Spawn_Hit_Cosmetics::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_Spawn_Hit_Cosmetics, CallFunc_BreakHitResult_TraceStart) == 0x0001A0, "Member 'BP_ProjectileBase_C_Spawn_Hit_Cosmetics::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_Spawn_Hit_Cosmetics, CallFunc_BreakHitResult_TraceEnd) == 0x0001B8, "Member 'BP_ProjectileBase_C_Spawn_Hit_Cosmetics::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_Spawn_Hit_Cosmetics, CallFunc_IsValid_ReturnValue) == 0x0001D0, "Member 'BP_ProjectileBase_C_Spawn_Hit_Cosmetics::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_Spawn_Hit_Cosmetics, CallFunc_GetMaterial_ReturnValue) == 0x0001D8, "Member 'BP_ProjectileBase_C_Spawn_Hit_Cosmetics::CallFunc_GetMaterial_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_Spawn_Hit_Cosmetics, CallFunc_IsValid_ReturnValue_1) == 0x0001E0, "Member 'BP_ProjectileBase_C_Spawn_Hit_Cosmetics::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_Spawn_Hit_Cosmetics, CallFunc_GetPhysicalMaterial_ReturnValue) == 0x0001E8, "Member 'BP_ProjectileBase_C_Spawn_Hit_Cosmetics::CallFunc_GetPhysicalMaterial_ReturnValue' has a wrong offset!");

// Function BP_ProjectileBase.BP_ProjectileBase_C.Spawn Hit Decal
// 0x0290 (0x0290 - 0x0000)
struct BP_ProjectileBase_C_Spawn_Hit_Decal final
{
public:
	struct FHitResult                             Hit;                                               // 0x0000(0x00F8)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x00F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_FA[0x2];                                       // 0x00FA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x00FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x0100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_104[0x4];                                      // 0x0104(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x0108(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x0120(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x0138(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x0150(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0168(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0170(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0178(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0180(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_BoneName;                  // 0x0188(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0190(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x0194(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x0198(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19C[0x4];                                      // 0x019C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x01A0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x01B8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidClass_ReturnValue;                 // 0x01D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D1[0x7];                                      // 0x01D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IICustomHitDecal_C>    K2Node_DynamicCast_AsICustom_Hit_Decal;            // 0x01D8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x01E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E9[0x7];                                      // 0x01E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_MakeRotFromZ_ReturnValue;                 // 0x01F0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_208[0x8];                                      // 0x0208(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0210(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x0270(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ADecalActor*                            CallFunc_FinishSpawningActor_ReturnValue;          // 0x0278(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_AttachToComponent_ReturnValue;         // 0x0280(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ProjectileBase_C_Spawn_Hit_Decal) == 0x000010, "Wrong alignment on BP_ProjectileBase_C_Spawn_Hit_Decal");
static_assert(sizeof(BP_ProjectileBase_C_Spawn_Hit_Decal) == 0x000290, "Wrong size on BP_ProjectileBase_C_Spawn_Hit_Decal");
static_assert(offsetof(BP_ProjectileBase_C_Spawn_Hit_Decal, Hit) == 0x000000, "Member 'BP_ProjectileBase_C_Spawn_Hit_Decal::Hit' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_Spawn_Hit_Decal, CallFunc_BreakHitResult_bBlockingHit) == 0x0000F8, "Member 'BP_ProjectileBase_C_Spawn_Hit_Decal::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_Spawn_Hit_Decal, CallFunc_BreakHitResult_bInitialOverlap) == 0x0000F9, "Member 'BP_ProjectileBase_C_Spawn_Hit_Decal::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_Spawn_Hit_Decal, CallFunc_BreakHitResult_Time) == 0x0000FC, "Member 'BP_ProjectileBase_C_Spawn_Hit_Decal::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_Spawn_Hit_Decal, CallFunc_BreakHitResult_Distance) == 0x000100, "Member 'BP_ProjectileBase_C_Spawn_Hit_Decal::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_Spawn_Hit_Decal, CallFunc_BreakHitResult_Location) == 0x000108, "Member 'BP_ProjectileBase_C_Spawn_Hit_Decal::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_Spawn_Hit_Decal, CallFunc_BreakHitResult_ImpactPoint) == 0x000120, "Member 'BP_ProjectileBase_C_Spawn_Hit_Decal::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_Spawn_Hit_Decal, CallFunc_BreakHitResult_Normal) == 0x000138, "Member 'BP_ProjectileBase_C_Spawn_Hit_Decal::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_Spawn_Hit_Decal, CallFunc_BreakHitResult_ImpactNormal) == 0x000150, "Member 'BP_ProjectileBase_C_Spawn_Hit_Decal::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_Spawn_Hit_Decal, CallFunc_BreakHitResult_PhysMat) == 0x000168, "Member 'BP_ProjectileBase_C_Spawn_Hit_Decal::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_Spawn_Hit_Decal, CallFunc_BreakHitResult_HitActor) == 0x000170, "Member 'BP_ProjectileBase_C_Spawn_Hit_Decal::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_Spawn_Hit_Decal, CallFunc_BreakHitResult_HitComponent) == 0x000178, "Member 'BP_ProjectileBase_C_Spawn_Hit_Decal::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_Spawn_Hit_Decal, CallFunc_BreakHitResult_HitBoneName) == 0x000180, "Member 'BP_ProjectileBase_C_Spawn_Hit_Decal::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_Spawn_Hit_Decal, CallFunc_BreakHitResult_BoneName) == 0x000188, "Member 'BP_ProjectileBase_C_Spawn_Hit_Decal::CallFunc_BreakHitResult_BoneName' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_Spawn_Hit_Decal, CallFunc_BreakHitResult_HitItem) == 0x000190, "Member 'BP_ProjectileBase_C_Spawn_Hit_Decal::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_Spawn_Hit_Decal, CallFunc_BreakHitResult_ElementIndex) == 0x000194, "Member 'BP_ProjectileBase_C_Spawn_Hit_Decal::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_Spawn_Hit_Decal, CallFunc_BreakHitResult_FaceIndex) == 0x000198, "Member 'BP_ProjectileBase_C_Spawn_Hit_Decal::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_Spawn_Hit_Decal, CallFunc_BreakHitResult_TraceStart) == 0x0001A0, "Member 'BP_ProjectileBase_C_Spawn_Hit_Decal::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_Spawn_Hit_Decal, CallFunc_BreakHitResult_TraceEnd) == 0x0001B8, "Member 'BP_ProjectileBase_C_Spawn_Hit_Decal::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_Spawn_Hit_Decal, CallFunc_IsValidClass_ReturnValue) == 0x0001D0, "Member 'BP_ProjectileBase_C_Spawn_Hit_Decal::CallFunc_IsValidClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_Spawn_Hit_Decal, K2Node_DynamicCast_AsICustom_Hit_Decal) == 0x0001D8, "Member 'BP_ProjectileBase_C_Spawn_Hit_Decal::K2Node_DynamicCast_AsICustom_Hit_Decal' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_Spawn_Hit_Decal, K2Node_DynamicCast_bSuccess) == 0x0001E8, "Member 'BP_ProjectileBase_C_Spawn_Hit_Decal::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_Spawn_Hit_Decal, CallFunc_MakeRotFromZ_ReturnValue) == 0x0001F0, "Member 'BP_ProjectileBase_C_Spawn_Hit_Decal::CallFunc_MakeRotFromZ_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_Spawn_Hit_Decal, CallFunc_MakeTransform_ReturnValue) == 0x000210, "Member 'BP_ProjectileBase_C_Spawn_Hit_Decal::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_Spawn_Hit_Decal, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x000270, "Member 'BP_ProjectileBase_C_Spawn_Hit_Decal::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_Spawn_Hit_Decal, CallFunc_FinishSpawningActor_ReturnValue) == 0x000278, "Member 'BP_ProjectileBase_C_Spawn_Hit_Decal::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_Spawn_Hit_Decal, CallFunc_K2_AttachToComponent_ReturnValue) == 0x000280, "Member 'BP_ProjectileBase_C_Spawn_Hit_Decal::CallFunc_K2_AttachToComponent_ReturnValue' has a wrong offset!");

// Function BP_ProjectileBase.BP_ProjectileBase_C.SpawnDebugSphere
// 0x0208 (0x0208 - 0x0000)
struct BP_ProjectileBase_C_SpawnDebugSphere final
{
public:
	struct FHitResult                             Hit;                                               // 0x0000(0x00F8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          Temp_bool_Variable;                                // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x00F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x00FA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_FB[0x1];                                       // 0x00FB(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x00FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x0100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_104[0x4];                                      // 0x0104(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x0108(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x0120(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x0138(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x0150(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0168(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0170(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0178(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0180(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_BoneName;                  // 0x0188(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0190(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x0194(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x0198(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19C[0x4];                                      // 0x019C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x01A0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x01B8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable;                              // 0x01D0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_1;                            // 0x01E0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsServer_ReturnValue;                     // 0x01F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1F1[0x3];                                      // 0x01F1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           K2Node_Select_Default;                             // 0x01F4(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ProjectileBase_C_SpawnDebugSphere) == 0x000008, "Wrong alignment on BP_ProjectileBase_C_SpawnDebugSphere");
static_assert(sizeof(BP_ProjectileBase_C_SpawnDebugSphere) == 0x000208, "Wrong size on BP_ProjectileBase_C_SpawnDebugSphere");
static_assert(offsetof(BP_ProjectileBase_C_SpawnDebugSphere, Hit) == 0x000000, "Member 'BP_ProjectileBase_C_SpawnDebugSphere::Hit' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_SpawnDebugSphere, Temp_bool_Variable) == 0x0000F8, "Member 'BP_ProjectileBase_C_SpawnDebugSphere::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_SpawnDebugSphere, CallFunc_BreakHitResult_bBlockingHit) == 0x0000F9, "Member 'BP_ProjectileBase_C_SpawnDebugSphere::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_SpawnDebugSphere, CallFunc_BreakHitResult_bInitialOverlap) == 0x0000FA, "Member 'BP_ProjectileBase_C_SpawnDebugSphere::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_SpawnDebugSphere, CallFunc_BreakHitResult_Time) == 0x0000FC, "Member 'BP_ProjectileBase_C_SpawnDebugSphere::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_SpawnDebugSphere, CallFunc_BreakHitResult_Distance) == 0x000100, "Member 'BP_ProjectileBase_C_SpawnDebugSphere::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_SpawnDebugSphere, CallFunc_BreakHitResult_Location) == 0x000108, "Member 'BP_ProjectileBase_C_SpawnDebugSphere::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_SpawnDebugSphere, CallFunc_BreakHitResult_ImpactPoint) == 0x000120, "Member 'BP_ProjectileBase_C_SpawnDebugSphere::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_SpawnDebugSphere, CallFunc_BreakHitResult_Normal) == 0x000138, "Member 'BP_ProjectileBase_C_SpawnDebugSphere::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_SpawnDebugSphere, CallFunc_BreakHitResult_ImpactNormal) == 0x000150, "Member 'BP_ProjectileBase_C_SpawnDebugSphere::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_SpawnDebugSphere, CallFunc_BreakHitResult_PhysMat) == 0x000168, "Member 'BP_ProjectileBase_C_SpawnDebugSphere::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_SpawnDebugSphere, CallFunc_BreakHitResult_HitActor) == 0x000170, "Member 'BP_ProjectileBase_C_SpawnDebugSphere::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_SpawnDebugSphere, CallFunc_BreakHitResult_HitComponent) == 0x000178, "Member 'BP_ProjectileBase_C_SpawnDebugSphere::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_SpawnDebugSphere, CallFunc_BreakHitResult_HitBoneName) == 0x000180, "Member 'BP_ProjectileBase_C_SpawnDebugSphere::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_SpawnDebugSphere, CallFunc_BreakHitResult_BoneName) == 0x000188, "Member 'BP_ProjectileBase_C_SpawnDebugSphere::CallFunc_BreakHitResult_BoneName' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_SpawnDebugSphere, CallFunc_BreakHitResult_HitItem) == 0x000190, "Member 'BP_ProjectileBase_C_SpawnDebugSphere::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_SpawnDebugSphere, CallFunc_BreakHitResult_ElementIndex) == 0x000194, "Member 'BP_ProjectileBase_C_SpawnDebugSphere::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_SpawnDebugSphere, CallFunc_BreakHitResult_FaceIndex) == 0x000198, "Member 'BP_ProjectileBase_C_SpawnDebugSphere::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_SpawnDebugSphere, CallFunc_BreakHitResult_TraceStart) == 0x0001A0, "Member 'BP_ProjectileBase_C_SpawnDebugSphere::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_SpawnDebugSphere, CallFunc_BreakHitResult_TraceEnd) == 0x0001B8, "Member 'BP_ProjectileBase_C_SpawnDebugSphere::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_SpawnDebugSphere, Temp_struct_Variable) == 0x0001D0, "Member 'BP_ProjectileBase_C_SpawnDebugSphere::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_SpawnDebugSphere, Temp_struct_Variable_1) == 0x0001E0, "Member 'BP_ProjectileBase_C_SpawnDebugSphere::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_SpawnDebugSphere, CallFunc_IsServer_ReturnValue) == 0x0001F0, "Member 'BP_ProjectileBase_C_SpawnDebugSphere::CallFunc_IsServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_SpawnDebugSphere, K2Node_Select_Default) == 0x0001F4, "Member 'BP_ProjectileBase_C_SpawnDebugSphere::K2Node_Select_Default' has a wrong offset!");

// Function BP_ProjectileBase.BP_ProjectileBase_C.TryKnockbackMessItem
// 0x0220 (0x0220 - 0x0000)
struct BP_ProjectileBase_C_TryKnockbackMessItem final
{
public:
	struct FHitResult                             Info;                                              // 0x0000(0x00F8)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	double                                        CallFunc_MakeLiteralDouble_ReturnValue;            // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x0101(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_102[0x2];                                      // 0x0102(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x0104(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x0108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_10C[0x4];                                      // 0x010C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x0110(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x0128(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x0140(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x0158(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0170(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0178(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0180(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0188(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_BoneName;                  // 0x0190(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0198(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x019C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x01A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A4[0x4];                                      // 0x01A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x01A8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x01C0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class II_Knockbackable_C>    K2Node_DynamicCast_AsI_Knockbackable;              // 0x01D8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x01E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E9[0x7];                                      // 0x01E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x01F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x01F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_MathExpression_ReturnValue;                 // 0x0200(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Knockback_Void;                           // 0x0218(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ProjectileBase_C_TryKnockbackMessItem) == 0x000008, "Wrong alignment on BP_ProjectileBase_C_TryKnockbackMessItem");
static_assert(sizeof(BP_ProjectileBase_C_TryKnockbackMessItem) == 0x000220, "Wrong size on BP_ProjectileBase_C_TryKnockbackMessItem");
static_assert(offsetof(BP_ProjectileBase_C_TryKnockbackMessItem, Info) == 0x000000, "Member 'BP_ProjectileBase_C_TryKnockbackMessItem::Info' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_TryKnockbackMessItem, CallFunc_MakeLiteralDouble_ReturnValue) == 0x0000F8, "Member 'BP_ProjectileBase_C_TryKnockbackMessItem::CallFunc_MakeLiteralDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_TryKnockbackMessItem, CallFunc_BreakHitResult_bBlockingHit) == 0x000100, "Member 'BP_ProjectileBase_C_TryKnockbackMessItem::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_TryKnockbackMessItem, CallFunc_BreakHitResult_bInitialOverlap) == 0x000101, "Member 'BP_ProjectileBase_C_TryKnockbackMessItem::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_TryKnockbackMessItem, CallFunc_BreakHitResult_Time) == 0x000104, "Member 'BP_ProjectileBase_C_TryKnockbackMessItem::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_TryKnockbackMessItem, CallFunc_BreakHitResult_Distance) == 0x000108, "Member 'BP_ProjectileBase_C_TryKnockbackMessItem::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_TryKnockbackMessItem, CallFunc_BreakHitResult_Location) == 0x000110, "Member 'BP_ProjectileBase_C_TryKnockbackMessItem::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_TryKnockbackMessItem, CallFunc_BreakHitResult_ImpactPoint) == 0x000128, "Member 'BP_ProjectileBase_C_TryKnockbackMessItem::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_TryKnockbackMessItem, CallFunc_BreakHitResult_Normal) == 0x000140, "Member 'BP_ProjectileBase_C_TryKnockbackMessItem::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_TryKnockbackMessItem, CallFunc_BreakHitResult_ImpactNormal) == 0x000158, "Member 'BP_ProjectileBase_C_TryKnockbackMessItem::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_TryKnockbackMessItem, CallFunc_BreakHitResult_PhysMat) == 0x000170, "Member 'BP_ProjectileBase_C_TryKnockbackMessItem::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_TryKnockbackMessItem, CallFunc_BreakHitResult_HitActor) == 0x000178, "Member 'BP_ProjectileBase_C_TryKnockbackMessItem::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_TryKnockbackMessItem, CallFunc_BreakHitResult_HitComponent) == 0x000180, "Member 'BP_ProjectileBase_C_TryKnockbackMessItem::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_TryKnockbackMessItem, CallFunc_BreakHitResult_HitBoneName) == 0x000188, "Member 'BP_ProjectileBase_C_TryKnockbackMessItem::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_TryKnockbackMessItem, CallFunc_BreakHitResult_BoneName) == 0x000190, "Member 'BP_ProjectileBase_C_TryKnockbackMessItem::CallFunc_BreakHitResult_BoneName' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_TryKnockbackMessItem, CallFunc_BreakHitResult_HitItem) == 0x000198, "Member 'BP_ProjectileBase_C_TryKnockbackMessItem::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_TryKnockbackMessItem, CallFunc_BreakHitResult_ElementIndex) == 0x00019C, "Member 'BP_ProjectileBase_C_TryKnockbackMessItem::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_TryKnockbackMessItem, CallFunc_BreakHitResult_FaceIndex) == 0x0001A0, "Member 'BP_ProjectileBase_C_TryKnockbackMessItem::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_TryKnockbackMessItem, CallFunc_BreakHitResult_TraceStart) == 0x0001A8, "Member 'BP_ProjectileBase_C_TryKnockbackMessItem::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_TryKnockbackMessItem, CallFunc_BreakHitResult_TraceEnd) == 0x0001C0, "Member 'BP_ProjectileBase_C_TryKnockbackMessItem::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_TryKnockbackMessItem, K2Node_DynamicCast_AsI_Knockbackable) == 0x0001D8, "Member 'BP_ProjectileBase_C_TryKnockbackMessItem::K2Node_DynamicCast_AsI_Knockbackable' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_TryKnockbackMessItem, K2Node_DynamicCast_bSuccess) == 0x0001E8, "Member 'BP_ProjectileBase_C_TryKnockbackMessItem::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_TryKnockbackMessItem, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x0001F0, "Member 'BP_ProjectileBase_C_TryKnockbackMessItem::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_TryKnockbackMessItem, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x0001F8, "Member 'BP_ProjectileBase_C_TryKnockbackMessItem::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_TryKnockbackMessItem, K2Node_MathExpression_ReturnValue) == 0x000200, "Member 'BP_ProjectileBase_C_TryKnockbackMessItem::K2Node_MathExpression_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ProjectileBase_C_TryKnockbackMessItem, CallFunc_Knockback_Void) == 0x000218, "Member 'BP_ProjectileBase_C_TryKnockbackMessItem::CallFunc_Knockback_Void' has a wrong offset!");

}

