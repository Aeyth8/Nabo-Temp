#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_DriveByVan

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "JP_structs.hpp"
#include "GameplayAbilities_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BP_DriveByVan.BP_DriveByVan_C.AddRandomSpreadToDirection
// 0x0088 (0x0088 - 0x0000)
struct BP_DriveByVan_C_AddRandomSpreadToDirection final
{
public:
	struct FRotator                               InDirection;                                       // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               OutDirection;                                      // 0x0018(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRandomStream                          RandomStream;                                      // 0x0030(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue;             // 0x0038(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRandomStream                          CallFunc_MakeRandomStream_ReturnValue;             // 0x0050(0x0008)(ZeroConstructor, NoDestructor)
	struct FVector                                CallFunc_RandomUnitVectorInConeInDegreesFromStream_ReturnValue; // 0x0058(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_Conv_VectorToRotator_ReturnValue;         // 0x0070(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_DriveByVan_C_AddRandomSpreadToDirection) == 0x000008, "Wrong alignment on BP_DriveByVan_C_AddRandomSpreadToDirection");
static_assert(sizeof(BP_DriveByVan_C_AddRandomSpreadToDirection) == 0x000088, "Wrong size on BP_DriveByVan_C_AddRandomSpreadToDirection");
static_assert(offsetof(BP_DriveByVan_C_AddRandomSpreadToDirection, InDirection) == 0x000000, "Member 'BP_DriveByVan_C_AddRandomSpreadToDirection::InDirection' has a wrong offset!");
static_assert(offsetof(BP_DriveByVan_C_AddRandomSpreadToDirection, OutDirection) == 0x000018, "Member 'BP_DriveByVan_C_AddRandomSpreadToDirection::OutDirection' has a wrong offset!");
static_assert(offsetof(BP_DriveByVan_C_AddRandomSpreadToDirection, RandomStream) == 0x000030, "Member 'BP_DriveByVan_C_AddRandomSpreadToDirection::RandomStream' has a wrong offset!");
static_assert(offsetof(BP_DriveByVan_C_AddRandomSpreadToDirection, CallFunc_GetForwardVector_ReturnValue) == 0x000038, "Member 'BP_DriveByVan_C_AddRandomSpreadToDirection::CallFunc_GetForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DriveByVan_C_AddRandomSpreadToDirection, CallFunc_MakeRandomStream_ReturnValue) == 0x000050, "Member 'BP_DriveByVan_C_AddRandomSpreadToDirection::CallFunc_MakeRandomStream_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DriveByVan_C_AddRandomSpreadToDirection, CallFunc_RandomUnitVectorInConeInDegreesFromStream_ReturnValue) == 0x000058, "Member 'BP_DriveByVan_C_AddRandomSpreadToDirection::CallFunc_RandomUnitVectorInConeInDegreesFromStream_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DriveByVan_C_AddRandomSpreadToDirection, CallFunc_Conv_VectorToRotator_ReturnValue) == 0x000070, "Member 'BP_DriveByVan_C_AddRandomSpreadToDirection::CallFunc_Conv_VectorToRotator_ReturnValue' has a wrong offset!");

// Function BP_DriveByVan.BP_DriveByVan_C.ApplyDamage
// 0x0270 (0x0270 - 0x0000)
struct BP_DriveByVan_C_ApplyDamage final
{
public:
	class AActor*                                 Target;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class II_Team_BP_C>          K2Node_DynamicCast_AsI_Team_BP;                    // 0x0008(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class II_ActorWithName_C>    K2Node_DynamicCast_AsI_Actor_with_Name;            // 0x0020(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetTeamID_Return;                         // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_32[0x6];                                       // 0x0032(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetName_Name;                             // 0x0038(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0048(0x0010)()
	class UAbilitySystemComponent*                CallFunc_GetAbilitySystemComponent_ReturnValue;    // 0x0058(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FKillData                              K2Node_MakeStruct_KillData;                        // 0x0060(0x00C0)()
	struct FGameplayEffectSpecHandle              CallFunc_MakeOutgoingSpec_ReturnValue;             // 0x0120(0x0010)()
	struct FHitResult                             CallFunc_MakeHitResult_ReturnValue;                // 0x0130(0x00F8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FGameplayEffectSpecHandle              CallFunc_AssignTagSetByCallerMagnitude_ReturnValue; // 0x0228(0x0010)()
	struct FGameplayEffectContextHandle           CallFunc_GetEffectContext_ReturnValue;             // 0x0238(0x0018)()
	class UAbilitySystemComponent*                CallFunc_GetAbilitySystemComponent_ReturnValue_1;  // 0x0250(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UAbilitySystemComponentIW*              K2Node_DynamicCast_AsAbility_System_Component_IW;  // 0x0258(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0260(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ApplyGameplayEffectSpecToTargetWithChange_Changed; // 0x0261(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_262[0x2];                                      // 0x0262(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FActiveGameplayEffectHandle            CallFunc_ApplyGameplayEffectSpecToTargetWithChange_ReturnValue; // 0x0264(0x0008)(NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_DriveByVan_C_ApplyDamage) == 0x000008, "Wrong alignment on BP_DriveByVan_C_ApplyDamage");
static_assert(sizeof(BP_DriveByVan_C_ApplyDamage) == 0x000270, "Wrong size on BP_DriveByVan_C_ApplyDamage");
static_assert(offsetof(BP_DriveByVan_C_ApplyDamage, Target) == 0x000000, "Member 'BP_DriveByVan_C_ApplyDamage::Target' has a wrong offset!");
static_assert(offsetof(BP_DriveByVan_C_ApplyDamage, K2Node_DynamicCast_AsI_Team_BP) == 0x000008, "Member 'BP_DriveByVan_C_ApplyDamage::K2Node_DynamicCast_AsI_Team_BP' has a wrong offset!");
static_assert(offsetof(BP_DriveByVan_C_ApplyDamage, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_DriveByVan_C_ApplyDamage::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_DriveByVan_C_ApplyDamage, K2Node_DynamicCast_AsI_Actor_with_Name) == 0x000020, "Member 'BP_DriveByVan_C_ApplyDamage::K2Node_DynamicCast_AsI_Actor_with_Name' has a wrong offset!");
static_assert(offsetof(BP_DriveByVan_C_ApplyDamage, K2Node_DynamicCast_bSuccess_1) == 0x000030, "Member 'BP_DriveByVan_C_ApplyDamage::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_DriveByVan_C_ApplyDamage, CallFunc_GetTeamID_Return) == 0x000031, "Member 'BP_DriveByVan_C_ApplyDamage::CallFunc_GetTeamID_Return' has a wrong offset!");
static_assert(offsetof(BP_DriveByVan_C_ApplyDamage, CallFunc_GetName_Name) == 0x000038, "Member 'BP_DriveByVan_C_ApplyDamage::CallFunc_GetName_Name' has a wrong offset!");
static_assert(offsetof(BP_DriveByVan_C_ApplyDamage, CallFunc_Conv_StringToText_ReturnValue) == 0x000048, "Member 'BP_DriveByVan_C_ApplyDamage::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DriveByVan_C_ApplyDamage, CallFunc_GetAbilitySystemComponent_ReturnValue) == 0x000058, "Member 'BP_DriveByVan_C_ApplyDamage::CallFunc_GetAbilitySystemComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DriveByVan_C_ApplyDamage, K2Node_MakeStruct_KillData) == 0x000060, "Member 'BP_DriveByVan_C_ApplyDamage::K2Node_MakeStruct_KillData' has a wrong offset!");
static_assert(offsetof(BP_DriveByVan_C_ApplyDamage, CallFunc_MakeOutgoingSpec_ReturnValue) == 0x000120, "Member 'BP_DriveByVan_C_ApplyDamage::CallFunc_MakeOutgoingSpec_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DriveByVan_C_ApplyDamage, CallFunc_MakeHitResult_ReturnValue) == 0x000130, "Member 'BP_DriveByVan_C_ApplyDamage::CallFunc_MakeHitResult_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DriveByVan_C_ApplyDamage, CallFunc_AssignTagSetByCallerMagnitude_ReturnValue) == 0x000228, "Member 'BP_DriveByVan_C_ApplyDamage::CallFunc_AssignTagSetByCallerMagnitude_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DriveByVan_C_ApplyDamage, CallFunc_GetEffectContext_ReturnValue) == 0x000238, "Member 'BP_DriveByVan_C_ApplyDamage::CallFunc_GetEffectContext_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DriveByVan_C_ApplyDamage, CallFunc_GetAbilitySystemComponent_ReturnValue_1) == 0x000250, "Member 'BP_DriveByVan_C_ApplyDamage::CallFunc_GetAbilitySystemComponent_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_DriveByVan_C_ApplyDamage, K2Node_DynamicCast_AsAbility_System_Component_IW) == 0x000258, "Member 'BP_DriveByVan_C_ApplyDamage::K2Node_DynamicCast_AsAbility_System_Component_IW' has a wrong offset!");
static_assert(offsetof(BP_DriveByVan_C_ApplyDamage, K2Node_DynamicCast_bSuccess_2) == 0x000260, "Member 'BP_DriveByVan_C_ApplyDamage::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_DriveByVan_C_ApplyDamage, CallFunc_ApplyGameplayEffectSpecToTargetWithChange_Changed) == 0x000261, "Member 'BP_DriveByVan_C_ApplyDamage::CallFunc_ApplyGameplayEffectSpecToTargetWithChange_Changed' has a wrong offset!");
static_assert(offsetof(BP_DriveByVan_C_ApplyDamage, CallFunc_ApplyGameplayEffectSpecToTargetWithChange_ReturnValue) == 0x000264, "Member 'BP_DriveByVan_C_ApplyDamage::CallFunc_ApplyGameplayEffectSpecToTargetWithChange_ReturnValue' has a wrong offset!");

// Function BP_DriveByVan.BP_DriveByVan_C.BndEvt__BP_DeliveryService_Box_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature
// 0x0118 (0x0118 - 0x0000)
struct BP_DriveByVan_C_BndEvt__BP_DeliveryService_Box_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bFromSweep;                                        // 0x001C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             SweepResult;                                       // 0x0020(0x00F8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_DriveByVan_C_BndEvt__BP_DeliveryService_Box_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on BP_DriveByVan_C_BndEvt__BP_DeliveryService_Box_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(sizeof(BP_DriveByVan_C_BndEvt__BP_DeliveryService_Box_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature) == 0x000118, "Wrong size on BP_DriveByVan_C_BndEvt__BP_DeliveryService_Box_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(offsetof(BP_DriveByVan_C_BndEvt__BP_DeliveryService_Box_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature, OverlappedComponent) == 0x000000, "Member 'BP_DriveByVan_C_BndEvt__BP_DeliveryService_Box_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BP_DriveByVan_C_BndEvt__BP_DeliveryService_Box_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'BP_DriveByVan_C_BndEvt__BP_DeliveryService_Box_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(BP_DriveByVan_C_BndEvt__BP_DeliveryService_Box_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'BP_DriveByVan_C_BndEvt__BP_DeliveryService_Box_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(BP_DriveByVan_C_BndEvt__BP_DeliveryService_Box_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000018, "Member 'BP_DriveByVan_C_BndEvt__BP_DeliveryService_Box_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(BP_DriveByVan_C_BndEvt__BP_DeliveryService_Box_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature, bFromSweep) == 0x00001C, "Member 'BP_DriveByVan_C_BndEvt__BP_DeliveryService_Box_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature::bFromSweep' has a wrong offset!");
static_assert(offsetof(BP_DriveByVan_C_BndEvt__BP_DeliveryService_Box_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature, SweepResult) == 0x000020, "Member 'BP_DriveByVan_C_BndEvt__BP_DeliveryService_Box_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature::SweepResult' has a wrong offset!");

// Function BP_DriveByVan.BP_DriveByVan_C.BndEvt__BP_DriveByVan_SkeletalMesh_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature
// 0x0118 (0x0118 - 0x0000)
struct BP_DriveByVan_C_BndEvt__BP_DriveByVan_SkeletalMesh_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bFromSweep;                                        // 0x001C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             SweepResult;                                       // 0x0020(0x00F8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_DriveByVan_C_BndEvt__BP_DriveByVan_SkeletalMesh_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on BP_DriveByVan_C_BndEvt__BP_DriveByVan_SkeletalMesh_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(sizeof(BP_DriveByVan_C_BndEvt__BP_DriveByVan_SkeletalMesh_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature) == 0x000118, "Wrong size on BP_DriveByVan_C_BndEvt__BP_DriveByVan_SkeletalMesh_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(offsetof(BP_DriveByVan_C_BndEvt__BP_DriveByVan_SkeletalMesh_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature, OverlappedComponent) == 0x000000, "Member 'BP_DriveByVan_C_BndEvt__BP_DriveByVan_SkeletalMesh_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BP_DriveByVan_C_BndEvt__BP_DriveByVan_SkeletalMesh_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'BP_DriveByVan_C_BndEvt__BP_DriveByVan_SkeletalMesh_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(BP_DriveByVan_C_BndEvt__BP_DriveByVan_SkeletalMesh_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'BP_DriveByVan_C_BndEvt__BP_DriveByVan_SkeletalMesh_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(BP_DriveByVan_C_BndEvt__BP_DriveByVan_SkeletalMesh_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000018, "Member 'BP_DriveByVan_C_BndEvt__BP_DriveByVan_SkeletalMesh_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(BP_DriveByVan_C_BndEvt__BP_DriveByVan_SkeletalMesh_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature, bFromSweep) == 0x00001C, "Member 'BP_DriveByVan_C_BndEvt__BP_DriveByVan_SkeletalMesh_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature::bFromSweep' has a wrong offset!");
static_assert(offsetof(BP_DriveByVan_C_BndEvt__BP_DriveByVan_SkeletalMesh_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature, SweepResult) == 0x000020, "Member 'BP_DriveByVan_C_BndEvt__BP_DriveByVan_SkeletalMesh_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature::SweepResult' has a wrong offset!");

// Function BP_DriveByVan.BP_DriveByVan_C.CanShootAtTarget
// 0x0048 (0x0048 - 0x0000)
struct BP_DriveByVan_C_CanShootAtTarget final
{
public:
	class ABP_ResidentCharacter_C*                Target;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CanHitPlayer;                                      // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class ITeamableInterface>    CallFunc_GetTeamID_self_CastInput;                 // 0x0010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetTeamID_ReturnValue;                    // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_22[0x6];                                       // 0x0022(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UAbilitySystemComponent*                CallFunc_GetAbilitySystemComponent_ReturnValue;    // 0x0028(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IGameplayTagAssetInterface> CallFunc_HasMatchingGameplayTag_self_CastInput;    // 0x0030(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasMatchingGameplayTag_ReturnValue;       // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0042(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_DriveByVan_C_CanShootAtTarget) == 0x000008, "Wrong alignment on BP_DriveByVan_C_CanShootAtTarget");
static_assert(sizeof(BP_DriveByVan_C_CanShootAtTarget) == 0x000048, "Wrong size on BP_DriveByVan_C_CanShootAtTarget");
static_assert(offsetof(BP_DriveByVan_C_CanShootAtTarget, Target) == 0x000000, "Member 'BP_DriveByVan_C_CanShootAtTarget::Target' has a wrong offset!");
static_assert(offsetof(BP_DriveByVan_C_CanShootAtTarget, CanHitPlayer) == 0x000008, "Member 'BP_DriveByVan_C_CanShootAtTarget::CanHitPlayer' has a wrong offset!");
static_assert(offsetof(BP_DriveByVan_C_CanShootAtTarget, CallFunc_GetTeamID_self_CastInput) == 0x000010, "Member 'BP_DriveByVan_C_CanShootAtTarget::CallFunc_GetTeamID_self_CastInput' has a wrong offset!");
static_assert(offsetof(BP_DriveByVan_C_CanShootAtTarget, CallFunc_GetTeamID_ReturnValue) == 0x000020, "Member 'BP_DriveByVan_C_CanShootAtTarget::CallFunc_GetTeamID_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DriveByVan_C_CanShootAtTarget, CallFunc_Not_PreBool_ReturnValue) == 0x000021, "Member 'BP_DriveByVan_C_CanShootAtTarget::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DriveByVan_C_CanShootAtTarget, CallFunc_GetAbilitySystemComponent_ReturnValue) == 0x000028, "Member 'BP_DriveByVan_C_CanShootAtTarget::CallFunc_GetAbilitySystemComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DriveByVan_C_CanShootAtTarget, CallFunc_HasMatchingGameplayTag_self_CastInput) == 0x000030, "Member 'BP_DriveByVan_C_CanShootAtTarget::CallFunc_HasMatchingGameplayTag_self_CastInput' has a wrong offset!");
static_assert(offsetof(BP_DriveByVan_C_CanShootAtTarget, CallFunc_HasMatchingGameplayTag_ReturnValue) == 0x000040, "Member 'BP_DriveByVan_C_CanShootAtTarget::CallFunc_HasMatchingGameplayTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DriveByVan_C_CanShootAtTarget, CallFunc_Not_PreBool_ReturnValue_1) == 0x000041, "Member 'BP_DriveByVan_C_CanShootAtTarget::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_DriveByVan_C_CanShootAtTarget, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000042, "Member 'BP_DriveByVan_C_CanShootAtTarget::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function BP_DriveByVan.BP_DriveByVan_C.CreateFireSolutionAgainstTarget
// 0x01B0 (0x01B0 - 0x0000)
struct BP_DriveByVan_C_CreateFireSolutionAgainstTarget final
{
public:
	class ABP_ResidentCharacter_C*                Target;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8[0x8];                                        // 0x0008(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             Transform;                                         // 0x0010(0x0060)(Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_71[0x7];                                       // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0078(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x0090(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetRightVector_ReturnValue;               // 0x00A8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x00C0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetDirectionUnitVector_ReturnValue;       // 0x00D8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Dot_VectorVector_ReturnValue;             // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F9[0x7];                                       // 0x00F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USceneComponent*                        K2Node_Select_Default;                             // 0x0100(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue_1;    // 0x0108(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_FindLookAtRotation_ReturnValue;           // 0x0120(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_AddRandomSpreadToDirection_OutDirection;  // 0x0138(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0150(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_DriveByVan_C_CreateFireSolutionAgainstTarget) == 0x000010, "Wrong alignment on BP_DriveByVan_C_CreateFireSolutionAgainstTarget");
static_assert(sizeof(BP_DriveByVan_C_CreateFireSolutionAgainstTarget) == 0x0001B0, "Wrong size on BP_DriveByVan_C_CreateFireSolutionAgainstTarget");
static_assert(offsetof(BP_DriveByVan_C_CreateFireSolutionAgainstTarget, Target) == 0x000000, "Member 'BP_DriveByVan_C_CreateFireSolutionAgainstTarget::Target' has a wrong offset!");
static_assert(offsetof(BP_DriveByVan_C_CreateFireSolutionAgainstTarget, Transform) == 0x000010, "Member 'BP_DriveByVan_C_CreateFireSolutionAgainstTarget::Transform' has a wrong offset!");
static_assert(offsetof(BP_DriveByVan_C_CreateFireSolutionAgainstTarget, Temp_bool_Variable) == 0x000070, "Member 'BP_DriveByVan_C_CreateFireSolutionAgainstTarget::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_DriveByVan_C_CreateFireSolutionAgainstTarget, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000078, "Member 'BP_DriveByVan_C_CreateFireSolutionAgainstTarget::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DriveByVan_C_CreateFireSolutionAgainstTarget, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x000090, "Member 'BP_DriveByVan_C_CreateFireSolutionAgainstTarget::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_DriveByVan_C_CreateFireSolutionAgainstTarget, CallFunc_GetRightVector_ReturnValue) == 0x0000A8, "Member 'BP_DriveByVan_C_CreateFireSolutionAgainstTarget::CallFunc_GetRightVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DriveByVan_C_CreateFireSolutionAgainstTarget, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x0000C0, "Member 'BP_DriveByVan_C_CreateFireSolutionAgainstTarget::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DriveByVan_C_CreateFireSolutionAgainstTarget, CallFunc_GetDirectionUnitVector_ReturnValue) == 0x0000D8, "Member 'BP_DriveByVan_C_CreateFireSolutionAgainstTarget::CallFunc_GetDirectionUnitVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DriveByVan_C_CreateFireSolutionAgainstTarget, CallFunc_Dot_VectorVector_ReturnValue) == 0x0000F0, "Member 'BP_DriveByVan_C_CreateFireSolutionAgainstTarget::CallFunc_Dot_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DriveByVan_C_CreateFireSolutionAgainstTarget, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x0000F8, "Member 'BP_DriveByVan_C_CreateFireSolutionAgainstTarget::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DriveByVan_C_CreateFireSolutionAgainstTarget, K2Node_Select_Default) == 0x000100, "Member 'BP_DriveByVan_C_CreateFireSolutionAgainstTarget::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_DriveByVan_C_CreateFireSolutionAgainstTarget, CallFunc_K2_GetComponentLocation_ReturnValue_1) == 0x000108, "Member 'BP_DriveByVan_C_CreateFireSolutionAgainstTarget::CallFunc_K2_GetComponentLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_DriveByVan_C_CreateFireSolutionAgainstTarget, CallFunc_FindLookAtRotation_ReturnValue) == 0x000120, "Member 'BP_DriveByVan_C_CreateFireSolutionAgainstTarget::CallFunc_FindLookAtRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DriveByVan_C_CreateFireSolutionAgainstTarget, CallFunc_AddRandomSpreadToDirection_OutDirection) == 0x000138, "Member 'BP_DriveByVan_C_CreateFireSolutionAgainstTarget::CallFunc_AddRandomSpreadToDirection_OutDirection' has a wrong offset!");
static_assert(offsetof(BP_DriveByVan_C_CreateFireSolutionAgainstTarget, CallFunc_MakeTransform_ReturnValue) == 0x000150, "Member 'BP_DriveByVan_C_CreateFireSolutionAgainstTarget::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");

// Function BP_DriveByVan.BP_DriveByVan_C.CreateKillData
// 0x00D0 (0x00D0 - 0x0000)
struct BP_DriveByVan_C_CreateKillData final
{
public:
	class APlayerStateJP_Match*                   K2Node_DynamicCast_AsPlayer_State_JP_Match;        // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FCombatParticipant                     CallFunc_CreateCombatParticipantFromPlayer_ReturnValue; // 0x0010(0x0060)()
	struct FCombatParticipant                     K2Node_MakeStruct_CombatParticipant;               // 0x0070(0x0060)()
};
static_assert(alignof(BP_DriveByVan_C_CreateKillData) == 0x000008, "Wrong alignment on BP_DriveByVan_C_CreateKillData");
static_assert(sizeof(BP_DriveByVan_C_CreateKillData) == 0x0000D0, "Wrong size on BP_DriveByVan_C_CreateKillData");
static_assert(offsetof(BP_DriveByVan_C_CreateKillData, K2Node_DynamicCast_AsPlayer_State_JP_Match) == 0x000000, "Member 'BP_DriveByVan_C_CreateKillData::K2Node_DynamicCast_AsPlayer_State_JP_Match' has a wrong offset!");
static_assert(offsetof(BP_DriveByVan_C_CreateKillData, K2Node_DynamicCast_bSuccess) == 0x000008, "Member 'BP_DriveByVan_C_CreateKillData::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_DriveByVan_C_CreateKillData, CallFunc_CreateCombatParticipantFromPlayer_ReturnValue) == 0x000010, "Member 'BP_DriveByVan_C_CreateKillData::CallFunc_CreateCombatParticipantFromPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DriveByVan_C_CreateKillData, K2Node_MakeStruct_CombatParticipant) == 0x000070, "Member 'BP_DriveByVan_C_CreateKillData::K2Node_MakeStruct_CombatParticipant' has a wrong offset!");

// Function BP_DriveByVan.BP_DriveByVan_C.ExecuteUbergraph_BP_DriveByVan
// 0x0520 (0x0520 - 0x0000)
struct BP_DriveByVan_C_ExecuteUbergraph_BP_DriveByVan final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent_1;  // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor_1;           // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp_1;            // 0x0020(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex_1;       // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bFromSweep_1;           // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2D[0x3];                                       // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_ComponentBoundEvent_SweepResult_1;          // 0x0030(0x00F8)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          Temp_bool_IsClosed_Variable;                       // 0x0128(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_129[0x7];                                      // 0x0129(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent;    // 0x0130(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor;             // 0x0138(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp;              // 0x0140(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex;         // 0x0148(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bFromSweep;             // 0x014C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14D[0x3];                                      // 0x014D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_ComponentBoundEvent_SweepResult;            // 0x0150(0x00F8)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0248(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x024C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_DoesImplementInterface_ReturnValue;       // 0x024D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24E[0x2];                                      // 0x024E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0250(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable;                 // 0x0268(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_269[0x7];                                      // 0x0269(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Get_Current_World_Location_And_Rotation_On_Vehicle_Path_Based_On_Timeline_WorldLocation; // 0x0270(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_Get_Current_World_Location_And_Rotation_On_Vehicle_Path_Based_On_Timeline_WorldRotation; // 0x0288(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_K2_SetActorLocationAndRotation_SweepHitResult; // 0x02A0(0x00F8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_SetActorLocationAndRotation_ReturnValue; // 0x0398(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         K2Node_CustomEvent_Team;                           // 0x0399(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39A[0x6];                                      // 0x039A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                K2Node_CustomEvent_LocationInYard;                 // 0x03A0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x03B8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x03D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D1[0x7];                                      // 0x03D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x03D8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_FindLookAtRotation_ReturnValue;           // 0x03F0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_408[0x8];                                      // 0x0408(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0410(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         CallFunc_GetOverlappingActors_OverlappingActors;   // 0x0470(0x0010)(ReferenceParm)
	class AActor*                                 CallFunc_Array_Get_Item;                           // 0x0480(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0488(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_48C[0x4];                                      // 0x048C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_ResidentCharacter_C*                K2Node_DynamicCast_AsBP_Resident_Character;        // 0x0490(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0498(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0499(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49A[0x6];                                      // 0x049A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_CreateFireSolutionAgainstTarget_Transform; // 0x04A0(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CanShootAtTarget_CanHitPlayer;            // 0x0500(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_501[0x3];                                      // 0x0501(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0504(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_514[0x4];                                      // 0x0514(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0518(0x0008)(NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_DriveByVan_C_ExecuteUbergraph_BP_DriveByVan) == 0x000010, "Wrong alignment on BP_DriveByVan_C_ExecuteUbergraph_BP_DriveByVan");
static_assert(sizeof(BP_DriveByVan_C_ExecuteUbergraph_BP_DriveByVan) == 0x000520, "Wrong size on BP_DriveByVan_C_ExecuteUbergraph_BP_DriveByVan");
static_assert(offsetof(BP_DriveByVan_C_ExecuteUbergraph_BP_DriveByVan, EntryPoint) == 0x000000, "Member 'BP_DriveByVan_C_ExecuteUbergraph_BP_DriveByVan::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_DriveByVan_C_ExecuteUbergraph_BP_DriveByVan, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'BP_DriveByVan_C_ExecuteUbergraph_BP_DriveByVan::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_DriveByVan_C_ExecuteUbergraph_BP_DriveByVan, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'BP_DriveByVan_C_ExecuteUbergraph_BP_DriveByVan::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DriveByVan_C_ExecuteUbergraph_BP_DriveByVan, Temp_int_Array_Index_Variable) == 0x00000C, "Member 'BP_DriveByVan_C_ExecuteUbergraph_BP_DriveByVan::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_DriveByVan_C_ExecuteUbergraph_BP_DriveByVan, K2Node_ComponentBoundEvent_OverlappedComponent_1) == 0x000010, "Member 'BP_DriveByVan_C_ExecuteUbergraph_BP_DriveByVan::K2Node_ComponentBoundEvent_OverlappedComponent_1' has a wrong offset!");
static_assert(offsetof(BP_DriveByVan_C_ExecuteUbergraph_BP_DriveByVan, K2Node_ComponentBoundEvent_OtherActor_1) == 0x000018, "Member 'BP_DriveByVan_C_ExecuteUbergraph_BP_DriveByVan::K2Node_ComponentBoundEvent_OtherActor_1' has a wrong offset!");
static_assert(offsetof(BP_DriveByVan_C_ExecuteUbergraph_BP_DriveByVan, K2Node_ComponentBoundEvent_OtherComp_1) == 0x000020, "Member 'BP_DriveByVan_C_ExecuteUbergraph_BP_DriveByVan::K2Node_ComponentBoundEvent_OtherComp_1' has a wrong offset!");
static_assert(offsetof(BP_DriveByVan_C_ExecuteUbergraph_BP_DriveByVan, K2Node_ComponentBoundEvent_OtherBodyIndex_1) == 0x000028, "Member 'BP_DriveByVan_C_ExecuteUbergraph_BP_DriveByVan::K2Node_ComponentBoundEvent_OtherBodyIndex_1' has a wrong offset!");
static_assert(offsetof(BP_DriveByVan_C_ExecuteUbergraph_BP_DriveByVan, K2Node_ComponentBoundEvent_bFromSweep_1) == 0x00002C, "Member 'BP_DriveByVan_C_ExecuteUbergraph_BP_DriveByVan::K2Node_ComponentBoundEvent_bFromSweep_1' has a wrong offset!");
static_assert(offsetof(BP_DriveByVan_C_ExecuteUbergraph_BP_DriveByVan, K2Node_ComponentBoundEvent_SweepResult_1) == 0x000030, "Member 'BP_DriveByVan_C_ExecuteUbergraph_BP_DriveByVan::K2Node_ComponentBoundEvent_SweepResult_1' has a wrong offset!");
static_assert(offsetof(BP_DriveByVan_C_ExecuteUbergraph_BP_DriveByVan, Temp_bool_IsClosed_Variable) == 0x000128, "Member 'BP_DriveByVan_C_ExecuteUbergraph_BP_DriveByVan::Temp_bool_IsClosed_Variable' has a wrong offset!");
static_assert(offsetof(BP_DriveByVan_C_ExecuteUbergraph_BP_DriveByVan, K2Node_ComponentBoundEvent_OverlappedComponent) == 0x000130, "Member 'BP_DriveByVan_C_ExecuteUbergraph_BP_DriveByVan::K2Node_ComponentBoundEvent_OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BP_DriveByVan_C_ExecuteUbergraph_BP_DriveByVan, K2Node_ComponentBoundEvent_OtherActor) == 0x000138, "Member 'BP_DriveByVan_C_ExecuteUbergraph_BP_DriveByVan::K2Node_ComponentBoundEvent_OtherActor' has a wrong offset!");
static_assert(offsetof(BP_DriveByVan_C_ExecuteUbergraph_BP_DriveByVan, K2Node_ComponentBoundEvent_OtherComp) == 0x000140, "Member 'BP_DriveByVan_C_ExecuteUbergraph_BP_DriveByVan::K2Node_ComponentBoundEvent_OtherComp' has a wrong offset!");
static_assert(offsetof(BP_DriveByVan_C_ExecuteUbergraph_BP_DriveByVan, K2Node_ComponentBoundEvent_OtherBodyIndex) == 0x000148, "Member 'BP_DriveByVan_C_ExecuteUbergraph_BP_DriveByVan::K2Node_ComponentBoundEvent_OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(BP_DriveByVan_C_ExecuteUbergraph_BP_DriveByVan, K2Node_ComponentBoundEvent_bFromSweep) == 0x00014C, "Member 'BP_DriveByVan_C_ExecuteUbergraph_BP_DriveByVan::K2Node_ComponentBoundEvent_bFromSweep' has a wrong offset!");
static_assert(offsetof(BP_DriveByVan_C_ExecuteUbergraph_BP_DriveByVan, K2Node_ComponentBoundEvent_SweepResult) == 0x000150, "Member 'BP_DriveByVan_C_ExecuteUbergraph_BP_DriveByVan::K2Node_ComponentBoundEvent_SweepResult' has a wrong offset!");
static_assert(offsetof(BP_DriveByVan_C_ExecuteUbergraph_BP_DriveByVan, CallFunc_Array_Add_ReturnValue) == 0x000248, "Member 'BP_DriveByVan_C_ExecuteUbergraph_BP_DriveByVan::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DriveByVan_C_ExecuteUbergraph_BP_DriveByVan, CallFunc_Array_Contains_ReturnValue) == 0x00024C, "Member 'BP_DriveByVan_C_ExecuteUbergraph_BP_DriveByVan::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DriveByVan_C_ExecuteUbergraph_BP_DriveByVan, CallFunc_DoesImplementInterface_ReturnValue) == 0x00024D, "Member 'BP_DriveByVan_C_ExecuteUbergraph_BP_DriveByVan::CallFunc_DoesImplementInterface_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DriveByVan_C_ExecuteUbergraph_BP_DriveByVan, CallFunc_MakeVector_ReturnValue) == 0x000250, "Member 'BP_DriveByVan_C_ExecuteUbergraph_BP_DriveByVan::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DriveByVan_C_ExecuteUbergraph_BP_DriveByVan, Temp_bool_Has_Been_Initd_Variable) == 0x000268, "Member 'BP_DriveByVan_C_ExecuteUbergraph_BP_DriveByVan::Temp_bool_Has_Been_Initd_Variable' has a wrong offset!");
static_assert(offsetof(BP_DriveByVan_C_ExecuteUbergraph_BP_DriveByVan, CallFunc_Get_Current_World_Location_And_Rotation_On_Vehicle_Path_Based_On_Timeline_WorldLocation) == 0x000270, "Member 'BP_DriveByVan_C_ExecuteUbergraph_BP_DriveByVan::CallFunc_Get_Current_World_Location_And_Rotation_On_Vehicle_Path_Based_On_Timeline_WorldLocation' has a wrong offset!");
static_assert(offsetof(BP_DriveByVan_C_ExecuteUbergraph_BP_DriveByVan, CallFunc_Get_Current_World_Location_And_Rotation_On_Vehicle_Path_Based_On_Timeline_WorldRotation) == 0x000288, "Member 'BP_DriveByVan_C_ExecuteUbergraph_BP_DriveByVan::CallFunc_Get_Current_World_Location_And_Rotation_On_Vehicle_Path_Based_On_Timeline_WorldRotation' has a wrong offset!");
static_assert(offsetof(BP_DriveByVan_C_ExecuteUbergraph_BP_DriveByVan, CallFunc_K2_SetActorLocationAndRotation_SweepHitResult) == 0x0002A0, "Member 'BP_DriveByVan_C_ExecuteUbergraph_BP_DriveByVan::CallFunc_K2_SetActorLocationAndRotation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_DriveByVan_C_ExecuteUbergraph_BP_DriveByVan, CallFunc_K2_SetActorLocationAndRotation_ReturnValue) == 0x000398, "Member 'BP_DriveByVan_C_ExecuteUbergraph_BP_DriveByVan::CallFunc_K2_SetActorLocationAndRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DriveByVan_C_ExecuteUbergraph_BP_DriveByVan, K2Node_CustomEvent_Team) == 0x000399, "Member 'BP_DriveByVan_C_ExecuteUbergraph_BP_DriveByVan::K2Node_CustomEvent_Team' has a wrong offset!");
static_assert(offsetof(BP_DriveByVan_C_ExecuteUbergraph_BP_DriveByVan, K2Node_CustomEvent_LocationInYard) == 0x0003A0, "Member 'BP_DriveByVan_C_ExecuteUbergraph_BP_DriveByVan::K2Node_CustomEvent_LocationInYard' has a wrong offset!");
static_assert(offsetof(BP_DriveByVan_C_ExecuteUbergraph_BP_DriveByVan, CallFunc_Add_VectorVector_ReturnValue) == 0x0003B8, "Member 'BP_DriveByVan_C_ExecuteUbergraph_BP_DriveByVan::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DriveByVan_C_ExecuteUbergraph_BP_DriveByVan, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x0003D0, "Member 'BP_DriveByVan_C_ExecuteUbergraph_BP_DriveByVan::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DriveByVan_C_ExecuteUbergraph_BP_DriveByVan, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x0003D8, "Member 'BP_DriveByVan_C_ExecuteUbergraph_BP_DriveByVan::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DriveByVan_C_ExecuteUbergraph_BP_DriveByVan, CallFunc_FindLookAtRotation_ReturnValue) == 0x0003F0, "Member 'BP_DriveByVan_C_ExecuteUbergraph_BP_DriveByVan::CallFunc_FindLookAtRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DriveByVan_C_ExecuteUbergraph_BP_DriveByVan, CallFunc_MakeTransform_ReturnValue) == 0x000410, "Member 'BP_DriveByVan_C_ExecuteUbergraph_BP_DriveByVan::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DriveByVan_C_ExecuteUbergraph_BP_DriveByVan, CallFunc_GetOverlappingActors_OverlappingActors) == 0x000470, "Member 'BP_DriveByVan_C_ExecuteUbergraph_BP_DriveByVan::CallFunc_GetOverlappingActors_OverlappingActors' has a wrong offset!");
static_assert(offsetof(BP_DriveByVan_C_ExecuteUbergraph_BP_DriveByVan, CallFunc_Array_Get_Item) == 0x000480, "Member 'BP_DriveByVan_C_ExecuteUbergraph_BP_DriveByVan::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_DriveByVan_C_ExecuteUbergraph_BP_DriveByVan, CallFunc_Array_Length_ReturnValue) == 0x000488, "Member 'BP_DriveByVan_C_ExecuteUbergraph_BP_DriveByVan::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DriveByVan_C_ExecuteUbergraph_BP_DriveByVan, K2Node_DynamicCast_AsBP_Resident_Character) == 0x000490, "Member 'BP_DriveByVan_C_ExecuteUbergraph_BP_DriveByVan::K2Node_DynamicCast_AsBP_Resident_Character' has a wrong offset!");
static_assert(offsetof(BP_DriveByVan_C_ExecuteUbergraph_BP_DriveByVan, K2Node_DynamicCast_bSuccess) == 0x000498, "Member 'BP_DriveByVan_C_ExecuteUbergraph_BP_DriveByVan::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_DriveByVan_C_ExecuteUbergraph_BP_DriveByVan, CallFunc_Less_IntInt_ReturnValue) == 0x000499, "Member 'BP_DriveByVan_C_ExecuteUbergraph_BP_DriveByVan::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DriveByVan_C_ExecuteUbergraph_BP_DriveByVan, CallFunc_CreateFireSolutionAgainstTarget_Transform) == 0x0004A0, "Member 'BP_DriveByVan_C_ExecuteUbergraph_BP_DriveByVan::CallFunc_CreateFireSolutionAgainstTarget_Transform' has a wrong offset!");
static_assert(offsetof(BP_DriveByVan_C_ExecuteUbergraph_BP_DriveByVan, CallFunc_CanShootAtTarget_CanHitPlayer) == 0x000500, "Member 'BP_DriveByVan_C_ExecuteUbergraph_BP_DriveByVan::CallFunc_CanShootAtTarget_CanHitPlayer' has a wrong offset!");
static_assert(offsetof(BP_DriveByVan_C_ExecuteUbergraph_BP_DriveByVan, K2Node_CreateDelegate_OutputDelegate) == 0x000504, "Member 'BP_DriveByVan_C_ExecuteUbergraph_BP_DriveByVan::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_DriveByVan_C_ExecuteUbergraph_BP_DriveByVan, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000518, "Member 'BP_DriveByVan_C_ExecuteUbergraph_BP_DriveByVan::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");

// Function BP_DriveByVan.BP_DriveByVan_C.Fire Projectile
// 0x00F0 (0x00F0 - 0x0000)
struct BP_DriveByVan_C_Fire_Projectile final
{
public:
	TSubclassOf<class APooledActor>               ProjectileClass;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	uint8                                         Pad_8[0x8];                                        // 0x0008(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             SpawnTransform;                                    // 0x0010(0x0060)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Speed;                                             // 0x0070(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        GravityScale;                                      // 0x0078(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Damage;                                            // 0x0080(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0088(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x00A0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x00B8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObjectPoolingSubsystem*                CallFunc_GetWorldSubsystem_ReturnValue;            // 0x00D0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APooledActor*                           CallFunc_GetInactiveObjectOfClass_ReturnValue;     // 0x00D8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_ProjectileBase_C*                   K2Node_DynamicCast_AsBP_Projectile_Base;           // 0x00E0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_DriveByVan_C_Fire_Projectile) == 0x000010, "Wrong alignment on BP_DriveByVan_C_Fire_Projectile");
static_assert(sizeof(BP_DriveByVan_C_Fire_Projectile) == 0x0000F0, "Wrong size on BP_DriveByVan_C_Fire_Projectile");
static_assert(offsetof(BP_DriveByVan_C_Fire_Projectile, ProjectileClass) == 0x000000, "Member 'BP_DriveByVan_C_Fire_Projectile::ProjectileClass' has a wrong offset!");
static_assert(offsetof(BP_DriveByVan_C_Fire_Projectile, SpawnTransform) == 0x000010, "Member 'BP_DriveByVan_C_Fire_Projectile::SpawnTransform' has a wrong offset!");
static_assert(offsetof(BP_DriveByVan_C_Fire_Projectile, Speed) == 0x000070, "Member 'BP_DriveByVan_C_Fire_Projectile::Speed' has a wrong offset!");
static_assert(offsetof(BP_DriveByVan_C_Fire_Projectile, GravityScale) == 0x000078, "Member 'BP_DriveByVan_C_Fire_Projectile::GravityScale' has a wrong offset!");
static_assert(offsetof(BP_DriveByVan_C_Fire_Projectile, Damage) == 0x000080, "Member 'BP_DriveByVan_C_Fire_Projectile::Damage' has a wrong offset!");
static_assert(offsetof(BP_DriveByVan_C_Fire_Projectile, CallFunc_BreakTransform_Location) == 0x000088, "Member 'BP_DriveByVan_C_Fire_Projectile::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(BP_DriveByVan_C_Fire_Projectile, CallFunc_BreakTransform_Rotation) == 0x0000A0, "Member 'BP_DriveByVan_C_Fire_Projectile::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(BP_DriveByVan_C_Fire_Projectile, CallFunc_BreakTransform_Scale) == 0x0000B8, "Member 'BP_DriveByVan_C_Fire_Projectile::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(BP_DriveByVan_C_Fire_Projectile, CallFunc_GetWorldSubsystem_ReturnValue) == 0x0000D0, "Member 'BP_DriveByVan_C_Fire_Projectile::CallFunc_GetWorldSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DriveByVan_C_Fire_Projectile, CallFunc_GetInactiveObjectOfClass_ReturnValue) == 0x0000D8, "Member 'BP_DriveByVan_C_Fire_Projectile::CallFunc_GetInactiveObjectOfClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DriveByVan_C_Fire_Projectile, K2Node_DynamicCast_AsBP_Projectile_Base) == 0x0000E0, "Member 'BP_DriveByVan_C_Fire_Projectile::K2Node_DynamicCast_AsBP_Projectile_Base' has a wrong offset!");
static_assert(offsetof(BP_DriveByVan_C_Fire_Projectile, K2Node_DynamicCast_bSuccess) == 0x0000E8, "Member 'BP_DriveByVan_C_Fire_Projectile::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BP_DriveByVan.BP_DriveByVan_C.FireMortar
// 0x00E0 (0x00E0 - 0x0000)
struct BP_DriveByVan_C_FireMortar final
{
public:
	struct FTransform                             Spawn;                                             // 0x0000(0x0060)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Speed;                                             // 0x0060(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Gravity;                                           // 0x0068(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0070(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x0088(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x00A0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObjectPoolingSubsystem*                CallFunc_GetWorldSubsystem_ReturnValue;            // 0x00B8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APooledActor*                           CallFunc_GetInactiveObjectOfClass_ReturnValue;     // 0x00C0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_DriveByMortarShell_C*               K2Node_DynamicCast_AsBP_Drive_by_Mortar_Shell;     // 0x00C8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_DriveByVan_C_FireMortar) == 0x000010, "Wrong alignment on BP_DriveByVan_C_FireMortar");
static_assert(sizeof(BP_DriveByVan_C_FireMortar) == 0x0000E0, "Wrong size on BP_DriveByVan_C_FireMortar");
static_assert(offsetof(BP_DriveByVan_C_FireMortar, Spawn) == 0x000000, "Member 'BP_DriveByVan_C_FireMortar::Spawn' has a wrong offset!");
static_assert(offsetof(BP_DriveByVan_C_FireMortar, Speed) == 0x000060, "Member 'BP_DriveByVan_C_FireMortar::Speed' has a wrong offset!");
static_assert(offsetof(BP_DriveByVan_C_FireMortar, Gravity) == 0x000068, "Member 'BP_DriveByVan_C_FireMortar::Gravity' has a wrong offset!");
static_assert(offsetof(BP_DriveByVan_C_FireMortar, CallFunc_BreakTransform_Location) == 0x000070, "Member 'BP_DriveByVan_C_FireMortar::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(BP_DriveByVan_C_FireMortar, CallFunc_BreakTransform_Rotation) == 0x000088, "Member 'BP_DriveByVan_C_FireMortar::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(BP_DriveByVan_C_FireMortar, CallFunc_BreakTransform_Scale) == 0x0000A0, "Member 'BP_DriveByVan_C_FireMortar::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(BP_DriveByVan_C_FireMortar, CallFunc_GetWorldSubsystem_ReturnValue) == 0x0000B8, "Member 'BP_DriveByVan_C_FireMortar::CallFunc_GetWorldSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DriveByVan_C_FireMortar, CallFunc_GetInactiveObjectOfClass_ReturnValue) == 0x0000C0, "Member 'BP_DriveByVan_C_FireMortar::CallFunc_GetInactiveObjectOfClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DriveByVan_C_FireMortar, K2Node_DynamicCast_AsBP_Drive_by_Mortar_Shell) == 0x0000C8, "Member 'BP_DriveByVan_C_FireMortar::K2Node_DynamicCast_AsBP_Drive_by_Mortar_Shell' has a wrong offset!");
static_assert(offsetof(BP_DriveByVan_C_FireMortar, K2Node_DynamicCast_bSuccess) == 0x0000D0, "Member 'BP_DriveByVan_C_FireMortar::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BP_DriveByVan.BP_DriveByVan_C.Get Current World Location And Rotation On Vehicle Path Based On Timeline
// 0x00B0 (0x00B0 - 0x0000)
struct BP_DriveByVan_C_Get_Current_World_Location_And_Rotation_On_Vehicle_Path_Based_On_Timeline final
{
public:
	class UTimelineComponent*                     Timeline_0;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class ABP_Base_VehiclePathSpline_C*           VehiclePath_0;                                     // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                WorldLocation;                                     // 0x0010(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               WorldRotation;                                     // 0x0028(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_GetPlaybackPosition_ReturnValue;          // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USplineComponent*                       CallFunc_GetSplineComponent_Spline;                // 0x0048(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetTimelineLength_ReturnValue;            // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_54[0x4];                                       // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_MathExpression_ReturnValue;                 // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_A_ImplicitCast;       // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_B_ImplicitCast;       // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetWorldLocationAndRotatationAlongSpline_WorldLocation; // 0x0070(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_GetWorldLocationAndRotatationAlongSpline_WorldRotation; // 0x0088(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	double                                        K2Node_MathExpression_Current_ImplicitCast;        // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_MathExpression_Length_ImplicitCast;         // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_DriveByVan_C_Get_Current_World_Location_And_Rotation_On_Vehicle_Path_Based_On_Timeline) == 0x000008, "Wrong alignment on BP_DriveByVan_C_Get_Current_World_Location_And_Rotation_On_Vehicle_Path_Based_On_Timeline");
static_assert(sizeof(BP_DriveByVan_C_Get_Current_World_Location_And_Rotation_On_Vehicle_Path_Based_On_Timeline) == 0x0000B0, "Wrong size on BP_DriveByVan_C_Get_Current_World_Location_And_Rotation_On_Vehicle_Path_Based_On_Timeline");
static_assert(offsetof(BP_DriveByVan_C_Get_Current_World_Location_And_Rotation_On_Vehicle_Path_Based_On_Timeline, Timeline_0) == 0x000000, "Member 'BP_DriveByVan_C_Get_Current_World_Location_And_Rotation_On_Vehicle_Path_Based_On_Timeline::Timeline_0' has a wrong offset!");
static_assert(offsetof(BP_DriveByVan_C_Get_Current_World_Location_And_Rotation_On_Vehicle_Path_Based_On_Timeline, VehiclePath_0) == 0x000008, "Member 'BP_DriveByVan_C_Get_Current_World_Location_And_Rotation_On_Vehicle_Path_Based_On_Timeline::VehiclePath_0' has a wrong offset!");
static_assert(offsetof(BP_DriveByVan_C_Get_Current_World_Location_And_Rotation_On_Vehicle_Path_Based_On_Timeline, WorldLocation) == 0x000010, "Member 'BP_DriveByVan_C_Get_Current_World_Location_And_Rotation_On_Vehicle_Path_Based_On_Timeline::WorldLocation' has a wrong offset!");
static_assert(offsetof(BP_DriveByVan_C_Get_Current_World_Location_And_Rotation_On_Vehicle_Path_Based_On_Timeline, WorldRotation) == 0x000028, "Member 'BP_DriveByVan_C_Get_Current_World_Location_And_Rotation_On_Vehicle_Path_Based_On_Timeline::WorldRotation' has a wrong offset!");
static_assert(offsetof(BP_DriveByVan_C_Get_Current_World_Location_And_Rotation_On_Vehicle_Path_Based_On_Timeline, CallFunc_GetPlaybackPosition_ReturnValue) == 0x000040, "Member 'BP_DriveByVan_C_Get_Current_World_Location_And_Rotation_On_Vehicle_Path_Based_On_Timeline::CallFunc_GetPlaybackPosition_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DriveByVan_C_Get_Current_World_Location_And_Rotation_On_Vehicle_Path_Based_On_Timeline, CallFunc_GetSplineComponent_Spline) == 0x000048, "Member 'BP_DriveByVan_C_Get_Current_World_Location_And_Rotation_On_Vehicle_Path_Based_On_Timeline::CallFunc_GetSplineComponent_Spline' has a wrong offset!");
static_assert(offsetof(BP_DriveByVan_C_Get_Current_World_Location_And_Rotation_On_Vehicle_Path_Based_On_Timeline, CallFunc_GetTimelineLength_ReturnValue) == 0x000050, "Member 'BP_DriveByVan_C_Get_Current_World_Location_And_Rotation_On_Vehicle_Path_Based_On_Timeline::CallFunc_GetTimelineLength_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DriveByVan_C_Get_Current_World_Location_And_Rotation_On_Vehicle_Path_Based_On_Timeline, K2Node_MathExpression_ReturnValue) == 0x000058, "Member 'BP_DriveByVan_C_Get_Current_World_Location_And_Rotation_On_Vehicle_Path_Based_On_Timeline::K2Node_MathExpression_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DriveByVan_C_Get_Current_World_Location_And_Rotation_On_Vehicle_Path_Based_On_Timeline, CallFunc_Divide_DoubleDouble_A_ImplicitCast) == 0x000060, "Member 'BP_DriveByVan_C_Get_Current_World_Location_And_Rotation_On_Vehicle_Path_Based_On_Timeline::CallFunc_Divide_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_DriveByVan_C_Get_Current_World_Location_And_Rotation_On_Vehicle_Path_Based_On_Timeline, CallFunc_Divide_DoubleDouble_B_ImplicitCast) == 0x000068, "Member 'BP_DriveByVan_C_Get_Current_World_Location_And_Rotation_On_Vehicle_Path_Based_On_Timeline::CallFunc_Divide_DoubleDouble_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_DriveByVan_C_Get_Current_World_Location_And_Rotation_On_Vehicle_Path_Based_On_Timeline, CallFunc_GetWorldLocationAndRotatationAlongSpline_WorldLocation) == 0x000070, "Member 'BP_DriveByVan_C_Get_Current_World_Location_And_Rotation_On_Vehicle_Path_Based_On_Timeline::CallFunc_GetWorldLocationAndRotatationAlongSpline_WorldLocation' has a wrong offset!");
static_assert(offsetof(BP_DriveByVan_C_Get_Current_World_Location_And_Rotation_On_Vehicle_Path_Based_On_Timeline, CallFunc_GetWorldLocationAndRotatationAlongSpline_WorldRotation) == 0x000088, "Member 'BP_DriveByVan_C_Get_Current_World_Location_And_Rotation_On_Vehicle_Path_Based_On_Timeline::CallFunc_GetWorldLocationAndRotatationAlongSpline_WorldRotation' has a wrong offset!");
static_assert(offsetof(BP_DriveByVan_C_Get_Current_World_Location_And_Rotation_On_Vehicle_Path_Based_On_Timeline, K2Node_MathExpression_Current_ImplicitCast) == 0x0000A0, "Member 'BP_DriveByVan_C_Get_Current_World_Location_And_Rotation_On_Vehicle_Path_Based_On_Timeline::K2Node_MathExpression_Current_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_DriveByVan_C_Get_Current_World_Location_And_Rotation_On_Vehicle_Path_Based_On_Timeline, K2Node_MathExpression_Length_ImplicitCast) == 0x0000A8, "Member 'BP_DriveByVan_C_Get_Current_World_Location_And_Rotation_On_Vehicle_Path_Based_On_Timeline::K2Node_MathExpression_Length_ImplicitCast' has a wrong offset!");

// Function BP_DriveByVan.BP_DriveByVan_C.GetWorldLocationAndRotatationAlongSpline
// 0x00A8 (0x00A8 - 0x0000)
struct BP_DriveByVan_C_GetWorldLocationAndRotatationAlongSpline final
{
public:
	class USplineComponent*                       SplineComponent;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	double                                        DistanceFraction;                                  // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                WorldLocation;                                     // 0x0010(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               WorldRotation;                                     // 0x0028(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_GetSplineLength_ReturnValue;              // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetLocationAtDistanceAlongSpline_ReturnValue; // 0x0060(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_GetRotationAtDistanceAlongSpline_ReturnValue; // 0x0078(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	double                                        CallFunc_Multiply_DoubleDouble_A_ImplicitCast;     // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_A_ImplicitCast_1;   // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetLocationAtDistanceAlongSpline_Distance_ImplicitCast; // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetRotationAtDistanceAlongSpline_Distance_ImplicitCast; // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_DriveByVan_C_GetWorldLocationAndRotatationAlongSpline) == 0x000008, "Wrong alignment on BP_DriveByVan_C_GetWorldLocationAndRotatationAlongSpline");
static_assert(sizeof(BP_DriveByVan_C_GetWorldLocationAndRotatationAlongSpline) == 0x0000A8, "Wrong size on BP_DriveByVan_C_GetWorldLocationAndRotatationAlongSpline");
static_assert(offsetof(BP_DriveByVan_C_GetWorldLocationAndRotatationAlongSpline, SplineComponent) == 0x000000, "Member 'BP_DriveByVan_C_GetWorldLocationAndRotatationAlongSpline::SplineComponent' has a wrong offset!");
static_assert(offsetof(BP_DriveByVan_C_GetWorldLocationAndRotatationAlongSpline, DistanceFraction) == 0x000008, "Member 'BP_DriveByVan_C_GetWorldLocationAndRotatationAlongSpline::DistanceFraction' has a wrong offset!");
static_assert(offsetof(BP_DriveByVan_C_GetWorldLocationAndRotatationAlongSpline, WorldLocation) == 0x000010, "Member 'BP_DriveByVan_C_GetWorldLocationAndRotatationAlongSpline::WorldLocation' has a wrong offset!");
static_assert(offsetof(BP_DriveByVan_C_GetWorldLocationAndRotatationAlongSpline, WorldRotation) == 0x000028, "Member 'BP_DriveByVan_C_GetWorldLocationAndRotatationAlongSpline::WorldRotation' has a wrong offset!");
static_assert(offsetof(BP_DriveByVan_C_GetWorldLocationAndRotatationAlongSpline, CallFunc_GetSplineLength_ReturnValue) == 0x000040, "Member 'BP_DriveByVan_C_GetWorldLocationAndRotatationAlongSpline::CallFunc_GetSplineLength_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DriveByVan_C_GetWorldLocationAndRotatationAlongSpline, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000048, "Member 'BP_DriveByVan_C_GetWorldLocationAndRotatationAlongSpline::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DriveByVan_C_GetWorldLocationAndRotatationAlongSpline, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000050, "Member 'BP_DriveByVan_C_GetWorldLocationAndRotatationAlongSpline::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DriveByVan_C_GetWorldLocationAndRotatationAlongSpline, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000058, "Member 'BP_DriveByVan_C_GetWorldLocationAndRotatationAlongSpline::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_DriveByVan_C_GetWorldLocationAndRotatationAlongSpline, CallFunc_GetLocationAtDistanceAlongSpline_ReturnValue) == 0x000060, "Member 'BP_DriveByVan_C_GetWorldLocationAndRotatationAlongSpline::CallFunc_GetLocationAtDistanceAlongSpline_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DriveByVan_C_GetWorldLocationAndRotatationAlongSpline, CallFunc_GetRotationAtDistanceAlongSpline_ReturnValue) == 0x000078, "Member 'BP_DriveByVan_C_GetWorldLocationAndRotatationAlongSpline::CallFunc_GetRotationAtDistanceAlongSpline_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DriveByVan_C_GetWorldLocationAndRotatationAlongSpline, CallFunc_Multiply_DoubleDouble_A_ImplicitCast) == 0x000090, "Member 'BP_DriveByVan_C_GetWorldLocationAndRotatationAlongSpline::CallFunc_Multiply_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_DriveByVan_C_GetWorldLocationAndRotatationAlongSpline, CallFunc_Multiply_DoubleDouble_A_ImplicitCast_1) == 0x000098, "Member 'BP_DriveByVan_C_GetWorldLocationAndRotatationAlongSpline::CallFunc_Multiply_DoubleDouble_A_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(BP_DriveByVan_C_GetWorldLocationAndRotatationAlongSpline, CallFunc_GetLocationAtDistanceAlongSpline_Distance_ImplicitCast) == 0x0000A0, "Member 'BP_DriveByVan_C_GetWorldLocationAndRotatationAlongSpline::CallFunc_GetLocationAtDistanceAlongSpline_Distance_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_DriveByVan_C_GetWorldLocationAndRotatationAlongSpline, CallFunc_GetRotationAtDistanceAlongSpline_Distance_ImplicitCast) == 0x0000A4, "Member 'BP_DriveByVan_C_GetWorldLocationAndRotatationAlongSpline::CallFunc_GetRotationAtDistanceAlongSpline_Distance_ImplicitCast' has a wrong offset!");

// Function BP_DriveByVan.BP_DriveByVan_C.ImpactActor
// 0x0080 (0x0080 - 0x0000)
struct BP_DriveByVan_C_ImpactActor final
{
public:
	class AActor*                                 ImpactedActor;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class II_DeliveryTruck_C>    K2Node_DynamicCast_AsI_Delivery_Truck;             // 0x0008(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetDisplayName_ReturnValue;               // 0x0020(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0030(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Get_ClassLog_Name_name;                   // 0x0040(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetPhysicsLinearVelocity_ReturnValue;     // 0x0050(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x0068(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_DriveByVan_C_ImpactActor) == 0x000008, "Wrong alignment on BP_DriveByVan_C_ImpactActor");
static_assert(sizeof(BP_DriveByVan_C_ImpactActor) == 0x000080, "Wrong size on BP_DriveByVan_C_ImpactActor");
static_assert(offsetof(BP_DriveByVan_C_ImpactActor, ImpactedActor) == 0x000000, "Member 'BP_DriveByVan_C_ImpactActor::ImpactedActor' has a wrong offset!");
static_assert(offsetof(BP_DriveByVan_C_ImpactActor, K2Node_DynamicCast_AsI_Delivery_Truck) == 0x000008, "Member 'BP_DriveByVan_C_ImpactActor::K2Node_DynamicCast_AsI_Delivery_Truck' has a wrong offset!");
static_assert(offsetof(BP_DriveByVan_C_ImpactActor, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_DriveByVan_C_ImpactActor::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_DriveByVan_C_ImpactActor, CallFunc_GetDisplayName_ReturnValue) == 0x000020, "Member 'BP_DriveByVan_C_ImpactActor::CallFunc_GetDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DriveByVan_C_ImpactActor, CallFunc_Concat_StrStr_ReturnValue) == 0x000030, "Member 'BP_DriveByVan_C_ImpactActor::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DriveByVan_C_ImpactActor, CallFunc_Get_ClassLog_Name_name) == 0x000040, "Member 'BP_DriveByVan_C_ImpactActor::CallFunc_Get_ClassLog_Name_name' has a wrong offset!");
static_assert(offsetof(BP_DriveByVan_C_ImpactActor, CallFunc_GetPhysicsLinearVelocity_ReturnValue) == 0x000050, "Member 'BP_DriveByVan_C_ImpactActor::CallFunc_GetPhysicsLinearVelocity_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DriveByVan_C_ImpactActor, CallFunc_Normal_ReturnValue) == 0x000068, "Member 'BP_DriveByVan_C_ImpactActor::CallFunc_Normal_ReturnValue' has a wrong offset!");

// Function BP_DriveByVan.BP_DriveByVan_C.InitTimelineEvents
// 0x00C4 (0x00C4 - 0x0000)
struct BP_DriveByVan_C_InitTimelineEvents final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_3;                  // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_3;                   // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_4;                  // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_4;                 // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_4;                   // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Array_Get_Item;                           // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_45[0x3];                                       // 0x0045(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0048(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Array_Get_Item_1;                         // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_61[0x3];                                       // 0x0061(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x0064(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Array_Get_Item_2;                         // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_2;            // 0x007C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x008C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8D[0x3];                                       // 0x008D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Array_Get_Item_3;                         // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Array_Get_Item_4;                         // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_3;               // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_4;               // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_3;                // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_4;                // 0x00A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A2[0x2];                                       // 0x00A2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_3;            // 0x00A4(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_4;            // 0x00B4(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_DriveByVan_C_InitTimelineEvents) == 0x000004, "Wrong alignment on BP_DriveByVan_C_InitTimelineEvents");
static_assert(sizeof(BP_DriveByVan_C_InitTimelineEvents) == 0x0000C4, "Wrong size on BP_DriveByVan_C_InitTimelineEvents");
static_assert(offsetof(BP_DriveByVan_C_InitTimelineEvents, Temp_int_Array_Index_Variable) == 0x000000, "Member 'BP_DriveByVan_C_InitTimelineEvents::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_DriveByVan_C_InitTimelineEvents, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'BP_DriveByVan_C_InitTimelineEvents::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_DriveByVan_C_InitTimelineEvents, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'BP_DriveByVan_C_InitTimelineEvents::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DriveByVan_C_InitTimelineEvents, Temp_int_Array_Index_Variable_1) == 0x00000C, "Member 'BP_DriveByVan_C_InitTimelineEvents::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_DriveByVan_C_InitTimelineEvents, Temp_int_Loop_Counter_Variable_1) == 0x000010, "Member 'BP_DriveByVan_C_InitTimelineEvents::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_DriveByVan_C_InitTimelineEvents, CallFunc_Add_IntInt_ReturnValue_1) == 0x000014, "Member 'BP_DriveByVan_C_InitTimelineEvents::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_DriveByVan_C_InitTimelineEvents, Temp_int_Loop_Counter_Variable_2) == 0x000018, "Member 'BP_DriveByVan_C_InitTimelineEvents::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_DriveByVan_C_InitTimelineEvents, CallFunc_Add_IntInt_ReturnValue_2) == 0x00001C, "Member 'BP_DriveByVan_C_InitTimelineEvents::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_DriveByVan_C_InitTimelineEvents, Temp_int_Array_Index_Variable_2) == 0x000020, "Member 'BP_DriveByVan_C_InitTimelineEvents::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_DriveByVan_C_InitTimelineEvents, Temp_int_Loop_Counter_Variable_3) == 0x000024, "Member 'BP_DriveByVan_C_InitTimelineEvents::Temp_int_Loop_Counter_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_DriveByVan_C_InitTimelineEvents, CallFunc_Add_IntInt_ReturnValue_3) == 0x000028, "Member 'BP_DriveByVan_C_InitTimelineEvents::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_DriveByVan_C_InitTimelineEvents, Temp_int_Array_Index_Variable_3) == 0x00002C, "Member 'BP_DriveByVan_C_InitTimelineEvents::Temp_int_Array_Index_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_DriveByVan_C_InitTimelineEvents, Temp_int_Loop_Counter_Variable_4) == 0x000030, "Member 'BP_DriveByVan_C_InitTimelineEvents::Temp_int_Loop_Counter_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_DriveByVan_C_InitTimelineEvents, CallFunc_Add_IntInt_ReturnValue_4) == 0x000034, "Member 'BP_DriveByVan_C_InitTimelineEvents::CallFunc_Add_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_DriveByVan_C_InitTimelineEvents, Temp_int_Array_Index_Variable_4) == 0x000038, "Member 'BP_DriveByVan_C_InitTimelineEvents::Temp_int_Array_Index_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_DriveByVan_C_InitTimelineEvents, CallFunc_Array_Get_Item) == 0x00003C, "Member 'BP_DriveByVan_C_InitTimelineEvents::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_DriveByVan_C_InitTimelineEvents, CallFunc_Array_Length_ReturnValue) == 0x000040, "Member 'BP_DriveByVan_C_InitTimelineEvents::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DriveByVan_C_InitTimelineEvents, CallFunc_Less_IntInt_ReturnValue) == 0x000044, "Member 'BP_DriveByVan_C_InitTimelineEvents::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DriveByVan_C_InitTimelineEvents, K2Node_CreateDelegate_OutputDelegate) == 0x000048, "Member 'BP_DriveByVan_C_InitTimelineEvents::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_DriveByVan_C_InitTimelineEvents, CallFunc_Array_Get_Item_1) == 0x000058, "Member 'BP_DriveByVan_C_InitTimelineEvents::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_DriveByVan_C_InitTimelineEvents, CallFunc_Array_Length_ReturnValue_1) == 0x00005C, "Member 'BP_DriveByVan_C_InitTimelineEvents::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_DriveByVan_C_InitTimelineEvents, CallFunc_Less_IntInt_ReturnValue_1) == 0x000060, "Member 'BP_DriveByVan_C_InitTimelineEvents::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_DriveByVan_C_InitTimelineEvents, K2Node_CreateDelegate_OutputDelegate_1) == 0x000064, "Member 'BP_DriveByVan_C_InitTimelineEvents::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(BP_DriveByVan_C_InitTimelineEvents, CallFunc_Array_Get_Item_2) == 0x000074, "Member 'BP_DriveByVan_C_InitTimelineEvents::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(BP_DriveByVan_C_InitTimelineEvents, CallFunc_Array_Length_ReturnValue_2) == 0x000078, "Member 'BP_DriveByVan_C_InitTimelineEvents::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_DriveByVan_C_InitTimelineEvents, K2Node_CreateDelegate_OutputDelegate_2) == 0x00007C, "Member 'BP_DriveByVan_C_InitTimelineEvents::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(BP_DriveByVan_C_InitTimelineEvents, CallFunc_Less_IntInt_ReturnValue_2) == 0x00008C, "Member 'BP_DriveByVan_C_InitTimelineEvents::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_DriveByVan_C_InitTimelineEvents, CallFunc_Array_Get_Item_3) == 0x000090, "Member 'BP_DriveByVan_C_InitTimelineEvents::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(BP_DriveByVan_C_InitTimelineEvents, CallFunc_Array_Get_Item_4) == 0x000094, "Member 'BP_DriveByVan_C_InitTimelineEvents::CallFunc_Array_Get_Item_4' has a wrong offset!");
static_assert(offsetof(BP_DriveByVan_C_InitTimelineEvents, CallFunc_Array_Length_ReturnValue_3) == 0x000098, "Member 'BP_DriveByVan_C_InitTimelineEvents::CallFunc_Array_Length_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_DriveByVan_C_InitTimelineEvents, CallFunc_Array_Length_ReturnValue_4) == 0x00009C, "Member 'BP_DriveByVan_C_InitTimelineEvents::CallFunc_Array_Length_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_DriveByVan_C_InitTimelineEvents, CallFunc_Less_IntInt_ReturnValue_3) == 0x0000A0, "Member 'BP_DriveByVan_C_InitTimelineEvents::CallFunc_Less_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_DriveByVan_C_InitTimelineEvents, CallFunc_Less_IntInt_ReturnValue_4) == 0x0000A1, "Member 'BP_DriveByVan_C_InitTimelineEvents::CallFunc_Less_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_DriveByVan_C_InitTimelineEvents, K2Node_CreateDelegate_OutputDelegate_3) == 0x0000A4, "Member 'BP_DriveByVan_C_InitTimelineEvents::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(BP_DriveByVan_C_InitTimelineEvents, K2Node_CreateDelegate_OutputDelegate_4) == 0x0000B4, "Member 'BP_DriveByVan_C_InitTimelineEvents::K2Node_CreateDelegate_OutputDelegate_4' has a wrong offset!");

// Function BP_DriveByVan.BP_DriveByVan_C.OnDrivingCompleted__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct BP_DriveByVan_C_OnDrivingCompleted__DelegateSignature final
{
public:
	class ABP_DriveByVan_C*                       DriveByVan;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_DriveByVan_C_OnDrivingCompleted__DelegateSignature) == 0x000008, "Wrong alignment on BP_DriveByVan_C_OnDrivingCompleted__DelegateSignature");
static_assert(sizeof(BP_DriveByVan_C_OnDrivingCompleted__DelegateSignature) == 0x000008, "Wrong size on BP_DriveByVan_C_OnDrivingCompleted__DelegateSignature");
static_assert(offsetof(BP_DriveByVan_C_OnDrivingCompleted__DelegateSignature, DriveByVan) == 0x000000, "Member 'BP_DriveByVan_C_OnDrivingCompleted__DelegateSignature::DriveByVan' has a wrong offset!");

// Function BP_DriveByVan.BP_DriveByVan_C.SetVanDoorsOpenState
// 0x0001 (0x0001 - 0x0000)
struct BP_DriveByVan_C_SetVanDoorsOpenState final
{
public:
	bool                                          Open;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_DriveByVan_C_SetVanDoorsOpenState) == 0x000001, "Wrong alignment on BP_DriveByVan_C_SetVanDoorsOpenState");
static_assert(sizeof(BP_DriveByVan_C_SetVanDoorsOpenState) == 0x000001, "Wrong size on BP_DriveByVan_C_SetVanDoorsOpenState");
static_assert(offsetof(BP_DriveByVan_C_SetVanDoorsOpenState, Open) == 0x000000, "Member 'BP_DriveByVan_C_SetVanDoorsOpenState::Open' has a wrong offset!");

// Function BP_DriveByVan.BP_DriveByVan_C.ShootFromDriveByVechicle
// 0x0210 (0x0210 - 0x0000)
struct BP_DriveByVan_C_ShootFromDriveByVechicle final
{
public:
	struct FVector                                AttackTargetWorldPosition;                         // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRandomStream                          RandomStream;                                      // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Percent_IntInt_ReturnValue;               // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchInteger_CmpSuccess;                   // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x002D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2E[0x2];                                       // 0x002E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloatInRangeFromStream_ReturnValue; // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable;                              // 0x0038(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRandomStream                          CallFunc_MakeRandomStream_ReturnValue;             // 0x0048(0x0008)(ZeroConstructor, NoDestructor)
	struct FLinearColor                           Temp_struct_Variable_1;                            // 0x0050(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_61[0x3];                                       // 0x0061(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           K2Node_Select_Default;                             // 0x0064(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_74[0xC];                                       // 0x0074(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_K2_GetComponentToWorld_ReturnValue;       // 0x0080(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x00E0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x00F8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x0110(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_FindLookAtRotation_ReturnValue;           // 0x0128(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue;             // 0x0140(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_RandomUnitVectorInEllipticalConeInDegreesFromStream_ReturnValue; // 0x0158(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_Conv_VectorToRotator_ReturnValue;         // 0x0170(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_188[0x8];                                      // 0x0188(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0190(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Fire_Projectile_Speed_ImplicitCast;       // 0x01F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Fire_Projectile_Speed_ImplicitCast_1;     // 0x01F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Fire_Projectile_Speed_ImplicitCast_2;     // 0x0200(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_DriveByVan_C_ShootFromDriveByVechicle) == 0x000010, "Wrong alignment on BP_DriveByVan_C_ShootFromDriveByVechicle");
static_assert(sizeof(BP_DriveByVan_C_ShootFromDriveByVechicle) == 0x000210, "Wrong size on BP_DriveByVan_C_ShootFromDriveByVechicle");
static_assert(offsetof(BP_DriveByVan_C_ShootFromDriveByVechicle, AttackTargetWorldPosition) == 0x000000, "Member 'BP_DriveByVan_C_ShootFromDriveByVechicle::AttackTargetWorldPosition' has a wrong offset!");
static_assert(offsetof(BP_DriveByVan_C_ShootFromDriveByVechicle, RandomStream) == 0x000018, "Member 'BP_DriveByVan_C_ShootFromDriveByVechicle::RandomStream' has a wrong offset!");
static_assert(offsetof(BP_DriveByVan_C_ShootFromDriveByVechicle, Temp_bool_Variable) == 0x000020, "Member 'BP_DriveByVan_C_ShootFromDriveByVechicle::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_DriveByVan_C_ShootFromDriveByVechicle, Temp_int_Variable) == 0x000024, "Member 'BP_DriveByVan_C_ShootFromDriveByVechicle::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_DriveByVan_C_ShootFromDriveByVechicle, CallFunc_Percent_IntInt_ReturnValue) == 0x000028, "Member 'BP_DriveByVan_C_ShootFromDriveByVechicle::CallFunc_Percent_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DriveByVan_C_ShootFromDriveByVechicle, K2Node_SwitchInteger_CmpSuccess) == 0x00002C, "Member 'BP_DriveByVan_C_ShootFromDriveByVechicle::K2Node_SwitchInteger_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_DriveByVan_C_ShootFromDriveByVechicle, CallFunc_LessEqual_IntInt_ReturnValue) == 0x00002D, "Member 'BP_DriveByVan_C_ShootFromDriveByVechicle::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DriveByVan_C_ShootFromDriveByVechicle, CallFunc_Add_IntInt_ReturnValue) == 0x000030, "Member 'BP_DriveByVan_C_ShootFromDriveByVechicle::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DriveByVan_C_ShootFromDriveByVechicle, CallFunc_RandomFloatInRangeFromStream_ReturnValue) == 0x000034, "Member 'BP_DriveByVan_C_ShootFromDriveByVechicle::CallFunc_RandomFloatInRangeFromStream_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DriveByVan_C_ShootFromDriveByVechicle, Temp_struct_Variable) == 0x000038, "Member 'BP_DriveByVan_C_ShootFromDriveByVechicle::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(BP_DriveByVan_C_ShootFromDriveByVechicle, CallFunc_MakeRandomStream_ReturnValue) == 0x000048, "Member 'BP_DriveByVan_C_ShootFromDriveByVechicle::CallFunc_MakeRandomStream_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DriveByVan_C_ShootFromDriveByVechicle, Temp_struct_Variable_1) == 0x000050, "Member 'BP_DriveByVan_C_ShootFromDriveByVechicle::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_DriveByVan_C_ShootFromDriveByVechicle, CallFunc_HasAuthority_ReturnValue) == 0x000060, "Member 'BP_DriveByVan_C_ShootFromDriveByVechicle::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DriveByVan_C_ShootFromDriveByVechicle, K2Node_Select_Default) == 0x000064, "Member 'BP_DriveByVan_C_ShootFromDriveByVechicle::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_DriveByVan_C_ShootFromDriveByVechicle, CallFunc_K2_GetComponentToWorld_ReturnValue) == 0x000080, "Member 'BP_DriveByVan_C_ShootFromDriveByVechicle::CallFunc_K2_GetComponentToWorld_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DriveByVan_C_ShootFromDriveByVechicle, CallFunc_BreakTransform_Location) == 0x0000E0, "Member 'BP_DriveByVan_C_ShootFromDriveByVechicle::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(BP_DriveByVan_C_ShootFromDriveByVechicle, CallFunc_BreakTransform_Rotation) == 0x0000F8, "Member 'BP_DriveByVan_C_ShootFromDriveByVechicle::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(BP_DriveByVan_C_ShootFromDriveByVechicle, CallFunc_BreakTransform_Scale) == 0x000110, "Member 'BP_DriveByVan_C_ShootFromDriveByVechicle::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(BP_DriveByVan_C_ShootFromDriveByVechicle, CallFunc_FindLookAtRotation_ReturnValue) == 0x000128, "Member 'BP_DriveByVan_C_ShootFromDriveByVechicle::CallFunc_FindLookAtRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DriveByVan_C_ShootFromDriveByVechicle, CallFunc_GetForwardVector_ReturnValue) == 0x000140, "Member 'BP_DriveByVan_C_ShootFromDriveByVechicle::CallFunc_GetForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DriveByVan_C_ShootFromDriveByVechicle, CallFunc_RandomUnitVectorInEllipticalConeInDegreesFromStream_ReturnValue) == 0x000158, "Member 'BP_DriveByVan_C_ShootFromDriveByVechicle::CallFunc_RandomUnitVectorInEllipticalConeInDegreesFromStream_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DriveByVan_C_ShootFromDriveByVechicle, CallFunc_Conv_VectorToRotator_ReturnValue) == 0x000170, "Member 'BP_DriveByVan_C_ShootFromDriveByVechicle::CallFunc_Conv_VectorToRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DriveByVan_C_ShootFromDriveByVechicle, CallFunc_MakeTransform_ReturnValue) == 0x000190, "Member 'BP_DriveByVan_C_ShootFromDriveByVechicle::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DriveByVan_C_ShootFromDriveByVechicle, CallFunc_Fire_Projectile_Speed_ImplicitCast) == 0x0001F0, "Member 'BP_DriveByVan_C_ShootFromDriveByVechicle::CallFunc_Fire_Projectile_Speed_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_DriveByVan_C_ShootFromDriveByVechicle, CallFunc_Fire_Projectile_Speed_ImplicitCast_1) == 0x0001F8, "Member 'BP_DriveByVan_C_ShootFromDriveByVechicle::CallFunc_Fire_Projectile_Speed_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(BP_DriveByVan_C_ShootFromDriveByVechicle, CallFunc_Fire_Projectile_Speed_ImplicitCast_2) == 0x000200, "Member 'BP_DriveByVan_C_ShootFromDriveByVechicle::CallFunc_Fire_Projectile_Speed_ImplicitCast_2' has a wrong offset!");

// Function BP_DriveByVan.BP_DriveByVan_C.TryLaunchMortar
// 0x0020 (0x0020 - 0x0000)
struct BP_DriveByVan_C_TryLaunchMortar final
{
public:
	uint8                                         Team;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                LocationInYard;                                    // 0x0008(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_DriveByVan_C_TryLaunchMortar) == 0x000008, "Wrong alignment on BP_DriveByVan_C_TryLaunchMortar");
static_assert(sizeof(BP_DriveByVan_C_TryLaunchMortar) == 0x000020, "Wrong size on BP_DriveByVan_C_TryLaunchMortar");
static_assert(offsetof(BP_DriveByVan_C_TryLaunchMortar, Team) == 0x000000, "Member 'BP_DriveByVan_C_TryLaunchMortar::Team' has a wrong offset!");
static_assert(offsetof(BP_DriveByVan_C_TryLaunchMortar, LocationInYard) == 0x000008, "Member 'BP_DriveByVan_C_TryLaunchMortar::LocationInYard' has a wrong offset!");

}

