#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WI_NeighborDetailsPerkSelectElement

#include "Basic.hpp"

#include "WI_NeighborDetailsPerkSelectElement_classes.hpp"
#include "WI_NeighborDetailsPerkSelectElement_parameters.hpp"


namespace SDK
{

// Function WI_NeighborDetailsPerkSelectElement.WI_NeighborDetailsPerkSelectElement_C.BndEvt__WI_NeighborDetailsPerkSelectElement_WI_PerkButton_K2Node_ComponentBoundEvent_0_CommonButtonBaseClicked__DelegateSignature
// (BlueprintEvent)
// Parameters:
// class UCommonButtonBase*                Button                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UWI_NeighborDetailsPerkSelectElement_C::BndEvt__WI_NeighborDetailsPerkSelectElement_WI_PerkButton_K2Node_ComponentBoundEvent_0_CommonButtonBaseClicked__DelegateSignature(class UCommonButtonBase* Button)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WI_NeighborDetailsPerkSelectElement_C", "BndEvt__WI_NeighborDetailsPerkSelectElement_WI_PerkButton_K2Node_ComponentBoundEvent_0_CommonButtonBaseClicked__DelegateSignature");

	Params::WI_NeighborDetailsPerkSelectElement_C_BndEvt__WI_NeighborDetailsPerkSelectElement_WI_PerkButton_K2Node_ComponentBoundEvent_0_CommonButtonBaseClicked__DelegateSignature Parms{};

	Parms.Button = Button;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WI_NeighborDetailsPerkSelectElement.WI_NeighborDetailsPerkSelectElement_C.ExecuteUbergraph_WI_NeighborDetailsPerkSelectElement
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWI_NeighborDetailsPerkSelectElement_C::ExecuteUbergraph_WI_NeighborDetailsPerkSelectElement(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WI_NeighborDetailsPerkSelectElement_C", "ExecuteUbergraph_WI_NeighborDetailsPerkSelectElement");

	Params::WI_NeighborDetailsPerkSelectElement_C_ExecuteUbergraph_WI_NeighborDetailsPerkSelectElement Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WI_NeighborDetailsPerkSelectElement.WI_NeighborDetailsPerkSelectElement_C.GetIsEquipped
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    IsEquipped_0                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWI_NeighborDetailsPerkSelectElement_C::GetIsEquipped(bool* IsEquipped_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WI_NeighborDetailsPerkSelectElement_C", "GetIsEquipped");

	Params::WI_NeighborDetailsPerkSelectElement_C_GetIsEquipped Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (IsEquipped_0 != nullptr)
		*IsEquipped_0 = Parms.IsEquipped_0;
}


// Function WI_NeighborDetailsPerkSelectElement.WI_NeighborDetailsPerkSelectElement_C.GetNeighborLevel
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// int32                                   NeighborLevel_0                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWI_NeighborDetailsPerkSelectElement_C::GetNeighborLevel(int32* NeighborLevel_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WI_NeighborDetailsPerkSelectElement_C", "GetNeighborLevel");

	Params::WI_NeighborDetailsPerkSelectElement_C_GetNeighborLevel Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (NeighborLevel_0 != nullptr)
		*NeighborLevel_0 = Parms.NeighborLevel_0;
}


// Function WI_NeighborDetailsPerkSelectElement.WI_NeighborDetailsPerkSelectElement_C.GetPerkID
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FGameplayTag                     PerkID_0                                               (Parm, OutParm, NoDestructor, HasGetValueTypeHash)

void UWI_NeighborDetailsPerkSelectElement_C::GetPerkID(struct FGameplayTag* PerkID_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WI_NeighborDetailsPerkSelectElement_C", "GetPerkID");

	Params::WI_NeighborDetailsPerkSelectElement_C_GetPerkID Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (PerkID_0 != nullptr)
		*PerkID_0 = std::move(Parms.PerkID_0);
}


// Function WI_NeighborDetailsPerkSelectElement.WI_NeighborDetailsPerkSelectElement_C.GetRequiredLevel
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// int32                                   RequiredLevel_0                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWI_NeighborDetailsPerkSelectElement_C::GetRequiredLevel(int32* RequiredLevel_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WI_NeighborDetailsPerkSelectElement_C", "GetRequiredLevel");

	Params::WI_NeighborDetailsPerkSelectElement_C_GetRequiredLevel Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (RequiredLevel_0 != nullptr)
		*RequiredLevel_0 = Parms.RequiredLevel_0;
}


// Function WI_NeighborDetailsPerkSelectElement.WI_NeighborDetailsPerkSelectElement_C.OnActivated
// (BlueprintCallable, BlueprintEvent)

void UWI_NeighborDetailsPerkSelectElement_C::OnActivated()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WI_NeighborDetailsPerkSelectElement_C", "OnActivated");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WI_NeighborDetailsPerkSelectElement.WI_NeighborDetailsPerkSelectElement_C.OnClicked__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UWI_NeighborDetailsPerkSelectElement_C*PerkSelectElement                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UWI_NeighborDetailsPerkSelectElement_C::OnClicked__DelegateSignature(class UWI_NeighborDetailsPerkSelectElement_C* PerkSelectElement)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WI_NeighborDetailsPerkSelectElement_C", "OnClicked__DelegateSignature");

	Params::WI_NeighborDetailsPerkSelectElement_C_OnClicked__DelegateSignature Parms{};

	Parms.PerkSelectElement = PerkSelectElement;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WI_NeighborDetailsPerkSelectElement.WI_NeighborDetailsPerkSelectElement_C.OnDeactivated
// (BlueprintCallable, BlueprintEvent)

void UWI_NeighborDetailsPerkSelectElement_C::OnDeactivated()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WI_NeighborDetailsPerkSelectElement_C", "OnDeactivated");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WI_NeighborDetailsPerkSelectElement.WI_NeighborDetailsPerkSelectElement_C.OnEquippedToggled
// (BlueprintCallable, BlueprintEvent)

void UWI_NeighborDetailsPerkSelectElement_C::OnEquippedToggled()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WI_NeighborDetailsPerkSelectElement_C", "OnEquippedToggled");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WI_NeighborDetailsPerkSelectElement.WI_NeighborDetailsPerkSelectElement_C.OnNewPerkActivated__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UWI_NeighborDetailsPerkSelectElement_C*PerkSelectElement                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UWI_NeighborDetailsPerkSelectElement_C::OnNewPerkActivated__DelegateSignature(class UWI_NeighborDetailsPerkSelectElement_C* PerkSelectElement)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WI_NeighborDetailsPerkSelectElement_C", "OnNewPerkActivated__DelegateSignature");

	Params::WI_NeighborDetailsPerkSelectElement_C_OnNewPerkActivated__DelegateSignature Parms{};

	Parms.PerkSelectElement = PerkSelectElement;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WI_NeighborDetailsPerkSelectElement.WI_NeighborDetailsPerkSelectElement_C.OnNewPerkEquipped__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UWI_NeighborDetailsPerkSelectElement_C*PerkSelectElement                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UWI_NeighborDetailsPerkSelectElement_C::OnNewPerkEquipped__DelegateSignature(class UWI_NeighborDetailsPerkSelectElement_C* PerkSelectElement)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WI_NeighborDetailsPerkSelectElement_C", "OnNewPerkEquipped__DelegateSignature");

	Params::WI_NeighborDetailsPerkSelectElement_C_OnNewPerkEquipped__DelegateSignature Parms{};

	Parms.PerkSelectElement = PerkSelectElement;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WI_NeighborDetailsPerkSelectElement.WI_NeighborDetailsPerkSelectElement_C.PreConstruct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// bool                                    IsDesignTime                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWI_NeighborDetailsPerkSelectElement_C::PreConstruct(bool IsDesignTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WI_NeighborDetailsPerkSelectElement_C", "PreConstruct");

	Params::WI_NeighborDetailsPerkSelectElement_C_PreConstruct Parms{};

	Parms.IsDesignTime = IsDesignTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WI_NeighborDetailsPerkSelectElement.WI_NeighborDetailsPerkSelectElement_C.SetButtonAndIconDiameter
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  ButtonDiameter_0                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  IconDiameter_0                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWI_NeighborDetailsPerkSelectElement_C::SetButtonAndIconDiameter(double ButtonDiameter_0, double IconDiameter_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WI_NeighborDetailsPerkSelectElement_C", "SetButtonAndIconDiameter");

	Params::WI_NeighborDetailsPerkSelectElement_C_SetButtonAndIconDiameter Parms{};

	Parms.ButtonDiameter_0 = ButtonDiameter_0;
	Parms.IconDiameter_0 = IconDiameter_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WI_NeighborDetailsPerkSelectElement.WI_NeighborDetailsPerkSelectElement_C.SetIsActive
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsActive_0                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWI_NeighborDetailsPerkSelectElement_C::SetIsActive(bool IsActive_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WI_NeighborDetailsPerkSelectElement_C", "SetIsActive");

	Params::WI_NeighborDetailsPerkSelectElement_C_SetIsActive Parms{};

	Parms.IsActive_0 = IsActive_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WI_NeighborDetailsPerkSelectElement.WI_NeighborDetailsPerkSelectElement_C.SetIsEquipped
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsEquipped_0                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWI_NeighborDetailsPerkSelectElement_C::SetIsEquipped(bool IsEquipped_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WI_NeighborDetailsPerkSelectElement_C", "SetIsEquipped");

	Params::WI_NeighborDetailsPerkSelectElement_C_SetIsEquipped Parms{};

	Parms.IsEquipped_0 = IsEquipped_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WI_NeighborDetailsPerkSelectElement.WI_NeighborDetailsPerkSelectElement_C.SetLevelRequirement
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   LevelRequirement                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   NeighborLevel_0                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWI_NeighborDetailsPerkSelectElement_C::SetLevelRequirement(int32 LevelRequirement, int32 NeighborLevel_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WI_NeighborDetailsPerkSelectElement_C", "SetLevelRequirement");

	Params::WI_NeighborDetailsPerkSelectElement_C_SetLevelRequirement Parms{};

	Parms.LevelRequirement = LevelRequirement;
	Parms.NeighborLevel_0 = NeighborLevel_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WI_NeighborDetailsPerkSelectElement.WI_NeighborDetailsPerkSelectElement_C.SetPerkID
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGameplayTag                     PerkID_0                                               (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)

void UWI_NeighborDetailsPerkSelectElement_C::SetPerkID(const struct FGameplayTag& PerkID_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WI_NeighborDetailsPerkSelectElement_C", "SetPerkID");

	Params::WI_NeighborDetailsPerkSelectElement_C_SetPerkID Parms{};

	Parms.PerkID_0 = std::move(PerkID_0);

	UObject::ProcessEvent(Func, &Parms);
}

}

