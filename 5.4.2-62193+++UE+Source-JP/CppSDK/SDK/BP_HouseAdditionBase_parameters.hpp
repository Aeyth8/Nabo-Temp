#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_HouseAdditionBase

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function BP_HouseAdditionBase.BP_HouseAdditionBase_C.ExecuteUbergraph_BP_HouseAdditionBase
// 0x0050 (0x0050 - 0x0000)
struct BP_HouseAdditionBase_C_ExecuteUbergraph_BP_HouseAdditionBase final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0008(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Temp_byte_Variable;                                // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable;                 // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_23[0x5];                                       // 0x0023(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_Event_SabotagingActor;                      // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class ITeamableInterface>    K2Node_DynamicCast_AsTeamable_Interface;           // 0x0038(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetTeamID_ReturnValue;                    // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_HouseAdditionBase_C_ExecuteUbergraph_BP_HouseAdditionBase) == 0x000008, "Wrong alignment on BP_HouseAdditionBase_C_ExecuteUbergraph_BP_HouseAdditionBase");
static_assert(sizeof(BP_HouseAdditionBase_C_ExecuteUbergraph_BP_HouseAdditionBase) == 0x000050, "Wrong size on BP_HouseAdditionBase_C_ExecuteUbergraph_BP_HouseAdditionBase");
static_assert(offsetof(BP_HouseAdditionBase_C_ExecuteUbergraph_BP_HouseAdditionBase, EntryPoint) == 0x000000, "Member 'BP_HouseAdditionBase_C_ExecuteUbergraph_BP_HouseAdditionBase::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_HouseAdditionBase_C_ExecuteUbergraph_BP_HouseAdditionBase, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000008, "Member 'BP_HouseAdditionBase_C_ExecuteUbergraph_BP_HouseAdditionBase::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HouseAdditionBase_C_ExecuteUbergraph_BP_HouseAdditionBase, Temp_byte_Variable) == 0x000020, "Member 'BP_HouseAdditionBase_C_ExecuteUbergraph_BP_HouseAdditionBase::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_HouseAdditionBase_C_ExecuteUbergraph_BP_HouseAdditionBase, Temp_bool_Has_Been_Initd_Variable) == 0x000021, "Member 'BP_HouseAdditionBase_C_ExecuteUbergraph_BP_HouseAdditionBase::Temp_bool_Has_Been_Initd_Variable' has a wrong offset!");
static_assert(offsetof(BP_HouseAdditionBase_C_ExecuteUbergraph_BP_HouseAdditionBase, CallFunc_HasAuthority_ReturnValue) == 0x000022, "Member 'BP_HouseAdditionBase_C_ExecuteUbergraph_BP_HouseAdditionBase::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HouseAdditionBase_C_ExecuteUbergraph_BP_HouseAdditionBase, K2Node_Event_SabotagingActor) == 0x000028, "Member 'BP_HouseAdditionBase_C_ExecuteUbergraph_BP_HouseAdditionBase::K2Node_Event_SabotagingActor' has a wrong offset!");
static_assert(offsetof(BP_HouseAdditionBase_C_ExecuteUbergraph_BP_HouseAdditionBase, Temp_bool_IsClosed_Variable) == 0x000030, "Member 'BP_HouseAdditionBase_C_ExecuteUbergraph_BP_HouseAdditionBase::Temp_bool_IsClosed_Variable' has a wrong offset!");
static_assert(offsetof(BP_HouseAdditionBase_C_ExecuteUbergraph_BP_HouseAdditionBase, K2Node_DynamicCast_AsTeamable_Interface) == 0x000038, "Member 'BP_HouseAdditionBase_C_ExecuteUbergraph_BP_HouseAdditionBase::K2Node_DynamicCast_AsTeamable_Interface' has a wrong offset!");
static_assert(offsetof(BP_HouseAdditionBase_C_ExecuteUbergraph_BP_HouseAdditionBase, K2Node_DynamicCast_bSuccess) == 0x000048, "Member 'BP_HouseAdditionBase_C_ExecuteUbergraph_BP_HouseAdditionBase::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_HouseAdditionBase_C_ExecuteUbergraph_BP_HouseAdditionBase, CallFunc_GetTeamID_ReturnValue) == 0x000049, "Member 'BP_HouseAdditionBase_C_ExecuteUbergraph_BP_HouseAdditionBase::CallFunc_GetTeamID_ReturnValue' has a wrong offset!");

// Function BP_HouseAdditionBase.BP_HouseAdditionBase_C.Sabotage
// 0x0008 (0x0008 - 0x0000)
struct BP_HouseAdditionBase_C_Sabotage final
{
public:
	class AActor*                                 SabotagingActor;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_HouseAdditionBase_C_Sabotage) == 0x000008, "Wrong alignment on BP_HouseAdditionBase_C_Sabotage");
static_assert(sizeof(BP_HouseAdditionBase_C_Sabotage) == 0x000008, "Wrong size on BP_HouseAdditionBase_C_Sabotage");
static_assert(offsetof(BP_HouseAdditionBase_C_Sabotage, SabotagingActor) == 0x000000, "Member 'BP_HouseAdditionBase_C_Sabotage::SabotagingActor' has a wrong offset!");

// Function BP_HouseAdditionBase.BP_HouseAdditionBase_C.SetHoveredComponent
// 0x0010 (0x0010 - 0x0000)
struct BP_HouseAdditionBase_C_SetHoveredComponent final
{
public:
	class UInteractionComponent_C*                HoveredComponent;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          Void;                                              // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_HouseAdditionBase_C_SetHoveredComponent) == 0x000008, "Wrong alignment on BP_HouseAdditionBase_C_SetHoveredComponent");
static_assert(sizeof(BP_HouseAdditionBase_C_SetHoveredComponent) == 0x000010, "Wrong size on BP_HouseAdditionBase_C_SetHoveredComponent");
static_assert(offsetof(BP_HouseAdditionBase_C_SetHoveredComponent, HoveredComponent) == 0x000000, "Member 'BP_HouseAdditionBase_C_SetHoveredComponent::HoveredComponent' has a wrong offset!");
static_assert(offsetof(BP_HouseAdditionBase_C_SetHoveredComponent, Void) == 0x000008, "Member 'BP_HouseAdditionBase_C_SetHoveredComponent::Void' has a wrong offset!");

// Function BP_HouseAdditionBase.BP_HouseAdditionBase_C.GetTeamID
// 0x0001 (0x0001 - 0x0000)
struct BP_HouseAdditionBase_C_GetTeamID final
{
public:
	uint8                                         ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_HouseAdditionBase_C_GetTeamID) == 0x000001, "Wrong alignment on BP_HouseAdditionBase_C_GetTeamID");
static_assert(sizeof(BP_HouseAdditionBase_C_GetTeamID) == 0x000001, "Wrong size on BP_HouseAdditionBase_C_GetTeamID");
static_assert(offsetof(BP_HouseAdditionBase_C_GetTeamID, ReturnValue) == 0x000000, "Member 'BP_HouseAdditionBase_C_GetTeamID::ReturnValue' has a wrong offset!");

}

