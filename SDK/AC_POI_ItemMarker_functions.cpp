#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: AC_POI_ItemMarker

#include "Basic.hpp"

#include "AC_POI_ItemMarker_classes.hpp"
#include "AC_POI_ItemMarker_parameters.hpp"


namespace SDK
{

// Function AC_POI_ItemMarker.AC_POI_ItemMarker_C.ExecuteUbergraph_AC_POI_ItemMarker
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UAC_POI_ItemMarker_C::ExecuteUbergraph_AC_POI_ItemMarker(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AC_POI_ItemMarker_C", "ExecuteUbergraph_AC_POI_ItemMarker");

	Params::AC_POI_ItemMarker_C_ExecuteUbergraph_AC_POI_ItemMarker Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function AC_POI_ItemMarker.AC_POI_ItemMarker_C.ObjectiveTrackingChanged
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<struct FObjectiveTracker>        ObjectiveTrackers                                      (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)

void UAC_POI_ItemMarker_C::ObjectiveTrackingChanged(const TArray<struct FObjectiveTracker>& ObjectiveTrackers)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AC_POI_ItemMarker_C", "ObjectiveTrackingChanged");

	Params::AC_POI_ItemMarker_C_ObjectiveTrackingChanged Parms{};

	Parms.ObjectiveTrackers = std::move(ObjectiveTrackers);

	UObject::ProcessEvent(Func, &Parms);
}


// Function AC_POI_ItemMarker.AC_POI_ItemMarker_C.ReceiveBeginPlay
// (Event, Public, BlueprintEvent)

void UAC_POI_ItemMarker_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AC_POI_ItemMarker_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}

}

