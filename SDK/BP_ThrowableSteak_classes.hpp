#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_ThrowableSteak

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Bp_ThrowableProp_Small_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_ThrowableSteak.BP_ThrowableSteak_C
// 0x0020 (0x0560 - 0x0540)
class ABP_ThrowableSteak_C final : public ABp_ThrowableProp_Small_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_BP_ThrowableSteak_C;                // 0x0540(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class USkeletalMeshComponent*                 SkeletalMesh;                                      // 0x0548(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UAIPerceptionStimuliSourceComponent*    AIPerceptionStimuliSource;                         // 0x0550(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	int32                                         NoiseEmissionCount;                                // 0x0558(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_ThrowableSteak(int32 EntryPoint);
	void ReceiveDestroyed();
	void Report_Noise_Smell();
	void GrippedServer(class ACharacter* GrippingCharacter);
	void ReceiveHit(class UPrimitiveComponent* MyComp, class AActor* Other, class UPrimitiveComponent* OtherComp, bool bSelfMoved, const struct FVector& HitLocation, const struct FVector& HitNormal, const struct FVector& NormalImpulse, const struct FHitResult& Hit);
	void ReleasedServer(class ACharacter* ReleasingCharacter);
	void ReceiveBeginPlay();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_ThrowableSteak_C">();
	}
	static class ABP_ThrowableSteak_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_ThrowableSteak_C>();
	}
};
static_assert(alignof(ABP_ThrowableSteak_C) == 0x000010, "Wrong alignment on ABP_ThrowableSteak_C");
static_assert(sizeof(ABP_ThrowableSteak_C) == 0x000560, "Wrong size on ABP_ThrowableSteak_C");
static_assert(offsetof(ABP_ThrowableSteak_C, UberGraphFrame_BP_ThrowableSteak_C) == 0x000540, "Member 'ABP_ThrowableSteak_C::UberGraphFrame_BP_ThrowableSteak_C' has a wrong offset!");
static_assert(offsetof(ABP_ThrowableSteak_C, SkeletalMesh) == 0x000548, "Member 'ABP_ThrowableSteak_C::SkeletalMesh' has a wrong offset!");
static_assert(offsetof(ABP_ThrowableSteak_C, AIPerceptionStimuliSource) == 0x000550, "Member 'ABP_ThrowableSteak_C::AIPerceptionStimuliSource' has a wrong offset!");
static_assert(offsetof(ABP_ThrowableSteak_C, NoiseEmissionCount) == 0x000558, "Member 'ABP_ThrowableSteak_C::NoiseEmissionCount' has a wrong offset!");

}

