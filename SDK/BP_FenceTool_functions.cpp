#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_FenceTool

#include "Basic.hpp"

#include "BP_FenceTool_classes.hpp"
#include "BP_FenceTool_parameters.hpp"


namespace SDK
{

// Function BP_FenceTool.BP_FenceTool_C.AddColumnStatitcMeshComponent
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          FinalLocation                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FRotator                         Orientation                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FVector                          SectionSize                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FStruct_SingleFenceDetails       PlacedFence                                            (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_FenceTool_C::AddColumnStatitcMeshComponent(const struct FVector& FinalLocation, const struct FRotator& Orientation, const struct FVector& SectionSize, struct FStruct_SingleFenceDetails* PlacedFence)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_FenceTool_C", "AddColumnStatitcMeshComponent");

	Params::BP_FenceTool_C_AddColumnStatitcMeshComponent Parms{};

	Parms.FinalLocation = std::move(FinalLocation);
	Parms.Orientation = std::move(Orientation);
	Parms.SectionSize = std::move(SectionSize);

	UObject::ProcessEvent(Func, &Parms);

	if (PlacedFence != nullptr)
		*PlacedFence = std::move(Parms.PlacedFence);
}


// Function BP_FenceTool.BP_FenceTool_C.AddFenceStatitcMeshComponent
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          MeshLocation                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FRotator                         MeshOrientation                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    FenceShouldBeSmall                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FStruct_SingleFenceDetails       PlacedFence                                            (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_FenceTool_C::AddFenceStatitcMeshComponent(const struct FVector& MeshLocation, const struct FRotator& MeshOrientation, bool FenceShouldBeSmall, struct FStruct_SingleFenceDetails* PlacedFence)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_FenceTool_C", "AddFenceStatitcMeshComponent");

	Params::BP_FenceTool_C_AddFenceStatitcMeshComponent Parms{};

	Parms.MeshLocation = std::move(MeshLocation);
	Parms.MeshOrientation = std::move(MeshOrientation);
	Parms.FenceShouldBeSmall = FenceShouldBeSmall;

	UObject::ProcessEvent(Func, &Parms);

	if (PlacedFence != nullptr)
		*PlacedFence = std::move(Parms.PlacedFence);
}


// Function BP_FenceTool.BP_FenceTool_C.CalculateFenceAmountBetweenPoints
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FVector                          CurrentPoint                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          NextPoint                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   FenceAmount                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_FenceTool_C::CalculateFenceAmountBetweenPoints(const struct FVector& CurrentPoint, const struct FVector& NextPoint, int32* FenceAmount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_FenceTool_C", "CalculateFenceAmountBetweenPoints");

	Params::BP_FenceTool_C_CalculateFenceAmountBetweenPoints Parms{};

	Parms.CurrentPoint = std::move(CurrentPoint);
	Parms.NextPoint = std::move(NextPoint);

	UObject::ProcessEvent(Func, &Parms);

	if (FenceAmount != nullptr)
		*FenceAmount = Parms.FenceAmount;
}


// Function BP_FenceTool.BP_FenceTool_C.CalculateFencePositionsBetweenPoints
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   CurrentFence                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   FenceAmount                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          CurrentPoint                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          NextPoint                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    FenceShouldBeSmall                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          CurrentFencePosition                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_FenceTool_C::CalculateFencePositionsBetweenPoints(int32 CurrentFence, int32 FenceAmount, const struct FVector& CurrentPoint, const struct FVector& NextPoint, bool FenceShouldBeSmall, struct FVector* CurrentFencePosition)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_FenceTool_C", "CalculateFencePositionsBetweenPoints");

	Params::BP_FenceTool_C_CalculateFencePositionsBetweenPoints Parms{};

	Parms.CurrentFence = CurrentFence;
	Parms.FenceAmount = FenceAmount;
	Parms.CurrentPoint = std::move(CurrentPoint);
	Parms.NextPoint = std::move(NextPoint);
	Parms.FenceShouldBeSmall = FenceShouldBeSmall;

	UObject::ProcessEvent(Func, &Parms);

	if (CurrentFencePosition != nullptr)
		*CurrentFencePosition = std::move(Parms.CurrentFencePosition);
}


// Function BP_FenceTool.BP_FenceTool_C.CreateColumnSection
// (Protected, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          Size                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          Offset                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          Location                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    OrientToSpline                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Index_0                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UStaticMeshComponent*             CreatedSection                                         (Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void ABP_FenceTool_C::CreateColumnSection(const struct FVector& Size, const struct FVector& Offset, const struct FVector& Location, bool OrientToSpline, int32 Index_0, class UStaticMeshComponent** CreatedSection)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_FenceTool_C", "CreateColumnSection");

	Params::BP_FenceTool_C_CreateColumnSection Parms{};

	Parms.Size = std::move(Size);
	Parms.Offset = std::move(Offset);
	Parms.Location = std::move(Location);
	Parms.OrientToSpline = OrientToSpline;
	Parms.Index_0 = Index_0;

	UObject::ProcessEvent(Func, &Parms);

	if (CreatedSection != nullptr)
		*CreatedSection = Parms.CreatedSection;
}


// Function BP_FenceTool.BP_FenceTool_C.CreateFenceSection
// (Protected, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          Size                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          Offset                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          Location                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    OrientToSpline                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Index_0                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_FenceTool_C::CreateFenceSection(const struct FVector& Size, const struct FVector& Offset, const struct FVector& Location, bool OrientToSpline, int32 Index_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_FenceTool_C", "CreateFenceSection");

	Params::BP_FenceTool_C_CreateFenceSection Parms{};

	Parms.Size = std::move(Size);
	Parms.Offset = std::move(Offset);
	Parms.Location = std::move(Location);
	Parms.OrientToSpline = OrientToSpline;
	Parms.Index_0 = Index_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_FenceTool.BP_FenceTool_C.Depr_AddFenceInstancedStatitcMeshComponent
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          MeshLocation                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FRotator                         MeshOrientation                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    EndWithSmallFence_0                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_FenceTool_C::Depr_AddFenceInstancedStatitcMeshComponent(const struct FVector& MeshLocation, const struct FRotator& MeshOrientation, bool EndWithSmallFence_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_FenceTool_C", "Depr_AddFenceInstancedStatitcMeshComponent");

	Params::BP_FenceTool_C_Depr_AddFenceInstancedStatitcMeshComponent Parms{};

	Parms.MeshLocation = std::move(MeshLocation);
	Parms.MeshOrientation = std::move(MeshOrientation);
	Parms.EndWithSmallFence_0 = EndWithSmallFence_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_FenceTool.BP_FenceTool_C.GetColumnPositionWithSmallerFence
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// int32                                   SectionIndex                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

struct FVector ABP_FenceTool_C::GetColumnPositionWithSmallerFence(int32 SectionIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_FenceTool_C", "GetColumnPositionWithSmallerFence");

	Params::BP_FenceTool_C_GetColumnPositionWithSmallerFence Parms{};

	Parms.SectionIndex = SectionIndex;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_FenceTool.BP_FenceTool_C.GetStaticMeshSize
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UStaticMesh*                      StaticMesh                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// double                                  MeshHeight                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  MeshWidth                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  MeshDepth                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_FenceTool_C::GetStaticMeshSize(class UStaticMesh* StaticMesh, double* MeshHeight, double* MeshWidth, double* MeshDepth)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_FenceTool_C", "GetStaticMeshSize");

	Params::BP_FenceTool_C_GetStaticMeshSize Parms{};

	Parms.StaticMesh = StaticMesh;

	UObject::ProcessEvent(Func, &Parms);

	if (MeshHeight != nullptr)
		*MeshHeight = Parms.MeshHeight;

	if (MeshWidth != nullptr)
		*MeshWidth = Parms.MeshWidth;

	if (MeshDepth != nullptr)
		*MeshDepth = Parms.MeshDepth;
}


// Function BP_FenceTool.BP_FenceTool_C.ReconstructEditableFence
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<struct FStruct_SplinePointPositions>SplinePointPositions_0                                 (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// struct FStruct_FullFenceDetatils        FullFenceDetails_0                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_FenceTool_C::ReconstructEditableFence(TArray<struct FStruct_SplinePointPositions>& SplinePointPositions_0, const struct FStruct_FullFenceDetatils& FullFenceDetails_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_FenceTool_C", "ReconstructEditableFence");

	Params::BP_FenceTool_C_ReconstructEditableFence Parms{};

	Parms.SplinePointPositions_0 = std::move(SplinePointPositions_0);
	Parms.FullFenceDetails_0 = std::move(FullFenceDetails_0);

	UObject::ProcessEvent(Func, &Parms);

	SplinePointPositions_0 = std::move(Parms.SplinePointPositions_0);
}


// Function BP_FenceTool.BP_FenceTool_C.ShouldCurrentFenceBeSmall
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// int32                                   CurrentFence                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   FenceAmount                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    EndsWithSmallFence                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   SectionIndex                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    FenceShouldBeSmall                                     (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_FenceTool_C::ShouldCurrentFenceBeSmall(int32 CurrentFence, int32 FenceAmount, bool EndsWithSmallFence, int32 SectionIndex, bool* FenceShouldBeSmall)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_FenceTool_C", "ShouldCurrentFenceBeSmall");

	Params::BP_FenceTool_C_ShouldCurrentFenceBeSmall Parms{};

	Parms.CurrentFence = CurrentFence;
	Parms.FenceAmount = FenceAmount;
	Parms.EndsWithSmallFence = EndsWithSmallFence;
	Parms.SectionIndex = SectionIndex;

	UObject::ProcessEvent(Func, &Parms);

	if (FenceShouldBeSmall != nullptr)
		*FenceShouldBeSmall = Parms.FenceShouldBeSmall;
}


// Function BP_FenceTool.BP_FenceTool_C.UserConstructionScript
// (Event, Public, BlueprintCallable, BlueprintEvent)

void ABP_FenceTool_C::UserConstructionScript()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_FenceTool_C", "UserConstructionScript");

	UObject::ProcessEvent(Func, nullptr);
}

}

