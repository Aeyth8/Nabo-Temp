#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PracticeRange

#include "Basic.hpp"

#include "PracticeRange_classes.hpp"
#include "PracticeRange_parameters.hpp"


namespace SDK
{

// Function PracticeRange.GridShot.OnTargetHit
// (Final, Native, Private)
// Parameters:
// int32                                   Position                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AGridShot::OnTargetHit(const int32 Position)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GridShot", "OnTargetHit");

	Params::GridShot_OnTargetHit Parms{};

	Parms.Position = Position;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PracticeRange.GridTarget.OnHit
// (Final, Native, Public, BlueprintCallable)

void AGridTarget::OnHit()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GridTarget", "OnHit");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}

}

