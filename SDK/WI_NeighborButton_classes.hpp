#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WI_NeighborButton

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "SlateCore_structs.hpp"
#include "CommonUI_classes.hpp"
#include "JP_structs.hpp"
#include "UMG_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WI_NeighborButton.WI_NeighborButton_C
// 0x01B0 (0x1750 - 0x15A0)
class UWI_NeighborButton_C final : public UCommonButtonBase
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x15A0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       Hover;                                             // 0x15A8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UImage*                                 BattlePassIcon;                                    // 0x15B0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHorizontalBox*                         BattlePassLabel;                                   // 0x15B8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       BattlePassLabelText;                               // 0x15C0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 CharacterBG;                                       // 0x15C8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       ComingSoonLabel;                                   // 0x15D0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Frame;                                             // 0x15D8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               HoverFramePanel;                                   // 0x15E0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_431;                                         // 0x15E8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 LevelBG;                                           // 0x15F0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UVerticalBox*                           LevelPanel;                                        // 0x15F8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       LevelText;                                         // 0x1600(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 LockedIcon;                                        // 0x1608(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 NeighborLockedPortrait;                            // 0x1610(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       NeighborNameText;                                  // 0x1618(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 NeighborPortrait;                                  // 0x1620(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWI_SinglePrice_C*                      PriceLabel;                                        // 0x1628(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             QuestionMark;                                      // 0x1630(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UVerticalBox*                           StoreItemPanel;                                    // 0x1638(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWI_XPProgressionBar_C*                 XPProgressionBar;                                  // 0x1640(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	int32                                         Index_0;                                           // 0x1648(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           NeighborID;                                        // 0x164C(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	int32                                         Level;                                             // 0x1654(0x0004)(Edit, BlueprintVisible, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TSoftObjectPtr<class UTexture2D>              Portrait_Soft_Texture;                             // 0x1658(0x0028)(Edit, BlueprintVisible, Config, DisableEditOnInstance, HasGetValueTypeHash)
	class FText                                   Character_Name;                                    // 0x1680(0x0010)(Edit, BlueprintVisible, Config, DisableEditOnInstance)
	double                                        Next_Level_Progress;                               // 0x1690(0x0008)(Edit, BlueprintVisible, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	FMulticastInlineDelegateProperty_             OnClickedEventDispatcher;                          // 0x1698(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	TSoftObjectPtr<class UTexture2D>              Locked_Portrait_Soft_Texture;                      // 0x16A8(0x0028)(Edit, BlueprintVisible, Config, DisableEditOnInstance, HasGetValueTypeHash)
	bool                                          Is_Owned;                                          // 0x16D0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_16D1[0x3];                                     // 0x16D1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateColor                            OwnedBGColor;                                      // 0x16D4(0x0014)(Edit, BlueprintVisible, Config, DisableEditOnInstance)
	struct FSlateColor                            UnownedBGColor;                                    // 0x16E8(0x0014)(Edit, BlueprintVisible, Config, DisableEditOnInstance)
	struct FSlateColor                            OwnedNeighborNameTextColor;                        // 0x16FC(0x0014)(Edit, BlueprintVisible, Config, DisableEditOnInstance)
	struct FSlateColor                            UnownedNeighborNameTextColor;                      // 0x1710(0x0014)(Edit, BlueprintVisible, Config, DisableEditOnInstance)
	struct FGameplayTag                           PreviewNeighborID;                                 // 0x1724(0x0008)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash)
	bool                                          PreviewIsOwned;                                    // 0x172C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EOnlineItemUnlockRequirement                  PreviewUnlockRequirement;                          // 0x172D(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_172E[0x2];                                     // 0x172E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           PreviewCurrencyID;                                 // 0x1730(0x0008)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           PreviewBattlePassID;                               // 0x1738(0x0008)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash)
	int32                                         PreviewCurrencyAmount;                             // 0x1740(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         PreviewBattlePassLevel;                            // 0x1744(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          PreviewIsRandom;                                   // 0x1748(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IconMode;                                          // 0x1749(0x0001)(Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void BP_OnClicked();
	void BP_OnHovered();
	void BP_OnPressed();
	void BP_OnUnhovered();
	void ExecuteUbergraph_WI_NeighborButton(int32 EntryPoint);
	void GetNameAndIcon(const struct FGameplayTag& NeighborID_0, class FText* Name_0, TSoftObjectPtr<class UTexture2D>* Icon);
	void GetNameFromNeighborID(const struct FGameplayTag& NeighborID_0, class FString* NeighborName);
	void OnClickedEventDispatcher__DelegateSignature(int32 Index_0);
	void OnLoaded_38A939B04DC8A529401B48902723274B(class UObject* Loaded);
	void OnLoaded_CCA746F24EDA6D5C3E4A9AA90EB212AB(class UObject* Loaded);
	void PreConstruct(bool IsDesignTime);
	void SetBattlePassRequirement(const struct FOnlineStoreItemBattlePassRequirement& BattlePassRequirement);
	void SetCharacterName(const class FText& CharacterName);
	void SetIconMode(bool IconMode_0);
	void SetIndex(int32 Index_0);
	void SetIsOwned(bool IsOwned);
	void SetLevel(int32 Level_0);
	void SetLockedPortraitSoftTexture(TSoftObjectPtr<class UTexture2D> NewParam);
	void SetNeighborID(const struct FGameplayTag& NeighborID_0);
	void SetNeighborXP();
	void SetNextLevelProgress(double NextLevelProgress);
	void SetPortraitSoftTexture(TSoftObjectPtr<class UTexture2D> NewParam);
	void SetRandomNeighbor();
	void SetUnlockRequirement(EOnlineItemUnlockRequirement UnlockRequirement, const struct FOnlineStoreItemCost& VirtualCurrencyCost, const struct FOnlineStoreItemBattlePassRequirement& BattlePassRequirement);
	void SetWithOnlineStoreItem(const struct FOnlineStoreItemData& OnlineStoreItem);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WI_NeighborButton_C">();
	}
	static class UWI_NeighborButton_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWI_NeighborButton_C>();
	}
};
static_assert(alignof(UWI_NeighborButton_C) == 0x000010, "Wrong alignment on UWI_NeighborButton_C");
static_assert(sizeof(UWI_NeighborButton_C) == 0x001750, "Wrong size on UWI_NeighborButton_C");
static_assert(offsetof(UWI_NeighborButton_C, UberGraphFrame) == 0x0015A0, "Member 'UWI_NeighborButton_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWI_NeighborButton_C, Hover) == 0x0015A8, "Member 'UWI_NeighborButton_C::Hover' has a wrong offset!");
static_assert(offsetof(UWI_NeighborButton_C, BattlePassIcon) == 0x0015B0, "Member 'UWI_NeighborButton_C::BattlePassIcon' has a wrong offset!");
static_assert(offsetof(UWI_NeighborButton_C, BattlePassLabel) == 0x0015B8, "Member 'UWI_NeighborButton_C::BattlePassLabel' has a wrong offset!");
static_assert(offsetof(UWI_NeighborButton_C, BattlePassLabelText) == 0x0015C0, "Member 'UWI_NeighborButton_C::BattlePassLabelText' has a wrong offset!");
static_assert(offsetof(UWI_NeighborButton_C, CharacterBG) == 0x0015C8, "Member 'UWI_NeighborButton_C::CharacterBG' has a wrong offset!");
static_assert(offsetof(UWI_NeighborButton_C, ComingSoonLabel) == 0x0015D0, "Member 'UWI_NeighborButton_C::ComingSoonLabel' has a wrong offset!");
static_assert(offsetof(UWI_NeighborButton_C, Frame) == 0x0015D8, "Member 'UWI_NeighborButton_C::Frame' has a wrong offset!");
static_assert(offsetof(UWI_NeighborButton_C, HoverFramePanel) == 0x0015E0, "Member 'UWI_NeighborButton_C::HoverFramePanel' has a wrong offset!");
static_assert(offsetof(UWI_NeighborButton_C, Image_431) == 0x0015E8, "Member 'UWI_NeighborButton_C::Image_431' has a wrong offset!");
static_assert(offsetof(UWI_NeighborButton_C, LevelBG) == 0x0015F0, "Member 'UWI_NeighborButton_C::LevelBG' has a wrong offset!");
static_assert(offsetof(UWI_NeighborButton_C, LevelPanel) == 0x0015F8, "Member 'UWI_NeighborButton_C::LevelPanel' has a wrong offset!");
static_assert(offsetof(UWI_NeighborButton_C, LevelText) == 0x001600, "Member 'UWI_NeighborButton_C::LevelText' has a wrong offset!");
static_assert(offsetof(UWI_NeighborButton_C, LockedIcon) == 0x001608, "Member 'UWI_NeighborButton_C::LockedIcon' has a wrong offset!");
static_assert(offsetof(UWI_NeighborButton_C, NeighborLockedPortrait) == 0x001610, "Member 'UWI_NeighborButton_C::NeighborLockedPortrait' has a wrong offset!");
static_assert(offsetof(UWI_NeighborButton_C, NeighborNameText) == 0x001618, "Member 'UWI_NeighborButton_C::NeighborNameText' has a wrong offset!");
static_assert(offsetof(UWI_NeighborButton_C, NeighborPortrait) == 0x001620, "Member 'UWI_NeighborButton_C::NeighborPortrait' has a wrong offset!");
static_assert(offsetof(UWI_NeighborButton_C, PriceLabel) == 0x001628, "Member 'UWI_NeighborButton_C::PriceLabel' has a wrong offset!");
static_assert(offsetof(UWI_NeighborButton_C, QuestionMark) == 0x001630, "Member 'UWI_NeighborButton_C::QuestionMark' has a wrong offset!");
static_assert(offsetof(UWI_NeighborButton_C, StoreItemPanel) == 0x001638, "Member 'UWI_NeighborButton_C::StoreItemPanel' has a wrong offset!");
static_assert(offsetof(UWI_NeighborButton_C, XPProgressionBar) == 0x001640, "Member 'UWI_NeighborButton_C::XPProgressionBar' has a wrong offset!");
static_assert(offsetof(UWI_NeighborButton_C, Index_0) == 0x001648, "Member 'UWI_NeighborButton_C::Index_0' has a wrong offset!");
static_assert(offsetof(UWI_NeighborButton_C, NeighborID) == 0x00164C, "Member 'UWI_NeighborButton_C::NeighborID' has a wrong offset!");
static_assert(offsetof(UWI_NeighborButton_C, Level) == 0x001654, "Member 'UWI_NeighborButton_C::Level' has a wrong offset!");
static_assert(offsetof(UWI_NeighborButton_C, Portrait_Soft_Texture) == 0x001658, "Member 'UWI_NeighborButton_C::Portrait_Soft_Texture' has a wrong offset!");
static_assert(offsetof(UWI_NeighborButton_C, Character_Name) == 0x001680, "Member 'UWI_NeighborButton_C::Character_Name' has a wrong offset!");
static_assert(offsetof(UWI_NeighborButton_C, Next_Level_Progress) == 0x001690, "Member 'UWI_NeighborButton_C::Next_Level_Progress' has a wrong offset!");
static_assert(offsetof(UWI_NeighborButton_C, OnClickedEventDispatcher) == 0x001698, "Member 'UWI_NeighborButton_C::OnClickedEventDispatcher' has a wrong offset!");
static_assert(offsetof(UWI_NeighborButton_C, Locked_Portrait_Soft_Texture) == 0x0016A8, "Member 'UWI_NeighborButton_C::Locked_Portrait_Soft_Texture' has a wrong offset!");
static_assert(offsetof(UWI_NeighborButton_C, Is_Owned) == 0x0016D0, "Member 'UWI_NeighborButton_C::Is_Owned' has a wrong offset!");
static_assert(offsetof(UWI_NeighborButton_C, OwnedBGColor) == 0x0016D4, "Member 'UWI_NeighborButton_C::OwnedBGColor' has a wrong offset!");
static_assert(offsetof(UWI_NeighborButton_C, UnownedBGColor) == 0x0016E8, "Member 'UWI_NeighborButton_C::UnownedBGColor' has a wrong offset!");
static_assert(offsetof(UWI_NeighborButton_C, OwnedNeighborNameTextColor) == 0x0016FC, "Member 'UWI_NeighborButton_C::OwnedNeighborNameTextColor' has a wrong offset!");
static_assert(offsetof(UWI_NeighborButton_C, UnownedNeighborNameTextColor) == 0x001710, "Member 'UWI_NeighborButton_C::UnownedNeighborNameTextColor' has a wrong offset!");
static_assert(offsetof(UWI_NeighborButton_C, PreviewNeighborID) == 0x001724, "Member 'UWI_NeighborButton_C::PreviewNeighborID' has a wrong offset!");
static_assert(offsetof(UWI_NeighborButton_C, PreviewIsOwned) == 0x00172C, "Member 'UWI_NeighborButton_C::PreviewIsOwned' has a wrong offset!");
static_assert(offsetof(UWI_NeighborButton_C, PreviewUnlockRequirement) == 0x00172D, "Member 'UWI_NeighborButton_C::PreviewUnlockRequirement' has a wrong offset!");
static_assert(offsetof(UWI_NeighborButton_C, PreviewCurrencyID) == 0x001730, "Member 'UWI_NeighborButton_C::PreviewCurrencyID' has a wrong offset!");
static_assert(offsetof(UWI_NeighborButton_C, PreviewBattlePassID) == 0x001738, "Member 'UWI_NeighborButton_C::PreviewBattlePassID' has a wrong offset!");
static_assert(offsetof(UWI_NeighborButton_C, PreviewCurrencyAmount) == 0x001740, "Member 'UWI_NeighborButton_C::PreviewCurrencyAmount' has a wrong offset!");
static_assert(offsetof(UWI_NeighborButton_C, PreviewBattlePassLevel) == 0x001744, "Member 'UWI_NeighborButton_C::PreviewBattlePassLevel' has a wrong offset!");
static_assert(offsetof(UWI_NeighborButton_C, PreviewIsRandom) == 0x001748, "Member 'UWI_NeighborButton_C::PreviewIsRandom' has a wrong offset!");
static_assert(offsetof(UWI_NeighborButton_C, IconMode) == 0x001749, "Member 'UWI_NeighborButton_C::IconMode' has a wrong offset!");

}

