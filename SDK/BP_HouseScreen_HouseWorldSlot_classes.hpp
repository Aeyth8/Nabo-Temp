#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_HouseScreen_HouseWorldSlot

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_HouseScreen_HouseWorldSlot.BP_HouseScreen_HouseWorldSlot_C
// 0x0038 (0x02C8 - 0x0290)
class ABP_HouseScreen_HouseWorldSlot_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0290(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class USceneComponent*                        PreviewHouseActorRoot;                             // 0x0298(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   HouseStaticMesh;                                   // 0x02A0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBillboardComponent*                    Billboard;                                         // 0x02A8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UArrowComponent*                        Arrow;                                             // 0x02B0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class AHousePreviewActorBase*                 PreviewHouseActorInstance;                         // 0x02B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                          PlayHouseSpecificBoughtParticles;                  // 0x02C0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_HouseScreen_HouseWorldSlot(int32 EntryPoint);
	void HandleHouseBought(TSoftObjectPtr<class UHouseDefinition> BoughtHouseDefinition);
	void HandlePreviewHouseChanged(TSoftObjectPtr<class UHouseDefinition> SelectedHouseDefinition);
	void HideHouseMesh();
	void HideHousePreviewActor();
	void IsHousePreviewActorFullyLoaded(TSoftObjectPtr<class UHouseDefinition> HouseDefinition, bool* FullyLoaded);
	void IsHouseStaticMeshFullyLoaded(TSoftObjectPtr<class UHouseDefinition> HouseDefinition, bool* FullyLoaded);
	void IsSoftHousePreviewActorClassValid(TSoftObjectPtr<class UHouseDefinition> HouseDefinition, bool* IsValid);
	void IsSoftHouseStaticMeshValid(TSoftObjectPtr<class UHouseDefinition> HouseDefinition, bool* IsValid);
	void OnLoaded_F086CFBE4535E2800C075D8858B47A09(class UObject* Loaded);
	void OnMessageReceived_2DD6ABE64A1797FF2C336F97E9931551(class UAsyncAction_ListenForGameplayMessage* ProxyObject, const struct FGameplayTag& ActualChannel);
	void OnMessageReceived_BBE8A1194DC0F176DD9029A77C1F3FAF(class UAsyncAction_ListenForGameplayMessage* ProxyObject, const struct FGameplayTag& ActualChannel);
	void OnMessageReceived_C5ACEFD44B99D8CAF5C9C3872CE4FDA0(class UAsyncAction_ListenForGameplayMessage* ProxyObject, const struct FGameplayTag& ActualChannel);
	void ReceiveBeginPlay();
	void Shenanigans();
	void ShowLoadedHouseMesh(class UStaticMesh* HouseMesh);
	void ShowLoadedHousePreviewActor(class UClass* HousePreviewActorClass);
	void ShowOrLoadHouseMesh(TSoftObjectPtr<class UHouseDefinition> HouseDefinition);
	void ShowOrLoadHousePreviewActor(TSoftObjectPtr<class UHouseDefinition> HouseDefinition);
	void StartLoadingHouseMesh(TSoftObjectPtr<class UHouseDefinition> HouseDefinition);
	void StartLoadingHousePreviewActor(TSoftObjectPtr<class UHouseDefinition> HouseDefinition);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_HouseScreen_HouseWorldSlot_C">();
	}
	static class ABP_HouseScreen_HouseWorldSlot_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_HouseScreen_HouseWorldSlot_C>();
	}
};
static_assert(alignof(ABP_HouseScreen_HouseWorldSlot_C) == 0x000008, "Wrong alignment on ABP_HouseScreen_HouseWorldSlot_C");
static_assert(sizeof(ABP_HouseScreen_HouseWorldSlot_C) == 0x0002C8, "Wrong size on ABP_HouseScreen_HouseWorldSlot_C");
static_assert(offsetof(ABP_HouseScreen_HouseWorldSlot_C, UberGraphFrame) == 0x000290, "Member 'ABP_HouseScreen_HouseWorldSlot_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_HouseScreen_HouseWorldSlot_C, PreviewHouseActorRoot) == 0x000298, "Member 'ABP_HouseScreen_HouseWorldSlot_C::PreviewHouseActorRoot' has a wrong offset!");
static_assert(offsetof(ABP_HouseScreen_HouseWorldSlot_C, HouseStaticMesh) == 0x0002A0, "Member 'ABP_HouseScreen_HouseWorldSlot_C::HouseStaticMesh' has a wrong offset!");
static_assert(offsetof(ABP_HouseScreen_HouseWorldSlot_C, Billboard) == 0x0002A8, "Member 'ABP_HouseScreen_HouseWorldSlot_C::Billboard' has a wrong offset!");
static_assert(offsetof(ABP_HouseScreen_HouseWorldSlot_C, Arrow) == 0x0002B0, "Member 'ABP_HouseScreen_HouseWorldSlot_C::Arrow' has a wrong offset!");
static_assert(offsetof(ABP_HouseScreen_HouseWorldSlot_C, PreviewHouseActorInstance) == 0x0002B8, "Member 'ABP_HouseScreen_HouseWorldSlot_C::PreviewHouseActorInstance' has a wrong offset!");
static_assert(offsetof(ABP_HouseScreen_HouseWorldSlot_C, PlayHouseSpecificBoughtParticles) == 0x0002C0, "Member 'ABP_HouseScreen_HouseWorldSlot_C::PlayHouseSpecificBoughtParticles' has a wrong offset!");

}

