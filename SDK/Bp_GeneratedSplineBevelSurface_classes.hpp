#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Bp_GeneratedSplineBevelSurface

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Bp_GeneratedGeometry_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass Bp_GeneratedSplineBevelSurface.Bp_GeneratedSplineBevelSurface_C
// 0x00B8 (0x03A0 - 0x02E8)
class ABp_GeneratedSplineBevelSurface_C final : public ABp_GeneratedGeometry_C
{
public:
	int32                                         Spline_Segments;                                   // 0x02E8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash)
	int32                                         Bevel_Segments;                                    // 0x02EC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash)
	double                                        Bevel_Width;                                       // 0x02F0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash)
	double                                        Bevel_Height_1;                                    // 0x02F8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash)
	double                                        Bevel_Height_2;                                    // 0x0300(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash)
	double                                        Bevel_Height_3;                                    // 0x0308(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash)
	double                                        UVScale;                                           // 0x0310(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash)
	class UMaterialInterface*                     Preview_Material_Ground;                           // 0x0318(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, AdvancedDisplay, HasGetValueTypeHash)
	bool                                          Create_Edge;                                       // 0x0320(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash)
	bool                                          Closed;                                            // 0x0321(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_322[0x6];                                      // 0x0322(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UStaticMesh*                            Edge_Mesh;                                         // 0x0328(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, AdvancedDisplay, HasGetValueTypeHash)
	struct FTransform                             EdgeTransform;                                     // 0x0330(0x0060)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Spacing;                                           // 0x0390(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"Bp_GeneratedSplineBevelSurface_C">();
	}
	static class ABp_GeneratedSplineBevelSurface_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABp_GeneratedSplineBevelSurface_C>();
	}
};
static_assert(alignof(ABp_GeneratedSplineBevelSurface_C) == 0x000010, "Wrong alignment on ABp_GeneratedSplineBevelSurface_C");
static_assert(sizeof(ABp_GeneratedSplineBevelSurface_C) == 0x0003A0, "Wrong size on ABp_GeneratedSplineBevelSurface_C");
static_assert(offsetof(ABp_GeneratedSplineBevelSurface_C, Spline_Segments) == 0x0002E8, "Member 'ABp_GeneratedSplineBevelSurface_C::Spline_Segments' has a wrong offset!");
static_assert(offsetof(ABp_GeneratedSplineBevelSurface_C, Bevel_Segments) == 0x0002EC, "Member 'ABp_GeneratedSplineBevelSurface_C::Bevel_Segments' has a wrong offset!");
static_assert(offsetof(ABp_GeneratedSplineBevelSurface_C, Bevel_Width) == 0x0002F0, "Member 'ABp_GeneratedSplineBevelSurface_C::Bevel_Width' has a wrong offset!");
static_assert(offsetof(ABp_GeneratedSplineBevelSurface_C, Bevel_Height_1) == 0x0002F8, "Member 'ABp_GeneratedSplineBevelSurface_C::Bevel_Height_1' has a wrong offset!");
static_assert(offsetof(ABp_GeneratedSplineBevelSurface_C, Bevel_Height_2) == 0x000300, "Member 'ABp_GeneratedSplineBevelSurface_C::Bevel_Height_2' has a wrong offset!");
static_assert(offsetof(ABp_GeneratedSplineBevelSurface_C, Bevel_Height_3) == 0x000308, "Member 'ABp_GeneratedSplineBevelSurface_C::Bevel_Height_3' has a wrong offset!");
static_assert(offsetof(ABp_GeneratedSplineBevelSurface_C, UVScale) == 0x000310, "Member 'ABp_GeneratedSplineBevelSurface_C::UVScale' has a wrong offset!");
static_assert(offsetof(ABp_GeneratedSplineBevelSurface_C, Preview_Material_Ground) == 0x000318, "Member 'ABp_GeneratedSplineBevelSurface_C::Preview_Material_Ground' has a wrong offset!");
static_assert(offsetof(ABp_GeneratedSplineBevelSurface_C, Create_Edge) == 0x000320, "Member 'ABp_GeneratedSplineBevelSurface_C::Create_Edge' has a wrong offset!");
static_assert(offsetof(ABp_GeneratedSplineBevelSurface_C, Closed) == 0x000321, "Member 'ABp_GeneratedSplineBevelSurface_C::Closed' has a wrong offset!");
static_assert(offsetof(ABp_GeneratedSplineBevelSurface_C, Edge_Mesh) == 0x000328, "Member 'ABp_GeneratedSplineBevelSurface_C::Edge_Mesh' has a wrong offset!");
static_assert(offsetof(ABp_GeneratedSplineBevelSurface_C, EdgeTransform) == 0x000330, "Member 'ABp_GeneratedSplineBevelSurface_C::EdgeTransform' has a wrong offset!");
static_assert(offsetof(ABp_GeneratedSplineBevelSurface_C, Spacing) == 0x000390, "Member 'ABp_GeneratedSplineBevelSurface_C::Spacing' has a wrong offset!");

}

