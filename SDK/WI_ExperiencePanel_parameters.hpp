#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WI_ExperiencePanel

#include "Basic.hpp"

#include "JP_structs.hpp"
#include "Engine_structs.hpp"
#include "GameplayTags_structs.hpp"


namespace SDK::Params
{

// Function WI_ExperiencePanel.WI_ExperiencePanel_C.AddRewardEntry
// 0x0038 (0x0038 - 0x0000)
struct WI_ExperiencePanel_C_AddRewardEntry final
{
public:
	class UWI_ExperiencePanel_RewardEntry_C*      RewardEntryWidget;                                 // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWI_ExperiencePanel_RewardEntry_C*      OutRewardEntryWidget;                              // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UHorizontalBoxSlot*                     OutPanelSlot;                                      // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPanelSlot*                             CallFunc_AddChild_ReturnValue;                     // 0x0020(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UHorizontalBoxSlot*                     K2Node_DynamicCast_AsHorizontal_Box_Slot;          // 0x0028(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WI_ExperiencePanel_C_AddRewardEntry) == 0x000008, "Wrong alignment on WI_ExperiencePanel_C_AddRewardEntry");
static_assert(sizeof(WI_ExperiencePanel_C_AddRewardEntry) == 0x000038, "Wrong size on WI_ExperiencePanel_C_AddRewardEntry");
static_assert(offsetof(WI_ExperiencePanel_C_AddRewardEntry, RewardEntryWidget) == 0x000000, "Member 'WI_ExperiencePanel_C_AddRewardEntry::RewardEntryWidget' has a wrong offset!");
static_assert(offsetof(WI_ExperiencePanel_C_AddRewardEntry, OutRewardEntryWidget) == 0x000008, "Member 'WI_ExperiencePanel_C_AddRewardEntry::OutRewardEntryWidget' has a wrong offset!");
static_assert(offsetof(WI_ExperiencePanel_C_AddRewardEntry, OutPanelSlot) == 0x000010, "Member 'WI_ExperiencePanel_C_AddRewardEntry::OutPanelSlot' has a wrong offset!");
static_assert(offsetof(WI_ExperiencePanel_C_AddRewardEntry, CallFunc_Array_AddUnique_ReturnValue) == 0x000018, "Member 'WI_ExperiencePanel_C_AddRewardEntry::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");
static_assert(offsetof(WI_ExperiencePanel_C_AddRewardEntry, CallFunc_AddChild_ReturnValue) == 0x000020, "Member 'WI_ExperiencePanel_C_AddRewardEntry::CallFunc_AddChild_ReturnValue' has a wrong offset!");
static_assert(offsetof(WI_ExperiencePanel_C_AddRewardEntry, K2Node_DynamicCast_AsHorizontal_Box_Slot) == 0x000028, "Member 'WI_ExperiencePanel_C_AddRewardEntry::K2Node_DynamicCast_AsHorizontal_Box_Slot' has a wrong offset!");
static_assert(offsetof(WI_ExperiencePanel_C_AddRewardEntry, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'WI_ExperiencePanel_C_AddRewardEntry::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function WI_ExperiencePanel.WI_ExperiencePanel_C.Create Profile XPEntry
// 0x0048 (0x0048 - 0x0000)
struct WI_ExperiencePanel_C_Create_Profile_XPEntry final
{
public:
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APlayerStateJP*                         K2Node_DynamicCast_AsPlayer_State_JP;              // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_GetNeighborNameFromPlayerState_Name;      // 0x0020(0x0010)()
	class UWI_ExperiencePanel_RewardEntry_C*      CallFunc_CreateXPRewardWidget_XPRewardWidget;      // 0x0030(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWI_ExperiencePanel_RewardEntry_C*      CallFunc_AddRewardEntry_OutRewardEntryWidget;      // 0x0038(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UHorizontalBoxSlot*                     CallFunc_AddRewardEntry_OutPanelSlot;              // 0x0040(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WI_ExperiencePanel_C_Create_Profile_XPEntry) == 0x000008, "Wrong alignment on WI_ExperiencePanel_C_Create_Profile_XPEntry");
static_assert(sizeof(WI_ExperiencePanel_C_Create_Profile_XPEntry) == 0x000048, "Wrong size on WI_ExperiencePanel_C_Create_Profile_XPEntry");
static_assert(offsetof(WI_ExperiencePanel_C_Create_Profile_XPEntry, CallFunc_Greater_IntInt_ReturnValue) == 0x000000, "Member 'WI_ExperiencePanel_C_Create_Profile_XPEntry::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WI_ExperiencePanel_C_Create_Profile_XPEntry, CallFunc_GetOwningPlayer_ReturnValue) == 0x000008, "Member 'WI_ExperiencePanel_C_Create_Profile_XPEntry::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(WI_ExperiencePanel_C_Create_Profile_XPEntry, K2Node_DynamicCast_AsPlayer_State_JP) == 0x000010, "Member 'WI_ExperiencePanel_C_Create_Profile_XPEntry::K2Node_DynamicCast_AsPlayer_State_JP' has a wrong offset!");
static_assert(offsetof(WI_ExperiencePanel_C_Create_Profile_XPEntry, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'WI_ExperiencePanel_C_Create_Profile_XPEntry::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WI_ExperiencePanel_C_Create_Profile_XPEntry, CallFunc_GetNeighborNameFromPlayerState_Name) == 0x000020, "Member 'WI_ExperiencePanel_C_Create_Profile_XPEntry::CallFunc_GetNeighborNameFromPlayerState_Name' has a wrong offset!");
static_assert(offsetof(WI_ExperiencePanel_C_Create_Profile_XPEntry, CallFunc_CreateXPRewardWidget_XPRewardWidget) == 0x000030, "Member 'WI_ExperiencePanel_C_Create_Profile_XPEntry::CallFunc_CreateXPRewardWidget_XPRewardWidget' has a wrong offset!");
static_assert(offsetof(WI_ExperiencePanel_C_Create_Profile_XPEntry, CallFunc_AddRewardEntry_OutRewardEntryWidget) == 0x000038, "Member 'WI_ExperiencePanel_C_Create_Profile_XPEntry::CallFunc_AddRewardEntry_OutRewardEntryWidget' has a wrong offset!");
static_assert(offsetof(WI_ExperiencePanel_C_Create_Profile_XPEntry, CallFunc_AddRewardEntry_OutPanelSlot) == 0x000040, "Member 'WI_ExperiencePanel_C_Create_Profile_XPEntry::CallFunc_AddRewardEntry_OutPanelSlot' has a wrong offset!");

// Function WI_ExperiencePanel.WI_ExperiencePanel_C.CreateCurrencyRewardWidget
// 0x0030 (0x0030 - 0x0000)
struct WI_ExperiencePanel_C_CreateCurrencyRewardWidget final
{
public:
	struct FGameplayTag                           CurrencyTag;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	int32                                         CurrencyAmount;                                    // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWI_ExperiencePanel_RewardEntry_C*      CurrencyRewardWidget;                              // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWI_ExperiencePanel_RewardEntry_C*      CallFunc_Create_ReturnValue;                       // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_GetReasonText_ReturnValue;                // 0x0020(0x0010)()
};
static_assert(alignof(WI_ExperiencePanel_C_CreateCurrencyRewardWidget) == 0x000008, "Wrong alignment on WI_ExperiencePanel_C_CreateCurrencyRewardWidget");
static_assert(sizeof(WI_ExperiencePanel_C_CreateCurrencyRewardWidget) == 0x000030, "Wrong size on WI_ExperiencePanel_C_CreateCurrencyRewardWidget");
static_assert(offsetof(WI_ExperiencePanel_C_CreateCurrencyRewardWidget, CurrencyTag) == 0x000000, "Member 'WI_ExperiencePanel_C_CreateCurrencyRewardWidget::CurrencyTag' has a wrong offset!");
static_assert(offsetof(WI_ExperiencePanel_C_CreateCurrencyRewardWidget, CurrencyAmount) == 0x000008, "Member 'WI_ExperiencePanel_C_CreateCurrencyRewardWidget::CurrencyAmount' has a wrong offset!");
static_assert(offsetof(WI_ExperiencePanel_C_CreateCurrencyRewardWidget, CurrencyRewardWidget) == 0x000010, "Member 'WI_ExperiencePanel_C_CreateCurrencyRewardWidget::CurrencyRewardWidget' has a wrong offset!");
static_assert(offsetof(WI_ExperiencePanel_C_CreateCurrencyRewardWidget, CallFunc_Create_ReturnValue) == 0x000018, "Member 'WI_ExperiencePanel_C_CreateCurrencyRewardWidget::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(WI_ExperiencePanel_C_CreateCurrencyRewardWidget, CallFunc_GetReasonText_ReturnValue) == 0x000020, "Member 'WI_ExperiencePanel_C_CreateCurrencyRewardWidget::CallFunc_GetReasonText_ReturnValue' has a wrong offset!");

// Function WI_ExperiencePanel.WI_ExperiencePanel_C.CreateXPRewardWidget
// 0x00D8 (0x00D8 - 0x0000)
struct WI_ExperiencePanel_C_CreateXPRewardWidget final
{
public:
	bool                                          IsOnWinningTeam_0;                                 // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsNeighborXP_0;                                    // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   NeighborName;                                      // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm)
	int32                                         XP_Value;                                          // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWI_ExperiencePanel_RewardEntry_C*      XPRewardWidget;                                    // 0x0020(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0030(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0078(0x0010)(ReferenceParm)
	class FText                                   Temp_text_Variable;                                // 0x0088(0x0010)()
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0098(0x0010)()
	class UWI_ExperiencePanel_RewardEntry_C*      CallFunc_Create_ReturnValue;                       // 0x00A8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FText                                   K2Node_Select_Default;                             // 0x00B0(0x0010)()
	class FText                                   CallFunc_GetReasonText_ReturnValue;                // 0x00C0(0x0010)()
	struct FGameplayTag                           Temp_struct_Variable;                              // 0x00D0(0x0008)(ConstParm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WI_ExperiencePanel_C_CreateXPRewardWidget) == 0x000008, "Wrong alignment on WI_ExperiencePanel_C_CreateXPRewardWidget");
static_assert(sizeof(WI_ExperiencePanel_C_CreateXPRewardWidget) == 0x0000D8, "Wrong size on WI_ExperiencePanel_C_CreateXPRewardWidget");
static_assert(offsetof(WI_ExperiencePanel_C_CreateXPRewardWidget, IsOnWinningTeam_0) == 0x000000, "Member 'WI_ExperiencePanel_C_CreateXPRewardWidget::IsOnWinningTeam_0' has a wrong offset!");
static_assert(offsetof(WI_ExperiencePanel_C_CreateXPRewardWidget, IsNeighborXP_0) == 0x000001, "Member 'WI_ExperiencePanel_C_CreateXPRewardWidget::IsNeighborXP_0' has a wrong offset!");
static_assert(offsetof(WI_ExperiencePanel_C_CreateXPRewardWidget, NeighborName) == 0x000008, "Member 'WI_ExperiencePanel_C_CreateXPRewardWidget::NeighborName' has a wrong offset!");
static_assert(offsetof(WI_ExperiencePanel_C_CreateXPRewardWidget, XP_Value) == 0x000018, "Member 'WI_ExperiencePanel_C_CreateXPRewardWidget::XP_Value' has a wrong offset!");
static_assert(offsetof(WI_ExperiencePanel_C_CreateXPRewardWidget, XPRewardWidget) == 0x000020, "Member 'WI_ExperiencePanel_C_CreateXPRewardWidget::XPRewardWidget' has a wrong offset!");
static_assert(offsetof(WI_ExperiencePanel_C_CreateXPRewardWidget, Temp_bool_Variable) == 0x000028, "Member 'WI_ExperiencePanel_C_CreateXPRewardWidget::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WI_ExperiencePanel_C_CreateXPRewardWidget, K2Node_MakeStruct_FormatArgumentData) == 0x000030, "Member 'WI_ExperiencePanel_C_CreateXPRewardWidget::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(WI_ExperiencePanel_C_CreateXPRewardWidget, K2Node_MakeArray_Array) == 0x000078, "Member 'WI_ExperiencePanel_C_CreateXPRewardWidget::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(WI_ExperiencePanel_C_CreateXPRewardWidget, Temp_text_Variable) == 0x000088, "Member 'WI_ExperiencePanel_C_CreateXPRewardWidget::Temp_text_Variable' has a wrong offset!");
static_assert(offsetof(WI_ExperiencePanel_C_CreateXPRewardWidget, CallFunc_Format_ReturnValue) == 0x000098, "Member 'WI_ExperiencePanel_C_CreateXPRewardWidget::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(WI_ExperiencePanel_C_CreateXPRewardWidget, CallFunc_Create_ReturnValue) == 0x0000A8, "Member 'WI_ExperiencePanel_C_CreateXPRewardWidget::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(WI_ExperiencePanel_C_CreateXPRewardWidget, K2Node_Select_Default) == 0x0000B0, "Member 'WI_ExperiencePanel_C_CreateXPRewardWidget::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WI_ExperiencePanel_C_CreateXPRewardWidget, CallFunc_GetReasonText_ReturnValue) == 0x0000C0, "Member 'WI_ExperiencePanel_C_CreateXPRewardWidget::CallFunc_GetReasonText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WI_ExperiencePanel_C_CreateXPRewardWidget, Temp_struct_Variable) == 0x0000D0, "Member 'WI_ExperiencePanel_C_CreateXPRewardWidget::Temp_struct_Variable' has a wrong offset!");

// Function WI_ExperiencePanel.WI_ExperiencePanel_C.EditorOnlyCreateRewardWidgets
// 0x0078 (0x0078 - 0x0000)
struct WI_ExperiencePanel_C_EditorOnlyCreateRewardWidgets final
{
public:
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UWI_ExperiencePanel_RewardEntry_C*      CallFunc_CreateCurrencyRewardWidget_CurrencyRewardWidget; // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWI_ExperiencePanel_RewardEntry_C*      CallFunc_AddRewardEntry_OutRewardEntryWidget;      // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UHorizontalBoxSlot*                     CallFunc_AddRewardEntry_OutPanelSlot;              // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class APlayerStateJP*                         K2Node_DynamicCast_AsPlayer_State_JP;              // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_GetNeighborNameFromPlayerState_Name;      // 0x0030(0x0010)()
	class UWI_ExperiencePanel_RewardEntry_C*      CallFunc_CreateCurrencyRewardWidget_CurrencyRewardWidget_1; // 0x0040(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWI_ExperiencePanel_RewardEntry_C*      CallFunc_CreateXPRewardWidget_XPRewardWidget;      // 0x0048(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWI_ExperiencePanel_RewardEntry_C*      CallFunc_AddRewardEntry_OutRewardEntryWidget_1;    // 0x0050(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UHorizontalBoxSlot*                     CallFunc_AddRewardEntry_OutPanelSlot_1;            // 0x0058(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWI_ExperiencePanel_RewardEntry_C*      CallFunc_AddRewardEntry_OutRewardEntryWidget_2;    // 0x0060(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UHorizontalBoxSlot*                     CallFunc_AddRewardEntry_OutPanelSlot_2;            // 0x0068(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetIsPie_ReturnValue;                     // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WI_ExperiencePanel_C_EditorOnlyCreateRewardWidgets) == 0x000008, "Wrong alignment on WI_ExperiencePanel_C_EditorOnlyCreateRewardWidgets");
static_assert(sizeof(WI_ExperiencePanel_C_EditorOnlyCreateRewardWidgets) == 0x000078, "Wrong size on WI_ExperiencePanel_C_EditorOnlyCreateRewardWidgets");
static_assert(offsetof(WI_ExperiencePanel_C_EditorOnlyCreateRewardWidgets, CallFunc_GetOwningPlayer_ReturnValue) == 0x000000, "Member 'WI_ExperiencePanel_C_EditorOnlyCreateRewardWidgets::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(WI_ExperiencePanel_C_EditorOnlyCreateRewardWidgets, CallFunc_CreateCurrencyRewardWidget_CurrencyRewardWidget) == 0x000008, "Member 'WI_ExperiencePanel_C_EditorOnlyCreateRewardWidgets::CallFunc_CreateCurrencyRewardWidget_CurrencyRewardWidget' has a wrong offset!");
static_assert(offsetof(WI_ExperiencePanel_C_EditorOnlyCreateRewardWidgets, CallFunc_AddRewardEntry_OutRewardEntryWidget) == 0x000010, "Member 'WI_ExperiencePanel_C_EditorOnlyCreateRewardWidgets::CallFunc_AddRewardEntry_OutRewardEntryWidget' has a wrong offset!");
static_assert(offsetof(WI_ExperiencePanel_C_EditorOnlyCreateRewardWidgets, CallFunc_AddRewardEntry_OutPanelSlot) == 0x000018, "Member 'WI_ExperiencePanel_C_EditorOnlyCreateRewardWidgets::CallFunc_AddRewardEntry_OutPanelSlot' has a wrong offset!");
static_assert(offsetof(WI_ExperiencePanel_C_EditorOnlyCreateRewardWidgets, K2Node_DynamicCast_AsPlayer_State_JP) == 0x000020, "Member 'WI_ExperiencePanel_C_EditorOnlyCreateRewardWidgets::K2Node_DynamicCast_AsPlayer_State_JP' has a wrong offset!");
static_assert(offsetof(WI_ExperiencePanel_C_EditorOnlyCreateRewardWidgets, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'WI_ExperiencePanel_C_EditorOnlyCreateRewardWidgets::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WI_ExperiencePanel_C_EditorOnlyCreateRewardWidgets, CallFunc_GetNeighborNameFromPlayerState_Name) == 0x000030, "Member 'WI_ExperiencePanel_C_EditorOnlyCreateRewardWidgets::CallFunc_GetNeighborNameFromPlayerState_Name' has a wrong offset!");
static_assert(offsetof(WI_ExperiencePanel_C_EditorOnlyCreateRewardWidgets, CallFunc_CreateCurrencyRewardWidget_CurrencyRewardWidget_1) == 0x000040, "Member 'WI_ExperiencePanel_C_EditorOnlyCreateRewardWidgets::CallFunc_CreateCurrencyRewardWidget_CurrencyRewardWidget_1' has a wrong offset!");
static_assert(offsetof(WI_ExperiencePanel_C_EditorOnlyCreateRewardWidgets, CallFunc_CreateXPRewardWidget_XPRewardWidget) == 0x000048, "Member 'WI_ExperiencePanel_C_EditorOnlyCreateRewardWidgets::CallFunc_CreateXPRewardWidget_XPRewardWidget' has a wrong offset!");
static_assert(offsetof(WI_ExperiencePanel_C_EditorOnlyCreateRewardWidgets, CallFunc_AddRewardEntry_OutRewardEntryWidget_1) == 0x000050, "Member 'WI_ExperiencePanel_C_EditorOnlyCreateRewardWidgets::CallFunc_AddRewardEntry_OutRewardEntryWidget_1' has a wrong offset!");
static_assert(offsetof(WI_ExperiencePanel_C_EditorOnlyCreateRewardWidgets, CallFunc_AddRewardEntry_OutPanelSlot_1) == 0x000058, "Member 'WI_ExperiencePanel_C_EditorOnlyCreateRewardWidgets::CallFunc_AddRewardEntry_OutPanelSlot_1' has a wrong offset!");
static_assert(offsetof(WI_ExperiencePanel_C_EditorOnlyCreateRewardWidgets, CallFunc_AddRewardEntry_OutRewardEntryWidget_2) == 0x000060, "Member 'WI_ExperiencePanel_C_EditorOnlyCreateRewardWidgets::CallFunc_AddRewardEntry_OutRewardEntryWidget_2' has a wrong offset!");
static_assert(offsetof(WI_ExperiencePanel_C_EditorOnlyCreateRewardWidgets, CallFunc_AddRewardEntry_OutPanelSlot_2) == 0x000068, "Member 'WI_ExperiencePanel_C_EditorOnlyCreateRewardWidgets::CallFunc_AddRewardEntry_OutPanelSlot_2' has a wrong offset!");
static_assert(offsetof(WI_ExperiencePanel_C_EditorOnlyCreateRewardWidgets, CallFunc_GetIsPie_ReturnValue) == 0x000070, "Member 'WI_ExperiencePanel_C_EditorOnlyCreateRewardWidgets::CallFunc_GetIsPie_ReturnValue' has a wrong offset!");

// Function WI_ExperiencePanel.WI_ExperiencePanel_C.ExecuteUbergraph_WI_ExperiencePanel
// 0x00D0 (0x00D0 - 0x0000)
struct WI_ExperiencePanel_C_ExecuteUbergraph_WI_ExperiencePanel final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x0010(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWI_ExperiencePanel_RewardEntry_C*      CallFunc_CreateCurrencyRewardWidget_CurrencyRewardWidget; // 0x0030(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWI_ExperiencePanel_RewardEntry_C*      CallFunc_CreateCurrencyRewardWidget_CurrencyRewardWidget_1; // 0x0038(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWI_ExperiencePanel_RewardEntry_C*      CallFunc_AddRewardEntry_OutRewardEntryWidget;      // 0x0040(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UHorizontalBoxSlot*                     CallFunc_AddRewardEntry_OutPanelSlot;              // 0x0048(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWI_ExperiencePanel_RewardEntry_C*      CallFunc_AddRewardEntry_OutRewardEntryWidget_1;    // 0x0050(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UHorizontalBoxSlot*                     CallFunc_AddRewardEntry_OutPanelSlot_1;            // 0x0058(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class APlayerControllerJP_Match*              CallFunc_GetFirstPlayerControllerJP_Match_ReturnValue; // 0x0060(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UWI_ExperiencePanel_RewardEntry_C*      CallFunc_CreateXPRewardWidget_XPRewardWidget;      // 0x0068(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FMatchRewards                          CallFunc_GetMatchRewards_ReturnValue;              // 0x0070(0x0020)()
	class UWI_ExperiencePanel_RewardEntry_C*      CallFunc_AddRewardEntry_OutRewardEntryWidget_2;    // 0x0090(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UHorizontalBoxSlot*                     CallFunc_AddRewardEntry_OutPanelSlot_2;            // 0x0098(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FMatchRewardCurrency                   CallFunc_Array_Get_Item;                           // 0x00A0(0x000C)(NoDestructor)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B1[0x7];                                       // 0x00B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWI_ExperiencePanel_RewardEntry_C*      CallFunc_CreateCurrencyRewardWidget_CurrencyRewardWidget_2; // 0x00B8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWI_ExperiencePanel_RewardEntry_C*      CallFunc_AddRewardEntry_OutRewardEntryWidget_3;    // 0x00C0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UHorizontalBoxSlot*                     CallFunc_AddRewardEntry_OutPanelSlot_3;            // 0x00C8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WI_ExperiencePanel_C_ExecuteUbergraph_WI_ExperiencePanel) == 0x000008, "Wrong alignment on WI_ExperiencePanel_C_ExecuteUbergraph_WI_ExperiencePanel");
static_assert(sizeof(WI_ExperiencePanel_C_ExecuteUbergraph_WI_ExperiencePanel) == 0x0000D0, "Wrong size on WI_ExperiencePanel_C_ExecuteUbergraph_WI_ExperiencePanel");
static_assert(offsetof(WI_ExperiencePanel_C_ExecuteUbergraph_WI_ExperiencePanel, EntryPoint) == 0x000000, "Member 'WI_ExperiencePanel_C_ExecuteUbergraph_WI_ExperiencePanel::EntryPoint' has a wrong offset!");
static_assert(offsetof(WI_ExperiencePanel_C_ExecuteUbergraph_WI_ExperiencePanel, Temp_int_Array_Index_Variable) == 0x000004, "Member 'WI_ExperiencePanel_C_ExecuteUbergraph_WI_ExperiencePanel::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WI_ExperiencePanel_C_ExecuteUbergraph_WI_ExperiencePanel, CallFunc_Array_Length_ReturnValue) == 0x000008, "Member 'WI_ExperiencePanel_C_ExecuteUbergraph_WI_ExperiencePanel::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WI_ExperiencePanel_C_ExecuteUbergraph_WI_ExperiencePanel, CallFunc_Conv_IntToString_ReturnValue) == 0x000010, "Member 'WI_ExperiencePanel_C_ExecuteUbergraph_WI_ExperiencePanel::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(WI_ExperiencePanel_C_ExecuteUbergraph_WI_ExperiencePanel, Temp_int_Loop_Counter_Variable) == 0x000020, "Member 'WI_ExperiencePanel_C_ExecuteUbergraph_WI_ExperiencePanel::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WI_ExperiencePanel_C_ExecuteUbergraph_WI_ExperiencePanel, CallFunc_Add_IntInt_ReturnValue) == 0x000024, "Member 'WI_ExperiencePanel_C_ExecuteUbergraph_WI_ExperiencePanel::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WI_ExperiencePanel_C_ExecuteUbergraph_WI_ExperiencePanel, K2Node_Event_IsDesignTime) == 0x000028, "Member 'WI_ExperiencePanel_C_ExecuteUbergraph_WI_ExperiencePanel::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(WI_ExperiencePanel_C_ExecuteUbergraph_WI_ExperiencePanel, CallFunc_CreateCurrencyRewardWidget_CurrencyRewardWidget) == 0x000030, "Member 'WI_ExperiencePanel_C_ExecuteUbergraph_WI_ExperiencePanel::CallFunc_CreateCurrencyRewardWidget_CurrencyRewardWidget' has a wrong offset!");
static_assert(offsetof(WI_ExperiencePanel_C_ExecuteUbergraph_WI_ExperiencePanel, CallFunc_CreateCurrencyRewardWidget_CurrencyRewardWidget_1) == 0x000038, "Member 'WI_ExperiencePanel_C_ExecuteUbergraph_WI_ExperiencePanel::CallFunc_CreateCurrencyRewardWidget_CurrencyRewardWidget_1' has a wrong offset!");
static_assert(offsetof(WI_ExperiencePanel_C_ExecuteUbergraph_WI_ExperiencePanel, CallFunc_AddRewardEntry_OutRewardEntryWidget) == 0x000040, "Member 'WI_ExperiencePanel_C_ExecuteUbergraph_WI_ExperiencePanel::CallFunc_AddRewardEntry_OutRewardEntryWidget' has a wrong offset!");
static_assert(offsetof(WI_ExperiencePanel_C_ExecuteUbergraph_WI_ExperiencePanel, CallFunc_AddRewardEntry_OutPanelSlot) == 0x000048, "Member 'WI_ExperiencePanel_C_ExecuteUbergraph_WI_ExperiencePanel::CallFunc_AddRewardEntry_OutPanelSlot' has a wrong offset!");
static_assert(offsetof(WI_ExperiencePanel_C_ExecuteUbergraph_WI_ExperiencePanel, CallFunc_AddRewardEntry_OutRewardEntryWidget_1) == 0x000050, "Member 'WI_ExperiencePanel_C_ExecuteUbergraph_WI_ExperiencePanel::CallFunc_AddRewardEntry_OutRewardEntryWidget_1' has a wrong offset!");
static_assert(offsetof(WI_ExperiencePanel_C_ExecuteUbergraph_WI_ExperiencePanel, CallFunc_AddRewardEntry_OutPanelSlot_1) == 0x000058, "Member 'WI_ExperiencePanel_C_ExecuteUbergraph_WI_ExperiencePanel::CallFunc_AddRewardEntry_OutPanelSlot_1' has a wrong offset!");
static_assert(offsetof(WI_ExperiencePanel_C_ExecuteUbergraph_WI_ExperiencePanel, CallFunc_GetFirstPlayerControllerJP_Match_ReturnValue) == 0x000060, "Member 'WI_ExperiencePanel_C_ExecuteUbergraph_WI_ExperiencePanel::CallFunc_GetFirstPlayerControllerJP_Match_ReturnValue' has a wrong offset!");
static_assert(offsetof(WI_ExperiencePanel_C_ExecuteUbergraph_WI_ExperiencePanel, CallFunc_CreateXPRewardWidget_XPRewardWidget) == 0x000068, "Member 'WI_ExperiencePanel_C_ExecuteUbergraph_WI_ExperiencePanel::CallFunc_CreateXPRewardWidget_XPRewardWidget' has a wrong offset!");
static_assert(offsetof(WI_ExperiencePanel_C_ExecuteUbergraph_WI_ExperiencePanel, CallFunc_GetMatchRewards_ReturnValue) == 0x000070, "Member 'WI_ExperiencePanel_C_ExecuteUbergraph_WI_ExperiencePanel::CallFunc_GetMatchRewards_ReturnValue' has a wrong offset!");
static_assert(offsetof(WI_ExperiencePanel_C_ExecuteUbergraph_WI_ExperiencePanel, CallFunc_AddRewardEntry_OutRewardEntryWidget_2) == 0x000090, "Member 'WI_ExperiencePanel_C_ExecuteUbergraph_WI_ExperiencePanel::CallFunc_AddRewardEntry_OutRewardEntryWidget_2' has a wrong offset!");
static_assert(offsetof(WI_ExperiencePanel_C_ExecuteUbergraph_WI_ExperiencePanel, CallFunc_AddRewardEntry_OutPanelSlot_2) == 0x000098, "Member 'WI_ExperiencePanel_C_ExecuteUbergraph_WI_ExperiencePanel::CallFunc_AddRewardEntry_OutPanelSlot_2' has a wrong offset!");
static_assert(offsetof(WI_ExperiencePanel_C_ExecuteUbergraph_WI_ExperiencePanel, CallFunc_Array_Get_Item) == 0x0000A0, "Member 'WI_ExperiencePanel_C_ExecuteUbergraph_WI_ExperiencePanel::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WI_ExperiencePanel_C_ExecuteUbergraph_WI_ExperiencePanel, CallFunc_Array_Length_ReturnValue_1) == 0x0000AC, "Member 'WI_ExperiencePanel_C_ExecuteUbergraph_WI_ExperiencePanel::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WI_ExperiencePanel_C_ExecuteUbergraph_WI_ExperiencePanel, CallFunc_Less_IntInt_ReturnValue) == 0x0000B0, "Member 'WI_ExperiencePanel_C_ExecuteUbergraph_WI_ExperiencePanel::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WI_ExperiencePanel_C_ExecuteUbergraph_WI_ExperiencePanel, CallFunc_CreateCurrencyRewardWidget_CurrencyRewardWidget_2) == 0x0000B8, "Member 'WI_ExperiencePanel_C_ExecuteUbergraph_WI_ExperiencePanel::CallFunc_CreateCurrencyRewardWidget_CurrencyRewardWidget_2' has a wrong offset!");
static_assert(offsetof(WI_ExperiencePanel_C_ExecuteUbergraph_WI_ExperiencePanel, CallFunc_AddRewardEntry_OutRewardEntryWidget_3) == 0x0000C0, "Member 'WI_ExperiencePanel_C_ExecuteUbergraph_WI_ExperiencePanel::CallFunc_AddRewardEntry_OutRewardEntryWidget_3' has a wrong offset!");
static_assert(offsetof(WI_ExperiencePanel_C_ExecuteUbergraph_WI_ExperiencePanel, CallFunc_AddRewardEntry_OutPanelSlot_3) == 0x0000C8, "Member 'WI_ExperiencePanel_C_ExecuteUbergraph_WI_ExperiencePanel::CallFunc_AddRewardEntry_OutPanelSlot_3' has a wrong offset!");

// Function WI_ExperiencePanel.WI_ExperiencePanel_C.GetNeighborNameFromPlayerState
// 0x0060 (0x0060 - 0x0000)
struct WI_ExperiencePanel_C_GetNeighborNameFromPlayerState final
{
public:
	class APlayerStateJP*                         PlayerStateJP;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FText                                   Name_0;                                            // 0x0008(0x0010)(Parm, OutParm)
	TSoftObjectPtr<class UNeighborDefinition>     CallFunc_GetNeighborDefinition_ReturnValue;        // 0x0018(0x0028)(UObjectWrapper, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidSoftObjectReference_ReturnValue;   // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_LoadAsset_Blocking_ReturnValue;           // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UNeighborDefinition*                    K2Node_DynamicCast_AsNeighbor_Definition;          // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WI_ExperiencePanel_C_GetNeighborNameFromPlayerState) == 0x000008, "Wrong alignment on WI_ExperiencePanel_C_GetNeighborNameFromPlayerState");
static_assert(sizeof(WI_ExperiencePanel_C_GetNeighborNameFromPlayerState) == 0x000060, "Wrong size on WI_ExperiencePanel_C_GetNeighborNameFromPlayerState");
static_assert(offsetof(WI_ExperiencePanel_C_GetNeighborNameFromPlayerState, PlayerStateJP) == 0x000000, "Member 'WI_ExperiencePanel_C_GetNeighborNameFromPlayerState::PlayerStateJP' has a wrong offset!");
static_assert(offsetof(WI_ExperiencePanel_C_GetNeighborNameFromPlayerState, Name_0) == 0x000008, "Member 'WI_ExperiencePanel_C_GetNeighborNameFromPlayerState::Name_0' has a wrong offset!");
static_assert(offsetof(WI_ExperiencePanel_C_GetNeighborNameFromPlayerState, CallFunc_GetNeighborDefinition_ReturnValue) == 0x000018, "Member 'WI_ExperiencePanel_C_GetNeighborNameFromPlayerState::CallFunc_GetNeighborDefinition_ReturnValue' has a wrong offset!");
static_assert(offsetof(WI_ExperiencePanel_C_GetNeighborNameFromPlayerState, CallFunc_IsValidSoftObjectReference_ReturnValue) == 0x000040, "Member 'WI_ExperiencePanel_C_GetNeighborNameFromPlayerState::CallFunc_IsValidSoftObjectReference_ReturnValue' has a wrong offset!");
static_assert(offsetof(WI_ExperiencePanel_C_GetNeighborNameFromPlayerState, CallFunc_LoadAsset_Blocking_ReturnValue) == 0x000048, "Member 'WI_ExperiencePanel_C_GetNeighborNameFromPlayerState::CallFunc_LoadAsset_Blocking_ReturnValue' has a wrong offset!");
static_assert(offsetof(WI_ExperiencePanel_C_GetNeighborNameFromPlayerState, K2Node_DynamicCast_AsNeighbor_Definition) == 0x000050, "Member 'WI_ExperiencePanel_C_GetNeighborNameFromPlayerState::K2Node_DynamicCast_AsNeighbor_Definition' has a wrong offset!");
static_assert(offsetof(WI_ExperiencePanel_C_GetNeighborNameFromPlayerState, K2Node_DynamicCast_bSuccess) == 0x000058, "Member 'WI_ExperiencePanel_C_GetNeighborNameFromPlayerState::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function WI_ExperiencePanel.WI_ExperiencePanel_C.GetReasonText
// 0x0068 (0x0068 - 0x0000)
struct WI_ExperiencePanel_C_GetReasonText final
{
public:
	class FText                                   ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ReturnParm)
	class APlayerControllerJP_Match*              CallFunc_GetLocalPlayerControllerJP_Match_ReturnValue; // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APlayerStateJP*                         K2Node_DynamicCast_AsPlayer_State_JP;              // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTeam                                  CallFunc_GetTeam_ReturnValue;                      // 0x0028(0x0038)(ConstParm, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WI_ExperiencePanel_C_GetReasonText) == 0x000008, "Wrong alignment on WI_ExperiencePanel_C_GetReasonText");
static_assert(sizeof(WI_ExperiencePanel_C_GetReasonText) == 0x000068, "Wrong size on WI_ExperiencePanel_C_GetReasonText");
static_assert(offsetof(WI_ExperiencePanel_C_GetReasonText, ReturnValue) == 0x000000, "Member 'WI_ExperiencePanel_C_GetReasonText::ReturnValue' has a wrong offset!");
static_assert(offsetof(WI_ExperiencePanel_C_GetReasonText, CallFunc_GetLocalPlayerControllerJP_Match_ReturnValue) == 0x000010, "Member 'WI_ExperiencePanel_C_GetReasonText::CallFunc_GetLocalPlayerControllerJP_Match_ReturnValue' has a wrong offset!");
static_assert(offsetof(WI_ExperiencePanel_C_GetReasonText, K2Node_DynamicCast_AsPlayer_State_JP) == 0x000018, "Member 'WI_ExperiencePanel_C_GetReasonText::K2Node_DynamicCast_AsPlayer_State_JP' has a wrong offset!");
static_assert(offsetof(WI_ExperiencePanel_C_GetReasonText, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'WI_ExperiencePanel_C_GetReasonText::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WI_ExperiencePanel_C_GetReasonText, CallFunc_GetTeam_ReturnValue) == 0x000028, "Member 'WI_ExperiencePanel_C_GetReasonText::CallFunc_GetTeam_ReturnValue' has a wrong offset!");
static_assert(offsetof(WI_ExperiencePanel_C_GetReasonText, CallFunc_IsValid_ReturnValue) == 0x000060, "Member 'WI_ExperiencePanel_C_GetReasonText::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function WI_ExperiencePanel.WI_ExperiencePanel_C.GetUserFacingReason
// 0x0006 (0x0006 - 0x0000)
struct WI_ExperiencePanel_C_GetUserFacingReason final
{
public:
	bool                                          IsOnWinningTeam_0;                                 // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         UserFacingReason;                                  // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Temp_byte_Variable;                                // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Temp_byte_Variable_1;                              // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         K2Node_Select_Default;                             // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WI_ExperiencePanel_C_GetUserFacingReason) == 0x000001, "Wrong alignment on WI_ExperiencePanel_C_GetUserFacingReason");
static_assert(sizeof(WI_ExperiencePanel_C_GetUserFacingReason) == 0x000006, "Wrong size on WI_ExperiencePanel_C_GetUserFacingReason");
static_assert(offsetof(WI_ExperiencePanel_C_GetUserFacingReason, IsOnWinningTeam_0) == 0x000000, "Member 'WI_ExperiencePanel_C_GetUserFacingReason::IsOnWinningTeam_0' has a wrong offset!");
static_assert(offsetof(WI_ExperiencePanel_C_GetUserFacingReason, UserFacingReason) == 0x000001, "Member 'WI_ExperiencePanel_C_GetUserFacingReason::UserFacingReason' has a wrong offset!");
static_assert(offsetof(WI_ExperiencePanel_C_GetUserFacingReason, Temp_bool_Variable) == 0x000002, "Member 'WI_ExperiencePanel_C_GetUserFacingReason::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WI_ExperiencePanel_C_GetUserFacingReason, Temp_byte_Variable) == 0x000003, "Member 'WI_ExperiencePanel_C_GetUserFacingReason::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WI_ExperiencePanel_C_GetUserFacingReason, Temp_byte_Variable_1) == 0x000004, "Member 'WI_ExperiencePanel_C_GetUserFacingReason::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WI_ExperiencePanel_C_GetUserFacingReason, K2Node_Select_Default) == 0x000005, "Member 'WI_ExperiencePanel_C_GetUserFacingReason::K2Node_Select_Default' has a wrong offset!");

// Function WI_ExperiencePanel.WI_ExperiencePanel_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct WI_ExperiencePanel_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WI_ExperiencePanel_C_PreConstruct) == 0x000001, "Wrong alignment on WI_ExperiencePanel_C_PreConstruct");
static_assert(sizeof(WI_ExperiencePanel_C_PreConstruct) == 0x000001, "Wrong size on WI_ExperiencePanel_C_PreConstruct");
static_assert(offsetof(WI_ExperiencePanel_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'WI_ExperiencePanel_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function WI_ExperiencePanel.WI_ExperiencePanel_C.RemoveAllRewardEntries
// 0x0020 (0x0020 - 0x0000)
struct WI_ExperiencePanel_C_RemoveAllRewardEntries final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWI_ExperiencePanel_RewardEntry_C*      CallFunc_Array_Get_Item;                           // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WI_ExperiencePanel_C_RemoveAllRewardEntries) == 0x000008, "Wrong alignment on WI_ExperiencePanel_C_RemoveAllRewardEntries");
static_assert(sizeof(WI_ExperiencePanel_C_RemoveAllRewardEntries) == 0x000020, "Wrong size on WI_ExperiencePanel_C_RemoveAllRewardEntries");
static_assert(offsetof(WI_ExperiencePanel_C_RemoveAllRewardEntries, Temp_int_Array_Index_Variable) == 0x000000, "Member 'WI_ExperiencePanel_C_RemoveAllRewardEntries::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WI_ExperiencePanel_C_RemoveAllRewardEntries, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'WI_ExperiencePanel_C_RemoveAllRewardEntries::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WI_ExperiencePanel_C_RemoveAllRewardEntries, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'WI_ExperiencePanel_C_RemoveAllRewardEntries::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WI_ExperiencePanel_C_RemoveAllRewardEntries, CallFunc_Array_Get_Item) == 0x000010, "Member 'WI_ExperiencePanel_C_RemoveAllRewardEntries::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WI_ExperiencePanel_C_RemoveAllRewardEntries, CallFunc_Array_Length_ReturnValue) == 0x000018, "Member 'WI_ExperiencePanel_C_RemoveAllRewardEntries::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WI_ExperiencePanel_C_RemoveAllRewardEntries, CallFunc_Less_IntInt_ReturnValue) == 0x00001C, "Member 'WI_ExperiencePanel_C_RemoveAllRewardEntries::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function WI_ExperiencePanel.WI_ExperiencePanel_C.SetIsOnWinningTeam
// 0x0001 (0x0001 - 0x0000)
struct WI_ExperiencePanel_C_SetIsOnWinningTeam final
{
public:
	bool                                          IsOnWinningTeam_0;                                 // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WI_ExperiencePanel_C_SetIsOnWinningTeam) == 0x000001, "Wrong alignment on WI_ExperiencePanel_C_SetIsOnWinningTeam");
static_assert(sizeof(WI_ExperiencePanel_C_SetIsOnWinningTeam) == 0x000001, "Wrong size on WI_ExperiencePanel_C_SetIsOnWinningTeam");
static_assert(offsetof(WI_ExperiencePanel_C_SetIsOnWinningTeam, IsOnWinningTeam_0) == 0x000000, "Member 'WI_ExperiencePanel_C_SetIsOnWinningTeam::IsOnWinningTeam_0' has a wrong offset!");

}

