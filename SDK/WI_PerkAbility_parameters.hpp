#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WI_PerkAbility

#include "Basic.hpp"

#include "GameplayTags_structs.hpp"
#include "SlateCore_structs.hpp"
#include "UMG_structs.hpp"
#include "S_PerkAbilityWidgetTriggerCooldownMessage_structs.hpp"


namespace SDK::Params
{

// Function WI_PerkAbility.WI_PerkAbility_C.ExecuteUbergraph_WI_PerkAbility
// 0x0190 (0x0190 - 0x0000)
struct WI_PerkAbility_C_ExecuteUbergraph_WI_PerkAbility final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_PerkAbilityWidgetTriggerCooldownMessage Temp_struct_Variable;                              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAsyncAction_ListenForGameplayMessage*  K2Node_CustomEvent_ProxyObject;                    // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           K2Node_CustomEvent_ActualChannel;                  // 0x0018(0x0008)(NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UAsyncAction_ListenForGameplayMessage* ProxyObject, const struct FGameplayTag& ActualChannel)> K2Node_CreateDelegate_OutputDelegate;              // 0x0020(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FS_PerkAbilityWidgetTriggerCooldownMessage Temp_struct_Variable_1;                            // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           Temp_struct_Variable_2;                            // 0x0038(0x0008)(NoDestructor, HasGetValueTypeHash)
	class UAsyncAction_ListenForGameplayMessage*  Temp_object_Variable;                              // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetPayload_ReturnValue;                   // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAsyncAction_ListenForGameplayMessage*  CallFunc_ListenForGameplayMessages_ReturnValue;    // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5A[0x6];                                       // 0x005A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameplayAbilityIW*                     K2Node_CustomEvent_TargetGameplayAbility;          // 0x0060(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_CustomEvent_TimeSinceAbilityAdded;          // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWI_PerkAbilityContainer_C*             K2Node_CustomEvent_AbilityContainer;               // 0x0070(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x0078(0x0038)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_InDeltaTime;                          // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B4[0x4];                                       // 0x00B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationForward_ReturnValue;         // 0x00B8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TSoftObjectPtr<class UTexture2D>              CallFunc_GetIcon_ReturnValue;                      // 0x00C0(0x0028)(UObjectWrapper, HasGetValueTypeHash)
	TSoftObjectPtr<class UTexture2D>              CallFunc_GetIcon_ReturnValue_1;                    // 0x00E8(0x0028)(UObjectWrapper, HasGetValueTypeHash)
	float                                         CallFunc_K2_GetCooldownTimeRemainingAndDuration_TimeRemaining; // 0x0110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_K2_GetCooldownTimeRemainingAndDuration_CooldownDuration; // 0x0114(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_GetCooldownTimeRemainingAndDuration_ReturnValue; // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_119[0x7];                                      // 0x0119(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0128(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_129[0x7];                                      // 0x0129(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0130(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_K2_GetCooldownTimeRemainingAndDuration_TimeRemaining_1; // 0x0138(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_K2_GetCooldownTimeRemainingAndDuration_CooldownDuration_1; // 0x013C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_GetCooldownTimeRemainingAndDuration_ReturnValue_1; // 0x0140(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_141[0x7];                                      // 0x0141(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_1;        // 0x0148(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_1;      // 0x0150(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue;       // 0x0158(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_159[0x7];                                      // 0x0159(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Divide_DoubleDouble_B_ImplicitCast;       // 0x0160(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_A_ImplicitCast;     // 0x0168(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_OnCooldownTick_TimeRemaining_ImplicitCast; // 0x0170(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_B_ImplicitCast;     // 0x0178(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_A_ImplicitCast_1;   // 0x0180(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_B_ImplicitCast_1;     // 0x0188(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WI_PerkAbility_C_ExecuteUbergraph_WI_PerkAbility) == 0x000008, "Wrong alignment on WI_PerkAbility_C_ExecuteUbergraph_WI_PerkAbility");
static_assert(sizeof(WI_PerkAbility_C_ExecuteUbergraph_WI_PerkAbility) == 0x000190, "Wrong size on WI_PerkAbility_C_ExecuteUbergraph_WI_PerkAbility");
static_assert(offsetof(WI_PerkAbility_C_ExecuteUbergraph_WI_PerkAbility, EntryPoint) == 0x000000, "Member 'WI_PerkAbility_C_ExecuteUbergraph_WI_PerkAbility::EntryPoint' has a wrong offset!");
static_assert(offsetof(WI_PerkAbility_C_ExecuteUbergraph_WI_PerkAbility, Temp_struct_Variable) == 0x000008, "Member 'WI_PerkAbility_C_ExecuteUbergraph_WI_PerkAbility::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(WI_PerkAbility_C_ExecuteUbergraph_WI_PerkAbility, K2Node_CustomEvent_ProxyObject) == 0x000010, "Member 'WI_PerkAbility_C_ExecuteUbergraph_WI_PerkAbility::K2Node_CustomEvent_ProxyObject' has a wrong offset!");
static_assert(offsetof(WI_PerkAbility_C_ExecuteUbergraph_WI_PerkAbility, K2Node_CustomEvent_ActualChannel) == 0x000018, "Member 'WI_PerkAbility_C_ExecuteUbergraph_WI_PerkAbility::K2Node_CustomEvent_ActualChannel' has a wrong offset!");
static_assert(offsetof(WI_PerkAbility_C_ExecuteUbergraph_WI_PerkAbility, K2Node_CreateDelegate_OutputDelegate) == 0x000020, "Member 'WI_PerkAbility_C_ExecuteUbergraph_WI_PerkAbility::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WI_PerkAbility_C_ExecuteUbergraph_WI_PerkAbility, Temp_struct_Variable_1) == 0x000030, "Member 'WI_PerkAbility_C_ExecuteUbergraph_WI_PerkAbility::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(WI_PerkAbility_C_ExecuteUbergraph_WI_PerkAbility, Temp_struct_Variable_2) == 0x000038, "Member 'WI_PerkAbility_C_ExecuteUbergraph_WI_PerkAbility::Temp_struct_Variable_2' has a wrong offset!");
static_assert(offsetof(WI_PerkAbility_C_ExecuteUbergraph_WI_PerkAbility, Temp_object_Variable) == 0x000040, "Member 'WI_PerkAbility_C_ExecuteUbergraph_WI_PerkAbility::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(WI_PerkAbility_C_ExecuteUbergraph_WI_PerkAbility, CallFunc_GetPayload_ReturnValue) == 0x000048, "Member 'WI_PerkAbility_C_ExecuteUbergraph_WI_PerkAbility::CallFunc_GetPayload_ReturnValue' has a wrong offset!");
static_assert(offsetof(WI_PerkAbility_C_ExecuteUbergraph_WI_PerkAbility, CallFunc_ListenForGameplayMessages_ReturnValue) == 0x000050, "Member 'WI_PerkAbility_C_ExecuteUbergraph_WI_PerkAbility::CallFunc_ListenForGameplayMessages_ReturnValue' has a wrong offset!");
static_assert(offsetof(WI_PerkAbility_C_ExecuteUbergraph_WI_PerkAbility, K2Node_Event_IsDesignTime) == 0x000058, "Member 'WI_PerkAbility_C_ExecuteUbergraph_WI_PerkAbility::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(WI_PerkAbility_C_ExecuteUbergraph_WI_PerkAbility, CallFunc_IsValid_ReturnValue) == 0x000059, "Member 'WI_PerkAbility_C_ExecuteUbergraph_WI_PerkAbility::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WI_PerkAbility_C_ExecuteUbergraph_WI_PerkAbility, K2Node_CustomEvent_TargetGameplayAbility) == 0x000060, "Member 'WI_PerkAbility_C_ExecuteUbergraph_WI_PerkAbility::K2Node_CustomEvent_TargetGameplayAbility' has a wrong offset!");
static_assert(offsetof(WI_PerkAbility_C_ExecuteUbergraph_WI_PerkAbility, K2Node_CustomEvent_TimeSinceAbilityAdded) == 0x000068, "Member 'WI_PerkAbility_C_ExecuteUbergraph_WI_PerkAbility::K2Node_CustomEvent_TimeSinceAbilityAdded' has a wrong offset!");
static_assert(offsetof(WI_PerkAbility_C_ExecuteUbergraph_WI_PerkAbility, K2Node_CustomEvent_AbilityContainer) == 0x000070, "Member 'WI_PerkAbility_C_ExecuteUbergraph_WI_PerkAbility::K2Node_CustomEvent_AbilityContainer' has a wrong offset!");
static_assert(offsetof(WI_PerkAbility_C_ExecuteUbergraph_WI_PerkAbility, K2Node_Event_MyGeometry) == 0x000078, "Member 'WI_PerkAbility_C_ExecuteUbergraph_WI_PerkAbility::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(WI_PerkAbility_C_ExecuteUbergraph_WI_PerkAbility, K2Node_Event_InDeltaTime) == 0x0000B0, "Member 'WI_PerkAbility_C_ExecuteUbergraph_WI_PerkAbility::K2Node_Event_InDeltaTime' has a wrong offset!");
static_assert(offsetof(WI_PerkAbility_C_ExecuteUbergraph_WI_PerkAbility, CallFunc_PlayAnimationForward_ReturnValue) == 0x0000B8, "Member 'WI_PerkAbility_C_ExecuteUbergraph_WI_PerkAbility::CallFunc_PlayAnimationForward_ReturnValue' has a wrong offset!");
static_assert(offsetof(WI_PerkAbility_C_ExecuteUbergraph_WI_PerkAbility, CallFunc_GetIcon_ReturnValue) == 0x0000C0, "Member 'WI_PerkAbility_C_ExecuteUbergraph_WI_PerkAbility::CallFunc_GetIcon_ReturnValue' has a wrong offset!");
static_assert(offsetof(WI_PerkAbility_C_ExecuteUbergraph_WI_PerkAbility, CallFunc_GetIcon_ReturnValue_1) == 0x0000E8, "Member 'WI_PerkAbility_C_ExecuteUbergraph_WI_PerkAbility::CallFunc_GetIcon_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WI_PerkAbility_C_ExecuteUbergraph_WI_PerkAbility, CallFunc_K2_GetCooldownTimeRemainingAndDuration_TimeRemaining) == 0x000110, "Member 'WI_PerkAbility_C_ExecuteUbergraph_WI_PerkAbility::CallFunc_K2_GetCooldownTimeRemainingAndDuration_TimeRemaining' has a wrong offset!");
static_assert(offsetof(WI_PerkAbility_C_ExecuteUbergraph_WI_PerkAbility, CallFunc_K2_GetCooldownTimeRemainingAndDuration_CooldownDuration) == 0x000114, "Member 'WI_PerkAbility_C_ExecuteUbergraph_WI_PerkAbility::CallFunc_K2_GetCooldownTimeRemainingAndDuration_CooldownDuration' has a wrong offset!");
static_assert(offsetof(WI_PerkAbility_C_ExecuteUbergraph_WI_PerkAbility, CallFunc_K2_GetCooldownTimeRemainingAndDuration_ReturnValue) == 0x000118, "Member 'WI_PerkAbility_C_ExecuteUbergraph_WI_PerkAbility::CallFunc_K2_GetCooldownTimeRemainingAndDuration_ReturnValue' has a wrong offset!");
static_assert(offsetof(WI_PerkAbility_C_ExecuteUbergraph_WI_PerkAbility, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000120, "Member 'WI_PerkAbility_C_ExecuteUbergraph_WI_PerkAbility::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WI_PerkAbility_C_ExecuteUbergraph_WI_PerkAbility, CallFunc_IsValid_ReturnValue_1) == 0x000128, "Member 'WI_PerkAbility_C_ExecuteUbergraph_WI_PerkAbility::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WI_PerkAbility_C_ExecuteUbergraph_WI_PerkAbility, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000130, "Member 'WI_PerkAbility_C_ExecuteUbergraph_WI_PerkAbility::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WI_PerkAbility_C_ExecuteUbergraph_WI_PerkAbility, CallFunc_K2_GetCooldownTimeRemainingAndDuration_TimeRemaining_1) == 0x000138, "Member 'WI_PerkAbility_C_ExecuteUbergraph_WI_PerkAbility::CallFunc_K2_GetCooldownTimeRemainingAndDuration_TimeRemaining_1' has a wrong offset!");
static_assert(offsetof(WI_PerkAbility_C_ExecuteUbergraph_WI_PerkAbility, CallFunc_K2_GetCooldownTimeRemainingAndDuration_CooldownDuration_1) == 0x00013C, "Member 'WI_PerkAbility_C_ExecuteUbergraph_WI_PerkAbility::CallFunc_K2_GetCooldownTimeRemainingAndDuration_CooldownDuration_1' has a wrong offset!");
static_assert(offsetof(WI_PerkAbility_C_ExecuteUbergraph_WI_PerkAbility, CallFunc_K2_GetCooldownTimeRemainingAndDuration_ReturnValue_1) == 0x000140, "Member 'WI_PerkAbility_C_ExecuteUbergraph_WI_PerkAbility::CallFunc_K2_GetCooldownTimeRemainingAndDuration_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WI_PerkAbility_C_ExecuteUbergraph_WI_PerkAbility, CallFunc_Divide_DoubleDouble_ReturnValue_1) == 0x000148, "Member 'WI_PerkAbility_C_ExecuteUbergraph_WI_PerkAbility::CallFunc_Divide_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WI_PerkAbility_C_ExecuteUbergraph_WI_PerkAbility, CallFunc_Subtract_DoubleDouble_ReturnValue_1) == 0x000150, "Member 'WI_PerkAbility_C_ExecuteUbergraph_WI_PerkAbility::CallFunc_Subtract_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WI_PerkAbility_C_ExecuteUbergraph_WI_PerkAbility, CallFunc_LessEqual_DoubleDouble_ReturnValue) == 0x000158, "Member 'WI_PerkAbility_C_ExecuteUbergraph_WI_PerkAbility::CallFunc_LessEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WI_PerkAbility_C_ExecuteUbergraph_WI_PerkAbility, CallFunc_Divide_DoubleDouble_B_ImplicitCast) == 0x000160, "Member 'WI_PerkAbility_C_ExecuteUbergraph_WI_PerkAbility::CallFunc_Divide_DoubleDouble_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WI_PerkAbility_C_ExecuteUbergraph_WI_PerkAbility, CallFunc_Subtract_DoubleDouble_A_ImplicitCast) == 0x000168, "Member 'WI_PerkAbility_C_ExecuteUbergraph_WI_PerkAbility::CallFunc_Subtract_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WI_PerkAbility_C_ExecuteUbergraph_WI_PerkAbility, CallFunc_OnCooldownTick_TimeRemaining_ImplicitCast) == 0x000170, "Member 'WI_PerkAbility_C_ExecuteUbergraph_WI_PerkAbility::CallFunc_OnCooldownTick_TimeRemaining_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WI_PerkAbility_C_ExecuteUbergraph_WI_PerkAbility, CallFunc_Subtract_DoubleDouble_B_ImplicitCast) == 0x000178, "Member 'WI_PerkAbility_C_ExecuteUbergraph_WI_PerkAbility::CallFunc_Subtract_DoubleDouble_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WI_PerkAbility_C_ExecuteUbergraph_WI_PerkAbility, CallFunc_Subtract_DoubleDouble_A_ImplicitCast_1) == 0x000180, "Member 'WI_PerkAbility_C_ExecuteUbergraph_WI_PerkAbility::CallFunc_Subtract_DoubleDouble_A_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(WI_PerkAbility_C_ExecuteUbergraph_WI_PerkAbility, CallFunc_Divide_DoubleDouble_B_ImplicitCast_1) == 0x000188, "Member 'WI_PerkAbility_C_ExecuteUbergraph_WI_PerkAbility::CallFunc_Divide_DoubleDouble_B_ImplicitCast_1' has a wrong offset!");

// Function WI_PerkAbility.WI_PerkAbility_C.GetCooldownText
// 0x0068 (0x0068 - 0x0000)
struct WI_PerkAbility_C_GetCooldownText final
{
public:
	double                                        TimeRemaining;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 ReturnValue;                                       // 0x0008(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Round_ReturnValue;                        // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x0030(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_FCeil_ReturnValue;                        // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0048(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_1;           // 0x0058(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(WI_PerkAbility_C_GetCooldownText) == 0x000008, "Wrong alignment on WI_PerkAbility_C_GetCooldownText");
static_assert(sizeof(WI_PerkAbility_C_GetCooldownText) == 0x000068, "Wrong size on WI_PerkAbility_C_GetCooldownText");
static_assert(offsetof(WI_PerkAbility_C_GetCooldownText, TimeRemaining) == 0x000000, "Member 'WI_PerkAbility_C_GetCooldownText::TimeRemaining' has a wrong offset!");
static_assert(offsetof(WI_PerkAbility_C_GetCooldownText, ReturnValue) == 0x000008, "Member 'WI_PerkAbility_C_GetCooldownText::ReturnValue' has a wrong offset!");
static_assert(offsetof(WI_PerkAbility_C_GetCooldownText, CallFunc_Less_DoubleDouble_ReturnValue) == 0x000018, "Member 'WI_PerkAbility_C_GetCooldownText::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WI_PerkAbility_C_GetCooldownText, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000020, "Member 'WI_PerkAbility_C_GetCooldownText::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WI_PerkAbility_C_GetCooldownText, CallFunc_Round_ReturnValue) == 0x000028, "Member 'WI_PerkAbility_C_GetCooldownText::CallFunc_Round_ReturnValue' has a wrong offset!");
static_assert(offsetof(WI_PerkAbility_C_GetCooldownText, CallFunc_Conv_IntToString_ReturnValue) == 0x000030, "Member 'WI_PerkAbility_C_GetCooldownText::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(WI_PerkAbility_C_GetCooldownText, CallFunc_FCeil_ReturnValue) == 0x000040, "Member 'WI_PerkAbility_C_GetCooldownText::CallFunc_FCeil_ReturnValue' has a wrong offset!");
static_assert(offsetof(WI_PerkAbility_C_GetCooldownText, CallFunc_Concat_StrStr_ReturnValue) == 0x000048, "Member 'WI_PerkAbility_C_GetCooldownText::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(WI_PerkAbility_C_GetCooldownText, CallFunc_Conv_IntToString_ReturnValue_1) == 0x000058, "Member 'WI_PerkAbility_C_GetCooldownText::CallFunc_Conv_IntToString_ReturnValue_1' has a wrong offset!");

// Function WI_PerkAbility.WI_PerkAbility_C.HasValidCooldownTime
// 0x0028 (0x0028 - 0x0000)
struct WI_PerkAbility_C_HasValidCooldownTime final
{
public:
	class UGameplayAbilityIW*                     Ability;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          ValidCooldownTime;                                 // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_K2_GetCooldownTimeRemainingAndDuration_TimeRemaining; // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_K2_GetCooldownTimeRemainingAndDuration_CooldownDuration; // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_GetCooldownTimeRemainingAndDuration_ReturnValue; // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_16[0x2];                                       // 0x0016(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_VariableSet_CooldownDuration_ImplicitCast;  // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Greater_DoubleDouble_A_ImplicitCast;      // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WI_PerkAbility_C_HasValidCooldownTime) == 0x000008, "Wrong alignment on WI_PerkAbility_C_HasValidCooldownTime");
static_assert(sizeof(WI_PerkAbility_C_HasValidCooldownTime) == 0x000028, "Wrong size on WI_PerkAbility_C_HasValidCooldownTime");
static_assert(offsetof(WI_PerkAbility_C_HasValidCooldownTime, Ability) == 0x000000, "Member 'WI_PerkAbility_C_HasValidCooldownTime::Ability' has a wrong offset!");
static_assert(offsetof(WI_PerkAbility_C_HasValidCooldownTime, ValidCooldownTime) == 0x000008, "Member 'WI_PerkAbility_C_HasValidCooldownTime::ValidCooldownTime' has a wrong offset!");
static_assert(offsetof(WI_PerkAbility_C_HasValidCooldownTime, CallFunc_K2_GetCooldownTimeRemainingAndDuration_TimeRemaining) == 0x00000C, "Member 'WI_PerkAbility_C_HasValidCooldownTime::CallFunc_K2_GetCooldownTimeRemainingAndDuration_TimeRemaining' has a wrong offset!");
static_assert(offsetof(WI_PerkAbility_C_HasValidCooldownTime, CallFunc_K2_GetCooldownTimeRemainingAndDuration_CooldownDuration) == 0x000010, "Member 'WI_PerkAbility_C_HasValidCooldownTime::CallFunc_K2_GetCooldownTimeRemainingAndDuration_CooldownDuration' has a wrong offset!");
static_assert(offsetof(WI_PerkAbility_C_HasValidCooldownTime, CallFunc_K2_GetCooldownTimeRemainingAndDuration_ReturnValue) == 0x000014, "Member 'WI_PerkAbility_C_HasValidCooldownTime::CallFunc_K2_GetCooldownTimeRemainingAndDuration_ReturnValue' has a wrong offset!");
static_assert(offsetof(WI_PerkAbility_C_HasValidCooldownTime, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000015, "Member 'WI_PerkAbility_C_HasValidCooldownTime::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WI_PerkAbility_C_HasValidCooldownTime, K2Node_VariableSet_CooldownDuration_ImplicitCast) == 0x000018, "Member 'WI_PerkAbility_C_HasValidCooldownTime::K2Node_VariableSet_CooldownDuration_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WI_PerkAbility_C_HasValidCooldownTime, CallFunc_Greater_DoubleDouble_A_ImplicitCast) == 0x000020, "Member 'WI_PerkAbility_C_HasValidCooldownTime::CallFunc_Greater_DoubleDouble_A_ImplicitCast' has a wrong offset!");

// Function WI_PerkAbility.WI_PerkAbility_C.InitializePerkAbilityWidget
// 0x0018 (0x0018 - 0x0000)
struct WI_PerkAbility_C_InitializePerkAbilityWidget final
{
public:
	class UGameplayAbilityIW*                     TargetGameplayAbility;                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        TimeSinceAbilityAdded;                             // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWI_PerkAbilityContainer_C*             AbilityContainer;                                  // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WI_PerkAbility_C_InitializePerkAbilityWidget) == 0x000008, "Wrong alignment on WI_PerkAbility_C_InitializePerkAbilityWidget");
static_assert(sizeof(WI_PerkAbility_C_InitializePerkAbilityWidget) == 0x000018, "Wrong size on WI_PerkAbility_C_InitializePerkAbilityWidget");
static_assert(offsetof(WI_PerkAbility_C_InitializePerkAbilityWidget, TargetGameplayAbility) == 0x000000, "Member 'WI_PerkAbility_C_InitializePerkAbilityWidget::TargetGameplayAbility' has a wrong offset!");
static_assert(offsetof(WI_PerkAbility_C_InitializePerkAbilityWidget, TimeSinceAbilityAdded) == 0x000008, "Member 'WI_PerkAbility_C_InitializePerkAbilityWidget::TimeSinceAbilityAdded' has a wrong offset!");
static_assert(offsetof(WI_PerkAbility_C_InitializePerkAbilityWidget, AbilityContainer) == 0x000010, "Member 'WI_PerkAbility_C_InitializePerkAbilityWidget::AbilityContainer' has a wrong offset!");

// Function WI_PerkAbility.WI_PerkAbility_C.OnCooldownStarted
// 0x0040 (0x0040 - 0x0000)
struct WI_PerkAbility_C_OnCooldownStarted final
{
public:
	double                                        TimeRemaining;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CooldownDuration_0;                                // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        PercentageDone;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FCeil_ReturnValue;                        // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x0028(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	float                                         CallFunc_SetProgressBarFillFraction_InPercent_ImplicitCast; // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WI_PerkAbility_C_OnCooldownStarted) == 0x000008, "Wrong alignment on WI_PerkAbility_C_OnCooldownStarted");
static_assert(sizeof(WI_PerkAbility_C_OnCooldownStarted) == 0x000040, "Wrong size on WI_PerkAbility_C_OnCooldownStarted");
static_assert(offsetof(WI_PerkAbility_C_OnCooldownStarted, TimeRemaining) == 0x000000, "Member 'WI_PerkAbility_C_OnCooldownStarted::TimeRemaining' has a wrong offset!");
static_assert(offsetof(WI_PerkAbility_C_OnCooldownStarted, CooldownDuration_0) == 0x000008, "Member 'WI_PerkAbility_C_OnCooldownStarted::CooldownDuration_0' has a wrong offset!");
static_assert(offsetof(WI_PerkAbility_C_OnCooldownStarted, PercentageDone) == 0x000010, "Member 'WI_PerkAbility_C_OnCooldownStarted::PercentageDone' has a wrong offset!");
static_assert(offsetof(WI_PerkAbility_C_OnCooldownStarted, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000018, "Member 'WI_PerkAbility_C_OnCooldownStarted::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WI_PerkAbility_C_OnCooldownStarted, CallFunc_FCeil_ReturnValue) == 0x000020, "Member 'WI_PerkAbility_C_OnCooldownStarted::CallFunc_FCeil_ReturnValue' has a wrong offset!");
static_assert(offsetof(WI_PerkAbility_C_OnCooldownStarted, CallFunc_Conv_IntToString_ReturnValue) == 0x000028, "Member 'WI_PerkAbility_C_OnCooldownStarted::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(WI_PerkAbility_C_OnCooldownStarted, CallFunc_SetProgressBarFillFraction_InPercent_ImplicitCast) == 0x000038, "Member 'WI_PerkAbility_C_OnCooldownStarted::CallFunc_SetProgressBarFillFraction_InPercent_ImplicitCast' has a wrong offset!");

// Function WI_PerkAbility.WI_PerkAbility_C.OnCooldownTick
// 0x0030 (0x0030 - 0x0000)
struct WI_PerkAbility_C_OnCooldownTick final
{
public:
	double                                        TimeRemaining;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CooldownDuration_0;                                // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        PercentageDone;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetCooldownText_ReturnValue;              // 0x0018(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	float                                         CallFunc_SetProgressBarFillFraction_InPercent_ImplicitCast; // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WI_PerkAbility_C_OnCooldownTick) == 0x000008, "Wrong alignment on WI_PerkAbility_C_OnCooldownTick");
static_assert(sizeof(WI_PerkAbility_C_OnCooldownTick) == 0x000030, "Wrong size on WI_PerkAbility_C_OnCooldownTick");
static_assert(offsetof(WI_PerkAbility_C_OnCooldownTick, TimeRemaining) == 0x000000, "Member 'WI_PerkAbility_C_OnCooldownTick::TimeRemaining' has a wrong offset!");
static_assert(offsetof(WI_PerkAbility_C_OnCooldownTick, CooldownDuration_0) == 0x000008, "Member 'WI_PerkAbility_C_OnCooldownTick::CooldownDuration_0' has a wrong offset!");
static_assert(offsetof(WI_PerkAbility_C_OnCooldownTick, PercentageDone) == 0x000010, "Member 'WI_PerkAbility_C_OnCooldownTick::PercentageDone' has a wrong offset!");
static_assert(offsetof(WI_PerkAbility_C_OnCooldownTick, CallFunc_GetCooldownText_ReturnValue) == 0x000018, "Member 'WI_PerkAbility_C_OnCooldownTick::CallFunc_GetCooldownText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WI_PerkAbility_C_OnCooldownTick, CallFunc_SetProgressBarFillFraction_InPercent_ImplicitCast) == 0x000028, "Member 'WI_PerkAbility_C_OnCooldownTick::CallFunc_SetProgressBarFillFraction_InPercent_ImplicitCast' has a wrong offset!");

// Function WI_PerkAbility.WI_PerkAbility_C.OnMessageReceived_8D62D7AE48C77B20978CD2877453A7F9
// 0x0010 (0x0010 - 0x0000)
struct WI_PerkAbility_C_OnMessageReceived_8D62D7AE48C77B20978CD2877453A7F9 final
{
public:
	class UAsyncAction_ListenForGameplayMessage*  ProxyObject;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           ActualChannel;                                     // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WI_PerkAbility_C_OnMessageReceived_8D62D7AE48C77B20978CD2877453A7F9) == 0x000008, "Wrong alignment on WI_PerkAbility_C_OnMessageReceived_8D62D7AE48C77B20978CD2877453A7F9");
static_assert(sizeof(WI_PerkAbility_C_OnMessageReceived_8D62D7AE48C77B20978CD2877453A7F9) == 0x000010, "Wrong size on WI_PerkAbility_C_OnMessageReceived_8D62D7AE48C77B20978CD2877453A7F9");
static_assert(offsetof(WI_PerkAbility_C_OnMessageReceived_8D62D7AE48C77B20978CD2877453A7F9, ProxyObject) == 0x000000, "Member 'WI_PerkAbility_C_OnMessageReceived_8D62D7AE48C77B20978CD2877453A7F9::ProxyObject' has a wrong offset!");
static_assert(offsetof(WI_PerkAbility_C_OnMessageReceived_8D62D7AE48C77B20978CD2877453A7F9, ActualChannel) == 0x000008, "Member 'WI_PerkAbility_C_OnMessageReceived_8D62D7AE48C77B20978CD2877453A7F9::ActualChannel' has a wrong offset!");

// Function WI_PerkAbility.WI_PerkAbility_C.PlayActivationFailAnimation
// 0x0038 (0x0038 - 0x0000)
struct WI_PerkAbility_C_PlayActivationFailAnimation final
{
public:
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationForward_ReturnValue;         // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsAnimationPlaying_ReturnValue;           // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagContainer                  CallFunc_MakeGameplayTagContainerFromTag_ReturnValue; // 0x0010(0x0020)()
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_CanActivate_ReturnValue;               // 0x0032(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0033(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WI_PerkAbility_C_PlayActivationFailAnimation) == 0x000008, "Wrong alignment on WI_PerkAbility_C_PlayActivationFailAnimation");
static_assert(sizeof(WI_PerkAbility_C_PlayActivationFailAnimation) == 0x000038, "Wrong size on WI_PerkAbility_C_PlayActivationFailAnimation");
static_assert(offsetof(WI_PerkAbility_C_PlayActivationFailAnimation, CallFunc_PlayAnimationForward_ReturnValue) == 0x000000, "Member 'WI_PerkAbility_C_PlayActivationFailAnimation::CallFunc_PlayAnimationForward_ReturnValue' has a wrong offset!");
static_assert(offsetof(WI_PerkAbility_C_PlayActivationFailAnimation, CallFunc_IsAnimationPlaying_ReturnValue) == 0x000008, "Member 'WI_PerkAbility_C_PlayActivationFailAnimation::CallFunc_IsAnimationPlaying_ReturnValue' has a wrong offset!");
static_assert(offsetof(WI_PerkAbility_C_PlayActivationFailAnimation, CallFunc_MakeGameplayTagContainerFromTag_ReturnValue) == 0x000010, "Member 'WI_PerkAbility_C_PlayActivationFailAnimation::CallFunc_MakeGameplayTagContainerFromTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(WI_PerkAbility_C_PlayActivationFailAnimation, CallFunc_Not_PreBool_ReturnValue) == 0x000030, "Member 'WI_PerkAbility_C_PlayActivationFailAnimation::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WI_PerkAbility_C_PlayActivationFailAnimation, CallFunc_IsValid_ReturnValue) == 0x000031, "Member 'WI_PerkAbility_C_PlayActivationFailAnimation::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WI_PerkAbility_C_PlayActivationFailAnimation, CallFunc_K2_CanActivate_ReturnValue) == 0x000032, "Member 'WI_PerkAbility_C_PlayActivationFailAnimation::CallFunc_K2_CanActivate_ReturnValue' has a wrong offset!");
static_assert(offsetof(WI_PerkAbility_C_PlayActivationFailAnimation, CallFunc_Not_PreBool_ReturnValue_1) == 0x000033, "Member 'WI_PerkAbility_C_PlayActivationFailAnimation::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");

// Function WI_PerkAbility.WI_PerkAbility_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct WI_PerkAbility_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WI_PerkAbility_C_PreConstruct) == 0x000001, "Wrong alignment on WI_PerkAbility_C_PreConstruct");
static_assert(sizeof(WI_PerkAbility_C_PreConstruct) == 0x000001, "Wrong size on WI_PerkAbility_C_PreConstruct");
static_assert(offsetof(WI_PerkAbility_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'WI_PerkAbility_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function WI_PerkAbility.WI_PerkAbility_C.Set Icon Tint Color
// 0x0014 (0x0014 - 0x0000)
struct WI_PerkAbility_C_Set_Icon_Tint_Color final
{
public:
	struct FSlateColor                            NewParam;                                          // 0x0000(0x0014)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(WI_PerkAbility_C_Set_Icon_Tint_Color) == 0x000004, "Wrong alignment on WI_PerkAbility_C_Set_Icon_Tint_Color");
static_assert(sizeof(WI_PerkAbility_C_Set_Icon_Tint_Color) == 0x000014, "Wrong size on WI_PerkAbility_C_Set_Icon_Tint_Color");
static_assert(offsetof(WI_PerkAbility_C_Set_Icon_Tint_Color, NewParam) == 0x000000, "Member 'WI_PerkAbility_C_Set_Icon_Tint_Color::NewParam' has a wrong offset!");

// Function WI_PerkAbility.WI_PerkAbility_C.SetCooldownText
// 0x0020 (0x0020 - 0x0000)
struct WI_PerkAbility_C_SetCooldownText final
{
public:
	class FString                                 Cooldown_Text;                                     // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0010(0x0010)()
};
static_assert(alignof(WI_PerkAbility_C_SetCooldownText) == 0x000008, "Wrong alignment on WI_PerkAbility_C_SetCooldownText");
static_assert(sizeof(WI_PerkAbility_C_SetCooldownText) == 0x000020, "Wrong size on WI_PerkAbility_C_SetCooldownText");
static_assert(offsetof(WI_PerkAbility_C_SetCooldownText, Cooldown_Text) == 0x000000, "Member 'WI_PerkAbility_C_SetCooldownText::Cooldown_Text' has a wrong offset!");
static_assert(offsetof(WI_PerkAbility_C_SetCooldownText, CallFunc_Conv_StringToText_ReturnValue) == 0x000010, "Member 'WI_PerkAbility_C_SetCooldownText::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");

// Function WI_PerkAbility.WI_PerkAbility_C.SetIconTexture
// 0x0028 (0x0028 - 0x0000)
struct WI_PerkAbility_C_SetIconTexture final
{
public:
	TSoftObjectPtr<class UTexture2D>              SoftTexture;                                       // 0x0000(0x0028)(BlueprintVisible, BlueprintReadOnly, Parm, UObjectWrapper, HasGetValueTypeHash)
};
static_assert(alignof(WI_PerkAbility_C_SetIconTexture) == 0x000008, "Wrong alignment on WI_PerkAbility_C_SetIconTexture");
static_assert(sizeof(WI_PerkAbility_C_SetIconTexture) == 0x000028, "Wrong size on WI_PerkAbility_C_SetIconTexture");
static_assert(offsetof(WI_PerkAbility_C_SetIconTexture, SoftTexture) == 0x000000, "Member 'WI_PerkAbility_C_SetIconTexture::SoftTexture' has a wrong offset!");

// Function WI_PerkAbility.WI_PerkAbility_C.SetInputAction
// 0x0008 (0x0008 - 0x0000)
struct WI_PerkAbility_C_SetInputAction final
{
public:
	class UInputAction*                           InputAction_0;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WI_PerkAbility_C_SetInputAction) == 0x000008, "Wrong alignment on WI_PerkAbility_C_SetInputAction");
static_assert(sizeof(WI_PerkAbility_C_SetInputAction) == 0x000008, "Wrong size on WI_PerkAbility_C_SetInputAction");
static_assert(offsetof(WI_PerkAbility_C_SetInputAction, InputAction_0) == 0x000000, "Member 'WI_PerkAbility_C_SetInputAction::InputAction_0' has a wrong offset!");

// Function WI_PerkAbility.WI_PerkAbility_C.SetProgressBarFillFraction
// 0x0020 (0x0020 - 0x0000)
struct WI_PerkAbility_C_SetProgressBarFillFraction final
{
public:
	float                                         InPercent;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_B_ImplicitCast;     // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetPercent_InPercent_ImplicitCast;        // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WI_PerkAbility_C_SetProgressBarFillFraction) == 0x000008, "Wrong alignment on WI_PerkAbility_C_SetProgressBarFillFraction");
static_assert(sizeof(WI_PerkAbility_C_SetProgressBarFillFraction) == 0x000020, "Wrong size on WI_PerkAbility_C_SetProgressBarFillFraction");
static_assert(offsetof(WI_PerkAbility_C_SetProgressBarFillFraction, InPercent) == 0x000000, "Member 'WI_PerkAbility_C_SetProgressBarFillFraction::InPercent' has a wrong offset!");
static_assert(offsetof(WI_PerkAbility_C_SetProgressBarFillFraction, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000008, "Member 'WI_PerkAbility_C_SetProgressBarFillFraction::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WI_PerkAbility_C_SetProgressBarFillFraction, CallFunc_Subtract_DoubleDouble_B_ImplicitCast) == 0x000010, "Member 'WI_PerkAbility_C_SetProgressBarFillFraction::CallFunc_Subtract_DoubleDouble_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WI_PerkAbility_C_SetProgressBarFillFraction, CallFunc_SetPercent_InPercent_ImplicitCast) == 0x000018, "Member 'WI_PerkAbility_C_SetProgressBarFillFraction::CallFunc_SetPercent_InPercent_ImplicitCast' has a wrong offset!");

// Function WI_PerkAbility.WI_PerkAbility_C.SetShowBoundAction
// 0x0005 (0x0005 - 0x0000)
struct WI_PerkAbility_C_SetShowBoundAction final
{
public:
	bool                                          Index_0;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WI_PerkAbility_C_SetShowBoundAction) == 0x000001, "Wrong alignment on WI_PerkAbility_C_SetShowBoundAction");
static_assert(sizeof(WI_PerkAbility_C_SetShowBoundAction) == 0x000005, "Wrong size on WI_PerkAbility_C_SetShowBoundAction");
static_assert(offsetof(WI_PerkAbility_C_SetShowBoundAction, Index_0) == 0x000000, "Member 'WI_PerkAbility_C_SetShowBoundAction::Index_0' has a wrong offset!");
static_assert(offsetof(WI_PerkAbility_C_SetShowBoundAction, Temp_bool_Variable) == 0x000001, "Member 'WI_PerkAbility_C_SetShowBoundAction::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WI_PerkAbility_C_SetShowBoundAction, Temp_byte_Variable) == 0x000002, "Member 'WI_PerkAbility_C_SetShowBoundAction::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WI_PerkAbility_C_SetShowBoundAction, Temp_byte_Variable_1) == 0x000003, "Member 'WI_PerkAbility_C_SetShowBoundAction::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WI_PerkAbility_C_SetShowBoundAction, K2Node_Select_Default) == 0x000004, "Member 'WI_PerkAbility_C_SetShowBoundAction::K2Node_Select_Default' has a wrong offset!");

// Function WI_PerkAbility.WI_PerkAbility_C.SetShowCooldownText
// 0x0005 (0x0005 - 0x0000)
struct WI_PerkAbility_C_SetShowCooldownText final
{
public:
	bool                                          Show;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WI_PerkAbility_C_SetShowCooldownText) == 0x000001, "Wrong alignment on WI_PerkAbility_C_SetShowCooldownText");
static_assert(sizeof(WI_PerkAbility_C_SetShowCooldownText) == 0x000005, "Wrong size on WI_PerkAbility_C_SetShowCooldownText");
static_assert(offsetof(WI_PerkAbility_C_SetShowCooldownText, Show) == 0x000000, "Member 'WI_PerkAbility_C_SetShowCooldownText::Show' has a wrong offset!");
static_assert(offsetof(WI_PerkAbility_C_SetShowCooldownText, Temp_bool_Variable) == 0x000001, "Member 'WI_PerkAbility_C_SetShowCooldownText::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WI_PerkAbility_C_SetShowCooldownText, Temp_byte_Variable) == 0x000002, "Member 'WI_PerkAbility_C_SetShowCooldownText::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WI_PerkAbility_C_SetShowCooldownText, Temp_byte_Variable_1) == 0x000003, "Member 'WI_PerkAbility_C_SetShowCooldownText::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WI_PerkAbility_C_SetShowCooldownText, K2Node_Select_Default) == 0x000004, "Member 'WI_PerkAbility_C_SetShowCooldownText::K2Node_Select_Default' has a wrong offset!");

// Function WI_PerkAbility.WI_PerkAbility_C.SetShowOverlay
// 0x0005 (0x0005 - 0x0000)
struct WI_PerkAbility_C_SetShowOverlay final
{
public:
	bool                                          Show;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WI_PerkAbility_C_SetShowOverlay) == 0x000001, "Wrong alignment on WI_PerkAbility_C_SetShowOverlay");
static_assert(sizeof(WI_PerkAbility_C_SetShowOverlay) == 0x000005, "Wrong size on WI_PerkAbility_C_SetShowOverlay");
static_assert(offsetof(WI_PerkAbility_C_SetShowOverlay, Show) == 0x000000, "Member 'WI_PerkAbility_C_SetShowOverlay::Show' has a wrong offset!");
static_assert(offsetof(WI_PerkAbility_C_SetShowOverlay, Temp_bool_Variable) == 0x000001, "Member 'WI_PerkAbility_C_SetShowOverlay::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WI_PerkAbility_C_SetShowOverlay, Temp_byte_Variable) == 0x000002, "Member 'WI_PerkAbility_C_SetShowOverlay::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WI_PerkAbility_C_SetShowOverlay, Temp_byte_Variable_1) == 0x000003, "Member 'WI_PerkAbility_C_SetShowOverlay::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WI_PerkAbility_C_SetShowOverlay, K2Node_Select_Default) == 0x000004, "Member 'WI_PerkAbility_C_SetShowOverlay::K2Node_Select_Default' has a wrong offset!");

// Function WI_PerkAbility.WI_PerkAbility_C.Tick
// 0x003C (0x003C - 0x0000)
struct WI_PerkAbility_C_Tick final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         InDeltaTime;                                       // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WI_PerkAbility_C_Tick) == 0x000004, "Wrong alignment on WI_PerkAbility_C_Tick");
static_assert(sizeof(WI_PerkAbility_C_Tick) == 0x00003C, "Wrong size on WI_PerkAbility_C_Tick");
static_assert(offsetof(WI_PerkAbility_C_Tick, MyGeometry) == 0x000000, "Member 'WI_PerkAbility_C_Tick::MyGeometry' has a wrong offset!");
static_assert(offsetof(WI_PerkAbility_C_Tick, InDeltaTime) == 0x000038, "Member 'WI_PerkAbility_C_Tick::InDeltaTime' has a wrong offset!");

}

