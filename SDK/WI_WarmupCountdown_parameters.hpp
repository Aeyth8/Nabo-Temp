#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WI_WarmupCountdown

#include "Basic.hpp"

#include "UMG_structs.hpp"
#include "Engine_structs.hpp"
#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function WI_WarmupCountdown.WI_WarmupCountdown_C.ExecuteUbergraph_WI_WarmupCountdown
// 0x00B0 (0x00B0 - 0x0000)
struct WI_WarmupCountdown_C_ExecuteUbergraph_WI_WarmupCountdown final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UInitializationStateEnded*              CallFunc_ListenToInitializationStateEnded_ReturnValue; // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0010(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0028(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable;                 // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x0034(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable;                       // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_45[0x3];                                       // 0x0045(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x0048(0x0038)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_InDeltaTime;                          // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ShouldUpdate_ReturnValue;                 // 0x0084(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_85[0x3];                                       // 0x0085(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0088(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UWarmupComponent*                       CallFunc_GetComponentByClass_ReturnValue;          // 0x0090(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_99[0x7];                                       // 0x0099(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GetTimeLeft_TimeLeft;                     // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WI_WarmupCountdown_C_ExecuteUbergraph_WI_WarmupCountdown) == 0x000008, "Wrong alignment on WI_WarmupCountdown_C_ExecuteUbergraph_WI_WarmupCountdown");
static_assert(sizeof(WI_WarmupCountdown_C_ExecuteUbergraph_WI_WarmupCountdown) == 0x0000B0, "Wrong size on WI_WarmupCountdown_C_ExecuteUbergraph_WI_WarmupCountdown");
static_assert(offsetof(WI_WarmupCountdown_C_ExecuteUbergraph_WI_WarmupCountdown, EntryPoint) == 0x000000, "Member 'WI_WarmupCountdown_C_ExecuteUbergraph_WI_WarmupCountdown::EntryPoint' has a wrong offset!");
static_assert(offsetof(WI_WarmupCountdown_C_ExecuteUbergraph_WI_WarmupCountdown, CallFunc_ListenToInitializationStateEnded_ReturnValue) == 0x000008, "Member 'WI_WarmupCountdown_C_ExecuteUbergraph_WI_WarmupCountdown::CallFunc_ListenToInitializationStateEnded_ReturnValue' has a wrong offset!");
static_assert(offsetof(WI_WarmupCountdown_C_ExecuteUbergraph_WI_WarmupCountdown, K2Node_CreateDelegate_OutputDelegate) == 0x000010, "Member 'WI_WarmupCountdown_C_ExecuteUbergraph_WI_WarmupCountdown::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WI_WarmupCountdown_C_ExecuteUbergraph_WI_WarmupCountdown, CallFunc_IsValid_ReturnValue) == 0x000020, "Member 'WI_WarmupCountdown_C_ExecuteUbergraph_WI_WarmupCountdown::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WI_WarmupCountdown_C_ExecuteUbergraph_WI_WarmupCountdown, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000028, "Member 'WI_WarmupCountdown_C_ExecuteUbergraph_WI_WarmupCountdown::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(WI_WarmupCountdown_C_ExecuteUbergraph_WI_WarmupCountdown, Temp_bool_Has_Been_Initd_Variable) == 0x000030, "Member 'WI_WarmupCountdown_C_ExecuteUbergraph_WI_WarmupCountdown::Temp_bool_Has_Been_Initd_Variable' has a wrong offset!");
static_assert(offsetof(WI_WarmupCountdown_C_ExecuteUbergraph_WI_WarmupCountdown, K2Node_CreateDelegate_OutputDelegate_1) == 0x000034, "Member 'WI_WarmupCountdown_C_ExecuteUbergraph_WI_WarmupCountdown::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(WI_WarmupCountdown_C_ExecuteUbergraph_WI_WarmupCountdown, Temp_bool_IsClosed_Variable) == 0x000044, "Member 'WI_WarmupCountdown_C_ExecuteUbergraph_WI_WarmupCountdown::Temp_bool_IsClosed_Variable' has a wrong offset!");
static_assert(offsetof(WI_WarmupCountdown_C_ExecuteUbergraph_WI_WarmupCountdown, K2Node_Event_MyGeometry) == 0x000048, "Member 'WI_WarmupCountdown_C_ExecuteUbergraph_WI_WarmupCountdown::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(WI_WarmupCountdown_C_ExecuteUbergraph_WI_WarmupCountdown, K2Node_Event_InDeltaTime) == 0x000080, "Member 'WI_WarmupCountdown_C_ExecuteUbergraph_WI_WarmupCountdown::K2Node_Event_InDeltaTime' has a wrong offset!");
static_assert(offsetof(WI_WarmupCountdown_C_ExecuteUbergraph_WI_WarmupCountdown, CallFunc_ShouldUpdate_ReturnValue) == 0x000084, "Member 'WI_WarmupCountdown_C_ExecuteUbergraph_WI_WarmupCountdown::CallFunc_ShouldUpdate_ReturnValue' has a wrong offset!");
static_assert(offsetof(WI_WarmupCountdown_C_ExecuteUbergraph_WI_WarmupCountdown, CallFunc_GetGameState_ReturnValue) == 0x000088, "Member 'WI_WarmupCountdown_C_ExecuteUbergraph_WI_WarmupCountdown::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(WI_WarmupCountdown_C_ExecuteUbergraph_WI_WarmupCountdown, CallFunc_GetComponentByClass_ReturnValue) == 0x000090, "Member 'WI_WarmupCountdown_C_ExecuteUbergraph_WI_WarmupCountdown::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(WI_WarmupCountdown_C_ExecuteUbergraph_WI_WarmupCountdown, CallFunc_IsValid_ReturnValue_1) == 0x000098, "Member 'WI_WarmupCountdown_C_ExecuteUbergraph_WI_WarmupCountdown::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WI_WarmupCountdown_C_ExecuteUbergraph_WI_WarmupCountdown, CallFunc_GetTimeLeft_TimeLeft) == 0x0000A0, "Member 'WI_WarmupCountdown_C_ExecuteUbergraph_WI_WarmupCountdown::CallFunc_GetTimeLeft_TimeLeft' has a wrong offset!");
static_assert(offsetof(WI_WarmupCountdown_C_ExecuteUbergraph_WI_WarmupCountdown, CallFunc_Less_DoubleDouble_ReturnValue) == 0x0000A8, "Member 'WI_WarmupCountdown_C_ExecuteUbergraph_WI_WarmupCountdown::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");

// Function WI_WarmupCountdown.WI_WarmupCountdown_C.ShouldUpdate
// 0x0020 (0x0020 - 0x0000)
struct WI_WarmupCountdown_C_ShouldUpdate final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GetTimeLeft_TimeLeft;                     // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Percent_FloatFloat_ReturnValue;           // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NearlyEqual_FloatFloat_ReturnValue;       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WI_WarmupCountdown_C_ShouldUpdate) == 0x000008, "Wrong alignment on WI_WarmupCountdown_C_ShouldUpdate");
static_assert(sizeof(WI_WarmupCountdown_C_ShouldUpdate) == 0x000020, "Wrong size on WI_WarmupCountdown_C_ShouldUpdate");
static_assert(offsetof(WI_WarmupCountdown_C_ShouldUpdate, ReturnValue) == 0x000000, "Member 'WI_WarmupCountdown_C_ShouldUpdate::ReturnValue' has a wrong offset!");
static_assert(offsetof(WI_WarmupCountdown_C_ShouldUpdate, CallFunc_IsValid_ReturnValue) == 0x000001, "Member 'WI_WarmupCountdown_C_ShouldUpdate::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WI_WarmupCountdown_C_ShouldUpdate, CallFunc_GetTimeLeft_TimeLeft) == 0x000008, "Member 'WI_WarmupCountdown_C_ShouldUpdate::CallFunc_GetTimeLeft_TimeLeft' has a wrong offset!");
static_assert(offsetof(WI_WarmupCountdown_C_ShouldUpdate, CallFunc_Percent_FloatFloat_ReturnValue) == 0x000010, "Member 'WI_WarmupCountdown_C_ShouldUpdate::CallFunc_Percent_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WI_WarmupCountdown_C_ShouldUpdate, CallFunc_NearlyEqual_FloatFloat_ReturnValue) == 0x000018, "Member 'WI_WarmupCountdown_C_ShouldUpdate::CallFunc_NearlyEqual_FloatFloat_ReturnValue' has a wrong offset!");

// Function WI_WarmupCountdown.WI_WarmupCountdown_C.Tick
// 0x003C (0x003C - 0x0000)
struct WI_WarmupCountdown_C_Tick final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         InDeltaTime;                                       // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WI_WarmupCountdown_C_Tick) == 0x000004, "Wrong alignment on WI_WarmupCountdown_C_Tick");
static_assert(sizeof(WI_WarmupCountdown_C_Tick) == 0x00003C, "Wrong size on WI_WarmupCountdown_C_Tick");
static_assert(offsetof(WI_WarmupCountdown_C_Tick, MyGeometry) == 0x000000, "Member 'WI_WarmupCountdown_C_Tick::MyGeometry' has a wrong offset!");
static_assert(offsetof(WI_WarmupCountdown_C_Tick, InDeltaTime) == 0x000038, "Member 'WI_WarmupCountdown_C_Tick::InDeltaTime' has a wrong offset!");

// Function WI_WarmupCountdown.WI_WarmupCountdown_C.UpdateUI
// 0x0110 (0x0110 - 0x0000)
struct WI_WarmupCountdown_C_UpdateUI final
{
public:
	bool                                          Temp_bool_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3[0x5];                                        // 0x0003(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GetTimeLeft_TimeLeft;                     // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetTimeLeft_TimeLeft_1;                   // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Percent_FloatFloat_ReturnValue;           // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FFloor_ReturnValue;                       // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2D[0x3];                                       // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0030(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0040(0x0048)(HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FFloor_ReturnValue_1;                     // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_94[0x4];                                       // 0x0094(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_IntToText_ReturnValue_1;             // 0x0098(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x00A8(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x00F0(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0100(0x0010)()
};
static_assert(alignof(WI_WarmupCountdown_C_UpdateUI) == 0x000008, "Wrong alignment on WI_WarmupCountdown_C_UpdateUI");
static_assert(sizeof(WI_WarmupCountdown_C_UpdateUI) == 0x000110, "Wrong size on WI_WarmupCountdown_C_UpdateUI");
static_assert(offsetof(WI_WarmupCountdown_C_UpdateUI, Temp_bool_Variable) == 0x000000, "Member 'WI_WarmupCountdown_C_UpdateUI::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WI_WarmupCountdown_C_UpdateUI, Temp_byte_Variable) == 0x000001, "Member 'WI_WarmupCountdown_C_UpdateUI::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WI_WarmupCountdown_C_UpdateUI, Temp_byte_Variable_1) == 0x000002, "Member 'WI_WarmupCountdown_C_UpdateUI::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WI_WarmupCountdown_C_UpdateUI, CallFunc_GetTimeLeft_TimeLeft) == 0x000008, "Member 'WI_WarmupCountdown_C_UpdateUI::CallFunc_GetTimeLeft_TimeLeft' has a wrong offset!");
static_assert(offsetof(WI_WarmupCountdown_C_UpdateUI, CallFunc_GetTimeLeft_TimeLeft_1) == 0x000010, "Member 'WI_WarmupCountdown_C_UpdateUI::CallFunc_GetTimeLeft_TimeLeft_1' has a wrong offset!");
static_assert(offsetof(WI_WarmupCountdown_C_UpdateUI, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000018, "Member 'WI_WarmupCountdown_C_UpdateUI::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WI_WarmupCountdown_C_UpdateUI, CallFunc_Percent_FloatFloat_ReturnValue) == 0x000020, "Member 'WI_WarmupCountdown_C_UpdateUI::CallFunc_Percent_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WI_WarmupCountdown_C_UpdateUI, CallFunc_FFloor_ReturnValue) == 0x000028, "Member 'WI_WarmupCountdown_C_UpdateUI::CallFunc_FFloor_ReturnValue' has a wrong offset!");
static_assert(offsetof(WI_WarmupCountdown_C_UpdateUI, K2Node_Select_Default) == 0x00002C, "Member 'WI_WarmupCountdown_C_UpdateUI::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WI_WarmupCountdown_C_UpdateUI, CallFunc_Conv_IntToText_ReturnValue) == 0x000030, "Member 'WI_WarmupCountdown_C_UpdateUI::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WI_WarmupCountdown_C_UpdateUI, K2Node_MakeStruct_FormatArgumentData) == 0x000040, "Member 'WI_WarmupCountdown_C_UpdateUI::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(WI_WarmupCountdown_C_UpdateUI, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000088, "Member 'WI_WarmupCountdown_C_UpdateUI::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WI_WarmupCountdown_C_UpdateUI, CallFunc_FFloor_ReturnValue_1) == 0x000090, "Member 'WI_WarmupCountdown_C_UpdateUI::CallFunc_FFloor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WI_WarmupCountdown_C_UpdateUI, CallFunc_Conv_IntToText_ReturnValue_1) == 0x000098, "Member 'WI_WarmupCountdown_C_UpdateUI::CallFunc_Conv_IntToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WI_WarmupCountdown_C_UpdateUI, K2Node_MakeStruct_FormatArgumentData_1) == 0x0000A8, "Member 'WI_WarmupCountdown_C_UpdateUI::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(WI_WarmupCountdown_C_UpdateUI, K2Node_MakeArray_Array) == 0x0000F0, "Member 'WI_WarmupCountdown_C_UpdateUI::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(WI_WarmupCountdown_C_UpdateUI, CallFunc_Format_ReturnValue) == 0x000100, "Member 'WI_WarmupCountdown_C_UpdateUI::CallFunc_Format_ReturnValue' has a wrong offset!");

// Function WI_WarmupCountdown.WI_WarmupCountdown_C.GetTimeLeft
// 0x0018 (0x0018 - 0x0000)
struct WI_WarmupCountdown_C_GetTimeLeft final
{
public:
	double                                        TimeLeft;                                          // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetTimeLeft_ReturnValue;                  // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_FunctionResult_TimeLeft_ImplicitCast;       // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WI_WarmupCountdown_C_GetTimeLeft) == 0x000008, "Wrong alignment on WI_WarmupCountdown_C_GetTimeLeft");
static_assert(sizeof(WI_WarmupCountdown_C_GetTimeLeft) == 0x000018, "Wrong size on WI_WarmupCountdown_C_GetTimeLeft");
static_assert(offsetof(WI_WarmupCountdown_C_GetTimeLeft, TimeLeft) == 0x000000, "Member 'WI_WarmupCountdown_C_GetTimeLeft::TimeLeft' has a wrong offset!");
static_assert(offsetof(WI_WarmupCountdown_C_GetTimeLeft, CallFunc_GetTimeLeft_ReturnValue) == 0x000008, "Member 'WI_WarmupCountdown_C_GetTimeLeft::CallFunc_GetTimeLeft_ReturnValue' has a wrong offset!");
static_assert(offsetof(WI_WarmupCountdown_C_GetTimeLeft, CallFunc_IsValid_ReturnValue) == 0x00000C, "Member 'WI_WarmupCountdown_C_GetTimeLeft::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WI_WarmupCountdown_C_GetTimeLeft, K2Node_FunctionResult_TimeLeft_ImplicitCast) == 0x000010, "Member 'WI_WarmupCountdown_C_GetTimeLeft::K2Node_FunctionResult_TimeLeft_ImplicitCast' has a wrong offset!");

}

