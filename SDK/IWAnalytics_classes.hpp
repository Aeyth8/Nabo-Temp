#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: IWAnalytics

#include "Basic.hpp"

#include "Engine_classes.hpp"
#include "JsonUtilities_structs.hpp"
#include "CoreUObject_classes.hpp"


namespace SDK
{

// Class IWAnalytics.BaseAnalyticsEventWorldSubsystem
// 0x0000 (0x0030 - 0x0030)
class UBaseAnalyticsEventWorldSubsystem : public UWorldSubsystem
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"BaseAnalyticsEventWorldSubsystem">();
	}
	static class UBaseAnalyticsEventWorldSubsystem* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBaseAnalyticsEventWorldSubsystem>();
	}
};
static_assert(alignof(UBaseAnalyticsEventWorldSubsystem) == 0x000008, "Wrong alignment on UBaseAnalyticsEventWorldSubsystem");
static_assert(sizeof(UBaseAnalyticsEventWorldSubsystem) == 0x000030, "Wrong size on UBaseAnalyticsEventWorldSubsystem");

// Class IWAnalytics.IWAnalyticsBlueprintFunctionLibrary
// 0x0000 (0x0028 - 0x0028)
class UIWAnalyticsBlueprintFunctionLibrary final : public UBlueprintFunctionLibrary
{
public:
	static void EnqueueAnalyticsEvent(class UObject* WorldContext, class UIWAnalyticsEvent* AnalyticsEvent);
	static void FlushQueuedAnalyticsEvents(class UObject* WorldContext);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"IWAnalyticsBlueprintFunctionLibrary">();
	}
	static class UIWAnalyticsBlueprintFunctionLibrary* GetDefaultObj()
	{
		return GetDefaultObjImpl<UIWAnalyticsBlueprintFunctionLibrary>();
	}
};
static_assert(alignof(UIWAnalyticsBlueprintFunctionLibrary) == 0x000008, "Wrong alignment on UIWAnalyticsBlueprintFunctionLibrary");
static_assert(sizeof(UIWAnalyticsBlueprintFunctionLibrary) == 0x000028, "Wrong size on UIWAnalyticsBlueprintFunctionLibrary");

// Class IWAnalytics.IWAnalyticsEvent
// 0x0038 (0x0060 - 0x0028)
class UIWAnalyticsEvent : public UObject
{
public:
	class FString                                 EventName;                                         // 0x0028(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_38[0x8];                                       // 0x0038(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FJsonObjectWrapper                     ContentWrapper;                                    // 0x0040(0x0020)(BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)

public:
	void OnCreatePayload();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"IWAnalyticsEvent">();
	}
	static class UIWAnalyticsEvent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UIWAnalyticsEvent>();
	}
};
static_assert(alignof(UIWAnalyticsEvent) == 0x000008, "Wrong alignment on UIWAnalyticsEvent");
static_assert(sizeof(UIWAnalyticsEvent) == 0x000060, "Wrong size on UIWAnalyticsEvent");
static_assert(offsetof(UIWAnalyticsEvent, EventName) == 0x000028, "Member 'UIWAnalyticsEvent::EventName' has a wrong offset!");
static_assert(offsetof(UIWAnalyticsEvent, ContentWrapper) == 0x000040, "Member 'UIWAnalyticsEvent::ContentWrapper' has a wrong offset!");

// Class IWAnalytics.IWAnalyticsSubsystem
// 0x0028 (0x0058 - 0x0030)
class UIWAnalyticsSubsystem final : public UGameInstanceSubsystem
{
public:
	class UIWOnlineServicesGameInstanceSubsystem* IntegrationSubsystem;                              // 0x0030(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<class UIWAnalyticsEvent*>              Internal_CachedTelemetryEvents;                    // 0x0038(0x0010)(ZeroConstructor, NativeAccessSpecifierPrivate)
	class FString                                 BackendAnalyticsConfigurationGameRecordKey;        // 0x0048(0x0010)(ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	void EnqueueAnalyticsEvent(class UIWAnalyticsEvent* Event);
	bool FlushQueuedAnalyticsEvents();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"IWAnalyticsSubsystem">();
	}
	static class UIWAnalyticsSubsystem* GetDefaultObj()
	{
		return GetDefaultObjImpl<UIWAnalyticsSubsystem>();
	}
};
static_assert(alignof(UIWAnalyticsSubsystem) == 0x000008, "Wrong alignment on UIWAnalyticsSubsystem");
static_assert(sizeof(UIWAnalyticsSubsystem) == 0x000058, "Wrong size on UIWAnalyticsSubsystem");
static_assert(offsetof(UIWAnalyticsSubsystem, IntegrationSubsystem) == 0x000030, "Member 'UIWAnalyticsSubsystem::IntegrationSubsystem' has a wrong offset!");
static_assert(offsetof(UIWAnalyticsSubsystem, Internal_CachedTelemetryEvents) == 0x000038, "Member 'UIWAnalyticsSubsystem::Internal_CachedTelemetryEvents' has a wrong offset!");
static_assert(offsetof(UIWAnalyticsSubsystem, BackendAnalyticsConfigurationGameRecordKey) == 0x000048, "Member 'UIWAnalyticsSubsystem::BackendAnalyticsConfigurationGameRecordKey' has a wrong offset!");

}

