#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WI_PlaytestCountdown

#include "Basic.hpp"

#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function WI_PlaytestCountdown.WI_PlaytestCountdown_C.ExecuteUbergraph_WI_PlaytestCountdown
// 0x0028 (0x0028 - 0x0000)
struct WI_PlaytestCountdown_C_ExecuteUbergraph_WI_PlaytestCountdown final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0004(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0018(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WI_PlaytestCountdown_C_ExecuteUbergraph_WI_PlaytestCountdown) == 0x000008, "Wrong alignment on WI_PlaytestCountdown_C_ExecuteUbergraph_WI_PlaytestCountdown");
static_assert(sizeof(WI_PlaytestCountdown_C_ExecuteUbergraph_WI_PlaytestCountdown) == 0x000028, "Wrong size on WI_PlaytestCountdown_C_ExecuteUbergraph_WI_PlaytestCountdown");
static_assert(offsetof(WI_PlaytestCountdown_C_ExecuteUbergraph_WI_PlaytestCountdown, EntryPoint) == 0x000000, "Member 'WI_PlaytestCountdown_C_ExecuteUbergraph_WI_PlaytestCountdown::EntryPoint' has a wrong offset!");
static_assert(offsetof(WI_PlaytestCountdown_C_ExecuteUbergraph_WI_PlaytestCountdown, K2Node_CreateDelegate_OutputDelegate) == 0x000004, "Member 'WI_PlaytestCountdown_C_ExecuteUbergraph_WI_PlaytestCountdown::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WI_PlaytestCountdown_C_ExecuteUbergraph_WI_PlaytestCountdown, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000018, "Member 'WI_PlaytestCountdown_C_ExecuteUbergraph_WI_PlaytestCountdown::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(WI_PlaytestCountdown_C_ExecuteUbergraph_WI_PlaytestCountdown, K2Node_Event_IsDesignTime) == 0x000020, "Member 'WI_PlaytestCountdown_C_ExecuteUbergraph_WI_PlaytestCountdown::K2Node_Event_IsDesignTime' has a wrong offset!");

// Function WI_PlaytestCountdown.WI_PlaytestCountdown_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct WI_PlaytestCountdown_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WI_PlaytestCountdown_C_PreConstruct) == 0x000001, "Wrong alignment on WI_PlaytestCountdown_C_PreConstruct");
static_assert(sizeof(WI_PlaytestCountdown_C_PreConstruct) == 0x000001, "Wrong size on WI_PlaytestCountdown_C_PreConstruct");
static_assert(offsetof(WI_PlaytestCountdown_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'WI_PlaytestCountdown_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function WI_PlaytestCountdown.WI_PlaytestCountdown_C.UpdateText
// 0x0178 (0x0178 - 0x0000)
struct WI_PlaytestCountdown_C_UpdateText final
{
public:
	class ULocalUserOnlineServicesGameInstanceSubsystem* CallFunc_GetGameInstanceSubsystem_ReturnValue;     // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetPlaytestTimeLeftString_DaysLeft;       // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetPlaytestTimeLeftString_HoursLeft;      // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetPlaytestTimeLeftString_MinutesLeft;    // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetPlaytestTimeLeftString_SecondsLeft;    // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int64                                         CallFunc_Conv_IntToInt64_ReturnValue;              // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int64                                         CallFunc_Conv_IntToInt64_ReturnValue_1;            // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0028(0x0048)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x0070(0x0048)(HasGetValueTypeHash)
	int64                                         CallFunc_Conv_IntToInt64_ReturnValue_2;            // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int64                                         CallFunc_Conv_IntToInt64_ReturnValue_3;            // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_2;            // 0x00C8(0x0048)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_3;            // 0x0110(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0158(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0168(0x0010)()
};
static_assert(alignof(WI_PlaytestCountdown_C_UpdateText) == 0x000008, "Wrong alignment on WI_PlaytestCountdown_C_UpdateText");
static_assert(sizeof(WI_PlaytestCountdown_C_UpdateText) == 0x000178, "Wrong size on WI_PlaytestCountdown_C_UpdateText");
static_assert(offsetof(WI_PlaytestCountdown_C_UpdateText, CallFunc_GetGameInstanceSubsystem_ReturnValue) == 0x000000, "Member 'WI_PlaytestCountdown_C_UpdateText::CallFunc_GetGameInstanceSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(WI_PlaytestCountdown_C_UpdateText, CallFunc_GetPlaytestTimeLeftString_DaysLeft) == 0x000008, "Member 'WI_PlaytestCountdown_C_UpdateText::CallFunc_GetPlaytestTimeLeftString_DaysLeft' has a wrong offset!");
static_assert(offsetof(WI_PlaytestCountdown_C_UpdateText, CallFunc_GetPlaytestTimeLeftString_HoursLeft) == 0x00000C, "Member 'WI_PlaytestCountdown_C_UpdateText::CallFunc_GetPlaytestTimeLeftString_HoursLeft' has a wrong offset!");
static_assert(offsetof(WI_PlaytestCountdown_C_UpdateText, CallFunc_GetPlaytestTimeLeftString_MinutesLeft) == 0x000010, "Member 'WI_PlaytestCountdown_C_UpdateText::CallFunc_GetPlaytestTimeLeftString_MinutesLeft' has a wrong offset!");
static_assert(offsetof(WI_PlaytestCountdown_C_UpdateText, CallFunc_GetPlaytestTimeLeftString_SecondsLeft) == 0x000014, "Member 'WI_PlaytestCountdown_C_UpdateText::CallFunc_GetPlaytestTimeLeftString_SecondsLeft' has a wrong offset!");
static_assert(offsetof(WI_PlaytestCountdown_C_UpdateText, CallFunc_Conv_IntToInt64_ReturnValue) == 0x000018, "Member 'WI_PlaytestCountdown_C_UpdateText::CallFunc_Conv_IntToInt64_ReturnValue' has a wrong offset!");
static_assert(offsetof(WI_PlaytestCountdown_C_UpdateText, CallFunc_Conv_IntToInt64_ReturnValue_1) == 0x000020, "Member 'WI_PlaytestCountdown_C_UpdateText::CallFunc_Conv_IntToInt64_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WI_PlaytestCountdown_C_UpdateText, K2Node_MakeStruct_FormatArgumentData) == 0x000028, "Member 'WI_PlaytestCountdown_C_UpdateText::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(WI_PlaytestCountdown_C_UpdateText, K2Node_MakeStruct_FormatArgumentData_1) == 0x000070, "Member 'WI_PlaytestCountdown_C_UpdateText::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(WI_PlaytestCountdown_C_UpdateText, CallFunc_Conv_IntToInt64_ReturnValue_2) == 0x0000B8, "Member 'WI_PlaytestCountdown_C_UpdateText::CallFunc_Conv_IntToInt64_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WI_PlaytestCountdown_C_UpdateText, CallFunc_Conv_IntToInt64_ReturnValue_3) == 0x0000C0, "Member 'WI_PlaytestCountdown_C_UpdateText::CallFunc_Conv_IntToInt64_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WI_PlaytestCountdown_C_UpdateText, K2Node_MakeStruct_FormatArgumentData_2) == 0x0000C8, "Member 'WI_PlaytestCountdown_C_UpdateText::K2Node_MakeStruct_FormatArgumentData_2' has a wrong offset!");
static_assert(offsetof(WI_PlaytestCountdown_C_UpdateText, K2Node_MakeStruct_FormatArgumentData_3) == 0x000110, "Member 'WI_PlaytestCountdown_C_UpdateText::K2Node_MakeStruct_FormatArgumentData_3' has a wrong offset!");
static_assert(offsetof(WI_PlaytestCountdown_C_UpdateText, K2Node_MakeArray_Array) == 0x000158, "Member 'WI_PlaytestCountdown_C_UpdateText::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(WI_PlaytestCountdown_C_UpdateText, CallFunc_Format_ReturnValue) == 0x000168, "Member 'WI_PlaytestCountdown_C_UpdateText::CallFunc_Format_ReturnValue' has a wrong offset!");

}

