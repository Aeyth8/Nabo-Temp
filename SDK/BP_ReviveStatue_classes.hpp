#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_ReviveStatue

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Bp_ThrowableProp_Small_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_ReviveStatue.BP_ReviveStatue_C
// 0x0040 (0x0580 - 0x0540)
class ABP_ReviveStatue_C final : public ABp_ThrowableProp_Small_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_BP_ReviveStatue_C;                  // 0x0540(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UAC_POI_C*                              AC_POI;                                            // 0x0548(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USpringArmComponent*                    SpringArm;                                         // 0x0550(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UCapsuleComponent*                      Capsule;                                           // 0x0558(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UAbilitySystemComponentIW*              AbilitySystemComponentIW;                          // 0x0560(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 AssociatedActor;                                   // 0x0568(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	uint8                                         AssociatedActorTeamID;                             // 0x0570(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash)

public:
	void AddInitialImpulse();
	void Auth_SetTeamIDForAssociatedActor();
	void DoesLocalPlayerCharacterHaveReviveAbility(bool* Has_Revive_Ability);
	void ExecuteUbergraph_BP_ReviveStatue(int32 EntryPoint);
	void GetTeamID(uint8* Return);
	void GrippedServer(class ACharacter* GrippingCharacter);
	void On_Associated_Actor_Destroyed(class AActor* DestroyedActor);
	void OnRep_AssociatedActorTeamID();
	void ReceiveBeginPlay();
	void ReceiveDestroyed();
	void ReleasedServer(class ACharacter* ReleasingCharacter);
	void ReviveActor(const struct FVector& Location, bool* Void);
	void SpecialAbilityStartInteraction(bool* CouldInteract);
	void SpecialAbilityStopInteraction(bool* StoppedInteract);
	void Update_Image(const struct FGameplayTag& Selection);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_ReviveStatue_C">();
	}
	static class ABP_ReviveStatue_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_ReviveStatue_C>();
	}
};
static_assert(alignof(ABP_ReviveStatue_C) == 0x000010, "Wrong alignment on ABP_ReviveStatue_C");
static_assert(sizeof(ABP_ReviveStatue_C) == 0x000580, "Wrong size on ABP_ReviveStatue_C");
static_assert(offsetof(ABP_ReviveStatue_C, UberGraphFrame_BP_ReviveStatue_C) == 0x000540, "Member 'ABP_ReviveStatue_C::UberGraphFrame_BP_ReviveStatue_C' has a wrong offset!");
static_assert(offsetof(ABP_ReviveStatue_C, AC_POI) == 0x000548, "Member 'ABP_ReviveStatue_C::AC_POI' has a wrong offset!");
static_assert(offsetof(ABP_ReviveStatue_C, SpringArm) == 0x000550, "Member 'ABP_ReviveStatue_C::SpringArm' has a wrong offset!");
static_assert(offsetof(ABP_ReviveStatue_C, Capsule) == 0x000558, "Member 'ABP_ReviveStatue_C::Capsule' has a wrong offset!");
static_assert(offsetof(ABP_ReviveStatue_C, AbilitySystemComponentIW) == 0x000560, "Member 'ABP_ReviveStatue_C::AbilitySystemComponentIW' has a wrong offset!");
static_assert(offsetof(ABP_ReviveStatue_C, AssociatedActor) == 0x000568, "Member 'ABP_ReviveStatue_C::AssociatedActor' has a wrong offset!");
static_assert(offsetof(ABP_ReviveStatue_C, AssociatedActorTeamID) == 0x000570, "Member 'ABP_ReviveStatue_C::AssociatedActorTeamID' has a wrong offset!");

}

