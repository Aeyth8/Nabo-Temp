#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: AC_HitDirection

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "E_HitDirections_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass AC_HitDirection.AC_HitDirection_C
// 0x0020 (0x0250 - 0x0230)
class UAC_HitDirection_C final : public USceneComponent
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0230(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	double                                        ProductDiffThreshold;                              // 0x0238(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        PrimaryProduct;                                    // 0x0240(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        SecondaryProduct;                                  // 0x0248(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void CreateHealDirectionMarker(const struct FVector& HitLocation, double HealAmount);
	void CreateHitDirectionMarker(const struct FVector& HitLocation, double Damage);
	void ExecuteUbergraph_AC_HitDirection(int32 EntryPoint);
	void FindDirections(const struct FVector& HitLocation, E_HitDirections* PrimaryDirection, E_HitDirections* SecondaryDirection);
	void FindPrimaryDirection(TArray<double>& DotProducts, TArray<E_HitDirections>& Directions, E_HitDirections* Output);
	void FindSecondaryDirection(TArray<double>& DotProducts, TArray<E_HitDirections>& Directions, E_HitDirections* Output);
	void GetDotProductsFromDirections(const struct FVector& HitDirection, TArray<double>* DotProducts);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"AC_HitDirection_C">();
	}
	static class UAC_HitDirection_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAC_HitDirection_C>();
	}
};
static_assert(alignof(UAC_HitDirection_C) == 0x000010, "Wrong alignment on UAC_HitDirection_C");
static_assert(sizeof(UAC_HitDirection_C) == 0x000250, "Wrong size on UAC_HitDirection_C");
static_assert(offsetof(UAC_HitDirection_C, UberGraphFrame) == 0x000230, "Member 'UAC_HitDirection_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UAC_HitDirection_C, ProductDiffThreshold) == 0x000238, "Member 'UAC_HitDirection_C::ProductDiffThreshold' has a wrong offset!");
static_assert(offsetof(UAC_HitDirection_C, PrimaryProduct) == 0x000240, "Member 'UAC_HitDirection_C::PrimaryProduct' has a wrong offset!");
static_assert(offsetof(UAC_HitDirection_C, SecondaryProduct) == 0x000248, "Member 'UAC_HitDirection_C::SecondaryProduct' has a wrong offset!");

}

