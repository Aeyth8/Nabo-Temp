#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Deed

#include "Basic.hpp"

#include "GameplayAbilities_structs.hpp"
#include "S_EventMessageParams_structs.hpp"
#include "E_DeedMessageType_structs.hpp"
#include "Engine_structs.hpp"
#include "JP_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function BP_Deed.BP_Deed_C.BndEvt__BP_Deed_Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature
// 0x0118 (0x0118 - 0x0000)
struct BP_Deed_C_BndEvt__BP_Deed_Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bFromSweep;                                        // 0x001C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             SweepResult;                                       // 0x0020(0x00F8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_Deed_C_BndEvt__BP_Deed_Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on BP_Deed_C_BndEvt__BP_Deed_Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(sizeof(BP_Deed_C_BndEvt__BP_Deed_Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature) == 0x000118, "Wrong size on BP_Deed_C_BndEvt__BP_Deed_Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(offsetof(BP_Deed_C_BndEvt__BP_Deed_Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OverlappedComponent) == 0x000000, "Member 'BP_Deed_C_BndEvt__BP_Deed_Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BP_Deed_C_BndEvt__BP_Deed_Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'BP_Deed_C_BndEvt__BP_Deed_Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(BP_Deed_C_BndEvt__BP_Deed_Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'BP_Deed_C_BndEvt__BP_Deed_Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(BP_Deed_C_BndEvt__BP_Deed_Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000018, "Member 'BP_Deed_C_BndEvt__BP_Deed_Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(BP_Deed_C_BndEvt__BP_Deed_Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, bFromSweep) == 0x00001C, "Member 'BP_Deed_C_BndEvt__BP_Deed_Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::bFromSweep' has a wrong offset!");
static_assert(offsetof(BP_Deed_C_BndEvt__BP_Deed_Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, SweepResult) == 0x000020, "Member 'BP_Deed_C_BndEvt__BP_Deed_Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::SweepResult' has a wrong offset!");

// Function BP_Deed.BP_Deed_C.DeedHandInIsValid
// 0x0010 (0x0010 - 0x0000)
struct BP_Deed_C_DeedHandInIsValid final
{
public:
	class ABP_CaptureTheFlagDeedSafe_C*           Safe;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Return;                                            // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         WinningTeam;                                       // 0x0009(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Deed_C_DeedHandInIsValid) == 0x000008, "Wrong alignment on BP_Deed_C_DeedHandInIsValid");
static_assert(sizeof(BP_Deed_C_DeedHandInIsValid) == 0x000010, "Wrong size on BP_Deed_C_DeedHandInIsValid");
static_assert(offsetof(BP_Deed_C_DeedHandInIsValid, Safe) == 0x000000, "Member 'BP_Deed_C_DeedHandInIsValid::Safe' has a wrong offset!");
static_assert(offsetof(BP_Deed_C_DeedHandInIsValid, Return) == 0x000008, "Member 'BP_Deed_C_DeedHandInIsValid::Return' has a wrong offset!");
static_assert(offsetof(BP_Deed_C_DeedHandInIsValid, WinningTeam) == 0x000009, "Member 'BP_Deed_C_DeedHandInIsValid::WinningTeam' has a wrong offset!");
static_assert(offsetof(BP_Deed_C_DeedHandInIsValid, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x00000A, "Member 'BP_Deed_C_DeedHandInIsValid::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function BP_Deed.BP_Deed_C.DetermineEventMessageToSend
// 0x0020 (0x0020 - 0x0000)
struct BP_Deed_C_DetermineEventMessageToSend final
{
public:
	class APlayerController*                      ControllerIn;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      ControllerOut;                                     // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	E_DeedMessageType                             MessageType;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetTeamIDFromPawn_ReturnValue;            // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetTeamIDFromPawn_ReturnValue_1;          // 0x0013(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetTeamIDFromPawn_ReturnValue_2;          // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetTeamIDFromPawn_ReturnValue_3;          // 0x0016(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_2;        // 0x0017(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_3;        // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Deed_C_DetermineEventMessageToSend) == 0x000008, "Wrong alignment on BP_Deed_C_DetermineEventMessageToSend");
static_assert(sizeof(BP_Deed_C_DetermineEventMessageToSend) == 0x000020, "Wrong size on BP_Deed_C_DetermineEventMessageToSend");
static_assert(offsetof(BP_Deed_C_DetermineEventMessageToSend, ControllerIn) == 0x000000, "Member 'BP_Deed_C_DetermineEventMessageToSend::ControllerIn' has a wrong offset!");
static_assert(offsetof(BP_Deed_C_DetermineEventMessageToSend, ControllerOut) == 0x000008, "Member 'BP_Deed_C_DetermineEventMessageToSend::ControllerOut' has a wrong offset!");
static_assert(offsetof(BP_Deed_C_DetermineEventMessageToSend, MessageType) == 0x000010, "Member 'BP_Deed_C_DetermineEventMessageToSend::MessageType' has a wrong offset!");
static_assert(offsetof(BP_Deed_C_DetermineEventMessageToSend, CallFunc_GetTeamIDFromPawn_ReturnValue) == 0x000011, "Member 'BP_Deed_C_DetermineEventMessageToSend::CallFunc_GetTeamIDFromPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Deed_C_DetermineEventMessageToSend, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000012, "Member 'BP_Deed_C_DetermineEventMessageToSend::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Deed_C_DetermineEventMessageToSend, CallFunc_GetTeamIDFromPawn_ReturnValue_1) == 0x000013, "Member 'BP_Deed_C_DetermineEventMessageToSend::CallFunc_GetTeamIDFromPawn_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Deed_C_DetermineEventMessageToSend, CallFunc_GetTeamIDFromPawn_ReturnValue_2) == 0x000014, "Member 'BP_Deed_C_DetermineEventMessageToSend::CallFunc_GetTeamIDFromPawn_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Deed_C_DetermineEventMessageToSend, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000015, "Member 'BP_Deed_C_DetermineEventMessageToSend::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Deed_C_DetermineEventMessageToSend, CallFunc_GetTeamIDFromPawn_ReturnValue_3) == 0x000016, "Member 'BP_Deed_C_DetermineEventMessageToSend::CallFunc_GetTeamIDFromPawn_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Deed_C_DetermineEventMessageToSend, CallFunc_EqualEqual_ByteByte_ReturnValue_2) == 0x000017, "Member 'BP_Deed_C_DetermineEventMessageToSend::CallFunc_EqualEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Deed_C_DetermineEventMessageToSend, CallFunc_EqualEqual_ByteByte_ReturnValue_3) == 0x000018, "Member 'BP_Deed_C_DetermineEventMessageToSend::CallFunc_EqualEqual_ByteByte_ReturnValue_3' has a wrong offset!");

// Function BP_Deed.BP_Deed_C.DisableCollisionAndHide
// 0x0018 (0x0018 - 0x0000)
struct BP_Deed_C_DisableCollisionAndHide final
{
public:
	class APawn*                                  CallFunc_GetInstigator_ReturnValue;                // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        CallFunc_K2_GetRootComponent_ReturnValue;          // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_AttachToComponent_ReturnValue;         // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Deed_C_DisableCollisionAndHide) == 0x000008, "Wrong alignment on BP_Deed_C_DisableCollisionAndHide");
static_assert(sizeof(BP_Deed_C_DisableCollisionAndHide) == 0x000018, "Wrong size on BP_Deed_C_DisableCollisionAndHide");
static_assert(offsetof(BP_Deed_C_DisableCollisionAndHide, CallFunc_GetInstigator_ReturnValue) == 0x000000, "Member 'BP_Deed_C_DisableCollisionAndHide::CallFunc_GetInstigator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Deed_C_DisableCollisionAndHide, CallFunc_K2_GetRootComponent_ReturnValue) == 0x000008, "Member 'BP_Deed_C_DisableCollisionAndHide::CallFunc_K2_GetRootComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Deed_C_DisableCollisionAndHide, CallFunc_K2_AttachToComponent_ReturnValue) == 0x000010, "Member 'BP_Deed_C_DisableCollisionAndHide::CallFunc_K2_AttachToComponent_ReturnValue' has a wrong offset!");

// Function BP_Deed.BP_Deed_C.EnableCollisionAndShow
// 0x0001 (0x0001 - 0x0000)
struct BP_Deed_C_EnableCollisionAndShow final
{
public:
	bool                                          CallFunc_K2_AttachToComponent_ReturnValue;         // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Deed_C_EnableCollisionAndShow) == 0x000001, "Wrong alignment on BP_Deed_C_EnableCollisionAndShow");
static_assert(sizeof(BP_Deed_C_EnableCollisionAndShow) == 0x000001, "Wrong size on BP_Deed_C_EnableCollisionAndShow");
static_assert(offsetof(BP_Deed_C_EnableCollisionAndShow, CallFunc_K2_AttachToComponent_ReturnValue) == 0x000000, "Member 'BP_Deed_C_EnableCollisionAndShow::CallFunc_K2_AttachToComponent_ReturnValue' has a wrong offset!");

// Function BP_Deed.BP_Deed_C.ExecuteUbergraph_BP_Deed
// 0x02D0 (0x02D0 - 0x0000)
struct BP_Deed_C_ExecuteUbergraph_BP_Deed final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0008(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetActorLocation_SweepHitResult;       // 0x0020(0x00F8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_SetActorLocation_ReturnValue;          // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_119[0x7];                                      // 0x0119(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent;    // 0x0120(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor;             // 0x0128(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp;              // 0x0130(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex;         // 0x0138(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bFromSweep;             // 0x013C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_13D[0x3];                                      // 0x013D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_ComponentBoundEvent_SweepResult;            // 0x0140(0x00F8)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	float                                         CallFunc_GetGameTimeSinceCreation_ReturnValue;     // 0x0238(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_23C[0x4];                                      // 0x023C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBoxComponent*                          K2Node_DynamicCast_AsBox_Collision;                // 0x0240(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0248(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0249(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24A[0x6];                                      // 0x024A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0250(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_CaptureTheFlagDeedSafe_C*           K2Node_DynamicCast_AsBP_Capture_the_Flag_Deed_Safe; // 0x0258(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0260(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_DeedHandInIsValid_Return;                 // 0x0261(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_DeedHandInIsValid_WinningTeam;            // 0x0262(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_263[0x5];                                      // 0x0263(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_Event_InteractingActor;                     // 0x0268(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_Event_InteractionComponent;                 // 0x0270(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class ABP_ResidentCharacter_C*                K2Node_DynamicCast_AsBP_Resident_Character;        // 0x0278(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0280(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_281[0x7];                                      // 0x0281(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IGameplayTagAssetInterface> CallFunc_HasMatchingGameplayTag_self_CastInput;    // 0x0288(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasMatchingGameplayTag_ReturnValue;       // 0x0298(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetInstanceFromSlot_IsInstanceValid;      // 0x0299(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29A[0x6];                                      // 0x029A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UEquipmentInstance*                     CallFunc_GetInstanceFromSlot_ReturnValue;          // 0x02A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UItemInstance*                          CallFunc_AddItemDefinition_ReturnValue;            // 0x02A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_GetInstigator_ReturnValue;                // 0x02B0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UItemInstance*                          K2Node_DynamicCast_AsItem_Instance;                // 0x02B8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x02C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_SoftObjectReference_ReturnValue; // 0x02C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidSoftObjectReference_ReturnValue;   // 0x02C2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue_1;               // 0x02C3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x02C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Greater_DoubleDouble_A_ImplicitCast;      // 0x02C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Deed_C_ExecuteUbergraph_BP_Deed) == 0x000008, "Wrong alignment on BP_Deed_C_ExecuteUbergraph_BP_Deed");
static_assert(sizeof(BP_Deed_C_ExecuteUbergraph_BP_Deed) == 0x0002D0, "Wrong size on BP_Deed_C_ExecuteUbergraph_BP_Deed");
static_assert(offsetof(BP_Deed_C_ExecuteUbergraph_BP_Deed, EntryPoint) == 0x000000, "Member 'BP_Deed_C_ExecuteUbergraph_BP_Deed::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_Deed_C_ExecuteUbergraph_BP_Deed, CallFunc_HasAuthority_ReturnValue) == 0x000004, "Member 'BP_Deed_C_ExecuteUbergraph_BP_Deed::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Deed_C_ExecuteUbergraph_BP_Deed, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000008, "Member 'BP_Deed_C_ExecuteUbergraph_BP_Deed::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Deed_C_ExecuteUbergraph_BP_Deed, CallFunc_K2_SetActorLocation_SweepHitResult) == 0x000020, "Member 'BP_Deed_C_ExecuteUbergraph_BP_Deed::CallFunc_K2_SetActorLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_Deed_C_ExecuteUbergraph_BP_Deed, CallFunc_K2_SetActorLocation_ReturnValue) == 0x000118, "Member 'BP_Deed_C_ExecuteUbergraph_BP_Deed::CallFunc_K2_SetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Deed_C_ExecuteUbergraph_BP_Deed, K2Node_ComponentBoundEvent_OverlappedComponent) == 0x000120, "Member 'BP_Deed_C_ExecuteUbergraph_BP_Deed::K2Node_ComponentBoundEvent_OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BP_Deed_C_ExecuteUbergraph_BP_Deed, K2Node_ComponentBoundEvent_OtherActor) == 0x000128, "Member 'BP_Deed_C_ExecuteUbergraph_BP_Deed::K2Node_ComponentBoundEvent_OtherActor' has a wrong offset!");
static_assert(offsetof(BP_Deed_C_ExecuteUbergraph_BP_Deed, K2Node_ComponentBoundEvent_OtherComp) == 0x000130, "Member 'BP_Deed_C_ExecuteUbergraph_BP_Deed::K2Node_ComponentBoundEvent_OtherComp' has a wrong offset!");
static_assert(offsetof(BP_Deed_C_ExecuteUbergraph_BP_Deed, K2Node_ComponentBoundEvent_OtherBodyIndex) == 0x000138, "Member 'BP_Deed_C_ExecuteUbergraph_BP_Deed::K2Node_ComponentBoundEvent_OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(BP_Deed_C_ExecuteUbergraph_BP_Deed, K2Node_ComponentBoundEvent_bFromSweep) == 0x00013C, "Member 'BP_Deed_C_ExecuteUbergraph_BP_Deed::K2Node_ComponentBoundEvent_bFromSweep' has a wrong offset!");
static_assert(offsetof(BP_Deed_C_ExecuteUbergraph_BP_Deed, K2Node_ComponentBoundEvent_SweepResult) == 0x000140, "Member 'BP_Deed_C_ExecuteUbergraph_BP_Deed::K2Node_ComponentBoundEvent_SweepResult' has a wrong offset!");
static_assert(offsetof(BP_Deed_C_ExecuteUbergraph_BP_Deed, CallFunc_GetGameTimeSinceCreation_ReturnValue) == 0x000238, "Member 'BP_Deed_C_ExecuteUbergraph_BP_Deed::CallFunc_GetGameTimeSinceCreation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Deed_C_ExecuteUbergraph_BP_Deed, K2Node_DynamicCast_AsBox_Collision) == 0x000240, "Member 'BP_Deed_C_ExecuteUbergraph_BP_Deed::K2Node_DynamicCast_AsBox_Collision' has a wrong offset!");
static_assert(offsetof(BP_Deed_C_ExecuteUbergraph_BP_Deed, K2Node_DynamicCast_bSuccess) == 0x000248, "Member 'BP_Deed_C_ExecuteUbergraph_BP_Deed::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_Deed_C_ExecuteUbergraph_BP_Deed, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000249, "Member 'BP_Deed_C_ExecuteUbergraph_BP_Deed::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Deed_C_ExecuteUbergraph_BP_Deed, CallFunc_GetOwner_ReturnValue) == 0x000250, "Member 'BP_Deed_C_ExecuteUbergraph_BP_Deed::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Deed_C_ExecuteUbergraph_BP_Deed, K2Node_DynamicCast_AsBP_Capture_the_Flag_Deed_Safe) == 0x000258, "Member 'BP_Deed_C_ExecuteUbergraph_BP_Deed::K2Node_DynamicCast_AsBP_Capture_the_Flag_Deed_Safe' has a wrong offset!");
static_assert(offsetof(BP_Deed_C_ExecuteUbergraph_BP_Deed, K2Node_DynamicCast_bSuccess_1) == 0x000260, "Member 'BP_Deed_C_ExecuteUbergraph_BP_Deed::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_Deed_C_ExecuteUbergraph_BP_Deed, CallFunc_DeedHandInIsValid_Return) == 0x000261, "Member 'BP_Deed_C_ExecuteUbergraph_BP_Deed::CallFunc_DeedHandInIsValid_Return' has a wrong offset!");
static_assert(offsetof(BP_Deed_C_ExecuteUbergraph_BP_Deed, CallFunc_DeedHandInIsValid_WinningTeam) == 0x000262, "Member 'BP_Deed_C_ExecuteUbergraph_BP_Deed::CallFunc_DeedHandInIsValid_WinningTeam' has a wrong offset!");
static_assert(offsetof(BP_Deed_C_ExecuteUbergraph_BP_Deed, K2Node_Event_InteractingActor) == 0x000268, "Member 'BP_Deed_C_ExecuteUbergraph_BP_Deed::K2Node_Event_InteractingActor' has a wrong offset!");
static_assert(offsetof(BP_Deed_C_ExecuteUbergraph_BP_Deed, K2Node_Event_InteractionComponent) == 0x000270, "Member 'BP_Deed_C_ExecuteUbergraph_BP_Deed::K2Node_Event_InteractionComponent' has a wrong offset!");
static_assert(offsetof(BP_Deed_C_ExecuteUbergraph_BP_Deed, K2Node_DynamicCast_AsBP_Resident_Character) == 0x000278, "Member 'BP_Deed_C_ExecuteUbergraph_BP_Deed::K2Node_DynamicCast_AsBP_Resident_Character' has a wrong offset!");
static_assert(offsetof(BP_Deed_C_ExecuteUbergraph_BP_Deed, K2Node_DynamicCast_bSuccess_2) == 0x000280, "Member 'BP_Deed_C_ExecuteUbergraph_BP_Deed::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_Deed_C_ExecuteUbergraph_BP_Deed, CallFunc_HasMatchingGameplayTag_self_CastInput) == 0x000288, "Member 'BP_Deed_C_ExecuteUbergraph_BP_Deed::CallFunc_HasMatchingGameplayTag_self_CastInput' has a wrong offset!");
static_assert(offsetof(BP_Deed_C_ExecuteUbergraph_BP_Deed, CallFunc_HasMatchingGameplayTag_ReturnValue) == 0x000298, "Member 'BP_Deed_C_ExecuteUbergraph_BP_Deed::CallFunc_HasMatchingGameplayTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Deed_C_ExecuteUbergraph_BP_Deed, CallFunc_GetInstanceFromSlot_IsInstanceValid) == 0x000299, "Member 'BP_Deed_C_ExecuteUbergraph_BP_Deed::CallFunc_GetInstanceFromSlot_IsInstanceValid' has a wrong offset!");
static_assert(offsetof(BP_Deed_C_ExecuteUbergraph_BP_Deed, CallFunc_GetInstanceFromSlot_ReturnValue) == 0x0002A0, "Member 'BP_Deed_C_ExecuteUbergraph_BP_Deed::CallFunc_GetInstanceFromSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Deed_C_ExecuteUbergraph_BP_Deed, CallFunc_AddItemDefinition_ReturnValue) == 0x0002A8, "Member 'BP_Deed_C_ExecuteUbergraph_BP_Deed::CallFunc_AddItemDefinition_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Deed_C_ExecuteUbergraph_BP_Deed, CallFunc_GetInstigator_ReturnValue) == 0x0002B0, "Member 'BP_Deed_C_ExecuteUbergraph_BP_Deed::CallFunc_GetInstigator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Deed_C_ExecuteUbergraph_BP_Deed, K2Node_DynamicCast_AsItem_Instance) == 0x0002B8, "Member 'BP_Deed_C_ExecuteUbergraph_BP_Deed::K2Node_DynamicCast_AsItem_Instance' has a wrong offset!");
static_assert(offsetof(BP_Deed_C_ExecuteUbergraph_BP_Deed, K2Node_DynamicCast_bSuccess_3) == 0x0002C0, "Member 'BP_Deed_C_ExecuteUbergraph_BP_Deed::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(BP_Deed_C_ExecuteUbergraph_BP_Deed, CallFunc_NotEqual_SoftObjectReference_ReturnValue) == 0x0002C1, "Member 'BP_Deed_C_ExecuteUbergraph_BP_Deed::CallFunc_NotEqual_SoftObjectReference_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Deed_C_ExecuteUbergraph_BP_Deed, CallFunc_IsValidSoftObjectReference_ReturnValue) == 0x0002C2, "Member 'BP_Deed_C_ExecuteUbergraph_BP_Deed::CallFunc_IsValidSoftObjectReference_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Deed_C_ExecuteUbergraph_BP_Deed, CallFunc_HasAuthority_ReturnValue_1) == 0x0002C3, "Member 'BP_Deed_C_ExecuteUbergraph_BP_Deed::CallFunc_HasAuthority_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Deed_C_ExecuteUbergraph_BP_Deed, CallFunc_Conv_ByteToInt_ReturnValue) == 0x0002C4, "Member 'BP_Deed_C_ExecuteUbergraph_BP_Deed::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Deed_C_ExecuteUbergraph_BP_Deed, CallFunc_Greater_DoubleDouble_A_ImplicitCast) == 0x0002C8, "Member 'BP_Deed_C_ExecuteUbergraph_BP_Deed::CallFunc_Greater_DoubleDouble_A_ImplicitCast' has a wrong offset!");

// Function BP_Deed.BP_Deed_C.GrippedLocal
// 0x0008 (0x0008 - 0x0000)
struct BP_Deed_C_GrippedLocal final
{
public:
	class ACharacter*                             GrippingCharacter;                                 // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Deed_C_GrippedLocal) == 0x000008, "Wrong alignment on BP_Deed_C_GrippedLocal");
static_assert(sizeof(BP_Deed_C_GrippedLocal) == 0x000008, "Wrong size on BP_Deed_C_GrippedLocal");
static_assert(offsetof(BP_Deed_C_GrippedLocal, GrippingCharacter) == 0x000000, "Member 'BP_Deed_C_GrippedLocal::GrippingCharacter' has a wrong offset!");

// Function BP_Deed.BP_Deed_C.IsCurrentHolderOnDeedTeam
// 0x0003 (0x0003 - 0x0000)
struct BP_Deed_C_IsCurrentHolderOnDeedTeam final
{
public:
	bool                                          SameTeam;                                          // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetTeamIDFromPawn_ReturnValue;            // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Deed_C_IsCurrentHolderOnDeedTeam) == 0x000001, "Wrong alignment on BP_Deed_C_IsCurrentHolderOnDeedTeam");
static_assert(sizeof(BP_Deed_C_IsCurrentHolderOnDeedTeam) == 0x000003, "Wrong size on BP_Deed_C_IsCurrentHolderOnDeedTeam");
static_assert(offsetof(BP_Deed_C_IsCurrentHolderOnDeedTeam, SameTeam) == 0x000000, "Member 'BP_Deed_C_IsCurrentHolderOnDeedTeam::SameTeam' has a wrong offset!");
static_assert(offsetof(BP_Deed_C_IsCurrentHolderOnDeedTeam, CallFunc_GetTeamIDFromPawn_ReturnValue) == 0x000001, "Member 'BP_Deed_C_IsCurrentHolderOnDeedTeam::CallFunc_GetTeamIDFromPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Deed_C_IsCurrentHolderOnDeedTeam, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000002, "Member 'BP_Deed_C_IsCurrentHolderOnDeedTeam::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function BP_Deed.BP_Deed_C.On_DeliveredToTeamSafe__DelegateSignature
// 0x0001 (0x0001 - 0x0000)
struct BP_Deed_C_On_DeliveredToTeamSafe__DelegateSignature final
{
public:
	uint8                                         WinningTeamID;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Deed_C_On_DeliveredToTeamSafe__DelegateSignature) == 0x000001, "Wrong alignment on BP_Deed_C_On_DeliveredToTeamSafe__DelegateSignature");
static_assert(sizeof(BP_Deed_C_On_DeliveredToTeamSafe__DelegateSignature) == 0x000001, "Wrong size on BP_Deed_C_On_DeliveredToTeamSafe__DelegateSignature");
static_assert(offsetof(BP_Deed_C_On_DeliveredToTeamSafe__DelegateSignature, WinningTeamID) == 0x000000, "Member 'BP_Deed_C_On_DeliveredToTeamSafe__DelegateSignature::WinningTeamID' has a wrong offset!");

// Function BP_Deed.BP_Deed_C.Picked Up by Owning Team
// 0x0003 (0x0003 - 0x0000)
struct BP_Deed_C_Picked_Up_by_Owning_Team final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetTeamIDFromPawn_ReturnValue;            // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Deed_C_Picked_Up_by_Owning_Team) == 0x000001, "Wrong alignment on BP_Deed_C_Picked_Up_by_Owning_Team");
static_assert(sizeof(BP_Deed_C_Picked_Up_by_Owning_Team) == 0x000003, "Wrong size on BP_Deed_C_Picked_Up_by_Owning_Team");
static_assert(offsetof(BP_Deed_C_Picked_Up_by_Owning_Team, ReturnValue) == 0x000000, "Member 'BP_Deed_C_Picked_Up_by_Owning_Team::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Deed_C_Picked_Up_by_Owning_Team, CallFunc_GetTeamIDFromPawn_ReturnValue) == 0x000001, "Member 'BP_Deed_C_Picked_Up_by_Owning_Team::CallFunc_GetTeamIDFromPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Deed_C_Picked_Up_by_Owning_Team, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000002, "Member 'BP_Deed_C_Picked_Up_by_Owning_Team::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function BP_Deed.BP_Deed_C.PostInteract
// 0x0010 (0x0010 - 0x0000)
struct BP_Deed_C_PostInteract final
{
public:
	class AActor*                                 InteractingActor;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    InteractionComponent;                              // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Deed_C_PostInteract) == 0x000008, "Wrong alignment on BP_Deed_C_PostInteract");
static_assert(sizeof(BP_Deed_C_PostInteract) == 0x000010, "Wrong size on BP_Deed_C_PostInteract");
static_assert(offsetof(BP_Deed_C_PostInteract, InteractingActor) == 0x000000, "Member 'BP_Deed_C_PostInteract::InteractingActor' has a wrong offset!");
static_assert(offsetof(BP_Deed_C_PostInteract, InteractionComponent) == 0x000008, "Member 'BP_Deed_C_PostInteract::InteractionComponent' has a wrong offset!");

// Function BP_Deed.BP_Deed_C.Released Local
// 0x0008 (0x0008 - 0x0000)
struct BP_Deed_C_Released_Local final
{
public:
	class ACharacter*                             ReleasingCharacter;                                // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Deed_C_Released_Local) == 0x000008, "Wrong alignment on BP_Deed_C_Released_Local");
static_assert(sizeof(BP_Deed_C_Released_Local) == 0x000008, "Wrong size on BP_Deed_C_Released_Local");
static_assert(offsetof(BP_Deed_C_Released_Local, ReleasingCharacter) == 0x000000, "Member 'BP_Deed_C_Released_Local::ReleasingCharacter' has a wrong offset!");

// Function BP_Deed.BP_Deed_C.SendDeedEvent
// 0x0390 (0x0390 - 0x0000)
struct BP_Deed_C_SendDeedEvent final
{
public:
	class APlayerController*                      Controller;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	E_DeedMessageType                             MessageType;                                       // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A[0x6];                                        // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Get_Relative_Team_Color_as_Text_Serverside_TeamColor; // 0x0010(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0020(0x0048)(HasGetValueTypeHash)
	class FText                                   CallFunc_Get_Relative_Team_Color_as_Text_Serverside_TeamColor_1; // 0x0068(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x0078(0x0048)(HasGetValueTypeHash)
	uint8                                         CallFunc_GetTeamIDFromPawn_ReturnValue;            // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C1[0x7];                                       // 0x00C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Get_Relative_Team_Color_as_Text_Serverside_TeamColor_2; // 0x00C8(0x0010)()
	class APlayerStateJP*                         K2Node_DynamicCast_AsPlayer_State_JP;              // 0x00D8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E1[0x7];                                       // 0x00E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_2;            // 0x00E8(0x0048)(HasGetValueTypeHash)
	class FString                                 CallFunc_GetPlayerDisplayName_ReturnValue;         // 0x0130(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0140(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0150(0x0010)()
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0160(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_3;            // 0x0170(0x0048)(HasGetValueTypeHash)
	struct FS_EventMessageParams                  K2Node_MakeStruct_S_EventMessageParams;            // 0x01B8(0x0028)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_1;                          // 0x01E0(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue_1;                     // 0x01F0(0x0010)()
	struct FS_EventMessageParams                  K2Node_MakeStruct_S_EventMessageParams_1;          // 0x0200(0x0028)(HasGetValueTypeHash)
	uint8                                         CallFunc_GetTeamIDFromPawn_ReturnValue_1;          // 0x0228(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_229[0x7];                                      // 0x0229(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Get_Relative_Team_Color_as_Text_Serverside_TeamColor_3; // 0x0230(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_4;            // 0x0240(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_2;                          // 0x0288(0x0010)(ReferenceParm)
	class APlayerStateJP*                         K2Node_DynamicCast_AsPlayer_State_JP_1;            // 0x0298(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x02A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2A1[0x7];                                      // 0x02A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Format_ReturnValue_2;                     // 0x02A8(0x0010)()
	class FString                                 CallFunc_GetPlayerDisplayName_ReturnValue_1;       // 0x02B8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FS_EventMessageParams                  K2Node_MakeStruct_S_EventMessageParams_2;          // 0x02C8(0x0028)(HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_1;          // 0x02F0(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_5;            // 0x0300(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_3;                          // 0x0348(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue_3;                     // 0x0358(0x0010)()
	struct FS_EventMessageParams                  K2Node_MakeStruct_S_EventMessageParams_3;          // 0x0368(0x0028)(HasGetValueTypeHash)
};
static_assert(alignof(BP_Deed_C_SendDeedEvent) == 0x000008, "Wrong alignment on BP_Deed_C_SendDeedEvent");
static_assert(sizeof(BP_Deed_C_SendDeedEvent) == 0x000390, "Wrong size on BP_Deed_C_SendDeedEvent");
static_assert(offsetof(BP_Deed_C_SendDeedEvent, Controller) == 0x000000, "Member 'BP_Deed_C_SendDeedEvent::Controller' has a wrong offset!");
static_assert(offsetof(BP_Deed_C_SendDeedEvent, MessageType) == 0x000008, "Member 'BP_Deed_C_SendDeedEvent::MessageType' has a wrong offset!");
static_assert(offsetof(BP_Deed_C_SendDeedEvent, K2Node_SwitchEnum_CmpSuccess) == 0x000009, "Member 'BP_Deed_C_SendDeedEvent::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_Deed_C_SendDeedEvent, CallFunc_Get_Relative_Team_Color_as_Text_Serverside_TeamColor) == 0x000010, "Member 'BP_Deed_C_SendDeedEvent::CallFunc_Get_Relative_Team_Color_as_Text_Serverside_TeamColor' has a wrong offset!");
static_assert(offsetof(BP_Deed_C_SendDeedEvent, K2Node_MakeStruct_FormatArgumentData) == 0x000020, "Member 'BP_Deed_C_SendDeedEvent::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BP_Deed_C_SendDeedEvent, CallFunc_Get_Relative_Team_Color_as_Text_Serverside_TeamColor_1) == 0x000068, "Member 'BP_Deed_C_SendDeedEvent::CallFunc_Get_Relative_Team_Color_as_Text_Serverside_TeamColor_1' has a wrong offset!");
static_assert(offsetof(BP_Deed_C_SendDeedEvent, K2Node_MakeStruct_FormatArgumentData_1) == 0x000078, "Member 'BP_Deed_C_SendDeedEvent::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(BP_Deed_C_SendDeedEvent, CallFunc_GetTeamIDFromPawn_ReturnValue) == 0x0000C0, "Member 'BP_Deed_C_SendDeedEvent::CallFunc_GetTeamIDFromPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Deed_C_SendDeedEvent, CallFunc_Get_Relative_Team_Color_as_Text_Serverside_TeamColor_2) == 0x0000C8, "Member 'BP_Deed_C_SendDeedEvent::CallFunc_Get_Relative_Team_Color_as_Text_Serverside_TeamColor_2' has a wrong offset!");
static_assert(offsetof(BP_Deed_C_SendDeedEvent, K2Node_DynamicCast_AsPlayer_State_JP) == 0x0000D8, "Member 'BP_Deed_C_SendDeedEvent::K2Node_DynamicCast_AsPlayer_State_JP' has a wrong offset!");
static_assert(offsetof(BP_Deed_C_SendDeedEvent, K2Node_DynamicCast_bSuccess) == 0x0000E0, "Member 'BP_Deed_C_SendDeedEvent::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_Deed_C_SendDeedEvent, K2Node_MakeStruct_FormatArgumentData_2) == 0x0000E8, "Member 'BP_Deed_C_SendDeedEvent::K2Node_MakeStruct_FormatArgumentData_2' has a wrong offset!");
static_assert(offsetof(BP_Deed_C_SendDeedEvent, CallFunc_GetPlayerDisplayName_ReturnValue) == 0x000130, "Member 'BP_Deed_C_SendDeedEvent::CallFunc_GetPlayerDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Deed_C_SendDeedEvent, K2Node_MakeArray_Array) == 0x000140, "Member 'BP_Deed_C_SendDeedEvent::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_Deed_C_SendDeedEvent, CallFunc_Conv_StringToText_ReturnValue) == 0x000150, "Member 'BP_Deed_C_SendDeedEvent::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Deed_C_SendDeedEvent, CallFunc_Format_ReturnValue) == 0x000160, "Member 'BP_Deed_C_SendDeedEvent::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Deed_C_SendDeedEvent, K2Node_MakeStruct_FormatArgumentData_3) == 0x000170, "Member 'BP_Deed_C_SendDeedEvent::K2Node_MakeStruct_FormatArgumentData_3' has a wrong offset!");
static_assert(offsetof(BP_Deed_C_SendDeedEvent, K2Node_MakeStruct_S_EventMessageParams) == 0x0001B8, "Member 'BP_Deed_C_SendDeedEvent::K2Node_MakeStruct_S_EventMessageParams' has a wrong offset!");
static_assert(offsetof(BP_Deed_C_SendDeedEvent, K2Node_MakeArray_Array_1) == 0x0001E0, "Member 'BP_Deed_C_SendDeedEvent::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(BP_Deed_C_SendDeedEvent, CallFunc_Format_ReturnValue_1) == 0x0001F0, "Member 'BP_Deed_C_SendDeedEvent::CallFunc_Format_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Deed_C_SendDeedEvent, K2Node_MakeStruct_S_EventMessageParams_1) == 0x000200, "Member 'BP_Deed_C_SendDeedEvent::K2Node_MakeStruct_S_EventMessageParams_1' has a wrong offset!");
static_assert(offsetof(BP_Deed_C_SendDeedEvent, CallFunc_GetTeamIDFromPawn_ReturnValue_1) == 0x000228, "Member 'BP_Deed_C_SendDeedEvent::CallFunc_GetTeamIDFromPawn_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Deed_C_SendDeedEvent, CallFunc_Get_Relative_Team_Color_as_Text_Serverside_TeamColor_3) == 0x000230, "Member 'BP_Deed_C_SendDeedEvent::CallFunc_Get_Relative_Team_Color_as_Text_Serverside_TeamColor_3' has a wrong offset!");
static_assert(offsetof(BP_Deed_C_SendDeedEvent, K2Node_MakeStruct_FormatArgumentData_4) == 0x000240, "Member 'BP_Deed_C_SendDeedEvent::K2Node_MakeStruct_FormatArgumentData_4' has a wrong offset!");
static_assert(offsetof(BP_Deed_C_SendDeedEvent, K2Node_MakeArray_Array_2) == 0x000288, "Member 'BP_Deed_C_SendDeedEvent::K2Node_MakeArray_Array_2' has a wrong offset!");
static_assert(offsetof(BP_Deed_C_SendDeedEvent, K2Node_DynamicCast_AsPlayer_State_JP_1) == 0x000298, "Member 'BP_Deed_C_SendDeedEvent::K2Node_DynamicCast_AsPlayer_State_JP_1' has a wrong offset!");
static_assert(offsetof(BP_Deed_C_SendDeedEvent, K2Node_DynamicCast_bSuccess_1) == 0x0002A0, "Member 'BP_Deed_C_SendDeedEvent::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_Deed_C_SendDeedEvent, CallFunc_Format_ReturnValue_2) == 0x0002A8, "Member 'BP_Deed_C_SendDeedEvent::CallFunc_Format_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Deed_C_SendDeedEvent, CallFunc_GetPlayerDisplayName_ReturnValue_1) == 0x0002B8, "Member 'BP_Deed_C_SendDeedEvent::CallFunc_GetPlayerDisplayName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Deed_C_SendDeedEvent, K2Node_MakeStruct_S_EventMessageParams_2) == 0x0002C8, "Member 'BP_Deed_C_SendDeedEvent::K2Node_MakeStruct_S_EventMessageParams_2' has a wrong offset!");
static_assert(offsetof(BP_Deed_C_SendDeedEvent, CallFunc_Conv_StringToText_ReturnValue_1) == 0x0002F0, "Member 'BP_Deed_C_SendDeedEvent::CallFunc_Conv_StringToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Deed_C_SendDeedEvent, K2Node_MakeStruct_FormatArgumentData_5) == 0x000300, "Member 'BP_Deed_C_SendDeedEvent::K2Node_MakeStruct_FormatArgumentData_5' has a wrong offset!");
static_assert(offsetof(BP_Deed_C_SendDeedEvent, K2Node_MakeArray_Array_3) == 0x000348, "Member 'BP_Deed_C_SendDeedEvent::K2Node_MakeArray_Array_3' has a wrong offset!");
static_assert(offsetof(BP_Deed_C_SendDeedEvent, CallFunc_Format_ReturnValue_3) == 0x000358, "Member 'BP_Deed_C_SendDeedEvent::CallFunc_Format_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Deed_C_SendDeedEvent, K2Node_MakeStruct_S_EventMessageParams_3) == 0x000368, "Member 'BP_Deed_C_SendDeedEvent::K2Node_MakeStruct_S_EventMessageParams_3' has a wrong offset!");

// Function BP_Deed.BP_Deed_C.SetCosmetics
// 0x00F8 (0x00F8 - 0x0000)
struct BP_Deed_C_SetCosmetics final
{
public:
	class APawn*                                  CallFunc_GetPlayerPawn_ReturnValue;                // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class ITeamableInterface>    K2Node_DynamicCast_AsTeamable_Interface;           // 0x0008(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETeamType                                     CallFunc_GetTeamTypeFromTeamId_ReturnValue;        // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetTeamID_ReturnValue;                    // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B[0x1];                                       // 0x001B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           CallFunc_GetTeamColorForTeamId_ReturnValue;        // 0x001C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2D[0x3];                                       // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UMaterialInterface>      CallFunc_Map_Find_Value;                           // 0x0030(0x0028)(HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UMaterialInterface>      CallFunc_Map_Find_Value_1;                         // 0x0060(0x0028)(HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue_1;                   // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_89[0x7];                                       // 0x0089(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_LoadAsset_Blocking_ReturnValue;           // 0x0090(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_LoadAsset_Blocking_ReturnValue_1;         // 0x0098(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     K2Node_DynamicCast_AsMaterial_Interface;           // 0x00A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A9[0x7];                                       // 0x00A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInterface*                     K2Node_DynamicCast_AsMaterial_Interface_1;         // 0x00B0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Temp_byte_Variable;                                // 0x00B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x00BA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_BB[0x5];                                       // 0x00BB(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_MakeLiteralText_ReturnValue;              // 0x00C0(0x0010)()
	class FText                                   CallFunc_MakeLiteralText_ReturnValue_1;            // 0x00D0(0x0010)()
	class FText                                   K2Node_Select_Default;                             // 0x00E0(0x0010)()
	bool                                          CallFunc_IsSpectatorPawn_ReturnValue;              // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Deed_C_SetCosmetics) == 0x000008, "Wrong alignment on BP_Deed_C_SetCosmetics");
static_assert(sizeof(BP_Deed_C_SetCosmetics) == 0x0000F8, "Wrong size on BP_Deed_C_SetCosmetics");
static_assert(offsetof(BP_Deed_C_SetCosmetics, CallFunc_GetPlayerPawn_ReturnValue) == 0x000000, "Member 'BP_Deed_C_SetCosmetics::CallFunc_GetPlayerPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Deed_C_SetCosmetics, K2Node_DynamicCast_AsTeamable_Interface) == 0x000008, "Member 'BP_Deed_C_SetCosmetics::K2Node_DynamicCast_AsTeamable_Interface' has a wrong offset!");
static_assert(offsetof(BP_Deed_C_SetCosmetics, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_Deed_C_SetCosmetics::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_Deed_C_SetCosmetics, CallFunc_GetTeamTypeFromTeamId_ReturnValue) == 0x000019, "Member 'BP_Deed_C_SetCosmetics::CallFunc_GetTeamTypeFromTeamId_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Deed_C_SetCosmetics, CallFunc_GetTeamID_ReturnValue) == 0x00001A, "Member 'BP_Deed_C_SetCosmetics::CallFunc_GetTeamID_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Deed_C_SetCosmetics, CallFunc_GetTeamColorForTeamId_ReturnValue) == 0x00001C, "Member 'BP_Deed_C_SetCosmetics::CallFunc_GetTeamColorForTeamId_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Deed_C_SetCosmetics, Temp_bool_Variable) == 0x00002C, "Member 'BP_Deed_C_SetCosmetics::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_Deed_C_SetCosmetics, CallFunc_Map_Find_Value) == 0x000030, "Member 'BP_Deed_C_SetCosmetics::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BP_Deed_C_SetCosmetics, CallFunc_Map_Find_ReturnValue) == 0x000058, "Member 'BP_Deed_C_SetCosmetics::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Deed_C_SetCosmetics, CallFunc_Map_Find_Value_1) == 0x000060, "Member 'BP_Deed_C_SetCosmetics::CallFunc_Map_Find_Value_1' has a wrong offset!");
static_assert(offsetof(BP_Deed_C_SetCosmetics, CallFunc_Map_Find_ReturnValue_1) == 0x000088, "Member 'BP_Deed_C_SetCosmetics::CallFunc_Map_Find_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Deed_C_SetCosmetics, CallFunc_LoadAsset_Blocking_ReturnValue) == 0x000090, "Member 'BP_Deed_C_SetCosmetics::CallFunc_LoadAsset_Blocking_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Deed_C_SetCosmetics, CallFunc_LoadAsset_Blocking_ReturnValue_1) == 0x000098, "Member 'BP_Deed_C_SetCosmetics::CallFunc_LoadAsset_Blocking_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Deed_C_SetCosmetics, K2Node_DynamicCast_AsMaterial_Interface) == 0x0000A0, "Member 'BP_Deed_C_SetCosmetics::K2Node_DynamicCast_AsMaterial_Interface' has a wrong offset!");
static_assert(offsetof(BP_Deed_C_SetCosmetics, K2Node_DynamicCast_bSuccess_1) == 0x0000A8, "Member 'BP_Deed_C_SetCosmetics::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_Deed_C_SetCosmetics, K2Node_DynamicCast_AsMaterial_Interface_1) == 0x0000B0, "Member 'BP_Deed_C_SetCosmetics::K2Node_DynamicCast_AsMaterial_Interface_1' has a wrong offset!");
static_assert(offsetof(BP_Deed_C_SetCosmetics, K2Node_DynamicCast_bSuccess_2) == 0x0000B8, "Member 'BP_Deed_C_SetCosmetics::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_Deed_C_SetCosmetics, Temp_byte_Variable) == 0x0000B9, "Member 'BP_Deed_C_SetCosmetics::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_Deed_C_SetCosmetics, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x0000BA, "Member 'BP_Deed_C_SetCosmetics::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Deed_C_SetCosmetics, CallFunc_MakeLiteralText_ReturnValue) == 0x0000C0, "Member 'BP_Deed_C_SetCosmetics::CallFunc_MakeLiteralText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Deed_C_SetCosmetics, CallFunc_MakeLiteralText_ReturnValue_1) == 0x0000D0, "Member 'BP_Deed_C_SetCosmetics::CallFunc_MakeLiteralText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Deed_C_SetCosmetics, K2Node_Select_Default) == 0x0000E0, "Member 'BP_Deed_C_SetCosmetics::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_Deed_C_SetCosmetics, CallFunc_IsSpectatorPawn_ReturnValue) == 0x0000F0, "Member 'BP_Deed_C_SetCosmetics::CallFunc_IsSpectatorPawn_ReturnValue' has a wrong offset!");

// Function BP_Deed.BP_Deed_C.SlowDownHoldingCharacter
// 0x0030 (0x0030 - 0x0000)
struct BP_Deed_C_SlowDownHoldingCharacter final
{
public:
	bool                                          EnableSlow;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAbilitySystemComponent*                CallFunc_GetAbilitySystemComponent_ReturnValue;    // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_RemoveActiveEffectsWithAppliedTags_ReturnValue; // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAbilitySystemComponent*                CallFunc_GetAbilitySystemComponent_ReturnValue_1;  // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FActiveGameplayEffectHandle            CallFunc_BP_ApplyGameplayEffectToSelf_ReturnValue; // 0x0020(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Deed_C_SlowDownHoldingCharacter) == 0x000008, "Wrong alignment on BP_Deed_C_SlowDownHoldingCharacter");
static_assert(sizeof(BP_Deed_C_SlowDownHoldingCharacter) == 0x000030, "Wrong size on BP_Deed_C_SlowDownHoldingCharacter");
static_assert(offsetof(BP_Deed_C_SlowDownHoldingCharacter, EnableSlow) == 0x000000, "Member 'BP_Deed_C_SlowDownHoldingCharacter::EnableSlow' has a wrong offset!");
static_assert(offsetof(BP_Deed_C_SlowDownHoldingCharacter, CallFunc_GetAbilitySystemComponent_ReturnValue) == 0x000008, "Member 'BP_Deed_C_SlowDownHoldingCharacter::CallFunc_GetAbilitySystemComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Deed_C_SlowDownHoldingCharacter, CallFunc_RemoveActiveEffectsWithAppliedTags_ReturnValue) == 0x000010, "Member 'BP_Deed_C_SlowDownHoldingCharacter::CallFunc_RemoveActiveEffectsWithAppliedTags_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Deed_C_SlowDownHoldingCharacter, CallFunc_GetAbilitySystemComponent_ReturnValue_1) == 0x000018, "Member 'BP_Deed_C_SlowDownHoldingCharacter::CallFunc_GetAbilitySystemComponent_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Deed_C_SlowDownHoldingCharacter, CallFunc_BP_ApplyGameplayEffectToSelf_ReturnValue) == 0x000020, "Member 'BP_Deed_C_SlowDownHoldingCharacter::CallFunc_BP_ApplyGameplayEffectToSelf_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Deed_C_SlowDownHoldingCharacter, CallFunc_IsValid_ReturnValue) == 0x000028, "Member 'BP_Deed_C_SlowDownHoldingCharacter::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_Deed.BP_Deed_C.Toggle Relevant Safe Highlight
// 0x0068 (0x0068 - 0x0000)
struct BP_Deed_C_Toggle_Relevant_Safe_Highlight final
{
public:
	bool                                          Show;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetTeamIDFromPawn_ReturnValue;            // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_ResidentCharacter_C*                K2Node_DynamicCast_AsBP_Resident_Character;        // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_GetPlayerPawn_ReturnValue;                // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_CaptureTheFlagDeedSafe_C*           CallFunc_Array_Get_Item;                           // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_ResidentCharacter_C*                K2Node_DynamicCast_AsBP_Resident_Character_1;      // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0042(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_43[0x1];                                       // 0x0043(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerControllerJP_Match*              CallFunc_GetLocalPlayerControllerJP_Match_ReturnValue; // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerControllerJP_MatchBP_C*          K2Node_DynamicCast_AsPlayer_Controller_JP_Match_BP; // 0x0058(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Deed_C_Toggle_Relevant_Safe_Highlight) == 0x000008, "Wrong alignment on BP_Deed_C_Toggle_Relevant_Safe_Highlight");
static_assert(sizeof(BP_Deed_C_Toggle_Relevant_Safe_Highlight) == 0x000068, "Wrong size on BP_Deed_C_Toggle_Relevant_Safe_Highlight");
static_assert(offsetof(BP_Deed_C_Toggle_Relevant_Safe_Highlight, Show) == 0x000000, "Member 'BP_Deed_C_Toggle_Relevant_Safe_Highlight::Show' has a wrong offset!");
static_assert(offsetof(BP_Deed_C_Toggle_Relevant_Safe_Highlight, Temp_int_Array_Index_Variable) == 0x000004, "Member 'BP_Deed_C_Toggle_Relevant_Safe_Highlight::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_Deed_C_Toggle_Relevant_Safe_Highlight, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'BP_Deed_C_Toggle_Relevant_Safe_Highlight::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_Deed_C_Toggle_Relevant_Safe_Highlight, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'BP_Deed_C_Toggle_Relevant_Safe_Highlight::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Deed_C_Toggle_Relevant_Safe_Highlight, CallFunc_GetTeamIDFromPawn_ReturnValue) == 0x000010, "Member 'BP_Deed_C_Toggle_Relevant_Safe_Highlight::CallFunc_GetTeamIDFromPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Deed_C_Toggle_Relevant_Safe_Highlight, K2Node_DynamicCast_AsBP_Resident_Character) == 0x000018, "Member 'BP_Deed_C_Toggle_Relevant_Safe_Highlight::K2Node_DynamicCast_AsBP_Resident_Character' has a wrong offset!");
static_assert(offsetof(BP_Deed_C_Toggle_Relevant_Safe_Highlight, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'BP_Deed_C_Toggle_Relevant_Safe_Highlight::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_Deed_C_Toggle_Relevant_Safe_Highlight, CallFunc_GetPlayerPawn_ReturnValue) == 0x000028, "Member 'BP_Deed_C_Toggle_Relevant_Safe_Highlight::CallFunc_GetPlayerPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Deed_C_Toggle_Relevant_Safe_Highlight, CallFunc_Array_Get_Item) == 0x000030, "Member 'BP_Deed_C_Toggle_Relevant_Safe_Highlight::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_Deed_C_Toggle_Relevant_Safe_Highlight, K2Node_DynamicCast_AsBP_Resident_Character_1) == 0x000038, "Member 'BP_Deed_C_Toggle_Relevant_Safe_Highlight::K2Node_DynamicCast_AsBP_Resident_Character_1' has a wrong offset!");
static_assert(offsetof(BP_Deed_C_Toggle_Relevant_Safe_Highlight, K2Node_DynamicCast_bSuccess_1) == 0x000040, "Member 'BP_Deed_C_Toggle_Relevant_Safe_Highlight::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_Deed_C_Toggle_Relevant_Safe_Highlight, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000041, "Member 'BP_Deed_C_Toggle_Relevant_Safe_Highlight::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Deed_C_Toggle_Relevant_Safe_Highlight, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000042, "Member 'BP_Deed_C_Toggle_Relevant_Safe_Highlight::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Deed_C_Toggle_Relevant_Safe_Highlight, CallFunc_Array_Length_ReturnValue) == 0x000044, "Member 'BP_Deed_C_Toggle_Relevant_Safe_Highlight::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Deed_C_Toggle_Relevant_Safe_Highlight, CallFunc_GetLocalPlayerControllerJP_Match_ReturnValue) == 0x000048, "Member 'BP_Deed_C_Toggle_Relevant_Safe_Highlight::CallFunc_GetLocalPlayerControllerJP_Match_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Deed_C_Toggle_Relevant_Safe_Highlight, CallFunc_Less_IntInt_ReturnValue) == 0x000050, "Member 'BP_Deed_C_Toggle_Relevant_Safe_Highlight::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Deed_C_Toggle_Relevant_Safe_Highlight, K2Node_DynamicCast_AsPlayer_Controller_JP_Match_BP) == 0x000058, "Member 'BP_Deed_C_Toggle_Relevant_Safe_Highlight::K2Node_DynamicCast_AsPlayer_Controller_JP_Match_BP' has a wrong offset!");
static_assert(offsetof(BP_Deed_C_Toggle_Relevant_Safe_Highlight, K2Node_DynamicCast_bSuccess_2) == 0x000060, "Member 'BP_Deed_C_Toggle_Relevant_Safe_Highlight::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");

}

