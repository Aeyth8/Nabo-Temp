#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_ResourcePileManager

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "E_TimeOfDay_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_ResourcePileManager.BP_ResourcePileManager_C
// 0x0038 (0x02C8 - 0x0290)
class ABP_ResourcePileManager_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0290(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UBillboardComponent*                    Billboard;                                         // 0x0298(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<class ABP_ResourcePile_Spawner_C*>     ResourcePileSpawns;                                // 0x02A0(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, DisableEditOnInstance)
	int32                                         AmountToRespawn;                                   // 0x02B0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         DaysPassed;                                        // 0x02B4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 ActorToAddToDeliveryService;                       // 0x02B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                          IsCompleted;                                       // 0x02C0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void AddResourceCratesToDeliveryService();
	void CreateResourceTooltipTutorial();
	void ExecuteUbergraph_BP_ResourcePileManager(int32 EntryPoint);
	class APlayerController* GetFirstPlayerControllerFromTeam(const struct FTeam& Team);
	void MessagePlayersDelivered();
	void MessagePlayersPreDelivery();
	void On_Random_Delay_Elapsed();
	void On_TimeOfDayChange(E_TimeOfDay TimeOfDay);
	void OnEnded_8C24D0D14D87C2ADC38C53BC67D9F581();
	void ReceiveBeginPlay();
	void Respawn_Resource_Piles_at_Spawns_if_Depleted(int32 Amount);
	void Restock_Non_Depleted_Resource_Piles();
	bool ShouldSpawn(E_TimeOfDay TimeOfDay);
	void StoreReferences();

	bool HasAnyPlayers(const struct FTeam& Team) const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_ResourcePileManager_C">();
	}
	static class ABP_ResourcePileManager_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_ResourcePileManager_C>();
	}
};
static_assert(alignof(ABP_ResourcePileManager_C) == 0x000008, "Wrong alignment on ABP_ResourcePileManager_C");
static_assert(sizeof(ABP_ResourcePileManager_C) == 0x0002C8, "Wrong size on ABP_ResourcePileManager_C");
static_assert(offsetof(ABP_ResourcePileManager_C, UberGraphFrame) == 0x000290, "Member 'ABP_ResourcePileManager_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_ResourcePileManager_C, Billboard) == 0x000298, "Member 'ABP_ResourcePileManager_C::Billboard' has a wrong offset!");
static_assert(offsetof(ABP_ResourcePileManager_C, ResourcePileSpawns) == 0x0002A0, "Member 'ABP_ResourcePileManager_C::ResourcePileSpawns' has a wrong offset!");
static_assert(offsetof(ABP_ResourcePileManager_C, AmountToRespawn) == 0x0002B0, "Member 'ABP_ResourcePileManager_C::AmountToRespawn' has a wrong offset!");
static_assert(offsetof(ABP_ResourcePileManager_C, DaysPassed) == 0x0002B4, "Member 'ABP_ResourcePileManager_C::DaysPassed' has a wrong offset!");
static_assert(offsetof(ABP_ResourcePileManager_C, ActorToAddToDeliveryService) == 0x0002B8, "Member 'ABP_ResourcePileManager_C::ActorToAddToDeliveryService' has a wrong offset!");
static_assert(offsetof(ABP_ResourcePileManager_C, IsCompleted) == 0x0002C0, "Member 'ABP_ResourcePileManager_C::IsCompleted' has a wrong offset!");

}

