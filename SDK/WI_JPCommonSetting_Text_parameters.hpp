#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WI_JPCommonSetting_Text

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "UMG_structs.hpp"


namespace SDK::Params
{

// Function WI_JPCommonSetting_Text.WI_JPCommonSetting_Text_C.BndEvt__WI_JPCommonSetting_Text_EditableText_61_K2Node_ComponentBoundEvent_1_OnEditableTextCommittedEvent__DelegateSignature
// 0x0018 (0x0018 - 0x0000)
struct WI_JPCommonSetting_Text_C_BndEvt__WI_JPCommonSetting_Text_EditableText_61_K2Node_ComponentBoundEvent_1_OnEditableTextCommittedEvent__DelegateSignature final
{
public:
	class FText                                   Text;                                              // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	ETextCommit                                   CommitMethod;                                      // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WI_JPCommonSetting_Text_C_BndEvt__WI_JPCommonSetting_Text_EditableText_61_K2Node_ComponentBoundEvent_1_OnEditableTextCommittedEvent__DelegateSignature) == 0x000008, "Wrong alignment on WI_JPCommonSetting_Text_C_BndEvt__WI_JPCommonSetting_Text_EditableText_61_K2Node_ComponentBoundEvent_1_OnEditableTextCommittedEvent__DelegateSignature");
static_assert(sizeof(WI_JPCommonSetting_Text_C_BndEvt__WI_JPCommonSetting_Text_EditableText_61_K2Node_ComponentBoundEvent_1_OnEditableTextCommittedEvent__DelegateSignature) == 0x000018, "Wrong size on WI_JPCommonSetting_Text_C_BndEvt__WI_JPCommonSetting_Text_EditableText_61_K2Node_ComponentBoundEvent_1_OnEditableTextCommittedEvent__DelegateSignature");
static_assert(offsetof(WI_JPCommonSetting_Text_C_BndEvt__WI_JPCommonSetting_Text_EditableText_61_K2Node_ComponentBoundEvent_1_OnEditableTextCommittedEvent__DelegateSignature, Text) == 0x000000, "Member 'WI_JPCommonSetting_Text_C_BndEvt__WI_JPCommonSetting_Text_EditableText_61_K2Node_ComponentBoundEvent_1_OnEditableTextCommittedEvent__DelegateSignature::Text' has a wrong offset!");
static_assert(offsetof(WI_JPCommonSetting_Text_C_BndEvt__WI_JPCommonSetting_Text_EditableText_61_K2Node_ComponentBoundEvent_1_OnEditableTextCommittedEvent__DelegateSignature, CommitMethod) == 0x000010, "Member 'WI_JPCommonSetting_Text_C_BndEvt__WI_JPCommonSetting_Text_EditableText_61_K2Node_ComponentBoundEvent_1_OnEditableTextCommittedEvent__DelegateSignature::CommitMethod' has a wrong offset!");

// Function WI_JPCommonSetting_Text.WI_JPCommonSetting_Text_C.BndEvt__WI_JPCommonSetting_Text_TextBox_K2Node_ComponentBoundEvent_0_OnEditableTextChangedEvent__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct WI_JPCommonSetting_Text_C_BndEvt__WI_JPCommonSetting_Text_TextBox_K2Node_ComponentBoundEvent_0_OnEditableTextChangedEvent__DelegateSignature final
{
public:
	class FText                                   Text;                                              // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(WI_JPCommonSetting_Text_C_BndEvt__WI_JPCommonSetting_Text_TextBox_K2Node_ComponentBoundEvent_0_OnEditableTextChangedEvent__DelegateSignature) == 0x000008, "Wrong alignment on WI_JPCommonSetting_Text_C_BndEvt__WI_JPCommonSetting_Text_TextBox_K2Node_ComponentBoundEvent_0_OnEditableTextChangedEvent__DelegateSignature");
static_assert(sizeof(WI_JPCommonSetting_Text_C_BndEvt__WI_JPCommonSetting_Text_TextBox_K2Node_ComponentBoundEvent_0_OnEditableTextChangedEvent__DelegateSignature) == 0x000010, "Wrong size on WI_JPCommonSetting_Text_C_BndEvt__WI_JPCommonSetting_Text_TextBox_K2Node_ComponentBoundEvent_0_OnEditableTextChangedEvent__DelegateSignature");
static_assert(offsetof(WI_JPCommonSetting_Text_C_BndEvt__WI_JPCommonSetting_Text_TextBox_K2Node_ComponentBoundEvent_0_OnEditableTextChangedEvent__DelegateSignature, Text) == 0x000000, "Member 'WI_JPCommonSetting_Text_C_BndEvt__WI_JPCommonSetting_Text_TextBox_K2Node_ComponentBoundEvent_0_OnEditableTextChangedEvent__DelegateSignature::Text' has a wrong offset!");

// Function WI_JPCommonSetting_Text.WI_JPCommonSetting_Text_C.ExecuteUbergraph_WI_JPCommonSetting_Text
// 0x0158 (0x0158 - 0x0000)
struct WI_JPCommonSetting_Text_C_ExecuteUbergraph_WI_JPCommonSetting_Text final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x0008(0x0038)(IsPlainOldData, NoDestructor)
	struct FPointerEvent                          K2Node_Event_MouseEvent_1;                         // 0x0040(0x0078)(ConstParm)
	struct FPointerEvent                          K2Node_Event_MouseEvent;                           // 0x00B8(0x0078)(ConstParm)
	class FText                                   K2Node_ComponentBoundEvent_Text_1;                 // 0x0130(0x0010)(ConstParm)
	class FText                                   K2Node_ComponentBoundEvent_Text;                   // 0x0140(0x0010)(ConstParm)
	ETextCommit                                   K2Node_ComponentBoundEvent_CommitMethod;           // 0x0150(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0151(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0152(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0153(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WI_JPCommonSetting_Text_C_ExecuteUbergraph_WI_JPCommonSetting_Text) == 0x000008, "Wrong alignment on WI_JPCommonSetting_Text_C_ExecuteUbergraph_WI_JPCommonSetting_Text");
static_assert(sizeof(WI_JPCommonSetting_Text_C_ExecuteUbergraph_WI_JPCommonSetting_Text) == 0x000158, "Wrong size on WI_JPCommonSetting_Text_C_ExecuteUbergraph_WI_JPCommonSetting_Text");
static_assert(offsetof(WI_JPCommonSetting_Text_C_ExecuteUbergraph_WI_JPCommonSetting_Text, EntryPoint) == 0x000000, "Member 'WI_JPCommonSetting_Text_C_ExecuteUbergraph_WI_JPCommonSetting_Text::EntryPoint' has a wrong offset!");
static_assert(offsetof(WI_JPCommonSetting_Text_C_ExecuteUbergraph_WI_JPCommonSetting_Text, Temp_bool_Variable) == 0x000004, "Member 'WI_JPCommonSetting_Text_C_ExecuteUbergraph_WI_JPCommonSetting_Text::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WI_JPCommonSetting_Text_C_ExecuteUbergraph_WI_JPCommonSetting_Text, Temp_byte_Variable) == 0x000005, "Member 'WI_JPCommonSetting_Text_C_ExecuteUbergraph_WI_JPCommonSetting_Text::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WI_JPCommonSetting_Text_C_ExecuteUbergraph_WI_JPCommonSetting_Text, Temp_byte_Variable_1) == 0x000006, "Member 'WI_JPCommonSetting_Text_C_ExecuteUbergraph_WI_JPCommonSetting_Text::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WI_JPCommonSetting_Text_C_ExecuteUbergraph_WI_JPCommonSetting_Text, K2Node_Event_IsDesignTime) == 0x000007, "Member 'WI_JPCommonSetting_Text_C_ExecuteUbergraph_WI_JPCommonSetting_Text::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(WI_JPCommonSetting_Text_C_ExecuteUbergraph_WI_JPCommonSetting_Text, K2Node_Event_MyGeometry) == 0x000008, "Member 'WI_JPCommonSetting_Text_C_ExecuteUbergraph_WI_JPCommonSetting_Text::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(WI_JPCommonSetting_Text_C_ExecuteUbergraph_WI_JPCommonSetting_Text, K2Node_Event_MouseEvent_1) == 0x000040, "Member 'WI_JPCommonSetting_Text_C_ExecuteUbergraph_WI_JPCommonSetting_Text::K2Node_Event_MouseEvent_1' has a wrong offset!");
static_assert(offsetof(WI_JPCommonSetting_Text_C_ExecuteUbergraph_WI_JPCommonSetting_Text, K2Node_Event_MouseEvent) == 0x0000B8, "Member 'WI_JPCommonSetting_Text_C_ExecuteUbergraph_WI_JPCommonSetting_Text::K2Node_Event_MouseEvent' has a wrong offset!");
static_assert(offsetof(WI_JPCommonSetting_Text_C_ExecuteUbergraph_WI_JPCommonSetting_Text, K2Node_ComponentBoundEvent_Text_1) == 0x000130, "Member 'WI_JPCommonSetting_Text_C_ExecuteUbergraph_WI_JPCommonSetting_Text::K2Node_ComponentBoundEvent_Text_1' has a wrong offset!");
static_assert(offsetof(WI_JPCommonSetting_Text_C_ExecuteUbergraph_WI_JPCommonSetting_Text, K2Node_ComponentBoundEvent_Text) == 0x000140, "Member 'WI_JPCommonSetting_Text_C_ExecuteUbergraph_WI_JPCommonSetting_Text::K2Node_ComponentBoundEvent_Text' has a wrong offset!");
static_assert(offsetof(WI_JPCommonSetting_Text_C_ExecuteUbergraph_WI_JPCommonSetting_Text, K2Node_ComponentBoundEvent_CommitMethod) == 0x000150, "Member 'WI_JPCommonSetting_Text_C_ExecuteUbergraph_WI_JPCommonSetting_Text::K2Node_ComponentBoundEvent_CommitMethod' has a wrong offset!");
static_assert(offsetof(WI_JPCommonSetting_Text_C_ExecuteUbergraph_WI_JPCommonSetting_Text, CallFunc_Not_PreBool_ReturnValue) == 0x000151, "Member 'WI_JPCommonSetting_Text_C_ExecuteUbergraph_WI_JPCommonSetting_Text::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WI_JPCommonSetting_Text_C_ExecuteUbergraph_WI_JPCommonSetting_Text, CallFunc_BooleanAND_ReturnValue) == 0x000152, "Member 'WI_JPCommonSetting_Text_C_ExecuteUbergraph_WI_JPCommonSetting_Text::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(WI_JPCommonSetting_Text_C_ExecuteUbergraph_WI_JPCommonSetting_Text, K2Node_Select_Default) == 0x000153, "Member 'WI_JPCommonSetting_Text_C_ExecuteUbergraph_WI_JPCommonSetting_Text::K2Node_Select_Default' has a wrong offset!");

// Function WI_JPCommonSetting_Text.WI_JPCommonSetting_Text_C.GetValue
// 0x0020 (0x0020 - 0x0000)
struct WI_JPCommonSetting_Text_C_GetValue final
{
public:
	class FText                                   ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ReturnParm)
	class FText                                   CallFunc_GetText_ReturnValue;                      // 0x0010(0x0010)()
};
static_assert(alignof(WI_JPCommonSetting_Text_C_GetValue) == 0x000008, "Wrong alignment on WI_JPCommonSetting_Text_C_GetValue");
static_assert(sizeof(WI_JPCommonSetting_Text_C_GetValue) == 0x000020, "Wrong size on WI_JPCommonSetting_Text_C_GetValue");
static_assert(offsetof(WI_JPCommonSetting_Text_C_GetValue, ReturnValue) == 0x000000, "Member 'WI_JPCommonSetting_Text_C_GetValue::ReturnValue' has a wrong offset!");
static_assert(offsetof(WI_JPCommonSetting_Text_C_GetValue, CallFunc_GetText_ReturnValue) == 0x000010, "Member 'WI_JPCommonSetting_Text_C_GetValue::CallFunc_GetText_ReturnValue' has a wrong offset!");

// Function WI_JPCommonSetting_Text.WI_JPCommonSetting_Text_C.OnMouseEnter
// 0x00B0 (0x00B0 - 0x0000)
struct WI_JPCommonSetting_Text_C_OnMouseEnter final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FPointerEvent                          MouseEvent;                                        // 0x0038(0x0078)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(WI_JPCommonSetting_Text_C_OnMouseEnter) == 0x000008, "Wrong alignment on WI_JPCommonSetting_Text_C_OnMouseEnter");
static_assert(sizeof(WI_JPCommonSetting_Text_C_OnMouseEnter) == 0x0000B0, "Wrong size on WI_JPCommonSetting_Text_C_OnMouseEnter");
static_assert(offsetof(WI_JPCommonSetting_Text_C_OnMouseEnter, MyGeometry) == 0x000000, "Member 'WI_JPCommonSetting_Text_C_OnMouseEnter::MyGeometry' has a wrong offset!");
static_assert(offsetof(WI_JPCommonSetting_Text_C_OnMouseEnter, MouseEvent) == 0x000038, "Member 'WI_JPCommonSetting_Text_C_OnMouseEnter::MouseEvent' has a wrong offset!");

// Function WI_JPCommonSetting_Text.WI_JPCommonSetting_Text_C.OnMouseLeave
// 0x0078 (0x0078 - 0x0000)
struct WI_JPCommonSetting_Text_C_OnMouseLeave final
{
public:
	struct FPointerEvent                          MouseEvent;                                        // 0x0000(0x0078)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(WI_JPCommonSetting_Text_C_OnMouseLeave) == 0x000008, "Wrong alignment on WI_JPCommonSetting_Text_C_OnMouseLeave");
static_assert(sizeof(WI_JPCommonSetting_Text_C_OnMouseLeave) == 0x000078, "Wrong size on WI_JPCommonSetting_Text_C_OnMouseLeave");
static_assert(offsetof(WI_JPCommonSetting_Text_C_OnMouseLeave, MouseEvent) == 0x000000, "Member 'WI_JPCommonSetting_Text_C_OnMouseLeave::MouseEvent' has a wrong offset!");

// Function WI_JPCommonSetting_Text.WI_JPCommonSetting_Text_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct WI_JPCommonSetting_Text_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WI_JPCommonSetting_Text_C_PreConstruct) == 0x000001, "Wrong alignment on WI_JPCommonSetting_Text_C_PreConstruct");
static_assert(sizeof(WI_JPCommonSetting_Text_C_PreConstruct) == 0x000001, "Wrong size on WI_JPCommonSetting_Text_C_PreConstruct");
static_assert(offsetof(WI_JPCommonSetting_Text_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'WI_JPCommonSetting_Text_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function WI_JPCommonSetting_Text.WI_JPCommonSetting_Text_C.SetValue
// 0x0010 (0x0010 - 0x0000)
struct WI_JPCommonSetting_Text_C_SetValue final
{
public:
	class FText                                   InValue;                                           // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(WI_JPCommonSetting_Text_C_SetValue) == 0x000008, "Wrong alignment on WI_JPCommonSetting_Text_C_SetValue");
static_assert(sizeof(WI_JPCommonSetting_Text_C_SetValue) == 0x000010, "Wrong size on WI_JPCommonSetting_Text_C_SetValue");
static_assert(offsetof(WI_JPCommonSetting_Text_C_SetValue, InValue) == 0x000000, "Member 'WI_JPCommonSetting_Text_C_SetValue::InValue' has a wrong offset!");

}

