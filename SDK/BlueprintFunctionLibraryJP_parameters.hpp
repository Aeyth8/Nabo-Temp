#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BlueprintFunctionLibraryJP

#include "Basic.hpp"

#include "EnhancedInput_structs.hpp"
#include "JP_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "SlateCore_structs.hpp"
#include "GameplayAbilities_structs.hpp"
#include "Engine_structs.hpp"
#include "S_EventMessageParams_structs.hpp"
#include "S_HighlightParameters_structs.hpp"
#include "E_Tools_structs.hpp"


namespace SDK::Params
{

// Function BlueprintFunctionLibraryJP.BlueprintFunctionLibraryJP_C.Add Tutorial
// 0x0028 (0x0028 - 0x0000)
struct BlueprintFunctionLibraryJP_C_Add_Tutorial final
{
public:
	class APlayerControllerJP_MatchBP_C*          Owning_PlayerController;                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 Tutorial;                                          // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UItemTutorial_Base_C*                   CallFunc_Create_ReturnValue;                       // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsTutorialSeen_Already_Seen;              // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BlueprintFunctionLibraryJP_C_Add_Tutorial) == 0x000008, "Wrong alignment on BlueprintFunctionLibraryJP_C_Add_Tutorial");
static_assert(sizeof(BlueprintFunctionLibraryJP_C_Add_Tutorial) == 0x000028, "Wrong size on BlueprintFunctionLibraryJP_C_Add_Tutorial");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_Add_Tutorial, Owning_PlayerController) == 0x000000, "Member 'BlueprintFunctionLibraryJP_C_Add_Tutorial::Owning_PlayerController' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_Add_Tutorial, Tutorial) == 0x000008, "Member 'BlueprintFunctionLibraryJP_C_Add_Tutorial::Tutorial' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_Add_Tutorial, __WorldContext) == 0x000010, "Member 'BlueprintFunctionLibraryJP_C_Add_Tutorial::__WorldContext' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_Add_Tutorial, CallFunc_Create_ReturnValue) == 0x000018, "Member 'BlueprintFunctionLibraryJP_C_Add_Tutorial::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_Add_Tutorial, CallFunc_IsTutorialSeen_Already_Seen) == 0x000020, "Member 'BlueprintFunctionLibraryJP_C_Add_Tutorial::CallFunc_IsTutorialSeen_Already_Seen' has a wrong offset!");

// Function BlueprintFunctionLibraryJP.BlueprintFunctionLibraryJP_C.AddTextChatMapping
// 0x0050 (0x0050 - 0x0000)
struct BlueprintFunctionLibraryJP_C_AddTextChatMapping final
{
public:
	class APlayerController*                      PlayerController;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Add;                                               // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FModifyContextOptions                  Temp_struct_Variable;                              // 0x0018(0x0001)(ConstParm, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UEnhancedInputLocalPlayerSubsystem*     CallFunc_GetLocalPlayerSubSystemFromPlayerController_ReturnValue; // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FModifyContextOptions                  Temp_struct_Variable_1;                            // 0x0028(0x0001)(ConstParm, NoDestructor)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IEnhancedInputSubsystemInterface> CallFunc_RemoveMappingContext_self_CastInput;      // 0x0030(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IEnhancedInputSubsystemInterface> CallFunc_AddMappingContext_self_CastInput;         // 0x0040(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BlueprintFunctionLibraryJP_C_AddTextChatMapping) == 0x000008, "Wrong alignment on BlueprintFunctionLibraryJP_C_AddTextChatMapping");
static_assert(sizeof(BlueprintFunctionLibraryJP_C_AddTextChatMapping) == 0x000050, "Wrong size on BlueprintFunctionLibraryJP_C_AddTextChatMapping");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_AddTextChatMapping, PlayerController) == 0x000000, "Member 'BlueprintFunctionLibraryJP_C_AddTextChatMapping::PlayerController' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_AddTextChatMapping, Add) == 0x000008, "Member 'BlueprintFunctionLibraryJP_C_AddTextChatMapping::Add' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_AddTextChatMapping, __WorldContext) == 0x000010, "Member 'BlueprintFunctionLibraryJP_C_AddTextChatMapping::__WorldContext' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_AddTextChatMapping, Temp_struct_Variable) == 0x000018, "Member 'BlueprintFunctionLibraryJP_C_AddTextChatMapping::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_AddTextChatMapping, CallFunc_GetLocalPlayerSubSystemFromPlayerController_ReturnValue) == 0x000020, "Member 'BlueprintFunctionLibraryJP_C_AddTextChatMapping::CallFunc_GetLocalPlayerSubSystemFromPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_AddTextChatMapping, Temp_struct_Variable_1) == 0x000028, "Member 'BlueprintFunctionLibraryJP_C_AddTextChatMapping::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_AddTextChatMapping, CallFunc_RemoveMappingContext_self_CastInput) == 0x000030, "Member 'BlueprintFunctionLibraryJP_C_AddTextChatMapping::CallFunc_RemoveMappingContext_self_CastInput' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_AddTextChatMapping, CallFunc_AddMappingContext_self_CastInput) == 0x000040, "Member 'BlueprintFunctionLibraryJP_C_AddTextChatMapping::CallFunc_AddMappingContext_self_CastInput' has a wrong offset!");

// Function BlueprintFunctionLibraryJP.BlueprintFunctionLibraryJP_C.ApplyGameplayEffectToSelfByDuration
// 0x0050 (0x0050 - 0x0000)
struct BlueprintFunctionLibraryJP_C_ApplyGameplayEffectToSelfByDuration final
{
public:
	class UGameplayAbility*                       Target;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         Duration;                                          // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TSubclassOf<class UGameplayEffect>            GameplayEffectClass;                               // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAbilitySystemComponent*                CallFunc_GetAbilitySystemComponentFromActorInfo_ReturnValue; // 0x0020(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FGameplayEffectSpecHandle              CallFunc_MakeOutgoingSpec_ReturnValue;             // 0x0028(0x0010)()
	struct FGameplayEffectSpecHandle              CallFunc_SetDuration_ReturnValue;                  // 0x0038(0x0010)()
	struct FActiveGameplayEffectHandle            CallFunc_K2_ApplyGameplayEffectSpecToOwner_ReturnValue; // 0x0048(0x0008)(NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BlueprintFunctionLibraryJP_C_ApplyGameplayEffectToSelfByDuration) == 0x000008, "Wrong alignment on BlueprintFunctionLibraryJP_C_ApplyGameplayEffectToSelfByDuration");
static_assert(sizeof(BlueprintFunctionLibraryJP_C_ApplyGameplayEffectToSelfByDuration) == 0x000050, "Wrong size on BlueprintFunctionLibraryJP_C_ApplyGameplayEffectToSelfByDuration");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_ApplyGameplayEffectToSelfByDuration, Target) == 0x000000, "Member 'BlueprintFunctionLibraryJP_C_ApplyGameplayEffectToSelfByDuration::Target' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_ApplyGameplayEffectToSelfByDuration, Duration) == 0x000008, "Member 'BlueprintFunctionLibraryJP_C_ApplyGameplayEffectToSelfByDuration::Duration' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_ApplyGameplayEffectToSelfByDuration, GameplayEffectClass) == 0x000010, "Member 'BlueprintFunctionLibraryJP_C_ApplyGameplayEffectToSelfByDuration::GameplayEffectClass' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_ApplyGameplayEffectToSelfByDuration, __WorldContext) == 0x000018, "Member 'BlueprintFunctionLibraryJP_C_ApplyGameplayEffectToSelfByDuration::__WorldContext' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_ApplyGameplayEffectToSelfByDuration, CallFunc_GetAbilitySystemComponentFromActorInfo_ReturnValue) == 0x000020, "Member 'BlueprintFunctionLibraryJP_C_ApplyGameplayEffectToSelfByDuration::CallFunc_GetAbilitySystemComponentFromActorInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_ApplyGameplayEffectToSelfByDuration, CallFunc_MakeOutgoingSpec_ReturnValue) == 0x000028, "Member 'BlueprintFunctionLibraryJP_C_ApplyGameplayEffectToSelfByDuration::CallFunc_MakeOutgoingSpec_ReturnValue' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_ApplyGameplayEffectToSelfByDuration, CallFunc_SetDuration_ReturnValue) == 0x000038, "Member 'BlueprintFunctionLibraryJP_C_ApplyGameplayEffectToSelfByDuration::CallFunc_SetDuration_ReturnValue' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_ApplyGameplayEffectToSelfByDuration, CallFunc_K2_ApplyGameplayEffectSpecToOwner_ReturnValue) == 0x000048, "Member 'BlueprintFunctionLibraryJP_C_ApplyGameplayEffectToSelfByDuration::CallFunc_K2_ApplyGameplayEffectSpecToOwner_ReturnValue' has a wrong offset!");

// Function BlueprintFunctionLibraryJP.BlueprintFunctionLibraryJP_C.Auth_SendEventMessage
// 0x0040 (0x0040 - 0x0000)
struct BlueprintFunctionLibraryJP_C_Auth_SendEventMessage final
{
public:
	struct FS_EventMessageParams                  Message;                                           // 0x0000(0x0028)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0028(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AMessengerManager_C*                    CallFunc_GetActorOfClass_ReturnValue;              // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BlueprintFunctionLibraryJP_C_Auth_SendEventMessage) == 0x000008, "Wrong alignment on BlueprintFunctionLibraryJP_C_Auth_SendEventMessage");
static_assert(sizeof(BlueprintFunctionLibraryJP_C_Auth_SendEventMessage) == 0x000040, "Wrong size on BlueprintFunctionLibraryJP_C_Auth_SendEventMessage");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_Auth_SendEventMessage, Message) == 0x000000, "Member 'BlueprintFunctionLibraryJP_C_Auth_SendEventMessage::Message' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_Auth_SendEventMessage, __WorldContext) == 0x000028, "Member 'BlueprintFunctionLibraryJP_C_Auth_SendEventMessage::__WorldContext' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_Auth_SendEventMessage, CallFunc_GetActorOfClass_ReturnValue) == 0x000030, "Member 'BlueprintFunctionLibraryJP_C_Auth_SendEventMessage::CallFunc_GetActorOfClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_Auth_SendEventMessage, CallFunc_IsValid_ReturnValue) == 0x000038, "Member 'BlueprintFunctionLibraryJP_C_Auth_SendEventMessage::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BlueprintFunctionLibraryJP.BlueprintFunctionLibraryJP_C.Auth_SendMessage
// 0x00A0 (0x00A0 - 0x0000)
struct BlueprintFunctionLibraryJP_C_Auth_SendMessage final
{
public:
	class APlayerController*                      Controller_Reference;                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	EMessageRecipient                             Recipients;                                        // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Message;                                           // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	EMessageCategory                              Category;                                          // 0x0020(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Translate_Using_String_Table;                      // 0x0021(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_22[0x2];                                       // 0x0022(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   String_Table_ID;                                   // 0x0024(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0030(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_MakeStruct_LinearColor;                     // 0x0038(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FPlayerMessage                         K2Node_MakeStruct_PlayerMessage;                   // 0x0048(0x0058)()
};
static_assert(alignof(BlueprintFunctionLibraryJP_C_Auth_SendMessage) == 0x000008, "Wrong alignment on BlueprintFunctionLibraryJP_C_Auth_SendMessage");
static_assert(sizeof(BlueprintFunctionLibraryJP_C_Auth_SendMessage) == 0x0000A0, "Wrong size on BlueprintFunctionLibraryJP_C_Auth_SendMessage");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_Auth_SendMessage, Controller_Reference) == 0x000000, "Member 'BlueprintFunctionLibraryJP_C_Auth_SendMessage::Controller_Reference' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_Auth_SendMessage, Recipients) == 0x000008, "Member 'BlueprintFunctionLibraryJP_C_Auth_SendMessage::Recipients' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_Auth_SendMessage, Message) == 0x000010, "Member 'BlueprintFunctionLibraryJP_C_Auth_SendMessage::Message' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_Auth_SendMessage, Category) == 0x000020, "Member 'BlueprintFunctionLibraryJP_C_Auth_SendMessage::Category' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_Auth_SendMessage, Translate_Using_String_Table) == 0x000021, "Member 'BlueprintFunctionLibraryJP_C_Auth_SendMessage::Translate_Using_String_Table' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_Auth_SendMessage, String_Table_ID) == 0x000024, "Member 'BlueprintFunctionLibraryJP_C_Auth_SendMessage::String_Table_ID' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_Auth_SendMessage, __WorldContext) == 0x000030, "Member 'BlueprintFunctionLibraryJP_C_Auth_SendMessage::__WorldContext' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_Auth_SendMessage, K2Node_MakeStruct_LinearColor) == 0x000038, "Member 'BlueprintFunctionLibraryJP_C_Auth_SendMessage::K2Node_MakeStruct_LinearColor' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_Auth_SendMessage, K2Node_MakeStruct_PlayerMessage) == 0x000048, "Member 'BlueprintFunctionLibraryJP_C_Auth_SendMessage::K2Node_MakeStruct_PlayerMessage' has a wrong offset!");

// Function BlueprintFunctionLibraryJP.BlueprintFunctionLibraryJP_C.Auth_SendMessageVerbose
// 0x0070 (0x0070 - 0x0000)
struct BlueprintFunctionLibraryJP_C_Auth_SendMessageVerbose final
{
public:
	struct FPlayerMessage                         Message_Specification;                             // 0x0000(0x0058)(BlueprintVisible, BlueprintReadOnly, Parm)
	class UObject*                                __WorldContext;                                    // 0x0058(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AMessengerManager_C*                    CallFunc_GetActorOfClass_ReturnValue;              // 0x0060(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BlueprintFunctionLibraryJP_C_Auth_SendMessageVerbose) == 0x000008, "Wrong alignment on BlueprintFunctionLibraryJP_C_Auth_SendMessageVerbose");
static_assert(sizeof(BlueprintFunctionLibraryJP_C_Auth_SendMessageVerbose) == 0x000070, "Wrong size on BlueprintFunctionLibraryJP_C_Auth_SendMessageVerbose");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_Auth_SendMessageVerbose, Message_Specification) == 0x000000, "Member 'BlueprintFunctionLibraryJP_C_Auth_SendMessageVerbose::Message_Specification' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_Auth_SendMessageVerbose, __WorldContext) == 0x000058, "Member 'BlueprintFunctionLibraryJP_C_Auth_SendMessageVerbose::__WorldContext' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_Auth_SendMessageVerbose, CallFunc_GetActorOfClass_ReturnValue) == 0x000060, "Member 'BlueprintFunctionLibraryJP_C_Auth_SendMessageVerbose::CallFunc_GetActorOfClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_Auth_SendMessageVerbose, CallFunc_IsValid_ReturnValue) == 0x000068, "Member 'BlueprintFunctionLibraryJP_C_Auth_SendMessageVerbose::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BlueprintFunctionLibraryJP.BlueprintFunctionLibraryJP_C.Get BP Tweakable Data
// 0x0028 (0x0028 - 0x0000)
struct BlueprintFunctionLibraryJP_C_Get_BP_Tweakable_Data final
{
public:
	class UObject*                                __WorldContext;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBP_TweakableData_C*                    AsBP_Tweakable_Data;                               // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	const class UTweakableData*                   CallFunc_GetTweakableData_ReturnValue;             // 0x0010(0x0008)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBP_TweakableData_C*                    K2Node_DynamicCast_AsBP_Tweakable_Data;            // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BlueprintFunctionLibraryJP_C_Get_BP_Tweakable_Data) == 0x000008, "Wrong alignment on BlueprintFunctionLibraryJP_C_Get_BP_Tweakable_Data");
static_assert(sizeof(BlueprintFunctionLibraryJP_C_Get_BP_Tweakable_Data) == 0x000028, "Wrong size on BlueprintFunctionLibraryJP_C_Get_BP_Tweakable_Data");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_Get_BP_Tweakable_Data, __WorldContext) == 0x000000, "Member 'BlueprintFunctionLibraryJP_C_Get_BP_Tweakable_Data::__WorldContext' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_Get_BP_Tweakable_Data, AsBP_Tweakable_Data) == 0x000008, "Member 'BlueprintFunctionLibraryJP_C_Get_BP_Tweakable_Data::AsBP_Tweakable_Data' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_Get_BP_Tweakable_Data, CallFunc_GetTweakableData_ReturnValue) == 0x000010, "Member 'BlueprintFunctionLibraryJP_C_Get_BP_Tweakable_Data::CallFunc_GetTweakableData_ReturnValue' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_Get_BP_Tweakable_Data, K2Node_DynamicCast_AsBP_Tweakable_Data) == 0x000018, "Member 'BlueprintFunctionLibraryJP_C_Get_BP_Tweakable_Data::K2Node_DynamicCast_AsBP_Tweakable_Data' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_Get_BP_Tweakable_Data, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'BlueprintFunctionLibraryJP_C_Get_BP_Tweakable_Data::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BlueprintFunctionLibraryJP.BlueprintFunctionLibraryJP_C.Get ClassLog Name
// 0x0048 (0x0048 - 0x0000)
struct BlueprintFunctionLibraryJP_C_Get_ClassLog_Name final
{
public:
	const class UObject*                          Object;                                            // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FString                                 Name_0;                                            // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)
	class UClass*                                 CallFunc_GetObjectClass_ReturnValue;               // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetClassDisplayName_ReturnValue;          // 0x0028(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0038(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BlueprintFunctionLibraryJP_C_Get_ClassLog_Name) == 0x000008, "Wrong alignment on BlueprintFunctionLibraryJP_C_Get_ClassLog_Name");
static_assert(sizeof(BlueprintFunctionLibraryJP_C_Get_ClassLog_Name) == 0x000048, "Wrong size on BlueprintFunctionLibraryJP_C_Get_ClassLog_Name");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_Get_ClassLog_Name, Object) == 0x000000, "Member 'BlueprintFunctionLibraryJP_C_Get_ClassLog_Name::Object' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_Get_ClassLog_Name, __WorldContext) == 0x000008, "Member 'BlueprintFunctionLibraryJP_C_Get_ClassLog_Name::__WorldContext' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_Get_ClassLog_Name, Name_0) == 0x000010, "Member 'BlueprintFunctionLibraryJP_C_Get_ClassLog_Name::Name_0' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_Get_ClassLog_Name, CallFunc_GetObjectClass_ReturnValue) == 0x000020, "Member 'BlueprintFunctionLibraryJP_C_Get_ClassLog_Name::CallFunc_GetObjectClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_Get_ClassLog_Name, CallFunc_GetClassDisplayName_ReturnValue) == 0x000028, "Member 'BlueprintFunctionLibraryJP_C_Get_ClassLog_Name::CallFunc_GetClassDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_Get_ClassLog_Name, CallFunc_Concat_StrStr_ReturnValue) == 0x000038, "Member 'BlueprintFunctionLibraryJP_C_Get_ClassLog_Name::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");

// Function BlueprintFunctionLibraryJP.BlueprintFunctionLibraryJP_C.Get Groundskeeper from Team
// 0x0080 (0x0080 - 0x0000)
struct BlueprintFunctionLibraryJP_C_Get_Groundskeeper_from_Team final
{
public:
	uint8                                         TeamId;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class Abp_groundskeeper_C*                    GroundsKeeper;                                     // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<class Abp_groundskeeper_C*>            CallFunc_GetAllActorsOfClass_OutActors;            // 0x0018(0x0010)(ReferenceParm)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class Abp_groundskeeper_C*                    CallFunc_Array_Get_Item;                           // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FTeam                                  CallFunc_GetTeam_ReturnValue;                      // 0x0038(0x0038)(NoDestructor)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0074(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_75[0x3];                                       // 0x0075(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x007C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BlueprintFunctionLibraryJP_C_Get_Groundskeeper_from_Team) == 0x000008, "Wrong alignment on BlueprintFunctionLibraryJP_C_Get_Groundskeeper_from_Team");
static_assert(sizeof(BlueprintFunctionLibraryJP_C_Get_Groundskeeper_from_Team) == 0x000080, "Wrong size on BlueprintFunctionLibraryJP_C_Get_Groundskeeper_from_Team");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_Get_Groundskeeper_from_Team, TeamId) == 0x000000, "Member 'BlueprintFunctionLibraryJP_C_Get_Groundskeeper_from_Team::TeamId' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_Get_Groundskeeper_from_Team, __WorldContext) == 0x000008, "Member 'BlueprintFunctionLibraryJP_C_Get_Groundskeeper_from_Team::__WorldContext' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_Get_Groundskeeper_from_Team, GroundsKeeper) == 0x000010, "Member 'BlueprintFunctionLibraryJP_C_Get_Groundskeeper_from_Team::GroundsKeeper' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_Get_Groundskeeper_from_Team, CallFunc_GetAllActorsOfClass_OutActors) == 0x000018, "Member 'BlueprintFunctionLibraryJP_C_Get_Groundskeeper_from_Team::CallFunc_GetAllActorsOfClass_OutActors' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_Get_Groundskeeper_from_Team, Temp_int_Array_Index_Variable) == 0x000028, "Member 'BlueprintFunctionLibraryJP_C_Get_Groundskeeper_from_Team::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_Get_Groundskeeper_from_Team, CallFunc_Array_Length_ReturnValue) == 0x00002C, "Member 'BlueprintFunctionLibraryJP_C_Get_Groundskeeper_from_Team::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_Get_Groundskeeper_from_Team, CallFunc_Array_Get_Item) == 0x000030, "Member 'BlueprintFunctionLibraryJP_C_Get_Groundskeeper_from_Team::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_Get_Groundskeeper_from_Team, CallFunc_GetTeam_ReturnValue) == 0x000038, "Member 'BlueprintFunctionLibraryJP_C_Get_Groundskeeper_from_Team::CallFunc_GetTeam_ReturnValue' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_Get_Groundskeeper_from_Team, Temp_int_Loop_Counter_Variable) == 0x000070, "Member 'BlueprintFunctionLibraryJP_C_Get_Groundskeeper_from_Team::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_Get_Groundskeeper_from_Team, CallFunc_Less_IntInt_ReturnValue) == 0x000074, "Member 'BlueprintFunctionLibraryJP_C_Get_Groundskeeper_from_Team::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_Get_Groundskeeper_from_Team, CallFunc_Add_IntInt_ReturnValue) == 0x000078, "Member 'BlueprintFunctionLibraryJP_C_Get_Groundskeeper_from_Team::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_Get_Groundskeeper_from_Team, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x00007C, "Member 'BlueprintFunctionLibraryJP_C_Get_Groundskeeper_from_Team::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function BlueprintFunctionLibraryJP.BlueprintFunctionLibraryJP_C.Get Relative Team Color as Text Clientside
// 0x0080 (0x0080 - 0x0000)
struct BlueprintFunctionLibraryJP_C_Get_Relative_Team_Color_as_Text_Clientside final
{
public:
	uint8                                         TeamId;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                WorldContext;                                      // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FText                                   TeamColor;                                         // 0x0018(0x0010)(Parm, OutParm)
	ETeamType                                     Temp_byte_Variable;                                // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETeamType                                     CallFunc_GetTeamTypeFromTeamId_ReturnValue;        // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2A[0x6];                                       // 0x002A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable;                                // 0x0030(0x0010)()
	class FText                                   Temp_text_Variable_1;                              // 0x0040(0x0010)()
	class FText                                   Temp_text_Variable_2;                              // 0x0050(0x0010)()
	class FText                                   Temp_text_Variable_3;                              // 0x0060(0x0010)()
	class FText                                   K2Node_Select_Default;                             // 0x0070(0x0010)()
};
static_assert(alignof(BlueprintFunctionLibraryJP_C_Get_Relative_Team_Color_as_Text_Clientside) == 0x000008, "Wrong alignment on BlueprintFunctionLibraryJP_C_Get_Relative_Team_Color_as_Text_Clientside");
static_assert(sizeof(BlueprintFunctionLibraryJP_C_Get_Relative_Team_Color_as_Text_Clientside) == 0x000080, "Wrong size on BlueprintFunctionLibraryJP_C_Get_Relative_Team_Color_as_Text_Clientside");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_Get_Relative_Team_Color_as_Text_Clientside, TeamId) == 0x000000, "Member 'BlueprintFunctionLibraryJP_C_Get_Relative_Team_Color_as_Text_Clientside::TeamId' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_Get_Relative_Team_Color_as_Text_Clientside, WorldContext) == 0x000008, "Member 'BlueprintFunctionLibraryJP_C_Get_Relative_Team_Color_as_Text_Clientside::WorldContext' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_Get_Relative_Team_Color_as_Text_Clientside, __WorldContext) == 0x000010, "Member 'BlueprintFunctionLibraryJP_C_Get_Relative_Team_Color_as_Text_Clientside::__WorldContext' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_Get_Relative_Team_Color_as_Text_Clientside, TeamColor) == 0x000018, "Member 'BlueprintFunctionLibraryJP_C_Get_Relative_Team_Color_as_Text_Clientside::TeamColor' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_Get_Relative_Team_Color_as_Text_Clientside, Temp_byte_Variable) == 0x000028, "Member 'BlueprintFunctionLibraryJP_C_Get_Relative_Team_Color_as_Text_Clientside::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_Get_Relative_Team_Color_as_Text_Clientside, CallFunc_GetTeamTypeFromTeamId_ReturnValue) == 0x000029, "Member 'BlueprintFunctionLibraryJP_C_Get_Relative_Team_Color_as_Text_Clientside::CallFunc_GetTeamTypeFromTeamId_ReturnValue' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_Get_Relative_Team_Color_as_Text_Clientside, Temp_text_Variable) == 0x000030, "Member 'BlueprintFunctionLibraryJP_C_Get_Relative_Team_Color_as_Text_Clientside::Temp_text_Variable' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_Get_Relative_Team_Color_as_Text_Clientside, Temp_text_Variable_1) == 0x000040, "Member 'BlueprintFunctionLibraryJP_C_Get_Relative_Team_Color_as_Text_Clientside::Temp_text_Variable_1' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_Get_Relative_Team_Color_as_Text_Clientside, Temp_text_Variable_2) == 0x000050, "Member 'BlueprintFunctionLibraryJP_C_Get_Relative_Team_Color_as_Text_Clientside::Temp_text_Variable_2' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_Get_Relative_Team_Color_as_Text_Clientside, Temp_text_Variable_3) == 0x000060, "Member 'BlueprintFunctionLibraryJP_C_Get_Relative_Team_Color_as_Text_Clientside::Temp_text_Variable_3' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_Get_Relative_Team_Color_as_Text_Clientside, K2Node_Select_Default) == 0x000070, "Member 'BlueprintFunctionLibraryJP_C_Get_Relative_Team_Color_as_Text_Clientside::K2Node_Select_Default' has a wrong offset!");

// Function BlueprintFunctionLibraryJP.BlueprintFunctionLibraryJP_C.Get Relative Team Color as Text Serverside
// 0x0080 (0x0080 - 0x0000)
struct BlueprintFunctionLibraryJP_C_Get_Relative_Team_Color_as_Text_Serverside final
{
public:
	uint8                                         TeamId;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      PlayerController;                                  // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FText                                   TeamColor;                                         // 0x0018(0x0010)(Parm, OutParm)
	ETeamType                                     Temp_byte_Variable;                                // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETeamType                                     CallFunc_GetTeamTypeFromTeamIdFromSpecificPlayerPointOfView_ReturnValue; // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2A[0x6];                                       // 0x002A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable;                                // 0x0030(0x0010)()
	class FText                                   Temp_text_Variable_1;                              // 0x0040(0x0010)()
	class FText                                   Temp_text_Variable_2;                              // 0x0050(0x0010)()
	class FText                                   Temp_text_Variable_3;                              // 0x0060(0x0010)()
	class FText                                   K2Node_Select_Default;                             // 0x0070(0x0010)()
};
static_assert(alignof(BlueprintFunctionLibraryJP_C_Get_Relative_Team_Color_as_Text_Serverside) == 0x000008, "Wrong alignment on BlueprintFunctionLibraryJP_C_Get_Relative_Team_Color_as_Text_Serverside");
static_assert(sizeof(BlueprintFunctionLibraryJP_C_Get_Relative_Team_Color_as_Text_Serverside) == 0x000080, "Wrong size on BlueprintFunctionLibraryJP_C_Get_Relative_Team_Color_as_Text_Serverside");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_Get_Relative_Team_Color_as_Text_Serverside, TeamId) == 0x000000, "Member 'BlueprintFunctionLibraryJP_C_Get_Relative_Team_Color_as_Text_Serverside::TeamId' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_Get_Relative_Team_Color_as_Text_Serverside, PlayerController) == 0x000008, "Member 'BlueprintFunctionLibraryJP_C_Get_Relative_Team_Color_as_Text_Serverside::PlayerController' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_Get_Relative_Team_Color_as_Text_Serverside, __WorldContext) == 0x000010, "Member 'BlueprintFunctionLibraryJP_C_Get_Relative_Team_Color_as_Text_Serverside::__WorldContext' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_Get_Relative_Team_Color_as_Text_Serverside, TeamColor) == 0x000018, "Member 'BlueprintFunctionLibraryJP_C_Get_Relative_Team_Color_as_Text_Serverside::TeamColor' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_Get_Relative_Team_Color_as_Text_Serverside, Temp_byte_Variable) == 0x000028, "Member 'BlueprintFunctionLibraryJP_C_Get_Relative_Team_Color_as_Text_Serverside::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_Get_Relative_Team_Color_as_Text_Serverside, CallFunc_GetTeamTypeFromTeamIdFromSpecificPlayerPointOfView_ReturnValue) == 0x000029, "Member 'BlueprintFunctionLibraryJP_C_Get_Relative_Team_Color_as_Text_Serverside::CallFunc_GetTeamTypeFromTeamIdFromSpecificPlayerPointOfView_ReturnValue' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_Get_Relative_Team_Color_as_Text_Serverside, Temp_text_Variable) == 0x000030, "Member 'BlueprintFunctionLibraryJP_C_Get_Relative_Team_Color_as_Text_Serverside::Temp_text_Variable' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_Get_Relative_Team_Color_as_Text_Serverside, Temp_text_Variable_1) == 0x000040, "Member 'BlueprintFunctionLibraryJP_C_Get_Relative_Team_Color_as_Text_Serverside::Temp_text_Variable_1' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_Get_Relative_Team_Color_as_Text_Serverside, Temp_text_Variable_2) == 0x000050, "Member 'BlueprintFunctionLibraryJP_C_Get_Relative_Team_Color_as_Text_Serverside::Temp_text_Variable_2' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_Get_Relative_Team_Color_as_Text_Serverside, Temp_text_Variable_3) == 0x000060, "Member 'BlueprintFunctionLibraryJP_C_Get_Relative_Team_Color_as_Text_Serverside::Temp_text_Variable_3' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_Get_Relative_Team_Color_as_Text_Serverside, K2Node_Select_Default) == 0x000070, "Member 'BlueprintFunctionLibraryJP_C_Get_Relative_Team_Color_as_Text_Serverside::K2Node_Select_Default' has a wrong offset!");

// Function BlueprintFunctionLibraryJP.BlueprintFunctionLibraryJP_C.GetAllPlayerMasterIds
// 0x00A0 (0x00A0 - 0x0000)
struct BlueprintFunctionLibraryJP_C_GetAllPlayerMasterIds final
{
public:
	class UObject*                                __WorldContext;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<class FString>                         PlayerIdsTeam1;                                    // 0x0008(0x0010)(Parm, OutParm)
	TArray<class FString>                         PlayerIdsTeam2;                                    // 0x0018(0x0010)(Parm, OutParm)
	TArray<class FString>                         PlayerIdsTeam2_L;                                  // 0x0028(0x0010)(Edit, BlueprintVisible)
	TArray<class FString>                         PlayerIdsTeam1_L;                                  // 0x0038(0x0010)(Edit, BlueprintVisible)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_54[0x4];                                       // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0058(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APlayerState*                           CallFunc_Array_Get_Item;                           // 0x0060(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APlayerStateJP*                         K2Node_DynamicCast_AsPlayer_State_JP;              // 0x0068(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_71[0x3];                                       // 0x0071(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetMasterPlayerAccountId_ReturnValue;     // 0x0078(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsEmpty_ReturnValue;                      // 0x0089(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8A[0x2];                                       // 0x008A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetTeamID_ReturnValue;                    // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0091(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_92[0x2];                                       // 0x0092(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BlueprintFunctionLibraryJP_C_GetAllPlayerMasterIds) == 0x000008, "Wrong alignment on BlueprintFunctionLibraryJP_C_GetAllPlayerMasterIds");
static_assert(sizeof(BlueprintFunctionLibraryJP_C_GetAllPlayerMasterIds) == 0x0000A0, "Wrong size on BlueprintFunctionLibraryJP_C_GetAllPlayerMasterIds");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_GetAllPlayerMasterIds, __WorldContext) == 0x000000, "Member 'BlueprintFunctionLibraryJP_C_GetAllPlayerMasterIds::__WorldContext' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_GetAllPlayerMasterIds, PlayerIdsTeam1) == 0x000008, "Member 'BlueprintFunctionLibraryJP_C_GetAllPlayerMasterIds::PlayerIdsTeam1' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_GetAllPlayerMasterIds, PlayerIdsTeam2) == 0x000018, "Member 'BlueprintFunctionLibraryJP_C_GetAllPlayerMasterIds::PlayerIdsTeam2' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_GetAllPlayerMasterIds, PlayerIdsTeam2_L) == 0x000028, "Member 'BlueprintFunctionLibraryJP_C_GetAllPlayerMasterIds::PlayerIdsTeam2_L' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_GetAllPlayerMasterIds, PlayerIdsTeam1_L) == 0x000038, "Member 'BlueprintFunctionLibraryJP_C_GetAllPlayerMasterIds::PlayerIdsTeam1_L' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_GetAllPlayerMasterIds, Temp_int_Array_Index_Variable) == 0x000048, "Member 'BlueprintFunctionLibraryJP_C_GetAllPlayerMasterIds::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_GetAllPlayerMasterIds, Temp_int_Loop_Counter_Variable) == 0x00004C, "Member 'BlueprintFunctionLibraryJP_C_GetAllPlayerMasterIds::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_GetAllPlayerMasterIds, CallFunc_Add_IntInt_ReturnValue) == 0x000050, "Member 'BlueprintFunctionLibraryJP_C_GetAllPlayerMasterIds::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_GetAllPlayerMasterIds, CallFunc_GetGameState_ReturnValue) == 0x000058, "Member 'BlueprintFunctionLibraryJP_C_GetAllPlayerMasterIds::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_GetAllPlayerMasterIds, CallFunc_Array_Get_Item) == 0x000060, "Member 'BlueprintFunctionLibraryJP_C_GetAllPlayerMasterIds::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_GetAllPlayerMasterIds, K2Node_DynamicCast_AsPlayer_State_JP) == 0x000068, "Member 'BlueprintFunctionLibraryJP_C_GetAllPlayerMasterIds::K2Node_DynamicCast_AsPlayer_State_JP' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_GetAllPlayerMasterIds, K2Node_DynamicCast_bSuccess) == 0x000070, "Member 'BlueprintFunctionLibraryJP_C_GetAllPlayerMasterIds::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_GetAllPlayerMasterIds, CallFunc_Array_Length_ReturnValue) == 0x000074, "Member 'BlueprintFunctionLibraryJP_C_GetAllPlayerMasterIds::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_GetAllPlayerMasterIds, CallFunc_GetMasterPlayerAccountId_ReturnValue) == 0x000078, "Member 'BlueprintFunctionLibraryJP_C_GetAllPlayerMasterIds::CallFunc_GetMasterPlayerAccountId_ReturnValue' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_GetAllPlayerMasterIds, CallFunc_Less_IntInt_ReturnValue) == 0x000088, "Member 'BlueprintFunctionLibraryJP_C_GetAllPlayerMasterIds::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_GetAllPlayerMasterIds, CallFunc_IsEmpty_ReturnValue) == 0x000089, "Member 'BlueprintFunctionLibraryJP_C_GetAllPlayerMasterIds::CallFunc_IsEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_GetAllPlayerMasterIds, CallFunc_Array_Add_ReturnValue) == 0x00008C, "Member 'BlueprintFunctionLibraryJP_C_GetAllPlayerMasterIds::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_GetAllPlayerMasterIds, CallFunc_GetTeamID_ReturnValue) == 0x000090, "Member 'BlueprintFunctionLibraryJP_C_GetAllPlayerMasterIds::CallFunc_GetTeamID_ReturnValue' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_GetAllPlayerMasterIds, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000091, "Member 'BlueprintFunctionLibraryJP_C_GetAllPlayerMasterIds::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_GetAllPlayerMasterIds, CallFunc_Array_Add_ReturnValue_1) == 0x000094, "Member 'BlueprintFunctionLibraryJP_C_GetAllPlayerMasterIds::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_GetAllPlayerMasterIds, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000098, "Member 'BlueprintFunctionLibraryJP_C_GetAllPlayerMasterIds::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");

// Function BlueprintFunctionLibraryJP.BlueprintFunctionLibraryJP_C.GetAllPlayerTitleIds
// 0x00A8 (0x00A8 - 0x0000)
struct BlueprintFunctionLibraryJP_C_GetAllPlayerTitleIds final
{
public:
	class UObject*                                __WorldContext;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<class FString>                         PlayerIdsTeam1;                                    // 0x0008(0x0010)(Parm, OutParm)
	TArray<class FString>                         PlayerIdsTeam2;                                    // 0x0018(0x0010)(Parm, OutParm)
	TArray<class FString>                         PlayerIdsTeam2_L;                                  // 0x0028(0x0010)(Edit, BlueprintVisible)
	TArray<class FString>                         PlayerIdsTeam1_L;                                  // 0x0038(0x0010)(Edit, BlueprintVisible)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_54[0x4];                                       // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0058(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_64[0x4];                                       // 0x0064(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerState*                           CallFunc_Array_Get_Item;                           // 0x0068(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_71[0x7];                                       // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerStateJP*                         K2Node_DynamicCast_AsPlayer_State_JP;              // 0x0078(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetTeamID_ReturnValue;                    // 0x0081(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_82[0x6];                                       // 0x0082(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetTitlePlayerAccountId_ReturnValue;      // 0x0088(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_99[0x3];                                       // 0x0099(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x00A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BlueprintFunctionLibraryJP_C_GetAllPlayerTitleIds) == 0x000008, "Wrong alignment on BlueprintFunctionLibraryJP_C_GetAllPlayerTitleIds");
static_assert(sizeof(BlueprintFunctionLibraryJP_C_GetAllPlayerTitleIds) == 0x0000A8, "Wrong size on BlueprintFunctionLibraryJP_C_GetAllPlayerTitleIds");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_GetAllPlayerTitleIds, __WorldContext) == 0x000000, "Member 'BlueprintFunctionLibraryJP_C_GetAllPlayerTitleIds::__WorldContext' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_GetAllPlayerTitleIds, PlayerIdsTeam1) == 0x000008, "Member 'BlueprintFunctionLibraryJP_C_GetAllPlayerTitleIds::PlayerIdsTeam1' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_GetAllPlayerTitleIds, PlayerIdsTeam2) == 0x000018, "Member 'BlueprintFunctionLibraryJP_C_GetAllPlayerTitleIds::PlayerIdsTeam2' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_GetAllPlayerTitleIds, PlayerIdsTeam2_L) == 0x000028, "Member 'BlueprintFunctionLibraryJP_C_GetAllPlayerTitleIds::PlayerIdsTeam2_L' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_GetAllPlayerTitleIds, PlayerIdsTeam1_L) == 0x000038, "Member 'BlueprintFunctionLibraryJP_C_GetAllPlayerTitleIds::PlayerIdsTeam1_L' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_GetAllPlayerTitleIds, Temp_int_Array_Index_Variable) == 0x000048, "Member 'BlueprintFunctionLibraryJP_C_GetAllPlayerTitleIds::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_GetAllPlayerTitleIds, Temp_int_Loop_Counter_Variable) == 0x00004C, "Member 'BlueprintFunctionLibraryJP_C_GetAllPlayerTitleIds::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_GetAllPlayerTitleIds, CallFunc_Add_IntInt_ReturnValue) == 0x000050, "Member 'BlueprintFunctionLibraryJP_C_GetAllPlayerTitleIds::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_GetAllPlayerTitleIds, CallFunc_GetGameState_ReturnValue) == 0x000058, "Member 'BlueprintFunctionLibraryJP_C_GetAllPlayerTitleIds::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_GetAllPlayerTitleIds, CallFunc_Array_Length_ReturnValue) == 0x000060, "Member 'BlueprintFunctionLibraryJP_C_GetAllPlayerTitleIds::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_GetAllPlayerTitleIds, CallFunc_Array_Get_Item) == 0x000068, "Member 'BlueprintFunctionLibraryJP_C_GetAllPlayerTitleIds::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_GetAllPlayerTitleIds, CallFunc_Less_IntInt_ReturnValue) == 0x000070, "Member 'BlueprintFunctionLibraryJP_C_GetAllPlayerTitleIds::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_GetAllPlayerTitleIds, K2Node_DynamicCast_AsPlayer_State_JP) == 0x000078, "Member 'BlueprintFunctionLibraryJP_C_GetAllPlayerTitleIds::K2Node_DynamicCast_AsPlayer_State_JP' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_GetAllPlayerTitleIds, K2Node_DynamicCast_bSuccess) == 0x000080, "Member 'BlueprintFunctionLibraryJP_C_GetAllPlayerTitleIds::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_GetAllPlayerTitleIds, CallFunc_GetTeamID_ReturnValue) == 0x000081, "Member 'BlueprintFunctionLibraryJP_C_GetAllPlayerTitleIds::CallFunc_GetTeamID_ReturnValue' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_GetAllPlayerTitleIds, CallFunc_GetTitlePlayerAccountId_ReturnValue) == 0x000088, "Member 'BlueprintFunctionLibraryJP_C_GetAllPlayerTitleIds::CallFunc_GetTitlePlayerAccountId_ReturnValue' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_GetAllPlayerTitleIds, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000098, "Member 'BlueprintFunctionLibraryJP_C_GetAllPlayerTitleIds::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_GetAllPlayerTitleIds, CallFunc_Array_Add_ReturnValue) == 0x00009C, "Member 'BlueprintFunctionLibraryJP_C_GetAllPlayerTitleIds::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_GetAllPlayerTitleIds, CallFunc_Array_Add_ReturnValue_1) == 0x0000A0, "Member 'BlueprintFunctionLibraryJP_C_GetAllPlayerTitleIds::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_GetAllPlayerTitleIds, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x0000A4, "Member 'BlueprintFunctionLibraryJP_C_GetAllPlayerTitleIds::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");

// Function BlueprintFunctionLibraryJP.BlueprintFunctionLibraryJP_C.GetBadColor
// 0x0028 (0x0028 - 0x0000)
struct BlueprintFunctionLibraryJP_C_GetBadColor final
{
public:
	class UObject*                                __WorldContext;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Return;                                            // 0x0008(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           NewLocalVar_0;                                     // 0x0018(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BlueprintFunctionLibraryJP_C_GetBadColor) == 0x000008, "Wrong alignment on BlueprintFunctionLibraryJP_C_GetBadColor");
static_assert(sizeof(BlueprintFunctionLibraryJP_C_GetBadColor) == 0x000028, "Wrong size on BlueprintFunctionLibraryJP_C_GetBadColor");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_GetBadColor, __WorldContext) == 0x000000, "Member 'BlueprintFunctionLibraryJP_C_GetBadColor::__WorldContext' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_GetBadColor, Return) == 0x000008, "Member 'BlueprintFunctionLibraryJP_C_GetBadColor::Return' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_GetBadColor, NewLocalVar_0) == 0x000018, "Member 'BlueprintFunctionLibraryJP_C_GetBadColor::NewLocalVar_0' has a wrong offset!");

// Function BlueprintFunctionLibraryJP.BlueprintFunctionLibraryJP_C.GetDefaultPerkColorSlate
// 0x0048 (0x0048 - 0x0000)
struct BlueprintFunctionLibraryJP_C_GetDefaultPerkColorSlate final
{
public:
	class UObject*                                __WorldContext;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FSlateColor                            SlateColor;                                        // 0x0008(0x0014)(Parm, OutParm)
	struct FColor                                 CallFunc_GetDefaultPerkColor_ReturnValue;          // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Conv_ColorToLinearColor_ReturnValue;      // 0x0020(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x0030(0x0014)()
};
static_assert(alignof(BlueprintFunctionLibraryJP_C_GetDefaultPerkColorSlate) == 0x000008, "Wrong alignment on BlueprintFunctionLibraryJP_C_GetDefaultPerkColorSlate");
static_assert(sizeof(BlueprintFunctionLibraryJP_C_GetDefaultPerkColorSlate) == 0x000048, "Wrong size on BlueprintFunctionLibraryJP_C_GetDefaultPerkColorSlate");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_GetDefaultPerkColorSlate, __WorldContext) == 0x000000, "Member 'BlueprintFunctionLibraryJP_C_GetDefaultPerkColorSlate::__WorldContext' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_GetDefaultPerkColorSlate, SlateColor) == 0x000008, "Member 'BlueprintFunctionLibraryJP_C_GetDefaultPerkColorSlate::SlateColor' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_GetDefaultPerkColorSlate, CallFunc_GetDefaultPerkColor_ReturnValue) == 0x00001C, "Member 'BlueprintFunctionLibraryJP_C_GetDefaultPerkColorSlate::CallFunc_GetDefaultPerkColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_GetDefaultPerkColorSlate, CallFunc_Conv_ColorToLinearColor_ReturnValue) == 0x000020, "Member 'BlueprintFunctionLibraryJP_C_GetDefaultPerkColorSlate::CallFunc_Conv_ColorToLinearColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_GetDefaultPerkColorSlate, K2Node_MakeStruct_SlateColor) == 0x000030, "Member 'BlueprintFunctionLibraryJP_C_GetDefaultPerkColorSlate::K2Node_MakeStruct_SlateColor' has a wrong offset!");

// Function BlueprintFunctionLibraryJP.BlueprintFunctionLibraryJP_C.GetIncomeNotificationManager
// 0x0020 (0x0020 - 0x0000)
struct BlueprintFunctionLibraryJP_C_GetIncomeNotificationManager final
{
public:
	class UObject*                                __WorldContext;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_IncomeNotificationManager_C*        ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash)
	class ABP_IncomeNotificationManager_C*        CallFunc_GetActorOfClass_ReturnValue;              // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BlueprintFunctionLibraryJP_C_GetIncomeNotificationManager) == 0x000008, "Wrong alignment on BlueprintFunctionLibraryJP_C_GetIncomeNotificationManager");
static_assert(sizeof(BlueprintFunctionLibraryJP_C_GetIncomeNotificationManager) == 0x000020, "Wrong size on BlueprintFunctionLibraryJP_C_GetIncomeNotificationManager");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_GetIncomeNotificationManager, __WorldContext) == 0x000000, "Member 'BlueprintFunctionLibraryJP_C_GetIncomeNotificationManager::__WorldContext' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_GetIncomeNotificationManager, ReturnValue) == 0x000008, "Member 'BlueprintFunctionLibraryJP_C_GetIncomeNotificationManager::ReturnValue' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_GetIncomeNotificationManager, CallFunc_GetActorOfClass_ReturnValue) == 0x000010, "Member 'BlueprintFunctionLibraryJP_C_GetIncomeNotificationManager::CallFunc_GetActorOfClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_GetIncomeNotificationManager, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'BlueprintFunctionLibraryJP_C_GetIncomeNotificationManager::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BlueprintFunctionLibraryJP.BlueprintFunctionLibraryJP_C.GetInventorySize
// 0x0090 (0x0090 - 0x0000)
struct BlueprintFunctionLibraryJP_C_GetInventorySize final
{
public:
	class APlayerState*                           PlayerState;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         ModifiedSize;                                      // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPerkManagerComponent*                  CallFunc_GetPerkManagerComponentFromPlayerState_ReturnValue; // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_25[0x3];                                       // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UPerkAction*>                    CallFunc_K2_GetAllActionsOfType_ReturnValue;       // 0x0028(0x0010)(ReferenceParm, ContainsInstancedReference)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPerkAction*                            CallFunc_Array_Get_Item;                           // 0x0040(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UPA_ModifyInventorySize_C*              K2Node_DynamicCast_AsPA_Modify_Inventory_Size;     // 0x0048(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51[0x3];                                       // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsNotEmpty_ReturnValue;             // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x005D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5E[0x2];                                       // 0x005E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	const class UTweakableData*                   CallFunc_GetTweakableData_ReturnValue;             // 0x0060(0x0008)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	const class UTweakableData*                   CallFunc_GetTweakableData_ReturnValue_1;           // 0x0068(0x0008)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBP_TweakableData_C*                    K2Node_DynamicCast_AsBP_Tweakable_Data;            // 0x0070(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_79[0x7];                                       // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_TweakableData_C*                    K2Node_DynamicCast_AsBP_Tweakable_Data_1;          // 0x0080(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_89[0x3];                                       // 0x0089(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Modify_InventorySize_ModifiedSize;        // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BlueprintFunctionLibraryJP_C_GetInventorySize) == 0x000008, "Wrong alignment on BlueprintFunctionLibraryJP_C_GetInventorySize");
static_assert(sizeof(BlueprintFunctionLibraryJP_C_GetInventorySize) == 0x000090, "Wrong size on BlueprintFunctionLibraryJP_C_GetInventorySize");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_GetInventorySize, PlayerState) == 0x000000, "Member 'BlueprintFunctionLibraryJP_C_GetInventorySize::PlayerState' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_GetInventorySize, __WorldContext) == 0x000008, "Member 'BlueprintFunctionLibraryJP_C_GetInventorySize::__WorldContext' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_GetInventorySize, ModifiedSize) == 0x000010, "Member 'BlueprintFunctionLibraryJP_C_GetInventorySize::ModifiedSize' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_GetInventorySize, CallFunc_GetPerkManagerComponentFromPlayerState_ReturnValue) == 0x000018, "Member 'BlueprintFunctionLibraryJP_C_GetInventorySize::CallFunc_GetPerkManagerComponentFromPlayerState_ReturnValue' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_GetInventorySize, Temp_int_Array_Index_Variable) == 0x000020, "Member 'BlueprintFunctionLibraryJP_C_GetInventorySize::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_GetInventorySize, CallFunc_IsValid_ReturnValue) == 0x000024, "Member 'BlueprintFunctionLibraryJP_C_GetInventorySize::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_GetInventorySize, CallFunc_K2_GetAllActionsOfType_ReturnValue) == 0x000028, "Member 'BlueprintFunctionLibraryJP_C_GetInventorySize::CallFunc_K2_GetAllActionsOfType_ReturnValue' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_GetInventorySize, Temp_int_Loop_Counter_Variable) == 0x000038, "Member 'BlueprintFunctionLibraryJP_C_GetInventorySize::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_GetInventorySize, CallFunc_Array_Get_Item) == 0x000040, "Member 'BlueprintFunctionLibraryJP_C_GetInventorySize::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_GetInventorySize, K2Node_DynamicCast_AsPA_Modify_Inventory_Size) == 0x000048, "Member 'BlueprintFunctionLibraryJP_C_GetInventorySize::K2Node_DynamicCast_AsPA_Modify_Inventory_Size' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_GetInventorySize, K2Node_DynamicCast_bSuccess) == 0x000050, "Member 'BlueprintFunctionLibraryJP_C_GetInventorySize::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_GetInventorySize, CallFunc_Add_IntInt_ReturnValue) == 0x000054, "Member 'BlueprintFunctionLibraryJP_C_GetInventorySize::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_GetInventorySize, CallFunc_Array_Length_ReturnValue) == 0x000058, "Member 'BlueprintFunctionLibraryJP_C_GetInventorySize::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_GetInventorySize, CallFunc_Array_IsNotEmpty_ReturnValue) == 0x00005C, "Member 'BlueprintFunctionLibraryJP_C_GetInventorySize::CallFunc_Array_IsNotEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_GetInventorySize, CallFunc_Less_IntInt_ReturnValue) == 0x00005D, "Member 'BlueprintFunctionLibraryJP_C_GetInventorySize::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_GetInventorySize, CallFunc_GetTweakableData_ReturnValue) == 0x000060, "Member 'BlueprintFunctionLibraryJP_C_GetInventorySize::CallFunc_GetTweakableData_ReturnValue' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_GetInventorySize, CallFunc_GetTweakableData_ReturnValue_1) == 0x000068, "Member 'BlueprintFunctionLibraryJP_C_GetInventorySize::CallFunc_GetTweakableData_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_GetInventorySize, K2Node_DynamicCast_AsBP_Tweakable_Data) == 0x000070, "Member 'BlueprintFunctionLibraryJP_C_GetInventorySize::K2Node_DynamicCast_AsBP_Tweakable_Data' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_GetInventorySize, K2Node_DynamicCast_bSuccess_1) == 0x000078, "Member 'BlueprintFunctionLibraryJP_C_GetInventorySize::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_GetInventorySize, K2Node_DynamicCast_AsBP_Tweakable_Data_1) == 0x000080, "Member 'BlueprintFunctionLibraryJP_C_GetInventorySize::K2Node_DynamicCast_AsBP_Tweakable_Data_1' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_GetInventorySize, K2Node_DynamicCast_bSuccess_2) == 0x000088, "Member 'BlueprintFunctionLibraryJP_C_GetInventorySize::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_GetInventorySize, CallFunc_Modify_InventorySize_ModifiedSize) == 0x00008C, "Member 'BlueprintFunctionLibraryJP_C_GetInventorySize::CallFunc_Modify_InventorySize_ModifiedSize' has a wrong offset!");

// Function BlueprintFunctionLibraryJP.BlueprintFunctionLibraryJP_C.GetLocalVelocity
// 0x00C0 (0x00C0 - 0x0000)
struct BlueprintFunctionLibraryJP_C_GetLocalVelocity final
{
public:
	class AActor*                                 Target;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                LocalSpaceVelocity;                                // 0x0010(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_28[0x8];                                       // 0x0028(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x0030(0x0060)(ConstParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetVelocity_ReturnValue;                  // 0x0090(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_InverseTransformDirection_ReturnValue;    // 0x00A8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BlueprintFunctionLibraryJP_C_GetLocalVelocity) == 0x000010, "Wrong alignment on BlueprintFunctionLibraryJP_C_GetLocalVelocity");
static_assert(sizeof(BlueprintFunctionLibraryJP_C_GetLocalVelocity) == 0x0000C0, "Wrong size on BlueprintFunctionLibraryJP_C_GetLocalVelocity");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_GetLocalVelocity, Target) == 0x000000, "Member 'BlueprintFunctionLibraryJP_C_GetLocalVelocity::Target' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_GetLocalVelocity, __WorldContext) == 0x000008, "Member 'BlueprintFunctionLibraryJP_C_GetLocalVelocity::__WorldContext' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_GetLocalVelocity, LocalSpaceVelocity) == 0x000010, "Member 'BlueprintFunctionLibraryJP_C_GetLocalVelocity::LocalSpaceVelocity' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_GetLocalVelocity, CallFunc_GetTransform_ReturnValue) == 0x000030, "Member 'BlueprintFunctionLibraryJP_C_GetLocalVelocity::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_GetLocalVelocity, CallFunc_GetVelocity_ReturnValue) == 0x000090, "Member 'BlueprintFunctionLibraryJP_C_GetLocalVelocity::CallFunc_GetVelocity_ReturnValue' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_GetLocalVelocity, CallFunc_InverseTransformDirection_ReturnValue) == 0x0000A8, "Member 'BlueprintFunctionLibraryJP_C_GetLocalVelocity::CallFunc_InverseTransformDirection_ReturnValue' has a wrong offset!");

// Function BlueprintFunctionLibraryJP.BlueprintFunctionLibraryJP_C.GetNextTeam
// 0x00D8 (0x00D8 - 0x0000)
struct BlueprintFunctionLibraryJP_C_GetNextTeam final
{
public:
	struct FTeam                                  CurrentTeam;                                       // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	class UObject*                                __WorldContext;                                    // 0x0038(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FTeam                                  NextTeam;                                          // 0x0040(0x0038)(Parm, OutParm, NoDestructor)
	uint8                                         CallFunc_GetMinimumTeamID_ReturnValue;             // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_79[0x7];                                       // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateJP*                           CallFunc_GetGameStateJP_ReturnValue;               // 0x0080(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_Add_ByteByte_ReturnValue;                 // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_91[0x3];                                       // 0x0091(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue_1;             // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_WrapValue_ReturnValue;                    // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_Conv_IntToByte_ReturnValue;               // 0x009C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9D[0x3];                                       // 0x009D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTeam                                  CallFunc_GetTeam_ReturnValue;                      // 0x00A0(0x0038)(ConstParm, NoDestructor)
};
static_assert(alignof(BlueprintFunctionLibraryJP_C_GetNextTeam) == 0x000008, "Wrong alignment on BlueprintFunctionLibraryJP_C_GetNextTeam");
static_assert(sizeof(BlueprintFunctionLibraryJP_C_GetNextTeam) == 0x0000D8, "Wrong size on BlueprintFunctionLibraryJP_C_GetNextTeam");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_GetNextTeam, CurrentTeam) == 0x000000, "Member 'BlueprintFunctionLibraryJP_C_GetNextTeam::CurrentTeam' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_GetNextTeam, __WorldContext) == 0x000038, "Member 'BlueprintFunctionLibraryJP_C_GetNextTeam::__WorldContext' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_GetNextTeam, NextTeam) == 0x000040, "Member 'BlueprintFunctionLibraryJP_C_GetNextTeam::NextTeam' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_GetNextTeam, CallFunc_GetMinimumTeamID_ReturnValue) == 0x000078, "Member 'BlueprintFunctionLibraryJP_C_GetNextTeam::CallFunc_GetMinimumTeamID_ReturnValue' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_GetNextTeam, CallFunc_GetGameStateJP_ReturnValue) == 0x000080, "Member 'BlueprintFunctionLibraryJP_C_GetNextTeam::CallFunc_GetGameStateJP_ReturnValue' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_GetNextTeam, CallFunc_Conv_ByteToInt_ReturnValue) == 0x000088, "Member 'BlueprintFunctionLibraryJP_C_GetNextTeam::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_GetNextTeam, CallFunc_Array_Length_ReturnValue) == 0x00008C, "Member 'BlueprintFunctionLibraryJP_C_GetNextTeam::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_GetNextTeam, CallFunc_Add_ByteByte_ReturnValue) == 0x000090, "Member 'BlueprintFunctionLibraryJP_C_GetNextTeam::CallFunc_Add_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_GetNextTeam, CallFunc_Conv_ByteToInt_ReturnValue_1) == 0x000094, "Member 'BlueprintFunctionLibraryJP_C_GetNextTeam::CallFunc_Conv_ByteToInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_GetNextTeam, CallFunc_WrapValue_ReturnValue) == 0x000098, "Member 'BlueprintFunctionLibraryJP_C_GetNextTeam::CallFunc_WrapValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_GetNextTeam, CallFunc_Conv_IntToByte_ReturnValue) == 0x00009C, "Member 'BlueprintFunctionLibraryJP_C_GetNextTeam::CallFunc_Conv_IntToByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_GetNextTeam, CallFunc_GetTeam_ReturnValue) == 0x0000A0, "Member 'BlueprintFunctionLibraryJP_C_GetNextTeam::CallFunc_GetTeam_ReturnValue' has a wrong offset!");

// Function BlueprintFunctionLibraryJP.BlueprintFunctionLibraryJP_C.GetPerkColorSlate
// 0x0050 (0x0050 - 0x0000)
struct BlueprintFunctionLibraryJP_C_GetPerkColorSlate final
{
public:
	class UPerkDefinition*                        Target;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FSlateColor                            SlateColor;                                        // 0x0010(0x0014)(Parm, OutParm)
	struct FColor                                 CallFunc_GetColor_ReturnValue;                     // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Conv_ColorToLinearColor_ReturnValue;      // 0x0028(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x0038(0x0014)()
};
static_assert(alignof(BlueprintFunctionLibraryJP_C_GetPerkColorSlate) == 0x000008, "Wrong alignment on BlueprintFunctionLibraryJP_C_GetPerkColorSlate");
static_assert(sizeof(BlueprintFunctionLibraryJP_C_GetPerkColorSlate) == 0x000050, "Wrong size on BlueprintFunctionLibraryJP_C_GetPerkColorSlate");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_GetPerkColorSlate, Target) == 0x000000, "Member 'BlueprintFunctionLibraryJP_C_GetPerkColorSlate::Target' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_GetPerkColorSlate, __WorldContext) == 0x000008, "Member 'BlueprintFunctionLibraryJP_C_GetPerkColorSlate::__WorldContext' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_GetPerkColorSlate, SlateColor) == 0x000010, "Member 'BlueprintFunctionLibraryJP_C_GetPerkColorSlate::SlateColor' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_GetPerkColorSlate, CallFunc_GetColor_ReturnValue) == 0x000024, "Member 'BlueprintFunctionLibraryJP_C_GetPerkColorSlate::CallFunc_GetColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_GetPerkColorSlate, CallFunc_Conv_ColorToLinearColor_ReturnValue) == 0x000028, "Member 'BlueprintFunctionLibraryJP_C_GetPerkColorSlate::CallFunc_Conv_ColorToLinearColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_GetPerkColorSlate, K2Node_MakeStruct_SlateColor) == 0x000038, "Member 'BlueprintFunctionLibraryJP_C_GetPerkColorSlate::K2Node_MakeStruct_SlateColor' has a wrong offset!");

// Function BlueprintFunctionLibraryJP.BlueprintFunctionLibraryJP_C.GetShopItemCategoryForItemDefinition
// 0x00A0 (0x00A0 - 0x0000)
struct BlueprintFunctionLibraryJP_C_GetShopItemCategoryForItemDefinition final
{
public:
	class UItemDefinition*                        ItemDefinition;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	EShopItemCategory                             ShopItemCategory;                                  // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Success;                                           // 0x0011(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12[0x2];                                       // 0x0012(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         StencilValue;                                      // 0x0014(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           Temp_struct_Variable;                              // 0x0018(0x0008)(ConstParm, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           Temp_struct_Variable_1;                            // 0x0024(0x0008)(ConstParm, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FGameplayTag>                   CallFunc_BreakGameplayTagContainer_GameplayTags;   // 0x0030(0x0010)(ReferenceParm)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue_1;             // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_42[0x2];                                       // 0x0042(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           Temp_struct_Variable_2;                            // 0x0044(0x0008)(ConstParm, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           Temp_struct_Variable_3;                            // 0x004C(0x0008)(ConstParm, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue_2;             // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue_3;             // 0x0055(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_56[0x2];                                       // 0x0056(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           CallFunc_MakeLiteralGameplayTag_ReturnValue;       // 0x0058(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           CallFunc_MakeLiteralGameplayTag_ReturnValue_1;     // 0x0060(0x0008)(NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetStencilValueFromMask_ReturnValue;      // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetStencilValueFromMask_ReturnValue_1;    // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           CallFunc_MakeLiteralGameplayTag_ReturnValue_2;     // 0x0070(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           CallFunc_MakeLiteralGameplayTag_ReturnValue_3;     // 0x0078(0x0008)(NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetStencilValueFromMask_ReturnValue_2;    // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetStencilValueFromMask_ReturnValue_3;    // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           CallFunc_MakeLiteralGameplayTag_ReturnValue_4;     // 0x0088(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           CallFunc_MakeLiteralGameplayTag_ReturnValue_5;     // 0x0090(0x0008)(NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetStencilValueFromMask_ReturnValue_4;    // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetStencilValueFromMask_ReturnValue_5;    // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BlueprintFunctionLibraryJP_C_GetShopItemCategoryForItemDefinition) == 0x000008, "Wrong alignment on BlueprintFunctionLibraryJP_C_GetShopItemCategoryForItemDefinition");
static_assert(sizeof(BlueprintFunctionLibraryJP_C_GetShopItemCategoryForItemDefinition) == 0x0000A0, "Wrong size on BlueprintFunctionLibraryJP_C_GetShopItemCategoryForItemDefinition");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_GetShopItemCategoryForItemDefinition, ItemDefinition) == 0x000000, "Member 'BlueprintFunctionLibraryJP_C_GetShopItemCategoryForItemDefinition::ItemDefinition' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_GetShopItemCategoryForItemDefinition, __WorldContext) == 0x000008, "Member 'BlueprintFunctionLibraryJP_C_GetShopItemCategoryForItemDefinition::__WorldContext' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_GetShopItemCategoryForItemDefinition, ShopItemCategory) == 0x000010, "Member 'BlueprintFunctionLibraryJP_C_GetShopItemCategoryForItemDefinition::ShopItemCategory' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_GetShopItemCategoryForItemDefinition, Success) == 0x000011, "Member 'BlueprintFunctionLibraryJP_C_GetShopItemCategoryForItemDefinition::Success' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_GetShopItemCategoryForItemDefinition, StencilValue) == 0x000014, "Member 'BlueprintFunctionLibraryJP_C_GetShopItemCategoryForItemDefinition::StencilValue' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_GetShopItemCategoryForItemDefinition, Temp_struct_Variable) == 0x000018, "Member 'BlueprintFunctionLibraryJP_C_GetShopItemCategoryForItemDefinition::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_GetShopItemCategoryForItemDefinition, CallFunc_IsValid_ReturnValue) == 0x000020, "Member 'BlueprintFunctionLibraryJP_C_GetShopItemCategoryForItemDefinition::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_GetShopItemCategoryForItemDefinition, Temp_struct_Variable_1) == 0x000024, "Member 'BlueprintFunctionLibraryJP_C_GetShopItemCategoryForItemDefinition::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_GetShopItemCategoryForItemDefinition, CallFunc_BreakGameplayTagContainer_GameplayTags) == 0x000030, "Member 'BlueprintFunctionLibraryJP_C_GetShopItemCategoryForItemDefinition::CallFunc_BreakGameplayTagContainer_GameplayTags' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_GetShopItemCategoryForItemDefinition, CallFunc_Array_Contains_ReturnValue) == 0x000040, "Member 'BlueprintFunctionLibraryJP_C_GetShopItemCategoryForItemDefinition::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_GetShopItemCategoryForItemDefinition, CallFunc_Array_Contains_ReturnValue_1) == 0x000041, "Member 'BlueprintFunctionLibraryJP_C_GetShopItemCategoryForItemDefinition::CallFunc_Array_Contains_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_GetShopItemCategoryForItemDefinition, Temp_struct_Variable_2) == 0x000044, "Member 'BlueprintFunctionLibraryJP_C_GetShopItemCategoryForItemDefinition::Temp_struct_Variable_2' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_GetShopItemCategoryForItemDefinition, Temp_struct_Variable_3) == 0x00004C, "Member 'BlueprintFunctionLibraryJP_C_GetShopItemCategoryForItemDefinition::Temp_struct_Variable_3' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_GetShopItemCategoryForItemDefinition, CallFunc_Array_Contains_ReturnValue_2) == 0x000054, "Member 'BlueprintFunctionLibraryJP_C_GetShopItemCategoryForItemDefinition::CallFunc_Array_Contains_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_GetShopItemCategoryForItemDefinition, CallFunc_Array_Contains_ReturnValue_3) == 0x000055, "Member 'BlueprintFunctionLibraryJP_C_GetShopItemCategoryForItemDefinition::CallFunc_Array_Contains_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_GetShopItemCategoryForItemDefinition, CallFunc_MakeLiteralGameplayTag_ReturnValue) == 0x000058, "Member 'BlueprintFunctionLibraryJP_C_GetShopItemCategoryForItemDefinition::CallFunc_MakeLiteralGameplayTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_GetShopItemCategoryForItemDefinition, CallFunc_MakeLiteralGameplayTag_ReturnValue_1) == 0x000060, "Member 'BlueprintFunctionLibraryJP_C_GetShopItemCategoryForItemDefinition::CallFunc_MakeLiteralGameplayTag_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_GetShopItemCategoryForItemDefinition, CallFunc_GetStencilValueFromMask_ReturnValue) == 0x000068, "Member 'BlueprintFunctionLibraryJP_C_GetShopItemCategoryForItemDefinition::CallFunc_GetStencilValueFromMask_ReturnValue' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_GetShopItemCategoryForItemDefinition, CallFunc_GetStencilValueFromMask_ReturnValue_1) == 0x00006C, "Member 'BlueprintFunctionLibraryJP_C_GetShopItemCategoryForItemDefinition::CallFunc_GetStencilValueFromMask_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_GetShopItemCategoryForItemDefinition, CallFunc_MakeLiteralGameplayTag_ReturnValue_2) == 0x000070, "Member 'BlueprintFunctionLibraryJP_C_GetShopItemCategoryForItemDefinition::CallFunc_MakeLiteralGameplayTag_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_GetShopItemCategoryForItemDefinition, CallFunc_MakeLiteralGameplayTag_ReturnValue_3) == 0x000078, "Member 'BlueprintFunctionLibraryJP_C_GetShopItemCategoryForItemDefinition::CallFunc_MakeLiteralGameplayTag_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_GetShopItemCategoryForItemDefinition, CallFunc_GetStencilValueFromMask_ReturnValue_2) == 0x000080, "Member 'BlueprintFunctionLibraryJP_C_GetShopItemCategoryForItemDefinition::CallFunc_GetStencilValueFromMask_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_GetShopItemCategoryForItemDefinition, CallFunc_GetStencilValueFromMask_ReturnValue_3) == 0x000084, "Member 'BlueprintFunctionLibraryJP_C_GetShopItemCategoryForItemDefinition::CallFunc_GetStencilValueFromMask_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_GetShopItemCategoryForItemDefinition, CallFunc_MakeLiteralGameplayTag_ReturnValue_4) == 0x000088, "Member 'BlueprintFunctionLibraryJP_C_GetShopItemCategoryForItemDefinition::CallFunc_MakeLiteralGameplayTag_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_GetShopItemCategoryForItemDefinition, CallFunc_MakeLiteralGameplayTag_ReturnValue_5) == 0x000090, "Member 'BlueprintFunctionLibraryJP_C_GetShopItemCategoryForItemDefinition::CallFunc_MakeLiteralGameplayTag_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_GetShopItemCategoryForItemDefinition, CallFunc_GetStencilValueFromMask_ReturnValue_4) == 0x000098, "Member 'BlueprintFunctionLibraryJP_C_GetShopItemCategoryForItemDefinition::CallFunc_GetStencilValueFromMask_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_GetShopItemCategoryForItemDefinition, CallFunc_GetStencilValueFromMask_ReturnValue_5) == 0x00009C, "Member 'BlueprintFunctionLibraryJP_C_GetShopItemCategoryForItemDefinition::CallFunc_GetStencilValueFromMask_ReturnValue_5' has a wrong offset!");

// Function BlueprintFunctionLibraryJP.BlueprintFunctionLibraryJP_C.IsWorldStatic
// 0x0018 (0x0018 - 0x0000)
struct BlueprintFunctionLibraryJP_C_IsWorldStatic final
{
public:
	class UPrimitiveComponent*                    Component;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECollisionChannel                             CallFunc_GetCollisionObjectType_ReturnValue;       // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BlueprintFunctionLibraryJP_C_IsWorldStatic) == 0x000008, "Wrong alignment on BlueprintFunctionLibraryJP_C_IsWorldStatic");
static_assert(sizeof(BlueprintFunctionLibraryJP_C_IsWorldStatic) == 0x000018, "Wrong size on BlueprintFunctionLibraryJP_C_IsWorldStatic");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_IsWorldStatic, Component) == 0x000000, "Member 'BlueprintFunctionLibraryJP_C_IsWorldStatic::Component' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_IsWorldStatic, __WorldContext) == 0x000008, "Member 'BlueprintFunctionLibraryJP_C_IsWorldStatic::__WorldContext' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_IsWorldStatic, ReturnValue) == 0x000010, "Member 'BlueprintFunctionLibraryJP_C_IsWorldStatic::ReturnValue' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_IsWorldStatic, CallFunc_GetCollisionObjectType_ReturnValue) == 0x000011, "Member 'BlueprintFunctionLibraryJP_C_IsWorldStatic::CallFunc_GetCollisionObjectType_ReturnValue' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_IsWorldStatic, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000012, "Member 'BlueprintFunctionLibraryJP_C_IsWorldStatic::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function BlueprintFunctionLibraryJP.BlueprintFunctionLibraryJP_C.ModifyOutgoingDamageByPerk
// 0x0190 (0x0190 - 0x0000)
struct BlueprintFunctionLibraryJP_C_ModifyOutgoingDamageByPerk final
{
public:
	double                                        OutgoingDamage;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             HitResult;                                         // 0x0008(0x00F8)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class AActor*                                 Causer;                                            // 0x0100(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAbilitySystemComponent*                HitActorASC;                                       // 0x0108(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0110(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        ModifiedOutgoingDamage;                            // 0x0118(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CachedOutgoingDamage;                              // 0x0120(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0128(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_129[0x3];                                      // 0x0129(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x012C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0130(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0134(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_ResidentCharacter_C*                K2Node_DynamicCast_AsBP_Resident_Character;        // 0x0138(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0140(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_141[0x7];                                      // 0x0141(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPerkManagerComponent*                  CallFunc_GetPerkManagerComponentFromPawn_ReturnValue; // 0x0148(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TArray<class UPerkAction*>                    CallFunc_K2_GetAllActionsOfType_ReturnValue;       // 0x0150(0x0010)(ReferenceParm, ContainsInstancedReference)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0160(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_161[0x7];                                      // 0x0161(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPerkAction*                            CallFunc_Array_Get_Item;                           // 0x0168(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UPA_ModifyOutgoingDamage_C*             K2Node_DynamicCast_AsPA_Modify_Outgoing_Damage;    // 0x0170(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0178(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_179[0x3];                                      // 0x0179(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x017C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CanModifyFromTags_ReturnValue;            // 0x0180(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0181(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_182[0x6];                                      // 0x0182(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_ModifyOutgoingDamage_ModifiedOutgoingDamage; // 0x0188(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BlueprintFunctionLibraryJP_C_ModifyOutgoingDamageByPerk) == 0x000008, "Wrong alignment on BlueprintFunctionLibraryJP_C_ModifyOutgoingDamageByPerk");
static_assert(sizeof(BlueprintFunctionLibraryJP_C_ModifyOutgoingDamageByPerk) == 0x000190, "Wrong size on BlueprintFunctionLibraryJP_C_ModifyOutgoingDamageByPerk");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_ModifyOutgoingDamageByPerk, OutgoingDamage) == 0x000000, "Member 'BlueprintFunctionLibraryJP_C_ModifyOutgoingDamageByPerk::OutgoingDamage' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_ModifyOutgoingDamageByPerk, HitResult) == 0x000008, "Member 'BlueprintFunctionLibraryJP_C_ModifyOutgoingDamageByPerk::HitResult' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_ModifyOutgoingDamageByPerk, Causer) == 0x000100, "Member 'BlueprintFunctionLibraryJP_C_ModifyOutgoingDamageByPerk::Causer' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_ModifyOutgoingDamageByPerk, HitActorASC) == 0x000108, "Member 'BlueprintFunctionLibraryJP_C_ModifyOutgoingDamageByPerk::HitActorASC' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_ModifyOutgoingDamageByPerk, __WorldContext) == 0x000110, "Member 'BlueprintFunctionLibraryJP_C_ModifyOutgoingDamageByPerk::__WorldContext' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_ModifyOutgoingDamageByPerk, ModifiedOutgoingDamage) == 0x000118, "Member 'BlueprintFunctionLibraryJP_C_ModifyOutgoingDamageByPerk::ModifiedOutgoingDamage' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_ModifyOutgoingDamageByPerk, CachedOutgoingDamage) == 0x000120, "Member 'BlueprintFunctionLibraryJP_C_ModifyOutgoingDamageByPerk::CachedOutgoingDamage' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_ModifyOutgoingDamageByPerk, CallFunc_HasAuthority_ReturnValue) == 0x000128, "Member 'BlueprintFunctionLibraryJP_C_ModifyOutgoingDamageByPerk::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_ModifyOutgoingDamageByPerk, Temp_int_Array_Index_Variable) == 0x00012C, "Member 'BlueprintFunctionLibraryJP_C_ModifyOutgoingDamageByPerk::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_ModifyOutgoingDamageByPerk, Temp_int_Loop_Counter_Variable) == 0x000130, "Member 'BlueprintFunctionLibraryJP_C_ModifyOutgoingDamageByPerk::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_ModifyOutgoingDamageByPerk, CallFunc_Add_IntInt_ReturnValue) == 0x000134, "Member 'BlueprintFunctionLibraryJP_C_ModifyOutgoingDamageByPerk::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_ModifyOutgoingDamageByPerk, K2Node_DynamicCast_AsBP_Resident_Character) == 0x000138, "Member 'BlueprintFunctionLibraryJP_C_ModifyOutgoingDamageByPerk::K2Node_DynamicCast_AsBP_Resident_Character' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_ModifyOutgoingDamageByPerk, K2Node_DynamicCast_bSuccess) == 0x000140, "Member 'BlueprintFunctionLibraryJP_C_ModifyOutgoingDamageByPerk::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_ModifyOutgoingDamageByPerk, CallFunc_GetPerkManagerComponentFromPawn_ReturnValue) == 0x000148, "Member 'BlueprintFunctionLibraryJP_C_ModifyOutgoingDamageByPerk::CallFunc_GetPerkManagerComponentFromPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_ModifyOutgoingDamageByPerk, CallFunc_K2_GetAllActionsOfType_ReturnValue) == 0x000150, "Member 'BlueprintFunctionLibraryJP_C_ModifyOutgoingDamageByPerk::CallFunc_K2_GetAllActionsOfType_ReturnValue' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_ModifyOutgoingDamageByPerk, CallFunc_IsValid_ReturnValue) == 0x000160, "Member 'BlueprintFunctionLibraryJP_C_ModifyOutgoingDamageByPerk::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_ModifyOutgoingDamageByPerk, CallFunc_Array_Get_Item) == 0x000168, "Member 'BlueprintFunctionLibraryJP_C_ModifyOutgoingDamageByPerk::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_ModifyOutgoingDamageByPerk, K2Node_DynamicCast_AsPA_Modify_Outgoing_Damage) == 0x000170, "Member 'BlueprintFunctionLibraryJP_C_ModifyOutgoingDamageByPerk::K2Node_DynamicCast_AsPA_Modify_Outgoing_Damage' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_ModifyOutgoingDamageByPerk, K2Node_DynamicCast_bSuccess_1) == 0x000178, "Member 'BlueprintFunctionLibraryJP_C_ModifyOutgoingDamageByPerk::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_ModifyOutgoingDamageByPerk, CallFunc_Array_Length_ReturnValue) == 0x00017C, "Member 'BlueprintFunctionLibraryJP_C_ModifyOutgoingDamageByPerk::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_ModifyOutgoingDamageByPerk, CallFunc_CanModifyFromTags_ReturnValue) == 0x000180, "Member 'BlueprintFunctionLibraryJP_C_ModifyOutgoingDamageByPerk::CallFunc_CanModifyFromTags_ReturnValue' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_ModifyOutgoingDamageByPerk, CallFunc_Less_IntInt_ReturnValue) == 0x000181, "Member 'BlueprintFunctionLibraryJP_C_ModifyOutgoingDamageByPerk::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_ModifyOutgoingDamageByPerk, CallFunc_ModifyOutgoingDamage_ModifiedOutgoingDamage) == 0x000188, "Member 'BlueprintFunctionLibraryJP_C_ModifyOutgoingDamageByPerk::CallFunc_ModifyOutgoingDamage_ModifiedOutgoingDamage' has a wrong offset!");

// Function BlueprintFunctionLibraryJP.BlueprintFunctionLibraryJP_C.ModifyStructureDamageByPerk
// 0x00A0 (0x00A0 - 0x0000)
struct BlueprintFunctionLibraryJP_C_ModifyStructureDamageByPerk final
{
public:
	class APawn*                                  Pawn;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TSoftObjectPtr<class UItemDefinition>         ItemDefinition;                                    // 0x0008(0x0028)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	double                                        OriginalMultiplier;                                // 0x0030(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0038(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        ModifiedMultiplier;                                // 0x0040(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CachedMultiplier;                                  // 0x0048(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPerkManagerComponent*                  CallFunc_GetPerkManagerComponentFromPawn_ReturnValue; // 0x0050(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5C[0x4];                                       // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UPerkAction*>                    CallFunc_K2_GetAllActionsOfType_ReturnValue;       // 0x0060(0x0010)(ReferenceParm, ContainsInstancedReference)
	class UPerkAction*                            CallFunc_Array_Get_Item;                           // 0x0070(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7C[0x4];                                       // 0x007C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPA_OverrideStructureDamageMultiplier_C* K2Node_DynamicCast_AsPA_Override_Structure_Damage_Multiplier; // 0x0080(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_89[0x3];                                       // 0x0089(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_91[0x3];                                       // 0x0091(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_TrySetNewDamageMultiplier_ModifiedMulltiplier; // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BlueprintFunctionLibraryJP_C_ModifyStructureDamageByPerk) == 0x000008, "Wrong alignment on BlueprintFunctionLibraryJP_C_ModifyStructureDamageByPerk");
static_assert(sizeof(BlueprintFunctionLibraryJP_C_ModifyStructureDamageByPerk) == 0x0000A0, "Wrong size on BlueprintFunctionLibraryJP_C_ModifyStructureDamageByPerk");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_ModifyStructureDamageByPerk, Pawn) == 0x000000, "Member 'BlueprintFunctionLibraryJP_C_ModifyStructureDamageByPerk::Pawn' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_ModifyStructureDamageByPerk, ItemDefinition) == 0x000008, "Member 'BlueprintFunctionLibraryJP_C_ModifyStructureDamageByPerk::ItemDefinition' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_ModifyStructureDamageByPerk, OriginalMultiplier) == 0x000030, "Member 'BlueprintFunctionLibraryJP_C_ModifyStructureDamageByPerk::OriginalMultiplier' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_ModifyStructureDamageByPerk, __WorldContext) == 0x000038, "Member 'BlueprintFunctionLibraryJP_C_ModifyStructureDamageByPerk::__WorldContext' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_ModifyStructureDamageByPerk, ModifiedMultiplier) == 0x000040, "Member 'BlueprintFunctionLibraryJP_C_ModifyStructureDamageByPerk::ModifiedMultiplier' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_ModifyStructureDamageByPerk, CachedMultiplier) == 0x000048, "Member 'BlueprintFunctionLibraryJP_C_ModifyStructureDamageByPerk::CachedMultiplier' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_ModifyStructureDamageByPerk, CallFunc_GetPerkManagerComponentFromPawn_ReturnValue) == 0x000050, "Member 'BlueprintFunctionLibraryJP_C_ModifyStructureDamageByPerk::CallFunc_GetPerkManagerComponentFromPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_ModifyStructureDamageByPerk, Temp_int_Array_Index_Variable) == 0x000058, "Member 'BlueprintFunctionLibraryJP_C_ModifyStructureDamageByPerk::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_ModifyStructureDamageByPerk, CallFunc_K2_GetAllActionsOfType_ReturnValue) == 0x000060, "Member 'BlueprintFunctionLibraryJP_C_ModifyStructureDamageByPerk::CallFunc_K2_GetAllActionsOfType_ReturnValue' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_ModifyStructureDamageByPerk, CallFunc_Array_Get_Item) == 0x000070, "Member 'BlueprintFunctionLibraryJP_C_ModifyStructureDamageByPerk::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_ModifyStructureDamageByPerk, CallFunc_Array_Length_ReturnValue) == 0x000078, "Member 'BlueprintFunctionLibraryJP_C_ModifyStructureDamageByPerk::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_ModifyStructureDamageByPerk, K2Node_DynamicCast_AsPA_Override_Structure_Damage_Multiplier) == 0x000080, "Member 'BlueprintFunctionLibraryJP_C_ModifyStructureDamageByPerk::K2Node_DynamicCast_AsPA_Override_Structure_Damage_Multiplier' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_ModifyStructureDamageByPerk, K2Node_DynamicCast_bSuccess) == 0x000088, "Member 'BlueprintFunctionLibraryJP_C_ModifyStructureDamageByPerk::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_ModifyStructureDamageByPerk, Temp_int_Loop_Counter_Variable) == 0x00008C, "Member 'BlueprintFunctionLibraryJP_C_ModifyStructureDamageByPerk::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_ModifyStructureDamageByPerk, CallFunc_Less_IntInt_ReturnValue) == 0x000090, "Member 'BlueprintFunctionLibraryJP_C_ModifyStructureDamageByPerk::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_ModifyStructureDamageByPerk, CallFunc_Add_IntInt_ReturnValue) == 0x000094, "Member 'BlueprintFunctionLibraryJP_C_ModifyStructureDamageByPerk::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_ModifyStructureDamageByPerk, CallFunc_TrySetNewDamageMultiplier_ModifiedMulltiplier) == 0x000098, "Member 'BlueprintFunctionLibraryJP_C_ModifyStructureDamageByPerk::CallFunc_TrySetNewDamageMultiplier_ModifiedMulltiplier' has a wrong offset!");

// Function BlueprintFunctionLibraryJP.BlueprintFunctionLibraryJP_C.PlayIncomeNotificationAtLocation
// 0x0040 (0x0040 - 0x0000)
struct BlueprintFunctionLibraryJP_C_PlayIncomeNotificationAtLocation final
{
public:
	struct FVector                                Location;                                          // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Score;                                             // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         TeamId;                                            // 0x0020(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0028(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_IncomeNotificationManager_C*        CallFunc_GetIncomeNotificationManager_ReturnValue; // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BlueprintFunctionLibraryJP_C_PlayIncomeNotificationAtLocation) == 0x000008, "Wrong alignment on BlueprintFunctionLibraryJP_C_PlayIncomeNotificationAtLocation");
static_assert(sizeof(BlueprintFunctionLibraryJP_C_PlayIncomeNotificationAtLocation) == 0x000040, "Wrong size on BlueprintFunctionLibraryJP_C_PlayIncomeNotificationAtLocation");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_PlayIncomeNotificationAtLocation, Location) == 0x000000, "Member 'BlueprintFunctionLibraryJP_C_PlayIncomeNotificationAtLocation::Location' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_PlayIncomeNotificationAtLocation, Score) == 0x000018, "Member 'BlueprintFunctionLibraryJP_C_PlayIncomeNotificationAtLocation::Score' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_PlayIncomeNotificationAtLocation, TeamId) == 0x000020, "Member 'BlueprintFunctionLibraryJP_C_PlayIncomeNotificationAtLocation::TeamId' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_PlayIncomeNotificationAtLocation, __WorldContext) == 0x000028, "Member 'BlueprintFunctionLibraryJP_C_PlayIncomeNotificationAtLocation::__WorldContext' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_PlayIncomeNotificationAtLocation, CallFunc_GetIncomeNotificationManager_ReturnValue) == 0x000030, "Member 'BlueprintFunctionLibraryJP_C_PlayIncomeNotificationAtLocation::CallFunc_GetIncomeNotificationManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_PlayIncomeNotificationAtLocation, CallFunc_IsValid_ReturnValue) == 0x000038, "Member 'BlueprintFunctionLibraryJP_C_PlayIncomeNotificationAtLocation::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BlueprintFunctionLibraryJP.BlueprintFunctionLibraryJP_C.ReceptacleSetComparison
// 0x0108 (0x0108 - 0x0000)
struct BlueprintFunctionLibraryJP_C_ReceptacleSetComparison final
{
public:
	TSet<EReceptacleType>                         A;                                                 // 0x0000(0x0050)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	TSet<EReceptacleType>                         B;                                                 // 0x0050(0x0050)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class UObject*                                __WorldContext;                                    // 0x00A0(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Match;                                             // 0x00A8(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A9[0x7];                                       // 0x00A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSet<EReceptacleType>                         CallFunc_Set_Intersection_Result;                  // 0x00B0(0x0050)()
	int32                                         CallFunc_Set_Length_ReturnValue;                   // 0x0100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0104(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BlueprintFunctionLibraryJP_C_ReceptacleSetComparison) == 0x000008, "Wrong alignment on BlueprintFunctionLibraryJP_C_ReceptacleSetComparison");
static_assert(sizeof(BlueprintFunctionLibraryJP_C_ReceptacleSetComparison) == 0x000108, "Wrong size on BlueprintFunctionLibraryJP_C_ReceptacleSetComparison");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_ReceptacleSetComparison, A) == 0x000000, "Member 'BlueprintFunctionLibraryJP_C_ReceptacleSetComparison::A' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_ReceptacleSetComparison, B) == 0x000050, "Member 'BlueprintFunctionLibraryJP_C_ReceptacleSetComparison::B' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_ReceptacleSetComparison, __WorldContext) == 0x0000A0, "Member 'BlueprintFunctionLibraryJP_C_ReceptacleSetComparison::__WorldContext' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_ReceptacleSetComparison, Match) == 0x0000A8, "Member 'BlueprintFunctionLibraryJP_C_ReceptacleSetComparison::Match' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_ReceptacleSetComparison, CallFunc_Set_Intersection_Result) == 0x0000B0, "Member 'BlueprintFunctionLibraryJP_C_ReceptacleSetComparison::CallFunc_Set_Intersection_Result' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_ReceptacleSetComparison, CallFunc_Set_Length_ReturnValue) == 0x000100, "Member 'BlueprintFunctionLibraryJP_C_ReceptacleSetComparison::CallFunc_Set_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_ReceptacleSetComparison, CallFunc_Greater_IntInt_ReturnValue) == 0x000104, "Member 'BlueprintFunctionLibraryJP_C_ReceptacleSetComparison::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");

// Function BlueprintFunctionLibraryJP.BlueprintFunctionLibraryJP_C.RoomEnumToTextTranslated
// 0x00E8 (0x00E8 - 0x0000)
struct BlueprintFunctionLibraryJP_C_RoomEnumToTextTranslated final
{
public:
	ERooms                                        ERooms;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FText                                   ReturnValue;                                       // 0x0010(0x0010)(Parm, OutParm, ReturnParm)
	ERooms                                        Temp_byte_Variable;                                // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable;                                // 0x0028(0x0010)()
	class FText                                   Temp_text_Variable_1;                              // 0x0038(0x0010)()
	class FText                                   Temp_text_Variable_2;                              // 0x0048(0x0010)()
	class FText                                   Temp_text_Variable_3;                              // 0x0058(0x0010)()
	class FText                                   Temp_text_Variable_4;                              // 0x0068(0x0010)()
	class FText                                   Temp_text_Variable_5;                              // 0x0078(0x0010)()
	class FText                                   Temp_text_Variable_6;                              // 0x0088(0x0010)()
	class FText                                   Temp_text_Variable_7;                              // 0x0098(0x0010)()
	class FText                                   Temp_text_Variable_8;                              // 0x00A8(0x0010)()
	class FText                                   Temp_text_Variable_9;                              // 0x00B8(0x0010)()
	class FText                                   Temp_text_Variable_10;                             // 0x00C8(0x0010)()
	class FText                                   K2Node_Select_Default;                             // 0x00D8(0x0010)()
};
static_assert(alignof(BlueprintFunctionLibraryJP_C_RoomEnumToTextTranslated) == 0x000008, "Wrong alignment on BlueprintFunctionLibraryJP_C_RoomEnumToTextTranslated");
static_assert(sizeof(BlueprintFunctionLibraryJP_C_RoomEnumToTextTranslated) == 0x0000E8, "Wrong size on BlueprintFunctionLibraryJP_C_RoomEnumToTextTranslated");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_RoomEnumToTextTranslated, ERooms) == 0x000000, "Member 'BlueprintFunctionLibraryJP_C_RoomEnumToTextTranslated::ERooms' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_RoomEnumToTextTranslated, __WorldContext) == 0x000008, "Member 'BlueprintFunctionLibraryJP_C_RoomEnumToTextTranslated::__WorldContext' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_RoomEnumToTextTranslated, ReturnValue) == 0x000010, "Member 'BlueprintFunctionLibraryJP_C_RoomEnumToTextTranslated::ReturnValue' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_RoomEnumToTextTranslated, Temp_byte_Variable) == 0x000020, "Member 'BlueprintFunctionLibraryJP_C_RoomEnumToTextTranslated::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_RoomEnumToTextTranslated, Temp_text_Variable) == 0x000028, "Member 'BlueprintFunctionLibraryJP_C_RoomEnumToTextTranslated::Temp_text_Variable' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_RoomEnumToTextTranslated, Temp_text_Variable_1) == 0x000038, "Member 'BlueprintFunctionLibraryJP_C_RoomEnumToTextTranslated::Temp_text_Variable_1' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_RoomEnumToTextTranslated, Temp_text_Variable_2) == 0x000048, "Member 'BlueprintFunctionLibraryJP_C_RoomEnumToTextTranslated::Temp_text_Variable_2' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_RoomEnumToTextTranslated, Temp_text_Variable_3) == 0x000058, "Member 'BlueprintFunctionLibraryJP_C_RoomEnumToTextTranslated::Temp_text_Variable_3' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_RoomEnumToTextTranslated, Temp_text_Variable_4) == 0x000068, "Member 'BlueprintFunctionLibraryJP_C_RoomEnumToTextTranslated::Temp_text_Variable_4' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_RoomEnumToTextTranslated, Temp_text_Variable_5) == 0x000078, "Member 'BlueprintFunctionLibraryJP_C_RoomEnumToTextTranslated::Temp_text_Variable_5' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_RoomEnumToTextTranslated, Temp_text_Variable_6) == 0x000088, "Member 'BlueprintFunctionLibraryJP_C_RoomEnumToTextTranslated::Temp_text_Variable_6' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_RoomEnumToTextTranslated, Temp_text_Variable_7) == 0x000098, "Member 'BlueprintFunctionLibraryJP_C_RoomEnumToTextTranslated::Temp_text_Variable_7' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_RoomEnumToTextTranslated, Temp_text_Variable_8) == 0x0000A8, "Member 'BlueprintFunctionLibraryJP_C_RoomEnumToTextTranslated::Temp_text_Variable_8' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_RoomEnumToTextTranslated, Temp_text_Variable_9) == 0x0000B8, "Member 'BlueprintFunctionLibraryJP_C_RoomEnumToTextTranslated::Temp_text_Variable_9' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_RoomEnumToTextTranslated, Temp_text_Variable_10) == 0x0000C8, "Member 'BlueprintFunctionLibraryJP_C_RoomEnumToTextTranslated::Temp_text_Variable_10' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_RoomEnumToTextTranslated, K2Node_Select_Default) == 0x0000D8, "Member 'BlueprintFunctionLibraryJP_C_RoomEnumToTextTranslated::K2Node_Select_Default' has a wrong offset!");

// Function BlueprintFunctionLibraryJP.BlueprintFunctionLibraryJP_C.Switch To Menu Input Mappings
// 0x00C0 (0x00C0 - 0x0000)
struct BlueprintFunctionLibraryJP_C_Switch_To_Menu_Input_Mappings final
{
public:
	class APlayerController*                      PlayerController;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Invert;                                            // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FModifyContextOptions                  Temp_struct_Variable;                              // 0x0018(0x0001)(ConstParm, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_SelectString_ReturnValue;                 // 0x0020(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0030(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class UEnhancedInputLocalPlayerSubsystem*     CallFunc_GetLocalPlayerSubSystemFromPlayerController_ReturnValue; // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IEnhancedInputSubsystemInterface> CallFunc_RemoveMappingContext_self_CastInput;      // 0x0048(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FModifyContextOptions                  Temp_struct_Variable_1;                            // 0x0058(0x0001)(ConstParm, NoDestructor)
	struct FModifyContextOptions                  Temp_struct_Variable_2;                            // 0x0059(0x0001)(ConstParm, NoDestructor)
	uint8                                         Pad_5A[0x6];                                       // 0x005A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IEnhancedInputSubsystemInterface> CallFunc_RemoveMappingContext_self_CastInput_1;    // 0x0060(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IEnhancedInputSubsystemInterface> CallFunc_RemoveMappingContext_self_CastInput_2;    // 0x0070(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FModifyContextOptions                  Temp_struct_Variable_3;                            // 0x0080(0x0001)(ConstParm, NoDestructor)
	struct FModifyContextOptions                  Temp_struct_Variable_4;                            // 0x0081(0x0001)(ConstParm, NoDestructor)
	uint8                                         Pad_82[0x6];                                       // 0x0082(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IEnhancedInputSubsystemInterface> CallFunc_AddMappingContext_self_CastInput;         // 0x0088(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IEnhancedInputSubsystemInterface> CallFunc_AddMappingContext_self_CastInput_1;       // 0x0098(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FModifyContextOptions                  Temp_struct_Variable_5;                            // 0x00A8(0x0001)(ConstParm, NoDestructor)
	uint8                                         Pad_A9[0x7];                                       // 0x00A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IEnhancedInputSubsystemInterface> CallFunc_AddMappingContext_self_CastInput_2;       // 0x00B0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BlueprintFunctionLibraryJP_C_Switch_To_Menu_Input_Mappings) == 0x000008, "Wrong alignment on BlueprintFunctionLibraryJP_C_Switch_To_Menu_Input_Mappings");
static_assert(sizeof(BlueprintFunctionLibraryJP_C_Switch_To_Menu_Input_Mappings) == 0x0000C0, "Wrong size on BlueprintFunctionLibraryJP_C_Switch_To_Menu_Input_Mappings");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_Switch_To_Menu_Input_Mappings, PlayerController) == 0x000000, "Member 'BlueprintFunctionLibraryJP_C_Switch_To_Menu_Input_Mappings::PlayerController' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_Switch_To_Menu_Input_Mappings, Invert) == 0x000008, "Member 'BlueprintFunctionLibraryJP_C_Switch_To_Menu_Input_Mappings::Invert' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_Switch_To_Menu_Input_Mappings, __WorldContext) == 0x000010, "Member 'BlueprintFunctionLibraryJP_C_Switch_To_Menu_Input_Mappings::__WorldContext' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_Switch_To_Menu_Input_Mappings, Temp_struct_Variable) == 0x000018, "Member 'BlueprintFunctionLibraryJP_C_Switch_To_Menu_Input_Mappings::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_Switch_To_Menu_Input_Mappings, CallFunc_SelectString_ReturnValue) == 0x000020, "Member 'BlueprintFunctionLibraryJP_C_Switch_To_Menu_Input_Mappings::CallFunc_SelectString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_Switch_To_Menu_Input_Mappings, CallFunc_Concat_StrStr_ReturnValue) == 0x000030, "Member 'BlueprintFunctionLibraryJP_C_Switch_To_Menu_Input_Mappings::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_Switch_To_Menu_Input_Mappings, CallFunc_GetLocalPlayerSubSystemFromPlayerController_ReturnValue) == 0x000040, "Member 'BlueprintFunctionLibraryJP_C_Switch_To_Menu_Input_Mappings::CallFunc_GetLocalPlayerSubSystemFromPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_Switch_To_Menu_Input_Mappings, CallFunc_RemoveMappingContext_self_CastInput) == 0x000048, "Member 'BlueprintFunctionLibraryJP_C_Switch_To_Menu_Input_Mappings::CallFunc_RemoveMappingContext_self_CastInput' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_Switch_To_Menu_Input_Mappings, Temp_struct_Variable_1) == 0x000058, "Member 'BlueprintFunctionLibraryJP_C_Switch_To_Menu_Input_Mappings::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_Switch_To_Menu_Input_Mappings, Temp_struct_Variable_2) == 0x000059, "Member 'BlueprintFunctionLibraryJP_C_Switch_To_Menu_Input_Mappings::Temp_struct_Variable_2' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_Switch_To_Menu_Input_Mappings, CallFunc_RemoveMappingContext_self_CastInput_1) == 0x000060, "Member 'BlueprintFunctionLibraryJP_C_Switch_To_Menu_Input_Mappings::CallFunc_RemoveMappingContext_self_CastInput_1' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_Switch_To_Menu_Input_Mappings, CallFunc_RemoveMappingContext_self_CastInput_2) == 0x000070, "Member 'BlueprintFunctionLibraryJP_C_Switch_To_Menu_Input_Mappings::CallFunc_RemoveMappingContext_self_CastInput_2' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_Switch_To_Menu_Input_Mappings, Temp_struct_Variable_3) == 0x000080, "Member 'BlueprintFunctionLibraryJP_C_Switch_To_Menu_Input_Mappings::Temp_struct_Variable_3' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_Switch_To_Menu_Input_Mappings, Temp_struct_Variable_4) == 0x000081, "Member 'BlueprintFunctionLibraryJP_C_Switch_To_Menu_Input_Mappings::Temp_struct_Variable_4' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_Switch_To_Menu_Input_Mappings, CallFunc_AddMappingContext_self_CastInput) == 0x000088, "Member 'BlueprintFunctionLibraryJP_C_Switch_To_Menu_Input_Mappings::CallFunc_AddMappingContext_self_CastInput' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_Switch_To_Menu_Input_Mappings, CallFunc_AddMappingContext_self_CastInput_1) == 0x000098, "Member 'BlueprintFunctionLibraryJP_C_Switch_To_Menu_Input_Mappings::CallFunc_AddMappingContext_self_CastInput_1' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_Switch_To_Menu_Input_Mappings, Temp_struct_Variable_5) == 0x0000A8, "Member 'BlueprintFunctionLibraryJP_C_Switch_To_Menu_Input_Mappings::Temp_struct_Variable_5' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_Switch_To_Menu_Input_Mappings, CallFunc_AddMappingContext_self_CastInput_2) == 0x0000B0, "Member 'BlueprintFunctionLibraryJP_C_Switch_To_Menu_Input_Mappings::CallFunc_AddMappingContext_self_CastInput_2' has a wrong offset!");

// Function BlueprintFunctionLibraryJP.BlueprintFunctionLibraryJP_C.ToggleHighlightOnTask
// 0x0050 (0x0050 - 0x0000)
struct BlueprintFunctionLibraryJP_C_ToggleHighlightOnTask final
{
public:
	bool                                          Activate;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_HighlightParameters                 Params_0;                                          // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<class ABP_HighlightManager_C*>         CallFunc_GetAllActorsOfClass_OutActors;            // 0x0020(0x0010)(ReferenceParm)
	TArray<class ABP_HighlightManager_C*>         CallFunc_GetAllActorsOfClass_OutActors_1;          // 0x0030(0x0010)(ReferenceParm)
	class ABP_HighlightManager_C*                 CallFunc_Array_Get_Item;                           // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_HighlightManager_C*                 CallFunc_Array_Get_Item_1;                         // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BlueprintFunctionLibraryJP_C_ToggleHighlightOnTask) == 0x000008, "Wrong alignment on BlueprintFunctionLibraryJP_C_ToggleHighlightOnTask");
static_assert(sizeof(BlueprintFunctionLibraryJP_C_ToggleHighlightOnTask) == 0x000050, "Wrong size on BlueprintFunctionLibraryJP_C_ToggleHighlightOnTask");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_ToggleHighlightOnTask, Activate) == 0x000000, "Member 'BlueprintFunctionLibraryJP_C_ToggleHighlightOnTask::Activate' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_ToggleHighlightOnTask, Params_0) == 0x000008, "Member 'BlueprintFunctionLibraryJP_C_ToggleHighlightOnTask::Params_0' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_ToggleHighlightOnTask, __WorldContext) == 0x000018, "Member 'BlueprintFunctionLibraryJP_C_ToggleHighlightOnTask::__WorldContext' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_ToggleHighlightOnTask, CallFunc_GetAllActorsOfClass_OutActors) == 0x000020, "Member 'BlueprintFunctionLibraryJP_C_ToggleHighlightOnTask::CallFunc_GetAllActorsOfClass_OutActors' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_ToggleHighlightOnTask, CallFunc_GetAllActorsOfClass_OutActors_1) == 0x000030, "Member 'BlueprintFunctionLibraryJP_C_ToggleHighlightOnTask::CallFunc_GetAllActorsOfClass_OutActors_1' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_ToggleHighlightOnTask, CallFunc_Array_Get_Item) == 0x000040, "Member 'BlueprintFunctionLibraryJP_C_ToggleHighlightOnTask::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_ToggleHighlightOnTask, CallFunc_Array_Get_Item_1) == 0x000048, "Member 'BlueprintFunctionLibraryJP_C_ToggleHighlightOnTask::CallFunc_Array_Get_Item_1' has a wrong offset!");

// Function BlueprintFunctionLibraryJP.BlueprintFunctionLibraryJP_C.ToolEnumToTextTranslated
// 0x0088 (0x0088 - 0x0000)
struct BlueprintFunctionLibraryJP_C_ToolEnumToTextTranslated final
{
public:
	E_Tools                                       ETools;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FText                                   ReturnValue;                                       // 0x0010(0x0010)(Parm, OutParm, ReturnParm)
	E_Tools                                       Temp_byte_Variable;                                // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable;                                // 0x0028(0x0010)()
	class FText                                   Temp_text_Variable_1;                              // 0x0038(0x0010)()
	class FText                                   Temp_text_Variable_2;                              // 0x0048(0x0010)()
	class FText                                   Temp_text_Variable_3;                              // 0x0058(0x0010)()
	class FText                                   Temp_text_Variable_4;                              // 0x0068(0x0010)()
	class FText                                   K2Node_Select_Default;                             // 0x0078(0x0010)()
};
static_assert(alignof(BlueprintFunctionLibraryJP_C_ToolEnumToTextTranslated) == 0x000008, "Wrong alignment on BlueprintFunctionLibraryJP_C_ToolEnumToTextTranslated");
static_assert(sizeof(BlueprintFunctionLibraryJP_C_ToolEnumToTextTranslated) == 0x000088, "Wrong size on BlueprintFunctionLibraryJP_C_ToolEnumToTextTranslated");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_ToolEnumToTextTranslated, ETools) == 0x000000, "Member 'BlueprintFunctionLibraryJP_C_ToolEnumToTextTranslated::ETools' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_ToolEnumToTextTranslated, __WorldContext) == 0x000008, "Member 'BlueprintFunctionLibraryJP_C_ToolEnumToTextTranslated::__WorldContext' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_ToolEnumToTextTranslated, ReturnValue) == 0x000010, "Member 'BlueprintFunctionLibraryJP_C_ToolEnumToTextTranslated::ReturnValue' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_ToolEnumToTextTranslated, Temp_byte_Variable) == 0x000020, "Member 'BlueprintFunctionLibraryJP_C_ToolEnumToTextTranslated::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_ToolEnumToTextTranslated, Temp_text_Variable) == 0x000028, "Member 'BlueprintFunctionLibraryJP_C_ToolEnumToTextTranslated::Temp_text_Variable' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_ToolEnumToTextTranslated, Temp_text_Variable_1) == 0x000038, "Member 'BlueprintFunctionLibraryJP_C_ToolEnumToTextTranslated::Temp_text_Variable_1' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_ToolEnumToTextTranslated, Temp_text_Variable_2) == 0x000048, "Member 'BlueprintFunctionLibraryJP_C_ToolEnumToTextTranslated::Temp_text_Variable_2' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_ToolEnumToTextTranslated, Temp_text_Variable_3) == 0x000058, "Member 'BlueprintFunctionLibraryJP_C_ToolEnumToTextTranslated::Temp_text_Variable_3' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_ToolEnumToTextTranslated, Temp_text_Variable_4) == 0x000068, "Member 'BlueprintFunctionLibraryJP_C_ToolEnumToTextTranslated::Temp_text_Variable_4' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_ToolEnumToTextTranslated, K2Node_Select_Default) == 0x000078, "Member 'BlueprintFunctionLibraryJP_C_ToolEnumToTextTranslated::K2Node_Select_Default' has a wrong offset!");

// Function BlueprintFunctionLibraryJP.BlueprintFunctionLibraryJP_C.TraceForHit
// 0x05D0 (0x05D0 - 0x0000)
struct BlueprintFunctionLibraryJP_C_TraceForHit final
{
public:
	float                                         SphereRadius;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Range;                                             // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                TraceFromLocation;                                 // 0x0010(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               TraceRotation;                                     // 0x0028(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class AActor*                                 Owner;                                             // 0x0040(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0048(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<struct FHitResult>                     AcceptedHits;                                      // 0x0050(0x0010)(Parm, OutParm, ContainsInstancedReference)
	TArray<struct FHitResult>                     L_Hits;                                            // 0x0060(0x0010)(Edit, BlueprintVisible, ContainsInstancedReference)
	TArray<class AActor*>                         L_HitActors;                                       // 0x0070(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8C[0x4];                                       // 0x008C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetForwardVector_ReturnValue;             // 0x0090(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x00A8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x00C0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D8[0x8];                                       // 0x00D8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x00E0(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0140(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x0158(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x0170(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         Temp_object_Variable;                              // 0x0188(0x0010)(ConstParm, ReferenceParm)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue_1;           // 0x0198(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         Temp_object_Variable_1;                            // 0x01B0(0x0010)(ConstParm, ReferenceParm)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_1;       // 0x01C0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_1;           // 0x01D8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<EObjectTypeQuery>                      K2Node_MakeArray_Array;                            // 0x01F0(0x0010)(ConstParm, ReferenceParm)
	TArray<struct FHitResult>                     CallFunc_SphereTraceMultiForObjects_OutHits;       // 0x0200(0x0010)(ReferenceParm, ContainsInstancedReference)
	bool                                          CallFunc_SphereTraceMultiForObjects_ReturnValue;   // 0x0210(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_211[0x3];                                      // 0x0211(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0214(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_Array_Get_Item;                           // 0x0218(0x00F8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0310(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_311[0x3];                                      // 0x0311(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0314(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x0318(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x0319(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31A[0x2];                                      // 0x031A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x031C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x0320(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_324[0x4];                                      // 0x0324(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x0328(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x0340(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x0358(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x0370(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0388(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0390(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0398(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x03A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_BoneName;                  // 0x03A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x03B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x03B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x03B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3BC[0x4];                                      // 0x03BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x03C0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x03D8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit_1;            // 0x03F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap_1;         // 0x03F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3F2[0x2];                                      // 0x03F2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time_1;                    // 0x03F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance_1;                // 0x03F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3FC[0x4];                                      // 0x03FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_Location_1;                // 0x0400(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint_1;             // 0x0418(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal_1;                  // 0x0430(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal_1;            // 0x0448(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat_1;                 // 0x0460(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor_1;                // 0x0468(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent_1;            // 0x0470(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName_1;             // 0x0478(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_BoneName_1;                // 0x0480(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem_1;                 // 0x0488(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex_1;            // 0x048C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex_1;               // 0x0490(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_494[0x4];                                      // 0x0494(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_TraceStart_1;              // 0x0498(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd_1;                // 0x04B0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_LineTraceSingle_OutHit;                   // 0x04C8(0x00F8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceSingle_ReturnValue;              // 0x05C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5C1[0x3];                                      // 0x05C1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x05C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_DoesImplementInterface_ReturnValue;       // 0x05C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x05C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x05CA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x05CB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BlueprintFunctionLibraryJP_C_TraceForHit) == 0x000010, "Wrong alignment on BlueprintFunctionLibraryJP_C_TraceForHit");
static_assert(sizeof(BlueprintFunctionLibraryJP_C_TraceForHit) == 0x0005D0, "Wrong size on BlueprintFunctionLibraryJP_C_TraceForHit");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_TraceForHit, SphereRadius) == 0x000000, "Member 'BlueprintFunctionLibraryJP_C_TraceForHit::SphereRadius' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_TraceForHit, Range) == 0x000008, "Member 'BlueprintFunctionLibraryJP_C_TraceForHit::Range' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_TraceForHit, TraceFromLocation) == 0x000010, "Member 'BlueprintFunctionLibraryJP_C_TraceForHit::TraceFromLocation' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_TraceForHit, TraceRotation) == 0x000028, "Member 'BlueprintFunctionLibraryJP_C_TraceForHit::TraceRotation' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_TraceForHit, Owner) == 0x000040, "Member 'BlueprintFunctionLibraryJP_C_TraceForHit::Owner' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_TraceForHit, __WorldContext) == 0x000048, "Member 'BlueprintFunctionLibraryJP_C_TraceForHit::__WorldContext' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_TraceForHit, AcceptedHits) == 0x000050, "Member 'BlueprintFunctionLibraryJP_C_TraceForHit::AcceptedHits' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_TraceForHit, L_Hits) == 0x000060, "Member 'BlueprintFunctionLibraryJP_C_TraceForHit::L_Hits' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_TraceForHit, L_HitActors) == 0x000070, "Member 'BlueprintFunctionLibraryJP_C_TraceForHit::L_HitActors' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_TraceForHit, Temp_int_Array_Index_Variable) == 0x000080, "Member 'BlueprintFunctionLibraryJP_C_TraceForHit::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_TraceForHit, Temp_int_Loop_Counter_Variable) == 0x000084, "Member 'BlueprintFunctionLibraryJP_C_TraceForHit::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_TraceForHit, CallFunc_Add_IntInt_ReturnValue) == 0x000088, "Member 'BlueprintFunctionLibraryJP_C_TraceForHit::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_TraceForHit, CallFunc_GetForwardVector_ReturnValue) == 0x000090, "Member 'BlueprintFunctionLibraryJP_C_TraceForHit::CallFunc_GetForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_TraceForHit, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x0000A8, "Member 'BlueprintFunctionLibraryJP_C_TraceForHit::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_TraceForHit, CallFunc_Add_VectorVector_ReturnValue) == 0x0000C0, "Member 'BlueprintFunctionLibraryJP_C_TraceForHit::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_TraceForHit, CallFunc_MakeTransform_ReturnValue) == 0x0000E0, "Member 'BlueprintFunctionLibraryJP_C_TraceForHit::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_TraceForHit, CallFunc_BreakTransform_Location) == 0x000140, "Member 'BlueprintFunctionLibraryJP_C_TraceForHit::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_TraceForHit, CallFunc_BreakTransform_Rotation) == 0x000158, "Member 'BlueprintFunctionLibraryJP_C_TraceForHit::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_TraceForHit, CallFunc_BreakTransform_Scale) == 0x000170, "Member 'BlueprintFunctionLibraryJP_C_TraceForHit::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_TraceForHit, Temp_object_Variable) == 0x000188, "Member 'BlueprintFunctionLibraryJP_C_TraceForHit::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_TraceForHit, CallFunc_GetForwardVector_ReturnValue_1) == 0x000198, "Member 'BlueprintFunctionLibraryJP_C_TraceForHit::CallFunc_GetForwardVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_TraceForHit, Temp_object_Variable_1) == 0x0001B0, "Member 'BlueprintFunctionLibraryJP_C_TraceForHit::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_TraceForHit, CallFunc_Multiply_VectorFloat_ReturnValue_1) == 0x0001C0, "Member 'BlueprintFunctionLibraryJP_C_TraceForHit::CallFunc_Multiply_VectorFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_TraceForHit, CallFunc_Add_VectorVector_ReturnValue_1) == 0x0001D8, "Member 'BlueprintFunctionLibraryJP_C_TraceForHit::CallFunc_Add_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_TraceForHit, K2Node_MakeArray_Array) == 0x0001F0, "Member 'BlueprintFunctionLibraryJP_C_TraceForHit::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_TraceForHit, CallFunc_SphereTraceMultiForObjects_OutHits) == 0x000200, "Member 'BlueprintFunctionLibraryJP_C_TraceForHit::CallFunc_SphereTraceMultiForObjects_OutHits' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_TraceForHit, CallFunc_SphereTraceMultiForObjects_ReturnValue) == 0x000210, "Member 'BlueprintFunctionLibraryJP_C_TraceForHit::CallFunc_SphereTraceMultiForObjects_ReturnValue' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_TraceForHit, CallFunc_Array_Length_ReturnValue) == 0x000214, "Member 'BlueprintFunctionLibraryJP_C_TraceForHit::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_TraceForHit, CallFunc_Array_Get_Item) == 0x000218, "Member 'BlueprintFunctionLibraryJP_C_TraceForHit::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_TraceForHit, CallFunc_Less_IntInt_ReturnValue) == 0x000310, "Member 'BlueprintFunctionLibraryJP_C_TraceForHit::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_TraceForHit, CallFunc_Array_Add_ReturnValue) == 0x000314, "Member 'BlueprintFunctionLibraryJP_C_TraceForHit::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_TraceForHit, CallFunc_BreakHitResult_bBlockingHit) == 0x000318, "Member 'BlueprintFunctionLibraryJP_C_TraceForHit::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_TraceForHit, CallFunc_BreakHitResult_bInitialOverlap) == 0x000319, "Member 'BlueprintFunctionLibraryJP_C_TraceForHit::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_TraceForHit, CallFunc_BreakHitResult_Time) == 0x00031C, "Member 'BlueprintFunctionLibraryJP_C_TraceForHit::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_TraceForHit, CallFunc_BreakHitResult_Distance) == 0x000320, "Member 'BlueprintFunctionLibraryJP_C_TraceForHit::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_TraceForHit, CallFunc_BreakHitResult_Location) == 0x000328, "Member 'BlueprintFunctionLibraryJP_C_TraceForHit::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_TraceForHit, CallFunc_BreakHitResult_ImpactPoint) == 0x000340, "Member 'BlueprintFunctionLibraryJP_C_TraceForHit::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_TraceForHit, CallFunc_BreakHitResult_Normal) == 0x000358, "Member 'BlueprintFunctionLibraryJP_C_TraceForHit::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_TraceForHit, CallFunc_BreakHitResult_ImpactNormal) == 0x000370, "Member 'BlueprintFunctionLibraryJP_C_TraceForHit::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_TraceForHit, CallFunc_BreakHitResult_PhysMat) == 0x000388, "Member 'BlueprintFunctionLibraryJP_C_TraceForHit::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_TraceForHit, CallFunc_BreakHitResult_HitActor) == 0x000390, "Member 'BlueprintFunctionLibraryJP_C_TraceForHit::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_TraceForHit, CallFunc_BreakHitResult_HitComponent) == 0x000398, "Member 'BlueprintFunctionLibraryJP_C_TraceForHit::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_TraceForHit, CallFunc_BreakHitResult_HitBoneName) == 0x0003A0, "Member 'BlueprintFunctionLibraryJP_C_TraceForHit::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_TraceForHit, CallFunc_BreakHitResult_BoneName) == 0x0003A8, "Member 'BlueprintFunctionLibraryJP_C_TraceForHit::CallFunc_BreakHitResult_BoneName' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_TraceForHit, CallFunc_BreakHitResult_HitItem) == 0x0003B0, "Member 'BlueprintFunctionLibraryJP_C_TraceForHit::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_TraceForHit, CallFunc_BreakHitResult_ElementIndex) == 0x0003B4, "Member 'BlueprintFunctionLibraryJP_C_TraceForHit::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_TraceForHit, CallFunc_BreakHitResult_FaceIndex) == 0x0003B8, "Member 'BlueprintFunctionLibraryJP_C_TraceForHit::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_TraceForHit, CallFunc_BreakHitResult_TraceStart) == 0x0003C0, "Member 'BlueprintFunctionLibraryJP_C_TraceForHit::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_TraceForHit, CallFunc_BreakHitResult_TraceEnd) == 0x0003D8, "Member 'BlueprintFunctionLibraryJP_C_TraceForHit::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_TraceForHit, CallFunc_BreakHitResult_bBlockingHit_1) == 0x0003F0, "Member 'BlueprintFunctionLibraryJP_C_TraceForHit::CallFunc_BreakHitResult_bBlockingHit_1' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_TraceForHit, CallFunc_BreakHitResult_bInitialOverlap_1) == 0x0003F1, "Member 'BlueprintFunctionLibraryJP_C_TraceForHit::CallFunc_BreakHitResult_bInitialOverlap_1' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_TraceForHit, CallFunc_BreakHitResult_Time_1) == 0x0003F4, "Member 'BlueprintFunctionLibraryJP_C_TraceForHit::CallFunc_BreakHitResult_Time_1' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_TraceForHit, CallFunc_BreakHitResult_Distance_1) == 0x0003F8, "Member 'BlueprintFunctionLibraryJP_C_TraceForHit::CallFunc_BreakHitResult_Distance_1' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_TraceForHit, CallFunc_BreakHitResult_Location_1) == 0x000400, "Member 'BlueprintFunctionLibraryJP_C_TraceForHit::CallFunc_BreakHitResult_Location_1' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_TraceForHit, CallFunc_BreakHitResult_ImpactPoint_1) == 0x000418, "Member 'BlueprintFunctionLibraryJP_C_TraceForHit::CallFunc_BreakHitResult_ImpactPoint_1' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_TraceForHit, CallFunc_BreakHitResult_Normal_1) == 0x000430, "Member 'BlueprintFunctionLibraryJP_C_TraceForHit::CallFunc_BreakHitResult_Normal_1' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_TraceForHit, CallFunc_BreakHitResult_ImpactNormal_1) == 0x000448, "Member 'BlueprintFunctionLibraryJP_C_TraceForHit::CallFunc_BreakHitResult_ImpactNormal_1' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_TraceForHit, CallFunc_BreakHitResult_PhysMat_1) == 0x000460, "Member 'BlueprintFunctionLibraryJP_C_TraceForHit::CallFunc_BreakHitResult_PhysMat_1' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_TraceForHit, CallFunc_BreakHitResult_HitActor_1) == 0x000468, "Member 'BlueprintFunctionLibraryJP_C_TraceForHit::CallFunc_BreakHitResult_HitActor_1' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_TraceForHit, CallFunc_BreakHitResult_HitComponent_1) == 0x000470, "Member 'BlueprintFunctionLibraryJP_C_TraceForHit::CallFunc_BreakHitResult_HitComponent_1' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_TraceForHit, CallFunc_BreakHitResult_HitBoneName_1) == 0x000478, "Member 'BlueprintFunctionLibraryJP_C_TraceForHit::CallFunc_BreakHitResult_HitBoneName_1' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_TraceForHit, CallFunc_BreakHitResult_BoneName_1) == 0x000480, "Member 'BlueprintFunctionLibraryJP_C_TraceForHit::CallFunc_BreakHitResult_BoneName_1' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_TraceForHit, CallFunc_BreakHitResult_HitItem_1) == 0x000488, "Member 'BlueprintFunctionLibraryJP_C_TraceForHit::CallFunc_BreakHitResult_HitItem_1' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_TraceForHit, CallFunc_BreakHitResult_ElementIndex_1) == 0x00048C, "Member 'BlueprintFunctionLibraryJP_C_TraceForHit::CallFunc_BreakHitResult_ElementIndex_1' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_TraceForHit, CallFunc_BreakHitResult_FaceIndex_1) == 0x000490, "Member 'BlueprintFunctionLibraryJP_C_TraceForHit::CallFunc_BreakHitResult_FaceIndex_1' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_TraceForHit, CallFunc_BreakHitResult_TraceStart_1) == 0x000498, "Member 'BlueprintFunctionLibraryJP_C_TraceForHit::CallFunc_BreakHitResult_TraceStart_1' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_TraceForHit, CallFunc_BreakHitResult_TraceEnd_1) == 0x0004B0, "Member 'BlueprintFunctionLibraryJP_C_TraceForHit::CallFunc_BreakHitResult_TraceEnd_1' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_TraceForHit, CallFunc_LineTraceSingle_OutHit) == 0x0004C8, "Member 'BlueprintFunctionLibraryJP_C_TraceForHit::CallFunc_LineTraceSingle_OutHit' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_TraceForHit, CallFunc_LineTraceSingle_ReturnValue) == 0x0005C0, "Member 'BlueprintFunctionLibraryJP_C_TraceForHit::CallFunc_LineTraceSingle_ReturnValue' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_TraceForHit, CallFunc_Array_Add_ReturnValue_1) == 0x0005C4, "Member 'BlueprintFunctionLibraryJP_C_TraceForHit::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_TraceForHit, CallFunc_DoesImplementInterface_ReturnValue) == 0x0005C8, "Member 'BlueprintFunctionLibraryJP_C_TraceForHit::CallFunc_DoesImplementInterface_ReturnValue' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_TraceForHit, CallFunc_Array_Contains_ReturnValue) == 0x0005C9, "Member 'BlueprintFunctionLibraryJP_C_TraceForHit::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_TraceForHit, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x0005CA, "Member 'BlueprintFunctionLibraryJP_C_TraceForHit::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_TraceForHit, CallFunc_BooleanOR_ReturnValue) == 0x0005CB, "Member 'BlueprintFunctionLibraryJP_C_TraceForHit::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

// Function BlueprintFunctionLibraryJP.BlueprintFunctionLibraryJP_C.TraceForHitWithInterface
// 0x0BC8 (0x0BC8 - 0x0000)
struct BlueprintFunctionLibraryJP_C_TraceForHitWithInterface final
{
public:
	double                                        Range;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Width;                                             // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Height;                                            // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        TraceHightOffset;                                  // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                TraceFromLocation;                                 // 0x0020(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               TraceRotation;                                     // 0x0038(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class AActor*                                 Owner;                                             // 0x0050(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TSubclassOf<class IInterface>                 Interface;                                         // 0x0058(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          Debug;                                             // 0x0060(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 OwningActorShield;                                 // 0x0068(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          IgnoreTeammates;                                   // 0x0070(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_71[0x7];                                       // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0078(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<struct FHitResult>                     AcceptedHits;                                      // 0x0080(0x0010)(Parm, OutParm, ContainsInstancedReference)
	bool                                          NoHits;                                            // 0x0090(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          OnlyHitWorldStatic;                                // 0x0091(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_92[0x6];                                       // 0x0092(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             InitialTraceHit;                                   // 0x0098(0x00F8)(Parm, OutParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FHitResult                             L_InitialTraceHit;                                 // 0x0190(0x00F8)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	TArray<class AActor*>                         IgnoredActors;                                     // 0x0288(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	TArray<class AActor*>                         NotifiedBlockedTraceActors;                        // 0x0298(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	bool                                          ContainsNonWorldStatic;                            // 0x02A8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2A9[0x7];                                      // 0x02A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FHitResult>                     L_Hits;                                            // 0x02B0(0x0010)(Edit, BlueprintVisible, ContainsInstancedReference)
	TArray<class AActor*>                         L_HitActors;                                       // 0x02C0(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	struct FLinearColor                           Temp_struct_Variable;                              // 0x02D0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsServer_ReturnValue;                     // 0x02E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2E1[0x7];                                      // 0x02E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         K2Node_MakeArray_Array;                            // 0x02E8(0x0010)(ReferenceParm)
	TArray<class ABP_ResidentCharacter_C*>        CallFunc_GetAllActorsOfClass_OutActors;            // 0x02F8(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0308(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_30C[0x4];                                      // 0x030C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_ResidentCharacter_C*                K2Node_DynamicCast_AsBP_Resident_Character;        // 0x0310(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0318(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_319[0x3];                                      // 0x0319(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           Temp_struct_Variable_1;                            // 0x031C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetTeamID_ReturnValue;                    // 0x032C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x032D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EDrawDebugTrace                               Temp_byte_Variable;                                // 0x032E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EDrawDebugTrace                               Temp_byte_Variable_1;                              // 0x032F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         Temp_object_Variable;                              // 0x0330(0x0010)(ConstParm, ReferenceParm)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0340(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0344(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0348(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x034C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34D[0x3];                                      // 0x034D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0350(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0354(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_355[0x3];                                      // 0x0355(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           K2Node_Select_Default;                             // 0x0358(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0368(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x036C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0370(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0374(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EDrawDebugTrace                               Temp_byte_Variable_2;                              // 0x0378(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_379[0x3];                                      // 0x0379(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x037C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_ResidentCharacter_C*                CallFunc_Array_Get_Item;                           // 0x0380(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetTeamID_ReturnValue_1;                  // 0x0388(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_389[0x3];                                      // 0x0389(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x038C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0390(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EDrawDebugTrace                               Temp_byte_Variable_3;                              // 0x0391(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x0392(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EDrawDebugTrace                               K2Node_Select_Default_1;                           // 0x0393(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EDrawDebugTrace                               K2Node_Select_Default_2;                           // 0x0394(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_395[0x3];                                      // 0x0395(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0398(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<EObjectTypeQuery>                      K2Node_MakeArray_Array_1;                          // 0x03B0(0x0010)(ConstParm, ReferenceParm)
	struct FVector                                CallFunc_MakeVector_ReturnValue_1;                 // 0x03C0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x03D8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x03F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x03F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3F2[0x6];                                      // 0x03F2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_Array_Get_Item_1;                         // 0x03F8(0x00F8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x04F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x04F4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x04F5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4F6[0x2];                                      // 0x04F6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x04F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x04FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x0500(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x0518(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x0530(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x0548(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0560(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0568(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0570(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0578(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_BoneName;                  // 0x0580(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0588(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x058C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x0590(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_594[0x4];                                      // 0x0594(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x0598(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x05B0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x05C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x05C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsWorldStatic_ReturnValue;                // 0x05CA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EDrawDebugTrace                               Temp_byte_Variable_4;                              // 0x05CB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue_1;         // 0x05CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x05CD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EDrawDebugTrace                               Temp_byte_Variable_5;                              // 0x05CE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5CF[0x1];                                      // 0x05CF(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetForwardVector_ReturnValue;             // 0x05D0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x05E8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_3;                              // 0x0600(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_601[0x7];                                      // 0x0601(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_1;           // 0x0608(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_SphereTraceSingle_OutHit;                 // 0x0620(0x00F8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_SphereTraceSingle_ReturnValue;            // 0x0718(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EDrawDebugTrace                               K2Node_Select_Default_3;                           // 0x0719(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_71A[0x2];                                      // 0x071A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x071C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit_1;            // 0x0720(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap_1;         // 0x0721(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_722[0x2];                                      // 0x0722(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time_1;                    // 0x0724(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance_1;                // 0x0728(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_72C[0x4];                                      // 0x072C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_Location_1;                // 0x0730(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint_1;             // 0x0748(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal_1;                  // 0x0760(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal_1;            // 0x0778(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat_1;                 // 0x0790(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor_1;                // 0x0798(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent_1;            // 0x07A0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName_1;             // 0x07A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_BoneName_1;                // 0x07B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem_1;                 // 0x07B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex_1;            // 0x07BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex_1;               // 0x07C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7C4[0x4];                                      // 0x07C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_TraceStart_1;              // 0x07C8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd_1;                // 0x07E0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FHitResult>                     CallFunc_BoxTraceMultiForObjects_OutHits;          // 0x07F8(0x0010)(ReferenceParm, ContainsInstancedReference)
	bool                                          CallFunc_BoxTraceMultiForObjects_ReturnValue;      // 0x0808(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_809[0x3];                                      // 0x0809(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x080C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_Array_Get_Item_2;                         // 0x0810(0x00F8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x0908(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit_2;            // 0x090C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap_2;         // 0x090D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_90E[0x2];                                      // 0x090E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time_2;                    // 0x0910(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance_2;                // 0x0914(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location_2;                // 0x0918(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint_2;             // 0x0930(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal_2;                  // 0x0948(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal_2;            // 0x0960(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat_2;                 // 0x0978(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor_2;                // 0x0980(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent_2;            // 0x0988(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName_2;             // 0x0990(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_BoneName_2;                // 0x0998(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem_2;                 // 0x09A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex_2;            // 0x09A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex_2;               // 0x09A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9AC[0x4];                                      // 0x09AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_TraceStart_2;              // 0x09B0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd_2;                // 0x09C8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x09E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9E1[0x7];                                      // 0x09E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_LineTraceSingle_OutHit;                   // 0x09E8(0x00F8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceSingle_ReturnValue;              // 0x0AE0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit_3;            // 0x0AE1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap_3;         // 0x0AE2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_AE3[0x1];                                      // 0x0AE3(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time_3;                    // 0x0AE4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance_3;                // 0x0AE8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_AEC[0x4];                                      // 0x0AEC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_Location_3;                // 0x0AF0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint_3;             // 0x0B08(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal_3;                  // 0x0B20(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal_3;            // 0x0B38(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat_3;                 // 0x0B50(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor_3;                // 0x0B58(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent_3;            // 0x0B60(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName_3;             // 0x0B68(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_BoneName_3;                // 0x0B70(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem_3;                 // 0x0B78(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex_3;            // 0x0B7C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex_3;               // 0x0B80(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B84[0x4];                                      // 0x0B84(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_TraceStart_3;              // 0x0B88(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd_3;                // 0x0BA0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsWorldStatic_ReturnValue_1;              // 0x0BB8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_DoesImplementInterface_ReturnValue;       // 0x0BB9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x0BBA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0BBB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x0BBC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_BBD[0x3];                                      // 0x0BBD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue_2;                  // 0x0BC0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_3;                  // 0x0BC4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BlueprintFunctionLibraryJP_C_TraceForHitWithInterface) == 0x000008, "Wrong alignment on BlueprintFunctionLibraryJP_C_TraceForHitWithInterface");
static_assert(sizeof(BlueprintFunctionLibraryJP_C_TraceForHitWithInterface) == 0x000BC8, "Wrong size on BlueprintFunctionLibraryJP_C_TraceForHitWithInterface");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_TraceForHitWithInterface, Range) == 0x000000, "Member 'BlueprintFunctionLibraryJP_C_TraceForHitWithInterface::Range' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_TraceForHitWithInterface, Width) == 0x000008, "Member 'BlueprintFunctionLibraryJP_C_TraceForHitWithInterface::Width' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_TraceForHitWithInterface, Height) == 0x000010, "Member 'BlueprintFunctionLibraryJP_C_TraceForHitWithInterface::Height' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_TraceForHitWithInterface, TraceHightOffset) == 0x000018, "Member 'BlueprintFunctionLibraryJP_C_TraceForHitWithInterface::TraceHightOffset' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_TraceForHitWithInterface, TraceFromLocation) == 0x000020, "Member 'BlueprintFunctionLibraryJP_C_TraceForHitWithInterface::TraceFromLocation' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_TraceForHitWithInterface, TraceRotation) == 0x000038, "Member 'BlueprintFunctionLibraryJP_C_TraceForHitWithInterface::TraceRotation' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_TraceForHitWithInterface, Owner) == 0x000050, "Member 'BlueprintFunctionLibraryJP_C_TraceForHitWithInterface::Owner' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_TraceForHitWithInterface, Interface) == 0x000058, "Member 'BlueprintFunctionLibraryJP_C_TraceForHitWithInterface::Interface' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_TraceForHitWithInterface, Debug) == 0x000060, "Member 'BlueprintFunctionLibraryJP_C_TraceForHitWithInterface::Debug' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_TraceForHitWithInterface, OwningActorShield) == 0x000068, "Member 'BlueprintFunctionLibraryJP_C_TraceForHitWithInterface::OwningActorShield' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_TraceForHitWithInterface, IgnoreTeammates) == 0x000070, "Member 'BlueprintFunctionLibraryJP_C_TraceForHitWithInterface::IgnoreTeammates' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_TraceForHitWithInterface, __WorldContext) == 0x000078, "Member 'BlueprintFunctionLibraryJP_C_TraceForHitWithInterface::__WorldContext' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_TraceForHitWithInterface, AcceptedHits) == 0x000080, "Member 'BlueprintFunctionLibraryJP_C_TraceForHitWithInterface::AcceptedHits' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_TraceForHitWithInterface, NoHits) == 0x000090, "Member 'BlueprintFunctionLibraryJP_C_TraceForHitWithInterface::NoHits' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_TraceForHitWithInterface, OnlyHitWorldStatic) == 0x000091, "Member 'BlueprintFunctionLibraryJP_C_TraceForHitWithInterface::OnlyHitWorldStatic' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_TraceForHitWithInterface, InitialTraceHit) == 0x000098, "Member 'BlueprintFunctionLibraryJP_C_TraceForHitWithInterface::InitialTraceHit' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_TraceForHitWithInterface, L_InitialTraceHit) == 0x000190, "Member 'BlueprintFunctionLibraryJP_C_TraceForHitWithInterface::L_InitialTraceHit' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_TraceForHitWithInterface, IgnoredActors) == 0x000288, "Member 'BlueprintFunctionLibraryJP_C_TraceForHitWithInterface::IgnoredActors' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_TraceForHitWithInterface, NotifiedBlockedTraceActors) == 0x000298, "Member 'BlueprintFunctionLibraryJP_C_TraceForHitWithInterface::NotifiedBlockedTraceActors' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_TraceForHitWithInterface, ContainsNonWorldStatic) == 0x0002A8, "Member 'BlueprintFunctionLibraryJP_C_TraceForHitWithInterface::ContainsNonWorldStatic' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_TraceForHitWithInterface, L_Hits) == 0x0002B0, "Member 'BlueprintFunctionLibraryJP_C_TraceForHitWithInterface::L_Hits' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_TraceForHitWithInterface, L_HitActors) == 0x0002C0, "Member 'BlueprintFunctionLibraryJP_C_TraceForHitWithInterface::L_HitActors' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_TraceForHitWithInterface, Temp_struct_Variable) == 0x0002D0, "Member 'BlueprintFunctionLibraryJP_C_TraceForHitWithInterface::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_TraceForHitWithInterface, CallFunc_IsServer_ReturnValue) == 0x0002E0, "Member 'BlueprintFunctionLibraryJP_C_TraceForHitWithInterface::CallFunc_IsServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_TraceForHitWithInterface, K2Node_MakeArray_Array) == 0x0002E8, "Member 'BlueprintFunctionLibraryJP_C_TraceForHitWithInterface::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_TraceForHitWithInterface, CallFunc_GetAllActorsOfClass_OutActors) == 0x0002F8, "Member 'BlueprintFunctionLibraryJP_C_TraceForHitWithInterface::CallFunc_GetAllActorsOfClass_OutActors' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_TraceForHitWithInterface, CallFunc_Array_Length_ReturnValue) == 0x000308, "Member 'BlueprintFunctionLibraryJP_C_TraceForHitWithInterface::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_TraceForHitWithInterface, K2Node_DynamicCast_AsBP_Resident_Character) == 0x000310, "Member 'BlueprintFunctionLibraryJP_C_TraceForHitWithInterface::K2Node_DynamicCast_AsBP_Resident_Character' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_TraceForHitWithInterface, K2Node_DynamicCast_bSuccess) == 0x000318, "Member 'BlueprintFunctionLibraryJP_C_TraceForHitWithInterface::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_TraceForHitWithInterface, Temp_struct_Variable_1) == 0x00031C, "Member 'BlueprintFunctionLibraryJP_C_TraceForHitWithInterface::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_TraceForHitWithInterface, CallFunc_GetTeamID_ReturnValue) == 0x00032C, "Member 'BlueprintFunctionLibraryJP_C_TraceForHitWithInterface::CallFunc_GetTeamID_ReturnValue' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_TraceForHitWithInterface, Temp_bool_Variable) == 0x00032D, "Member 'BlueprintFunctionLibraryJP_C_TraceForHitWithInterface::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_TraceForHitWithInterface, Temp_byte_Variable) == 0x00032E, "Member 'BlueprintFunctionLibraryJP_C_TraceForHitWithInterface::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_TraceForHitWithInterface, Temp_byte_Variable_1) == 0x00032F, "Member 'BlueprintFunctionLibraryJP_C_TraceForHitWithInterface::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_TraceForHitWithInterface, Temp_object_Variable) == 0x000330, "Member 'BlueprintFunctionLibraryJP_C_TraceForHitWithInterface::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_TraceForHitWithInterface, Temp_int_Array_Index_Variable) == 0x000340, "Member 'BlueprintFunctionLibraryJP_C_TraceForHitWithInterface::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_TraceForHitWithInterface, Temp_int_Loop_Counter_Variable) == 0x000344, "Member 'BlueprintFunctionLibraryJP_C_TraceForHitWithInterface::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_TraceForHitWithInterface, CallFunc_Add_IntInt_ReturnValue) == 0x000348, "Member 'BlueprintFunctionLibraryJP_C_TraceForHitWithInterface::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_TraceForHitWithInterface, Temp_bool_Variable_1) == 0x00034C, "Member 'BlueprintFunctionLibraryJP_C_TraceForHitWithInterface::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_TraceForHitWithInterface, Temp_int_Loop_Counter_Variable_1) == 0x000350, "Member 'BlueprintFunctionLibraryJP_C_TraceForHitWithInterface::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_TraceForHitWithInterface, CallFunc_Less_IntInt_ReturnValue) == 0x000354, "Member 'BlueprintFunctionLibraryJP_C_TraceForHitWithInterface::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_TraceForHitWithInterface, K2Node_Select_Default) == 0x000358, "Member 'BlueprintFunctionLibraryJP_C_TraceForHitWithInterface::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_TraceForHitWithInterface, CallFunc_Add_IntInt_ReturnValue_1) == 0x000368, "Member 'BlueprintFunctionLibraryJP_C_TraceForHitWithInterface::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_TraceForHitWithInterface, Temp_int_Loop_Counter_Variable_2) == 0x00036C, "Member 'BlueprintFunctionLibraryJP_C_TraceForHitWithInterface::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_TraceForHitWithInterface, CallFunc_Add_IntInt_ReturnValue_2) == 0x000370, "Member 'BlueprintFunctionLibraryJP_C_TraceForHitWithInterface::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_TraceForHitWithInterface, Temp_int_Array_Index_Variable_1) == 0x000374, "Member 'BlueprintFunctionLibraryJP_C_TraceForHitWithInterface::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_TraceForHitWithInterface, Temp_byte_Variable_2) == 0x000378, "Member 'BlueprintFunctionLibraryJP_C_TraceForHitWithInterface::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_TraceForHitWithInterface, Temp_int_Array_Index_Variable_2) == 0x00037C, "Member 'BlueprintFunctionLibraryJP_C_TraceForHitWithInterface::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_TraceForHitWithInterface, CallFunc_Array_Get_Item) == 0x000380, "Member 'BlueprintFunctionLibraryJP_C_TraceForHitWithInterface::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_TraceForHitWithInterface, CallFunc_GetTeamID_ReturnValue_1) == 0x000388, "Member 'BlueprintFunctionLibraryJP_C_TraceForHitWithInterface::CallFunc_GetTeamID_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_TraceForHitWithInterface, CallFunc_Array_AddUnique_ReturnValue) == 0x00038C, "Member 'BlueprintFunctionLibraryJP_C_TraceForHitWithInterface::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_TraceForHitWithInterface, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000390, "Member 'BlueprintFunctionLibraryJP_C_TraceForHitWithInterface::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_TraceForHitWithInterface, Temp_byte_Variable_3) == 0x000391, "Member 'BlueprintFunctionLibraryJP_C_TraceForHitWithInterface::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_TraceForHitWithInterface, Temp_bool_Variable_2) == 0x000392, "Member 'BlueprintFunctionLibraryJP_C_TraceForHitWithInterface::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_TraceForHitWithInterface, K2Node_Select_Default_1) == 0x000393, "Member 'BlueprintFunctionLibraryJP_C_TraceForHitWithInterface::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_TraceForHitWithInterface, K2Node_Select_Default_2) == 0x000394, "Member 'BlueprintFunctionLibraryJP_C_TraceForHitWithInterface::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_TraceForHitWithInterface, CallFunc_MakeVector_ReturnValue) == 0x000398, "Member 'BlueprintFunctionLibraryJP_C_TraceForHitWithInterface::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_TraceForHitWithInterface, K2Node_MakeArray_Array_1) == 0x0003B0, "Member 'BlueprintFunctionLibraryJP_C_TraceForHitWithInterface::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_TraceForHitWithInterface, CallFunc_MakeVector_ReturnValue_1) == 0x0003C0, "Member 'BlueprintFunctionLibraryJP_C_TraceForHitWithInterface::CallFunc_MakeVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_TraceForHitWithInterface, CallFunc_Add_VectorVector_ReturnValue) == 0x0003D8, "Member 'BlueprintFunctionLibraryJP_C_TraceForHitWithInterface::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_TraceForHitWithInterface, CallFunc_Not_PreBool_ReturnValue) == 0x0003F0, "Member 'BlueprintFunctionLibraryJP_C_TraceForHitWithInterface::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_TraceForHitWithInterface, CallFunc_Array_IsValidIndex_ReturnValue) == 0x0003F1, "Member 'BlueprintFunctionLibraryJP_C_TraceForHitWithInterface::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_TraceForHitWithInterface, CallFunc_Array_Get_Item_1) == 0x0003F8, "Member 'BlueprintFunctionLibraryJP_C_TraceForHitWithInterface::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_TraceForHitWithInterface, CallFunc_Array_Length_ReturnValue_1) == 0x0004F0, "Member 'BlueprintFunctionLibraryJP_C_TraceForHitWithInterface::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_TraceForHitWithInterface, CallFunc_BreakHitResult_bBlockingHit) == 0x0004F4, "Member 'BlueprintFunctionLibraryJP_C_TraceForHitWithInterface::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_TraceForHitWithInterface, CallFunc_BreakHitResult_bInitialOverlap) == 0x0004F5, "Member 'BlueprintFunctionLibraryJP_C_TraceForHitWithInterface::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_TraceForHitWithInterface, CallFunc_BreakHitResult_Time) == 0x0004F8, "Member 'BlueprintFunctionLibraryJP_C_TraceForHitWithInterface::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_TraceForHitWithInterface, CallFunc_BreakHitResult_Distance) == 0x0004FC, "Member 'BlueprintFunctionLibraryJP_C_TraceForHitWithInterface::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_TraceForHitWithInterface, CallFunc_BreakHitResult_Location) == 0x000500, "Member 'BlueprintFunctionLibraryJP_C_TraceForHitWithInterface::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_TraceForHitWithInterface, CallFunc_BreakHitResult_ImpactPoint) == 0x000518, "Member 'BlueprintFunctionLibraryJP_C_TraceForHitWithInterface::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_TraceForHitWithInterface, CallFunc_BreakHitResult_Normal) == 0x000530, "Member 'BlueprintFunctionLibraryJP_C_TraceForHitWithInterface::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_TraceForHitWithInterface, CallFunc_BreakHitResult_ImpactNormal) == 0x000548, "Member 'BlueprintFunctionLibraryJP_C_TraceForHitWithInterface::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_TraceForHitWithInterface, CallFunc_BreakHitResult_PhysMat) == 0x000560, "Member 'BlueprintFunctionLibraryJP_C_TraceForHitWithInterface::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_TraceForHitWithInterface, CallFunc_BreakHitResult_HitActor) == 0x000568, "Member 'BlueprintFunctionLibraryJP_C_TraceForHitWithInterface::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_TraceForHitWithInterface, CallFunc_BreakHitResult_HitComponent) == 0x000570, "Member 'BlueprintFunctionLibraryJP_C_TraceForHitWithInterface::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_TraceForHitWithInterface, CallFunc_BreakHitResult_HitBoneName) == 0x000578, "Member 'BlueprintFunctionLibraryJP_C_TraceForHitWithInterface::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_TraceForHitWithInterface, CallFunc_BreakHitResult_BoneName) == 0x000580, "Member 'BlueprintFunctionLibraryJP_C_TraceForHitWithInterface::CallFunc_BreakHitResult_BoneName' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_TraceForHitWithInterface, CallFunc_BreakHitResult_HitItem) == 0x000588, "Member 'BlueprintFunctionLibraryJP_C_TraceForHitWithInterface::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_TraceForHitWithInterface, CallFunc_BreakHitResult_ElementIndex) == 0x00058C, "Member 'BlueprintFunctionLibraryJP_C_TraceForHitWithInterface::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_TraceForHitWithInterface, CallFunc_BreakHitResult_FaceIndex) == 0x000590, "Member 'BlueprintFunctionLibraryJP_C_TraceForHitWithInterface::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_TraceForHitWithInterface, CallFunc_BreakHitResult_TraceStart) == 0x000598, "Member 'BlueprintFunctionLibraryJP_C_TraceForHitWithInterface::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_TraceForHitWithInterface, CallFunc_BreakHitResult_TraceEnd) == 0x0005B0, "Member 'BlueprintFunctionLibraryJP_C_TraceForHitWithInterface::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_TraceForHitWithInterface, CallFunc_Less_IntInt_ReturnValue_1) == 0x0005C8, "Member 'BlueprintFunctionLibraryJP_C_TraceForHitWithInterface::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_TraceForHitWithInterface, CallFunc_IsValid_ReturnValue) == 0x0005C9, "Member 'BlueprintFunctionLibraryJP_C_TraceForHitWithInterface::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_TraceForHitWithInterface, CallFunc_IsWorldStatic_ReturnValue) == 0x0005CA, "Member 'BlueprintFunctionLibraryJP_C_TraceForHitWithInterface::CallFunc_IsWorldStatic_ReturnValue' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_TraceForHitWithInterface, Temp_byte_Variable_4) == 0x0005CB, "Member 'BlueprintFunctionLibraryJP_C_TraceForHitWithInterface::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_TraceForHitWithInterface, CallFunc_Array_IsValidIndex_ReturnValue_1) == 0x0005CC, "Member 'BlueprintFunctionLibraryJP_C_TraceForHitWithInterface::CallFunc_Array_IsValidIndex_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_TraceForHitWithInterface, CallFunc_Not_PreBool_ReturnValue_1) == 0x0005CD, "Member 'BlueprintFunctionLibraryJP_C_TraceForHitWithInterface::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_TraceForHitWithInterface, Temp_byte_Variable_5) == 0x0005CE, "Member 'BlueprintFunctionLibraryJP_C_TraceForHitWithInterface::Temp_byte_Variable_5' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_TraceForHitWithInterface, CallFunc_GetForwardVector_ReturnValue) == 0x0005D0, "Member 'BlueprintFunctionLibraryJP_C_TraceForHitWithInterface::CallFunc_GetForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_TraceForHitWithInterface, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x0005E8, "Member 'BlueprintFunctionLibraryJP_C_TraceForHitWithInterface::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_TraceForHitWithInterface, Temp_bool_Variable_3) == 0x000600, "Member 'BlueprintFunctionLibraryJP_C_TraceForHitWithInterface::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_TraceForHitWithInterface, CallFunc_Add_VectorVector_ReturnValue_1) == 0x000608, "Member 'BlueprintFunctionLibraryJP_C_TraceForHitWithInterface::CallFunc_Add_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_TraceForHitWithInterface, CallFunc_SphereTraceSingle_OutHit) == 0x000620, "Member 'BlueprintFunctionLibraryJP_C_TraceForHitWithInterface::CallFunc_SphereTraceSingle_OutHit' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_TraceForHitWithInterface, CallFunc_SphereTraceSingle_ReturnValue) == 0x000718, "Member 'BlueprintFunctionLibraryJP_C_TraceForHitWithInterface::CallFunc_SphereTraceSingle_ReturnValue' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_TraceForHitWithInterface, K2Node_Select_Default_3) == 0x000719, "Member 'BlueprintFunctionLibraryJP_C_TraceForHitWithInterface::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_TraceForHitWithInterface, CallFunc_Array_Add_ReturnValue) == 0x00071C, "Member 'BlueprintFunctionLibraryJP_C_TraceForHitWithInterface::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_TraceForHitWithInterface, CallFunc_BreakHitResult_bBlockingHit_1) == 0x000720, "Member 'BlueprintFunctionLibraryJP_C_TraceForHitWithInterface::CallFunc_BreakHitResult_bBlockingHit_1' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_TraceForHitWithInterface, CallFunc_BreakHitResult_bInitialOverlap_1) == 0x000721, "Member 'BlueprintFunctionLibraryJP_C_TraceForHitWithInterface::CallFunc_BreakHitResult_bInitialOverlap_1' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_TraceForHitWithInterface, CallFunc_BreakHitResult_Time_1) == 0x000724, "Member 'BlueprintFunctionLibraryJP_C_TraceForHitWithInterface::CallFunc_BreakHitResult_Time_1' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_TraceForHitWithInterface, CallFunc_BreakHitResult_Distance_1) == 0x000728, "Member 'BlueprintFunctionLibraryJP_C_TraceForHitWithInterface::CallFunc_BreakHitResult_Distance_1' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_TraceForHitWithInterface, CallFunc_BreakHitResult_Location_1) == 0x000730, "Member 'BlueprintFunctionLibraryJP_C_TraceForHitWithInterface::CallFunc_BreakHitResult_Location_1' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_TraceForHitWithInterface, CallFunc_BreakHitResult_ImpactPoint_1) == 0x000748, "Member 'BlueprintFunctionLibraryJP_C_TraceForHitWithInterface::CallFunc_BreakHitResult_ImpactPoint_1' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_TraceForHitWithInterface, CallFunc_BreakHitResult_Normal_1) == 0x000760, "Member 'BlueprintFunctionLibraryJP_C_TraceForHitWithInterface::CallFunc_BreakHitResult_Normal_1' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_TraceForHitWithInterface, CallFunc_BreakHitResult_ImpactNormal_1) == 0x000778, "Member 'BlueprintFunctionLibraryJP_C_TraceForHitWithInterface::CallFunc_BreakHitResult_ImpactNormal_1' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_TraceForHitWithInterface, CallFunc_BreakHitResult_PhysMat_1) == 0x000790, "Member 'BlueprintFunctionLibraryJP_C_TraceForHitWithInterface::CallFunc_BreakHitResult_PhysMat_1' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_TraceForHitWithInterface, CallFunc_BreakHitResult_HitActor_1) == 0x000798, "Member 'BlueprintFunctionLibraryJP_C_TraceForHitWithInterface::CallFunc_BreakHitResult_HitActor_1' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_TraceForHitWithInterface, CallFunc_BreakHitResult_HitComponent_1) == 0x0007A0, "Member 'BlueprintFunctionLibraryJP_C_TraceForHitWithInterface::CallFunc_BreakHitResult_HitComponent_1' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_TraceForHitWithInterface, CallFunc_BreakHitResult_HitBoneName_1) == 0x0007A8, "Member 'BlueprintFunctionLibraryJP_C_TraceForHitWithInterface::CallFunc_BreakHitResult_HitBoneName_1' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_TraceForHitWithInterface, CallFunc_BreakHitResult_BoneName_1) == 0x0007B0, "Member 'BlueprintFunctionLibraryJP_C_TraceForHitWithInterface::CallFunc_BreakHitResult_BoneName_1' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_TraceForHitWithInterface, CallFunc_BreakHitResult_HitItem_1) == 0x0007B8, "Member 'BlueprintFunctionLibraryJP_C_TraceForHitWithInterface::CallFunc_BreakHitResult_HitItem_1' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_TraceForHitWithInterface, CallFunc_BreakHitResult_ElementIndex_1) == 0x0007BC, "Member 'BlueprintFunctionLibraryJP_C_TraceForHitWithInterface::CallFunc_BreakHitResult_ElementIndex_1' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_TraceForHitWithInterface, CallFunc_BreakHitResult_FaceIndex_1) == 0x0007C0, "Member 'BlueprintFunctionLibraryJP_C_TraceForHitWithInterface::CallFunc_BreakHitResult_FaceIndex_1' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_TraceForHitWithInterface, CallFunc_BreakHitResult_TraceStart_1) == 0x0007C8, "Member 'BlueprintFunctionLibraryJP_C_TraceForHitWithInterface::CallFunc_BreakHitResult_TraceStart_1' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_TraceForHitWithInterface, CallFunc_BreakHitResult_TraceEnd_1) == 0x0007E0, "Member 'BlueprintFunctionLibraryJP_C_TraceForHitWithInterface::CallFunc_BreakHitResult_TraceEnd_1' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_TraceForHitWithInterface, CallFunc_BoxTraceMultiForObjects_OutHits) == 0x0007F8, "Member 'BlueprintFunctionLibraryJP_C_TraceForHitWithInterface::CallFunc_BoxTraceMultiForObjects_OutHits' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_TraceForHitWithInterface, CallFunc_BoxTraceMultiForObjects_ReturnValue) == 0x000808, "Member 'BlueprintFunctionLibraryJP_C_TraceForHitWithInterface::CallFunc_BoxTraceMultiForObjects_ReturnValue' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_TraceForHitWithInterface, CallFunc_Array_Add_ReturnValue_1) == 0x00080C, "Member 'BlueprintFunctionLibraryJP_C_TraceForHitWithInterface::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_TraceForHitWithInterface, CallFunc_Array_Get_Item_2) == 0x000810, "Member 'BlueprintFunctionLibraryJP_C_TraceForHitWithInterface::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_TraceForHitWithInterface, CallFunc_Array_Length_ReturnValue_2) == 0x000908, "Member 'BlueprintFunctionLibraryJP_C_TraceForHitWithInterface::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_TraceForHitWithInterface, CallFunc_BreakHitResult_bBlockingHit_2) == 0x00090C, "Member 'BlueprintFunctionLibraryJP_C_TraceForHitWithInterface::CallFunc_BreakHitResult_bBlockingHit_2' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_TraceForHitWithInterface, CallFunc_BreakHitResult_bInitialOverlap_2) == 0x00090D, "Member 'BlueprintFunctionLibraryJP_C_TraceForHitWithInterface::CallFunc_BreakHitResult_bInitialOverlap_2' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_TraceForHitWithInterface, CallFunc_BreakHitResult_Time_2) == 0x000910, "Member 'BlueprintFunctionLibraryJP_C_TraceForHitWithInterface::CallFunc_BreakHitResult_Time_2' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_TraceForHitWithInterface, CallFunc_BreakHitResult_Distance_2) == 0x000914, "Member 'BlueprintFunctionLibraryJP_C_TraceForHitWithInterface::CallFunc_BreakHitResult_Distance_2' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_TraceForHitWithInterface, CallFunc_BreakHitResult_Location_2) == 0x000918, "Member 'BlueprintFunctionLibraryJP_C_TraceForHitWithInterface::CallFunc_BreakHitResult_Location_2' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_TraceForHitWithInterface, CallFunc_BreakHitResult_ImpactPoint_2) == 0x000930, "Member 'BlueprintFunctionLibraryJP_C_TraceForHitWithInterface::CallFunc_BreakHitResult_ImpactPoint_2' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_TraceForHitWithInterface, CallFunc_BreakHitResult_Normal_2) == 0x000948, "Member 'BlueprintFunctionLibraryJP_C_TraceForHitWithInterface::CallFunc_BreakHitResult_Normal_2' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_TraceForHitWithInterface, CallFunc_BreakHitResult_ImpactNormal_2) == 0x000960, "Member 'BlueprintFunctionLibraryJP_C_TraceForHitWithInterface::CallFunc_BreakHitResult_ImpactNormal_2' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_TraceForHitWithInterface, CallFunc_BreakHitResult_PhysMat_2) == 0x000978, "Member 'BlueprintFunctionLibraryJP_C_TraceForHitWithInterface::CallFunc_BreakHitResult_PhysMat_2' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_TraceForHitWithInterface, CallFunc_BreakHitResult_HitActor_2) == 0x000980, "Member 'BlueprintFunctionLibraryJP_C_TraceForHitWithInterface::CallFunc_BreakHitResult_HitActor_2' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_TraceForHitWithInterface, CallFunc_BreakHitResult_HitComponent_2) == 0x000988, "Member 'BlueprintFunctionLibraryJP_C_TraceForHitWithInterface::CallFunc_BreakHitResult_HitComponent_2' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_TraceForHitWithInterface, CallFunc_BreakHitResult_HitBoneName_2) == 0x000990, "Member 'BlueprintFunctionLibraryJP_C_TraceForHitWithInterface::CallFunc_BreakHitResult_HitBoneName_2' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_TraceForHitWithInterface, CallFunc_BreakHitResult_BoneName_2) == 0x000998, "Member 'BlueprintFunctionLibraryJP_C_TraceForHitWithInterface::CallFunc_BreakHitResult_BoneName_2' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_TraceForHitWithInterface, CallFunc_BreakHitResult_HitItem_2) == 0x0009A0, "Member 'BlueprintFunctionLibraryJP_C_TraceForHitWithInterface::CallFunc_BreakHitResult_HitItem_2' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_TraceForHitWithInterface, CallFunc_BreakHitResult_ElementIndex_2) == 0x0009A4, "Member 'BlueprintFunctionLibraryJP_C_TraceForHitWithInterface::CallFunc_BreakHitResult_ElementIndex_2' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_TraceForHitWithInterface, CallFunc_BreakHitResult_FaceIndex_2) == 0x0009A8, "Member 'BlueprintFunctionLibraryJP_C_TraceForHitWithInterface::CallFunc_BreakHitResult_FaceIndex_2' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_TraceForHitWithInterface, CallFunc_BreakHitResult_TraceStart_2) == 0x0009B0, "Member 'BlueprintFunctionLibraryJP_C_TraceForHitWithInterface::CallFunc_BreakHitResult_TraceStart_2' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_TraceForHitWithInterface, CallFunc_BreakHitResult_TraceEnd_2) == 0x0009C8, "Member 'BlueprintFunctionLibraryJP_C_TraceForHitWithInterface::CallFunc_BreakHitResult_TraceEnd_2' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_TraceForHitWithInterface, CallFunc_Less_IntInt_ReturnValue_2) == 0x0009E0, "Member 'BlueprintFunctionLibraryJP_C_TraceForHitWithInterface::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_TraceForHitWithInterface, CallFunc_LineTraceSingle_OutHit) == 0x0009E8, "Member 'BlueprintFunctionLibraryJP_C_TraceForHitWithInterface::CallFunc_LineTraceSingle_OutHit' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_TraceForHitWithInterface, CallFunc_LineTraceSingle_ReturnValue) == 0x000AE0, "Member 'BlueprintFunctionLibraryJP_C_TraceForHitWithInterface::CallFunc_LineTraceSingle_ReturnValue' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_TraceForHitWithInterface, CallFunc_BreakHitResult_bBlockingHit_3) == 0x000AE1, "Member 'BlueprintFunctionLibraryJP_C_TraceForHitWithInterface::CallFunc_BreakHitResult_bBlockingHit_3' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_TraceForHitWithInterface, CallFunc_BreakHitResult_bInitialOverlap_3) == 0x000AE2, "Member 'BlueprintFunctionLibraryJP_C_TraceForHitWithInterface::CallFunc_BreakHitResult_bInitialOverlap_3' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_TraceForHitWithInterface, CallFunc_BreakHitResult_Time_3) == 0x000AE4, "Member 'BlueprintFunctionLibraryJP_C_TraceForHitWithInterface::CallFunc_BreakHitResult_Time_3' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_TraceForHitWithInterface, CallFunc_BreakHitResult_Distance_3) == 0x000AE8, "Member 'BlueprintFunctionLibraryJP_C_TraceForHitWithInterface::CallFunc_BreakHitResult_Distance_3' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_TraceForHitWithInterface, CallFunc_BreakHitResult_Location_3) == 0x000AF0, "Member 'BlueprintFunctionLibraryJP_C_TraceForHitWithInterface::CallFunc_BreakHitResult_Location_3' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_TraceForHitWithInterface, CallFunc_BreakHitResult_ImpactPoint_3) == 0x000B08, "Member 'BlueprintFunctionLibraryJP_C_TraceForHitWithInterface::CallFunc_BreakHitResult_ImpactPoint_3' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_TraceForHitWithInterface, CallFunc_BreakHitResult_Normal_3) == 0x000B20, "Member 'BlueprintFunctionLibraryJP_C_TraceForHitWithInterface::CallFunc_BreakHitResult_Normal_3' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_TraceForHitWithInterface, CallFunc_BreakHitResult_ImpactNormal_3) == 0x000B38, "Member 'BlueprintFunctionLibraryJP_C_TraceForHitWithInterface::CallFunc_BreakHitResult_ImpactNormal_3' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_TraceForHitWithInterface, CallFunc_BreakHitResult_PhysMat_3) == 0x000B50, "Member 'BlueprintFunctionLibraryJP_C_TraceForHitWithInterface::CallFunc_BreakHitResult_PhysMat_3' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_TraceForHitWithInterface, CallFunc_BreakHitResult_HitActor_3) == 0x000B58, "Member 'BlueprintFunctionLibraryJP_C_TraceForHitWithInterface::CallFunc_BreakHitResult_HitActor_3' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_TraceForHitWithInterface, CallFunc_BreakHitResult_HitComponent_3) == 0x000B60, "Member 'BlueprintFunctionLibraryJP_C_TraceForHitWithInterface::CallFunc_BreakHitResult_HitComponent_3' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_TraceForHitWithInterface, CallFunc_BreakHitResult_HitBoneName_3) == 0x000B68, "Member 'BlueprintFunctionLibraryJP_C_TraceForHitWithInterface::CallFunc_BreakHitResult_HitBoneName_3' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_TraceForHitWithInterface, CallFunc_BreakHitResult_BoneName_3) == 0x000B70, "Member 'BlueprintFunctionLibraryJP_C_TraceForHitWithInterface::CallFunc_BreakHitResult_BoneName_3' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_TraceForHitWithInterface, CallFunc_BreakHitResult_HitItem_3) == 0x000B78, "Member 'BlueprintFunctionLibraryJP_C_TraceForHitWithInterface::CallFunc_BreakHitResult_HitItem_3' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_TraceForHitWithInterface, CallFunc_BreakHitResult_ElementIndex_3) == 0x000B7C, "Member 'BlueprintFunctionLibraryJP_C_TraceForHitWithInterface::CallFunc_BreakHitResult_ElementIndex_3' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_TraceForHitWithInterface, CallFunc_BreakHitResult_FaceIndex_3) == 0x000B80, "Member 'BlueprintFunctionLibraryJP_C_TraceForHitWithInterface::CallFunc_BreakHitResult_FaceIndex_3' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_TraceForHitWithInterface, CallFunc_BreakHitResult_TraceStart_3) == 0x000B88, "Member 'BlueprintFunctionLibraryJP_C_TraceForHitWithInterface::CallFunc_BreakHitResult_TraceStart_3' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_TraceForHitWithInterface, CallFunc_BreakHitResult_TraceEnd_3) == 0x000BA0, "Member 'BlueprintFunctionLibraryJP_C_TraceForHitWithInterface::CallFunc_BreakHitResult_TraceEnd_3' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_TraceForHitWithInterface, CallFunc_IsWorldStatic_ReturnValue_1) == 0x000BB8, "Member 'BlueprintFunctionLibraryJP_C_TraceForHitWithInterface::CallFunc_IsWorldStatic_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_TraceForHitWithInterface, CallFunc_DoesImplementInterface_ReturnValue) == 0x000BB9, "Member 'BlueprintFunctionLibraryJP_C_TraceForHitWithInterface::CallFunc_DoesImplementInterface_ReturnValue' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_TraceForHitWithInterface, CallFunc_Array_Contains_ReturnValue) == 0x000BBA, "Member 'BlueprintFunctionLibraryJP_C_TraceForHitWithInterface::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_TraceForHitWithInterface, CallFunc_BooleanOR_ReturnValue) == 0x000BBB, "Member 'BlueprintFunctionLibraryJP_C_TraceForHitWithInterface::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_TraceForHitWithInterface, CallFunc_Not_PreBool_ReturnValue_2) == 0x000BBC, "Member 'BlueprintFunctionLibraryJP_C_TraceForHitWithInterface::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_TraceForHitWithInterface, CallFunc_Array_Add_ReturnValue_2) == 0x000BC0, "Member 'BlueprintFunctionLibraryJP_C_TraceForHitWithInterface::CallFunc_Array_Add_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_TraceForHitWithInterface, CallFunc_Array_Add_ReturnValue_3) == 0x000BC4, "Member 'BlueprintFunctionLibraryJP_C_TraceForHitWithInterface::CallFunc_Array_Add_ReturnValue_3' has a wrong offset!");

// Function BlueprintFunctionLibraryJP.BlueprintFunctionLibraryJP_C.TriggerOverlaps
// 0x0080 (0x0080 - 0x0000)
struct BlueprintFunctionLibraryJP_C_TriggerOverlaps final
{
public:
	class UPrimitiveComponent*                    ComponentToCheckOverlaps;                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	ECollisionEnabled                             CollisionType;                                     // 0x0010(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                LinearVelocity;                                    // 0x0018(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                AngularVelocity;                                   // 0x0030(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsSimulating;                                      // 0x0048(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsSimulatingPhysics_ReturnValue;          // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECollisionEnabled                             CallFunc_GetCollisionEnabled_ReturnValue;          // 0x004A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4B[0x5];                                       // 0x004B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetPhysicsLinearVelocity_ReturnValue;     // 0x0050(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetPhysicsAngularVelocityInDegrees_ReturnValue; // 0x0068(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BlueprintFunctionLibraryJP_C_TriggerOverlaps) == 0x000008, "Wrong alignment on BlueprintFunctionLibraryJP_C_TriggerOverlaps");
static_assert(sizeof(BlueprintFunctionLibraryJP_C_TriggerOverlaps) == 0x000080, "Wrong size on BlueprintFunctionLibraryJP_C_TriggerOverlaps");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_TriggerOverlaps, ComponentToCheckOverlaps) == 0x000000, "Member 'BlueprintFunctionLibraryJP_C_TriggerOverlaps::ComponentToCheckOverlaps' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_TriggerOverlaps, __WorldContext) == 0x000008, "Member 'BlueprintFunctionLibraryJP_C_TriggerOverlaps::__WorldContext' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_TriggerOverlaps, CollisionType) == 0x000010, "Member 'BlueprintFunctionLibraryJP_C_TriggerOverlaps::CollisionType' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_TriggerOverlaps, LinearVelocity) == 0x000018, "Member 'BlueprintFunctionLibraryJP_C_TriggerOverlaps::LinearVelocity' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_TriggerOverlaps, AngularVelocity) == 0x000030, "Member 'BlueprintFunctionLibraryJP_C_TriggerOverlaps::AngularVelocity' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_TriggerOverlaps, IsSimulating) == 0x000048, "Member 'BlueprintFunctionLibraryJP_C_TriggerOverlaps::IsSimulating' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_TriggerOverlaps, CallFunc_IsSimulatingPhysics_ReturnValue) == 0x000049, "Member 'BlueprintFunctionLibraryJP_C_TriggerOverlaps::CallFunc_IsSimulatingPhysics_ReturnValue' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_TriggerOverlaps, CallFunc_GetCollisionEnabled_ReturnValue) == 0x00004A, "Member 'BlueprintFunctionLibraryJP_C_TriggerOverlaps::CallFunc_GetCollisionEnabled_ReturnValue' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_TriggerOverlaps, CallFunc_GetPhysicsLinearVelocity_ReturnValue) == 0x000050, "Member 'BlueprintFunctionLibraryJP_C_TriggerOverlaps::CallFunc_GetPhysicsLinearVelocity_ReturnValue' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_TriggerOverlaps, CallFunc_GetPhysicsAngularVelocityInDegrees_ReturnValue) == 0x000068, "Member 'BlueprintFunctionLibraryJP_C_TriggerOverlaps::CallFunc_GetPhysicsAngularVelocityInDegrees_ReturnValue' has a wrong offset!");

// Function BlueprintFunctionLibraryJP.BlueprintFunctionLibraryJP_C.WrapValue
// 0x0028 (0x0028 - 0x0000)
struct BlueprintFunctionLibraryJP_C_WrapValue final
{
public:
	int32                                         Value;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Min;                                               // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Max;                                               // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         ReturnValue;                                       // 0x0018(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x001D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E[0x2];                                       // 0x001E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_SelectInt_ReturnValue;                    // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_SelectInt_ReturnValue_1;                  // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BlueprintFunctionLibraryJP_C_WrapValue) == 0x000008, "Wrong alignment on BlueprintFunctionLibraryJP_C_WrapValue");
static_assert(sizeof(BlueprintFunctionLibraryJP_C_WrapValue) == 0x000028, "Wrong size on BlueprintFunctionLibraryJP_C_WrapValue");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_WrapValue, Value) == 0x000000, "Member 'BlueprintFunctionLibraryJP_C_WrapValue::Value' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_WrapValue, Min) == 0x000004, "Member 'BlueprintFunctionLibraryJP_C_WrapValue::Min' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_WrapValue, Max) == 0x000008, "Member 'BlueprintFunctionLibraryJP_C_WrapValue::Max' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_WrapValue, __WorldContext) == 0x000010, "Member 'BlueprintFunctionLibraryJP_C_WrapValue::__WorldContext' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_WrapValue, ReturnValue) == 0x000018, "Member 'BlueprintFunctionLibraryJP_C_WrapValue::ReturnValue' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_WrapValue, CallFunc_Less_IntInt_ReturnValue) == 0x00001C, "Member 'BlueprintFunctionLibraryJP_C_WrapValue::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_WrapValue, CallFunc_Greater_IntInt_ReturnValue) == 0x00001D, "Member 'BlueprintFunctionLibraryJP_C_WrapValue::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_WrapValue, CallFunc_SelectInt_ReturnValue) == 0x000020, "Member 'BlueprintFunctionLibraryJP_C_WrapValue::CallFunc_SelectInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_WrapValue, CallFunc_SelectInt_ReturnValue_1) == 0x000024, "Member 'BlueprintFunctionLibraryJP_C_WrapValue::CallFunc_SelectInt_ReturnValue_1' has a wrong offset!");

// Function BlueprintFunctionLibraryJP.BlueprintFunctionLibraryJP_C.ConvertLevelNameToFriendlyName
// 0x0030 (0x0030 - 0x0000)
struct BlueprintFunctionLibraryJP_C_ConvertLevelNameToFriendlyName final
{
public:
	class FString                                 MapName;                                           // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FText                                   Return;                                            // 0x0018(0x0010)(Parm, OutParm)
	bool                                          K2Node_SwitchString_CmpSuccess;                    // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BlueprintFunctionLibraryJP_C_ConvertLevelNameToFriendlyName) == 0x000008, "Wrong alignment on BlueprintFunctionLibraryJP_C_ConvertLevelNameToFriendlyName");
static_assert(sizeof(BlueprintFunctionLibraryJP_C_ConvertLevelNameToFriendlyName) == 0x000030, "Wrong size on BlueprintFunctionLibraryJP_C_ConvertLevelNameToFriendlyName");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_ConvertLevelNameToFriendlyName, MapName) == 0x000000, "Member 'BlueprintFunctionLibraryJP_C_ConvertLevelNameToFriendlyName::MapName' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_ConvertLevelNameToFriendlyName, __WorldContext) == 0x000010, "Member 'BlueprintFunctionLibraryJP_C_ConvertLevelNameToFriendlyName::__WorldContext' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_ConvertLevelNameToFriendlyName, Return) == 0x000018, "Member 'BlueprintFunctionLibraryJP_C_ConvertLevelNameToFriendlyName::Return' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_ConvertLevelNameToFriendlyName, K2Node_SwitchString_CmpSuccess) == 0x000028, "Member 'BlueprintFunctionLibraryJP_C_ConvertLevelNameToFriendlyName::K2Node_SwitchString_CmpSuccess' has a wrong offset!");

// Function BlueprintFunctionLibraryJP.BlueprintFunctionLibraryJP_C.GetTeamIDFromPawn
// 0x0028 (0x0028 - 0x0000)
struct BlueprintFunctionLibraryJP_C_GetTeamIDFromPawn final
{
public:
	class APawn*                                  Target;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12[0x6];                                       // 0x0012(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerStateJP*                         K2Node_DynamicCast_AsPlayer_State_JP;              // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetTeamID_ReturnValue;                    // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BlueprintFunctionLibraryJP_C_GetTeamIDFromPawn) == 0x000008, "Wrong alignment on BlueprintFunctionLibraryJP_C_GetTeamIDFromPawn");
static_assert(sizeof(BlueprintFunctionLibraryJP_C_GetTeamIDFromPawn) == 0x000028, "Wrong size on BlueprintFunctionLibraryJP_C_GetTeamIDFromPawn");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_GetTeamIDFromPawn, Target) == 0x000000, "Member 'BlueprintFunctionLibraryJP_C_GetTeamIDFromPawn::Target' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_GetTeamIDFromPawn, __WorldContext) == 0x000008, "Member 'BlueprintFunctionLibraryJP_C_GetTeamIDFromPawn::__WorldContext' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_GetTeamIDFromPawn, ReturnValue) == 0x000010, "Member 'BlueprintFunctionLibraryJP_C_GetTeamIDFromPawn::ReturnValue' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_GetTeamIDFromPawn, CallFunc_IsValid_ReturnValue) == 0x000011, "Member 'BlueprintFunctionLibraryJP_C_GetTeamIDFromPawn::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_GetTeamIDFromPawn, K2Node_DynamicCast_AsPlayer_State_JP) == 0x000018, "Member 'BlueprintFunctionLibraryJP_C_GetTeamIDFromPawn::K2Node_DynamicCast_AsPlayer_State_JP' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_GetTeamIDFromPawn, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'BlueprintFunctionLibraryJP_C_GetTeamIDFromPawn::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_GetTeamIDFromPawn, CallFunc_GetTeamID_ReturnValue) == 0x000021, "Member 'BlueprintFunctionLibraryJP_C_GetTeamIDFromPawn::CallFunc_GetTeamID_ReturnValue' has a wrong offset!");

// Function BlueprintFunctionLibraryJP.BlueprintFunctionLibraryJP_C.SpawnDamageValue
// 0x0080 (0x0080 - 0x0000)
struct BlueprintFunctionLibraryJP_C_SpawnDamageValue final
{
public:
	double                                        IncomingHealthDelta;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                WorldLocation;                                     // 0x0008(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AController*                            Instigator;                                        // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0028(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      K2Node_DynamicCast_AsPlayer_Controller;            // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue;                   // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue;                       // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5C[0x4];                                       // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_ResidentCharacter_C*                K2Node_DynamicCast_AsBP_Resident_Character;        // 0x0060(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_69[0x3];                                       // 0x0069(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Multiply_IntInt_ReturnValue;              // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Get_ClassLog_Name_name;                   // 0x0070(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BlueprintFunctionLibraryJP_C_SpawnDamageValue) == 0x000008, "Wrong alignment on BlueprintFunctionLibraryJP_C_SpawnDamageValue");
static_assert(sizeof(BlueprintFunctionLibraryJP_C_SpawnDamageValue) == 0x000080, "Wrong size on BlueprintFunctionLibraryJP_C_SpawnDamageValue");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_SpawnDamageValue, IncomingHealthDelta) == 0x000000, "Member 'BlueprintFunctionLibraryJP_C_SpawnDamageValue::IncomingHealthDelta' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_SpawnDamageValue, WorldLocation) == 0x000008, "Member 'BlueprintFunctionLibraryJP_C_SpawnDamageValue::WorldLocation' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_SpawnDamageValue, Instigator) == 0x000020, "Member 'BlueprintFunctionLibraryJP_C_SpawnDamageValue::Instigator' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_SpawnDamageValue, __WorldContext) == 0x000028, "Member 'BlueprintFunctionLibraryJP_C_SpawnDamageValue::__WorldContext' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_SpawnDamageValue, Temp_int_Variable) == 0x000030, "Member 'BlueprintFunctionLibraryJP_C_SpawnDamageValue::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_SpawnDamageValue, K2Node_DynamicCast_AsPlayer_Controller) == 0x000038, "Member 'BlueprintFunctionLibraryJP_C_SpawnDamageValue::K2Node_DynamicCast_AsPlayer_Controller' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_SpawnDamageValue, K2Node_DynamicCast_bSuccess) == 0x000040, "Member 'BlueprintFunctionLibraryJP_C_SpawnDamageValue::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_SpawnDamageValue, CallFunc_Conv_IntToDouble_ReturnValue) == 0x000048, "Member 'BlueprintFunctionLibraryJP_C_SpawnDamageValue::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_SpawnDamageValue, CallFunc_K2_GetPawn_ReturnValue) == 0x000050, "Member 'BlueprintFunctionLibraryJP_C_SpawnDamageValue::CallFunc_K2_GetPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_SpawnDamageValue, CallFunc_FTrunc_ReturnValue) == 0x000058, "Member 'BlueprintFunctionLibraryJP_C_SpawnDamageValue::CallFunc_FTrunc_ReturnValue' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_SpawnDamageValue, K2Node_DynamicCast_AsBP_Resident_Character) == 0x000060, "Member 'BlueprintFunctionLibraryJP_C_SpawnDamageValue::K2Node_DynamicCast_AsBP_Resident_Character' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_SpawnDamageValue, K2Node_DynamicCast_bSuccess_1) == 0x000068, "Member 'BlueprintFunctionLibraryJP_C_SpawnDamageValue::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_SpawnDamageValue, CallFunc_Multiply_IntInt_ReturnValue) == 0x00006C, "Member 'BlueprintFunctionLibraryJP_C_SpawnDamageValue::CallFunc_Multiply_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_SpawnDamageValue, CallFunc_Get_ClassLog_Name_name) == 0x000070, "Member 'BlueprintFunctionLibraryJP_C_SpawnDamageValue::CallFunc_Get_ClassLog_Name_name' has a wrong offset!");

// Function BlueprintFunctionLibraryJP.BlueprintFunctionLibraryJP_C.GetServerWorldTimeSafe
// 0x0038 (0x0038 - 0x0000)
struct BlueprintFunctionLibraryJP_C_GetServerWorldTimeSafe final
{
public:
	class UObject*                                __WorldContext;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetTimeSeconds_ReturnValue;               // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetServerWorldTimeSeconds_ReturnValue;    // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue_1;               // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BlueprintFunctionLibraryJP_C_GetServerWorldTimeSafe) == 0x000008, "Wrong alignment on BlueprintFunctionLibraryJP_C_GetServerWorldTimeSafe");
static_assert(sizeof(BlueprintFunctionLibraryJP_C_GetServerWorldTimeSafe) == 0x000038, "Wrong size on BlueprintFunctionLibraryJP_C_GetServerWorldTimeSafe");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_GetServerWorldTimeSafe, __WorldContext) == 0x000000, "Member 'BlueprintFunctionLibraryJP_C_GetServerWorldTimeSafe::__WorldContext' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_GetServerWorldTimeSafe, ReturnValue) == 0x000008, "Member 'BlueprintFunctionLibraryJP_C_GetServerWorldTimeSafe::ReturnValue' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_GetServerWorldTimeSafe, CallFunc_GetGameState_ReturnValue) == 0x000010, "Member 'BlueprintFunctionLibraryJP_C_GetServerWorldTimeSafe::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_GetServerWorldTimeSafe, CallFunc_GetTimeSeconds_ReturnValue) == 0x000018, "Member 'BlueprintFunctionLibraryJP_C_GetServerWorldTimeSafe::CallFunc_GetTimeSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_GetServerWorldTimeSafe, CallFunc_GetServerWorldTimeSeconds_ReturnValue) == 0x000020, "Member 'BlueprintFunctionLibraryJP_C_GetServerWorldTimeSafe::CallFunc_GetServerWorldTimeSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_GetServerWorldTimeSafe, CallFunc_GetGameState_ReturnValue_1) == 0x000028, "Member 'BlueprintFunctionLibraryJP_C_GetServerWorldTimeSafe::CallFunc_GetGameState_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BlueprintFunctionLibraryJP_C_GetServerWorldTimeSafe, CallFunc_IsValid_ReturnValue) == 0x000030, "Member 'BlueprintFunctionLibraryJP_C_GetServerWorldTimeSafe::CallFunc_IsValid_ReturnValue' has a wrong offset!");

}

