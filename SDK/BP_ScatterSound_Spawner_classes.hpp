#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_ScatterSound_Spawner

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "CoreUObject_structs.hpp"
#include "E_TimeOfDay_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_ScatterSound_Spawner.BP_ScatterSound_Spawner_C
// 0x0088 (0x0318 - 0x0290)
class ABP_ScatterSound_Spawner_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0290(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class USceneComponent*                        AudioPlayScene;                                    // 0x0298(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   DebugCube;                                         // 0x02A0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USpringArmComponent*                    SpringArm;                                         // 0x02A8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          Box;                                               // 0x02B0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x02B8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FVector                                BoxExtend;                                         // 0x02C0(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsInsideScatterBox;                                // 0x02D8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2D9[0x7];                                      // 0x02D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundBase*                             ScatterSoundDay;                                   // 0x02E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             ScatterSoundNight;                                 // 0x02E8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        MaxTimeBetweenSpawns;                              // 0x02F0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        MinTimeBetweenSpawn;                               // 0x02F8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Debug;                                             // 0x0300(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_TimeOfDay                                   Time_Of_Day;                                       // 0x0301(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          LocalCharacterInsideBox;                           // 0x0302(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          LocalPlayerInside;                                 // 0x0303(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          PlayOnlyInBox;                                     // 0x0304(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_305[0x3];                                      // 0x0305(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Min_Distance;                                      // 0x0308(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Max_Distance;                                      // 0x0310(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void UserConstructionScript();
	void StartScatterSoundSpawner();
	void SpawnScatterSound();
	void ReceiveBeginPlay();
	void PlaySoundAttached(const struct FVector& Location);
	void PlaySoundAtLocation(const struct FVector& Location);
	void Play_Near_Player();
	void Play_In_Box();
	void OnEnded_25A4641841E17C27343F37992291272A();
	void On_Client_TimeOfDayChange_Event(bool InitialState, E_TimeOfDay TimeOfDay);
	double GetRandomFloatInRange();
	void ExecuteUbergraph_BP_ScatterSound_Spawner(int32 EntryPoint);
	void Detach_Spring_From_Player();
	void Check_For_Overlapping_Pawns(bool* IsInside);
	void Attach_Spring_To_Player();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_ScatterSound_Spawner_C">();
	}
	static class ABP_ScatterSound_Spawner_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_ScatterSound_Spawner_C>();
	}
};
static_assert(alignof(ABP_ScatterSound_Spawner_C) == 0x000008, "Wrong alignment on ABP_ScatterSound_Spawner_C");
static_assert(sizeof(ABP_ScatterSound_Spawner_C) == 0x000318, "Wrong size on ABP_ScatterSound_Spawner_C");
static_assert(offsetof(ABP_ScatterSound_Spawner_C, UberGraphFrame) == 0x000290, "Member 'ABP_ScatterSound_Spawner_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_ScatterSound_Spawner_C, AudioPlayScene) == 0x000298, "Member 'ABP_ScatterSound_Spawner_C::AudioPlayScene' has a wrong offset!");
static_assert(offsetof(ABP_ScatterSound_Spawner_C, DebugCube) == 0x0002A0, "Member 'ABP_ScatterSound_Spawner_C::DebugCube' has a wrong offset!");
static_assert(offsetof(ABP_ScatterSound_Spawner_C, SpringArm) == 0x0002A8, "Member 'ABP_ScatterSound_Spawner_C::SpringArm' has a wrong offset!");
static_assert(offsetof(ABP_ScatterSound_Spawner_C, Box) == 0x0002B0, "Member 'ABP_ScatterSound_Spawner_C::Box' has a wrong offset!");
static_assert(offsetof(ABP_ScatterSound_Spawner_C, DefaultSceneRoot) == 0x0002B8, "Member 'ABP_ScatterSound_Spawner_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ABP_ScatterSound_Spawner_C, BoxExtend) == 0x0002C0, "Member 'ABP_ScatterSound_Spawner_C::BoxExtend' has a wrong offset!");
static_assert(offsetof(ABP_ScatterSound_Spawner_C, IsInsideScatterBox) == 0x0002D8, "Member 'ABP_ScatterSound_Spawner_C::IsInsideScatterBox' has a wrong offset!");
static_assert(offsetof(ABP_ScatterSound_Spawner_C, ScatterSoundDay) == 0x0002E0, "Member 'ABP_ScatterSound_Spawner_C::ScatterSoundDay' has a wrong offset!");
static_assert(offsetof(ABP_ScatterSound_Spawner_C, ScatterSoundNight) == 0x0002E8, "Member 'ABP_ScatterSound_Spawner_C::ScatterSoundNight' has a wrong offset!");
static_assert(offsetof(ABP_ScatterSound_Spawner_C, MaxTimeBetweenSpawns) == 0x0002F0, "Member 'ABP_ScatterSound_Spawner_C::MaxTimeBetweenSpawns' has a wrong offset!");
static_assert(offsetof(ABP_ScatterSound_Spawner_C, MinTimeBetweenSpawn) == 0x0002F8, "Member 'ABP_ScatterSound_Spawner_C::MinTimeBetweenSpawn' has a wrong offset!");
static_assert(offsetof(ABP_ScatterSound_Spawner_C, Debug) == 0x000300, "Member 'ABP_ScatterSound_Spawner_C::Debug' has a wrong offset!");
static_assert(offsetof(ABP_ScatterSound_Spawner_C, Time_Of_Day) == 0x000301, "Member 'ABP_ScatterSound_Spawner_C::Time_Of_Day' has a wrong offset!");
static_assert(offsetof(ABP_ScatterSound_Spawner_C, LocalCharacterInsideBox) == 0x000302, "Member 'ABP_ScatterSound_Spawner_C::LocalCharacterInsideBox' has a wrong offset!");
static_assert(offsetof(ABP_ScatterSound_Spawner_C, LocalPlayerInside) == 0x000303, "Member 'ABP_ScatterSound_Spawner_C::LocalPlayerInside' has a wrong offset!");
static_assert(offsetof(ABP_ScatterSound_Spawner_C, PlayOnlyInBox) == 0x000304, "Member 'ABP_ScatterSound_Spawner_C::PlayOnlyInBox' has a wrong offset!");
static_assert(offsetof(ABP_ScatterSound_Spawner_C, Min_Distance) == 0x000308, "Member 'ABP_ScatterSound_Spawner_C::Min_Distance' has a wrong offset!");
static_assert(offsetof(ABP_ScatterSound_Spawner_C, Max_Distance) == 0x000310, "Member 'ABP_ScatterSound_Spawner_C::Max_Distance' has a wrong offset!");

}

