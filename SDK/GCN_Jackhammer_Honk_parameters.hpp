#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GCN_Jackhammer_Honk

#include "Basic.hpp"

#include "GameplayAbilities_structs.hpp"


namespace SDK::Params
{

// Function GCN_Jackhammer_Honk.GCN_Jackhammer_Honk_C.OnActive
// 0x0100 (0x0100 - 0x0000)
struct GCN_Jackhammer_Honk_C_OnActive final
{
public:
	class AActor*                                 MyTarget;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayCueParameters                 Parameters;                                        // 0x0008(0x00D8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
	bool                                          ReturnValue;                                       // 0x00E0(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E1[0x7];                                       // 0x00E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharacter*                             K2Node_DynamicCast_AsCharacter;                    // 0x00E8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_OnActive_ReturnValue;                     // 0x00F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F2[0x6];                                       // 0x00F2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UAudioComponent*                        CallFunc_SpawnSoundAttached_ReturnValue;           // 0x00F8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GCN_Jackhammer_Honk_C_OnActive) == 0x000008, "Wrong alignment on GCN_Jackhammer_Honk_C_OnActive");
static_assert(sizeof(GCN_Jackhammer_Honk_C_OnActive) == 0x000100, "Wrong size on GCN_Jackhammer_Honk_C_OnActive");
static_assert(offsetof(GCN_Jackhammer_Honk_C_OnActive, MyTarget) == 0x000000, "Member 'GCN_Jackhammer_Honk_C_OnActive::MyTarget' has a wrong offset!");
static_assert(offsetof(GCN_Jackhammer_Honk_C_OnActive, Parameters) == 0x000008, "Member 'GCN_Jackhammer_Honk_C_OnActive::Parameters' has a wrong offset!");
static_assert(offsetof(GCN_Jackhammer_Honk_C_OnActive, ReturnValue) == 0x0000E0, "Member 'GCN_Jackhammer_Honk_C_OnActive::ReturnValue' has a wrong offset!");
static_assert(offsetof(GCN_Jackhammer_Honk_C_OnActive, K2Node_DynamicCast_AsCharacter) == 0x0000E8, "Member 'GCN_Jackhammer_Honk_C_OnActive::K2Node_DynamicCast_AsCharacter' has a wrong offset!");
static_assert(offsetof(GCN_Jackhammer_Honk_C_OnActive, K2Node_DynamicCast_bSuccess) == 0x0000F0, "Member 'GCN_Jackhammer_Honk_C_OnActive::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(GCN_Jackhammer_Honk_C_OnActive, CallFunc_OnActive_ReturnValue) == 0x0000F1, "Member 'GCN_Jackhammer_Honk_C_OnActive::CallFunc_OnActive_ReturnValue' has a wrong offset!");
static_assert(offsetof(GCN_Jackhammer_Honk_C_OnActive, CallFunc_SpawnSoundAttached_ReturnValue) == 0x0000F8, "Member 'GCN_Jackhammer_Honk_C_OnActive::CallFunc_SpawnSoundAttached_ReturnValue' has a wrong offset!");

}

