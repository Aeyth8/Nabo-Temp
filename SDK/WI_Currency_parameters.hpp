#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WI_Currency

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "UMG_structs.hpp"
#include "S_PlayerBalanceChangedMessage_structs.hpp"


namespace SDK::Params
{

// Function WI_Currency.WI_Currency_C.CREATEDELEGATE_PROXYFUNCTION_0
// 0x0010 (0x0010 - 0x0000)
struct WI_Currency_C_CREATEDELEGATE_PROXYFUNCTION_0 final
{
public:
	struct FGameplayTag                           CurrencyID;                                        // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash)
	int32                                         AddedAmount;                                       // 0x0008(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         NewTotalAmount;                                    // 0x000C(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WI_Currency_C_CREATEDELEGATE_PROXYFUNCTION_0) == 0x000004, "Wrong alignment on WI_Currency_C_CREATEDELEGATE_PROXYFUNCTION_0");
static_assert(sizeof(WI_Currency_C_CREATEDELEGATE_PROXYFUNCTION_0) == 0x000010, "Wrong size on WI_Currency_C_CREATEDELEGATE_PROXYFUNCTION_0");
static_assert(offsetof(WI_Currency_C_CREATEDELEGATE_PROXYFUNCTION_0, CurrencyID) == 0x000000, "Member 'WI_Currency_C_CREATEDELEGATE_PROXYFUNCTION_0::CurrencyID' has a wrong offset!");
static_assert(offsetof(WI_Currency_C_CREATEDELEGATE_PROXYFUNCTION_0, AddedAmount) == 0x000008, "Member 'WI_Currency_C_CREATEDELEGATE_PROXYFUNCTION_0::AddedAmount' has a wrong offset!");
static_assert(offsetof(WI_Currency_C_CREATEDELEGATE_PROXYFUNCTION_0, NewTotalAmount) == 0x00000C, "Member 'WI_Currency_C_CREATEDELEGATE_PROXYFUNCTION_0::NewTotalAmount' has a wrong offset!");

// Function WI_Currency.WI_Currency_C.ExecuteUbergraph_WI_Currency
// 0x01B8 (0x01B8 - 0x0000)
struct WI_Currency_C_ExecuteUbergraph_WI_Currency final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(struct FGameplayTag& CurrencyID, int32 AddedAmount, int32 NewTotalAmount)> K2Node_CreateDelegate_OutputDelegate;              // 0x0004(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           Temp_struct_Variable;                              // 0x0014(0x0008)(NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAsyncAction_ListenForGameplayMessage*  Temp_object_Variable;                              // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAsyncAction_ListenForGameplayMessage*  CallFunc_ListenForGameplayMessages_ReturnValue;    // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                K2Node_CustomEvent_Loaded;                         // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                Temp_object_Variable_1;                            // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UOnlineCurrency*                        K2Node_DynamicCast_AsOnline_Currency;              // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51[0x3];                                       // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_CustomEvent_Amount_1;                       // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_IsCurrencySupported_1;          // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59[0x3];                                       // 0x0059(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(int32 Amount, bool IsCurrencySupported)> K2Node_CreateDelegate_OutputDelegate_1;            // 0x005C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x006C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6D[0x3];                                       // 0x006D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_Amount;                         // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_IsCurrencySupported;            // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_79[0x3];                                       // 0x0079(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(int32 Amount, bool IsCurrencySupported)> K2Node_CreateDelegate_OutputDelegate_2;            // 0x007C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x008C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8D[0x3];                                       // 0x008D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_1;                               // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_94[0x4];                                       // 0x0094(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UOnlineStoreGameInstanceSubsystem*      CallFunc_GetGameInstanceSubsystem_ReturnValue;     // 0x0098(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ULocalUserOnlineServicesGameInstanceSubsystem* CallFunc_GetGameInstanceSubsystem_ReturnValue_1;   // 0x00A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A9[0x7];                                       // 0x00A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UOnlineCurrency>         K2Node_CustomEvent_Currency_Soft_Asset;            // 0x00B0(0x0028)(UObjectWrapper, HasGetValueTypeHash)
	TSoftObjectPtr<class UOnlineCurrency>         CallFunc_TryGetCurrencyFromTagIdentifier_OutCurrency; // 0x00D8(0x0028)(UObjectWrapper, HasGetValueTypeHash)
	bool                                          CallFunc_TryGetCurrencyFromTagIdentifier_ReturnValue; // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidSoftObjectReference_ReturnValue;   // 0x0101(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_102[0x6];                                      // 0x0102(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_PlayerBalanceChangedMessage         Temp_struct_Variable_1;                            // 0x0108(0x0018)(HasGetValueTypeHash)
	class UAsyncAction_ListenForGameplayMessage*  K2Node_CustomEvent_ProxyObject;                    // 0x0120(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           K2Node_CustomEvent_ActualChannel;                  // 0x0128(0x0008)(NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UAsyncAction_ListenForGameplayMessage* ProxyObject, const struct FGameplayTag& ActualChannel)> K2Node_CreateDelegate_OutputDelegate_3;            // 0x0130(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(const struct FGameplayTag& CurrencyTag, int32 OldValue, int32 NewValue)> K2Node_CreateDelegate_OutputDelegate_4;            // 0x0140(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           K2Node_CustomEvent_CurrencyTag;                    // 0x0150(0x0008)(NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_OldValue;                       // 0x0158(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_NewValue;                       // 0x015C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_GameplayTag_ReturnValue;       // 0x0160(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_161[0x3];                                      // 0x0161(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class UObject* Loaded)>        K2Node_CreateDelegate_OutputDelegate_5;            // 0x0164(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_174[0x4];                                      // 0x0174(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAsyncAction_GetCurrencyAmountWhenReady* CallFunc_GetCurrencyAmountWhenReady_ReturnValue;   // 0x0178(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0180(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_181[0x7];                                      // 0x0181(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAsyncAction_GetCurrencyAmountWhenReady* CallFunc_GetCurrencyAmountWhenReady_ReturnValue_1; // 0x0188(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0190(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_191[0x7];                                      // 0x0191(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_PlayerBalanceChangedMessage         Temp_struct_Variable_2;                            // 0x0198(0x0018)(HasGetValueTypeHash)
	bool                                          CallFunc_GetPayload_ReturnValue;                   // 0x01B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WI_Currency_C_ExecuteUbergraph_WI_Currency) == 0x000008, "Wrong alignment on WI_Currency_C_ExecuteUbergraph_WI_Currency");
static_assert(sizeof(WI_Currency_C_ExecuteUbergraph_WI_Currency) == 0x0001B8, "Wrong size on WI_Currency_C_ExecuteUbergraph_WI_Currency");
static_assert(offsetof(WI_Currency_C_ExecuteUbergraph_WI_Currency, EntryPoint) == 0x000000, "Member 'WI_Currency_C_ExecuteUbergraph_WI_Currency::EntryPoint' has a wrong offset!");
static_assert(offsetof(WI_Currency_C_ExecuteUbergraph_WI_Currency, K2Node_CreateDelegate_OutputDelegate) == 0x000004, "Member 'WI_Currency_C_ExecuteUbergraph_WI_Currency::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WI_Currency_C_ExecuteUbergraph_WI_Currency, Temp_struct_Variable) == 0x000014, "Member 'WI_Currency_C_ExecuteUbergraph_WI_Currency::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(WI_Currency_C_ExecuteUbergraph_WI_Currency, Temp_object_Variable) == 0x000020, "Member 'WI_Currency_C_ExecuteUbergraph_WI_Currency::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(WI_Currency_C_ExecuteUbergraph_WI_Currency, CallFunc_ListenForGameplayMessages_ReturnValue) == 0x000028, "Member 'WI_Currency_C_ExecuteUbergraph_WI_Currency::CallFunc_ListenForGameplayMessages_ReturnValue' has a wrong offset!");
static_assert(offsetof(WI_Currency_C_ExecuteUbergraph_WI_Currency, K2Node_CustomEvent_Loaded) == 0x000030, "Member 'WI_Currency_C_ExecuteUbergraph_WI_Currency::K2Node_CustomEvent_Loaded' has a wrong offset!");
static_assert(offsetof(WI_Currency_C_ExecuteUbergraph_WI_Currency, CallFunc_IsValid_ReturnValue) == 0x000038, "Member 'WI_Currency_C_ExecuteUbergraph_WI_Currency::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WI_Currency_C_ExecuteUbergraph_WI_Currency, Temp_object_Variable_1) == 0x000040, "Member 'WI_Currency_C_ExecuteUbergraph_WI_Currency::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(WI_Currency_C_ExecuteUbergraph_WI_Currency, K2Node_DynamicCast_AsOnline_Currency) == 0x000048, "Member 'WI_Currency_C_ExecuteUbergraph_WI_Currency::K2Node_DynamicCast_AsOnline_Currency' has a wrong offset!");
static_assert(offsetof(WI_Currency_C_ExecuteUbergraph_WI_Currency, K2Node_DynamicCast_bSuccess) == 0x000050, "Member 'WI_Currency_C_ExecuteUbergraph_WI_Currency::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WI_Currency_C_ExecuteUbergraph_WI_Currency, K2Node_CustomEvent_Amount_1) == 0x000054, "Member 'WI_Currency_C_ExecuteUbergraph_WI_Currency::K2Node_CustomEvent_Amount_1' has a wrong offset!");
static_assert(offsetof(WI_Currency_C_ExecuteUbergraph_WI_Currency, K2Node_CustomEvent_IsCurrencySupported_1) == 0x000058, "Member 'WI_Currency_C_ExecuteUbergraph_WI_Currency::K2Node_CustomEvent_IsCurrencySupported_1' has a wrong offset!");
static_assert(offsetof(WI_Currency_C_ExecuteUbergraph_WI_Currency, K2Node_CreateDelegate_OutputDelegate_1) == 0x00005C, "Member 'WI_Currency_C_ExecuteUbergraph_WI_Currency::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(WI_Currency_C_ExecuteUbergraph_WI_Currency, Temp_bool_Variable) == 0x00006C, "Member 'WI_Currency_C_ExecuteUbergraph_WI_Currency::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WI_Currency_C_ExecuteUbergraph_WI_Currency, Temp_int_Variable) == 0x000070, "Member 'WI_Currency_C_ExecuteUbergraph_WI_Currency::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(WI_Currency_C_ExecuteUbergraph_WI_Currency, K2Node_CustomEvent_Amount) == 0x000074, "Member 'WI_Currency_C_ExecuteUbergraph_WI_Currency::K2Node_CustomEvent_Amount' has a wrong offset!");
static_assert(offsetof(WI_Currency_C_ExecuteUbergraph_WI_Currency, K2Node_CustomEvent_IsCurrencySupported) == 0x000078, "Member 'WI_Currency_C_ExecuteUbergraph_WI_Currency::K2Node_CustomEvent_IsCurrencySupported' has a wrong offset!");
static_assert(offsetof(WI_Currency_C_ExecuteUbergraph_WI_Currency, K2Node_CreateDelegate_OutputDelegate_2) == 0x00007C, "Member 'WI_Currency_C_ExecuteUbergraph_WI_Currency::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(WI_Currency_C_ExecuteUbergraph_WI_Currency, Temp_bool_Variable_1) == 0x00008C, "Member 'WI_Currency_C_ExecuteUbergraph_WI_Currency::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(WI_Currency_C_ExecuteUbergraph_WI_Currency, Temp_int_Variable_1) == 0x000090, "Member 'WI_Currency_C_ExecuteUbergraph_WI_Currency::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(WI_Currency_C_ExecuteUbergraph_WI_Currency, CallFunc_GetGameInstanceSubsystem_ReturnValue) == 0x000098, "Member 'WI_Currency_C_ExecuteUbergraph_WI_Currency::CallFunc_GetGameInstanceSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(WI_Currency_C_ExecuteUbergraph_WI_Currency, CallFunc_GetGameInstanceSubsystem_ReturnValue_1) == 0x0000A0, "Member 'WI_Currency_C_ExecuteUbergraph_WI_Currency::CallFunc_GetGameInstanceSubsystem_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WI_Currency_C_ExecuteUbergraph_WI_Currency, K2Node_Event_IsDesignTime) == 0x0000A8, "Member 'WI_Currency_C_ExecuteUbergraph_WI_Currency::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(WI_Currency_C_ExecuteUbergraph_WI_Currency, K2Node_CustomEvent_Currency_Soft_Asset) == 0x0000B0, "Member 'WI_Currency_C_ExecuteUbergraph_WI_Currency::K2Node_CustomEvent_Currency_Soft_Asset' has a wrong offset!");
static_assert(offsetof(WI_Currency_C_ExecuteUbergraph_WI_Currency, CallFunc_TryGetCurrencyFromTagIdentifier_OutCurrency) == 0x0000D8, "Member 'WI_Currency_C_ExecuteUbergraph_WI_Currency::CallFunc_TryGetCurrencyFromTagIdentifier_OutCurrency' has a wrong offset!");
static_assert(offsetof(WI_Currency_C_ExecuteUbergraph_WI_Currency, CallFunc_TryGetCurrencyFromTagIdentifier_ReturnValue) == 0x000100, "Member 'WI_Currency_C_ExecuteUbergraph_WI_Currency::CallFunc_TryGetCurrencyFromTagIdentifier_ReturnValue' has a wrong offset!");
static_assert(offsetof(WI_Currency_C_ExecuteUbergraph_WI_Currency, CallFunc_IsValidSoftObjectReference_ReturnValue) == 0x000101, "Member 'WI_Currency_C_ExecuteUbergraph_WI_Currency::CallFunc_IsValidSoftObjectReference_ReturnValue' has a wrong offset!");
static_assert(offsetof(WI_Currency_C_ExecuteUbergraph_WI_Currency, Temp_struct_Variable_1) == 0x000108, "Member 'WI_Currency_C_ExecuteUbergraph_WI_Currency::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(WI_Currency_C_ExecuteUbergraph_WI_Currency, K2Node_CustomEvent_ProxyObject) == 0x000120, "Member 'WI_Currency_C_ExecuteUbergraph_WI_Currency::K2Node_CustomEvent_ProxyObject' has a wrong offset!");
static_assert(offsetof(WI_Currency_C_ExecuteUbergraph_WI_Currency, K2Node_CustomEvent_ActualChannel) == 0x000128, "Member 'WI_Currency_C_ExecuteUbergraph_WI_Currency::K2Node_CustomEvent_ActualChannel' has a wrong offset!");
static_assert(offsetof(WI_Currency_C_ExecuteUbergraph_WI_Currency, K2Node_CreateDelegate_OutputDelegate_3) == 0x000130, "Member 'WI_Currency_C_ExecuteUbergraph_WI_Currency::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(WI_Currency_C_ExecuteUbergraph_WI_Currency, K2Node_CreateDelegate_OutputDelegate_4) == 0x000140, "Member 'WI_Currency_C_ExecuteUbergraph_WI_Currency::K2Node_CreateDelegate_OutputDelegate_4' has a wrong offset!");
static_assert(offsetof(WI_Currency_C_ExecuteUbergraph_WI_Currency, K2Node_CustomEvent_CurrencyTag) == 0x000150, "Member 'WI_Currency_C_ExecuteUbergraph_WI_Currency::K2Node_CustomEvent_CurrencyTag' has a wrong offset!");
static_assert(offsetof(WI_Currency_C_ExecuteUbergraph_WI_Currency, K2Node_CustomEvent_OldValue) == 0x000158, "Member 'WI_Currency_C_ExecuteUbergraph_WI_Currency::K2Node_CustomEvent_OldValue' has a wrong offset!");
static_assert(offsetof(WI_Currency_C_ExecuteUbergraph_WI_Currency, K2Node_CustomEvent_NewValue) == 0x00015C, "Member 'WI_Currency_C_ExecuteUbergraph_WI_Currency::K2Node_CustomEvent_NewValue' has a wrong offset!");
static_assert(offsetof(WI_Currency_C_ExecuteUbergraph_WI_Currency, CallFunc_EqualEqual_GameplayTag_ReturnValue) == 0x000160, "Member 'WI_Currency_C_ExecuteUbergraph_WI_Currency::CallFunc_EqualEqual_GameplayTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(WI_Currency_C_ExecuteUbergraph_WI_Currency, K2Node_CreateDelegate_OutputDelegate_5) == 0x000164, "Member 'WI_Currency_C_ExecuteUbergraph_WI_Currency::K2Node_CreateDelegate_OutputDelegate_5' has a wrong offset!");
static_assert(offsetof(WI_Currency_C_ExecuteUbergraph_WI_Currency, CallFunc_GetCurrencyAmountWhenReady_ReturnValue) == 0x000178, "Member 'WI_Currency_C_ExecuteUbergraph_WI_Currency::CallFunc_GetCurrencyAmountWhenReady_ReturnValue' has a wrong offset!");
static_assert(offsetof(WI_Currency_C_ExecuteUbergraph_WI_Currency, CallFunc_IsValid_ReturnValue_1) == 0x000180, "Member 'WI_Currency_C_ExecuteUbergraph_WI_Currency::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WI_Currency_C_ExecuteUbergraph_WI_Currency, CallFunc_GetCurrencyAmountWhenReady_ReturnValue_1) == 0x000188, "Member 'WI_Currency_C_ExecuteUbergraph_WI_Currency::CallFunc_GetCurrencyAmountWhenReady_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WI_Currency_C_ExecuteUbergraph_WI_Currency, CallFunc_IsValid_ReturnValue_2) == 0x000190, "Member 'WI_Currency_C_ExecuteUbergraph_WI_Currency::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WI_Currency_C_ExecuteUbergraph_WI_Currency, Temp_struct_Variable_2) == 0x000198, "Member 'WI_Currency_C_ExecuteUbergraph_WI_Currency::Temp_struct_Variable_2' has a wrong offset!");
static_assert(offsetof(WI_Currency_C_ExecuteUbergraph_WI_Currency, CallFunc_GetPayload_ReturnValue) == 0x0001B0, "Member 'WI_Currency_C_ExecuteUbergraph_WI_Currency::CallFunc_GetPayload_ReturnValue' has a wrong offset!");

// Function WI_Currency.WI_Currency_C.HandleAnyCurrencyUpdated
// 0x0010 (0x0010 - 0x0000)
struct WI_Currency_C_HandleAnyCurrencyUpdated final
{
public:
	struct FGameplayTag                           CurrencyTag_0;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	int32                                         OldValue;                                          // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         NewValue;                                          // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WI_Currency_C_HandleAnyCurrencyUpdated) == 0x000004, "Wrong alignment on WI_Currency_C_HandleAnyCurrencyUpdated");
static_assert(sizeof(WI_Currency_C_HandleAnyCurrencyUpdated) == 0x000010, "Wrong size on WI_Currency_C_HandleAnyCurrencyUpdated");
static_assert(offsetof(WI_Currency_C_HandleAnyCurrencyUpdated, CurrencyTag_0) == 0x000000, "Member 'WI_Currency_C_HandleAnyCurrencyUpdated::CurrencyTag_0' has a wrong offset!");
static_assert(offsetof(WI_Currency_C_HandleAnyCurrencyUpdated, OldValue) == 0x000008, "Member 'WI_Currency_C_HandleAnyCurrencyUpdated::OldValue' has a wrong offset!");
static_assert(offsetof(WI_Currency_C_HandleAnyCurrencyUpdated, NewValue) == 0x00000C, "Member 'WI_Currency_C_HandleAnyCurrencyUpdated::NewValue' has a wrong offset!");

// Function WI_Currency.WI_Currency_C.OnLoaded_1AC7104047198562FA7C1E82C7C56F65
// 0x0008 (0x0008 - 0x0000)
struct WI_Currency_C_OnLoaded_1AC7104047198562FA7C1E82C7C56F65 final
{
public:
	class UObject*                                Loaded;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WI_Currency_C_OnLoaded_1AC7104047198562FA7C1E82C7C56F65) == 0x000008, "Wrong alignment on WI_Currency_C_OnLoaded_1AC7104047198562FA7C1E82C7C56F65");
static_assert(sizeof(WI_Currency_C_OnLoaded_1AC7104047198562FA7C1E82C7C56F65) == 0x000008, "Wrong size on WI_Currency_C_OnLoaded_1AC7104047198562FA7C1E82C7C56F65");
static_assert(offsetof(WI_Currency_C_OnLoaded_1AC7104047198562FA7C1E82C7C56F65, Loaded) == 0x000000, "Member 'WI_Currency_C_OnLoaded_1AC7104047198562FA7C1E82C7C56F65::Loaded' has a wrong offset!");

// Function WI_Currency.WI_Currency_C.OnMessageReceived_9D67AB524A6E8C9A941C14A45467A2C6
// 0x0010 (0x0010 - 0x0000)
struct WI_Currency_C_OnMessageReceived_9D67AB524A6E8C9A941C14A45467A2C6 final
{
public:
	class UAsyncAction_ListenForGameplayMessage*  ProxyObject;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           ActualChannel;                                     // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WI_Currency_C_OnMessageReceived_9D67AB524A6E8C9A941C14A45467A2C6) == 0x000008, "Wrong alignment on WI_Currency_C_OnMessageReceived_9D67AB524A6E8C9A941C14A45467A2C6");
static_assert(sizeof(WI_Currency_C_OnMessageReceived_9D67AB524A6E8C9A941C14A45467A2C6) == 0x000010, "Wrong size on WI_Currency_C_OnMessageReceived_9D67AB524A6E8C9A941C14A45467A2C6");
static_assert(offsetof(WI_Currency_C_OnMessageReceived_9D67AB524A6E8C9A941C14A45467A2C6, ProxyObject) == 0x000000, "Member 'WI_Currency_C_OnMessageReceived_9D67AB524A6E8C9A941C14A45467A2C6::ProxyObject' has a wrong offset!");
static_assert(offsetof(WI_Currency_C_OnMessageReceived_9D67AB524A6E8C9A941C14A45467A2C6, ActualChannel) == 0x000008, "Member 'WI_Currency_C_OnMessageReceived_9D67AB524A6E8C9A941C14A45467A2C6::ActualChannel' has a wrong offset!");

// Function WI_Currency.WI_Currency_C.OnReady_20CC0EF1448DE84A2218C79905D5A7E8
// 0x0008 (0x0008 - 0x0000)
struct WI_Currency_C_OnReady_20CC0EF1448DE84A2218C79905D5A7E8 final
{
public:
	int32                                         Amount;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsCurrencySupported;                               // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WI_Currency_C_OnReady_20CC0EF1448DE84A2218C79905D5A7E8) == 0x000004, "Wrong alignment on WI_Currency_C_OnReady_20CC0EF1448DE84A2218C79905D5A7E8");
static_assert(sizeof(WI_Currency_C_OnReady_20CC0EF1448DE84A2218C79905D5A7E8) == 0x000008, "Wrong size on WI_Currency_C_OnReady_20CC0EF1448DE84A2218C79905D5A7E8");
static_assert(offsetof(WI_Currency_C_OnReady_20CC0EF1448DE84A2218C79905D5A7E8, Amount) == 0x000000, "Member 'WI_Currency_C_OnReady_20CC0EF1448DE84A2218C79905D5A7E8::Amount' has a wrong offset!");
static_assert(offsetof(WI_Currency_C_OnReady_20CC0EF1448DE84A2218C79905D5A7E8, IsCurrencySupported) == 0x000004, "Member 'WI_Currency_C_OnReady_20CC0EF1448DE84A2218C79905D5A7E8::IsCurrencySupported' has a wrong offset!");

// Function WI_Currency.WI_Currency_C.OnReady_C5A042D3487085E28CF3E8A0E626AF67
// 0x0008 (0x0008 - 0x0000)
struct WI_Currency_C_OnReady_C5A042D3487085E28CF3E8A0E626AF67 final
{
public:
	int32                                         Amount;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsCurrencySupported;                               // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WI_Currency_C_OnReady_C5A042D3487085E28CF3E8A0E626AF67) == 0x000004, "Wrong alignment on WI_Currency_C_OnReady_C5A042D3487085E28CF3E8A0E626AF67");
static_assert(sizeof(WI_Currency_C_OnReady_C5A042D3487085E28CF3E8A0E626AF67) == 0x000008, "Wrong size on WI_Currency_C_OnReady_C5A042D3487085E28CF3E8A0E626AF67");
static_assert(offsetof(WI_Currency_C_OnReady_C5A042D3487085E28CF3E8A0E626AF67, Amount) == 0x000000, "Member 'WI_Currency_C_OnReady_C5A042D3487085E28CF3E8A0E626AF67::Amount' has a wrong offset!");
static_assert(offsetof(WI_Currency_C_OnReady_C5A042D3487085E28CF3E8A0E626AF67, IsCurrencySupported) == 0x000004, "Member 'WI_Currency_C_OnReady_C5A042D3487085E28CF3E8A0E626AF67::IsCurrencySupported' has a wrong offset!");

// Function WI_Currency.WI_Currency_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct WI_Currency_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WI_Currency_C_PreConstruct) == 0x000001, "Wrong alignment on WI_Currency_C_PreConstruct");
static_assert(sizeof(WI_Currency_C_PreConstruct) == 0x000001, "Wrong size on WI_Currency_C_PreConstruct");
static_assert(offsetof(WI_Currency_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'WI_Currency_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function WI_Currency.WI_Currency_C.SetBackgroundColor
// 0x0010 (0x0010 - 0x0000)
struct WI_Currency_C_SetBackgroundColor final
{
public:
	struct FLinearColor                           InColorAndOpacity;                                 // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WI_Currency_C_SetBackgroundColor) == 0x000004, "Wrong alignment on WI_Currency_C_SetBackgroundColor");
static_assert(sizeof(WI_Currency_C_SetBackgroundColor) == 0x000010, "Wrong size on WI_Currency_C_SetBackgroundColor");
static_assert(offsetof(WI_Currency_C_SetBackgroundColor, InColorAndOpacity) == 0x000000, "Member 'WI_Currency_C_SetBackgroundColor::InColorAndOpacity' has a wrong offset!");

// Function WI_Currency.WI_Currency_C.SetCurrencyAsset
// 0x0028 (0x0028 - 0x0000)
struct WI_Currency_C_SetCurrencyAsset final
{
public:
	TSoftObjectPtr<class UOnlineCurrency>         Currency_Soft_Asset;                               // 0x0000(0x0028)(BlueprintVisible, BlueprintReadOnly, Parm, UObjectWrapper, HasGetValueTypeHash)
};
static_assert(alignof(WI_Currency_C_SetCurrencyAsset) == 0x000008, "Wrong alignment on WI_Currency_C_SetCurrencyAsset");
static_assert(sizeof(WI_Currency_C_SetCurrencyAsset) == 0x000028, "Wrong size on WI_Currency_C_SetCurrencyAsset");
static_assert(offsetof(WI_Currency_C_SetCurrencyAsset, Currency_Soft_Asset) == 0x000000, "Member 'WI_Currency_C_SetCurrencyAsset::Currency_Soft_Asset' has a wrong offset!");

// Function WI_Currency.WI_Currency_C.SetIconSoftTexture
// 0x0028 (0x0028 - 0x0000)
struct WI_Currency_C_SetIconSoftTexture final
{
public:
	TSoftObjectPtr<class UTexture2D>              SoftTexture;                                       // 0x0000(0x0028)(BlueprintVisible, BlueprintReadOnly, Parm, UObjectWrapper, HasGetValueTypeHash)
};
static_assert(alignof(WI_Currency_C_SetIconSoftTexture) == 0x000008, "Wrong alignment on WI_Currency_C_SetIconSoftTexture");
static_assert(sizeof(WI_Currency_C_SetIconSoftTexture) == 0x000028, "Wrong size on WI_Currency_C_SetIconSoftTexture");
static_assert(offsetof(WI_Currency_C_SetIconSoftTexture, SoftTexture) == 0x000000, "Member 'WI_Currency_C_SetIconSoftTexture::SoftTexture' has a wrong offset!");

// Function WI_Currency.WI_Currency_C.SetIsLoading
// 0x0009 (0x0009 - 0x0000)
struct WI_Currency_C_SetIsLoading final
{
public:
	bool                                          IsLoading_0;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_2;                              // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_3;                              // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_1;                           // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WI_Currency_C_SetIsLoading) == 0x000001, "Wrong alignment on WI_Currency_C_SetIsLoading");
static_assert(sizeof(WI_Currency_C_SetIsLoading) == 0x000009, "Wrong size on WI_Currency_C_SetIsLoading");
static_assert(offsetof(WI_Currency_C_SetIsLoading, IsLoading_0) == 0x000000, "Member 'WI_Currency_C_SetIsLoading::IsLoading_0' has a wrong offset!");
static_assert(offsetof(WI_Currency_C_SetIsLoading, Temp_bool_Variable) == 0x000001, "Member 'WI_Currency_C_SetIsLoading::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WI_Currency_C_SetIsLoading, Temp_byte_Variable) == 0x000002, "Member 'WI_Currency_C_SetIsLoading::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WI_Currency_C_SetIsLoading, Temp_byte_Variable_1) == 0x000003, "Member 'WI_Currency_C_SetIsLoading::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WI_Currency_C_SetIsLoading, Temp_bool_Variable_1) == 0x000004, "Member 'WI_Currency_C_SetIsLoading::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(WI_Currency_C_SetIsLoading, Temp_byte_Variable_2) == 0x000005, "Member 'WI_Currency_C_SetIsLoading::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(WI_Currency_C_SetIsLoading, Temp_byte_Variable_3) == 0x000006, "Member 'WI_Currency_C_SetIsLoading::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(WI_Currency_C_SetIsLoading, K2Node_Select_Default) == 0x000007, "Member 'WI_Currency_C_SetIsLoading::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WI_Currency_C_SetIsLoading, K2Node_Select_Default_1) == 0x000008, "Member 'WI_Currency_C_SetIsLoading::K2Node_Select_Default_1' has a wrong offset!");

// Function WI_Currency.WI_Currency_C.SetValue
// 0x0018 (0x0018 - 0x0000)
struct WI_Currency_C_SetValue final
{
public:
	int32                                         Value_0;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0008(0x0010)()
};
static_assert(alignof(WI_Currency_C_SetValue) == 0x000008, "Wrong alignment on WI_Currency_C_SetValue");
static_assert(sizeof(WI_Currency_C_SetValue) == 0x000018, "Wrong size on WI_Currency_C_SetValue");
static_assert(offsetof(WI_Currency_C_SetValue, Value_0) == 0x000000, "Member 'WI_Currency_C_SetValue::Value_0' has a wrong offset!");
static_assert(offsetof(WI_Currency_C_SetValue, CallFunc_Conv_IntToText_ReturnValue) == 0x000008, "Member 'WI_Currency_C_SetValue::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");

}

