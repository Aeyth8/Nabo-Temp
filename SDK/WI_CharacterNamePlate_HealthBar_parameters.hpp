#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WI_CharacterNamePlate_HealthBar

#include "Basic.hpp"

#include "JP_structs.hpp"
#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function WI_CharacterNamePlate_HealthBar.WI_CharacterNamePlate_HealthBar_C.ExecuteUbergraph_WI_CharacterNamePlate_HealthBar
// 0x0008 (0x0008 - 0x0000)
struct WI_CharacterNamePlate_HealthBar_C_ExecuteUbergraph_WI_CharacterNamePlate_HealthBar final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WI_CharacterNamePlate_HealthBar_C_ExecuteUbergraph_WI_CharacterNamePlate_HealthBar) == 0x000004, "Wrong alignment on WI_CharacterNamePlate_HealthBar_C_ExecuteUbergraph_WI_CharacterNamePlate_HealthBar");
static_assert(sizeof(WI_CharacterNamePlate_HealthBar_C_ExecuteUbergraph_WI_CharacterNamePlate_HealthBar) == 0x000008, "Wrong size on WI_CharacterNamePlate_HealthBar_C_ExecuteUbergraph_WI_CharacterNamePlate_HealthBar");
static_assert(offsetof(WI_CharacterNamePlate_HealthBar_C_ExecuteUbergraph_WI_CharacterNamePlate_HealthBar, EntryPoint) == 0x000000, "Member 'WI_CharacterNamePlate_HealthBar_C_ExecuteUbergraph_WI_CharacterNamePlate_HealthBar::EntryPoint' has a wrong offset!");
static_assert(offsetof(WI_CharacterNamePlate_HealthBar_C_ExecuteUbergraph_WI_CharacterNamePlate_HealthBar, K2Node_Event_IsDesignTime) == 0x000004, "Member 'WI_CharacterNamePlate_HealthBar_C_ExecuteUbergraph_WI_CharacterNamePlate_HealthBar::K2Node_Event_IsDesignTime' has a wrong offset!");

// Function WI_CharacterNamePlate_HealthBar.WI_CharacterNamePlate_HealthBar_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct WI_CharacterNamePlate_HealthBar_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WI_CharacterNamePlate_HealthBar_C_PreConstruct) == 0x000001, "Wrong alignment on WI_CharacterNamePlate_HealthBar_C_PreConstruct");
static_assert(sizeof(WI_CharacterNamePlate_HealthBar_C_PreConstruct) == 0x000001, "Wrong size on WI_CharacterNamePlate_HealthBar_C_PreConstruct");
static_assert(offsetof(WI_CharacterNamePlate_HealthBar_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'WI_CharacterNamePlate_HealthBar_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function WI_CharacterNamePlate_HealthBar.WI_CharacterNamePlate_HealthBar_C.SetFillFraction
// 0x0018 (0x0018 - 0x0000)
struct WI_CharacterNamePlate_HealthBar_C_SetFillFraction final
{
public:
	double                                        Fill_Fraction;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue;           // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast; // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WI_CharacterNamePlate_HealthBar_C_SetFillFraction) == 0x000008, "Wrong alignment on WI_CharacterNamePlate_HealthBar_C_SetFillFraction");
static_assert(sizeof(WI_CharacterNamePlate_HealthBar_C_SetFillFraction) == 0x000018, "Wrong size on WI_CharacterNamePlate_HealthBar_C_SetFillFraction");
static_assert(offsetof(WI_CharacterNamePlate_HealthBar_C_SetFillFraction, Fill_Fraction) == 0x000000, "Member 'WI_CharacterNamePlate_HealthBar_C_SetFillFraction::Fill_Fraction' has a wrong offset!");
static_assert(offsetof(WI_CharacterNamePlate_HealthBar_C_SetFillFraction, CallFunc_GetDynamicMaterial_ReturnValue) == 0x000008, "Member 'WI_CharacterNamePlate_HealthBar_C_SetFillFraction::CallFunc_GetDynamicMaterial_ReturnValue' has a wrong offset!");
static_assert(offsetof(WI_CharacterNamePlate_HealthBar_C_SetFillFraction, CallFunc_SetScalarParameterValue_Value_ImplicitCast) == 0x000010, "Member 'WI_CharacterNamePlate_HealthBar_C_SetFillFraction::CallFunc_SetScalarParameterValue_Value_ImplicitCast' has a wrong offset!");

// Function WI_CharacterNamePlate_HealthBar.WI_CharacterNamePlate_HealthBar_C.SetMaxHealth
// 0x0010 (0x0010 - 0x0000)
struct WI_CharacterNamePlate_HealthBar_C_SetMaxHealth final
{
public:
	float                                         Value;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue;           // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WI_CharacterNamePlate_HealthBar_C_SetMaxHealth) == 0x000008, "Wrong alignment on WI_CharacterNamePlate_HealthBar_C_SetMaxHealth");
static_assert(sizeof(WI_CharacterNamePlate_HealthBar_C_SetMaxHealth) == 0x000010, "Wrong size on WI_CharacterNamePlate_HealthBar_C_SetMaxHealth");
static_assert(offsetof(WI_CharacterNamePlate_HealthBar_C_SetMaxHealth, Value) == 0x000000, "Member 'WI_CharacterNamePlate_HealthBar_C_SetMaxHealth::Value' has a wrong offset!");
static_assert(offsetof(WI_CharacterNamePlate_HealthBar_C_SetMaxHealth, CallFunc_GetDynamicMaterial_ReturnValue) == 0x000008, "Member 'WI_CharacterNamePlate_HealthBar_C_SetMaxHealth::CallFunc_GetDynamicMaterial_ReturnValue' has a wrong offset!");

// Function WI_CharacterNamePlate_HealthBar.WI_CharacterNamePlate_HealthBar_C.SetTeam
// 0x002C (0x002C - 0x0000)
struct WI_CharacterNamePlate_HealthBar_C_SetTeam final
{
public:
	ETeamType                                     Team_0;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETeamType                                     Temp_byte_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETeamType                                     Temp_byte_Variable_1;                              // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3[0x1];                                        // 0x0003(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateColor                            K2Node_Select_Default;                             // 0x0004(0x0014)()
	struct FSlateColor                            K2Node_Select_Default_1;                           // 0x0018(0x0014)()
};
static_assert(alignof(WI_CharacterNamePlate_HealthBar_C_SetTeam) == 0x000004, "Wrong alignment on WI_CharacterNamePlate_HealthBar_C_SetTeam");
static_assert(sizeof(WI_CharacterNamePlate_HealthBar_C_SetTeam) == 0x00002C, "Wrong size on WI_CharacterNamePlate_HealthBar_C_SetTeam");
static_assert(offsetof(WI_CharacterNamePlate_HealthBar_C_SetTeam, Team_0) == 0x000000, "Member 'WI_CharacterNamePlate_HealthBar_C_SetTeam::Team_0' has a wrong offset!");
static_assert(offsetof(WI_CharacterNamePlate_HealthBar_C_SetTeam, Temp_byte_Variable) == 0x000001, "Member 'WI_CharacterNamePlate_HealthBar_C_SetTeam::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WI_CharacterNamePlate_HealthBar_C_SetTeam, Temp_byte_Variable_1) == 0x000002, "Member 'WI_CharacterNamePlate_HealthBar_C_SetTeam::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WI_CharacterNamePlate_HealthBar_C_SetTeam, K2Node_Select_Default) == 0x000004, "Member 'WI_CharacterNamePlate_HealthBar_C_SetTeam::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WI_CharacterNamePlate_HealthBar_C_SetTeam, K2Node_Select_Default_1) == 0x000018, "Member 'WI_CharacterNamePlate_HealthBar_C_SetTeam::K2Node_Select_Default_1' has a wrong offset!");

}

