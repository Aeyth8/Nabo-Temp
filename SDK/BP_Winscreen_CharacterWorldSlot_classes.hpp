#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Winscreen_CharacterWorldSlot

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "GameplayTags_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_Winscreen_CharacterWorldSlot.BP_Winscreen_CharacterWorldSlot_C
// 0x0038 (0x02C8 - 0x0290)
class ABP_Winscreen_CharacterWorldSlot_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0290(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class USceneComponent*                        FocusPoint;                                        // 0x0298(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UWC_WinscreenNamePlate_C*               WC_WinscreenNamePlate;                             // 0x02A0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x02A8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class APlayerStateJP*                         AssociatedPlayerstate;                             // 0x02B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           AssociatedNeighborIdentifier;                      // 0x02B8(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class ABP_NeighborPreviewActor_C*             PreviewActor;                                      // 0x02C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)

public:
	void EquipUniqueItem();
	void ExecuteUbergraph_BP_Winscreen_CharacterWorldSlot(int32 EntryPoint);
	void GetNeighborIcon(TSoftObjectPtr<class UTexture2D>* Icon);
	void MicrophoneOnStateChanged(bool IsMicrophoneOn);
	void PlayAnimation(const struct FGameplayTag& AnimationContext);
	void SetNameplateText();
	void SpawnNeighborPreview(class APlayerStateJP* PlayerState, const struct FGameplayTag& NeighborIdentifier);
	void UpdateFocusPointHeight();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_Winscreen_CharacterWorldSlot_C">();
	}
	static class ABP_Winscreen_CharacterWorldSlot_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_Winscreen_CharacterWorldSlot_C>();
	}
};
static_assert(alignof(ABP_Winscreen_CharacterWorldSlot_C) == 0x000008, "Wrong alignment on ABP_Winscreen_CharacterWorldSlot_C");
static_assert(sizeof(ABP_Winscreen_CharacterWorldSlot_C) == 0x0002C8, "Wrong size on ABP_Winscreen_CharacterWorldSlot_C");
static_assert(offsetof(ABP_Winscreen_CharacterWorldSlot_C, UberGraphFrame) == 0x000290, "Member 'ABP_Winscreen_CharacterWorldSlot_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_Winscreen_CharacterWorldSlot_C, FocusPoint) == 0x000298, "Member 'ABP_Winscreen_CharacterWorldSlot_C::FocusPoint' has a wrong offset!");
static_assert(offsetof(ABP_Winscreen_CharacterWorldSlot_C, WC_WinscreenNamePlate) == 0x0002A0, "Member 'ABP_Winscreen_CharacterWorldSlot_C::WC_WinscreenNamePlate' has a wrong offset!");
static_assert(offsetof(ABP_Winscreen_CharacterWorldSlot_C, DefaultSceneRoot) == 0x0002A8, "Member 'ABP_Winscreen_CharacterWorldSlot_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ABP_Winscreen_CharacterWorldSlot_C, AssociatedPlayerstate) == 0x0002B0, "Member 'ABP_Winscreen_CharacterWorldSlot_C::AssociatedPlayerstate' has a wrong offset!");
static_assert(offsetof(ABP_Winscreen_CharacterWorldSlot_C, AssociatedNeighborIdentifier) == 0x0002B8, "Member 'ABP_Winscreen_CharacterWorldSlot_C::AssociatedNeighborIdentifier' has a wrong offset!");
static_assert(offsetof(ABP_Winscreen_CharacterWorldSlot_C, PreviewActor) == 0x0002C0, "Member 'ABP_Winscreen_CharacterWorldSlot_C::PreviewActor' has a wrong offset!");

}

