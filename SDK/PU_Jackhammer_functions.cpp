#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PU_Jackhammer

#include "Basic.hpp"

#include "PU_Jackhammer_classes.hpp"
#include "PU_Jackhammer_parameters.hpp"


namespace SDK
{

// Function PU_Jackhammer.PU_Jackhammer_C.BndEvt__PU_Jackhammer_Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature
// (HasOutParams, BlueprintEvent)
// Parameters:
// class UPrimitiveComponent*              OverlappedComponent                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class AActor*                           OtherActor                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*              OtherComp                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// int32                                   OtherBodyIndex                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bFromSweep                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FHitResult                       SweepResult                                            (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)

void APU_Jackhammer_C::BndEvt__PU_Jackhammer_Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PU_Jackhammer_C", "BndEvt__PU_Jackhammer_Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature");

	Params::PU_Jackhammer_C_BndEvt__PU_Jackhammer_Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature Parms{};

	Parms.OverlappedComponent = OverlappedComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.OtherBodyIndex = OtherBodyIndex;
	Parms.bFromSweep = bFromSweep;
	Parms.SweepResult = std::move(SweepResult);

	UObject::ProcessEvent(Func, &Parms);
}


// Function PU_Jackhammer.PU_Jackhammer_C.Bounce
// (BlueprintCallable, BlueprintEvent)

void APU_Jackhammer_C::Bounce()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PU_Jackhammer_C", "Bounce");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PU_Jackhammer.PU_Jackhammer_C.ExecuteUbergraph_PU_Jackhammer
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void APU_Jackhammer_C::ExecuteUbergraph_PU_Jackhammer(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PU_Jackhammer_C", "ExecuteUbergraph_PU_Jackhammer");

	Params::PU_Jackhammer_C_ExecuteUbergraph_PU_Jackhammer Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PU_Jackhammer.PU_Jackhammer_C.GetKnockbackVelocity
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class AActor*                           HitActor                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// struct FVector                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

struct FVector APU_Jackhammer_C::GetKnockbackVelocity(class AActor* HitActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PU_Jackhammer_C", "GetKnockbackVelocity");

	Params::PU_Jackhammer_C_GetKnockbackVelocity Parms{};

	Parms.HitActor = HitActor;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function PU_Jackhammer.PU_Jackhammer_C.GrantJackhammer
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           InteractingActor_0                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void APU_Jackhammer_C::GrantJackhammer(class AActor* InteractingActor_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PU_Jackhammer_C", "GrantJackhammer");

	Params::PU_Jackhammer_C_GrantJackhammer Parms{};

	Parms.InteractingActor_0 = InteractingActor_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PU_Jackhammer.PU_Jackhammer_C.K2_FellOutOfWorld
// (Event, Public, BlueprintEvent)

void APU_Jackhammer_C::K2_FellOutOfWorld()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PU_Jackhammer_C", "K2_FellOutOfWorld");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PU_Jackhammer.PU_Jackhammer_C.Multi_Knocked Back Target
// (Net, NetMulticast, BlueprintCallable, BlueprintEvent)

void APU_Jackhammer_C::Multi_Knocked_Back_Target()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PU_Jackhammer_C", "Multi_Knocked Back Target");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PU_Jackhammer.PU_Jackhammer_C.On Bounce Timer Elapsed
// (BlueprintCallable, BlueprintEvent)

void APU_Jackhammer_C::On_Bounce_Timer_Elapsed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PU_Jackhammer_C", "On Bounce Timer Elapsed");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PU_Jackhammer.PU_Jackhammer_C.PlayPunchCosmetics
// (Public, BlueprintCallable, BlueprintEvent)

void APU_Jackhammer_C::PlayPunchCosmetics()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PU_Jackhammer_C", "PlayPunchCosmetics");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PU_Jackhammer.PU_Jackhammer_C.ReceiveDestroyed
// (Event, Public, BlueprintEvent)

void APU_Jackhammer_C::ReceiveDestroyed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PU_Jackhammer_C", "ReceiveDestroyed");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PU_Jackhammer.PU_Jackhammer_C.CanActivateTrap
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool APU_Jackhammer_C::CanActivateTrap()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PU_Jackhammer_C", "CanActivateTrap");

	Params::PU_Jackhammer_C_CanActivateTrap Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function PU_Jackhammer.PU_Jackhammer_C.Multi_Launch
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          Velocity                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void APU_Jackhammer_C::Multi_Launch(const struct FVector& Velocity)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PU_Jackhammer_C", "Multi_Launch");

	Params::PU_Jackhammer_C_Multi_Launch Parms{};

	Parms.Velocity = std::move(Velocity);

	UObject::ProcessEvent(Func, &Parms);
}


// Function PU_Jackhammer.PU_Jackhammer_C.PostInteract
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           InteractingActor_0                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*              InteractionComponent                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void APU_Jackhammer_C::PostInteract(class AActor* InteractingActor_0, class UPrimitiveComponent* InteractionComponent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PU_Jackhammer_C", "PostInteract");

	Params::PU_Jackhammer_C_PostInteract Parms{};

	Parms.InteractingActor_0 = InteractingActor_0;
	Parms.InteractionComponent = InteractionComponent;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PU_Jackhammer.PU_Jackhammer_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void APU_Jackhammer_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PU_Jackhammer_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}

}

