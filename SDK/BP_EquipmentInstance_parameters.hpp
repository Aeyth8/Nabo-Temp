#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_EquipmentInstance

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "GameplayTags_structs.hpp"


namespace SDK::Params
{

// Function BP_EquipmentInstance.BP_EquipmentInstance_C.AddItemTooltip
// 0x00F0 (0x00F0 - 0x0000)
struct BP_EquipmentInstance_C_AddItemTooltip final
{
public:
	class UObjectiveDefinition*                   K2Node_DynamicCast_AsObjective_Definition;         // 0x0000(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Get_ClassLog_Name_name;                   // 0x0010(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetObjectName_ReturnValue;                // 0x0028(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0038(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0048(0x0048)(HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_GameplayTag_ReturnValue;         // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_91[0x7];                                       // 0x0091(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0098(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x00A8(0x0010)()
	class APawn*                                  CallFunc_GetTypedPawn_ReturnValue;                 // 0x00B8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x00C0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class UObjectiveManagerComponent*             CallFunc_GetComponentByClass_ReturnValue;          // 0x00D0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_DoesPlayerHaveTooltip_HasTooltip;         // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D9[0x7];                                       // 0x00D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerStateJP*                         K2Node_DynamicCast_AsPlayer_State_JP;              // 0x00E0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Set_Contains_ReturnValue;                 // 0x00E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EquipmentInstance_C_AddItemTooltip) == 0x000008, "Wrong alignment on BP_EquipmentInstance_C_AddItemTooltip");
static_assert(sizeof(BP_EquipmentInstance_C_AddItemTooltip) == 0x0000F0, "Wrong size on BP_EquipmentInstance_C_AddItemTooltip");
static_assert(offsetof(BP_EquipmentInstance_C_AddItemTooltip, K2Node_DynamicCast_AsObjective_Definition) == 0x000000, "Member 'BP_EquipmentInstance_C_AddItemTooltip::K2Node_DynamicCast_AsObjective_Definition' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInstance_C_AddItemTooltip, K2Node_DynamicCast_bSuccess) == 0x000008, "Member 'BP_EquipmentInstance_C_AddItemTooltip::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInstance_C_AddItemTooltip, CallFunc_Get_ClassLog_Name_name) == 0x000010, "Member 'BP_EquipmentInstance_C_AddItemTooltip::CallFunc_Get_ClassLog_Name_name' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInstance_C_AddItemTooltip, CallFunc_IsValid_ReturnValue) == 0x000020, "Member 'BP_EquipmentInstance_C_AddItemTooltip::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInstance_C_AddItemTooltip, CallFunc_GetObjectName_ReturnValue) == 0x000028, "Member 'BP_EquipmentInstance_C_AddItemTooltip::CallFunc_GetObjectName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInstance_C_AddItemTooltip, CallFunc_Conv_StringToText_ReturnValue) == 0x000038, "Member 'BP_EquipmentInstance_C_AddItemTooltip::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInstance_C_AddItemTooltip, K2Node_MakeStruct_FormatArgumentData) == 0x000048, "Member 'BP_EquipmentInstance_C_AddItemTooltip::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInstance_C_AddItemTooltip, CallFunc_NotEqual_GameplayTag_ReturnValue) == 0x000090, "Member 'BP_EquipmentInstance_C_AddItemTooltip::CallFunc_NotEqual_GameplayTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInstance_C_AddItemTooltip, K2Node_MakeArray_Array) == 0x000098, "Member 'BP_EquipmentInstance_C_AddItemTooltip::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInstance_C_AddItemTooltip, CallFunc_Format_ReturnValue) == 0x0000A8, "Member 'BP_EquipmentInstance_C_AddItemTooltip::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInstance_C_AddItemTooltip, CallFunc_GetTypedPawn_ReturnValue) == 0x0000B8, "Member 'BP_EquipmentInstance_C_AddItemTooltip::CallFunc_GetTypedPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInstance_C_AddItemTooltip, CallFunc_Conv_TextToString_ReturnValue) == 0x0000C0, "Member 'BP_EquipmentInstance_C_AddItemTooltip::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInstance_C_AddItemTooltip, CallFunc_GetComponentByClass_ReturnValue) == 0x0000D0, "Member 'BP_EquipmentInstance_C_AddItemTooltip::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInstance_C_AddItemTooltip, CallFunc_DoesPlayerHaveTooltip_HasTooltip) == 0x0000D8, "Member 'BP_EquipmentInstance_C_AddItemTooltip::CallFunc_DoesPlayerHaveTooltip_HasTooltip' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInstance_C_AddItemTooltip, K2Node_DynamicCast_AsPlayer_State_JP) == 0x0000E0, "Member 'BP_EquipmentInstance_C_AddItemTooltip::K2Node_DynamicCast_AsPlayer_State_JP' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInstance_C_AddItemTooltip, K2Node_DynamicCast_bSuccess_1) == 0x0000E8, "Member 'BP_EquipmentInstance_C_AddItemTooltip::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInstance_C_AddItemTooltip, CallFunc_Set_Contains_ReturnValue) == 0x0000E9, "Member 'BP_EquipmentInstance_C_AddItemTooltip::CallFunc_Set_Contains_ReturnValue' has a wrong offset!");

// Function BP_EquipmentInstance.BP_EquipmentInstance_C.DoesPlayerHaveTooltip
// 0x0040 (0x0040 - 0x0000)
struct BP_EquipmentInstance_C_DoesPlayerHaveTooltip final
{
public:
	struct FGameplayTag                           TooltipTag;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 PlayerState;                                       // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          HasTooltip;                                        // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObjectiveManagerComponent*             CallFunc_GetComponentByClass_ReturnValue;          // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObjectiveInstance*                     CallFunc_Array_Get_Item;                           // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_GameplayTag_ReturnValue;       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A[0x2];                                       // 0x003A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EquipmentInstance_C_DoesPlayerHaveTooltip) == 0x000008, "Wrong alignment on BP_EquipmentInstance_C_DoesPlayerHaveTooltip");
static_assert(sizeof(BP_EquipmentInstance_C_DoesPlayerHaveTooltip) == 0x000040, "Wrong size on BP_EquipmentInstance_C_DoesPlayerHaveTooltip");
static_assert(offsetof(BP_EquipmentInstance_C_DoesPlayerHaveTooltip, TooltipTag) == 0x000000, "Member 'BP_EquipmentInstance_C_DoesPlayerHaveTooltip::TooltipTag' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInstance_C_DoesPlayerHaveTooltip, PlayerState) == 0x000008, "Member 'BP_EquipmentInstance_C_DoesPlayerHaveTooltip::PlayerState' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInstance_C_DoesPlayerHaveTooltip, HasTooltip) == 0x000010, "Member 'BP_EquipmentInstance_C_DoesPlayerHaveTooltip::HasTooltip' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInstance_C_DoesPlayerHaveTooltip, CallFunc_GetComponentByClass_ReturnValue) == 0x000018, "Member 'BP_EquipmentInstance_C_DoesPlayerHaveTooltip::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInstance_C_DoesPlayerHaveTooltip, Temp_int_Array_Index_Variable) == 0x000020, "Member 'BP_EquipmentInstance_C_DoesPlayerHaveTooltip::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInstance_C_DoesPlayerHaveTooltip, CallFunc_Array_Get_Item) == 0x000028, "Member 'BP_EquipmentInstance_C_DoesPlayerHaveTooltip::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInstance_C_DoesPlayerHaveTooltip, CallFunc_Array_Length_ReturnValue) == 0x000030, "Member 'BP_EquipmentInstance_C_DoesPlayerHaveTooltip::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInstance_C_DoesPlayerHaveTooltip, Temp_int_Loop_Counter_Variable) == 0x000034, "Member 'BP_EquipmentInstance_C_DoesPlayerHaveTooltip::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInstance_C_DoesPlayerHaveTooltip, CallFunc_EqualEqual_GameplayTag_ReturnValue) == 0x000038, "Member 'BP_EquipmentInstance_C_DoesPlayerHaveTooltip::CallFunc_EqualEqual_GameplayTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInstance_C_DoesPlayerHaveTooltip, CallFunc_Less_IntInt_ReturnValue) == 0x000039, "Member 'BP_EquipmentInstance_C_DoesPlayerHaveTooltip::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInstance_C_DoesPlayerHaveTooltip, CallFunc_Add_IntInt_ReturnValue) == 0x00003C, "Member 'BP_EquipmentInstance_C_DoesPlayerHaveTooltip::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function BP_EquipmentInstance.BP_EquipmentInstance_C.ExecuteUbergraph_BP_EquipmentInstance
// 0x01B0 (0x01B0 - 0x0000)
struct BP_EquipmentInstance_C_ExecuteUbergraph_BP_EquipmentInstance final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_8;                   // 0x0004(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate;              // 0x000C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_7;                   // 0x001C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_1;            // 0x0024(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_6;                   // 0x0034(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_2;            // 0x003C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_5;                   // 0x004C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_3;            // 0x0054(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable;                                // 0x0064(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_4;            // 0x006C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_4;                   // 0x007C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_3;                   // 0x0084(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_5;            // 0x008C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_2;                   // 0x009C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_6;            // 0x00A4(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_1;                   // 0x00B4(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_7;            // 0x00BC(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName;                     // 0x00CC(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_8;            // 0x00D4(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_1;                              // 0x00E4(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x00EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_9;                   // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 CallFunc_GetFPPMesh_Mesh1P;                        // 0x00F8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_9;            // 0x0100(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 CallFunc_GetTPPMesh_Mesh;                          // 0x0110(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 CallFunc_GetFPPMesh_Mesh1P_1;                      // 0x0118(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 CallFunc_GetTPPMesh_Mesh_1;                        // 0x0120(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue;              // 0x0128(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue_1;            // 0x0130(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0138(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0139(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_13A[0x2];                                      // 0x013A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x013C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 CallFunc_GetFPPMesh_Mesh1P_2;                      // 0x0140(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0148(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsServer_ReturnValue;                     // 0x014C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14D[0x3];                                      // 0x014D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_GetTypedPawn_ReturnValue;                 // 0x0150(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0158(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_159[0x7];                                      // 0x0159(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPerkManagerComponent*                  CallFunc_GetPerkManagerComponentFromPlayerState_ReturnValue; // 0x0160(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TArray<class UPerkAction*>                    CallFunc_K2_GetAllActionsOfType_ReturnValue;       // 0x0168(0x0010)(ReferenceParm, ContainsInstancedReference)
	class UPerkAction*                            CallFunc_Array_Get_Item;                           // 0x0178(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UPlayMontageCallbackProxy*              CallFunc_CreateProxyObjectForPlayMontage_ReturnValue; // 0x0180(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPA_SwapToolTipOnEquip_C*               K2Node_DynamicCast_AsPA_Swap_Tool_Tip_on_Equip;    // 0x0188(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0190(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0191(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_192[0x2];                                      // 0x0192(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0194(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0198(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_199[0x7];                                      // 0x0199(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPlayMontageCallbackProxy*              CallFunc_CreateProxyObjectForPlayMontage_ReturnValue_1; // 0x01A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x01A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EquipmentInstance_C_ExecuteUbergraph_BP_EquipmentInstance) == 0x000008, "Wrong alignment on BP_EquipmentInstance_C_ExecuteUbergraph_BP_EquipmentInstance");
static_assert(sizeof(BP_EquipmentInstance_C_ExecuteUbergraph_BP_EquipmentInstance) == 0x0001B0, "Wrong size on BP_EquipmentInstance_C_ExecuteUbergraph_BP_EquipmentInstance");
static_assert(offsetof(BP_EquipmentInstance_C_ExecuteUbergraph_BP_EquipmentInstance, EntryPoint) == 0x000000, "Member 'BP_EquipmentInstance_C_ExecuteUbergraph_BP_EquipmentInstance::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInstance_C_ExecuteUbergraph_BP_EquipmentInstance, K2Node_CustomEvent_NotifyName_8) == 0x000004, "Member 'BP_EquipmentInstance_C_ExecuteUbergraph_BP_EquipmentInstance::K2Node_CustomEvent_NotifyName_8' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInstance_C_ExecuteUbergraph_BP_EquipmentInstance, K2Node_CreateDelegate_OutputDelegate) == 0x00000C, "Member 'BP_EquipmentInstance_C_ExecuteUbergraph_BP_EquipmentInstance::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInstance_C_ExecuteUbergraph_BP_EquipmentInstance, K2Node_CustomEvent_NotifyName_7) == 0x00001C, "Member 'BP_EquipmentInstance_C_ExecuteUbergraph_BP_EquipmentInstance::K2Node_CustomEvent_NotifyName_7' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInstance_C_ExecuteUbergraph_BP_EquipmentInstance, K2Node_CreateDelegate_OutputDelegate_1) == 0x000024, "Member 'BP_EquipmentInstance_C_ExecuteUbergraph_BP_EquipmentInstance::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInstance_C_ExecuteUbergraph_BP_EquipmentInstance, K2Node_CustomEvent_NotifyName_6) == 0x000034, "Member 'BP_EquipmentInstance_C_ExecuteUbergraph_BP_EquipmentInstance::K2Node_CustomEvent_NotifyName_6' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInstance_C_ExecuteUbergraph_BP_EquipmentInstance, K2Node_CreateDelegate_OutputDelegate_2) == 0x00003C, "Member 'BP_EquipmentInstance_C_ExecuteUbergraph_BP_EquipmentInstance::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInstance_C_ExecuteUbergraph_BP_EquipmentInstance, K2Node_CustomEvent_NotifyName_5) == 0x00004C, "Member 'BP_EquipmentInstance_C_ExecuteUbergraph_BP_EquipmentInstance::K2Node_CustomEvent_NotifyName_5' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInstance_C_ExecuteUbergraph_BP_EquipmentInstance, K2Node_CreateDelegate_OutputDelegate_3) == 0x000054, "Member 'BP_EquipmentInstance_C_ExecuteUbergraph_BP_EquipmentInstance::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInstance_C_ExecuteUbergraph_BP_EquipmentInstance, Temp_name_Variable) == 0x000064, "Member 'BP_EquipmentInstance_C_ExecuteUbergraph_BP_EquipmentInstance::Temp_name_Variable' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInstance_C_ExecuteUbergraph_BP_EquipmentInstance, K2Node_CreateDelegate_OutputDelegate_4) == 0x00006C, "Member 'BP_EquipmentInstance_C_ExecuteUbergraph_BP_EquipmentInstance::K2Node_CreateDelegate_OutputDelegate_4' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInstance_C_ExecuteUbergraph_BP_EquipmentInstance, K2Node_CustomEvent_NotifyName_4) == 0x00007C, "Member 'BP_EquipmentInstance_C_ExecuteUbergraph_BP_EquipmentInstance::K2Node_CustomEvent_NotifyName_4' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInstance_C_ExecuteUbergraph_BP_EquipmentInstance, K2Node_CustomEvent_NotifyName_3) == 0x000084, "Member 'BP_EquipmentInstance_C_ExecuteUbergraph_BP_EquipmentInstance::K2Node_CustomEvent_NotifyName_3' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInstance_C_ExecuteUbergraph_BP_EquipmentInstance, K2Node_CreateDelegate_OutputDelegate_5) == 0x00008C, "Member 'BP_EquipmentInstance_C_ExecuteUbergraph_BP_EquipmentInstance::K2Node_CreateDelegate_OutputDelegate_5' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInstance_C_ExecuteUbergraph_BP_EquipmentInstance, K2Node_CustomEvent_NotifyName_2) == 0x00009C, "Member 'BP_EquipmentInstance_C_ExecuteUbergraph_BP_EquipmentInstance::K2Node_CustomEvent_NotifyName_2' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInstance_C_ExecuteUbergraph_BP_EquipmentInstance, K2Node_CreateDelegate_OutputDelegate_6) == 0x0000A4, "Member 'BP_EquipmentInstance_C_ExecuteUbergraph_BP_EquipmentInstance::K2Node_CreateDelegate_OutputDelegate_6' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInstance_C_ExecuteUbergraph_BP_EquipmentInstance, K2Node_CustomEvent_NotifyName_1) == 0x0000B4, "Member 'BP_EquipmentInstance_C_ExecuteUbergraph_BP_EquipmentInstance::K2Node_CustomEvent_NotifyName_1' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInstance_C_ExecuteUbergraph_BP_EquipmentInstance, K2Node_CreateDelegate_OutputDelegate_7) == 0x0000BC, "Member 'BP_EquipmentInstance_C_ExecuteUbergraph_BP_EquipmentInstance::K2Node_CreateDelegate_OutputDelegate_7' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInstance_C_ExecuteUbergraph_BP_EquipmentInstance, K2Node_CustomEvent_NotifyName) == 0x0000CC, "Member 'BP_EquipmentInstance_C_ExecuteUbergraph_BP_EquipmentInstance::K2Node_CustomEvent_NotifyName' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInstance_C_ExecuteUbergraph_BP_EquipmentInstance, K2Node_CreateDelegate_OutputDelegate_8) == 0x0000D4, "Member 'BP_EquipmentInstance_C_ExecuteUbergraph_BP_EquipmentInstance::K2Node_CreateDelegate_OutputDelegate_8' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInstance_C_ExecuteUbergraph_BP_EquipmentInstance, Temp_name_Variable_1) == 0x0000E4, "Member 'BP_EquipmentInstance_C_ExecuteUbergraph_BP_EquipmentInstance::Temp_name_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInstance_C_ExecuteUbergraph_BP_EquipmentInstance, Temp_int_Array_Index_Variable) == 0x0000EC, "Member 'BP_EquipmentInstance_C_ExecuteUbergraph_BP_EquipmentInstance::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInstance_C_ExecuteUbergraph_BP_EquipmentInstance, K2Node_CustomEvent_NotifyName_9) == 0x0000F0, "Member 'BP_EquipmentInstance_C_ExecuteUbergraph_BP_EquipmentInstance::K2Node_CustomEvent_NotifyName_9' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInstance_C_ExecuteUbergraph_BP_EquipmentInstance, CallFunc_GetFPPMesh_Mesh1P) == 0x0000F8, "Member 'BP_EquipmentInstance_C_ExecuteUbergraph_BP_EquipmentInstance::CallFunc_GetFPPMesh_Mesh1P' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInstance_C_ExecuteUbergraph_BP_EquipmentInstance, K2Node_CreateDelegate_OutputDelegate_9) == 0x000100, "Member 'BP_EquipmentInstance_C_ExecuteUbergraph_BP_EquipmentInstance::K2Node_CreateDelegate_OutputDelegate_9' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInstance_C_ExecuteUbergraph_BP_EquipmentInstance, CallFunc_GetTPPMesh_Mesh) == 0x000110, "Member 'BP_EquipmentInstance_C_ExecuteUbergraph_BP_EquipmentInstance::CallFunc_GetTPPMesh_Mesh' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInstance_C_ExecuteUbergraph_BP_EquipmentInstance, CallFunc_GetFPPMesh_Mesh1P_1) == 0x000118, "Member 'BP_EquipmentInstance_C_ExecuteUbergraph_BP_EquipmentInstance::CallFunc_GetFPPMesh_Mesh1P_1' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInstance_C_ExecuteUbergraph_BP_EquipmentInstance, CallFunc_GetTPPMesh_Mesh_1) == 0x000120, "Member 'BP_EquipmentInstance_C_ExecuteUbergraph_BP_EquipmentInstance::CallFunc_GetTPPMesh_Mesh_1' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInstance_C_ExecuteUbergraph_BP_EquipmentInstance, CallFunc_GetAnimInstance_ReturnValue) == 0x000128, "Member 'BP_EquipmentInstance_C_ExecuteUbergraph_BP_EquipmentInstance::CallFunc_GetAnimInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInstance_C_ExecuteUbergraph_BP_EquipmentInstance, CallFunc_GetAnimInstance_ReturnValue_1) == 0x000130, "Member 'BP_EquipmentInstance_C_ExecuteUbergraph_BP_EquipmentInstance::CallFunc_GetAnimInstance_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInstance_C_ExecuteUbergraph_BP_EquipmentInstance, CallFunc_IsValid_ReturnValue) == 0x000138, "Member 'BP_EquipmentInstance_C_ExecuteUbergraph_BP_EquipmentInstance::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInstance_C_ExecuteUbergraph_BP_EquipmentInstance, CallFunc_IsValid_ReturnValue_1) == 0x000139, "Member 'BP_EquipmentInstance_C_ExecuteUbergraph_BP_EquipmentInstance::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInstance_C_ExecuteUbergraph_BP_EquipmentInstance, Temp_int_Loop_Counter_Variable) == 0x00013C, "Member 'BP_EquipmentInstance_C_ExecuteUbergraph_BP_EquipmentInstance::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInstance_C_ExecuteUbergraph_BP_EquipmentInstance, CallFunc_GetFPPMesh_Mesh1P_2) == 0x000140, "Member 'BP_EquipmentInstance_C_ExecuteUbergraph_BP_EquipmentInstance::CallFunc_GetFPPMesh_Mesh1P_2' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInstance_C_ExecuteUbergraph_BP_EquipmentInstance, CallFunc_Add_IntInt_ReturnValue) == 0x000148, "Member 'BP_EquipmentInstance_C_ExecuteUbergraph_BP_EquipmentInstance::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInstance_C_ExecuteUbergraph_BP_EquipmentInstance, CallFunc_IsServer_ReturnValue) == 0x00014C, "Member 'BP_EquipmentInstance_C_ExecuteUbergraph_BP_EquipmentInstance::CallFunc_IsServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInstance_C_ExecuteUbergraph_BP_EquipmentInstance, CallFunc_GetTypedPawn_ReturnValue) == 0x000150, "Member 'BP_EquipmentInstance_C_ExecuteUbergraph_BP_EquipmentInstance::CallFunc_GetTypedPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInstance_C_ExecuteUbergraph_BP_EquipmentInstance, CallFunc_IsValid_ReturnValue_2) == 0x000158, "Member 'BP_EquipmentInstance_C_ExecuteUbergraph_BP_EquipmentInstance::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInstance_C_ExecuteUbergraph_BP_EquipmentInstance, CallFunc_GetPerkManagerComponentFromPlayerState_ReturnValue) == 0x000160, "Member 'BP_EquipmentInstance_C_ExecuteUbergraph_BP_EquipmentInstance::CallFunc_GetPerkManagerComponentFromPlayerState_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInstance_C_ExecuteUbergraph_BP_EquipmentInstance, CallFunc_K2_GetAllActionsOfType_ReturnValue) == 0x000168, "Member 'BP_EquipmentInstance_C_ExecuteUbergraph_BP_EquipmentInstance::CallFunc_K2_GetAllActionsOfType_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInstance_C_ExecuteUbergraph_BP_EquipmentInstance, CallFunc_Array_Get_Item) == 0x000178, "Member 'BP_EquipmentInstance_C_ExecuteUbergraph_BP_EquipmentInstance::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInstance_C_ExecuteUbergraph_BP_EquipmentInstance, CallFunc_CreateProxyObjectForPlayMontage_ReturnValue) == 0x000180, "Member 'BP_EquipmentInstance_C_ExecuteUbergraph_BP_EquipmentInstance::CallFunc_CreateProxyObjectForPlayMontage_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInstance_C_ExecuteUbergraph_BP_EquipmentInstance, K2Node_DynamicCast_AsPA_Swap_Tool_Tip_on_Equip) == 0x000188, "Member 'BP_EquipmentInstance_C_ExecuteUbergraph_BP_EquipmentInstance::K2Node_DynamicCast_AsPA_Swap_Tool_Tip_on_Equip' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInstance_C_ExecuteUbergraph_BP_EquipmentInstance, K2Node_DynamicCast_bSuccess) == 0x000190, "Member 'BP_EquipmentInstance_C_ExecuteUbergraph_BP_EquipmentInstance::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInstance_C_ExecuteUbergraph_BP_EquipmentInstance, CallFunc_IsValid_ReturnValue_3) == 0x000191, "Member 'BP_EquipmentInstance_C_ExecuteUbergraph_BP_EquipmentInstance::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInstance_C_ExecuteUbergraph_BP_EquipmentInstance, CallFunc_Array_Length_ReturnValue) == 0x000194, "Member 'BP_EquipmentInstance_C_ExecuteUbergraph_BP_EquipmentInstance::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInstance_C_ExecuteUbergraph_BP_EquipmentInstance, CallFunc_Less_IntInt_ReturnValue) == 0x000198, "Member 'BP_EquipmentInstance_C_ExecuteUbergraph_BP_EquipmentInstance::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInstance_C_ExecuteUbergraph_BP_EquipmentInstance, CallFunc_CreateProxyObjectForPlayMontage_ReturnValue_1) == 0x0001A0, "Member 'BP_EquipmentInstance_C_ExecuteUbergraph_BP_EquipmentInstance::CallFunc_CreateProxyObjectForPlayMontage_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInstance_C_ExecuteUbergraph_BP_EquipmentInstance, CallFunc_IsValid_ReturnValue_4) == 0x0001A8, "Member 'BP_EquipmentInstance_C_ExecuteUbergraph_BP_EquipmentInstance::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");

// Function BP_EquipmentInstance.BP_EquipmentInstance_C.GetFPPMesh
// 0x0010 (0x0010 - 0x0000)
struct BP_EquipmentInstance_C_GetFPPMesh final
{
public:
	class USkeletalMeshComponent*                 Mesh1P;                                            // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class ABP_MovementCharacter_C*                CallFunc_GetTypedPawn_ReturnValue;                 // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EquipmentInstance_C_GetFPPMesh) == 0x000008, "Wrong alignment on BP_EquipmentInstance_C_GetFPPMesh");
static_assert(sizeof(BP_EquipmentInstance_C_GetFPPMesh) == 0x000010, "Wrong size on BP_EquipmentInstance_C_GetFPPMesh");
static_assert(offsetof(BP_EquipmentInstance_C_GetFPPMesh, Mesh1P) == 0x000000, "Member 'BP_EquipmentInstance_C_GetFPPMesh::Mesh1P' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInstance_C_GetFPPMesh, CallFunc_GetTypedPawn_ReturnValue) == 0x000008, "Member 'BP_EquipmentInstance_C_GetFPPMesh::CallFunc_GetTypedPawn_ReturnValue' has a wrong offset!");

// Function BP_EquipmentInstance.BP_EquipmentInstance_C.GetTPPMesh
// 0x0010 (0x0010 - 0x0000)
struct BP_EquipmentInstance_C_GetTPPMesh final
{
public:
	class USkeletalMeshComponent*                 Mesh;                                              // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class ABP_MovementCharacter_C*                CallFunc_GetTypedPawn_ReturnValue;                 // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EquipmentInstance_C_GetTPPMesh) == 0x000008, "Wrong alignment on BP_EquipmentInstance_C_GetTPPMesh");
static_assert(sizeof(BP_EquipmentInstance_C_GetTPPMesh) == 0x000010, "Wrong size on BP_EquipmentInstance_C_GetTPPMesh");
static_assert(offsetof(BP_EquipmentInstance_C_GetTPPMesh, Mesh) == 0x000000, "Member 'BP_EquipmentInstance_C_GetTPPMesh::Mesh' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInstance_C_GetTPPMesh, CallFunc_GetTypedPawn_ReturnValue) == 0x000008, "Member 'BP_EquipmentInstance_C_GetTPPMesh::CallFunc_GetTypedPawn_ReturnValue' has a wrong offset!");

// Function BP_EquipmentInstance.BP_EquipmentInstance_C.IsFPPMontageDataAssetValid
// 0x0020 (0x0020 - 0x0000)
struct BP_EquipmentInstance_C_IsFPPMontageDataAssetValid final
{
public:
	class UCharacterItemAnimDefinition*           MontageFPPDataAsset_0;                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsEmpty_ReturnValue;                // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A[0x6];                                        // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UAnimMontage*>                   K2Node_MakeArray_Array;                            // 0x0010(0x0010)(ReferenceParm)
};
static_assert(alignof(BP_EquipmentInstance_C_IsFPPMontageDataAssetValid) == 0x000008, "Wrong alignment on BP_EquipmentInstance_C_IsFPPMontageDataAssetValid");
static_assert(sizeof(BP_EquipmentInstance_C_IsFPPMontageDataAssetValid) == 0x000020, "Wrong size on BP_EquipmentInstance_C_IsFPPMontageDataAssetValid");
static_assert(offsetof(BP_EquipmentInstance_C_IsFPPMontageDataAssetValid, MontageFPPDataAsset_0) == 0x000000, "Member 'BP_EquipmentInstance_C_IsFPPMontageDataAssetValid::MontageFPPDataAsset_0' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInstance_C_IsFPPMontageDataAssetValid, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'BP_EquipmentInstance_C_IsFPPMontageDataAssetValid::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInstance_C_IsFPPMontageDataAssetValid, CallFunc_Array_IsEmpty_ReturnValue) == 0x000009, "Member 'BP_EquipmentInstance_C_IsFPPMontageDataAssetValid::CallFunc_Array_IsEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInstance_C_IsFPPMontageDataAssetValid, K2Node_MakeArray_Array) == 0x000010, "Member 'BP_EquipmentInstance_C_IsFPPMontageDataAssetValid::K2Node_MakeArray_Array' has a wrong offset!");

// Function BP_EquipmentInstance.BP_EquipmentInstance_C.IsTPPMontageDataAssetValid
// 0x0048 (0x0048 - 0x0000)
struct BP_EquipmentInstance_C_IsTPPMontageDataAssetValid final
{
public:
	class UCharacterItemAnimDefinition*           MontageTPPDataAsset_0;                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Get_ClassLog_Name_name;                   // 0x0010(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsEmpty_ReturnValue;                // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Get_ClassLog_Name_name_1;                 // 0x0028(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	TArray<class UAnimMontage*>                   K2Node_MakeArray_Array;                            // 0x0038(0x0010)(ReferenceParm)
};
static_assert(alignof(BP_EquipmentInstance_C_IsTPPMontageDataAssetValid) == 0x000008, "Wrong alignment on BP_EquipmentInstance_C_IsTPPMontageDataAssetValid");
static_assert(sizeof(BP_EquipmentInstance_C_IsTPPMontageDataAssetValid) == 0x000048, "Wrong size on BP_EquipmentInstance_C_IsTPPMontageDataAssetValid");
static_assert(offsetof(BP_EquipmentInstance_C_IsTPPMontageDataAssetValid, MontageTPPDataAsset_0) == 0x000000, "Member 'BP_EquipmentInstance_C_IsTPPMontageDataAssetValid::MontageTPPDataAsset_0' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInstance_C_IsTPPMontageDataAssetValid, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'BP_EquipmentInstance_C_IsTPPMontageDataAssetValid::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInstance_C_IsTPPMontageDataAssetValid, CallFunc_Get_ClassLog_Name_name) == 0x000010, "Member 'BP_EquipmentInstance_C_IsTPPMontageDataAssetValid::CallFunc_Get_ClassLog_Name_name' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInstance_C_IsTPPMontageDataAssetValid, CallFunc_Array_IsEmpty_ReturnValue) == 0x000020, "Member 'BP_EquipmentInstance_C_IsTPPMontageDataAssetValid::CallFunc_Array_IsEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInstance_C_IsTPPMontageDataAssetValid, CallFunc_Get_ClassLog_Name_name_1) == 0x000028, "Member 'BP_EquipmentInstance_C_IsTPPMontageDataAssetValid::CallFunc_Get_ClassLog_Name_name_1' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInstance_C_IsTPPMontageDataAssetValid, K2Node_MakeArray_Array) == 0x000038, "Member 'BP_EquipmentInstance_C_IsTPPMontageDataAssetValid::K2Node_MakeArray_Array' has a wrong offset!");

// Function BP_EquipmentInstance.BP_EquipmentInstance_C.OnBlendOut_22C8F72A4707A5842D9F828A938A9C5B
// 0x0008 (0x0008 - 0x0000)
struct BP_EquipmentInstance_C_OnBlendOut_22C8F72A4707A5842D9F828A938A9C5B final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EquipmentInstance_C_OnBlendOut_22C8F72A4707A5842D9F828A938A9C5B) == 0x000004, "Wrong alignment on BP_EquipmentInstance_C_OnBlendOut_22C8F72A4707A5842D9F828A938A9C5B");
static_assert(sizeof(BP_EquipmentInstance_C_OnBlendOut_22C8F72A4707A5842D9F828A938A9C5B) == 0x000008, "Wrong size on BP_EquipmentInstance_C_OnBlendOut_22C8F72A4707A5842D9F828A938A9C5B");
static_assert(offsetof(BP_EquipmentInstance_C_OnBlendOut_22C8F72A4707A5842D9F828A938A9C5B, NotifyName) == 0x000000, "Member 'BP_EquipmentInstance_C_OnBlendOut_22C8F72A4707A5842D9F828A938A9C5B::NotifyName' has a wrong offset!");

// Function BP_EquipmentInstance.BP_EquipmentInstance_C.OnBlendOut_47952827479B20B869AED4ABD5CBCD3D
// 0x0008 (0x0008 - 0x0000)
struct BP_EquipmentInstance_C_OnBlendOut_47952827479B20B869AED4ABD5CBCD3D final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EquipmentInstance_C_OnBlendOut_47952827479B20B869AED4ABD5CBCD3D) == 0x000004, "Wrong alignment on BP_EquipmentInstance_C_OnBlendOut_47952827479B20B869AED4ABD5CBCD3D");
static_assert(sizeof(BP_EquipmentInstance_C_OnBlendOut_47952827479B20B869AED4ABD5CBCD3D) == 0x000008, "Wrong size on BP_EquipmentInstance_C_OnBlendOut_47952827479B20B869AED4ABD5CBCD3D");
static_assert(offsetof(BP_EquipmentInstance_C_OnBlendOut_47952827479B20B869AED4ABD5CBCD3D, NotifyName) == 0x000000, "Member 'BP_EquipmentInstance_C_OnBlendOut_47952827479B20B869AED4ABD5CBCD3D::NotifyName' has a wrong offset!");

// Function BP_EquipmentInstance.BP_EquipmentInstance_C.OnCompleted_22C8F72A4707A5842D9F828A938A9C5B
// 0x0008 (0x0008 - 0x0000)
struct BP_EquipmentInstance_C_OnCompleted_22C8F72A4707A5842D9F828A938A9C5B final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EquipmentInstance_C_OnCompleted_22C8F72A4707A5842D9F828A938A9C5B) == 0x000004, "Wrong alignment on BP_EquipmentInstance_C_OnCompleted_22C8F72A4707A5842D9F828A938A9C5B");
static_assert(sizeof(BP_EquipmentInstance_C_OnCompleted_22C8F72A4707A5842D9F828A938A9C5B) == 0x000008, "Wrong size on BP_EquipmentInstance_C_OnCompleted_22C8F72A4707A5842D9F828A938A9C5B");
static_assert(offsetof(BP_EquipmentInstance_C_OnCompleted_22C8F72A4707A5842D9F828A938A9C5B, NotifyName) == 0x000000, "Member 'BP_EquipmentInstance_C_OnCompleted_22C8F72A4707A5842D9F828A938A9C5B::NotifyName' has a wrong offset!");

// Function BP_EquipmentInstance.BP_EquipmentInstance_C.OnCompleted_47952827479B20B869AED4ABD5CBCD3D
// 0x0008 (0x0008 - 0x0000)
struct BP_EquipmentInstance_C_OnCompleted_47952827479B20B869AED4ABD5CBCD3D final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EquipmentInstance_C_OnCompleted_47952827479B20B869AED4ABD5CBCD3D) == 0x000004, "Wrong alignment on BP_EquipmentInstance_C_OnCompleted_47952827479B20B869AED4ABD5CBCD3D");
static_assert(sizeof(BP_EquipmentInstance_C_OnCompleted_47952827479B20B869AED4ABD5CBCD3D) == 0x000008, "Wrong size on BP_EquipmentInstance_C_OnCompleted_47952827479B20B869AED4ABD5CBCD3D");
static_assert(offsetof(BP_EquipmentInstance_C_OnCompleted_47952827479B20B869AED4ABD5CBCD3D, NotifyName) == 0x000000, "Member 'BP_EquipmentInstance_C_OnCompleted_47952827479B20B869AED4ABD5CBCD3D::NotifyName' has a wrong offset!");

// Function BP_EquipmentInstance.BP_EquipmentInstance_C.OnInterrupted_22C8F72A4707A5842D9F828A938A9C5B
// 0x0008 (0x0008 - 0x0000)
struct BP_EquipmentInstance_C_OnInterrupted_22C8F72A4707A5842D9F828A938A9C5B final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EquipmentInstance_C_OnInterrupted_22C8F72A4707A5842D9F828A938A9C5B) == 0x000004, "Wrong alignment on BP_EquipmentInstance_C_OnInterrupted_22C8F72A4707A5842D9F828A938A9C5B");
static_assert(sizeof(BP_EquipmentInstance_C_OnInterrupted_22C8F72A4707A5842D9F828A938A9C5B) == 0x000008, "Wrong size on BP_EquipmentInstance_C_OnInterrupted_22C8F72A4707A5842D9F828A938A9C5B");
static_assert(offsetof(BP_EquipmentInstance_C_OnInterrupted_22C8F72A4707A5842D9F828A938A9C5B, NotifyName) == 0x000000, "Member 'BP_EquipmentInstance_C_OnInterrupted_22C8F72A4707A5842D9F828A938A9C5B::NotifyName' has a wrong offset!");

// Function BP_EquipmentInstance.BP_EquipmentInstance_C.OnInterrupted_47952827479B20B869AED4ABD5CBCD3D
// 0x0008 (0x0008 - 0x0000)
struct BP_EquipmentInstance_C_OnInterrupted_47952827479B20B869AED4ABD5CBCD3D final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EquipmentInstance_C_OnInterrupted_47952827479B20B869AED4ABD5CBCD3D) == 0x000004, "Wrong alignment on BP_EquipmentInstance_C_OnInterrupted_47952827479B20B869AED4ABD5CBCD3D");
static_assert(sizeof(BP_EquipmentInstance_C_OnInterrupted_47952827479B20B869AED4ABD5CBCD3D) == 0x000008, "Wrong size on BP_EquipmentInstance_C_OnInterrupted_47952827479B20B869AED4ABD5CBCD3D");
static_assert(offsetof(BP_EquipmentInstance_C_OnInterrupted_47952827479B20B869AED4ABD5CBCD3D, NotifyName) == 0x000000, "Member 'BP_EquipmentInstance_C_OnInterrupted_47952827479B20B869AED4ABD5CBCD3D::NotifyName' has a wrong offset!");

// Function BP_EquipmentInstance.BP_EquipmentInstance_C.OnNotifyBegin_22C8F72A4707A5842D9F828A938A9C5B
// 0x0008 (0x0008 - 0x0000)
struct BP_EquipmentInstance_C_OnNotifyBegin_22C8F72A4707A5842D9F828A938A9C5B final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EquipmentInstance_C_OnNotifyBegin_22C8F72A4707A5842D9F828A938A9C5B) == 0x000004, "Wrong alignment on BP_EquipmentInstance_C_OnNotifyBegin_22C8F72A4707A5842D9F828A938A9C5B");
static_assert(sizeof(BP_EquipmentInstance_C_OnNotifyBegin_22C8F72A4707A5842D9F828A938A9C5B) == 0x000008, "Wrong size on BP_EquipmentInstance_C_OnNotifyBegin_22C8F72A4707A5842D9F828A938A9C5B");
static_assert(offsetof(BP_EquipmentInstance_C_OnNotifyBegin_22C8F72A4707A5842D9F828A938A9C5B, NotifyName) == 0x000000, "Member 'BP_EquipmentInstance_C_OnNotifyBegin_22C8F72A4707A5842D9F828A938A9C5B::NotifyName' has a wrong offset!");

// Function BP_EquipmentInstance.BP_EquipmentInstance_C.OnNotifyBegin_47952827479B20B869AED4ABD5CBCD3D
// 0x0008 (0x0008 - 0x0000)
struct BP_EquipmentInstance_C_OnNotifyBegin_47952827479B20B869AED4ABD5CBCD3D final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EquipmentInstance_C_OnNotifyBegin_47952827479B20B869AED4ABD5CBCD3D) == 0x000004, "Wrong alignment on BP_EquipmentInstance_C_OnNotifyBegin_47952827479B20B869AED4ABD5CBCD3D");
static_assert(sizeof(BP_EquipmentInstance_C_OnNotifyBegin_47952827479B20B869AED4ABD5CBCD3D) == 0x000008, "Wrong size on BP_EquipmentInstance_C_OnNotifyBegin_47952827479B20B869AED4ABD5CBCD3D");
static_assert(offsetof(BP_EquipmentInstance_C_OnNotifyBegin_47952827479B20B869AED4ABD5CBCD3D, NotifyName) == 0x000000, "Member 'BP_EquipmentInstance_C_OnNotifyBegin_47952827479B20B869AED4ABD5CBCD3D::NotifyName' has a wrong offset!");

// Function BP_EquipmentInstance.BP_EquipmentInstance_C.OnNotifyEnd_22C8F72A4707A5842D9F828A938A9C5B
// 0x0008 (0x0008 - 0x0000)
struct BP_EquipmentInstance_C_OnNotifyEnd_22C8F72A4707A5842D9F828A938A9C5B final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EquipmentInstance_C_OnNotifyEnd_22C8F72A4707A5842D9F828A938A9C5B) == 0x000004, "Wrong alignment on BP_EquipmentInstance_C_OnNotifyEnd_22C8F72A4707A5842D9F828A938A9C5B");
static_assert(sizeof(BP_EquipmentInstance_C_OnNotifyEnd_22C8F72A4707A5842D9F828A938A9C5B) == 0x000008, "Wrong size on BP_EquipmentInstance_C_OnNotifyEnd_22C8F72A4707A5842D9F828A938A9C5B");
static_assert(offsetof(BP_EquipmentInstance_C_OnNotifyEnd_22C8F72A4707A5842D9F828A938A9C5B, NotifyName) == 0x000000, "Member 'BP_EquipmentInstance_C_OnNotifyEnd_22C8F72A4707A5842D9F828A938A9C5B::NotifyName' has a wrong offset!");

// Function BP_EquipmentInstance.BP_EquipmentInstance_C.OnNotifyEnd_47952827479B20B869AED4ABD5CBCD3D
// 0x0008 (0x0008 - 0x0000)
struct BP_EquipmentInstance_C_OnNotifyEnd_47952827479B20B869AED4ABD5CBCD3D final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EquipmentInstance_C_OnNotifyEnd_47952827479B20B869AED4ABD5CBCD3D) == 0x000004, "Wrong alignment on BP_EquipmentInstance_C_OnNotifyEnd_47952827479B20B869AED4ABD5CBCD3D");
static_assert(sizeof(BP_EquipmentInstance_C_OnNotifyEnd_47952827479B20B869AED4ABD5CBCD3D) == 0x000008, "Wrong size on BP_EquipmentInstance_C_OnNotifyEnd_47952827479B20B869AED4ABD5CBCD3D");
static_assert(offsetof(BP_EquipmentInstance_C_OnNotifyEnd_47952827479B20B869AED4ABD5CBCD3D, NotifyName) == 0x000000, "Member 'BP_EquipmentInstance_C_OnNotifyEnd_47952827479B20B869AED4ABD5CBCD3D::NotifyName' has a wrong offset!");

}

