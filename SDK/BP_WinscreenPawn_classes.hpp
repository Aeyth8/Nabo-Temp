#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_WinscreenPawn

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "JP_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_WinscreenPawn.BP_WinscreenPawn_C
// 0x0040 (0x0358 - 0x0318)
class ABP_WinscreenPawn_C final : public APawn
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0318(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWC_WinscreenNamePlate_C*               WC_WinscreenNamePlate;                             // 0x0320(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UArrowComponent*                        Arrow;                                             // 0x0328(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 SkeletalMesh;                                      // 0x0330(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x0338(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	bool                                          WinningTeam;                                       // 0x0340(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	ECharacterName                                Name_0;                                            // 0x0341(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_342[0x6];                                      // 0x0342(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 PlayerName;                                        // 0x0348(0x0010)(Edit, BlueprintVisible, Net, ZeroConstructor, ExposeOnSpawn, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_WinscreenPawn(int32 EntryPoint);
	void GetBaseAnimationValues(ECharacterName CharacterName, ECharacterName* Character, class UAnimMontage** MontageToPlay);
	void GetCorrectPortrait(class UTexture2D** Texture);
	void OnBlendOut_1E0A6A17493AA66BD82A258F852A0F22(class FName NotifyName);
	void OnBlendOut_5789175740702D29E05F5F92C3839077(class FName NotifyName);
	void OnCompleted_1E0A6A17493AA66BD82A258F852A0F22(class FName NotifyName);
	void OnCompleted_5789175740702D29E05F5F92C3839077(class FName NotifyName);
	void OnInterrupted_1E0A6A17493AA66BD82A258F852A0F22(class FName NotifyName);
	void OnInterrupted_5789175740702D29E05F5F92C3839077(class FName NotifyName);
	void OnNotifyBegin_1E0A6A17493AA66BD82A258F852A0F22(class FName NotifyName);
	void OnNotifyBegin_5789175740702D29E05F5F92C3839077(class FName NotifyName);
	void OnNotifyEnd_1E0A6A17493AA66BD82A258F852A0F22(class FName NotifyName);
	void OnNotifyEnd_5789175740702D29E05F5F92C3839077(class FName NotifyName);
	void Play_Player_Input_Montage(class UAnimMontage* MontageToPlay);
	void Set_Mesh(class USkeletalMesh* NewMesh, ECharacterName CharacterName);
	void SetNameplateVisibility(bool Visible);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_WinscreenPawn_C">();
	}
	static class ABP_WinscreenPawn_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_WinscreenPawn_C>();
	}
};
static_assert(alignof(ABP_WinscreenPawn_C) == 0x000008, "Wrong alignment on ABP_WinscreenPawn_C");
static_assert(sizeof(ABP_WinscreenPawn_C) == 0x000358, "Wrong size on ABP_WinscreenPawn_C");
static_assert(offsetof(ABP_WinscreenPawn_C, UberGraphFrame) == 0x000318, "Member 'ABP_WinscreenPawn_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_WinscreenPawn_C, WC_WinscreenNamePlate) == 0x000320, "Member 'ABP_WinscreenPawn_C::WC_WinscreenNamePlate' has a wrong offset!");
static_assert(offsetof(ABP_WinscreenPawn_C, Arrow) == 0x000328, "Member 'ABP_WinscreenPawn_C::Arrow' has a wrong offset!");
static_assert(offsetof(ABP_WinscreenPawn_C, SkeletalMesh) == 0x000330, "Member 'ABP_WinscreenPawn_C::SkeletalMesh' has a wrong offset!");
static_assert(offsetof(ABP_WinscreenPawn_C, DefaultSceneRoot) == 0x000338, "Member 'ABP_WinscreenPawn_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ABP_WinscreenPawn_C, WinningTeam) == 0x000340, "Member 'ABP_WinscreenPawn_C::WinningTeam' has a wrong offset!");
static_assert(offsetof(ABP_WinscreenPawn_C, Name_0) == 0x000341, "Member 'ABP_WinscreenPawn_C::Name_0' has a wrong offset!");
static_assert(offsetof(ABP_WinscreenPawn_C, PlayerName) == 0x000348, "Member 'ABP_WinscreenPawn_C::PlayerName' has a wrong offset!");

}

