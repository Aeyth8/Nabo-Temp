#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Flower

#include "Basic.hpp"

#include "E_MaterialTypes_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "E_ImpactEffect_structs.hpp"
#include "JP_structs.hpp"
#include "Engine_structs.hpp"
#include "GameplayAbilities_structs.hpp"


namespace SDK::Params
{

// Function BP_Flower.BP_Flower_C.BndEvt__BP_Flower_AbilitySystemComponentIW_K2Node_ComponentBoundEvent_0_OnGameplayEffectAppliedDelegateBP__DelegateSignature
// 0x02A8 (0x02A8 - 0x0000)
struct BP_Flower_C_BndEvt__BP_Flower_AbilitySystemComponentIW_K2Node_ComponentBoundEvent_0_OnGameplayEffectAppliedDelegateBP__DelegateSignature final
{
public:
	class UAbilitySystemComponent*                AbilitySystemComponent;                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FGameplayEffectSpec                    Spec;                                              // 0x0008(0x0298)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FActiveGameplayEffectHandle            Handle;                                            // 0x02A0(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Flower_C_BndEvt__BP_Flower_AbilitySystemComponentIW_K2Node_ComponentBoundEvent_0_OnGameplayEffectAppliedDelegateBP__DelegateSignature) == 0x000008, "Wrong alignment on BP_Flower_C_BndEvt__BP_Flower_AbilitySystemComponentIW_K2Node_ComponentBoundEvent_0_OnGameplayEffectAppliedDelegateBP__DelegateSignature");
static_assert(sizeof(BP_Flower_C_BndEvt__BP_Flower_AbilitySystemComponentIW_K2Node_ComponentBoundEvent_0_OnGameplayEffectAppliedDelegateBP__DelegateSignature) == 0x0002A8, "Wrong size on BP_Flower_C_BndEvt__BP_Flower_AbilitySystemComponentIW_K2Node_ComponentBoundEvent_0_OnGameplayEffectAppliedDelegateBP__DelegateSignature");
static_assert(offsetof(BP_Flower_C_BndEvt__BP_Flower_AbilitySystemComponentIW_K2Node_ComponentBoundEvent_0_OnGameplayEffectAppliedDelegateBP__DelegateSignature, AbilitySystemComponent) == 0x000000, "Member 'BP_Flower_C_BndEvt__BP_Flower_AbilitySystemComponentIW_K2Node_ComponentBoundEvent_0_OnGameplayEffectAppliedDelegateBP__DelegateSignature::AbilitySystemComponent' has a wrong offset!");
static_assert(offsetof(BP_Flower_C_BndEvt__BP_Flower_AbilitySystemComponentIW_K2Node_ComponentBoundEvent_0_OnGameplayEffectAppliedDelegateBP__DelegateSignature, Spec) == 0x000008, "Member 'BP_Flower_C_BndEvt__BP_Flower_AbilitySystemComponentIW_K2Node_ComponentBoundEvent_0_OnGameplayEffectAppliedDelegateBP__DelegateSignature::Spec' has a wrong offset!");
static_assert(offsetof(BP_Flower_C_BndEvt__BP_Flower_AbilitySystemComponentIW_K2Node_ComponentBoundEvent_0_OnGameplayEffectAppliedDelegateBP__DelegateSignature, Handle) == 0x0002A0, "Member 'BP_Flower_C_BndEvt__BP_Flower_AbilitySystemComponentIW_K2Node_ComponentBoundEvent_0_OnGameplayEffectAppliedDelegateBP__DelegateSignature::Handle' has a wrong offset!");

// Function BP_Flower.BP_Flower_C.ChangeScore
// 0x0038 (0x0038 - 0x0000)
struct BP_Flower_C_ChangeScore final
{
public:
	bool                                          Increase;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UEconomySubsystem*                      CallFunc_GetWorldSubsystem_ReturnValue;            // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UEconomySubsystem*                      CallFunc_GetWorldSubsystem_ReturnValue_1;          // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0018(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_WithdrawEconomyFromTeamAtPoint_ReturnValue; // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Flower_C_ChangeScore) == 0x000008, "Wrong alignment on BP_Flower_C_ChangeScore");
static_assert(sizeof(BP_Flower_C_ChangeScore) == 0x000038, "Wrong size on BP_Flower_C_ChangeScore");
static_assert(offsetof(BP_Flower_C_ChangeScore, Increase) == 0x000000, "Member 'BP_Flower_C_ChangeScore::Increase' has a wrong offset!");
static_assert(offsetof(BP_Flower_C_ChangeScore, CallFunc_GetWorldSubsystem_ReturnValue) == 0x000008, "Member 'BP_Flower_C_ChangeScore::CallFunc_GetWorldSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Flower_C_ChangeScore, CallFunc_GetWorldSubsystem_ReturnValue_1) == 0x000010, "Member 'BP_Flower_C_ChangeScore::CallFunc_GetWorldSubsystem_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Flower_C_ChangeScore, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000018, "Member 'BP_Flower_C_ChangeScore::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Flower_C_ChangeScore, CallFunc_WithdrawEconomyFromTeamAtPoint_ReturnValue) == 0x000030, "Member 'BP_Flower_C_ChangeScore::CallFunc_WithdrawEconomyFromTeamAtPoint_ReturnValue' has a wrong offset!");

// Function BP_Flower.BP_Flower_C.ExecuteUbergraph_BP_Flower
// 0x0780 (0x0780 - 0x0000)
struct BP_Flower_C_ExecuteUbergraph_BP_Flower final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue;       // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Lerp_ReturnValue;                         // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UEconomySubsystem*                      CallFunc_GetWorldSubsystem_ReturnValue;            // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Event_Direction;                            // 0x0018(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_Delta;                                // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_Event_Causer;                               // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FCombatParticipant                     K2Node_Event_CombatParticipant;                    // 0x0040(0x0060)(ConstParm)
	struct FKillMethod                            K2Node_Event_KillMethod;                           // 0x00A0(0x02E8)(ConstParm)
	struct FVector_NetQuantize                    K2Node_Event_Location;                             // 0x0388(0x0018)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x03A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x03A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x03A2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A3[0x5];                                      // 0x03A3(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	const class AActor*                           K2Node_Event_AttackingActor;                       // 0x03A8(0x0008)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeUnclamped_ReturnValue;            // 0x03B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue_1;                       // 0x03B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_HighlightManager_C*                 CallFunc_GetActorOfClass_ReturnValue;              // 0x03C0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_Health;                               // 0x03C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_MaxHealth;                            // 0x03CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_DoubleDouble_ReturnValue;    // 0x03D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D1[0x7];                                      // 0x03D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x03D8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x03F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3F1[0x7];                                      // 0x03F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x03F8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UNiagaraComponent*                      CallFunc_SpawnSystemAtLocation_ReturnValue;        // 0x0410(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue_1;    // 0x0418(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue_2;    // 0x0430(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UNiagaraComponent*                      CallFunc_SpawnSystemAtLocation_ReturnValue_1;      // 0x0448(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UNiagaraComponent*                      CallFunc_SpawnSystemAtLocation_ReturnValue_2;      // 0x0450(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     CallFunc_GetMaterial_ReturnValue;                  // 0x0458(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x0460(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAbilitySystemComponent*                K2Node_ComponentBoundEvent_AbilitySystemComponent; // 0x0468(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FGameplayEffectSpec                    K2Node_ComponentBoundEvent_Spec;                   // 0x0470(0x0298)(ConstParm)
	struct FActiveGameplayEffectHandle            K2Node_ComponentBoundEvent_Handle;                 // 0x0708(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FGameplayEffectContextHandle           CallFunc_GetEffectContextHandleFromGameplayEffectSpec_ReturnValue; // 0x0710(0x0018)()
	class AActor*                                 CallFunc_EffectContextGetEffectCauser_ReturnValue; // 0x0728(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0730(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_731[0x7];                                      // 0x0731(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Lerp_Alpha_ImplicitCast;                  // 0x0738(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetMorphTarget_Value_ImplicitCast;        // 0x0740(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetMorphTarget_Value_ImplicitCast_1;      // 0x0744(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_Alpha_ImplicitCast_1;                // 0x0748(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast; // 0x0750(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_754[0x4];                                      // 0x0754(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_VariableSet_PreviousHealth_ImplicitCast;    // 0x0758(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Less_DoubleDouble_A_ImplicitCast;         // 0x0760(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_VariableSet_MaxHealth_ImplicitCast;         // 0x0768(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GreaterEqual_DoubleDouble_B_ImplicitCast; // 0x0770(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetMorphTarget_Value_ImplicitCast_2;      // 0x0778(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetMorphTarget_Value_ImplicitCast_3;      // 0x077C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Flower_C_ExecuteUbergraph_BP_Flower) == 0x000008, "Wrong alignment on BP_Flower_C_ExecuteUbergraph_BP_Flower");
static_assert(sizeof(BP_Flower_C_ExecuteUbergraph_BP_Flower) == 0x000780, "Wrong size on BP_Flower_C_ExecuteUbergraph_BP_Flower");
static_assert(offsetof(BP_Flower_C_ExecuteUbergraph_BP_Flower, EntryPoint) == 0x000000, "Member 'BP_Flower_C_ExecuteUbergraph_BP_Flower::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_Flower_C_ExecuteUbergraph_BP_Flower, CallFunc_LessEqual_DoubleDouble_ReturnValue) == 0x000004, "Member 'BP_Flower_C_ExecuteUbergraph_BP_Flower::CallFunc_LessEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Flower_C_ExecuteUbergraph_BP_Flower, CallFunc_Lerp_ReturnValue) == 0x000008, "Member 'BP_Flower_C_ExecuteUbergraph_BP_Flower::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Flower_C_ExecuteUbergraph_BP_Flower, CallFunc_GetWorldSubsystem_ReturnValue) == 0x000010, "Member 'BP_Flower_C_ExecuteUbergraph_BP_Flower::CallFunc_GetWorldSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Flower_C_ExecuteUbergraph_BP_Flower, K2Node_Event_Direction) == 0x000018, "Member 'BP_Flower_C_ExecuteUbergraph_BP_Flower::K2Node_Event_Direction' has a wrong offset!");
static_assert(offsetof(BP_Flower_C_ExecuteUbergraph_BP_Flower, K2Node_Event_Delta) == 0x000030, "Member 'BP_Flower_C_ExecuteUbergraph_BP_Flower::K2Node_Event_Delta' has a wrong offset!");
static_assert(offsetof(BP_Flower_C_ExecuteUbergraph_BP_Flower, K2Node_Event_Causer) == 0x000038, "Member 'BP_Flower_C_ExecuteUbergraph_BP_Flower::K2Node_Event_Causer' has a wrong offset!");
static_assert(offsetof(BP_Flower_C_ExecuteUbergraph_BP_Flower, K2Node_Event_CombatParticipant) == 0x000040, "Member 'BP_Flower_C_ExecuteUbergraph_BP_Flower::K2Node_Event_CombatParticipant' has a wrong offset!");
static_assert(offsetof(BP_Flower_C_ExecuteUbergraph_BP_Flower, K2Node_Event_KillMethod) == 0x0000A0, "Member 'BP_Flower_C_ExecuteUbergraph_BP_Flower::K2Node_Event_KillMethod' has a wrong offset!");
static_assert(offsetof(BP_Flower_C_ExecuteUbergraph_BP_Flower, K2Node_Event_Location) == 0x000388, "Member 'BP_Flower_C_ExecuteUbergraph_BP_Flower::K2Node_Event_Location' has a wrong offset!");
static_assert(offsetof(BP_Flower_C_ExecuteUbergraph_BP_Flower, CallFunc_Not_PreBool_ReturnValue) == 0x0003A0, "Member 'BP_Flower_C_ExecuteUbergraph_BP_Flower::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Flower_C_ExecuteUbergraph_BP_Flower, CallFunc_Not_PreBool_ReturnValue_1) == 0x0003A1, "Member 'BP_Flower_C_ExecuteUbergraph_BP_Flower::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Flower_C_ExecuteUbergraph_BP_Flower, CallFunc_BooleanAND_ReturnValue) == 0x0003A2, "Member 'BP_Flower_C_ExecuteUbergraph_BP_Flower::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Flower_C_ExecuteUbergraph_BP_Flower, K2Node_Event_AttackingActor) == 0x0003A8, "Member 'BP_Flower_C_ExecuteUbergraph_BP_Flower::K2Node_Event_AttackingActor' has a wrong offset!");
static_assert(offsetof(BP_Flower_C_ExecuteUbergraph_BP_Flower, CallFunc_MapRangeUnclamped_ReturnValue) == 0x0003B0, "Member 'BP_Flower_C_ExecuteUbergraph_BP_Flower::CallFunc_MapRangeUnclamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Flower_C_ExecuteUbergraph_BP_Flower, CallFunc_Lerp_ReturnValue_1) == 0x0003B8, "Member 'BP_Flower_C_ExecuteUbergraph_BP_Flower::CallFunc_Lerp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Flower_C_ExecuteUbergraph_BP_Flower, CallFunc_GetActorOfClass_ReturnValue) == 0x0003C0, "Member 'BP_Flower_C_ExecuteUbergraph_BP_Flower::CallFunc_GetActorOfClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Flower_C_ExecuteUbergraph_BP_Flower, K2Node_Event_Health) == 0x0003C8, "Member 'BP_Flower_C_ExecuteUbergraph_BP_Flower::K2Node_Event_Health' has a wrong offset!");
static_assert(offsetof(BP_Flower_C_ExecuteUbergraph_BP_Flower, K2Node_Event_MaxHealth) == 0x0003CC, "Member 'BP_Flower_C_ExecuteUbergraph_BP_Flower::K2Node_Event_MaxHealth' has a wrong offset!");
static_assert(offsetof(BP_Flower_C_ExecuteUbergraph_BP_Flower, CallFunc_GreaterEqual_DoubleDouble_ReturnValue) == 0x0003D0, "Member 'BP_Flower_C_ExecuteUbergraph_BP_Flower::CallFunc_GreaterEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Flower_C_ExecuteUbergraph_BP_Flower, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x0003D8, "Member 'BP_Flower_C_ExecuteUbergraph_BP_Flower::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Flower_C_ExecuteUbergraph_BP_Flower, CallFunc_Less_DoubleDouble_ReturnValue) == 0x0003F0, "Member 'BP_Flower_C_ExecuteUbergraph_BP_Flower::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Flower_C_ExecuteUbergraph_BP_Flower, CallFunc_Add_VectorVector_ReturnValue) == 0x0003F8, "Member 'BP_Flower_C_ExecuteUbergraph_BP_Flower::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Flower_C_ExecuteUbergraph_BP_Flower, CallFunc_SpawnSystemAtLocation_ReturnValue) == 0x000410, "Member 'BP_Flower_C_ExecuteUbergraph_BP_Flower::CallFunc_SpawnSystemAtLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Flower_C_ExecuteUbergraph_BP_Flower, CallFunc_K2_GetComponentLocation_ReturnValue_1) == 0x000418, "Member 'BP_Flower_C_ExecuteUbergraph_BP_Flower::CallFunc_K2_GetComponentLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Flower_C_ExecuteUbergraph_BP_Flower, CallFunc_K2_GetComponentLocation_ReturnValue_2) == 0x000430, "Member 'BP_Flower_C_ExecuteUbergraph_BP_Flower::CallFunc_K2_GetComponentLocation_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Flower_C_ExecuteUbergraph_BP_Flower, CallFunc_SpawnSystemAtLocation_ReturnValue_1) == 0x000448, "Member 'BP_Flower_C_ExecuteUbergraph_BP_Flower::CallFunc_SpawnSystemAtLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Flower_C_ExecuteUbergraph_BP_Flower, CallFunc_SpawnSystemAtLocation_ReturnValue_2) == 0x000450, "Member 'BP_Flower_C_ExecuteUbergraph_BP_Flower::CallFunc_SpawnSystemAtLocation_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Flower_C_ExecuteUbergraph_BP_Flower, CallFunc_GetMaterial_ReturnValue) == 0x000458, "Member 'BP_Flower_C_ExecuteUbergraph_BP_Flower::CallFunc_GetMaterial_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Flower_C_ExecuteUbergraph_BP_Flower, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x000460, "Member 'BP_Flower_C_ExecuteUbergraph_BP_Flower::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Flower_C_ExecuteUbergraph_BP_Flower, K2Node_ComponentBoundEvent_AbilitySystemComponent) == 0x000468, "Member 'BP_Flower_C_ExecuteUbergraph_BP_Flower::K2Node_ComponentBoundEvent_AbilitySystemComponent' has a wrong offset!");
static_assert(offsetof(BP_Flower_C_ExecuteUbergraph_BP_Flower, K2Node_ComponentBoundEvent_Spec) == 0x000470, "Member 'BP_Flower_C_ExecuteUbergraph_BP_Flower::K2Node_ComponentBoundEvent_Spec' has a wrong offset!");
static_assert(offsetof(BP_Flower_C_ExecuteUbergraph_BP_Flower, K2Node_ComponentBoundEvent_Handle) == 0x000708, "Member 'BP_Flower_C_ExecuteUbergraph_BP_Flower::K2Node_ComponentBoundEvent_Handle' has a wrong offset!");
static_assert(offsetof(BP_Flower_C_ExecuteUbergraph_BP_Flower, CallFunc_GetEffectContextHandleFromGameplayEffectSpec_ReturnValue) == 0x000710, "Member 'BP_Flower_C_ExecuteUbergraph_BP_Flower::CallFunc_GetEffectContextHandleFromGameplayEffectSpec_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Flower_C_ExecuteUbergraph_BP_Flower, CallFunc_EffectContextGetEffectCauser_ReturnValue) == 0x000728, "Member 'BP_Flower_C_ExecuteUbergraph_BP_Flower::CallFunc_EffectContextGetEffectCauser_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Flower_C_ExecuteUbergraph_BP_Flower, CallFunc_IsValid_ReturnValue) == 0x000730, "Member 'BP_Flower_C_ExecuteUbergraph_BP_Flower::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Flower_C_ExecuteUbergraph_BP_Flower, CallFunc_Lerp_Alpha_ImplicitCast) == 0x000738, "Member 'BP_Flower_C_ExecuteUbergraph_BP_Flower::CallFunc_Lerp_Alpha_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_Flower_C_ExecuteUbergraph_BP_Flower, CallFunc_SetMorphTarget_Value_ImplicitCast) == 0x000740, "Member 'BP_Flower_C_ExecuteUbergraph_BP_Flower::CallFunc_SetMorphTarget_Value_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_Flower_C_ExecuteUbergraph_BP_Flower, CallFunc_SetMorphTarget_Value_ImplicitCast_1) == 0x000744, "Member 'BP_Flower_C_ExecuteUbergraph_BP_Flower::CallFunc_SetMorphTarget_Value_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(BP_Flower_C_ExecuteUbergraph_BP_Flower, CallFunc_Lerp_Alpha_ImplicitCast_1) == 0x000748, "Member 'BP_Flower_C_ExecuteUbergraph_BP_Flower::CallFunc_Lerp_Alpha_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(BP_Flower_C_ExecuteUbergraph_BP_Flower, CallFunc_SetScalarParameterValue_Value_ImplicitCast) == 0x000750, "Member 'BP_Flower_C_ExecuteUbergraph_BP_Flower::CallFunc_SetScalarParameterValue_Value_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_Flower_C_ExecuteUbergraph_BP_Flower, K2Node_VariableSet_PreviousHealth_ImplicitCast) == 0x000758, "Member 'BP_Flower_C_ExecuteUbergraph_BP_Flower::K2Node_VariableSet_PreviousHealth_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_Flower_C_ExecuteUbergraph_BP_Flower, CallFunc_Less_DoubleDouble_A_ImplicitCast) == 0x000760, "Member 'BP_Flower_C_ExecuteUbergraph_BP_Flower::CallFunc_Less_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_Flower_C_ExecuteUbergraph_BP_Flower, K2Node_VariableSet_MaxHealth_ImplicitCast) == 0x000768, "Member 'BP_Flower_C_ExecuteUbergraph_BP_Flower::K2Node_VariableSet_MaxHealth_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_Flower_C_ExecuteUbergraph_BP_Flower, CallFunc_GreaterEqual_DoubleDouble_B_ImplicitCast) == 0x000770, "Member 'BP_Flower_C_ExecuteUbergraph_BP_Flower::CallFunc_GreaterEqual_DoubleDouble_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_Flower_C_ExecuteUbergraph_BP_Flower, CallFunc_SetMorphTarget_Value_ImplicitCast_2) == 0x000778, "Member 'BP_Flower_C_ExecuteUbergraph_BP_Flower::CallFunc_SetMorphTarget_Value_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(BP_Flower_C_ExecuteUbergraph_BP_Flower, CallFunc_SetMorphTarget_Value_ImplicitCast_3) == 0x00077C, "Member 'BP_Flower_C_ExecuteUbergraph_BP_Flower::CallFunc_SetMorphTarget_Value_ImplicitCast_3' has a wrong offset!");

// Function BP_Flower.BP_Flower_C.GetDurabilityCostWhenHit
// 0x0008 (0x0008 - 0x0000)
struct BP_Flower_C_GetDurabilityCostWhenHit final
{
public:
	double                                        Amount;                                            // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Flower_C_GetDurabilityCostWhenHit) == 0x000008, "Wrong alignment on BP_Flower_C_GetDurabilityCostWhenHit");
static_assert(sizeof(BP_Flower_C_GetDurabilityCostWhenHit) == 0x000008, "Wrong size on BP_Flower_C_GetDurabilityCostWhenHit");
static_assert(offsetof(BP_Flower_C_GetDurabilityCostWhenHit, Amount) == 0x000000, "Member 'BP_Flower_C_GetDurabilityCostWhenHit::Amount' has a wrong offset!");

// Function BP_Flower.BP_Flower_C.GetMaterialType
// 0x0001 (0x0001 - 0x0000)
struct BP_Flower_C_GetMaterialType final
{
public:
	E_MaterialTypes                               MaterialType;                                      // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Flower_C_GetMaterialType) == 0x000001, "Wrong alignment on BP_Flower_C_GetMaterialType");
static_assert(sizeof(BP_Flower_C_GetMaterialType) == 0x000001, "Wrong size on BP_Flower_C_GetMaterialType");
static_assert(offsetof(BP_Flower_C_GetMaterialType, MaterialType) == 0x000000, "Member 'BP_Flower_C_GetMaterialType::MaterialType' has a wrong offset!");

// Function BP_Flower.BP_Flower_C.HitInterface
// 0x0018 (0x0018 - 0x0000)
struct BP_Flower_C_HitInterface final
{
public:
	struct FVector                                Direction;                                         // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Flower_C_HitInterface) == 0x000008, "Wrong alignment on BP_Flower_C_HitInterface");
static_assert(sizeof(BP_Flower_C_HitInterface) == 0x000018, "Wrong size on BP_Flower_C_HitInterface");
static_assert(offsetof(BP_Flower_C_HitInterface, Direction) == 0x000000, "Member 'BP_Flower_C_HitInterface::Direction' has a wrong offset!");

// Function BP_Flower.BP_Flower_C.ImpactCosmetics
// 0x0048 (0x0048 - 0x0000)
struct BP_Flower_C_ImpactCosmetics final
{
public:
	class APawn*                                  ImpactCauser;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Location;                                          // 0x0008(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                HitImpulse;                                        // 0x0020(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_ImpactEffect                                ImpactEffect;                                      // 0x0038(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x3];                                       // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   BoneName;                                          // 0x003C(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ChangedAttributes;                                 // 0x0044(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Flower_C_ImpactCosmetics) == 0x000008, "Wrong alignment on BP_Flower_C_ImpactCosmetics");
static_assert(sizeof(BP_Flower_C_ImpactCosmetics) == 0x000048, "Wrong size on BP_Flower_C_ImpactCosmetics");
static_assert(offsetof(BP_Flower_C_ImpactCosmetics, ImpactCauser) == 0x000000, "Member 'BP_Flower_C_ImpactCosmetics::ImpactCauser' has a wrong offset!");
static_assert(offsetof(BP_Flower_C_ImpactCosmetics, Location) == 0x000008, "Member 'BP_Flower_C_ImpactCosmetics::Location' has a wrong offset!");
static_assert(offsetof(BP_Flower_C_ImpactCosmetics, HitImpulse) == 0x000020, "Member 'BP_Flower_C_ImpactCosmetics::HitImpulse' has a wrong offset!");
static_assert(offsetof(BP_Flower_C_ImpactCosmetics, ImpactEffect) == 0x000038, "Member 'BP_Flower_C_ImpactCosmetics::ImpactEffect' has a wrong offset!");
static_assert(offsetof(BP_Flower_C_ImpactCosmetics, BoneName) == 0x00003C, "Member 'BP_Flower_C_ImpactCosmetics::BoneName' has a wrong offset!");
static_assert(offsetof(BP_Flower_C_ImpactCosmetics, ChangedAttributes) == 0x000044, "Member 'BP_Flower_C_ImpactCosmetics::ChangedAttributes' has a wrong offset!");

// Function BP_Flower.BP_Flower_C.MeleeHit
// 0x0008 (0x0008 - 0x0000)
struct BP_Flower_C_MeleeHit final
{
public:
	const class AActor*                           AttackingActor;                                    // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Flower_C_MeleeHit) == 0x000008, "Wrong alignment on BP_Flower_C_MeleeHit");
static_assert(sizeof(BP_Flower_C_MeleeHit) == 0x000008, "Wrong size on BP_Flower_C_MeleeHit");
static_assert(offsetof(BP_Flower_C_MeleeHit, AttackingActor) == 0x000000, "Member 'BP_Flower_C_MeleeHit::AttackingActor' has a wrong offset!");

// Function BP_Flower.BP_Flower_C.OnDamaged
// 0x0370 (0x0370 - 0x0000)
struct BP_Flower_C_OnDamaged final
{
public:
	float                                         Delta;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 Causer;                                            // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FCombatParticipant                     CombatParticipant;                                 // 0x0010(0x0060)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm)
	struct FKillMethod                            KillMethod;                                        // 0x0070(0x02E8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm)
	struct FVector_NetQuantize                    Location;                                          // 0x0358(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Flower_C_OnDamaged) == 0x000008, "Wrong alignment on BP_Flower_C_OnDamaged");
static_assert(sizeof(BP_Flower_C_OnDamaged) == 0x000370, "Wrong size on BP_Flower_C_OnDamaged");
static_assert(offsetof(BP_Flower_C_OnDamaged, Delta) == 0x000000, "Member 'BP_Flower_C_OnDamaged::Delta' has a wrong offset!");
static_assert(offsetof(BP_Flower_C_OnDamaged, Causer) == 0x000008, "Member 'BP_Flower_C_OnDamaged::Causer' has a wrong offset!");
static_assert(offsetof(BP_Flower_C_OnDamaged, CombatParticipant) == 0x000010, "Member 'BP_Flower_C_OnDamaged::CombatParticipant' has a wrong offset!");
static_assert(offsetof(BP_Flower_C_OnDamaged, KillMethod) == 0x000070, "Member 'BP_Flower_C_OnDamaged::KillMethod' has a wrong offset!");
static_assert(offsetof(BP_Flower_C_OnDamaged, Location) == 0x000358, "Member 'BP_Flower_C_OnDamaged::Location' has a wrong offset!");

// Function BP_Flower.BP_Flower_C.OnHealthChanged
// 0x0008 (0x0008 - 0x0000)
struct BP_Flower_C_OnHealthChanged final
{
public:
	float                                         Health;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MaxHealth_0;                                       // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Flower_C_OnHealthChanged) == 0x000004, "Wrong alignment on BP_Flower_C_OnHealthChanged");
static_assert(sizeof(BP_Flower_C_OnHealthChanged) == 0x000008, "Wrong size on BP_Flower_C_OnHealthChanged");
static_assert(offsetof(BP_Flower_C_OnHealthChanged, Health) == 0x000000, "Member 'BP_Flower_C_OnHealthChanged::Health' has a wrong offset!");
static_assert(offsetof(BP_Flower_C_OnHealthChanged, MaxHealth_0) == 0x000004, "Member 'BP_Flower_C_OnHealthChanged::MaxHealth_0' has a wrong offset!");

// Function BP_Flower.BP_Flower_C.OnRep_Growing
// 0x0001 (0x0001 - 0x0000)
struct BP_Flower_C_OnRep_Growing final
{
public:
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Flower_C_OnRep_Growing) == 0x000001, "Wrong alignment on BP_Flower_C_OnRep_Growing");
static_assert(sizeof(BP_Flower_C_OnRep_Growing) == 0x000001, "Wrong size on BP_Flower_C_OnRep_Growing");
static_assert(offsetof(BP_Flower_C_OnRep_Growing, CallFunc_Not_PreBool_ReturnValue) == 0x000000, "Member 'BP_Flower_C_OnRep_Growing::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function BP_Flower.BP_Flower_C.SetSeethroughParams
// 0x0008 (0x0008 - 0x0000)
struct BP_Flower_C_SetSeethroughParams final
{
public:
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Flower_C_SetSeethroughParams) == 0x000008, "Wrong alignment on BP_Flower_C_SetSeethroughParams");
static_assert(sizeof(BP_Flower_C_SetSeethroughParams) == 0x000008, "Wrong size on BP_Flower_C_SetSeethroughParams");
static_assert(offsetof(BP_Flower_C_SetSeethroughParams, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x000000, "Member 'BP_Flower_C_SetSeethroughParams::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");

}

