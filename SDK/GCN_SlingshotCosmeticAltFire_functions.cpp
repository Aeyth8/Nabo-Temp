#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GCN_SlingshotCosmeticAltFire

#include "Basic.hpp"

#include "GCN_SlingshotCosmeticAltFire_classes.hpp"
#include "GCN_SlingshotCosmeticAltFire_parameters.hpp"


namespace SDK
{

// Function GCN_SlingshotCosmeticAltFire.GCN_SlingshotCosmeticAltFire_C.CreateKillData
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Owner_0                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// struct FCombatParticipant               ReturnValue                                            (Parm, OutParm, ReturnParm)

struct FCombatParticipant AGCN_SlingshotCosmeticAltFire_C::CreateKillData(class AActor* Owner_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GCN_SlingshotCosmeticAltFire_C", "CreateKillData");

	Params::GCN_SlingshotCosmeticAltFire_C_CreateKillData Parms{};

	Parms.Owner_0 = Owner_0;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function GCN_SlingshotCosmeticAltFire.GCN_SlingshotCosmeticAltFire_C.ExecuteUbergraph_GCN_SlingshotCosmeticAltFire
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AGCN_SlingshotCosmeticAltFire_C::ExecuteUbergraph_GCN_SlingshotCosmeticAltFire(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GCN_SlingshotCosmeticAltFire_C", "ExecuteUbergraph_GCN_SlingshotCosmeticAltFire");

	Params::GCN_SlingshotCosmeticAltFire_C_ExecuteUbergraph_GCN_SlingshotCosmeticAltFire Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function GCN_SlingshotCosmeticAltFire.GCN_SlingshotCosmeticAltFire_C.GetRandomDirection
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UItemInstance*                    Item                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// struct FVector                          Forward                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FRotator                         Rotation                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AGCN_SlingshotCosmeticAltFire_C::GetRandomDirection(class UItemInstance* Item, const struct FVector& Forward, struct FRotator* Rotation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GCN_SlingshotCosmeticAltFire_C", "GetRandomDirection");

	Params::GCN_SlingshotCosmeticAltFire_C_GetRandomDirection Parms{};

	Parms.Item = Item;
	Parms.Forward = std::move(Forward);

	UObject::ProcessEvent(Func, &Parms);

	if (Rotation != nullptr)
		*Rotation = std::move(Parms.Rotation);
}


// Function GCN_SlingshotCosmeticAltFire.GCN_SlingshotCosmeticAltFire_C.OnBurst
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// class AActor*                           Target                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// struct FGameplayCueParameters           Parameters                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
// struct FGameplayCueNotify_SpawnResult   SpawnResults                                           (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)

void AGCN_SlingshotCosmeticAltFire_C::OnBurst(class AActor* Target, const struct FGameplayCueParameters& Parameters, const struct FGameplayCueNotify_SpawnResult& SpawnResults)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GCN_SlingshotCosmeticAltFire_C", "OnBurst");

	Params::GCN_SlingshotCosmeticAltFire_C_OnBurst Parms{};

	Parms.Target = Target;
	Parms.Parameters = std::move(Parameters);
	Parms.SpawnResults = std::move(SpawnResults);

	UObject::ProcessEvent(Func, &Parms);
}

}

