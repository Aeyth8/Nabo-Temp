#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_NeighborPreviewSlot

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "JP_structs.hpp"
#include "S_PlayerRewardPreviewChangedMessage_structs.hpp"
#include "S_Message_BlendToTabCamera_structs.hpp"
#include "S_Message_PreviewNeighbor_structs.hpp"
#include "S_PlayerEquippedItemMessage_structs.hpp"
#include "S_NeighborSelectionChangedMessage_structs.hpp"
#include "S_PlayerRewardUnlockedMessage_structs.hpp"
#include "S_PlayerEquippedNeighborSkinMessage_structs.hpp"
#include "S_Message_SwitchCamera_structs.hpp"


namespace SDK::Params
{

// Function BP_NeighborPreviewSlot.BP_NeighborPreviewSlot_C.ClearPreview
// 0x0001 (0x0001 - 0x0000)
struct BP_NeighborPreviewSlot_C_ClearPreview final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_NeighborPreviewSlot_C_ClearPreview) == 0x000001, "Wrong alignment on BP_NeighborPreviewSlot_C_ClearPreview");
static_assert(sizeof(BP_NeighborPreviewSlot_C_ClearPreview) == 0x000001, "Wrong size on BP_NeighborPreviewSlot_C_ClearPreview");
static_assert(offsetof(BP_NeighborPreviewSlot_C_ClearPreview, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'BP_NeighborPreviewSlot_C_ClearPreview::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_NeighborPreviewSlot.BP_NeighborPreviewSlot_C.ClearPreviewActor
// 0x0001 (0x0001 - 0x0000)
struct BP_NeighborPreviewSlot_C_ClearPreviewActor final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_NeighborPreviewSlot_C_ClearPreviewActor) == 0x000001, "Wrong alignment on BP_NeighborPreviewSlot_C_ClearPreviewActor");
static_assert(sizeof(BP_NeighborPreviewSlot_C_ClearPreviewActor) == 0x000001, "Wrong size on BP_NeighborPreviewSlot_C_ClearPreviewActor");
static_assert(offsetof(BP_NeighborPreviewSlot_C_ClearPreviewActor, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'BP_NeighborPreviewSlot_C_ClearPreviewActor::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_NeighborPreviewSlot.BP_NeighborPreviewSlot_C.ExecuteUbergraph_BP_NeighborPreviewSlot
// 0x02A8 (0x02A8 - 0x0000)
struct BP_NeighborPreviewSlot_C_ExecuteUbergraph_BP_NeighborPreviewSlot final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UAsyncAction_ListenForGameplayMessage* ProxyObject, const struct FGameplayTag& ActualChannel)> K2Node_CreateDelegate_OutputDelegate;              // 0x0004(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAsyncAction_ListenForGameplayMessage*  K2Node_CustomEvent_ProxyObject_6;                  // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           K2Node_CustomEvent_ActualChannel_6;                // 0x0020(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FS_PlayerRewardPreviewChangedMessage   Temp_struct_Variable;                              // 0x0028(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           Temp_struct_Variable_1;                            // 0x0030(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_MatchesTag_ReturnValue;                   // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_MatchesTag_ReturnValue_1;                 // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A[0x6];                                       // 0x003A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UAsyncAction_ListenForGameplayMessage*  Temp_object_Variable;                              // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAsyncAction_ListenForGameplayMessage*  CallFunc_ListenForGameplayMessages_ReturnValue;    // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51[0x3];                                       // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_Message_PreviewNeighbor             Temp_struct_Variable_2;                            // 0x0054(0x0008)(NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5C[0x4];                                       // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAsyncAction_ListenForGameplayMessage*  K2Node_CustomEvent_ProxyObject_5;                  // 0x0060(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           K2Node_CustomEvent_ActualChannel_5;                // 0x0068(0x0008)(NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UAsyncAction_ListenForGameplayMessage* ProxyObject, const struct FGameplayTag& ActualChannel)> K2Node_CreateDelegate_OutputDelegate_1;            // 0x0070(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FS_Message_PreviewNeighbor             Temp_struct_Variable_3;                            // 0x0080(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           Temp_struct_Variable_4;                            // 0x0088(0x0008)(NoDestructor, HasGetValueTypeHash)
	class UAsyncAction_ListenForGameplayMessage*  Temp_object_Variable_1;                            // 0x0090(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetPayload_ReturnValue;                   // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_99[0x7];                                       // 0x0099(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAsyncAction_ListenForGameplayMessage*  CallFunc_ListenForGameplayMessages_ReturnValue_1;  // 0x00A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FS_PlayerEquippedItemMessage           Temp_struct_Variable_5;                            // 0x00A8(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B1[0x3];                                       // 0x00B1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class UAsyncAction_ListenForGameplayMessage* ProxyObject, const struct FGameplayTag& ActualChannel)> K2Node_CreateDelegate_OutputDelegate_2;            // 0x00B4(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C4[0x4];                                       // 0x00C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAsyncAction_ListenForGameplayMessage*  K2Node_CustomEvent_ProxyObject_4;                  // 0x00C8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           K2Node_CustomEvent_ActualChannel_4;                // 0x00D0(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FS_PlayerEquippedItemMessage           Temp_struct_Variable_6;                            // 0x00D8(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           Temp_struct_Variable_7;                            // 0x00E0(0x0008)(NoDestructor, HasGetValueTypeHash)
	class UAsyncAction_ListenForGameplayMessage*  Temp_object_Variable_2;                            // 0x00E8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetPayload_ReturnValue_1;                 // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F1[0x7];                                       // 0x00F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAsyncAction_ListenForGameplayMessage*  CallFunc_ListenForGameplayMessages_ReturnValue_2;  // 0x00F8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FS_PlayerRewardUnlockedMessage         Temp_struct_Variable_8;                            // 0x0100(0x0018)(HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_119[0x3];                                      // 0x0119(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class UAsyncAction_ListenForGameplayMessage* ProxyObject, const struct FGameplayTag& ActualChannel)> K2Node_CreateDelegate_OutputDelegate_3;            // 0x011C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12C[0x4];                                      // 0x012C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAsyncAction_ListenForGameplayMessage*  K2Node_CustomEvent_ProxyObject_3;                  // 0x0130(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           K2Node_CustomEvent_ActualChannel_3;                // 0x0138(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FS_PlayerRewardUnlockedMessage         Temp_struct_Variable_9;                            // 0x0140(0x0018)(HasGetValueTypeHash)
	struct FGameplayTag                           Temp_struct_Variable_10;                           // 0x0158(0x0008)(NoDestructor, HasGetValueTypeHash)
	class UAsyncAction_ListenForGameplayMessage*  Temp_object_Variable_3;                            // 0x0160(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAsyncAction_ListenForGameplayMessage*  CallFunc_ListenForGameplayMessages_ReturnValue_3;  // 0x0168(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetPayload_ReturnValue_2;                 // 0x0170(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0171(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_172[0x2];                                      // 0x0172(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_PlayerEquippedNeighborSkinMessage   Temp_struct_Variable_11;                           // 0x0174(0x0008)(NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_17C[0x4];                                      // 0x017C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAsyncAction_ListenForGameplayMessage*  K2Node_CustomEvent_ProxyObject_2;                  // 0x0180(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           K2Node_CustomEvent_ActualChannel_2;                // 0x0188(0x0008)(NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UAsyncAction_ListenForGameplayMessage* ProxyObject, const struct FGameplayTag& ActualChannel)> K2Node_CreateDelegate_OutputDelegate_4;            // 0x0190(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FS_PlayerEquippedNeighborSkinMessage   Temp_struct_Variable_12;                           // 0x01A0(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           Temp_struct_Variable_13;                           // 0x01A8(0x0008)(NoDestructor, HasGetValueTypeHash)
	class UAsyncAction_ListenForGameplayMessage*  Temp_object_Variable_4;                            // 0x01B0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAsyncAction_ListenForGameplayMessage*  CallFunc_ListenForGameplayMessages_ReturnValue_4;  // 0x01B8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetPayload_ReturnValue_3;                 // 0x01C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x01C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FS_Message_SwitchCamera                Temp_struct_Variable_14;                           // 0x01C2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C3[0x5];                                      // 0x01C3(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UAsyncAction_ListenForGameplayMessage*  K2Node_CustomEvent_ProxyObject_1;                  // 0x01C8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           K2Node_CustomEvent_ActualChannel_1;                // 0x01D0(0x0008)(NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UAsyncAction_ListenForGameplayMessage* ProxyObject, const struct FGameplayTag& ActualChannel)> K2Node_CreateDelegate_OutputDelegate_5;            // 0x01D8(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FS_Message_SwitchCamera                Temp_struct_Variable_15;                           // 0x01E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E9[0x3];                                      // 0x01E9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           Temp_struct_Variable_16;                           // 0x01EC(0x0008)(NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1F4[0x4];                                      // 0x01F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAsyncAction_ListenForGameplayMessage*  Temp_object_Variable_5;                            // 0x01F8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetPayload_ReturnValue_4;                 // 0x0200(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_201[0x7];                                      // 0x0201(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAsyncAction_ListenForGameplayMessage*  CallFunc_ListenForGameplayMessages_ReturnValue_5;  // 0x0208(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FS_NeighborSelectionChangedMessage     Temp_struct_Variable_17;                           // 0x0210(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_5;                    // 0x0211(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_212[0x2];                                      // 0x0212(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class UAsyncAction_ListenForGameplayMessage* ProxyObject, const struct FGameplayTag& ActualChannel)> K2Node_CreateDelegate_OutputDelegate_6;            // 0x0214(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_224[0x4];                                      // 0x0224(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAsyncAction_ListenForGameplayMessage*  K2Node_CustomEvent_ProxyObject;                    // 0x0228(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           K2Node_CustomEvent_ActualChannel;                  // 0x0230(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FS_NeighborSelectionChangedMessage     Temp_struct_Variable_18;                           // 0x0238(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_239[0x3];                                      // 0x0239(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           Temp_struct_Variable_19;                           // 0x023C(0x0008)(NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_244[0x4];                                      // 0x0244(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAsyncAction_ListenForGameplayMessage*  Temp_object_Variable_6;                            // 0x0248(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAsyncAction_ListenForGameplayMessage*  CallFunc_ListenForGameplayMessages_ReturnValue_6;  // 0x0250(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetPayload_ReturnValue_5;                 // 0x0258(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_6;                    // 0x0259(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_25A[0x2];                                      // 0x025A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_PlayerRewardPreviewChangedMessage   Temp_struct_Variable_20;                           // 0x025C(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetPayload_ReturnValue_6;                 // 0x0264(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_265[0x3];                                      // 0x0265(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UAudioComponent*                        CallFunc_SpawnSound2D_ReturnValue;                 // 0x0268(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        CallFunc_SpawnSound2D_ReturnValue_1;               // 0x0270(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FNeighborLoadout                       K2Node_MakeStruct_NeighborLoadout;                 // 0x0278(0x0030)()
};
static_assert(alignof(BP_NeighborPreviewSlot_C_ExecuteUbergraph_BP_NeighborPreviewSlot) == 0x000008, "Wrong alignment on BP_NeighborPreviewSlot_C_ExecuteUbergraph_BP_NeighborPreviewSlot");
static_assert(sizeof(BP_NeighborPreviewSlot_C_ExecuteUbergraph_BP_NeighborPreviewSlot) == 0x0002A8, "Wrong size on BP_NeighborPreviewSlot_C_ExecuteUbergraph_BP_NeighborPreviewSlot");
static_assert(offsetof(BP_NeighborPreviewSlot_C_ExecuteUbergraph_BP_NeighborPreviewSlot, EntryPoint) == 0x000000, "Member 'BP_NeighborPreviewSlot_C_ExecuteUbergraph_BP_NeighborPreviewSlot::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_NeighborPreviewSlot_C_ExecuteUbergraph_BP_NeighborPreviewSlot, K2Node_CreateDelegate_OutputDelegate) == 0x000004, "Member 'BP_NeighborPreviewSlot_C_ExecuteUbergraph_BP_NeighborPreviewSlot::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_NeighborPreviewSlot_C_ExecuteUbergraph_BP_NeighborPreviewSlot, K2Node_CustomEvent_ProxyObject_6) == 0x000018, "Member 'BP_NeighborPreviewSlot_C_ExecuteUbergraph_BP_NeighborPreviewSlot::K2Node_CustomEvent_ProxyObject_6' has a wrong offset!");
static_assert(offsetof(BP_NeighborPreviewSlot_C_ExecuteUbergraph_BP_NeighborPreviewSlot, K2Node_CustomEvent_ActualChannel_6) == 0x000020, "Member 'BP_NeighborPreviewSlot_C_ExecuteUbergraph_BP_NeighborPreviewSlot::K2Node_CustomEvent_ActualChannel_6' has a wrong offset!");
static_assert(offsetof(BP_NeighborPreviewSlot_C_ExecuteUbergraph_BP_NeighborPreviewSlot, Temp_struct_Variable) == 0x000028, "Member 'BP_NeighborPreviewSlot_C_ExecuteUbergraph_BP_NeighborPreviewSlot::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(BP_NeighborPreviewSlot_C_ExecuteUbergraph_BP_NeighborPreviewSlot, Temp_struct_Variable_1) == 0x000030, "Member 'BP_NeighborPreviewSlot_C_ExecuteUbergraph_BP_NeighborPreviewSlot::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_NeighborPreviewSlot_C_ExecuteUbergraph_BP_NeighborPreviewSlot, CallFunc_MatchesTag_ReturnValue) == 0x000038, "Member 'BP_NeighborPreviewSlot_C_ExecuteUbergraph_BP_NeighborPreviewSlot::CallFunc_MatchesTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NeighborPreviewSlot_C_ExecuteUbergraph_BP_NeighborPreviewSlot, CallFunc_MatchesTag_ReturnValue_1) == 0x000039, "Member 'BP_NeighborPreviewSlot_C_ExecuteUbergraph_BP_NeighborPreviewSlot::CallFunc_MatchesTag_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_NeighborPreviewSlot_C_ExecuteUbergraph_BP_NeighborPreviewSlot, Temp_object_Variable) == 0x000040, "Member 'BP_NeighborPreviewSlot_C_ExecuteUbergraph_BP_NeighborPreviewSlot::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BP_NeighborPreviewSlot_C_ExecuteUbergraph_BP_NeighborPreviewSlot, CallFunc_ListenForGameplayMessages_ReturnValue) == 0x000048, "Member 'BP_NeighborPreviewSlot_C_ExecuteUbergraph_BP_NeighborPreviewSlot::CallFunc_ListenForGameplayMessages_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NeighborPreviewSlot_C_ExecuteUbergraph_BP_NeighborPreviewSlot, CallFunc_IsValid_ReturnValue) == 0x000050, "Member 'BP_NeighborPreviewSlot_C_ExecuteUbergraph_BP_NeighborPreviewSlot::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NeighborPreviewSlot_C_ExecuteUbergraph_BP_NeighborPreviewSlot, Temp_struct_Variable_2) == 0x000054, "Member 'BP_NeighborPreviewSlot_C_ExecuteUbergraph_BP_NeighborPreviewSlot::Temp_struct_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_NeighborPreviewSlot_C_ExecuteUbergraph_BP_NeighborPreviewSlot, K2Node_CustomEvent_ProxyObject_5) == 0x000060, "Member 'BP_NeighborPreviewSlot_C_ExecuteUbergraph_BP_NeighborPreviewSlot::K2Node_CustomEvent_ProxyObject_5' has a wrong offset!");
static_assert(offsetof(BP_NeighborPreviewSlot_C_ExecuteUbergraph_BP_NeighborPreviewSlot, K2Node_CustomEvent_ActualChannel_5) == 0x000068, "Member 'BP_NeighborPreviewSlot_C_ExecuteUbergraph_BP_NeighborPreviewSlot::K2Node_CustomEvent_ActualChannel_5' has a wrong offset!");
static_assert(offsetof(BP_NeighborPreviewSlot_C_ExecuteUbergraph_BP_NeighborPreviewSlot, K2Node_CreateDelegate_OutputDelegate_1) == 0x000070, "Member 'BP_NeighborPreviewSlot_C_ExecuteUbergraph_BP_NeighborPreviewSlot::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(BP_NeighborPreviewSlot_C_ExecuteUbergraph_BP_NeighborPreviewSlot, Temp_struct_Variable_3) == 0x000080, "Member 'BP_NeighborPreviewSlot_C_ExecuteUbergraph_BP_NeighborPreviewSlot::Temp_struct_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_NeighborPreviewSlot_C_ExecuteUbergraph_BP_NeighborPreviewSlot, Temp_struct_Variable_4) == 0x000088, "Member 'BP_NeighborPreviewSlot_C_ExecuteUbergraph_BP_NeighborPreviewSlot::Temp_struct_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_NeighborPreviewSlot_C_ExecuteUbergraph_BP_NeighborPreviewSlot, Temp_object_Variable_1) == 0x000090, "Member 'BP_NeighborPreviewSlot_C_ExecuteUbergraph_BP_NeighborPreviewSlot::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_NeighborPreviewSlot_C_ExecuteUbergraph_BP_NeighborPreviewSlot, CallFunc_GetPayload_ReturnValue) == 0x000098, "Member 'BP_NeighborPreviewSlot_C_ExecuteUbergraph_BP_NeighborPreviewSlot::CallFunc_GetPayload_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NeighborPreviewSlot_C_ExecuteUbergraph_BP_NeighborPreviewSlot, CallFunc_ListenForGameplayMessages_ReturnValue_1) == 0x0000A0, "Member 'BP_NeighborPreviewSlot_C_ExecuteUbergraph_BP_NeighborPreviewSlot::CallFunc_ListenForGameplayMessages_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_NeighborPreviewSlot_C_ExecuteUbergraph_BP_NeighborPreviewSlot, Temp_struct_Variable_5) == 0x0000A8, "Member 'BP_NeighborPreviewSlot_C_ExecuteUbergraph_BP_NeighborPreviewSlot::Temp_struct_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_NeighborPreviewSlot_C_ExecuteUbergraph_BP_NeighborPreviewSlot, CallFunc_IsValid_ReturnValue_1) == 0x0000B0, "Member 'BP_NeighborPreviewSlot_C_ExecuteUbergraph_BP_NeighborPreviewSlot::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_NeighborPreviewSlot_C_ExecuteUbergraph_BP_NeighborPreviewSlot, K2Node_CreateDelegate_OutputDelegate_2) == 0x0000B4, "Member 'BP_NeighborPreviewSlot_C_ExecuteUbergraph_BP_NeighborPreviewSlot::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(BP_NeighborPreviewSlot_C_ExecuteUbergraph_BP_NeighborPreviewSlot, K2Node_CustomEvent_ProxyObject_4) == 0x0000C8, "Member 'BP_NeighborPreviewSlot_C_ExecuteUbergraph_BP_NeighborPreviewSlot::K2Node_CustomEvent_ProxyObject_4' has a wrong offset!");
static_assert(offsetof(BP_NeighborPreviewSlot_C_ExecuteUbergraph_BP_NeighborPreviewSlot, K2Node_CustomEvent_ActualChannel_4) == 0x0000D0, "Member 'BP_NeighborPreviewSlot_C_ExecuteUbergraph_BP_NeighborPreviewSlot::K2Node_CustomEvent_ActualChannel_4' has a wrong offset!");
static_assert(offsetof(BP_NeighborPreviewSlot_C_ExecuteUbergraph_BP_NeighborPreviewSlot, Temp_struct_Variable_6) == 0x0000D8, "Member 'BP_NeighborPreviewSlot_C_ExecuteUbergraph_BP_NeighborPreviewSlot::Temp_struct_Variable_6' has a wrong offset!");
static_assert(offsetof(BP_NeighborPreviewSlot_C_ExecuteUbergraph_BP_NeighborPreviewSlot, Temp_struct_Variable_7) == 0x0000E0, "Member 'BP_NeighborPreviewSlot_C_ExecuteUbergraph_BP_NeighborPreviewSlot::Temp_struct_Variable_7' has a wrong offset!");
static_assert(offsetof(BP_NeighborPreviewSlot_C_ExecuteUbergraph_BP_NeighborPreviewSlot, Temp_object_Variable_2) == 0x0000E8, "Member 'BP_NeighborPreviewSlot_C_ExecuteUbergraph_BP_NeighborPreviewSlot::Temp_object_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_NeighborPreviewSlot_C_ExecuteUbergraph_BP_NeighborPreviewSlot, CallFunc_GetPayload_ReturnValue_1) == 0x0000F0, "Member 'BP_NeighborPreviewSlot_C_ExecuteUbergraph_BP_NeighborPreviewSlot::CallFunc_GetPayload_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_NeighborPreviewSlot_C_ExecuteUbergraph_BP_NeighborPreviewSlot, CallFunc_ListenForGameplayMessages_ReturnValue_2) == 0x0000F8, "Member 'BP_NeighborPreviewSlot_C_ExecuteUbergraph_BP_NeighborPreviewSlot::CallFunc_ListenForGameplayMessages_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_NeighborPreviewSlot_C_ExecuteUbergraph_BP_NeighborPreviewSlot, Temp_struct_Variable_8) == 0x000100, "Member 'BP_NeighborPreviewSlot_C_ExecuteUbergraph_BP_NeighborPreviewSlot::Temp_struct_Variable_8' has a wrong offset!");
static_assert(offsetof(BP_NeighborPreviewSlot_C_ExecuteUbergraph_BP_NeighborPreviewSlot, CallFunc_IsValid_ReturnValue_2) == 0x000118, "Member 'BP_NeighborPreviewSlot_C_ExecuteUbergraph_BP_NeighborPreviewSlot::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_NeighborPreviewSlot_C_ExecuteUbergraph_BP_NeighborPreviewSlot, K2Node_CreateDelegate_OutputDelegate_3) == 0x00011C, "Member 'BP_NeighborPreviewSlot_C_ExecuteUbergraph_BP_NeighborPreviewSlot::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(BP_NeighborPreviewSlot_C_ExecuteUbergraph_BP_NeighborPreviewSlot, K2Node_CustomEvent_ProxyObject_3) == 0x000130, "Member 'BP_NeighborPreviewSlot_C_ExecuteUbergraph_BP_NeighborPreviewSlot::K2Node_CustomEvent_ProxyObject_3' has a wrong offset!");
static_assert(offsetof(BP_NeighborPreviewSlot_C_ExecuteUbergraph_BP_NeighborPreviewSlot, K2Node_CustomEvent_ActualChannel_3) == 0x000138, "Member 'BP_NeighborPreviewSlot_C_ExecuteUbergraph_BP_NeighborPreviewSlot::K2Node_CustomEvent_ActualChannel_3' has a wrong offset!");
static_assert(offsetof(BP_NeighborPreviewSlot_C_ExecuteUbergraph_BP_NeighborPreviewSlot, Temp_struct_Variable_9) == 0x000140, "Member 'BP_NeighborPreviewSlot_C_ExecuteUbergraph_BP_NeighborPreviewSlot::Temp_struct_Variable_9' has a wrong offset!");
static_assert(offsetof(BP_NeighborPreviewSlot_C_ExecuteUbergraph_BP_NeighborPreviewSlot, Temp_struct_Variable_10) == 0x000158, "Member 'BP_NeighborPreviewSlot_C_ExecuteUbergraph_BP_NeighborPreviewSlot::Temp_struct_Variable_10' has a wrong offset!");
static_assert(offsetof(BP_NeighborPreviewSlot_C_ExecuteUbergraph_BP_NeighborPreviewSlot, Temp_object_Variable_3) == 0x000160, "Member 'BP_NeighborPreviewSlot_C_ExecuteUbergraph_BP_NeighborPreviewSlot::Temp_object_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_NeighborPreviewSlot_C_ExecuteUbergraph_BP_NeighborPreviewSlot, CallFunc_ListenForGameplayMessages_ReturnValue_3) == 0x000168, "Member 'BP_NeighborPreviewSlot_C_ExecuteUbergraph_BP_NeighborPreviewSlot::CallFunc_ListenForGameplayMessages_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_NeighborPreviewSlot_C_ExecuteUbergraph_BP_NeighborPreviewSlot, CallFunc_GetPayload_ReturnValue_2) == 0x000170, "Member 'BP_NeighborPreviewSlot_C_ExecuteUbergraph_BP_NeighborPreviewSlot::CallFunc_GetPayload_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_NeighborPreviewSlot_C_ExecuteUbergraph_BP_NeighborPreviewSlot, CallFunc_IsValid_ReturnValue_3) == 0x000171, "Member 'BP_NeighborPreviewSlot_C_ExecuteUbergraph_BP_NeighborPreviewSlot::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_NeighborPreviewSlot_C_ExecuteUbergraph_BP_NeighborPreviewSlot, Temp_struct_Variable_11) == 0x000174, "Member 'BP_NeighborPreviewSlot_C_ExecuteUbergraph_BP_NeighborPreviewSlot::Temp_struct_Variable_11' has a wrong offset!");
static_assert(offsetof(BP_NeighborPreviewSlot_C_ExecuteUbergraph_BP_NeighborPreviewSlot, K2Node_CustomEvent_ProxyObject_2) == 0x000180, "Member 'BP_NeighborPreviewSlot_C_ExecuteUbergraph_BP_NeighborPreviewSlot::K2Node_CustomEvent_ProxyObject_2' has a wrong offset!");
static_assert(offsetof(BP_NeighborPreviewSlot_C_ExecuteUbergraph_BP_NeighborPreviewSlot, K2Node_CustomEvent_ActualChannel_2) == 0x000188, "Member 'BP_NeighborPreviewSlot_C_ExecuteUbergraph_BP_NeighborPreviewSlot::K2Node_CustomEvent_ActualChannel_2' has a wrong offset!");
static_assert(offsetof(BP_NeighborPreviewSlot_C_ExecuteUbergraph_BP_NeighborPreviewSlot, K2Node_CreateDelegate_OutputDelegate_4) == 0x000190, "Member 'BP_NeighborPreviewSlot_C_ExecuteUbergraph_BP_NeighborPreviewSlot::K2Node_CreateDelegate_OutputDelegate_4' has a wrong offset!");
static_assert(offsetof(BP_NeighborPreviewSlot_C_ExecuteUbergraph_BP_NeighborPreviewSlot, Temp_struct_Variable_12) == 0x0001A0, "Member 'BP_NeighborPreviewSlot_C_ExecuteUbergraph_BP_NeighborPreviewSlot::Temp_struct_Variable_12' has a wrong offset!");
static_assert(offsetof(BP_NeighborPreviewSlot_C_ExecuteUbergraph_BP_NeighborPreviewSlot, Temp_struct_Variable_13) == 0x0001A8, "Member 'BP_NeighborPreviewSlot_C_ExecuteUbergraph_BP_NeighborPreviewSlot::Temp_struct_Variable_13' has a wrong offset!");
static_assert(offsetof(BP_NeighborPreviewSlot_C_ExecuteUbergraph_BP_NeighborPreviewSlot, Temp_object_Variable_4) == 0x0001B0, "Member 'BP_NeighborPreviewSlot_C_ExecuteUbergraph_BP_NeighborPreviewSlot::Temp_object_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_NeighborPreviewSlot_C_ExecuteUbergraph_BP_NeighborPreviewSlot, CallFunc_ListenForGameplayMessages_ReturnValue_4) == 0x0001B8, "Member 'BP_NeighborPreviewSlot_C_ExecuteUbergraph_BP_NeighborPreviewSlot::CallFunc_ListenForGameplayMessages_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_NeighborPreviewSlot_C_ExecuteUbergraph_BP_NeighborPreviewSlot, CallFunc_GetPayload_ReturnValue_3) == 0x0001C0, "Member 'BP_NeighborPreviewSlot_C_ExecuteUbergraph_BP_NeighborPreviewSlot::CallFunc_GetPayload_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_NeighborPreviewSlot_C_ExecuteUbergraph_BP_NeighborPreviewSlot, CallFunc_IsValid_ReturnValue_4) == 0x0001C1, "Member 'BP_NeighborPreviewSlot_C_ExecuteUbergraph_BP_NeighborPreviewSlot::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_NeighborPreviewSlot_C_ExecuteUbergraph_BP_NeighborPreviewSlot, Temp_struct_Variable_14) == 0x0001C2, "Member 'BP_NeighborPreviewSlot_C_ExecuteUbergraph_BP_NeighborPreviewSlot::Temp_struct_Variable_14' has a wrong offset!");
static_assert(offsetof(BP_NeighborPreviewSlot_C_ExecuteUbergraph_BP_NeighborPreviewSlot, K2Node_CustomEvent_ProxyObject_1) == 0x0001C8, "Member 'BP_NeighborPreviewSlot_C_ExecuteUbergraph_BP_NeighborPreviewSlot::K2Node_CustomEvent_ProxyObject_1' has a wrong offset!");
static_assert(offsetof(BP_NeighborPreviewSlot_C_ExecuteUbergraph_BP_NeighborPreviewSlot, K2Node_CustomEvent_ActualChannel_1) == 0x0001D0, "Member 'BP_NeighborPreviewSlot_C_ExecuteUbergraph_BP_NeighborPreviewSlot::K2Node_CustomEvent_ActualChannel_1' has a wrong offset!");
static_assert(offsetof(BP_NeighborPreviewSlot_C_ExecuteUbergraph_BP_NeighborPreviewSlot, K2Node_CreateDelegate_OutputDelegate_5) == 0x0001D8, "Member 'BP_NeighborPreviewSlot_C_ExecuteUbergraph_BP_NeighborPreviewSlot::K2Node_CreateDelegate_OutputDelegate_5' has a wrong offset!");
static_assert(offsetof(BP_NeighborPreviewSlot_C_ExecuteUbergraph_BP_NeighborPreviewSlot, Temp_struct_Variable_15) == 0x0001E8, "Member 'BP_NeighborPreviewSlot_C_ExecuteUbergraph_BP_NeighborPreviewSlot::Temp_struct_Variable_15' has a wrong offset!");
static_assert(offsetof(BP_NeighborPreviewSlot_C_ExecuteUbergraph_BP_NeighborPreviewSlot, Temp_struct_Variable_16) == 0x0001EC, "Member 'BP_NeighborPreviewSlot_C_ExecuteUbergraph_BP_NeighborPreviewSlot::Temp_struct_Variable_16' has a wrong offset!");
static_assert(offsetof(BP_NeighborPreviewSlot_C_ExecuteUbergraph_BP_NeighborPreviewSlot, Temp_object_Variable_5) == 0x0001F8, "Member 'BP_NeighborPreviewSlot_C_ExecuteUbergraph_BP_NeighborPreviewSlot::Temp_object_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_NeighborPreviewSlot_C_ExecuteUbergraph_BP_NeighborPreviewSlot, CallFunc_GetPayload_ReturnValue_4) == 0x000200, "Member 'BP_NeighborPreviewSlot_C_ExecuteUbergraph_BP_NeighborPreviewSlot::CallFunc_GetPayload_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_NeighborPreviewSlot_C_ExecuteUbergraph_BP_NeighborPreviewSlot, CallFunc_ListenForGameplayMessages_ReturnValue_5) == 0x000208, "Member 'BP_NeighborPreviewSlot_C_ExecuteUbergraph_BP_NeighborPreviewSlot::CallFunc_ListenForGameplayMessages_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_NeighborPreviewSlot_C_ExecuteUbergraph_BP_NeighborPreviewSlot, Temp_struct_Variable_17) == 0x000210, "Member 'BP_NeighborPreviewSlot_C_ExecuteUbergraph_BP_NeighborPreviewSlot::Temp_struct_Variable_17' has a wrong offset!");
static_assert(offsetof(BP_NeighborPreviewSlot_C_ExecuteUbergraph_BP_NeighborPreviewSlot, CallFunc_IsValid_ReturnValue_5) == 0x000211, "Member 'BP_NeighborPreviewSlot_C_ExecuteUbergraph_BP_NeighborPreviewSlot::CallFunc_IsValid_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_NeighborPreviewSlot_C_ExecuteUbergraph_BP_NeighborPreviewSlot, K2Node_CreateDelegate_OutputDelegate_6) == 0x000214, "Member 'BP_NeighborPreviewSlot_C_ExecuteUbergraph_BP_NeighborPreviewSlot::K2Node_CreateDelegate_OutputDelegate_6' has a wrong offset!");
static_assert(offsetof(BP_NeighborPreviewSlot_C_ExecuteUbergraph_BP_NeighborPreviewSlot, K2Node_CustomEvent_ProxyObject) == 0x000228, "Member 'BP_NeighborPreviewSlot_C_ExecuteUbergraph_BP_NeighborPreviewSlot::K2Node_CustomEvent_ProxyObject' has a wrong offset!");
static_assert(offsetof(BP_NeighborPreviewSlot_C_ExecuteUbergraph_BP_NeighborPreviewSlot, K2Node_CustomEvent_ActualChannel) == 0x000230, "Member 'BP_NeighborPreviewSlot_C_ExecuteUbergraph_BP_NeighborPreviewSlot::K2Node_CustomEvent_ActualChannel' has a wrong offset!");
static_assert(offsetof(BP_NeighborPreviewSlot_C_ExecuteUbergraph_BP_NeighborPreviewSlot, Temp_struct_Variable_18) == 0x000238, "Member 'BP_NeighborPreviewSlot_C_ExecuteUbergraph_BP_NeighborPreviewSlot::Temp_struct_Variable_18' has a wrong offset!");
static_assert(offsetof(BP_NeighborPreviewSlot_C_ExecuteUbergraph_BP_NeighborPreviewSlot, Temp_struct_Variable_19) == 0x00023C, "Member 'BP_NeighborPreviewSlot_C_ExecuteUbergraph_BP_NeighborPreviewSlot::Temp_struct_Variable_19' has a wrong offset!");
static_assert(offsetof(BP_NeighborPreviewSlot_C_ExecuteUbergraph_BP_NeighborPreviewSlot, Temp_object_Variable_6) == 0x000248, "Member 'BP_NeighborPreviewSlot_C_ExecuteUbergraph_BP_NeighborPreviewSlot::Temp_object_Variable_6' has a wrong offset!");
static_assert(offsetof(BP_NeighborPreviewSlot_C_ExecuteUbergraph_BP_NeighborPreviewSlot, CallFunc_ListenForGameplayMessages_ReturnValue_6) == 0x000250, "Member 'BP_NeighborPreviewSlot_C_ExecuteUbergraph_BP_NeighborPreviewSlot::CallFunc_ListenForGameplayMessages_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_NeighborPreviewSlot_C_ExecuteUbergraph_BP_NeighborPreviewSlot, CallFunc_GetPayload_ReturnValue_5) == 0x000258, "Member 'BP_NeighborPreviewSlot_C_ExecuteUbergraph_BP_NeighborPreviewSlot::CallFunc_GetPayload_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_NeighborPreviewSlot_C_ExecuteUbergraph_BP_NeighborPreviewSlot, CallFunc_IsValid_ReturnValue_6) == 0x000259, "Member 'BP_NeighborPreviewSlot_C_ExecuteUbergraph_BP_NeighborPreviewSlot::CallFunc_IsValid_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_NeighborPreviewSlot_C_ExecuteUbergraph_BP_NeighborPreviewSlot, Temp_struct_Variable_20) == 0x00025C, "Member 'BP_NeighborPreviewSlot_C_ExecuteUbergraph_BP_NeighborPreviewSlot::Temp_struct_Variable_20' has a wrong offset!");
static_assert(offsetof(BP_NeighborPreviewSlot_C_ExecuteUbergraph_BP_NeighborPreviewSlot, CallFunc_GetPayload_ReturnValue_6) == 0x000264, "Member 'BP_NeighborPreviewSlot_C_ExecuteUbergraph_BP_NeighborPreviewSlot::CallFunc_GetPayload_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_NeighborPreviewSlot_C_ExecuteUbergraph_BP_NeighborPreviewSlot, CallFunc_SpawnSound2D_ReturnValue) == 0x000268, "Member 'BP_NeighborPreviewSlot_C_ExecuteUbergraph_BP_NeighborPreviewSlot::CallFunc_SpawnSound2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NeighborPreviewSlot_C_ExecuteUbergraph_BP_NeighborPreviewSlot, CallFunc_SpawnSound2D_ReturnValue_1) == 0x000270, "Member 'BP_NeighborPreviewSlot_C_ExecuteUbergraph_BP_NeighborPreviewSlot::CallFunc_SpawnSound2D_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_NeighborPreviewSlot_C_ExecuteUbergraph_BP_NeighborPreviewSlot, K2Node_MakeStruct_NeighborLoadout) == 0x000278, "Member 'BP_NeighborPreviewSlot_C_ExecuteUbergraph_BP_NeighborPreviewSlot::K2Node_MakeStruct_NeighborLoadout' has a wrong offset!");

// Function BP_NeighborPreviewSlot.BP_NeighborPreviewSlot_C.GetDefaultItemSkinID
// 0x0058 (0x0058 - 0x0000)
struct BP_NeighborPreviewSlot_C_GetDefaultItemSkinID final
{
public:
	struct FGameplayTag                           StartingItemDefaultSkinID;                         // 0x0000(0x0008)(Parm, OutParm, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_TryGetNeighborDefinition_Succeeded;       // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UNeighborDefinition>     CallFunc_TryGetNeighborDefinition_ReturnValue;     // 0x0010(0x0028)(UObjectWrapper, HasGetValueTypeHash)
	class UObject*                                CallFunc_LoadAsset_Blocking_ReturnValue;           // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UNeighborDefinition*                    K2Node_DynamicCast_AsNeighbor_Definition;          // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49[0x3];                                       // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           CallFunc_TryGetStartingItemSkinID_ReturnValue;     // 0x004C(0x0008)(NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_NeighborPreviewSlot_C_GetDefaultItemSkinID) == 0x000008, "Wrong alignment on BP_NeighborPreviewSlot_C_GetDefaultItemSkinID");
static_assert(sizeof(BP_NeighborPreviewSlot_C_GetDefaultItemSkinID) == 0x000058, "Wrong size on BP_NeighborPreviewSlot_C_GetDefaultItemSkinID");
static_assert(offsetof(BP_NeighborPreviewSlot_C_GetDefaultItemSkinID, StartingItemDefaultSkinID) == 0x000000, "Member 'BP_NeighborPreviewSlot_C_GetDefaultItemSkinID::StartingItemDefaultSkinID' has a wrong offset!");
static_assert(offsetof(BP_NeighborPreviewSlot_C_GetDefaultItemSkinID, CallFunc_TryGetNeighborDefinition_Succeeded) == 0x000008, "Member 'BP_NeighborPreviewSlot_C_GetDefaultItemSkinID::CallFunc_TryGetNeighborDefinition_Succeeded' has a wrong offset!");
static_assert(offsetof(BP_NeighborPreviewSlot_C_GetDefaultItemSkinID, CallFunc_TryGetNeighborDefinition_ReturnValue) == 0x000010, "Member 'BP_NeighborPreviewSlot_C_GetDefaultItemSkinID::CallFunc_TryGetNeighborDefinition_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NeighborPreviewSlot_C_GetDefaultItemSkinID, CallFunc_LoadAsset_Blocking_ReturnValue) == 0x000038, "Member 'BP_NeighborPreviewSlot_C_GetDefaultItemSkinID::CallFunc_LoadAsset_Blocking_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NeighborPreviewSlot_C_GetDefaultItemSkinID, K2Node_DynamicCast_AsNeighbor_Definition) == 0x000040, "Member 'BP_NeighborPreviewSlot_C_GetDefaultItemSkinID::K2Node_DynamicCast_AsNeighbor_Definition' has a wrong offset!");
static_assert(offsetof(BP_NeighborPreviewSlot_C_GetDefaultItemSkinID, K2Node_DynamicCast_bSuccess) == 0x000048, "Member 'BP_NeighborPreviewSlot_C_GetDefaultItemSkinID::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_NeighborPreviewSlot_C_GetDefaultItemSkinID, CallFunc_TryGetStartingItemSkinID_ReturnValue) == 0x00004C, "Member 'BP_NeighborPreviewSlot_C_GetDefaultItemSkinID::CallFunc_TryGetStartingItemSkinID_ReturnValue' has a wrong offset!");

// Function BP_NeighborPreviewSlot.BP_NeighborPreviewSlot_C.GetDefaultOutfitID
// 0x0050 (0x0050 - 0x0000)
struct BP_NeighborPreviewSlot_C_GetDefaultOutfitID final
{
public:
	struct FGameplayTag                           DefaultOutfitID;                                   // 0x0000(0x0008)(Parm, OutParm, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_TryGetNeighborDefinition_Succeeded;       // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UNeighborDefinition>     CallFunc_TryGetNeighborDefinition_ReturnValue;     // 0x0010(0x0028)(UObjectWrapper, HasGetValueTypeHash)
	class UObject*                                CallFunc_LoadAsset_Blocking_ReturnValue;           // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UNeighborDefinition*                    K2Node_DynamicCast_AsNeighbor_Definition;          // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_NeighborPreviewSlot_C_GetDefaultOutfitID) == 0x000008, "Wrong alignment on BP_NeighborPreviewSlot_C_GetDefaultOutfitID");
static_assert(sizeof(BP_NeighborPreviewSlot_C_GetDefaultOutfitID) == 0x000050, "Wrong size on BP_NeighborPreviewSlot_C_GetDefaultOutfitID");
static_assert(offsetof(BP_NeighborPreviewSlot_C_GetDefaultOutfitID, DefaultOutfitID) == 0x000000, "Member 'BP_NeighborPreviewSlot_C_GetDefaultOutfitID::DefaultOutfitID' has a wrong offset!");
static_assert(offsetof(BP_NeighborPreviewSlot_C_GetDefaultOutfitID, CallFunc_TryGetNeighborDefinition_Succeeded) == 0x000008, "Member 'BP_NeighborPreviewSlot_C_GetDefaultOutfitID::CallFunc_TryGetNeighborDefinition_Succeeded' has a wrong offset!");
static_assert(offsetof(BP_NeighborPreviewSlot_C_GetDefaultOutfitID, CallFunc_TryGetNeighborDefinition_ReturnValue) == 0x000010, "Member 'BP_NeighborPreviewSlot_C_GetDefaultOutfitID::CallFunc_TryGetNeighborDefinition_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NeighborPreviewSlot_C_GetDefaultOutfitID, CallFunc_LoadAsset_Blocking_ReturnValue) == 0x000038, "Member 'BP_NeighborPreviewSlot_C_GetDefaultOutfitID::CallFunc_LoadAsset_Blocking_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NeighborPreviewSlot_C_GetDefaultOutfitID, K2Node_DynamicCast_AsNeighbor_Definition) == 0x000040, "Member 'BP_NeighborPreviewSlot_C_GetDefaultOutfitID::K2Node_DynamicCast_AsNeighbor_Definition' has a wrong offset!");
static_assert(offsetof(BP_NeighborPreviewSlot_C_GetDefaultOutfitID, K2Node_DynamicCast_bSuccess) == 0x000048, "Member 'BP_NeighborPreviewSlot_C_GetDefaultOutfitID::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BP_NeighborPreviewSlot.BP_NeighborPreviewSlot_C.GetItemSkinDefinition
// 0x0060 (0x0060 - 0x0000)
struct BP_NeighborPreviewSlot_C_GetItemSkinDefinition final
{
public:
	TSoftObjectPtr<class UItemSkinDefinition>     SoftItemSkinDefinition;                            // 0x0000(0x0028)(Parm, OutParm, HasGetValueTypeHash)
	struct FGameplayTag                           CallFunc_GetLoadoutStartingItemSkin_StartingItemSkinID; // 0x0028(0x0008)(NoDestructor, HasGetValueTypeHash)
	TSoftObjectPtr<class UItemSkinDefinition>     CallFunc_TryGetItemSkinDefinition_OutSoftItemSkinDefinition; // 0x0030(0x0028)(UObjectWrapper, HasGetValueTypeHash)
	bool                                          CallFunc_TryGetItemSkinDefinition_ReturnValue;     // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_NeighborPreviewSlot_C_GetItemSkinDefinition) == 0x000008, "Wrong alignment on BP_NeighborPreviewSlot_C_GetItemSkinDefinition");
static_assert(sizeof(BP_NeighborPreviewSlot_C_GetItemSkinDefinition) == 0x000060, "Wrong size on BP_NeighborPreviewSlot_C_GetItemSkinDefinition");
static_assert(offsetof(BP_NeighborPreviewSlot_C_GetItemSkinDefinition, SoftItemSkinDefinition) == 0x000000, "Member 'BP_NeighborPreviewSlot_C_GetItemSkinDefinition::SoftItemSkinDefinition' has a wrong offset!");
static_assert(offsetof(BP_NeighborPreviewSlot_C_GetItemSkinDefinition, CallFunc_GetLoadoutStartingItemSkin_StartingItemSkinID) == 0x000028, "Member 'BP_NeighborPreviewSlot_C_GetItemSkinDefinition::CallFunc_GetLoadoutStartingItemSkin_StartingItemSkinID' has a wrong offset!");
static_assert(offsetof(BP_NeighborPreviewSlot_C_GetItemSkinDefinition, CallFunc_TryGetItemSkinDefinition_OutSoftItemSkinDefinition) == 0x000030, "Member 'BP_NeighborPreviewSlot_C_GetItemSkinDefinition::CallFunc_TryGetItemSkinDefinition_OutSoftItemSkinDefinition' has a wrong offset!");
static_assert(offsetof(BP_NeighborPreviewSlot_C_GetItemSkinDefinition, CallFunc_TryGetItemSkinDefinition_ReturnValue) == 0x000058, "Member 'BP_NeighborPreviewSlot_C_GetItemSkinDefinition::CallFunc_TryGetItemSkinDefinition_ReturnValue' has a wrong offset!");

// Function BP_NeighborPreviewSlot.BP_NeighborPreviewSlot_C.GetLoadoutStartingItemSkin
// 0x0078 (0x0078 - 0x0000)
struct BP_NeighborPreviewSlot_C_GetLoadoutStartingItemSkin final
{
public:
	struct FNeighborLoadout                       NeighborLoadout;                                   // 0x0000(0x0030)(BlueprintVisible, BlueprintReadOnly, Parm)
	struct FGameplayTag                           StartingItemSkinID;                                // 0x0030(0x0008)(Parm, OutParm, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           StartingItemID;                                    // 0x0038(0x0008)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FItemLoadout                           CallFunc_Array_Get_Item;                           // 0x0048(0x0010)(NoDestructor)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5D[0x3];                                       // 0x005D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           CallFunc_GetDefaultItemSkinID_StartingItemDefaultSkinID; // 0x0064(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_GameplayTag_ReturnValue;       // 0x006C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6D[0x3];                                       // 0x006D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           CallFunc_GetNeighborStartingItemID_NeighborItemID; // 0x0070(0x0008)(NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_NeighborPreviewSlot_C_GetLoadoutStartingItemSkin) == 0x000008, "Wrong alignment on BP_NeighborPreviewSlot_C_GetLoadoutStartingItemSkin");
static_assert(sizeof(BP_NeighborPreviewSlot_C_GetLoadoutStartingItemSkin) == 0x000078, "Wrong size on BP_NeighborPreviewSlot_C_GetLoadoutStartingItemSkin");
static_assert(offsetof(BP_NeighborPreviewSlot_C_GetLoadoutStartingItemSkin, NeighborLoadout) == 0x000000, "Member 'BP_NeighborPreviewSlot_C_GetLoadoutStartingItemSkin::NeighborLoadout' has a wrong offset!");
static_assert(offsetof(BP_NeighborPreviewSlot_C_GetLoadoutStartingItemSkin, StartingItemSkinID) == 0x000030, "Member 'BP_NeighborPreviewSlot_C_GetLoadoutStartingItemSkin::StartingItemSkinID' has a wrong offset!");
static_assert(offsetof(BP_NeighborPreviewSlot_C_GetLoadoutStartingItemSkin, StartingItemID) == 0x000038, "Member 'BP_NeighborPreviewSlot_C_GetLoadoutStartingItemSkin::StartingItemID' has a wrong offset!");
static_assert(offsetof(BP_NeighborPreviewSlot_C_GetLoadoutStartingItemSkin, Temp_int_Array_Index_Variable) == 0x000040, "Member 'BP_NeighborPreviewSlot_C_GetLoadoutStartingItemSkin::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_NeighborPreviewSlot_C_GetLoadoutStartingItemSkin, CallFunc_Array_Length_ReturnValue) == 0x000044, "Member 'BP_NeighborPreviewSlot_C_GetLoadoutStartingItemSkin::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NeighborPreviewSlot_C_GetLoadoutStartingItemSkin, CallFunc_Array_Get_Item) == 0x000048, "Member 'BP_NeighborPreviewSlot_C_GetLoadoutStartingItemSkin::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_NeighborPreviewSlot_C_GetLoadoutStartingItemSkin, Temp_int_Loop_Counter_Variable) == 0x000058, "Member 'BP_NeighborPreviewSlot_C_GetLoadoutStartingItemSkin::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_NeighborPreviewSlot_C_GetLoadoutStartingItemSkin, CallFunc_Less_IntInt_ReturnValue) == 0x00005C, "Member 'BP_NeighborPreviewSlot_C_GetLoadoutStartingItemSkin::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NeighborPreviewSlot_C_GetLoadoutStartingItemSkin, CallFunc_Add_IntInt_ReturnValue) == 0x000060, "Member 'BP_NeighborPreviewSlot_C_GetLoadoutStartingItemSkin::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NeighborPreviewSlot_C_GetLoadoutStartingItemSkin, CallFunc_GetDefaultItemSkinID_StartingItemDefaultSkinID) == 0x000064, "Member 'BP_NeighborPreviewSlot_C_GetLoadoutStartingItemSkin::CallFunc_GetDefaultItemSkinID_StartingItemDefaultSkinID' has a wrong offset!");
static_assert(offsetof(BP_NeighborPreviewSlot_C_GetLoadoutStartingItemSkin, CallFunc_EqualEqual_GameplayTag_ReturnValue) == 0x00006C, "Member 'BP_NeighborPreviewSlot_C_GetLoadoutStartingItemSkin::CallFunc_EqualEqual_GameplayTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NeighborPreviewSlot_C_GetLoadoutStartingItemSkin, CallFunc_GetNeighborStartingItemID_NeighborItemID) == 0x000070, "Member 'BP_NeighborPreviewSlot_C_GetLoadoutStartingItemSkin::CallFunc_GetNeighborStartingItemID_NeighborItemID' has a wrong offset!");

// Function BP_NeighborPreviewSlot.BP_NeighborPreviewSlot_C.GetNeighborStartingItemID
// 0x0058 (0x0058 - 0x0000)
struct BP_NeighborPreviewSlot_C_GetNeighborStartingItemID final
{
public:
	struct FGameplayTag                           NeighborItemID;                                    // 0x0000(0x0008)(Parm, OutParm, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_TryGetNeighborDefinition_Succeeded;       // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UNeighborDefinition>     CallFunc_TryGetNeighborDefinition_ReturnValue;     // 0x0010(0x0028)(UObjectWrapper, HasGetValueTypeHash)
	class UObject*                                CallFunc_LoadAsset_Blocking_ReturnValue;           // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UNeighborDefinition*                    K2Node_DynamicCast_AsNeighbor_Definition;          // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49[0x3];                                       // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           CallFunc_GetStartingItemID_ReturnValue;            // 0x004C(0x0008)(NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_NeighborPreviewSlot_C_GetNeighborStartingItemID) == 0x000008, "Wrong alignment on BP_NeighborPreviewSlot_C_GetNeighborStartingItemID");
static_assert(sizeof(BP_NeighborPreviewSlot_C_GetNeighborStartingItemID) == 0x000058, "Wrong size on BP_NeighborPreviewSlot_C_GetNeighborStartingItemID");
static_assert(offsetof(BP_NeighborPreviewSlot_C_GetNeighborStartingItemID, NeighborItemID) == 0x000000, "Member 'BP_NeighborPreviewSlot_C_GetNeighborStartingItemID::NeighborItemID' has a wrong offset!");
static_assert(offsetof(BP_NeighborPreviewSlot_C_GetNeighborStartingItemID, CallFunc_TryGetNeighborDefinition_Succeeded) == 0x000008, "Member 'BP_NeighborPreviewSlot_C_GetNeighborStartingItemID::CallFunc_TryGetNeighborDefinition_Succeeded' has a wrong offset!");
static_assert(offsetof(BP_NeighborPreviewSlot_C_GetNeighborStartingItemID, CallFunc_TryGetNeighborDefinition_ReturnValue) == 0x000010, "Member 'BP_NeighborPreviewSlot_C_GetNeighborStartingItemID::CallFunc_TryGetNeighborDefinition_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NeighborPreviewSlot_C_GetNeighborStartingItemID, CallFunc_LoadAsset_Blocking_ReturnValue) == 0x000038, "Member 'BP_NeighborPreviewSlot_C_GetNeighborStartingItemID::CallFunc_LoadAsset_Blocking_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NeighborPreviewSlot_C_GetNeighborStartingItemID, K2Node_DynamicCast_AsNeighbor_Definition) == 0x000040, "Member 'BP_NeighborPreviewSlot_C_GetNeighborStartingItemID::K2Node_DynamicCast_AsNeighbor_Definition' has a wrong offset!");
static_assert(offsetof(BP_NeighborPreviewSlot_C_GetNeighborStartingItemID, K2Node_DynamicCast_bSuccess) == 0x000048, "Member 'BP_NeighborPreviewSlot_C_GetNeighborStartingItemID::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_NeighborPreviewSlot_C_GetNeighborStartingItemID, CallFunc_GetStartingItemID_ReturnValue) == 0x00004C, "Member 'BP_NeighborPreviewSlot_C_GetNeighborStartingItemID::CallFunc_GetStartingItemID_ReturnValue' has a wrong offset!");

// Function BP_NeighborPreviewSlot.BP_NeighborPreviewSlot_C.MatchesPreviewItemSkin
// 0x004C (0x004C - 0x0000)
struct BP_NeighborPreviewSlot_C_MatchesPreviewItemSkin final
{
public:
	struct FGameplayTag                           ItemSkinID;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           NeighborItemID;                                    // 0x000C(0x0008)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           CallFunc_GetDefaultItemSkinID_StartingItemDefaultSkinID; // 0x0020(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_GameplayTag_ReturnValue;       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           CallFunc_GetNeighborStartingItemID_NeighborItemID; // 0x002C(0x0008)(NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FItemLoadout                           CallFunc_Array_Get_Item;                           // 0x0038(0x0010)(NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_GameplayTag_ReturnValue_1;     // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_GameplayTag_ReturnValue_2;     // 0x004A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_NeighborPreviewSlot_C_MatchesPreviewItemSkin) == 0x000004, "Wrong alignment on BP_NeighborPreviewSlot_C_MatchesPreviewItemSkin");
static_assert(sizeof(BP_NeighborPreviewSlot_C_MatchesPreviewItemSkin) == 0x00004C, "Wrong size on BP_NeighborPreviewSlot_C_MatchesPreviewItemSkin");
static_assert(offsetof(BP_NeighborPreviewSlot_C_MatchesPreviewItemSkin, ItemSkinID) == 0x000000, "Member 'BP_NeighborPreviewSlot_C_MatchesPreviewItemSkin::ItemSkinID' has a wrong offset!");
static_assert(offsetof(BP_NeighborPreviewSlot_C_MatchesPreviewItemSkin, ReturnValue) == 0x000008, "Member 'BP_NeighborPreviewSlot_C_MatchesPreviewItemSkin::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NeighborPreviewSlot_C_MatchesPreviewItemSkin, NeighborItemID) == 0x00000C, "Member 'BP_NeighborPreviewSlot_C_MatchesPreviewItemSkin::NeighborItemID' has a wrong offset!");
static_assert(offsetof(BP_NeighborPreviewSlot_C_MatchesPreviewItemSkin, Temp_int_Array_Index_Variable) == 0x000014, "Member 'BP_NeighborPreviewSlot_C_MatchesPreviewItemSkin::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_NeighborPreviewSlot_C_MatchesPreviewItemSkin, Temp_int_Loop_Counter_Variable) == 0x000018, "Member 'BP_NeighborPreviewSlot_C_MatchesPreviewItemSkin::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_NeighborPreviewSlot_C_MatchesPreviewItemSkin, CallFunc_Add_IntInt_ReturnValue) == 0x00001C, "Member 'BP_NeighborPreviewSlot_C_MatchesPreviewItemSkin::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NeighborPreviewSlot_C_MatchesPreviewItemSkin, CallFunc_GetDefaultItemSkinID_StartingItemDefaultSkinID) == 0x000020, "Member 'BP_NeighborPreviewSlot_C_MatchesPreviewItemSkin::CallFunc_GetDefaultItemSkinID_StartingItemDefaultSkinID' has a wrong offset!");
static_assert(offsetof(BP_NeighborPreviewSlot_C_MatchesPreviewItemSkin, CallFunc_EqualEqual_GameplayTag_ReturnValue) == 0x000028, "Member 'BP_NeighborPreviewSlot_C_MatchesPreviewItemSkin::CallFunc_EqualEqual_GameplayTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NeighborPreviewSlot_C_MatchesPreviewItemSkin, CallFunc_GetNeighborStartingItemID_NeighborItemID) == 0x00002C, "Member 'BP_NeighborPreviewSlot_C_MatchesPreviewItemSkin::CallFunc_GetNeighborStartingItemID_NeighborItemID' has a wrong offset!");
static_assert(offsetof(BP_NeighborPreviewSlot_C_MatchesPreviewItemSkin, CallFunc_Array_Length_ReturnValue) == 0x000034, "Member 'BP_NeighborPreviewSlot_C_MatchesPreviewItemSkin::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NeighborPreviewSlot_C_MatchesPreviewItemSkin, CallFunc_Array_Get_Item) == 0x000038, "Member 'BP_NeighborPreviewSlot_C_MatchesPreviewItemSkin::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_NeighborPreviewSlot_C_MatchesPreviewItemSkin, CallFunc_Less_IntInt_ReturnValue) == 0x000048, "Member 'BP_NeighborPreviewSlot_C_MatchesPreviewItemSkin::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NeighborPreviewSlot_C_MatchesPreviewItemSkin, CallFunc_EqualEqual_GameplayTag_ReturnValue_1) == 0x000049, "Member 'BP_NeighborPreviewSlot_C_MatchesPreviewItemSkin::CallFunc_EqualEqual_GameplayTag_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_NeighborPreviewSlot_C_MatchesPreviewItemSkin, CallFunc_EqualEqual_GameplayTag_ReturnValue_2) == 0x00004A, "Member 'BP_NeighborPreviewSlot_C_MatchesPreviewItemSkin::CallFunc_EqualEqual_GameplayTag_ReturnValue_2' has a wrong offset!");

// Function BP_NeighborPreviewSlot.BP_NeighborPreviewSlot_C.MatchesPreviewOutfit
// 0x0030 (0x0030 - 0x0000)
struct BP_NeighborPreviewSlot_C_MatchesPreviewOutfit final
{
public:
	struct FGameplayTag                           OutfitID;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           PreviewOutfitID;                                   // 0x000C(0x0008)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           CallFunc_GetDefaultOutfitID_DefaultOutfitID;       // 0x0014(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_GameplayTag_ReturnValue;       // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsGameplayTagValid_ReturnValue;           // 0x001D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_GameplayTag_ReturnValue_1;     // 0x001E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsGameplayTagValid_ReturnValue_1;         // 0x001F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           CallFunc_GetDefaultOutfitID_DefaultOutfitID_1;     // 0x0024(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_GameplayTag_ReturnValue_2;     // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_NeighborPreviewSlot_C_MatchesPreviewOutfit) == 0x000004, "Wrong alignment on BP_NeighborPreviewSlot_C_MatchesPreviewOutfit");
static_assert(sizeof(BP_NeighborPreviewSlot_C_MatchesPreviewOutfit) == 0x000030, "Wrong size on BP_NeighborPreviewSlot_C_MatchesPreviewOutfit");
static_assert(offsetof(BP_NeighborPreviewSlot_C_MatchesPreviewOutfit, OutfitID) == 0x000000, "Member 'BP_NeighborPreviewSlot_C_MatchesPreviewOutfit::OutfitID' has a wrong offset!");
static_assert(offsetof(BP_NeighborPreviewSlot_C_MatchesPreviewOutfit, ReturnValue) == 0x000008, "Member 'BP_NeighborPreviewSlot_C_MatchesPreviewOutfit::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NeighborPreviewSlot_C_MatchesPreviewOutfit, PreviewOutfitID) == 0x00000C, "Member 'BP_NeighborPreviewSlot_C_MatchesPreviewOutfit::PreviewOutfitID' has a wrong offset!");
static_assert(offsetof(BP_NeighborPreviewSlot_C_MatchesPreviewOutfit, CallFunc_GetDefaultOutfitID_DefaultOutfitID) == 0x000014, "Member 'BP_NeighborPreviewSlot_C_MatchesPreviewOutfit::CallFunc_GetDefaultOutfitID_DefaultOutfitID' has a wrong offset!");
static_assert(offsetof(BP_NeighborPreviewSlot_C_MatchesPreviewOutfit, CallFunc_EqualEqual_GameplayTag_ReturnValue) == 0x00001C, "Member 'BP_NeighborPreviewSlot_C_MatchesPreviewOutfit::CallFunc_EqualEqual_GameplayTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NeighborPreviewSlot_C_MatchesPreviewOutfit, CallFunc_IsGameplayTagValid_ReturnValue) == 0x00001D, "Member 'BP_NeighborPreviewSlot_C_MatchesPreviewOutfit::CallFunc_IsGameplayTagValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NeighborPreviewSlot_C_MatchesPreviewOutfit, CallFunc_EqualEqual_GameplayTag_ReturnValue_1) == 0x00001E, "Member 'BP_NeighborPreviewSlot_C_MatchesPreviewOutfit::CallFunc_EqualEqual_GameplayTag_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_NeighborPreviewSlot_C_MatchesPreviewOutfit, CallFunc_IsGameplayTagValid_ReturnValue_1) == 0x00001F, "Member 'BP_NeighborPreviewSlot_C_MatchesPreviewOutfit::CallFunc_IsGameplayTagValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_NeighborPreviewSlot_C_MatchesPreviewOutfit, CallFunc_BooleanAND_ReturnValue) == 0x000020, "Member 'BP_NeighborPreviewSlot_C_MatchesPreviewOutfit::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NeighborPreviewSlot_C_MatchesPreviewOutfit, CallFunc_GetDefaultOutfitID_DefaultOutfitID_1) == 0x000024, "Member 'BP_NeighborPreviewSlot_C_MatchesPreviewOutfit::CallFunc_GetDefaultOutfitID_DefaultOutfitID_1' has a wrong offset!");
static_assert(offsetof(BP_NeighborPreviewSlot_C_MatchesPreviewOutfit, CallFunc_EqualEqual_GameplayTag_ReturnValue_2) == 0x00002C, "Member 'BP_NeighborPreviewSlot_C_MatchesPreviewOutfit::CallFunc_EqualEqual_GameplayTag_ReturnValue_2' has a wrong offset!");

// Function BP_NeighborPreviewSlot.BP_NeighborPreviewSlot_C.OnMessageReceived_018ACE1444E127E1BE1137AA0231E74D
// 0x0010 (0x0010 - 0x0000)
struct BP_NeighborPreviewSlot_C_OnMessageReceived_018ACE1444E127E1BE1137AA0231E74D final
{
public:
	class UAsyncAction_ListenForGameplayMessage*  ProxyObject;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           ActualChannel;                                     // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_NeighborPreviewSlot_C_OnMessageReceived_018ACE1444E127E1BE1137AA0231E74D) == 0x000008, "Wrong alignment on BP_NeighborPreviewSlot_C_OnMessageReceived_018ACE1444E127E1BE1137AA0231E74D");
static_assert(sizeof(BP_NeighborPreviewSlot_C_OnMessageReceived_018ACE1444E127E1BE1137AA0231E74D) == 0x000010, "Wrong size on BP_NeighborPreviewSlot_C_OnMessageReceived_018ACE1444E127E1BE1137AA0231E74D");
static_assert(offsetof(BP_NeighborPreviewSlot_C_OnMessageReceived_018ACE1444E127E1BE1137AA0231E74D, ProxyObject) == 0x000000, "Member 'BP_NeighborPreviewSlot_C_OnMessageReceived_018ACE1444E127E1BE1137AA0231E74D::ProxyObject' has a wrong offset!");
static_assert(offsetof(BP_NeighborPreviewSlot_C_OnMessageReceived_018ACE1444E127E1BE1137AA0231E74D, ActualChannel) == 0x000008, "Member 'BP_NeighborPreviewSlot_C_OnMessageReceived_018ACE1444E127E1BE1137AA0231E74D::ActualChannel' has a wrong offset!");

// Function BP_NeighborPreviewSlot.BP_NeighborPreviewSlot_C.OnMessageReceived_04A5D86F489A4066B8DB90BC811E3ECB
// 0x0010 (0x0010 - 0x0000)
struct BP_NeighborPreviewSlot_C_OnMessageReceived_04A5D86F489A4066B8DB90BC811E3ECB final
{
public:
	class UAsyncAction_ListenForGameplayMessage*  ProxyObject;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           ActualChannel;                                     // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_NeighborPreviewSlot_C_OnMessageReceived_04A5D86F489A4066B8DB90BC811E3ECB) == 0x000008, "Wrong alignment on BP_NeighborPreviewSlot_C_OnMessageReceived_04A5D86F489A4066B8DB90BC811E3ECB");
static_assert(sizeof(BP_NeighborPreviewSlot_C_OnMessageReceived_04A5D86F489A4066B8DB90BC811E3ECB) == 0x000010, "Wrong size on BP_NeighborPreviewSlot_C_OnMessageReceived_04A5D86F489A4066B8DB90BC811E3ECB");
static_assert(offsetof(BP_NeighborPreviewSlot_C_OnMessageReceived_04A5D86F489A4066B8DB90BC811E3ECB, ProxyObject) == 0x000000, "Member 'BP_NeighborPreviewSlot_C_OnMessageReceived_04A5D86F489A4066B8DB90BC811E3ECB::ProxyObject' has a wrong offset!");
static_assert(offsetof(BP_NeighborPreviewSlot_C_OnMessageReceived_04A5D86F489A4066B8DB90BC811E3ECB, ActualChannel) == 0x000008, "Member 'BP_NeighborPreviewSlot_C_OnMessageReceived_04A5D86F489A4066B8DB90BC811E3ECB::ActualChannel' has a wrong offset!");

// Function BP_NeighborPreviewSlot.BP_NeighborPreviewSlot_C.OnMessageReceived_0ED6050848ECAD4F7818CBBB6C30BA50
// 0x0010 (0x0010 - 0x0000)
struct BP_NeighborPreviewSlot_C_OnMessageReceived_0ED6050848ECAD4F7818CBBB6C30BA50 final
{
public:
	class UAsyncAction_ListenForGameplayMessage*  ProxyObject;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           ActualChannel;                                     // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_NeighborPreviewSlot_C_OnMessageReceived_0ED6050848ECAD4F7818CBBB6C30BA50) == 0x000008, "Wrong alignment on BP_NeighborPreviewSlot_C_OnMessageReceived_0ED6050848ECAD4F7818CBBB6C30BA50");
static_assert(sizeof(BP_NeighborPreviewSlot_C_OnMessageReceived_0ED6050848ECAD4F7818CBBB6C30BA50) == 0x000010, "Wrong size on BP_NeighborPreviewSlot_C_OnMessageReceived_0ED6050848ECAD4F7818CBBB6C30BA50");
static_assert(offsetof(BP_NeighborPreviewSlot_C_OnMessageReceived_0ED6050848ECAD4F7818CBBB6C30BA50, ProxyObject) == 0x000000, "Member 'BP_NeighborPreviewSlot_C_OnMessageReceived_0ED6050848ECAD4F7818CBBB6C30BA50::ProxyObject' has a wrong offset!");
static_assert(offsetof(BP_NeighborPreviewSlot_C_OnMessageReceived_0ED6050848ECAD4F7818CBBB6C30BA50, ActualChannel) == 0x000008, "Member 'BP_NeighborPreviewSlot_C_OnMessageReceived_0ED6050848ECAD4F7818CBBB6C30BA50::ActualChannel' has a wrong offset!");

// Function BP_NeighborPreviewSlot.BP_NeighborPreviewSlot_C.OnMessageReceived_2EBC32FB4B902403C87A67A78FE79464
// 0x0010 (0x0010 - 0x0000)
struct BP_NeighborPreviewSlot_C_OnMessageReceived_2EBC32FB4B902403C87A67A78FE79464 final
{
public:
	class UAsyncAction_ListenForGameplayMessage*  ProxyObject;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           ActualChannel;                                     // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_NeighborPreviewSlot_C_OnMessageReceived_2EBC32FB4B902403C87A67A78FE79464) == 0x000008, "Wrong alignment on BP_NeighborPreviewSlot_C_OnMessageReceived_2EBC32FB4B902403C87A67A78FE79464");
static_assert(sizeof(BP_NeighborPreviewSlot_C_OnMessageReceived_2EBC32FB4B902403C87A67A78FE79464) == 0x000010, "Wrong size on BP_NeighborPreviewSlot_C_OnMessageReceived_2EBC32FB4B902403C87A67A78FE79464");
static_assert(offsetof(BP_NeighborPreviewSlot_C_OnMessageReceived_2EBC32FB4B902403C87A67A78FE79464, ProxyObject) == 0x000000, "Member 'BP_NeighborPreviewSlot_C_OnMessageReceived_2EBC32FB4B902403C87A67A78FE79464::ProxyObject' has a wrong offset!");
static_assert(offsetof(BP_NeighborPreviewSlot_C_OnMessageReceived_2EBC32FB4B902403C87A67A78FE79464, ActualChannel) == 0x000008, "Member 'BP_NeighborPreviewSlot_C_OnMessageReceived_2EBC32FB4B902403C87A67A78FE79464::ActualChannel' has a wrong offset!");

// Function BP_NeighborPreviewSlot.BP_NeighborPreviewSlot_C.OnMessageReceived_359E8C7C4BB4819D6486F7AAC9A412ED
// 0x0010 (0x0010 - 0x0000)
struct BP_NeighborPreviewSlot_C_OnMessageReceived_359E8C7C4BB4819D6486F7AAC9A412ED final
{
public:
	class UAsyncAction_ListenForGameplayMessage*  ProxyObject;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           ActualChannel;                                     // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_NeighborPreviewSlot_C_OnMessageReceived_359E8C7C4BB4819D6486F7AAC9A412ED) == 0x000008, "Wrong alignment on BP_NeighborPreviewSlot_C_OnMessageReceived_359E8C7C4BB4819D6486F7AAC9A412ED");
static_assert(sizeof(BP_NeighborPreviewSlot_C_OnMessageReceived_359E8C7C4BB4819D6486F7AAC9A412ED) == 0x000010, "Wrong size on BP_NeighborPreviewSlot_C_OnMessageReceived_359E8C7C4BB4819D6486F7AAC9A412ED");
static_assert(offsetof(BP_NeighborPreviewSlot_C_OnMessageReceived_359E8C7C4BB4819D6486F7AAC9A412ED, ProxyObject) == 0x000000, "Member 'BP_NeighborPreviewSlot_C_OnMessageReceived_359E8C7C4BB4819D6486F7AAC9A412ED::ProxyObject' has a wrong offset!");
static_assert(offsetof(BP_NeighborPreviewSlot_C_OnMessageReceived_359E8C7C4BB4819D6486F7AAC9A412ED, ActualChannel) == 0x000008, "Member 'BP_NeighborPreviewSlot_C_OnMessageReceived_359E8C7C4BB4819D6486F7AAC9A412ED::ActualChannel' has a wrong offset!");

// Function BP_NeighborPreviewSlot.BP_NeighborPreviewSlot_C.OnMessageReceived_BFC95CFF4B3725D61E619CBE2F4620A9
// 0x0010 (0x0010 - 0x0000)
struct BP_NeighborPreviewSlot_C_OnMessageReceived_BFC95CFF4B3725D61E619CBE2F4620A9 final
{
public:
	class UAsyncAction_ListenForGameplayMessage*  ProxyObject;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           ActualChannel;                                     // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_NeighborPreviewSlot_C_OnMessageReceived_BFC95CFF4B3725D61E619CBE2F4620A9) == 0x000008, "Wrong alignment on BP_NeighborPreviewSlot_C_OnMessageReceived_BFC95CFF4B3725D61E619CBE2F4620A9");
static_assert(sizeof(BP_NeighborPreviewSlot_C_OnMessageReceived_BFC95CFF4B3725D61E619CBE2F4620A9) == 0x000010, "Wrong size on BP_NeighborPreviewSlot_C_OnMessageReceived_BFC95CFF4B3725D61E619CBE2F4620A9");
static_assert(offsetof(BP_NeighborPreviewSlot_C_OnMessageReceived_BFC95CFF4B3725D61E619CBE2F4620A9, ProxyObject) == 0x000000, "Member 'BP_NeighborPreviewSlot_C_OnMessageReceived_BFC95CFF4B3725D61E619CBE2F4620A9::ProxyObject' has a wrong offset!");
static_assert(offsetof(BP_NeighborPreviewSlot_C_OnMessageReceived_BFC95CFF4B3725D61E619CBE2F4620A9, ActualChannel) == 0x000008, "Member 'BP_NeighborPreviewSlot_C_OnMessageReceived_BFC95CFF4B3725D61E619CBE2F4620A9::ActualChannel' has a wrong offset!");

// Function BP_NeighborPreviewSlot.BP_NeighborPreviewSlot_C.OnMessageReceived_F7361A61464B111E7BA467BDC0873F6A
// 0x0010 (0x0010 - 0x0000)
struct BP_NeighborPreviewSlot_C_OnMessageReceived_F7361A61464B111E7BA467BDC0873F6A final
{
public:
	class UAsyncAction_ListenForGameplayMessage*  ProxyObject;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           ActualChannel;                                     // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_NeighborPreviewSlot_C_OnMessageReceived_F7361A61464B111E7BA467BDC0873F6A) == 0x000008, "Wrong alignment on BP_NeighborPreviewSlot_C_OnMessageReceived_F7361A61464B111E7BA467BDC0873F6A");
static_assert(sizeof(BP_NeighborPreviewSlot_C_OnMessageReceived_F7361A61464B111E7BA467BDC0873F6A) == 0x000010, "Wrong size on BP_NeighborPreviewSlot_C_OnMessageReceived_F7361A61464B111E7BA467BDC0873F6A");
static_assert(offsetof(BP_NeighborPreviewSlot_C_OnMessageReceived_F7361A61464B111E7BA467BDC0873F6A, ProxyObject) == 0x000000, "Member 'BP_NeighborPreviewSlot_C_OnMessageReceived_F7361A61464B111E7BA467BDC0873F6A::ProxyObject' has a wrong offset!");
static_assert(offsetof(BP_NeighborPreviewSlot_C_OnMessageReceived_F7361A61464B111E7BA467BDC0873F6A, ActualChannel) == 0x000008, "Member 'BP_NeighborPreviewSlot_C_OnMessageReceived_F7361A61464B111E7BA467BDC0873F6A::ActualChannel' has a wrong offset!");

// Function BP_NeighborPreviewSlot.BP_NeighborPreviewSlot_C.PlayAnimation
// 0x0008 (0x0008 - 0x0000)
struct BP_NeighborPreviewSlot_C_PlayAnimation final
{
public:
	struct FGameplayTag                           Context;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_NeighborPreviewSlot_C_PlayAnimation) == 0x000004, "Wrong alignment on BP_NeighborPreviewSlot_C_PlayAnimation");
static_assert(sizeof(BP_NeighborPreviewSlot_C_PlayAnimation) == 0x000008, "Wrong size on BP_NeighborPreviewSlot_C_PlayAnimation");
static_assert(offsetof(BP_NeighborPreviewSlot_C_PlayAnimation, Context) == 0x000000, "Member 'BP_NeighborPreviewSlot_C_PlayAnimation::Context' has a wrong offset!");

// Function BP_NeighborPreviewSlot.BP_NeighborPreviewSlot_C.PreviewNeighbor
// 0x0048 (0x0048 - 0x0000)
struct BP_NeighborPreviewSlot_C_PreviewNeighbor final
{
public:
	struct FGameplayTag                           NeighborID;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	class ULocalUserOnlineServicesGameInstanceSubsystem* CallFunc_GetGameInstanceSubsystem_ReturnValue;     // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsGameplayTagValid_ReturnValue;           // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FNeighborLoadout                       CallFunc_GetNeighborLoadout_ReturnValue;           // 0x0018(0x0030)()
};
static_assert(alignof(BP_NeighborPreviewSlot_C_PreviewNeighbor) == 0x000008, "Wrong alignment on BP_NeighborPreviewSlot_C_PreviewNeighbor");
static_assert(sizeof(BP_NeighborPreviewSlot_C_PreviewNeighbor) == 0x000048, "Wrong size on BP_NeighborPreviewSlot_C_PreviewNeighbor");
static_assert(offsetof(BP_NeighborPreviewSlot_C_PreviewNeighbor, NeighborID) == 0x000000, "Member 'BP_NeighborPreviewSlot_C_PreviewNeighbor::NeighborID' has a wrong offset!");
static_assert(offsetof(BP_NeighborPreviewSlot_C_PreviewNeighbor, CallFunc_GetGameInstanceSubsystem_ReturnValue) == 0x000008, "Member 'BP_NeighborPreviewSlot_C_PreviewNeighbor::CallFunc_GetGameInstanceSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NeighborPreviewSlot_C_PreviewNeighbor, CallFunc_IsGameplayTagValid_ReturnValue) == 0x000010, "Member 'BP_NeighborPreviewSlot_C_PreviewNeighbor::CallFunc_IsGameplayTagValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NeighborPreviewSlot_C_PreviewNeighbor, CallFunc_GetNeighborLoadout_ReturnValue) == 0x000018, "Member 'BP_NeighborPreviewSlot_C_PreviewNeighbor::CallFunc_GetNeighborLoadout_ReturnValue' has a wrong offset!");

// Function BP_NeighborPreviewSlot.BP_NeighborPreviewSlot_C.PreviewNeighborItem
// 0x0028 (0x0028 - 0x0000)
struct BP_NeighborPreviewSlot_C_PreviewNeighborItem final
{
public:
	TSoftObjectPtr<class UItemSkinDefinition>     CallFunc_GetItemSkinDefinition_SoftItemSkinDefinition; // 0x0000(0x0028)(HasGetValueTypeHash)
};
static_assert(alignof(BP_NeighborPreviewSlot_C_PreviewNeighborItem) == 0x000008, "Wrong alignment on BP_NeighborPreviewSlot_C_PreviewNeighborItem");
static_assert(sizeof(BP_NeighborPreviewSlot_C_PreviewNeighborItem) == 0x000028, "Wrong size on BP_NeighborPreviewSlot_C_PreviewNeighborItem");
static_assert(offsetof(BP_NeighborPreviewSlot_C_PreviewNeighborItem, CallFunc_GetItemSkinDefinition_SoftItemSkinDefinition) == 0x000000, "Member 'BP_NeighborPreviewSlot_C_PreviewNeighborItem::CallFunc_GetItemSkinDefinition_SoftItemSkinDefinition' has a wrong offset!");

// Function BP_NeighborPreviewSlot.BP_NeighborPreviewSlot_C.PreviewNeighborOutfitAndItem
// 0x0130 (0x0130 - 0x0000)
struct BP_NeighborPreviewSlot_C_PreviewNeighborOutfitAndItem final
{
public:
	bool                                          Temp_bool_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsGameplayTagValid_ReturnValue;           // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_TryGetNeighborDefinition_Succeeded;       // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3[0x5];                                        // 0x0003(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UNeighborDefinition>     CallFunc_TryGetNeighborDefinition_ReturnValue;     // 0x0008(0x0028)(UObjectWrapper, HasGetValueTypeHash)
	class UObject*                                CallFunc_LoadAsset_Blocking_ReturnValue;           // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UNeighborDefinition*                    K2Node_DynamicCast_AsNeighbor_Definition;          // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0xF];                                       // 0x0041(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x0050(0x0060)(ConstParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           K2Node_Select_Default;                             // 0x00B0(0x0008)(NoDestructor, HasGetValueTypeHash)
	TSoftObjectPtr<class UNeighborSkinDefinition> CallFunc_TryGetNeighborSkinDefinition_OutSoftNeighborSkinDefinition; // 0x00B8(0x0028)(UObjectWrapper, HasGetValueTypeHash)
	bool                                          CallFunc_TryGetNeighborSkinDefinition_ReturnValue; // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E1[0x7];                                       // 0x00E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_LoadAsset_Blocking_ReturnValue_1;         // 0x00E8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UNeighborSkinDefinition*                K2Node_DynamicCast_AsNeighbor_Skin_Definition;     // 0x00F0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F9[0x7];                                       // 0x00F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_LoadClassAsset_Blocking_ReturnValue;      // 0x0100(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 K2Node_ClassDynamicCast_AsBP_Neighbor_Preview_Actor; // 0x0108(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ClassDynamicCast_bSuccess;                  // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_111[0x7];                                      // 0x0111(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x0118(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_NeighborPreviewActor_C*             CallFunc_FinishSpawningActor_ReturnValue;          // 0x0120(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_NeighborPreviewSlot_C_PreviewNeighborOutfitAndItem) == 0x000010, "Wrong alignment on BP_NeighborPreviewSlot_C_PreviewNeighborOutfitAndItem");
static_assert(sizeof(BP_NeighborPreviewSlot_C_PreviewNeighborOutfitAndItem) == 0x000130, "Wrong size on BP_NeighborPreviewSlot_C_PreviewNeighborOutfitAndItem");
static_assert(offsetof(BP_NeighborPreviewSlot_C_PreviewNeighborOutfitAndItem, Temp_bool_Variable) == 0x000000, "Member 'BP_NeighborPreviewSlot_C_PreviewNeighborOutfitAndItem::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_NeighborPreviewSlot_C_PreviewNeighborOutfitAndItem, CallFunc_IsGameplayTagValid_ReturnValue) == 0x000001, "Member 'BP_NeighborPreviewSlot_C_PreviewNeighborOutfitAndItem::CallFunc_IsGameplayTagValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NeighborPreviewSlot_C_PreviewNeighborOutfitAndItem, CallFunc_TryGetNeighborDefinition_Succeeded) == 0x000002, "Member 'BP_NeighborPreviewSlot_C_PreviewNeighborOutfitAndItem::CallFunc_TryGetNeighborDefinition_Succeeded' has a wrong offset!");
static_assert(offsetof(BP_NeighborPreviewSlot_C_PreviewNeighborOutfitAndItem, CallFunc_TryGetNeighborDefinition_ReturnValue) == 0x000008, "Member 'BP_NeighborPreviewSlot_C_PreviewNeighborOutfitAndItem::CallFunc_TryGetNeighborDefinition_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NeighborPreviewSlot_C_PreviewNeighborOutfitAndItem, CallFunc_LoadAsset_Blocking_ReturnValue) == 0x000030, "Member 'BP_NeighborPreviewSlot_C_PreviewNeighborOutfitAndItem::CallFunc_LoadAsset_Blocking_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NeighborPreviewSlot_C_PreviewNeighborOutfitAndItem, K2Node_DynamicCast_AsNeighbor_Definition) == 0x000038, "Member 'BP_NeighborPreviewSlot_C_PreviewNeighborOutfitAndItem::K2Node_DynamicCast_AsNeighbor_Definition' has a wrong offset!");
static_assert(offsetof(BP_NeighborPreviewSlot_C_PreviewNeighborOutfitAndItem, K2Node_DynamicCast_bSuccess) == 0x000040, "Member 'BP_NeighborPreviewSlot_C_PreviewNeighborOutfitAndItem::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_NeighborPreviewSlot_C_PreviewNeighborOutfitAndItem, CallFunc_GetTransform_ReturnValue) == 0x000050, "Member 'BP_NeighborPreviewSlot_C_PreviewNeighborOutfitAndItem::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NeighborPreviewSlot_C_PreviewNeighborOutfitAndItem, K2Node_Select_Default) == 0x0000B0, "Member 'BP_NeighborPreviewSlot_C_PreviewNeighborOutfitAndItem::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_NeighborPreviewSlot_C_PreviewNeighborOutfitAndItem, CallFunc_TryGetNeighborSkinDefinition_OutSoftNeighborSkinDefinition) == 0x0000B8, "Member 'BP_NeighborPreviewSlot_C_PreviewNeighborOutfitAndItem::CallFunc_TryGetNeighborSkinDefinition_OutSoftNeighborSkinDefinition' has a wrong offset!");
static_assert(offsetof(BP_NeighborPreviewSlot_C_PreviewNeighborOutfitAndItem, CallFunc_TryGetNeighborSkinDefinition_ReturnValue) == 0x0000E0, "Member 'BP_NeighborPreviewSlot_C_PreviewNeighborOutfitAndItem::CallFunc_TryGetNeighborSkinDefinition_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NeighborPreviewSlot_C_PreviewNeighborOutfitAndItem, CallFunc_LoadAsset_Blocking_ReturnValue_1) == 0x0000E8, "Member 'BP_NeighborPreviewSlot_C_PreviewNeighborOutfitAndItem::CallFunc_LoadAsset_Blocking_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_NeighborPreviewSlot_C_PreviewNeighborOutfitAndItem, K2Node_DynamicCast_AsNeighbor_Skin_Definition) == 0x0000F0, "Member 'BP_NeighborPreviewSlot_C_PreviewNeighborOutfitAndItem::K2Node_DynamicCast_AsNeighbor_Skin_Definition' has a wrong offset!");
static_assert(offsetof(BP_NeighborPreviewSlot_C_PreviewNeighborOutfitAndItem, K2Node_DynamicCast_bSuccess_1) == 0x0000F8, "Member 'BP_NeighborPreviewSlot_C_PreviewNeighborOutfitAndItem::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_NeighborPreviewSlot_C_PreviewNeighborOutfitAndItem, CallFunc_LoadClassAsset_Blocking_ReturnValue) == 0x000100, "Member 'BP_NeighborPreviewSlot_C_PreviewNeighborOutfitAndItem::CallFunc_LoadClassAsset_Blocking_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NeighborPreviewSlot_C_PreviewNeighborOutfitAndItem, K2Node_ClassDynamicCast_AsBP_Neighbor_Preview_Actor) == 0x000108, "Member 'BP_NeighborPreviewSlot_C_PreviewNeighborOutfitAndItem::K2Node_ClassDynamicCast_AsBP_Neighbor_Preview_Actor' has a wrong offset!");
static_assert(offsetof(BP_NeighborPreviewSlot_C_PreviewNeighborOutfitAndItem, K2Node_ClassDynamicCast_bSuccess) == 0x000110, "Member 'BP_NeighborPreviewSlot_C_PreviewNeighborOutfitAndItem::K2Node_ClassDynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_NeighborPreviewSlot_C_PreviewNeighborOutfitAndItem, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x000118, "Member 'BP_NeighborPreviewSlot_C_PreviewNeighborOutfitAndItem::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NeighborPreviewSlot_C_PreviewNeighborOutfitAndItem, CallFunc_FinishSpawningActor_ReturnValue) == 0x000120, "Member 'BP_NeighborPreviewSlot_C_PreviewNeighborOutfitAndItem::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");

// Function BP_NeighborPreviewSlot.BP_NeighborPreviewSlot_C.SetEquippedItemSkin
// 0x0090 (0x0090 - 0x0000)
struct BP_NeighborPreviewSlot_C_SetEquippedItemSkin final
{
public:
	struct FGameplayTag                           EquippedItemSkin;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           CallFunc_GetNeighborStartingItemID_NeighborItemID; // 0x0014(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FItemLoadout                           K2Node_MakeStruct_ItemLoadout;                     // 0x001C(0x0010)(NoDestructor)
	struct FItemLoadout                           K2Node_MakeStruct_ItemLoadout_1;                   // 0x002C(0x0010)(NoDestructor)
	struct FItemLoadout                           CallFunc_Array_Get_Item;                           // 0x003C(0x0010)(NoDestructor)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_GameplayTag_ReturnValue;       // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51[0x3];                                       // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FNeighborLoadout                       K2Node_MakeStruct_NeighborLoadout;                 // 0x0060(0x0030)()
};
static_assert(alignof(BP_NeighborPreviewSlot_C_SetEquippedItemSkin) == 0x000008, "Wrong alignment on BP_NeighborPreviewSlot_C_SetEquippedItemSkin");
static_assert(sizeof(BP_NeighborPreviewSlot_C_SetEquippedItemSkin) == 0x000090, "Wrong size on BP_NeighborPreviewSlot_C_SetEquippedItemSkin");
static_assert(offsetof(BP_NeighborPreviewSlot_C_SetEquippedItemSkin, EquippedItemSkin) == 0x000000, "Member 'BP_NeighborPreviewSlot_C_SetEquippedItemSkin::EquippedItemSkin' has a wrong offset!");
static_assert(offsetof(BP_NeighborPreviewSlot_C_SetEquippedItemSkin, Temp_int_Array_Index_Variable) == 0x000008, "Member 'BP_NeighborPreviewSlot_C_SetEquippedItemSkin::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_NeighborPreviewSlot_C_SetEquippedItemSkin, Temp_int_Loop_Counter_Variable) == 0x00000C, "Member 'BP_NeighborPreviewSlot_C_SetEquippedItemSkin::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_NeighborPreviewSlot_C_SetEquippedItemSkin, CallFunc_Add_IntInt_ReturnValue) == 0x000010, "Member 'BP_NeighborPreviewSlot_C_SetEquippedItemSkin::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NeighborPreviewSlot_C_SetEquippedItemSkin, CallFunc_GetNeighborStartingItemID_NeighborItemID) == 0x000014, "Member 'BP_NeighborPreviewSlot_C_SetEquippedItemSkin::CallFunc_GetNeighborStartingItemID_NeighborItemID' has a wrong offset!");
static_assert(offsetof(BP_NeighborPreviewSlot_C_SetEquippedItemSkin, K2Node_MakeStruct_ItemLoadout) == 0x00001C, "Member 'BP_NeighborPreviewSlot_C_SetEquippedItemSkin::K2Node_MakeStruct_ItemLoadout' has a wrong offset!");
static_assert(offsetof(BP_NeighborPreviewSlot_C_SetEquippedItemSkin, K2Node_MakeStruct_ItemLoadout_1) == 0x00002C, "Member 'BP_NeighborPreviewSlot_C_SetEquippedItemSkin::K2Node_MakeStruct_ItemLoadout_1' has a wrong offset!");
static_assert(offsetof(BP_NeighborPreviewSlot_C_SetEquippedItemSkin, CallFunc_Array_Get_Item) == 0x00003C, "Member 'BP_NeighborPreviewSlot_C_SetEquippedItemSkin::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_NeighborPreviewSlot_C_SetEquippedItemSkin, CallFunc_Array_Add_ReturnValue) == 0x00004C, "Member 'BP_NeighborPreviewSlot_C_SetEquippedItemSkin::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NeighborPreviewSlot_C_SetEquippedItemSkin, CallFunc_EqualEqual_GameplayTag_ReturnValue) == 0x000050, "Member 'BP_NeighborPreviewSlot_C_SetEquippedItemSkin::CallFunc_EqualEqual_GameplayTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NeighborPreviewSlot_C_SetEquippedItemSkin, CallFunc_Array_Length_ReturnValue) == 0x000054, "Member 'BP_NeighborPreviewSlot_C_SetEquippedItemSkin::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NeighborPreviewSlot_C_SetEquippedItemSkin, CallFunc_Less_IntInt_ReturnValue) == 0x000058, "Member 'BP_NeighborPreviewSlot_C_SetEquippedItemSkin::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NeighborPreviewSlot_C_SetEquippedItemSkin, K2Node_MakeStruct_NeighborLoadout) == 0x000060, "Member 'BP_NeighborPreviewSlot_C_SetEquippedItemSkin::K2Node_MakeStruct_NeighborLoadout' has a wrong offset!");

// Function BP_NeighborPreviewSlot.BP_NeighborPreviewSlot_C.SetEquippedLoadout
// 0x0030 (0x0030 - 0x0000)
struct BP_NeighborPreviewSlot_C_SetEquippedLoadout final
{
public:
	struct FNeighborLoadout                       Loadout;                                           // 0x0000(0x0030)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(BP_NeighborPreviewSlot_C_SetEquippedLoadout) == 0x000008, "Wrong alignment on BP_NeighborPreviewSlot_C_SetEquippedLoadout");
static_assert(sizeof(BP_NeighborPreviewSlot_C_SetEquippedLoadout) == 0x000030, "Wrong size on BP_NeighborPreviewSlot_C_SetEquippedLoadout");
static_assert(offsetof(BP_NeighborPreviewSlot_C_SetEquippedLoadout, Loadout) == 0x000000, "Member 'BP_NeighborPreviewSlot_C_SetEquippedLoadout::Loadout' has a wrong offset!");

// Function BP_NeighborPreviewSlot.BP_NeighborPreviewSlot_C.SetItemToPreview
// 0x0014 (0x0014 - 0x0000)
struct BP_NeighborPreviewSlot_C_SetItemToPreview final
{
public:
	struct FGameplayTag                           PreviewItemID;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           CallFunc_GetNeighborStartingItemID_NeighborItemID; // 0x0008(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_MatchesTag_ReturnValue;                   // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_NeighborPreviewSlot_C_SetItemToPreview) == 0x000004, "Wrong alignment on BP_NeighborPreviewSlot_C_SetItemToPreview");
static_assert(sizeof(BP_NeighborPreviewSlot_C_SetItemToPreview) == 0x000014, "Wrong size on BP_NeighborPreviewSlot_C_SetItemToPreview");
static_assert(offsetof(BP_NeighborPreviewSlot_C_SetItemToPreview, PreviewItemID) == 0x000000, "Member 'BP_NeighborPreviewSlot_C_SetItemToPreview::PreviewItemID' has a wrong offset!");
static_assert(offsetof(BP_NeighborPreviewSlot_C_SetItemToPreview, CallFunc_GetNeighborStartingItemID_NeighborItemID) == 0x000008, "Member 'BP_NeighborPreviewSlot_C_SetItemToPreview::CallFunc_GetNeighborStartingItemID_NeighborItemID' has a wrong offset!");
static_assert(offsetof(BP_NeighborPreviewSlot_C_SetItemToPreview, CallFunc_MatchesTag_ReturnValue) == 0x000010, "Member 'BP_NeighborPreviewSlot_C_SetItemToPreview::CallFunc_MatchesTag_ReturnValue' has a wrong offset!");

// Function BP_NeighborPreviewSlot.BP_NeighborPreviewSlot_C.SetLoadoutItemSkin
// 0x0058 (0x0058 - 0x0000)
struct BP_NeighborPreviewSlot_C_SetLoadoutItemSkin final
{
public:
	struct FGameplayTag                           ItemSkinID;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	struct FItemLoadout                           ItemSkinToAdd;                                     // 0x0008(0x0010)(Edit, BlueprintVisible, NoDestructor)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           CallFunc_GetNeighborStartingItemID_NeighborItemID; // 0x0024(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FItemLoadout                           K2Node_MakeStruct_ItemLoadout;                     // 0x002C(0x0010)(NoDestructor)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FItemLoadout                           CallFunc_Array_Get_Item;                           // 0x0040(0x0010)(NoDestructor)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_GameplayTag_ReturnValue;       // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0055(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_NeighborPreviewSlot_C_SetLoadoutItemSkin) == 0x000004, "Wrong alignment on BP_NeighborPreviewSlot_C_SetLoadoutItemSkin");
static_assert(sizeof(BP_NeighborPreviewSlot_C_SetLoadoutItemSkin) == 0x000058, "Wrong size on BP_NeighborPreviewSlot_C_SetLoadoutItemSkin");
static_assert(offsetof(BP_NeighborPreviewSlot_C_SetLoadoutItemSkin, ItemSkinID) == 0x000000, "Member 'BP_NeighborPreviewSlot_C_SetLoadoutItemSkin::ItemSkinID' has a wrong offset!");
static_assert(offsetof(BP_NeighborPreviewSlot_C_SetLoadoutItemSkin, ItemSkinToAdd) == 0x000008, "Member 'BP_NeighborPreviewSlot_C_SetLoadoutItemSkin::ItemSkinToAdd' has a wrong offset!");
static_assert(offsetof(BP_NeighborPreviewSlot_C_SetLoadoutItemSkin, Temp_int_Array_Index_Variable) == 0x000018, "Member 'BP_NeighborPreviewSlot_C_SetLoadoutItemSkin::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_NeighborPreviewSlot_C_SetLoadoutItemSkin, Temp_int_Loop_Counter_Variable) == 0x00001C, "Member 'BP_NeighborPreviewSlot_C_SetLoadoutItemSkin::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_NeighborPreviewSlot_C_SetLoadoutItemSkin, CallFunc_Add_IntInt_ReturnValue) == 0x000020, "Member 'BP_NeighborPreviewSlot_C_SetLoadoutItemSkin::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NeighborPreviewSlot_C_SetLoadoutItemSkin, CallFunc_GetNeighborStartingItemID_NeighborItemID) == 0x000024, "Member 'BP_NeighborPreviewSlot_C_SetLoadoutItemSkin::CallFunc_GetNeighborStartingItemID_NeighborItemID' has a wrong offset!");
static_assert(offsetof(BP_NeighborPreviewSlot_C_SetLoadoutItemSkin, K2Node_MakeStruct_ItemLoadout) == 0x00002C, "Member 'BP_NeighborPreviewSlot_C_SetLoadoutItemSkin::K2Node_MakeStruct_ItemLoadout' has a wrong offset!");
static_assert(offsetof(BP_NeighborPreviewSlot_C_SetLoadoutItemSkin, CallFunc_Array_Add_ReturnValue) == 0x00003C, "Member 'BP_NeighborPreviewSlot_C_SetLoadoutItemSkin::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NeighborPreviewSlot_C_SetLoadoutItemSkin, CallFunc_Array_Get_Item) == 0x000040, "Member 'BP_NeighborPreviewSlot_C_SetLoadoutItemSkin::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_NeighborPreviewSlot_C_SetLoadoutItemSkin, CallFunc_Array_Length_ReturnValue) == 0x000050, "Member 'BP_NeighborPreviewSlot_C_SetLoadoutItemSkin::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NeighborPreviewSlot_C_SetLoadoutItemSkin, CallFunc_EqualEqual_GameplayTag_ReturnValue) == 0x000054, "Member 'BP_NeighborPreviewSlot_C_SetLoadoutItemSkin::CallFunc_EqualEqual_GameplayTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NeighborPreviewSlot_C_SetLoadoutItemSkin, CallFunc_Less_IntInt_ReturnValue) == 0x000055, "Member 'BP_NeighborPreviewSlot_C_SetLoadoutItemSkin::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function BP_NeighborPreviewSlot.BP_NeighborPreviewSlot_C.SetPreviewLoadout
// 0x0010 (0x0010 - 0x0000)
struct BP_NeighborPreviewSlot_C_SetPreviewLoadout final
{
public:
	bool                                          CallFunc_MatchesPreviewOutfit_ReturnValue;         // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           CallFunc_GetLoadoutStartingItemSkin_StartingItemSkinID; // 0x0004(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_MatchesPreviewItemSkin_ReturnValue;       // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_MatchesTag_ReturnValue;                   // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_NeighborPreviewSlot_C_SetPreviewLoadout) == 0x000004, "Wrong alignment on BP_NeighborPreviewSlot_C_SetPreviewLoadout");
static_assert(sizeof(BP_NeighborPreviewSlot_C_SetPreviewLoadout) == 0x000010, "Wrong size on BP_NeighborPreviewSlot_C_SetPreviewLoadout");
static_assert(offsetof(BP_NeighborPreviewSlot_C_SetPreviewLoadout, CallFunc_MatchesPreviewOutfit_ReturnValue) == 0x000000, "Member 'BP_NeighborPreviewSlot_C_SetPreviewLoadout::CallFunc_MatchesPreviewOutfit_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NeighborPreviewSlot_C_SetPreviewLoadout, CallFunc_GetLoadoutStartingItemSkin_StartingItemSkinID) == 0x000004, "Member 'BP_NeighborPreviewSlot_C_SetPreviewLoadout::CallFunc_GetLoadoutStartingItemSkin_StartingItemSkinID' has a wrong offset!");
static_assert(offsetof(BP_NeighborPreviewSlot_C_SetPreviewLoadout, CallFunc_MatchesPreviewItemSkin_ReturnValue) == 0x00000C, "Member 'BP_NeighborPreviewSlot_C_SetPreviewLoadout::CallFunc_MatchesPreviewItemSkin_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NeighborPreviewSlot_C_SetPreviewLoadout, CallFunc_MatchesTag_ReturnValue) == 0x00000D, "Member 'BP_NeighborPreviewSlot_C_SetPreviewLoadout::CallFunc_MatchesTag_ReturnValue' has a wrong offset!");

// Function BP_NeighborPreviewSlot.BP_NeighborPreviewSlot_C.SetPreviewNeighborItemSkin
// 0x000C (0x000C - 0x0000)
struct BP_NeighborPreviewSlot_C_SetPreviewNeighborItemSkin final
{
public:
	struct FGameplayTag                           ItemSkinID;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_MatchesPreviewItemSkin_ReturnValue;       // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_NeighborPreviewSlot_C_SetPreviewNeighborItemSkin) == 0x000004, "Wrong alignment on BP_NeighborPreviewSlot_C_SetPreviewNeighborItemSkin");
static_assert(sizeof(BP_NeighborPreviewSlot_C_SetPreviewNeighborItemSkin) == 0x00000C, "Wrong size on BP_NeighborPreviewSlot_C_SetPreviewNeighborItemSkin");
static_assert(offsetof(BP_NeighborPreviewSlot_C_SetPreviewNeighborItemSkin, ItemSkinID) == 0x000000, "Member 'BP_NeighborPreviewSlot_C_SetPreviewNeighborItemSkin::ItemSkinID' has a wrong offset!");
static_assert(offsetof(BP_NeighborPreviewSlot_C_SetPreviewNeighborItemSkin, CallFunc_MatchesPreviewItemSkin_ReturnValue) == 0x000008, "Member 'BP_NeighborPreviewSlot_C_SetPreviewNeighborItemSkin::CallFunc_MatchesPreviewItemSkin_ReturnValue' has a wrong offset!");

// Function BP_NeighborPreviewSlot.BP_NeighborPreviewSlot_C.SetPreviewNeighborOutfit
// 0x000C (0x000C - 0x0000)
struct BP_NeighborPreviewSlot_C_SetPreviewNeighborOutfit final
{
public:
	struct FGameplayTag                           OutfitID;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_MatchesPreviewOutfit_ReturnValue;         // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_NeighborPreviewSlot_C_SetPreviewNeighborOutfit) == 0x000004, "Wrong alignment on BP_NeighborPreviewSlot_C_SetPreviewNeighborOutfit");
static_assert(sizeof(BP_NeighborPreviewSlot_C_SetPreviewNeighborOutfit) == 0x00000C, "Wrong size on BP_NeighborPreviewSlot_C_SetPreviewNeighborOutfit");
static_assert(offsetof(BP_NeighborPreviewSlot_C_SetPreviewNeighborOutfit, OutfitID) == 0x000000, "Member 'BP_NeighborPreviewSlot_C_SetPreviewNeighborOutfit::OutfitID' has a wrong offset!");
static_assert(offsetof(BP_NeighborPreviewSlot_C_SetPreviewNeighborOutfit, CallFunc_MatchesPreviewOutfit_ReturnValue) == 0x000008, "Member 'BP_NeighborPreviewSlot_C_SetPreviewNeighborOutfit::CallFunc_MatchesPreviewOutfit_ReturnValue' has a wrong offset!");

// Function BP_NeighborPreviewSlot.BP_NeighborPreviewSlot_C.SetPreviewPlayerReward
// 0x000C (0x000C - 0x0000)
struct BP_NeighborPreviewSlot_C_SetPreviewPlayerReward final
{
public:
	struct FGameplayTag                           PlayerRewardID;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_MatchesTag_ReturnValue;                   // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_MatchesTag_ReturnValue_1;                 // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_MatchesTag_ReturnValue_2;                 // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_NeighborPreviewSlot_C_SetPreviewPlayerReward) == 0x000004, "Wrong alignment on BP_NeighborPreviewSlot_C_SetPreviewPlayerReward");
static_assert(sizeof(BP_NeighborPreviewSlot_C_SetPreviewPlayerReward) == 0x00000C, "Wrong size on BP_NeighborPreviewSlot_C_SetPreviewPlayerReward");
static_assert(offsetof(BP_NeighborPreviewSlot_C_SetPreviewPlayerReward, PlayerRewardID) == 0x000000, "Member 'BP_NeighborPreviewSlot_C_SetPreviewPlayerReward::PlayerRewardID' has a wrong offset!");
static_assert(offsetof(BP_NeighborPreviewSlot_C_SetPreviewPlayerReward, CallFunc_MatchesTag_ReturnValue) == 0x000008, "Member 'BP_NeighborPreviewSlot_C_SetPreviewPlayerReward::CallFunc_MatchesTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NeighborPreviewSlot_C_SetPreviewPlayerReward, CallFunc_MatchesTag_ReturnValue_1) == 0x000009, "Member 'BP_NeighborPreviewSlot_C_SetPreviewPlayerReward::CallFunc_MatchesTag_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_NeighborPreviewSlot_C_SetPreviewPlayerReward, CallFunc_MatchesTag_ReturnValue_2) == 0x00000A, "Member 'BP_NeighborPreviewSlot_C_SetPreviewPlayerReward::CallFunc_MatchesTag_ReturnValue_2' has a wrong offset!");

// Function BP_NeighborPreviewSlot.BP_NeighborPreviewSlot_C.SwitchCamera
// 0x0038 (0x0038 - 0x0000)
struct BP_NeighborPreviewSlot_C_SwitchCamera final
{
public:
	bool                                          ResetToDefault;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_Message_BlendToTabCamera            K2Node_MakeStruct_S_Message_BlendToTabCamera;      // 0x0008(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGameplayMessageSubsystem*              CallFunc_GetGameInstanceSubsystem_ReturnValue;     // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetViewTargetWithBlend_BlendTime_ImplicitCast; // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_NeighborPreviewSlot_C_SwitchCamera) == 0x000008, "Wrong alignment on BP_NeighborPreviewSlot_C_SwitchCamera");
static_assert(sizeof(BP_NeighborPreviewSlot_C_SwitchCamera) == 0x000038, "Wrong size on BP_NeighborPreviewSlot_C_SwitchCamera");
static_assert(offsetof(BP_NeighborPreviewSlot_C_SwitchCamera, ResetToDefault) == 0x000000, "Member 'BP_NeighborPreviewSlot_C_SwitchCamera::ResetToDefault' has a wrong offset!");
static_assert(offsetof(BP_NeighborPreviewSlot_C_SwitchCamera, K2Node_MakeStruct_S_Message_BlendToTabCamera) == 0x000008, "Member 'BP_NeighborPreviewSlot_C_SwitchCamera::K2Node_MakeStruct_S_Message_BlendToTabCamera' has a wrong offset!");
static_assert(offsetof(BP_NeighborPreviewSlot_C_SwitchCamera, CallFunc_GetGameInstanceSubsystem_ReturnValue) == 0x000020, "Member 'BP_NeighborPreviewSlot_C_SwitchCamera::CallFunc_GetGameInstanceSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NeighborPreviewSlot_C_SwitchCamera, CallFunc_GetPlayerController_ReturnValue) == 0x000028, "Member 'BP_NeighborPreviewSlot_C_SwitchCamera::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NeighborPreviewSlot_C_SwitchCamera, CallFunc_SetViewTargetWithBlend_BlendTime_ImplicitCast) == 0x000030, "Member 'BP_NeighborPreviewSlot_C_SwitchCamera::CallFunc_SetViewTargetWithBlend_BlendTime_ImplicitCast' has a wrong offset!");

}

