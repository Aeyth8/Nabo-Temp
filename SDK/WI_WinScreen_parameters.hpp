#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WI_WinScreen

#include "Basic.hpp"

#include "UMG_structs.hpp"
#include "E_WinscreenState_structs.hpp"


namespace SDK::Params
{

// Function WI_WinScreen.WI_WinScreen_C.BndEvt__WI_WinScreen_JPCommonActivatableWidgetSwitcher_205_K2Node_ComponentBoundEvent_3_ActiveIndexChangedDelegate__DelegateSignature
// 0x0004 (0x0004 - 0x0000)
struct WI_WinScreen_C_BndEvt__WI_WinScreen_JPCommonActivatableWidgetSwitcher_205_K2Node_ComponentBoundEvent_3_ActiveIndexChangedDelegate__DelegateSignature final
{
public:
	int32                                         ActiveIndex;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WI_WinScreen_C_BndEvt__WI_WinScreen_JPCommonActivatableWidgetSwitcher_205_K2Node_ComponentBoundEvent_3_ActiveIndexChangedDelegate__DelegateSignature) == 0x000004, "Wrong alignment on WI_WinScreen_C_BndEvt__WI_WinScreen_JPCommonActivatableWidgetSwitcher_205_K2Node_ComponentBoundEvent_3_ActiveIndexChangedDelegate__DelegateSignature");
static_assert(sizeof(WI_WinScreen_C_BndEvt__WI_WinScreen_JPCommonActivatableWidgetSwitcher_205_K2Node_ComponentBoundEvent_3_ActiveIndexChangedDelegate__DelegateSignature) == 0x000004, "Wrong size on WI_WinScreen_C_BndEvt__WI_WinScreen_JPCommonActivatableWidgetSwitcher_205_K2Node_ComponentBoundEvent_3_ActiveIndexChangedDelegate__DelegateSignature");
static_assert(offsetof(WI_WinScreen_C_BndEvt__WI_WinScreen_JPCommonActivatableWidgetSwitcher_205_K2Node_ComponentBoundEvent_3_ActiveIndexChangedDelegate__DelegateSignature, ActiveIndex) == 0x000000, "Member 'WI_WinScreen_C_BndEvt__WI_WinScreen_JPCommonActivatableWidgetSwitcher_205_K2Node_ComponentBoundEvent_3_ActiveIndexChangedDelegate__DelegateSignature::ActiveIndex' has a wrong offset!");

// Function WI_WinScreen.WI_WinScreen_C.BndEvt__WI_WinScreen_PageBackButton_K2Node_ComponentBoundEvent_0_CommonButtonBaseClicked__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct WI_WinScreen_C_BndEvt__WI_WinScreen_PageBackButton_K2Node_ComponentBoundEvent_0_CommonButtonBaseClicked__DelegateSignature final
{
public:
	class UCommonButtonBase*                      Button;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WI_WinScreen_C_BndEvt__WI_WinScreen_PageBackButton_K2Node_ComponentBoundEvent_0_CommonButtonBaseClicked__DelegateSignature) == 0x000008, "Wrong alignment on WI_WinScreen_C_BndEvt__WI_WinScreen_PageBackButton_K2Node_ComponentBoundEvent_0_CommonButtonBaseClicked__DelegateSignature");
static_assert(sizeof(WI_WinScreen_C_BndEvt__WI_WinScreen_PageBackButton_K2Node_ComponentBoundEvent_0_CommonButtonBaseClicked__DelegateSignature) == 0x000008, "Wrong size on WI_WinScreen_C_BndEvt__WI_WinScreen_PageBackButton_K2Node_ComponentBoundEvent_0_CommonButtonBaseClicked__DelegateSignature");
static_assert(offsetof(WI_WinScreen_C_BndEvt__WI_WinScreen_PageBackButton_K2Node_ComponentBoundEvent_0_CommonButtonBaseClicked__DelegateSignature, Button) == 0x000000, "Member 'WI_WinScreen_C_BndEvt__WI_WinScreen_PageBackButton_K2Node_ComponentBoundEvent_0_CommonButtonBaseClicked__DelegateSignature::Button' has a wrong offset!");

// Function WI_WinScreen.WI_WinScreen_C.BndEvt__WI_WinScreen_PageForwardButton_K2Node_ComponentBoundEvent_1_CommonButtonBaseClicked__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct WI_WinScreen_C_BndEvt__WI_WinScreen_PageForwardButton_K2Node_ComponentBoundEvent_1_CommonButtonBaseClicked__DelegateSignature final
{
public:
	class UCommonButtonBase*                      Button;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WI_WinScreen_C_BndEvt__WI_WinScreen_PageForwardButton_K2Node_ComponentBoundEvent_1_CommonButtonBaseClicked__DelegateSignature) == 0x000008, "Wrong alignment on WI_WinScreen_C_BndEvt__WI_WinScreen_PageForwardButton_K2Node_ComponentBoundEvent_1_CommonButtonBaseClicked__DelegateSignature");
static_assert(sizeof(WI_WinScreen_C_BndEvt__WI_WinScreen_PageForwardButton_K2Node_ComponentBoundEvent_1_CommonButtonBaseClicked__DelegateSignature) == 0x000008, "Wrong size on WI_WinScreen_C_BndEvt__WI_WinScreen_PageForwardButton_K2Node_ComponentBoundEvent_1_CommonButtonBaseClicked__DelegateSignature");
static_assert(offsetof(WI_WinScreen_C_BndEvt__WI_WinScreen_PageForwardButton_K2Node_ComponentBoundEvent_1_CommonButtonBaseClicked__DelegateSignature, Button) == 0x000000, "Member 'WI_WinScreen_C_BndEvt__WI_WinScreen_PageForwardButton_K2Node_ComponentBoundEvent_1_CommonButtonBaseClicked__DelegateSignature::Button' has a wrong offset!");

// Function WI_WinScreen.WI_WinScreen_C.CREATEDELEGATE_PROXYFUNCTION_0
// 0x0010 (0x0010 - 0x0000)
struct WI_WinScreen_C_CREATEDELEGATE_PROXYFUNCTION_0 final
{
public:
	float                                         LeaveTime;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_OnPartyLeaderLeft_LeaveTime_ImplicitCast; // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WI_WinScreen_C_CREATEDELEGATE_PROXYFUNCTION_0) == 0x000008, "Wrong alignment on WI_WinScreen_C_CREATEDELEGATE_PROXYFUNCTION_0");
static_assert(sizeof(WI_WinScreen_C_CREATEDELEGATE_PROXYFUNCTION_0) == 0x000010, "Wrong size on WI_WinScreen_C_CREATEDELEGATE_PROXYFUNCTION_0");
static_assert(offsetof(WI_WinScreen_C_CREATEDELEGATE_PROXYFUNCTION_0, LeaveTime) == 0x000000, "Member 'WI_WinScreen_C_CREATEDELEGATE_PROXYFUNCTION_0::LeaveTime' has a wrong offset!");
static_assert(offsetof(WI_WinScreen_C_CREATEDELEGATE_PROXYFUNCTION_0, CallFunc_OnPartyLeaderLeft_LeaveTime_ImplicitCast) == 0x000008, "Member 'WI_WinScreen_C_CREATEDELEGATE_PROXYFUNCTION_0::CallFunc_OnPartyLeaderLeft_LeaveTime_ImplicitCast' has a wrong offset!");

// Function WI_WinScreen.WI_WinScreen_C.ExecuteUbergraph_WI_WinScreen
// 0x0090 (0x0090 - 0x0000)
struct WI_WinScreen_C_ExecuteUbergraph_WI_WinScreen final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(E_WinscreenState NewState)>    K2Node_CreateDelegate_OutputDelegate;              // 0x0004(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x0014(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USocialGameInstanceSubsystem*           CallFunc_GetGameInstanceSubsystem_ReturnValue;     // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_2;            // 0x0030(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetPostMatchLeaderLeftLeaveTime_ReturnValue; // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasPostMatchLeaderLeftCountdownStarted_ReturnValue; // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_WinscreenState                              K2Node_CustomEvent_NewState;                       // 0x0045(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_46[0x2];                                       // 0x0046(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationForward_ReturnValue;         // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationForward_ReturnValue_1;       // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UCommonButtonBase*                      K2Node_ComponentBoundEvent_Button_1;               // 0x0058(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UCommonButtonBase*                      K2Node_ComponentBoundEvent_Button;                 // 0x0060(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_ActiveIndex;            // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(float LeaveTime)>              K2Node_CreateDelegate_OutputDelegate_3;            // 0x006C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7C[0x4];                                       // 0x007C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0080(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_OnPartyLeaderLeft_LeaveTime_ImplicitCast; // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WI_WinScreen_C_ExecuteUbergraph_WI_WinScreen) == 0x000008, "Wrong alignment on WI_WinScreen_C_ExecuteUbergraph_WI_WinScreen");
static_assert(sizeof(WI_WinScreen_C_ExecuteUbergraph_WI_WinScreen) == 0x000090, "Wrong size on WI_WinScreen_C_ExecuteUbergraph_WI_WinScreen");
static_assert(offsetof(WI_WinScreen_C_ExecuteUbergraph_WI_WinScreen, EntryPoint) == 0x000000, "Member 'WI_WinScreen_C_ExecuteUbergraph_WI_WinScreen::EntryPoint' has a wrong offset!");
static_assert(offsetof(WI_WinScreen_C_ExecuteUbergraph_WI_WinScreen, K2Node_CreateDelegate_OutputDelegate) == 0x000004, "Member 'WI_WinScreen_C_ExecuteUbergraph_WI_WinScreen::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WI_WinScreen_C_ExecuteUbergraph_WI_WinScreen, K2Node_CreateDelegate_OutputDelegate_1) == 0x000014, "Member 'WI_WinScreen_C_ExecuteUbergraph_WI_WinScreen::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(WI_WinScreen_C_ExecuteUbergraph_WI_WinScreen, CallFunc_GetGameInstanceSubsystem_ReturnValue) == 0x000028, "Member 'WI_WinScreen_C_ExecuteUbergraph_WI_WinScreen::CallFunc_GetGameInstanceSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(WI_WinScreen_C_ExecuteUbergraph_WI_WinScreen, K2Node_CreateDelegate_OutputDelegate_2) == 0x000030, "Member 'WI_WinScreen_C_ExecuteUbergraph_WI_WinScreen::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(WI_WinScreen_C_ExecuteUbergraph_WI_WinScreen, CallFunc_GetPostMatchLeaderLeftLeaveTime_ReturnValue) == 0x000040, "Member 'WI_WinScreen_C_ExecuteUbergraph_WI_WinScreen::CallFunc_GetPostMatchLeaderLeftLeaveTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(WI_WinScreen_C_ExecuteUbergraph_WI_WinScreen, CallFunc_HasPostMatchLeaderLeftCountdownStarted_ReturnValue) == 0x000044, "Member 'WI_WinScreen_C_ExecuteUbergraph_WI_WinScreen::CallFunc_HasPostMatchLeaderLeftCountdownStarted_ReturnValue' has a wrong offset!");
static_assert(offsetof(WI_WinScreen_C_ExecuteUbergraph_WI_WinScreen, K2Node_CustomEvent_NewState) == 0x000045, "Member 'WI_WinScreen_C_ExecuteUbergraph_WI_WinScreen::K2Node_CustomEvent_NewState' has a wrong offset!");
static_assert(offsetof(WI_WinScreen_C_ExecuteUbergraph_WI_WinScreen, CallFunc_PlayAnimationForward_ReturnValue) == 0x000048, "Member 'WI_WinScreen_C_ExecuteUbergraph_WI_WinScreen::CallFunc_PlayAnimationForward_ReturnValue' has a wrong offset!");
static_assert(offsetof(WI_WinScreen_C_ExecuteUbergraph_WI_WinScreen, CallFunc_PlayAnimationForward_ReturnValue_1) == 0x000050, "Member 'WI_WinScreen_C_ExecuteUbergraph_WI_WinScreen::CallFunc_PlayAnimationForward_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WI_WinScreen_C_ExecuteUbergraph_WI_WinScreen, K2Node_ComponentBoundEvent_Button_1) == 0x000058, "Member 'WI_WinScreen_C_ExecuteUbergraph_WI_WinScreen::K2Node_ComponentBoundEvent_Button_1' has a wrong offset!");
static_assert(offsetof(WI_WinScreen_C_ExecuteUbergraph_WI_WinScreen, K2Node_ComponentBoundEvent_Button) == 0x000060, "Member 'WI_WinScreen_C_ExecuteUbergraph_WI_WinScreen::K2Node_ComponentBoundEvent_Button' has a wrong offset!");
static_assert(offsetof(WI_WinScreen_C_ExecuteUbergraph_WI_WinScreen, K2Node_ComponentBoundEvent_ActiveIndex) == 0x000068, "Member 'WI_WinScreen_C_ExecuteUbergraph_WI_WinScreen::K2Node_ComponentBoundEvent_ActiveIndex' has a wrong offset!");
static_assert(offsetof(WI_WinScreen_C_ExecuteUbergraph_WI_WinScreen, K2Node_CreateDelegate_OutputDelegate_3) == 0x00006C, "Member 'WI_WinScreen_C_ExecuteUbergraph_WI_WinScreen::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(WI_WinScreen_C_ExecuteUbergraph_WI_WinScreen, CallFunc_GetOwningPlayer_ReturnValue) == 0x000080, "Member 'WI_WinScreen_C_ExecuteUbergraph_WI_WinScreen::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(WI_WinScreen_C_ExecuteUbergraph_WI_WinScreen, CallFunc_OnPartyLeaderLeft_LeaveTime_ImplicitCast) == 0x000088, "Member 'WI_WinScreen_C_ExecuteUbergraph_WI_WinScreen::CallFunc_OnPartyLeaderLeft_LeaveTime_ImplicitCast' has a wrong offset!");

// Function WI_WinScreen.WI_WinScreen_C.HasNextPage
// 0x0014 (0x0014 - 0x0000)
struct WI_WinScreen_C_HasNextPage final
{
public:
	bool                                          HasNextPage_0;                                     // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetActiveWidgetIndex_ReturnValue;         // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetNumWidgets_ReturnValue;                // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WI_WinScreen_C_HasNextPage) == 0x000004, "Wrong alignment on WI_WinScreen_C_HasNextPage");
static_assert(sizeof(WI_WinScreen_C_HasNextPage) == 0x000014, "Wrong size on WI_WinScreen_C_HasNextPage");
static_assert(offsetof(WI_WinScreen_C_HasNextPage, HasNextPage_0) == 0x000000, "Member 'WI_WinScreen_C_HasNextPage::HasNextPage_0' has a wrong offset!");
static_assert(offsetof(WI_WinScreen_C_HasNextPage, CallFunc_GetActiveWidgetIndex_ReturnValue) == 0x000004, "Member 'WI_WinScreen_C_HasNextPage::CallFunc_GetActiveWidgetIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(WI_WinScreen_C_HasNextPage, CallFunc_GetNumWidgets_ReturnValue) == 0x000008, "Member 'WI_WinScreen_C_HasNextPage::CallFunc_GetNumWidgets_ReturnValue' has a wrong offset!");
static_assert(offsetof(WI_WinScreen_C_HasNextPage, CallFunc_Subtract_IntInt_ReturnValue) == 0x00000C, "Member 'WI_WinScreen_C_HasNextPage::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WI_WinScreen_C_HasNextPage, CallFunc_Less_IntInt_ReturnValue) == 0x000010, "Member 'WI_WinScreen_C_HasNextPage::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function WI_WinScreen.WI_WinScreen_C.HasPreviousPage
// 0x000C (0x000C - 0x0000)
struct WI_WinScreen_C_HasPreviousPage final
{
public:
	bool                                          HasPreviousPage_0;                                 // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetActiveWidgetIndex_ReturnValue;         // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WI_WinScreen_C_HasPreviousPage) == 0x000004, "Wrong alignment on WI_WinScreen_C_HasPreviousPage");
static_assert(sizeof(WI_WinScreen_C_HasPreviousPage) == 0x00000C, "Wrong size on WI_WinScreen_C_HasPreviousPage");
static_assert(offsetof(WI_WinScreen_C_HasPreviousPage, HasPreviousPage_0) == 0x000000, "Member 'WI_WinScreen_C_HasPreviousPage::HasPreviousPage_0' has a wrong offset!");
static_assert(offsetof(WI_WinScreen_C_HasPreviousPage, CallFunc_GetActiveWidgetIndex_ReturnValue) == 0x000004, "Member 'WI_WinScreen_C_HasPreviousPage::CallFunc_GetActiveWidgetIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(WI_WinScreen_C_HasPreviousPage, CallFunc_Greater_IntInt_ReturnValue) == 0x000008, "Member 'WI_WinScreen_C_HasPreviousPage::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");

// Function WI_WinScreen.WI_WinScreen_C.NewStateSet
// 0x0001 (0x0001 - 0x0000)
struct WI_WinScreen_C_NewStateSet final
{
public:
	E_WinscreenState                              NewState;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WI_WinScreen_C_NewStateSet) == 0x000001, "Wrong alignment on WI_WinScreen_C_NewStateSet");
static_assert(sizeof(WI_WinScreen_C_NewStateSet) == 0x000001, "Wrong size on WI_WinScreen_C_NewStateSet");
static_assert(offsetof(WI_WinScreen_C_NewStateSet, NewState) == 0x000000, "Member 'WI_WinScreen_C_NewStateSet::NewState' has a wrong offset!");

// Function WI_WinScreen.WI_WinScreen_C.OnPartyLeaderLeft
// 0x0008 (0x0008 - 0x0000)
struct WI_WinScreen_C_OnPartyLeaderLeft final
{
public:
	double                                        LeaveTime;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WI_WinScreen_C_OnPartyLeaderLeft) == 0x000008, "Wrong alignment on WI_WinScreen_C_OnPartyLeaderLeft");
static_assert(sizeof(WI_WinScreen_C_OnPartyLeaderLeft) == 0x000008, "Wrong size on WI_WinScreen_C_OnPartyLeaderLeft");
static_assert(offsetof(WI_WinScreen_C_OnPartyLeaderLeft, LeaveTime) == 0x000000, "Member 'WI_WinScreen_C_OnPartyLeaderLeft::LeaveTime' has a wrong offset!");

// Function WI_WinScreen.WI_WinScreen_C.SetTabsToShowBasedOnNetMode
// 0x0020 (0x0020 - 0x0000)
struct WI_WinScreen_C_SetTabsToShowBasedOnNetMode final
{
public:
	bool                                          CallFunc_GetIsPie_ReturnValue;                     // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APlayerControllerJP_MatchBP_C*          K2Node_DynamicCast_AsPlayer_Controller_JP_Match_BP; // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasMatchRewards_ReturnValue;              // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WI_WinScreen_C_SetTabsToShowBasedOnNetMode) == 0x000008, "Wrong alignment on WI_WinScreen_C_SetTabsToShowBasedOnNetMode");
static_assert(sizeof(WI_WinScreen_C_SetTabsToShowBasedOnNetMode) == 0x000020, "Wrong size on WI_WinScreen_C_SetTabsToShowBasedOnNetMode");
static_assert(offsetof(WI_WinScreen_C_SetTabsToShowBasedOnNetMode, CallFunc_GetIsPie_ReturnValue) == 0x000000, "Member 'WI_WinScreen_C_SetTabsToShowBasedOnNetMode::CallFunc_GetIsPie_ReturnValue' has a wrong offset!");
static_assert(offsetof(WI_WinScreen_C_SetTabsToShowBasedOnNetMode, CallFunc_GetPlayerController_ReturnValue) == 0x000008, "Member 'WI_WinScreen_C_SetTabsToShowBasedOnNetMode::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(WI_WinScreen_C_SetTabsToShowBasedOnNetMode, K2Node_DynamicCast_AsPlayer_Controller_JP_Match_BP) == 0x000010, "Member 'WI_WinScreen_C_SetTabsToShowBasedOnNetMode::K2Node_DynamicCast_AsPlayer_Controller_JP_Match_BP' has a wrong offset!");
static_assert(offsetof(WI_WinScreen_C_SetTabsToShowBasedOnNetMode, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'WI_WinScreen_C_SetTabsToShowBasedOnNetMode::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WI_WinScreen_C_SetTabsToShowBasedOnNetMode, CallFunc_HasMatchRewards_ReturnValue) == 0x000019, "Member 'WI_WinScreen_C_SetTabsToShowBasedOnNetMode::CallFunc_HasMatchRewards_ReturnValue' has a wrong offset!");

// Function WI_WinScreen.WI_WinScreen_C.StateChanged__DelegateSignature
// 0x0001 (0x0001 - 0x0000)
struct WI_WinScreen_C_StateChanged__DelegateSignature final
{
public:
	E_WinscreenState                              State;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WI_WinScreen_C_StateChanged__DelegateSignature) == 0x000001, "Wrong alignment on WI_WinScreen_C_StateChanged__DelegateSignature");
static_assert(sizeof(WI_WinScreen_C_StateChanged__DelegateSignature) == 0x000001, "Wrong size on WI_WinScreen_C_StateChanged__DelegateSignature");
static_assert(offsetof(WI_WinScreen_C_StateChanged__DelegateSignature, State) == 0x000000, "Member 'WI_WinScreen_C_StateChanged__DelegateSignature::State' has a wrong offset!");

// Function WI_WinScreen.WI_WinScreen_C.UpdatePreviousNextButtons
// 0x000A (0x000A - 0x0000)
struct WI_WinScreen_C_UpdatePreviousNextButtons final
{
public:
	bool                                          Temp_bool_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_2;                              // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_3;                              // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasPreviousPage_HasPreviousPage;          // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasNextPage_HasNextPage;                  // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_1;                           // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WI_WinScreen_C_UpdatePreviousNextButtons) == 0x000001, "Wrong alignment on WI_WinScreen_C_UpdatePreviousNextButtons");
static_assert(sizeof(WI_WinScreen_C_UpdatePreviousNextButtons) == 0x00000A, "Wrong size on WI_WinScreen_C_UpdatePreviousNextButtons");
static_assert(offsetof(WI_WinScreen_C_UpdatePreviousNextButtons, Temp_bool_Variable) == 0x000000, "Member 'WI_WinScreen_C_UpdatePreviousNextButtons::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WI_WinScreen_C_UpdatePreviousNextButtons, Temp_byte_Variable) == 0x000001, "Member 'WI_WinScreen_C_UpdatePreviousNextButtons::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WI_WinScreen_C_UpdatePreviousNextButtons, Temp_byte_Variable_1) == 0x000002, "Member 'WI_WinScreen_C_UpdatePreviousNextButtons::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WI_WinScreen_C_UpdatePreviousNextButtons, Temp_bool_Variable_1) == 0x000003, "Member 'WI_WinScreen_C_UpdatePreviousNextButtons::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(WI_WinScreen_C_UpdatePreviousNextButtons, Temp_byte_Variable_2) == 0x000004, "Member 'WI_WinScreen_C_UpdatePreviousNextButtons::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(WI_WinScreen_C_UpdatePreviousNextButtons, Temp_byte_Variable_3) == 0x000005, "Member 'WI_WinScreen_C_UpdatePreviousNextButtons::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(WI_WinScreen_C_UpdatePreviousNextButtons, CallFunc_HasPreviousPage_HasPreviousPage) == 0x000006, "Member 'WI_WinScreen_C_UpdatePreviousNextButtons::CallFunc_HasPreviousPage_HasPreviousPage' has a wrong offset!");
static_assert(offsetof(WI_WinScreen_C_UpdatePreviousNextButtons, CallFunc_HasNextPage_HasNextPage) == 0x000007, "Member 'WI_WinScreen_C_UpdatePreviousNextButtons::CallFunc_HasNextPage_HasNextPage' has a wrong offset!");
static_assert(offsetof(WI_WinScreen_C_UpdatePreviousNextButtons, K2Node_Select_Default) == 0x000008, "Member 'WI_WinScreen_C_UpdatePreviousNextButtons::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WI_WinScreen_C_UpdatePreviousNextButtons, K2Node_Select_Default_1) == 0x000009, "Member 'WI_WinScreen_C_UpdatePreviousNextButtons::K2Node_Select_Default_1' has a wrong offset!");

// Function WI_WinScreen.WI_WinScreen_C.BP_GetDesiredFocusTarget
// 0x0008 (0x0008 - 0x0000)
struct WI_WinScreen_C_BP_GetDesiredFocusTarget final
{
public:
	class UWidget*                                ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WI_WinScreen_C_BP_GetDesiredFocusTarget) == 0x000008, "Wrong alignment on WI_WinScreen_C_BP_GetDesiredFocusTarget");
static_assert(sizeof(WI_WinScreen_C_BP_GetDesiredFocusTarget) == 0x000008, "Wrong size on WI_WinScreen_C_BP_GetDesiredFocusTarget");
static_assert(offsetof(WI_WinScreen_C_BP_GetDesiredFocusTarget, ReturnValue) == 0x000000, "Member 'WI_WinScreen_C_BP_GetDesiredFocusTarget::ReturnValue' has a wrong offset!");

}

