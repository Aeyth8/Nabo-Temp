#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GCN_Eating

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "GameplayAbilities_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass GCN_Eating.GCN_Eating_C
// 0x0040 (0x0ED8 - 0x0E98)
class AGCN_Eating_C final : public AGameplayCueNotify_Looping
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0E98(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class ABP_ResidentCharacter_C*                As_BP_Resident_Character;                          // 0x0EA0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UChargableEquipmentInstance_C*          As_Chargable_Equipment_Instance;                   // 0x0EA8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	double                                        MaxZoom;                                           // 0x0EB0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        StartFOV;                                          // 0x0EB8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ShouldRun;                                         // 0x0EC0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_EC1[0x7];                                      // 0x0EC1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 Effect_Causer;                                     // 0x0EC8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	double                                        InterpolatedValue;                                 // 0x0ED0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void AddAnimations();
	void ExecuteUbergraph_GCN_Eating(int32 EntryPoint);
	void FakeLerpInterpolationCharge(double* Percentage);
	void Get_Anim_Instances(class UAnimInstance** FirstPersonAnimInstance, class UAnimInstance** ThirdPersonAnimInstance);
	void OnApplication(class AActor* Target, const struct FGameplayCueParameters& Parameters, const struct FGameplayCueNotify_SpawnResult& SpawnResults);
	void OnRemoval(class AActor* Target, const struct FGameplayCueParameters& Parameters, const struct FGameplayCueNotify_SpawnResult& SpawnResults);
	void PlayChargeSound(class UEquipmentInstance* EquipmentInstance);
	void ReceiveTick(float DeltaSeconds);
	void SetStartFOV();
	void UpdateAnimations();
	void UpdateZoomEffect();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"GCN_Eating_C">();
	}
	static class AGCN_Eating_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AGCN_Eating_C>();
	}
};
static_assert(alignof(AGCN_Eating_C) == 0x000008, "Wrong alignment on AGCN_Eating_C");
static_assert(sizeof(AGCN_Eating_C) == 0x000ED8, "Wrong size on AGCN_Eating_C");
static_assert(offsetof(AGCN_Eating_C, UberGraphFrame) == 0x000E98, "Member 'AGCN_Eating_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(AGCN_Eating_C, As_BP_Resident_Character) == 0x000EA0, "Member 'AGCN_Eating_C::As_BP_Resident_Character' has a wrong offset!");
static_assert(offsetof(AGCN_Eating_C, As_Chargable_Equipment_Instance) == 0x000EA8, "Member 'AGCN_Eating_C::As_Chargable_Equipment_Instance' has a wrong offset!");
static_assert(offsetof(AGCN_Eating_C, MaxZoom) == 0x000EB0, "Member 'AGCN_Eating_C::MaxZoom' has a wrong offset!");
static_assert(offsetof(AGCN_Eating_C, StartFOV) == 0x000EB8, "Member 'AGCN_Eating_C::StartFOV' has a wrong offset!");
static_assert(offsetof(AGCN_Eating_C, ShouldRun) == 0x000EC0, "Member 'AGCN_Eating_C::ShouldRun' has a wrong offset!");
static_assert(offsetof(AGCN_Eating_C, Effect_Causer) == 0x000EC8, "Member 'AGCN_Eating_C::Effect_Causer' has a wrong offset!");
static_assert(offsetof(AGCN_Eating_C, InterpolatedValue) == 0x000ED0, "Member 'AGCN_Eating_C::InterpolatedValue' has a wrong offset!");

}

