#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_NeutralBearTrap

#include "Basic.hpp"

#include "JP_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "GameplayAbilities_structs.hpp"


namespace SDK::Params
{

// Function BP_NeutralBearTrap.BP_NeutralBearTrap_C.BndEvt__BP_NeutralBearTrap_ProjectileMovement_K2Node_ComponentBoundEvent_1_OnProjectileStopDelegate__DelegateSignature
// 0x00F8 (0x00F8 - 0x0000)
struct BP_NeutralBearTrap_C_BndEvt__BP_NeutralBearTrap_ProjectileMovement_K2Node_ComponentBoundEvent_1_OnProjectileStopDelegate__DelegateSignature final
{
public:
	struct FHitResult                             ImpactResult;                                      // 0x0000(0x00F8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_NeutralBearTrap_C_BndEvt__BP_NeutralBearTrap_ProjectileMovement_K2Node_ComponentBoundEvent_1_OnProjectileStopDelegate__DelegateSignature) == 0x000008, "Wrong alignment on BP_NeutralBearTrap_C_BndEvt__BP_NeutralBearTrap_ProjectileMovement_K2Node_ComponentBoundEvent_1_OnProjectileStopDelegate__DelegateSignature");
static_assert(sizeof(BP_NeutralBearTrap_C_BndEvt__BP_NeutralBearTrap_ProjectileMovement_K2Node_ComponentBoundEvent_1_OnProjectileStopDelegate__DelegateSignature) == 0x0000F8, "Wrong size on BP_NeutralBearTrap_C_BndEvt__BP_NeutralBearTrap_ProjectileMovement_K2Node_ComponentBoundEvent_1_OnProjectileStopDelegate__DelegateSignature");
static_assert(offsetof(BP_NeutralBearTrap_C_BndEvt__BP_NeutralBearTrap_ProjectileMovement_K2Node_ComponentBoundEvent_1_OnProjectileStopDelegate__DelegateSignature, ImpactResult) == 0x000000, "Member 'BP_NeutralBearTrap_C_BndEvt__BP_NeutralBearTrap_ProjectileMovement_K2Node_ComponentBoundEvent_1_OnProjectileStopDelegate__DelegateSignature::ImpactResult' has a wrong offset!");

// Function BP_NeutralBearTrap.BP_NeutralBearTrap_C.BndEvt__BP_NeutralBearTrap_TriggerBox_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature
// 0x0118 (0x0118 - 0x0000)
struct BP_NeutralBearTrap_C_BndEvt__BP_NeutralBearTrap_TriggerBox_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bFromSweep;                                        // 0x001C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             SweepResult;                                       // 0x0020(0x00F8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_NeutralBearTrap_C_BndEvt__BP_NeutralBearTrap_TriggerBox_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on BP_NeutralBearTrap_C_BndEvt__BP_NeutralBearTrap_TriggerBox_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(sizeof(BP_NeutralBearTrap_C_BndEvt__BP_NeutralBearTrap_TriggerBox_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature) == 0x000118, "Wrong size on BP_NeutralBearTrap_C_BndEvt__BP_NeutralBearTrap_TriggerBox_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(offsetof(BP_NeutralBearTrap_C_BndEvt__BP_NeutralBearTrap_TriggerBox_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature, OverlappedComponent) == 0x000000, "Member 'BP_NeutralBearTrap_C_BndEvt__BP_NeutralBearTrap_TriggerBox_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BP_NeutralBearTrap_C_BndEvt__BP_NeutralBearTrap_TriggerBox_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'BP_NeutralBearTrap_C_BndEvt__BP_NeutralBearTrap_TriggerBox_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(BP_NeutralBearTrap_C_BndEvt__BP_NeutralBearTrap_TriggerBox_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'BP_NeutralBearTrap_C_BndEvt__BP_NeutralBearTrap_TriggerBox_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(BP_NeutralBearTrap_C_BndEvt__BP_NeutralBearTrap_TriggerBox_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000018, "Member 'BP_NeutralBearTrap_C_BndEvt__BP_NeutralBearTrap_TriggerBox_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(BP_NeutralBearTrap_C_BndEvt__BP_NeutralBearTrap_TriggerBox_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature, bFromSweep) == 0x00001C, "Member 'BP_NeutralBearTrap_C_BndEvt__BP_NeutralBearTrap_TriggerBox_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature::bFromSweep' has a wrong offset!");
static_assert(offsetof(BP_NeutralBearTrap_C_BndEvt__BP_NeutralBearTrap_TriggerBox_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature, SweepResult) == 0x000020, "Member 'BP_NeutralBearTrap_C_BndEvt__BP_NeutralBearTrap_TriggerBox_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature::SweepResult' has a wrong offset!");

// Function BP_NeutralBearTrap.BP_NeutralBearTrap_C.DamageCharacter
// 0x02F0 (0x02F0 - 0x0000)
struct BP_NeutralBearTrap_C_DamageCharacter final
{
public:
	class AActor*                                 Target;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class II_ActorWithName_C>    K2Node_DynamicCast_AsI_Actor_with_Name;            // 0x0010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetName_Name;                             // 0x0028(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	TScriptInterface<class ITeamableInterface>    K2Node_DynamicCast_AsTeamable_Interface;           // 0x0038(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetTeamID_ReturnValue;                    // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A[0x6];                                       // 0x004A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0050(0x0010)()
	class UAbilitySystemComponent*                CallFunc_GetAbilitySystemComponent_ReturnValue;    // 0x0060(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0068(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAbilitySystemComponent*                CallFunc_GetComponentByClass_ReturnValue;          // 0x0080(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_MakeHitResult_ReturnValue;                // 0x0088(0x00F8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0180(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_181[0x7];                                      // 0x0181(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayEffectSpecHandle              CallFunc_MakeOutgoingSpec_ReturnValue;             // 0x0188(0x0010)()
	struct FGameplayEffectSpecHandle              CallFunc_AssignTagSetByCallerMagnitude_ReturnValue; // 0x0198(0x0010)()
	struct FActiveGameplayEffectHandle            CallFunc_BP_ApplyGameplayEffectSpecToTarget_ReturnValue; // 0x01A8(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FCombatParticipant                     K2Node_MakeStruct_CombatParticipant;               // 0x01B0(0x0060)()
	struct FGameplayEffectContextHandle           CallFunc_GetEffectContext_ReturnValue;             // 0x0210(0x0018)()
	uint8                                         Temp_byte_Variable;                                // 0x0228(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_229[0x7];                                      // 0x0229(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKillData                              K2Node_MakeStruct_KillData;                        // 0x0230(0x00C0)()
};
static_assert(alignof(BP_NeutralBearTrap_C_DamageCharacter) == 0x000008, "Wrong alignment on BP_NeutralBearTrap_C_DamageCharacter");
static_assert(sizeof(BP_NeutralBearTrap_C_DamageCharacter) == 0x0002F0, "Wrong size on BP_NeutralBearTrap_C_DamageCharacter");
static_assert(offsetof(BP_NeutralBearTrap_C_DamageCharacter, Target) == 0x000000, "Member 'BP_NeutralBearTrap_C_DamageCharacter::Target' has a wrong offset!");
static_assert(offsetof(BP_NeutralBearTrap_C_DamageCharacter, CallFunc_HasAuthority_ReturnValue) == 0x000008, "Member 'BP_NeutralBearTrap_C_DamageCharacter::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NeutralBearTrap_C_DamageCharacter, K2Node_DynamicCast_AsI_Actor_with_Name) == 0x000010, "Member 'BP_NeutralBearTrap_C_DamageCharacter::K2Node_DynamicCast_AsI_Actor_with_Name' has a wrong offset!");
static_assert(offsetof(BP_NeutralBearTrap_C_DamageCharacter, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'BP_NeutralBearTrap_C_DamageCharacter::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_NeutralBearTrap_C_DamageCharacter, CallFunc_GetName_Name) == 0x000028, "Member 'BP_NeutralBearTrap_C_DamageCharacter::CallFunc_GetName_Name' has a wrong offset!");
static_assert(offsetof(BP_NeutralBearTrap_C_DamageCharacter, K2Node_DynamicCast_AsTeamable_Interface) == 0x000038, "Member 'BP_NeutralBearTrap_C_DamageCharacter::K2Node_DynamicCast_AsTeamable_Interface' has a wrong offset!");
static_assert(offsetof(BP_NeutralBearTrap_C_DamageCharacter, K2Node_DynamicCast_bSuccess_1) == 0x000048, "Member 'BP_NeutralBearTrap_C_DamageCharacter::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_NeutralBearTrap_C_DamageCharacter, CallFunc_GetTeamID_ReturnValue) == 0x000049, "Member 'BP_NeutralBearTrap_C_DamageCharacter::CallFunc_GetTeamID_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NeutralBearTrap_C_DamageCharacter, CallFunc_Conv_StringToText_ReturnValue) == 0x000050, "Member 'BP_NeutralBearTrap_C_DamageCharacter::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NeutralBearTrap_C_DamageCharacter, CallFunc_GetAbilitySystemComponent_ReturnValue) == 0x000060, "Member 'BP_NeutralBearTrap_C_DamageCharacter::CallFunc_GetAbilitySystemComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NeutralBearTrap_C_DamageCharacter, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000068, "Member 'BP_NeutralBearTrap_C_DamageCharacter::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NeutralBearTrap_C_DamageCharacter, CallFunc_GetComponentByClass_ReturnValue) == 0x000080, "Member 'BP_NeutralBearTrap_C_DamageCharacter::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NeutralBearTrap_C_DamageCharacter, CallFunc_MakeHitResult_ReturnValue) == 0x000088, "Member 'BP_NeutralBearTrap_C_DamageCharacter::CallFunc_MakeHitResult_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NeutralBearTrap_C_DamageCharacter, CallFunc_IsValid_ReturnValue) == 0x000180, "Member 'BP_NeutralBearTrap_C_DamageCharacter::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NeutralBearTrap_C_DamageCharacter, CallFunc_MakeOutgoingSpec_ReturnValue) == 0x000188, "Member 'BP_NeutralBearTrap_C_DamageCharacter::CallFunc_MakeOutgoingSpec_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NeutralBearTrap_C_DamageCharacter, CallFunc_AssignTagSetByCallerMagnitude_ReturnValue) == 0x000198, "Member 'BP_NeutralBearTrap_C_DamageCharacter::CallFunc_AssignTagSetByCallerMagnitude_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NeutralBearTrap_C_DamageCharacter, CallFunc_BP_ApplyGameplayEffectSpecToTarget_ReturnValue) == 0x0001A8, "Member 'BP_NeutralBearTrap_C_DamageCharacter::CallFunc_BP_ApplyGameplayEffectSpecToTarget_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NeutralBearTrap_C_DamageCharacter, K2Node_MakeStruct_CombatParticipant) == 0x0001B0, "Member 'BP_NeutralBearTrap_C_DamageCharacter::K2Node_MakeStruct_CombatParticipant' has a wrong offset!");
static_assert(offsetof(BP_NeutralBearTrap_C_DamageCharacter, CallFunc_GetEffectContext_ReturnValue) == 0x000210, "Member 'BP_NeutralBearTrap_C_DamageCharacter::CallFunc_GetEffectContext_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NeutralBearTrap_C_DamageCharacter, Temp_byte_Variable) == 0x000228, "Member 'BP_NeutralBearTrap_C_DamageCharacter::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_NeutralBearTrap_C_DamageCharacter, K2Node_MakeStruct_KillData) == 0x000230, "Member 'BP_NeutralBearTrap_C_DamageCharacter::K2Node_MakeStruct_KillData' has a wrong offset!");

// Function BP_NeutralBearTrap.BP_NeutralBearTrap_C.ExecuteUbergraph_BP_NeutralBearTrap
// 0x02B8 (0x02B8 - 0x0000)
struct BP_NeutralBearTrap_C_ExecuteUbergraph_BP_NeutralBearTrap final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0004(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0018(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             K2Node_ComponentBoundEvent_ImpactResult;           // 0x0020(0x00F8)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent;    // 0x0118(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor;             // 0x0120(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp;              // 0x0128(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex;         // 0x0130(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bFromSweep;             // 0x0134(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_135[0x3];                                      // 0x0135(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_ComponentBoundEvent_SweepResult;            // 0x0138(0x00F8)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class ACharacter*                             K2Node_DynamicCast_AsCharacter;                    // 0x0230(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0238(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_239[0x7];                                      // 0x0239(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Conv_DoubleToVector_ReturnValue;          // 0x0240(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue;        // 0x0258(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0270(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x0288(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_2;        // 0x02A0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_NeutralBearTrap_C_ExecuteUbergraph_BP_NeutralBearTrap) == 0x000008, "Wrong alignment on BP_NeutralBearTrap_C_ExecuteUbergraph_BP_NeutralBearTrap");
static_assert(sizeof(BP_NeutralBearTrap_C_ExecuteUbergraph_BP_NeutralBearTrap) == 0x0002B8, "Wrong size on BP_NeutralBearTrap_C_ExecuteUbergraph_BP_NeutralBearTrap");
static_assert(offsetof(BP_NeutralBearTrap_C_ExecuteUbergraph_BP_NeutralBearTrap, EntryPoint) == 0x000000, "Member 'BP_NeutralBearTrap_C_ExecuteUbergraph_BP_NeutralBearTrap::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_NeutralBearTrap_C_ExecuteUbergraph_BP_NeutralBearTrap, K2Node_CreateDelegate_OutputDelegate) == 0x000004, "Member 'BP_NeutralBearTrap_C_ExecuteUbergraph_BP_NeutralBearTrap::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_NeutralBearTrap_C_ExecuteUbergraph_BP_NeutralBearTrap, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000018, "Member 'BP_NeutralBearTrap_C_ExecuteUbergraph_BP_NeutralBearTrap::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NeutralBearTrap_C_ExecuteUbergraph_BP_NeutralBearTrap, K2Node_ComponentBoundEvent_ImpactResult) == 0x000020, "Member 'BP_NeutralBearTrap_C_ExecuteUbergraph_BP_NeutralBearTrap::K2Node_ComponentBoundEvent_ImpactResult' has a wrong offset!");
static_assert(offsetof(BP_NeutralBearTrap_C_ExecuteUbergraph_BP_NeutralBearTrap, K2Node_ComponentBoundEvent_OverlappedComponent) == 0x000118, "Member 'BP_NeutralBearTrap_C_ExecuteUbergraph_BP_NeutralBearTrap::K2Node_ComponentBoundEvent_OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BP_NeutralBearTrap_C_ExecuteUbergraph_BP_NeutralBearTrap, K2Node_ComponentBoundEvent_OtherActor) == 0x000120, "Member 'BP_NeutralBearTrap_C_ExecuteUbergraph_BP_NeutralBearTrap::K2Node_ComponentBoundEvent_OtherActor' has a wrong offset!");
static_assert(offsetof(BP_NeutralBearTrap_C_ExecuteUbergraph_BP_NeutralBearTrap, K2Node_ComponentBoundEvent_OtherComp) == 0x000128, "Member 'BP_NeutralBearTrap_C_ExecuteUbergraph_BP_NeutralBearTrap::K2Node_ComponentBoundEvent_OtherComp' has a wrong offset!");
static_assert(offsetof(BP_NeutralBearTrap_C_ExecuteUbergraph_BP_NeutralBearTrap, K2Node_ComponentBoundEvent_OtherBodyIndex) == 0x000130, "Member 'BP_NeutralBearTrap_C_ExecuteUbergraph_BP_NeutralBearTrap::K2Node_ComponentBoundEvent_OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(BP_NeutralBearTrap_C_ExecuteUbergraph_BP_NeutralBearTrap, K2Node_ComponentBoundEvent_bFromSweep) == 0x000134, "Member 'BP_NeutralBearTrap_C_ExecuteUbergraph_BP_NeutralBearTrap::K2Node_ComponentBoundEvent_bFromSweep' has a wrong offset!");
static_assert(offsetof(BP_NeutralBearTrap_C_ExecuteUbergraph_BP_NeutralBearTrap, K2Node_ComponentBoundEvent_SweepResult) == 0x000138, "Member 'BP_NeutralBearTrap_C_ExecuteUbergraph_BP_NeutralBearTrap::K2Node_ComponentBoundEvent_SweepResult' has a wrong offset!");
static_assert(offsetof(BP_NeutralBearTrap_C_ExecuteUbergraph_BP_NeutralBearTrap, K2Node_DynamicCast_AsCharacter) == 0x000230, "Member 'BP_NeutralBearTrap_C_ExecuteUbergraph_BP_NeutralBearTrap::K2Node_DynamicCast_AsCharacter' has a wrong offset!");
static_assert(offsetof(BP_NeutralBearTrap_C_ExecuteUbergraph_BP_NeutralBearTrap, K2Node_DynamicCast_bSuccess) == 0x000238, "Member 'BP_NeutralBearTrap_C_ExecuteUbergraph_BP_NeutralBearTrap::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_NeutralBearTrap_C_ExecuteUbergraph_BP_NeutralBearTrap, CallFunc_Conv_DoubleToVector_ReturnValue) == 0x000240, "Member 'BP_NeutralBearTrap_C_ExecuteUbergraph_BP_NeutralBearTrap::CallFunc_Conv_DoubleToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NeutralBearTrap_C_ExecuteUbergraph_BP_NeutralBearTrap, CallFunc_Multiply_VectorVector_ReturnValue) == 0x000258, "Member 'BP_NeutralBearTrap_C_ExecuteUbergraph_BP_NeutralBearTrap::CallFunc_Multiply_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NeutralBearTrap_C_ExecuteUbergraph_BP_NeutralBearTrap, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000270, "Member 'BP_NeutralBearTrap_C_ExecuteUbergraph_BP_NeutralBearTrap::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NeutralBearTrap_C_ExecuteUbergraph_BP_NeutralBearTrap, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x000288, "Member 'BP_NeutralBearTrap_C_ExecuteUbergraph_BP_NeutralBearTrap::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_NeutralBearTrap_C_ExecuteUbergraph_BP_NeutralBearTrap, CallFunc_K2_GetActorLocation_ReturnValue_2) == 0x0002A0, "Member 'BP_NeutralBearTrap_C_ExecuteUbergraph_BP_NeutralBearTrap::CallFunc_K2_GetActorLocation_ReturnValue_2' has a wrong offset!");

}

