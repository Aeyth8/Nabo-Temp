#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GA_AimWeapon

#include "Basic.hpp"

#include "EnhancedInput_structs.hpp"
#include "GASIW_structs.hpp"
#include "GameplayAbilities_structs.hpp"


namespace SDK::Params
{

// Function GA_AimWeapon.GA_AimWeapon_C.AimOverrideSensitivity
// 0x0030 (0x0030 - 0x0000)
struct GA_AimWeapon_C_AimOverrideSensitivity final
{
public:
	bool                                          CallFunc_IsLocallyControlled_ReturnValue;          // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FModifyContextOptions                  Temp_struct_Variable;                              // 0x0001(0x0001)(ConstParm, NoDestructor)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UEnhancedInputLocalPlayerSubsystem*     CallFunc_GetLocalPlayerSubSystemFromPlayerController_ReturnValue; // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IEnhancedInputSubsystemInterface> CallFunc_AddMappingContext_self_CastInput;         // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_AimWeapon_C_AimOverrideSensitivity) == 0x000008, "Wrong alignment on GA_AimWeapon_C_AimOverrideSensitivity");
static_assert(sizeof(GA_AimWeapon_C_AimOverrideSensitivity) == 0x000030, "Wrong size on GA_AimWeapon_C_AimOverrideSensitivity");
static_assert(offsetof(GA_AimWeapon_C_AimOverrideSensitivity, CallFunc_IsLocallyControlled_ReturnValue) == 0x000000, "Member 'GA_AimWeapon_C_AimOverrideSensitivity::CallFunc_IsLocallyControlled_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_AimWeapon_C_AimOverrideSensitivity, Temp_struct_Variable) == 0x000001, "Member 'GA_AimWeapon_C_AimOverrideSensitivity::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(GA_AimWeapon_C_AimOverrideSensitivity, CallFunc_GetPlayerController_ReturnValue) == 0x000008, "Member 'GA_AimWeapon_C_AimOverrideSensitivity::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_AimWeapon_C_AimOverrideSensitivity, CallFunc_GetLocalPlayerSubSystemFromPlayerController_ReturnValue) == 0x000010, "Member 'GA_AimWeapon_C_AimOverrideSensitivity::CallFunc_GetLocalPlayerSubSystemFromPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_AimWeapon_C_AimOverrideSensitivity, CallFunc_AddMappingContext_self_CastInput) == 0x000018, "Member 'GA_AimWeapon_C_AimOverrideSensitivity::CallFunc_AddMappingContext_self_CastInput' has a wrong offset!");
static_assert(offsetof(GA_AimWeapon_C_AimOverrideSensitivity, CallFunc_IsValid_ReturnValue) == 0x000028, "Member 'GA_AimWeapon_C_AimOverrideSensitivity::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function GA_AimWeapon.GA_AimWeapon_C.ExecuteUbergraph_GA_AimWeapon
// 0x0138 (0x0138 - 0x0000)
struct GA_AimWeapon_C_ExecuteUbergraph_GA_AimWeapon final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0010(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_Event_Amount;                               // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_Event_Speed_1;                              // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 K2Node_Event_OptionalCameraShake;                  // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_Event_Scale_1;                              // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 K2Node_Event_CameraShake;                          // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_Event_Scale;                                // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_Event_Speed;                                // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwningActorFromActorInfo_ReturnValue;  // 0x0058(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_CommitAbility_ReturnValue;             // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAbilitySystemComponent*                CallFunc_GetAbilitySystemComponent_ReturnValue;    // 0x0068(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TArray<struct FActiveGameplayEffectHandle>    CallFunc_GetActiveEffectsWithAllTags_ReturnValue;  // 0x0070(0x0010)(ReferenceParm)
	bool                                          CallFunc_Array_IsEmpty_ReturnValue;                // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_81[0x3];                                       // 0x0081(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FActiveGameplayEffectHandle            CallFunc_BP_ApplyGameplayEffectToOwner_ReturnValue; // 0x0084(0x0008)(NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8C[0x4];                                       // 0x008C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UEquipmentInstance*                     CallFunc_GetAssociatedEquipment_ReturnValue;       // 0x0090(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UChargableEquipmentInstance_C*          K2Node_DynamicCast_AsChargable_Equipment_Instance; // 0x0098(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A1[0x7];                                       // 0x00A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetAvatarActorFromActorInfo_ReturnValue;  // 0x00A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAbilitySystemComponent*                CallFunc_GetAbilitySystemComponent_ReturnValue_1;  // 0x00B0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwningActorFromActorInfo_ReturnValue_1; // 0x00B8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_TryActivateAbilityByClass_ReturnValue;    // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C1[0x7];                                       // 0x00C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAbilitySystemComponent*                CallFunc_GetAbilitySystemComponent_ReturnValue_2;  // 0x00C8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UAbilitySystemComponent*                CallFunc_GetAbilitySystemComponentFromActorInfo_ReturnValue; // 0x00D0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TArray<struct FActiveGameplayEffectHandle>    CallFunc_GetActiveEffectsWithAllTags_ReturnValue_1; // 0x00D8(0x0010)(ReferenceParm)
	struct FActiveGameplayEffectHandle            CallFunc_Array_Get_Item;                           // 0x00E8(0x0008)(NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_RemoveActiveGameplayEffect_ReturnValue;   // 0x00F4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00F5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F6[0x2];                                       // 0x00F6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UItemInstance*                          CallFunc_GetAssociatedItem_ReturnValue;            // 0x00F8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsServer_ReturnValue;                     // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_101[0x7];                                      // 0x0101(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwningActorFromActorInfo_ReturnValue_2; // 0x0108(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_ResidentCharacter_C*                K2Node_DynamicCast_AsBP_Resident_Character;        // 0x0110(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_119[0x7];                                      // 0x0119(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class II_CharacterAnimation_C> K2Node_DynamicCast_AsI_Character_Animation;        // 0x0120(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_AimWeapon_C_ExecuteUbergraph_GA_AimWeapon) == 0x000008, "Wrong alignment on GA_AimWeapon_C_ExecuteUbergraph_GA_AimWeapon");
static_assert(sizeof(GA_AimWeapon_C_ExecuteUbergraph_GA_AimWeapon) == 0x000138, "Wrong size on GA_AimWeapon_C_ExecuteUbergraph_GA_AimWeapon");
static_assert(offsetof(GA_AimWeapon_C_ExecuteUbergraph_GA_AimWeapon, EntryPoint) == 0x000000, "Member 'GA_AimWeapon_C_ExecuteUbergraph_GA_AimWeapon::EntryPoint' has a wrong offset!");
static_assert(offsetof(GA_AimWeapon_C_ExecuteUbergraph_GA_AimWeapon, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'GA_AimWeapon_C_ExecuteUbergraph_GA_AimWeapon::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(GA_AimWeapon_C_ExecuteUbergraph_GA_AimWeapon, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'GA_AimWeapon_C_ExecuteUbergraph_GA_AimWeapon::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_AimWeapon_C_ExecuteUbergraph_GA_AimWeapon, Temp_int_Array_Index_Variable) == 0x00000C, "Member 'GA_AimWeapon_C_ExecuteUbergraph_GA_AimWeapon::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(GA_AimWeapon_C_ExecuteUbergraph_GA_AimWeapon, K2Node_CreateDelegate_OutputDelegate) == 0x000010, "Member 'GA_AimWeapon_C_ExecuteUbergraph_GA_AimWeapon::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(GA_AimWeapon_C_ExecuteUbergraph_GA_AimWeapon, K2Node_Event_Amount) == 0x000020, "Member 'GA_AimWeapon_C_ExecuteUbergraph_GA_AimWeapon::K2Node_Event_Amount' has a wrong offset!");
static_assert(offsetof(GA_AimWeapon_C_ExecuteUbergraph_GA_AimWeapon, K2Node_Event_Speed_1) == 0x000028, "Member 'GA_AimWeapon_C_ExecuteUbergraph_GA_AimWeapon::K2Node_Event_Speed_1' has a wrong offset!");
static_assert(offsetof(GA_AimWeapon_C_ExecuteUbergraph_GA_AimWeapon, K2Node_Event_OptionalCameraShake) == 0x000030, "Member 'GA_AimWeapon_C_ExecuteUbergraph_GA_AimWeapon::K2Node_Event_OptionalCameraShake' has a wrong offset!");
static_assert(offsetof(GA_AimWeapon_C_ExecuteUbergraph_GA_AimWeapon, K2Node_Event_Scale_1) == 0x000038, "Member 'GA_AimWeapon_C_ExecuteUbergraph_GA_AimWeapon::K2Node_Event_Scale_1' has a wrong offset!");
static_assert(offsetof(GA_AimWeapon_C_ExecuteUbergraph_GA_AimWeapon, K2Node_Event_CameraShake) == 0x000040, "Member 'GA_AimWeapon_C_ExecuteUbergraph_GA_AimWeapon::K2Node_Event_CameraShake' has a wrong offset!");
static_assert(offsetof(GA_AimWeapon_C_ExecuteUbergraph_GA_AimWeapon, K2Node_Event_Scale) == 0x000048, "Member 'GA_AimWeapon_C_ExecuteUbergraph_GA_AimWeapon::K2Node_Event_Scale' has a wrong offset!");
static_assert(offsetof(GA_AimWeapon_C_ExecuteUbergraph_GA_AimWeapon, K2Node_Event_Speed) == 0x000050, "Member 'GA_AimWeapon_C_ExecuteUbergraph_GA_AimWeapon::K2Node_Event_Speed' has a wrong offset!");
static_assert(offsetof(GA_AimWeapon_C_ExecuteUbergraph_GA_AimWeapon, CallFunc_GetOwningActorFromActorInfo_ReturnValue) == 0x000058, "Member 'GA_AimWeapon_C_ExecuteUbergraph_GA_AimWeapon::CallFunc_GetOwningActorFromActorInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_AimWeapon_C_ExecuteUbergraph_GA_AimWeapon, CallFunc_K2_CommitAbility_ReturnValue) == 0x000060, "Member 'GA_AimWeapon_C_ExecuteUbergraph_GA_AimWeapon::CallFunc_K2_CommitAbility_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_AimWeapon_C_ExecuteUbergraph_GA_AimWeapon, CallFunc_GetAbilitySystemComponent_ReturnValue) == 0x000068, "Member 'GA_AimWeapon_C_ExecuteUbergraph_GA_AimWeapon::CallFunc_GetAbilitySystemComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_AimWeapon_C_ExecuteUbergraph_GA_AimWeapon, CallFunc_GetActiveEffectsWithAllTags_ReturnValue) == 0x000070, "Member 'GA_AimWeapon_C_ExecuteUbergraph_GA_AimWeapon::CallFunc_GetActiveEffectsWithAllTags_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_AimWeapon_C_ExecuteUbergraph_GA_AimWeapon, CallFunc_Array_IsEmpty_ReturnValue) == 0x000080, "Member 'GA_AimWeapon_C_ExecuteUbergraph_GA_AimWeapon::CallFunc_Array_IsEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_AimWeapon_C_ExecuteUbergraph_GA_AimWeapon, CallFunc_BP_ApplyGameplayEffectToOwner_ReturnValue) == 0x000084, "Member 'GA_AimWeapon_C_ExecuteUbergraph_GA_AimWeapon::CallFunc_BP_ApplyGameplayEffectToOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_AimWeapon_C_ExecuteUbergraph_GA_AimWeapon, CallFunc_GetAssociatedEquipment_ReturnValue) == 0x000090, "Member 'GA_AimWeapon_C_ExecuteUbergraph_GA_AimWeapon::CallFunc_GetAssociatedEquipment_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_AimWeapon_C_ExecuteUbergraph_GA_AimWeapon, K2Node_DynamicCast_AsChargable_Equipment_Instance) == 0x000098, "Member 'GA_AimWeapon_C_ExecuteUbergraph_GA_AimWeapon::K2Node_DynamicCast_AsChargable_Equipment_Instance' has a wrong offset!");
static_assert(offsetof(GA_AimWeapon_C_ExecuteUbergraph_GA_AimWeapon, K2Node_DynamicCast_bSuccess) == 0x0000A0, "Member 'GA_AimWeapon_C_ExecuteUbergraph_GA_AimWeapon::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(GA_AimWeapon_C_ExecuteUbergraph_GA_AimWeapon, CallFunc_GetAvatarActorFromActorInfo_ReturnValue) == 0x0000A8, "Member 'GA_AimWeapon_C_ExecuteUbergraph_GA_AimWeapon::CallFunc_GetAvatarActorFromActorInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_AimWeapon_C_ExecuteUbergraph_GA_AimWeapon, CallFunc_GetAbilitySystemComponent_ReturnValue_1) == 0x0000B0, "Member 'GA_AimWeapon_C_ExecuteUbergraph_GA_AimWeapon::CallFunc_GetAbilitySystemComponent_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_AimWeapon_C_ExecuteUbergraph_GA_AimWeapon, CallFunc_GetOwningActorFromActorInfo_ReturnValue_1) == 0x0000B8, "Member 'GA_AimWeapon_C_ExecuteUbergraph_GA_AimWeapon::CallFunc_GetOwningActorFromActorInfo_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_AimWeapon_C_ExecuteUbergraph_GA_AimWeapon, CallFunc_TryActivateAbilityByClass_ReturnValue) == 0x0000C0, "Member 'GA_AimWeapon_C_ExecuteUbergraph_GA_AimWeapon::CallFunc_TryActivateAbilityByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_AimWeapon_C_ExecuteUbergraph_GA_AimWeapon, CallFunc_GetAbilitySystemComponent_ReturnValue_2) == 0x0000C8, "Member 'GA_AimWeapon_C_ExecuteUbergraph_GA_AimWeapon::CallFunc_GetAbilitySystemComponent_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GA_AimWeapon_C_ExecuteUbergraph_GA_AimWeapon, CallFunc_GetAbilitySystemComponentFromActorInfo_ReturnValue) == 0x0000D0, "Member 'GA_AimWeapon_C_ExecuteUbergraph_GA_AimWeapon::CallFunc_GetAbilitySystemComponentFromActorInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_AimWeapon_C_ExecuteUbergraph_GA_AimWeapon, CallFunc_GetActiveEffectsWithAllTags_ReturnValue_1) == 0x0000D8, "Member 'GA_AimWeapon_C_ExecuteUbergraph_GA_AimWeapon::CallFunc_GetActiveEffectsWithAllTags_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_AimWeapon_C_ExecuteUbergraph_GA_AimWeapon, CallFunc_Array_Get_Item) == 0x0000E8, "Member 'GA_AimWeapon_C_ExecuteUbergraph_GA_AimWeapon::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(GA_AimWeapon_C_ExecuteUbergraph_GA_AimWeapon, CallFunc_Array_Length_ReturnValue) == 0x0000F0, "Member 'GA_AimWeapon_C_ExecuteUbergraph_GA_AimWeapon::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_AimWeapon_C_ExecuteUbergraph_GA_AimWeapon, CallFunc_RemoveActiveGameplayEffect_ReturnValue) == 0x0000F4, "Member 'GA_AimWeapon_C_ExecuteUbergraph_GA_AimWeapon::CallFunc_RemoveActiveGameplayEffect_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_AimWeapon_C_ExecuteUbergraph_GA_AimWeapon, CallFunc_Less_IntInt_ReturnValue) == 0x0000F5, "Member 'GA_AimWeapon_C_ExecuteUbergraph_GA_AimWeapon::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_AimWeapon_C_ExecuteUbergraph_GA_AimWeapon, CallFunc_GetAssociatedItem_ReturnValue) == 0x0000F8, "Member 'GA_AimWeapon_C_ExecuteUbergraph_GA_AimWeapon::CallFunc_GetAssociatedItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_AimWeapon_C_ExecuteUbergraph_GA_AimWeapon, CallFunc_IsServer_ReturnValue) == 0x000100, "Member 'GA_AimWeapon_C_ExecuteUbergraph_GA_AimWeapon::CallFunc_IsServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_AimWeapon_C_ExecuteUbergraph_GA_AimWeapon, CallFunc_GetOwningActorFromActorInfo_ReturnValue_2) == 0x000108, "Member 'GA_AimWeapon_C_ExecuteUbergraph_GA_AimWeapon::CallFunc_GetOwningActorFromActorInfo_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GA_AimWeapon_C_ExecuteUbergraph_GA_AimWeapon, K2Node_DynamicCast_AsBP_Resident_Character) == 0x000110, "Member 'GA_AimWeapon_C_ExecuteUbergraph_GA_AimWeapon::K2Node_DynamicCast_AsBP_Resident_Character' has a wrong offset!");
static_assert(offsetof(GA_AimWeapon_C_ExecuteUbergraph_GA_AimWeapon, K2Node_DynamicCast_bSuccess_1) == 0x000118, "Member 'GA_AimWeapon_C_ExecuteUbergraph_GA_AimWeapon::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(GA_AimWeapon_C_ExecuteUbergraph_GA_AimWeapon, K2Node_DynamicCast_AsI_Character_Animation) == 0x000120, "Member 'GA_AimWeapon_C_ExecuteUbergraph_GA_AimWeapon::K2Node_DynamicCast_AsI_Character_Animation' has a wrong offset!");
static_assert(offsetof(GA_AimWeapon_C_ExecuteUbergraph_GA_AimWeapon, K2Node_DynamicCast_bSuccess_2) == 0x000130, "Member 'GA_AimWeapon_C_ExecuteUbergraph_GA_AimWeapon::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");

// Function GA_AimWeapon.GA_AimWeapon_C.GetCameraFOV
// 0x0008 (0x0008 - 0x0000)
struct GA_AimWeapon_C_GetCameraFOV final
{
public:
	double                                        FOV;                                               // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_AimWeapon_C_GetCameraFOV) == 0x000008, "Wrong alignment on GA_AimWeapon_C_GetCameraFOV");
static_assert(sizeof(GA_AimWeapon_C_GetCameraFOV) == 0x000008, "Wrong size on GA_AimWeapon_C_GetCameraFOV");
static_assert(offsetof(GA_AimWeapon_C_GetCameraFOV, FOV) == 0x000000, "Member 'GA_AimWeapon_C_GetCameraFOV::FOV' has a wrong offset!");

// Function GA_AimWeapon.GA_AimWeapon_C.HideCannonMesh
// 0x0028 (0x0028 - 0x0000)
struct GA_AimWeapon_C_HideCannonMesh final
{
public:
	class UEquipmentInstance*                     CallFunc_GetAssociatedEquipment_ReturnValue;       // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<struct FSpawnedActorData>              CallFunc_GetSpawnedActors_ReturnValue;             // 0x0008(0x0010)(ReferenceParm)
	class ABP_OrangeCannonEquipable_C*            K2Node_DynamicCast_AsBP_Orange_Cannon_Equipable;   // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_AimWeapon_C_HideCannonMesh) == 0x000008, "Wrong alignment on GA_AimWeapon_C_HideCannonMesh");
static_assert(sizeof(GA_AimWeapon_C_HideCannonMesh) == 0x000028, "Wrong size on GA_AimWeapon_C_HideCannonMesh");
static_assert(offsetof(GA_AimWeapon_C_HideCannonMesh, CallFunc_GetAssociatedEquipment_ReturnValue) == 0x000000, "Member 'GA_AimWeapon_C_HideCannonMesh::CallFunc_GetAssociatedEquipment_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_AimWeapon_C_HideCannonMesh, CallFunc_GetSpawnedActors_ReturnValue) == 0x000008, "Member 'GA_AimWeapon_C_HideCannonMesh::CallFunc_GetSpawnedActors_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_AimWeapon_C_HideCannonMesh, K2Node_DynamicCast_AsBP_Orange_Cannon_Equipable) == 0x000018, "Member 'GA_AimWeapon_C_HideCannonMesh::K2Node_DynamicCast_AsBP_Orange_Cannon_Equipable' has a wrong offset!");
static_assert(offsetof(GA_AimWeapon_C_HideCannonMesh, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'GA_AimWeapon_C_HideCannonMesh::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function GA_AimWeapon.GA_AimWeapon_C.PlayCameraShake
// 0x0010 (0x0010 - 0x0000)
struct GA_AimWeapon_C_PlayCameraShake final
{
public:
	class UClass*                                 CameraShake;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        Scale;                                             // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_AimWeapon_C_PlayCameraShake) == 0x000008, "Wrong alignment on GA_AimWeapon_C_PlayCameraShake");
static_assert(sizeof(GA_AimWeapon_C_PlayCameraShake) == 0x000010, "Wrong size on GA_AimWeapon_C_PlayCameraShake");
static_assert(offsetof(GA_AimWeapon_C_PlayCameraShake, CameraShake) == 0x000000, "Member 'GA_AimWeapon_C_PlayCameraShake::CameraShake' has a wrong offset!");
static_assert(offsetof(GA_AimWeapon_C_PlayCameraShake, Scale) == 0x000008, "Member 'GA_AimWeapon_C_PlayCameraShake::Scale' has a wrong offset!");

// Function GA_AimWeapon.GA_AimWeapon_C.ResetCameraFOV
// 0x0008 (0x0008 - 0x0000)
struct GA_AimWeapon_C_ResetCameraFOV final
{
public:
	double                                        Speed;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_AimWeapon_C_ResetCameraFOV) == 0x000008, "Wrong alignment on GA_AimWeapon_C_ResetCameraFOV");
static_assert(sizeof(GA_AimWeapon_C_ResetCameraFOV) == 0x000008, "Wrong size on GA_AimWeapon_C_ResetCameraFOV");
static_assert(offsetof(GA_AimWeapon_C_ResetCameraFOV, Speed) == 0x000000, "Member 'GA_AimWeapon_C_ResetCameraFOV::Speed' has a wrong offset!");

// Function GA_AimWeapon.GA_AimWeapon_C.SetCameraFOV
// 0x0020 (0x0020 - 0x0000)
struct GA_AimWeapon_C_SetCameraFOV final
{
public:
	double                                        Amount;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Speed;                                             // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 OptionalCameraShake;                               // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        Scale;                                             // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_AimWeapon_C_SetCameraFOV) == 0x000008, "Wrong alignment on GA_AimWeapon_C_SetCameraFOV");
static_assert(sizeof(GA_AimWeapon_C_SetCameraFOV) == 0x000020, "Wrong size on GA_AimWeapon_C_SetCameraFOV");
static_assert(offsetof(GA_AimWeapon_C_SetCameraFOV, Amount) == 0x000000, "Member 'GA_AimWeapon_C_SetCameraFOV::Amount' has a wrong offset!");
static_assert(offsetof(GA_AimWeapon_C_SetCameraFOV, Speed) == 0x000008, "Member 'GA_AimWeapon_C_SetCameraFOV::Speed' has a wrong offset!");
static_assert(offsetof(GA_AimWeapon_C_SetCameraFOV, OptionalCameraShake) == 0x000010, "Member 'GA_AimWeapon_C_SetCameraFOV::OptionalCameraShake' has a wrong offset!");
static_assert(offsetof(GA_AimWeapon_C_SetCameraFOV, Scale) == 0x000018, "Member 'GA_AimWeapon_C_SetCameraFOV::Scale' has a wrong offset!");

}

