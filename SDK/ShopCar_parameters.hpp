#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ShopCar

#include "Basic.hpp"

#include "E_MaterialTypes_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "E_ImpactEffect_structs.hpp"


namespace SDK::Params
{

// Function ShopCar.ShopCar_C.ExecuteUbergraph_ShopCar
// 0x00B0 (0x00B0 - 0x0000)
struct ShopCar_C_ExecuteUbergraph_ShopCar final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_1;                               // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_2;                               // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UEconomySubsystem*                      CallFunc_GetWorldSubsystem_ReturnValue;            // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UEconomySubsystem*                      CallFunc_GetWorldSubsystem_ReturnValue_1;          // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable;                 // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2B[0x1];                                       // 0x002B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_3;                               // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable_1;                     // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable_1;               // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_32[0x6];                                       // 0x0032(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_Event_SabotagingActor;                      // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue_1;               // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_Show_1;                               // 0x0042(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_Show;                                 // 0x0043(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0048(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_WithdrawEconomyFromTeamAtPoint_ReturnValue; // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_61[0x3];                                       // 0x0061(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Select_Default;                             // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Select_Default_1;                           // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6C[0x4];                                       // 0x006C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                K2Node_Event_Location;                             // 0x0070(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Event_HitImpulse;                           // 0x0088(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_ImpactEffect                                K2Node_Event_ImpactEffect;                         // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A1[0x3];                                       // 0x00A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_4;                               // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Select_Default_2;                           // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ShopCar_C_ExecuteUbergraph_ShopCar) == 0x000008, "Wrong alignment on ShopCar_C_ExecuteUbergraph_ShopCar");
static_assert(sizeof(ShopCar_C_ExecuteUbergraph_ShopCar) == 0x0000B0, "Wrong size on ShopCar_C_ExecuteUbergraph_ShopCar");
static_assert(offsetof(ShopCar_C_ExecuteUbergraph_ShopCar, EntryPoint) == 0x000000, "Member 'ShopCar_C_ExecuteUbergraph_ShopCar::EntryPoint' has a wrong offset!");
static_assert(offsetof(ShopCar_C_ExecuteUbergraph_ShopCar, Temp_bool_Variable) == 0x000004, "Member 'ShopCar_C_ExecuteUbergraph_ShopCar::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(ShopCar_C_ExecuteUbergraph_ShopCar, Temp_int_Variable) == 0x000008, "Member 'ShopCar_C_ExecuteUbergraph_ShopCar::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(ShopCar_C_ExecuteUbergraph_ShopCar, Temp_bool_Variable_1) == 0x00000C, "Member 'ShopCar_C_ExecuteUbergraph_ShopCar::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(ShopCar_C_ExecuteUbergraph_ShopCar, Temp_int_Variable_1) == 0x000010, "Member 'ShopCar_C_ExecuteUbergraph_ShopCar::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(ShopCar_C_ExecuteUbergraph_ShopCar, Temp_int_Variable_2) == 0x000014, "Member 'ShopCar_C_ExecuteUbergraph_ShopCar::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(ShopCar_C_ExecuteUbergraph_ShopCar, CallFunc_GetWorldSubsystem_ReturnValue) == 0x000018, "Member 'ShopCar_C_ExecuteUbergraph_ShopCar::CallFunc_GetWorldSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(ShopCar_C_ExecuteUbergraph_ShopCar, CallFunc_GetWorldSubsystem_ReturnValue_1) == 0x000020, "Member 'ShopCar_C_ExecuteUbergraph_ShopCar::CallFunc_GetWorldSubsystem_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ShopCar_C_ExecuteUbergraph_ShopCar, Temp_bool_IsClosed_Variable) == 0x000028, "Member 'ShopCar_C_ExecuteUbergraph_ShopCar::Temp_bool_IsClosed_Variable' has a wrong offset!");
static_assert(offsetof(ShopCar_C_ExecuteUbergraph_ShopCar, Temp_bool_Has_Been_Initd_Variable) == 0x000029, "Member 'ShopCar_C_ExecuteUbergraph_ShopCar::Temp_bool_Has_Been_Initd_Variable' has a wrong offset!");
static_assert(offsetof(ShopCar_C_ExecuteUbergraph_ShopCar, CallFunc_HasAuthority_ReturnValue) == 0x00002A, "Member 'ShopCar_C_ExecuteUbergraph_ShopCar::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(ShopCar_C_ExecuteUbergraph_ShopCar, Temp_int_Variable_3) == 0x00002C, "Member 'ShopCar_C_ExecuteUbergraph_ShopCar::Temp_int_Variable_3' has a wrong offset!");
static_assert(offsetof(ShopCar_C_ExecuteUbergraph_ShopCar, Temp_bool_IsClosed_Variable_1) == 0x000030, "Member 'ShopCar_C_ExecuteUbergraph_ShopCar::Temp_bool_IsClosed_Variable_1' has a wrong offset!");
static_assert(offsetof(ShopCar_C_ExecuteUbergraph_ShopCar, Temp_bool_Has_Been_Initd_Variable_1) == 0x000031, "Member 'ShopCar_C_ExecuteUbergraph_ShopCar::Temp_bool_Has_Been_Initd_Variable_1' has a wrong offset!");
static_assert(offsetof(ShopCar_C_ExecuteUbergraph_ShopCar, K2Node_Event_SabotagingActor) == 0x000038, "Member 'ShopCar_C_ExecuteUbergraph_ShopCar::K2Node_Event_SabotagingActor' has a wrong offset!");
static_assert(offsetof(ShopCar_C_ExecuteUbergraph_ShopCar, Temp_bool_Variable_2) == 0x000040, "Member 'ShopCar_C_ExecuteUbergraph_ShopCar::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(ShopCar_C_ExecuteUbergraph_ShopCar, CallFunc_HasAuthority_ReturnValue_1) == 0x000041, "Member 'ShopCar_C_ExecuteUbergraph_ShopCar::CallFunc_HasAuthority_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ShopCar_C_ExecuteUbergraph_ShopCar, K2Node_Event_Show_1) == 0x000042, "Member 'ShopCar_C_ExecuteUbergraph_ShopCar::K2Node_Event_Show_1' has a wrong offset!");
static_assert(offsetof(ShopCar_C_ExecuteUbergraph_ShopCar, K2Node_Event_Show) == 0x000043, "Member 'ShopCar_C_ExecuteUbergraph_ShopCar::K2Node_Event_Show' has a wrong offset!");
static_assert(offsetof(ShopCar_C_ExecuteUbergraph_ShopCar, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000048, "Member 'ShopCar_C_ExecuteUbergraph_ShopCar::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(ShopCar_C_ExecuteUbergraph_ShopCar, CallFunc_WithdrawEconomyFromTeamAtPoint_ReturnValue) == 0x000060, "Member 'ShopCar_C_ExecuteUbergraph_ShopCar::CallFunc_WithdrawEconomyFromTeamAtPoint_ReturnValue' has a wrong offset!");
static_assert(offsetof(ShopCar_C_ExecuteUbergraph_ShopCar, K2Node_Select_Default) == 0x000064, "Member 'ShopCar_C_ExecuteUbergraph_ShopCar::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(ShopCar_C_ExecuteUbergraph_ShopCar, K2Node_Select_Default_1) == 0x000068, "Member 'ShopCar_C_ExecuteUbergraph_ShopCar::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(ShopCar_C_ExecuteUbergraph_ShopCar, K2Node_Event_Location) == 0x000070, "Member 'ShopCar_C_ExecuteUbergraph_ShopCar::K2Node_Event_Location' has a wrong offset!");
static_assert(offsetof(ShopCar_C_ExecuteUbergraph_ShopCar, K2Node_Event_HitImpulse) == 0x000088, "Member 'ShopCar_C_ExecuteUbergraph_ShopCar::K2Node_Event_HitImpulse' has a wrong offset!");
static_assert(offsetof(ShopCar_C_ExecuteUbergraph_ShopCar, K2Node_Event_ImpactEffect) == 0x0000A0, "Member 'ShopCar_C_ExecuteUbergraph_ShopCar::K2Node_Event_ImpactEffect' has a wrong offset!");
static_assert(offsetof(ShopCar_C_ExecuteUbergraph_ShopCar, Temp_int_Variable_4) == 0x0000A4, "Member 'ShopCar_C_ExecuteUbergraph_ShopCar::Temp_int_Variable_4' has a wrong offset!");
static_assert(offsetof(ShopCar_C_ExecuteUbergraph_ShopCar, K2Node_Select_Default_2) == 0x0000A8, "Member 'ShopCar_C_ExecuteUbergraph_ShopCar::K2Node_Select_Default_2' has a wrong offset!");

// Function ShopCar.ShopCar_C.GetMaterialType
// 0x0001 (0x0001 - 0x0000)
struct ShopCar_C_GetMaterialType final
{
public:
	E_MaterialTypes                               MaterialType;                                      // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ShopCar_C_GetMaterialType) == 0x000001, "Wrong alignment on ShopCar_C_GetMaterialType");
static_assert(sizeof(ShopCar_C_GetMaterialType) == 0x000001, "Wrong size on ShopCar_C_GetMaterialType");
static_assert(offsetof(ShopCar_C_GetMaterialType, MaterialType) == 0x000000, "Member 'ShopCar_C_GetMaterialType::MaterialType' has a wrong offset!");

// Function ShopCar.ShopCar_C.GetOptionalText
// 0x0058 (0x0058 - 0x0000)
struct ShopCar_C_GetOptionalText final
{
public:
	class FText                                   Return;                                            // 0x0000(0x0010)(Parm, OutParm)
	class FText                                   Optional_Second_Line;                              // 0x0010(0x0010)(Parm, OutParm)
	bool                                          Temp_bool_Variable;                                // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable;                                // 0x0028(0x0010)()
	class FText                                   Temp_text_Variable_1;                              // 0x0038(0x0010)()
	class FText                                   K2Node_Select_Default;                             // 0x0048(0x0010)()
};
static_assert(alignof(ShopCar_C_GetOptionalText) == 0x000008, "Wrong alignment on ShopCar_C_GetOptionalText");
static_assert(sizeof(ShopCar_C_GetOptionalText) == 0x000058, "Wrong size on ShopCar_C_GetOptionalText");
static_assert(offsetof(ShopCar_C_GetOptionalText, Return) == 0x000000, "Member 'ShopCar_C_GetOptionalText::Return' has a wrong offset!");
static_assert(offsetof(ShopCar_C_GetOptionalText, Optional_Second_Line) == 0x000010, "Member 'ShopCar_C_GetOptionalText::Optional_Second_Line' has a wrong offset!");
static_assert(offsetof(ShopCar_C_GetOptionalText, Temp_bool_Variable) == 0x000020, "Member 'ShopCar_C_GetOptionalText::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(ShopCar_C_GetOptionalText, Temp_text_Variable) == 0x000028, "Member 'ShopCar_C_GetOptionalText::Temp_text_Variable' has a wrong offset!");
static_assert(offsetof(ShopCar_C_GetOptionalText, Temp_text_Variable_1) == 0x000038, "Member 'ShopCar_C_GetOptionalText::Temp_text_Variable_1' has a wrong offset!");
static_assert(offsetof(ShopCar_C_GetOptionalText, K2Node_Select_Default) == 0x000048, "Member 'ShopCar_C_GetOptionalText::K2Node_Select_Default' has a wrong offset!");

// Function ShopCar.ShopCar_C.GetPriority
// 0x0004 (0x0004 - 0x0000)
struct ShopCar_C_GetPriority final
{
public:
	int32                                         Priority;                                          // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ShopCar_C_GetPriority) == 0x000004, "Wrong alignment on ShopCar_C_GetPriority");
static_assert(sizeof(ShopCar_C_GetPriority) == 0x000004, "Wrong size on ShopCar_C_GetPriority");
static_assert(offsetof(ShopCar_C_GetPriority, Priority) == 0x000000, "Member 'ShopCar_C_GetPriority::Priority' has a wrong offset!");

// Function ShopCar.ShopCar_C.GetWidgetLocation
// 0x0030 (0x0030 - 0x0000)
struct ShopCar_C_GetWidgetLocation final
{
public:
	struct FVector                                Location;                                          // 0x0000(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0018(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ShopCar_C_GetWidgetLocation) == 0x000008, "Wrong alignment on ShopCar_C_GetWidgetLocation");
static_assert(sizeof(ShopCar_C_GetWidgetLocation) == 0x000030, "Wrong size on ShopCar_C_GetWidgetLocation");
static_assert(offsetof(ShopCar_C_GetWidgetLocation, Location) == 0x000000, "Member 'ShopCar_C_GetWidgetLocation::Location' has a wrong offset!");
static_assert(offsetof(ShopCar_C_GetWidgetLocation, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000018, "Member 'ShopCar_C_GetWidgetLocation::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");

// Function ShopCar.ShopCar_C.House Actor Impact Cosmetics
// 0x0038 (0x0038 - 0x0000)
struct ShopCar_C_House_Actor_Impact_Cosmetics final
{
public:
	struct FVector                                Location;                                          // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                HitImpulse;                                        // 0x0018(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_ImpactEffect                                ImpactEffect;                                      // 0x0030(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ShopCar_C_House_Actor_Impact_Cosmetics) == 0x000008, "Wrong alignment on ShopCar_C_House_Actor_Impact_Cosmetics");
static_assert(sizeof(ShopCar_C_House_Actor_Impact_Cosmetics) == 0x000038, "Wrong size on ShopCar_C_House_Actor_Impact_Cosmetics");
static_assert(offsetof(ShopCar_C_House_Actor_Impact_Cosmetics, Location) == 0x000000, "Member 'ShopCar_C_House_Actor_Impact_Cosmetics::Location' has a wrong offset!");
static_assert(offsetof(ShopCar_C_House_Actor_Impact_Cosmetics, HitImpulse) == 0x000018, "Member 'ShopCar_C_House_Actor_Impact_Cosmetics::HitImpulse' has a wrong offset!");
static_assert(offsetof(ShopCar_C_House_Actor_Impact_Cosmetics, ImpactEffect) == 0x000030, "Member 'ShopCar_C_House_Actor_Impact_Cosmetics::ImpactEffect' has a wrong offset!");

// Function ShopCar.ShopCar_C.IsInteractable
// 0x0002 (0x0002 - 0x0000)
struct ShopCar_C_IsInteractable final
{
public:
	bool                                          Interactable;                                      // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ShopCar_C_IsInteractable) == 0x000001, "Wrong alignment on ShopCar_C_IsInteractable");
static_assert(sizeof(ShopCar_C_IsInteractable) == 0x000002, "Wrong size on ShopCar_C_IsInteractable");
static_assert(offsetof(ShopCar_C_IsInteractable, Interactable) == 0x000000, "Member 'ShopCar_C_IsInteractable::Interactable' has a wrong offset!");
static_assert(offsetof(ShopCar_C_IsInteractable, CallFunc_Not_PreBool_ReturnValue) == 0x000001, "Member 'ShopCar_C_IsInteractable::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function ShopCar.ShopCar_C.ReloadAfterHousesLoaded
// 0x0001 (0x0001 - 0x0000)
struct ShopCar_C_ReloadAfterHousesLoaded final
{
public:
	bool                                          Return;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ShopCar_C_ReloadAfterHousesLoaded) == 0x000001, "Wrong alignment on ShopCar_C_ReloadAfterHousesLoaded");
static_assert(sizeof(ShopCar_C_ReloadAfterHousesLoaded) == 0x000001, "Wrong size on ShopCar_C_ReloadAfterHousesLoaded");
static_assert(offsetof(ShopCar_C_ReloadAfterHousesLoaded, Return) == 0x000000, "Member 'ShopCar_C_ReloadAfterHousesLoaded::Return' has a wrong offset!");

// Function ShopCar.ShopCar_C.Sabotage
// 0x0008 (0x0008 - 0x0000)
struct ShopCar_C_Sabotage final
{
public:
	class AActor*                                 SabotagingActor;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ShopCar_C_Sabotage) == 0x000008, "Wrong alignment on ShopCar_C_Sabotage");
static_assert(sizeof(ShopCar_C_Sabotage) == 0x000008, "Wrong size on ShopCar_C_Sabotage");
static_assert(offsetof(ShopCar_C_Sabotage, SabotagingActor) == 0x000000, "Member 'ShopCar_C_Sabotage::SabotagingActor' has a wrong offset!");

// Function ShopCar.ShopCar_C.Toggle Focus Highlight
// 0x0001 (0x0001 - 0x0000)
struct ShopCar_C_Toggle_Focus_Highlight final
{
public:
	bool                                          Show;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ShopCar_C_Toggle_Focus_Highlight) == 0x000001, "Wrong alignment on ShopCar_C_Toggle_Focus_Highlight");
static_assert(sizeof(ShopCar_C_Toggle_Focus_Highlight) == 0x000001, "Wrong size on ShopCar_C_Toggle_Focus_Highlight");
static_assert(offsetof(ShopCar_C_Toggle_Focus_Highlight, Show) == 0x000000, "Member 'ShopCar_C_Toggle_Focus_Highlight::Show' has a wrong offset!");

// Function ShopCar.ShopCar_C.Toggle Item Highlight
// 0x0001 (0x0001 - 0x0000)
struct ShopCar_C_Toggle_Item_Highlight final
{
public:
	bool                                          Show;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ShopCar_C_Toggle_Item_Highlight) == 0x000001, "Wrong alignment on ShopCar_C_Toggle_Item_Highlight");
static_assert(sizeof(ShopCar_C_Toggle_Item_Highlight) == 0x000001, "Wrong size on ShopCar_C_Toggle_Item_Highlight");
static_assert(offsetof(ShopCar_C_Toggle_Item_Highlight, Show) == 0x000000, "Member 'ShopCar_C_Toggle_Item_Highlight::Show' has a wrong offset!");

// Function ShopCar.ShopCar_C.UserConstructionScript
// 0x0020 (0x0020 - 0x0000)
struct ShopCar_C_UserConstructionScript final
{
public:
	TArray<class USkeletalMeshComponent*>         K2Node_MakeArray_Array;                            // 0x0000(0x0010)(ReferenceParm, ContainsInstancedReference)
	TArray<class UMeshComponent*>                 K2Node_MakeArray_Array_1;                          // 0x0010(0x0010)(ReferenceParm, ContainsInstancedReference)
};
static_assert(alignof(ShopCar_C_UserConstructionScript) == 0x000008, "Wrong alignment on ShopCar_C_UserConstructionScript");
static_assert(sizeof(ShopCar_C_UserConstructionScript) == 0x000020, "Wrong size on ShopCar_C_UserConstructionScript");
static_assert(offsetof(ShopCar_C_UserConstructionScript, K2Node_MakeArray_Array) == 0x000000, "Member 'ShopCar_C_UserConstructionScript::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(ShopCar_C_UserConstructionScript, K2Node_MakeArray_Array_1) == 0x000010, "Member 'ShopCar_C_UserConstructionScript::K2Node_MakeArray_Array_1' has a wrong offset!");

}

