#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WI_CharacterNamePlate

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CommonUI_classes.hpp"
#include "JP_structs.hpp"
#include "E_NameplateDistanceState_structs.hpp"
#include "SlateCore_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "UMG_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WI_CharacterNamePlate.WI_CharacterNamePlate_C
// 0x0140 (0x0570 - 0x0430)
class UWI_CharacterNamePlate_C final : public UCommonActivatableWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0430(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       Visible;                                           // 0x0438(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Dead;                                              // 0x0440(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Stealth;                                           // 0x0448(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWI_CharacterNamePlate_HealthBar_C*     HealthBar;                                         // 0x0450(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               Overlay_26;                                        // 0x0458(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       PlayerNameLabel;                                   // 0x0460(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWI_CharacterLocator_C*                 WI_CharacterLocator;                               // 0x0468(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWI_VoiceChatTeammate_C*                WI_VoiceChatTeammate;                              // 0x0470(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	ETeamType                                     Team;                                              // 0x0478(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_479[0x7];                                      // 0x0479(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UTexture2D>              BlueIconSoftObject;                                // 0x0480(0x0028)(Edit, BlueprintVisible, HasGetValueTypeHash)
	TSoftObjectPtr<class UTexture2D>              RedIconSoftObject;                                 // 0x04A8(0x0028)(Edit, BlueprintVisible, HasGetValueTypeHash)
	struct FSlateColor                            BlueTextColor;                                     // 0x04D0(0x0014)(Edit, BlueprintVisible)
	struct FSlateColor                            RedTextColor;                                      // 0x04E4(0x0014)(Edit, BlueprintVisible)
	class FString                                 PlayerName;                                        // 0x04F8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	double                                        HealthFraction;                                    // 0x0508(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVectorSpringState                     SpringState;                                       // 0x0510(0x0038)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor)
	struct FVector                                SpringOffset;                                      // 0x0548(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        HitAnimationStrength;                              // 0x0560(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        HitAnimationRotationMultiplier;                    // 0x0568(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_WI_CharacterNamePlate(int32 EntryPoint);
	void GetStealthActive(bool* Return);
	void OnDead();
	void OnStealthToggle(bool StealthActive, bool IsEnemyToLocalPlayer);
	void PreConstruct(bool IsDesignTime);
	void Set_Primary_Visibility(bool Show);
	void Set_Stealth_Visibility(bool Enable);
	void SetForcedStealth(bool Enable);
	void SetHealthFraction(double HealthFraction_0);
	void SetPlayerName(const class FString& PlayerName_0);
	void SetTalkingVisibility(bool IsTalking);
	void SetTeam(ETeamType Team_0);
	void SetVisibilityOnWidgetsBasedOnCurrentState(E_NameplateDistanceState State);
	void Tick(const struct FGeometry& MyGeometry, float InDeltaTime);
	void UpdateRenderScale(double ScaleX, double ScaleY);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WI_CharacterNamePlate_C">();
	}
	static class UWI_CharacterNamePlate_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWI_CharacterNamePlate_C>();
	}
};
static_assert(alignof(UWI_CharacterNamePlate_C) == 0x000008, "Wrong alignment on UWI_CharacterNamePlate_C");
static_assert(sizeof(UWI_CharacterNamePlate_C) == 0x000570, "Wrong size on UWI_CharacterNamePlate_C");
static_assert(offsetof(UWI_CharacterNamePlate_C, UberGraphFrame) == 0x000430, "Member 'UWI_CharacterNamePlate_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWI_CharacterNamePlate_C, Visible) == 0x000438, "Member 'UWI_CharacterNamePlate_C::Visible' has a wrong offset!");
static_assert(offsetof(UWI_CharacterNamePlate_C, Dead) == 0x000440, "Member 'UWI_CharacterNamePlate_C::Dead' has a wrong offset!");
static_assert(offsetof(UWI_CharacterNamePlate_C, Stealth) == 0x000448, "Member 'UWI_CharacterNamePlate_C::Stealth' has a wrong offset!");
static_assert(offsetof(UWI_CharacterNamePlate_C, HealthBar) == 0x000450, "Member 'UWI_CharacterNamePlate_C::HealthBar' has a wrong offset!");
static_assert(offsetof(UWI_CharacterNamePlate_C, Overlay_26) == 0x000458, "Member 'UWI_CharacterNamePlate_C::Overlay_26' has a wrong offset!");
static_assert(offsetof(UWI_CharacterNamePlate_C, PlayerNameLabel) == 0x000460, "Member 'UWI_CharacterNamePlate_C::PlayerNameLabel' has a wrong offset!");
static_assert(offsetof(UWI_CharacterNamePlate_C, WI_CharacterLocator) == 0x000468, "Member 'UWI_CharacterNamePlate_C::WI_CharacterLocator' has a wrong offset!");
static_assert(offsetof(UWI_CharacterNamePlate_C, WI_VoiceChatTeammate) == 0x000470, "Member 'UWI_CharacterNamePlate_C::WI_VoiceChatTeammate' has a wrong offset!");
static_assert(offsetof(UWI_CharacterNamePlate_C, Team) == 0x000478, "Member 'UWI_CharacterNamePlate_C::Team' has a wrong offset!");
static_assert(offsetof(UWI_CharacterNamePlate_C, BlueIconSoftObject) == 0x000480, "Member 'UWI_CharacterNamePlate_C::BlueIconSoftObject' has a wrong offset!");
static_assert(offsetof(UWI_CharacterNamePlate_C, RedIconSoftObject) == 0x0004A8, "Member 'UWI_CharacterNamePlate_C::RedIconSoftObject' has a wrong offset!");
static_assert(offsetof(UWI_CharacterNamePlate_C, BlueTextColor) == 0x0004D0, "Member 'UWI_CharacterNamePlate_C::BlueTextColor' has a wrong offset!");
static_assert(offsetof(UWI_CharacterNamePlate_C, RedTextColor) == 0x0004E4, "Member 'UWI_CharacterNamePlate_C::RedTextColor' has a wrong offset!");
static_assert(offsetof(UWI_CharacterNamePlate_C, PlayerName) == 0x0004F8, "Member 'UWI_CharacterNamePlate_C::PlayerName' has a wrong offset!");
static_assert(offsetof(UWI_CharacterNamePlate_C, HealthFraction) == 0x000508, "Member 'UWI_CharacterNamePlate_C::HealthFraction' has a wrong offset!");
static_assert(offsetof(UWI_CharacterNamePlate_C, SpringState) == 0x000510, "Member 'UWI_CharacterNamePlate_C::SpringState' has a wrong offset!");
static_assert(offsetof(UWI_CharacterNamePlate_C, SpringOffset) == 0x000548, "Member 'UWI_CharacterNamePlate_C::SpringOffset' has a wrong offset!");
static_assert(offsetof(UWI_CharacterNamePlate_C, HitAnimationStrength) == 0x000560, "Member 'UWI_CharacterNamePlate_C::HitAnimationStrength' has a wrong offset!");
static_assert(offsetof(UWI_CharacterNamePlate_C, HitAnimationRotationMultiplier) == 0x000568, "Member 'UWI_CharacterNamePlate_C::HitAnimationRotationMultiplier' has a wrong offset!");

}

