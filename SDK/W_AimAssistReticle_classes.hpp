#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_AimAssistReticle

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "SlateCore_structs.hpp"
#include "AimAssistScripts_classes.hpp"
#include "UMG_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass W_AimAssistReticle.W_AimAssistReticle_C
// 0x0130 (0x0410 - 0x02E0)
class UW_AimAssistReticle_C final : public UAimAssistReticleBase
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02E0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UImage*                                 Reticle;                                           // 0x02E8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                               ReticleRadius;                                     // 0x02F0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UAimAssistComponent*                    OwningAimAssist;                                   // 0x02F8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	struct FSlateColor                            ReticleColor;                                      // 0x0300(0x0014)(Edit, BlueprintVisible, ExposeOnSpawn)
	uint8                                         Pad_314[0x4];                                      // 0x0314(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        OriginalReticleWidth;                              // 0x0318(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               ReticleMaterial;                                   // 0x0320(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_328[0x8];                                      // 0x0328(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateBrush                            ReticleBrush;                                      // 0x0330(0x00D0)(Edit, BlueprintVisible, DisableEditOnInstance)
	double                                        ReticeWidth;                                       // 0x0400(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void Construct();
	void ExecuteUbergraph_W_AimAssistReticle(int32 EntryPoint);
	struct FSlateBrush Get_Reticle_Brush();
	ESlateVisibility Get_Reticle_Visibility();
	void GetCurrentSphereDistance(double* SphereDistance);
	void Tick(const struct FGeometry& MyGeometry, float InDeltaTime);

	void GetAdjustedThickness(double NewWidth, double* NewThickness) const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"W_AimAssistReticle_C">();
	}
	static class UW_AimAssistReticle_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UW_AimAssistReticle_C>();
	}
};
static_assert(alignof(UW_AimAssistReticle_C) == 0x000010, "Wrong alignment on UW_AimAssistReticle_C");
static_assert(sizeof(UW_AimAssistReticle_C) == 0x000410, "Wrong size on UW_AimAssistReticle_C");
static_assert(offsetof(UW_AimAssistReticle_C, UberGraphFrame) == 0x0002E0, "Member 'UW_AimAssistReticle_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UW_AimAssistReticle_C, Reticle) == 0x0002E8, "Member 'UW_AimAssistReticle_C::Reticle' has a wrong offset!");
static_assert(offsetof(UW_AimAssistReticle_C, ReticleRadius) == 0x0002F0, "Member 'UW_AimAssistReticle_C::ReticleRadius' has a wrong offset!");
static_assert(offsetof(UW_AimAssistReticle_C, OwningAimAssist) == 0x0002F8, "Member 'UW_AimAssistReticle_C::OwningAimAssist' has a wrong offset!");
static_assert(offsetof(UW_AimAssistReticle_C, ReticleColor) == 0x000300, "Member 'UW_AimAssistReticle_C::ReticleColor' has a wrong offset!");
static_assert(offsetof(UW_AimAssistReticle_C, OriginalReticleWidth) == 0x000318, "Member 'UW_AimAssistReticle_C::OriginalReticleWidth' has a wrong offset!");
static_assert(offsetof(UW_AimAssistReticle_C, ReticleMaterial) == 0x000320, "Member 'UW_AimAssistReticle_C::ReticleMaterial' has a wrong offset!");
static_assert(offsetof(UW_AimAssistReticle_C, ReticleBrush) == 0x000330, "Member 'UW_AimAssistReticle_C::ReticleBrush' has a wrong offset!");
static_assert(offsetof(UW_AimAssistReticle_C, ReticeWidth) == 0x000400, "Member 'UW_AimAssistReticle_C::ReticeWidth' has a wrong offset!");

}

