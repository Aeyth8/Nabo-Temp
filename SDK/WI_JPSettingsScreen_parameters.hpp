#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WI_JPSettingsScreen

#include "Basic.hpp"

#include "JP_structs.hpp"
#include "EnhancedInput_structs.hpp"
#include "GameplayTags_structs.hpp"


namespace SDK::Params
{

// Function WI_JPSettingsScreen.WI_JPSettingsScreen_C.AfterPush_8E19BDE241DFA102EC2222970133BA0B
// 0x0008 (0x0008 - 0x0000)
struct WI_JPSettingsScreen_C_AfterPush_8E19BDE241DFA102EC2222970133BA0B final
{
public:
	class UCommonActivatableWidget*               UserWidget;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WI_JPSettingsScreen_C_AfterPush_8E19BDE241DFA102EC2222970133BA0B) == 0x000008, "Wrong alignment on WI_JPSettingsScreen_C_AfterPush_8E19BDE241DFA102EC2222970133BA0B");
static_assert(sizeof(WI_JPSettingsScreen_C_AfterPush_8E19BDE241DFA102EC2222970133BA0B) == 0x000008, "Wrong size on WI_JPSettingsScreen_C_AfterPush_8E19BDE241DFA102EC2222970133BA0B");
static_assert(offsetof(WI_JPSettingsScreen_C_AfterPush_8E19BDE241DFA102EC2222970133BA0B, UserWidget) == 0x000000, "Member 'WI_JPSettingsScreen_C_AfterPush_8E19BDE241DFA102EC2222970133BA0B::UserWidget' has a wrong offset!");

// Function WI_JPSettingsScreen.WI_JPSettingsScreen_C.AfterPush_98F0BED840880C12F41A1F9E61B64043
// 0x0008 (0x0008 - 0x0000)
struct WI_JPSettingsScreen_C_AfterPush_98F0BED840880C12F41A1F9E61B64043 final
{
public:
	class UCommonActivatableWidget*               UserWidget;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WI_JPSettingsScreen_C_AfterPush_98F0BED840880C12F41A1F9E61B64043) == 0x000008, "Wrong alignment on WI_JPSettingsScreen_C_AfterPush_98F0BED840880C12F41A1F9E61B64043");
static_assert(sizeof(WI_JPSettingsScreen_C_AfterPush_98F0BED840880C12F41A1F9E61B64043) == 0x000008, "Wrong size on WI_JPSettingsScreen_C_AfterPush_98F0BED840880C12F41A1F9E61B64043");
static_assert(offsetof(WI_JPSettingsScreen_C_AfterPush_98F0BED840880C12F41A1F9E61B64043, UserWidget) == 0x000000, "Member 'WI_JPSettingsScreen_C_AfterPush_98F0BED840880C12F41A1F9E61B64043::UserWidget' has a wrong offset!");

// Function WI_JPSettingsScreen.WI_JPSettingsScreen_C.BeforePush_8E19BDE241DFA102EC2222970133BA0B
// 0x0008 (0x0008 - 0x0000)
struct WI_JPSettingsScreen_C_BeforePush_8E19BDE241DFA102EC2222970133BA0B final
{
public:
	class UCommonActivatableWidget*               UserWidget;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WI_JPSettingsScreen_C_BeforePush_8E19BDE241DFA102EC2222970133BA0B) == 0x000008, "Wrong alignment on WI_JPSettingsScreen_C_BeforePush_8E19BDE241DFA102EC2222970133BA0B");
static_assert(sizeof(WI_JPSettingsScreen_C_BeforePush_8E19BDE241DFA102EC2222970133BA0B) == 0x000008, "Wrong size on WI_JPSettingsScreen_C_BeforePush_8E19BDE241DFA102EC2222970133BA0B");
static_assert(offsetof(WI_JPSettingsScreen_C_BeforePush_8E19BDE241DFA102EC2222970133BA0B, UserWidget) == 0x000000, "Member 'WI_JPSettingsScreen_C_BeforePush_8E19BDE241DFA102EC2222970133BA0B::UserWidget' has a wrong offset!");

// Function WI_JPSettingsScreen.WI_JPSettingsScreen_C.BeforePush_98F0BED840880C12F41A1F9E61B64043
// 0x0008 (0x0008 - 0x0000)
struct WI_JPSettingsScreen_C_BeforePush_98F0BED840880C12F41A1F9E61B64043 final
{
public:
	class UCommonActivatableWidget*               UserWidget;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WI_JPSettingsScreen_C_BeforePush_98F0BED840880C12F41A1F9E61B64043) == 0x000008, "Wrong alignment on WI_JPSettingsScreen_C_BeforePush_98F0BED840880C12F41A1F9E61B64043");
static_assert(sizeof(WI_JPSettingsScreen_C_BeforePush_98F0BED840880C12F41A1F9E61B64043) == 0x000008, "Wrong size on WI_JPSettingsScreen_C_BeforePush_98F0BED840880C12F41A1F9E61B64043");
static_assert(offsetof(WI_JPSettingsScreen_C_BeforePush_98F0BED840880C12F41A1F9E61B64043, UserWidget) == 0x000000, "Member 'WI_JPSettingsScreen_C_BeforePush_98F0BED840880C12F41A1F9E61B64043::UserWidget' has a wrong offset!");

// Function WI_JPSettingsScreen.WI_JPSettingsScreen_C.BndEvt__LyraSettingScreen_Settings_Panel_K2Node_ComponentBoundEvent_0_OnExecuteNamedActionBP__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct WI_JPSettingsScreen_C_BndEvt__LyraSettingScreen_Settings_Panel_K2Node_ComponentBoundEvent_0_OnExecuteNamedActionBP__DelegateSignature final
{
public:
	class UGameSetting*                           Setting;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           Action;                                            // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WI_JPSettingsScreen_C_BndEvt__LyraSettingScreen_Settings_Panel_K2Node_ComponentBoundEvent_0_OnExecuteNamedActionBP__DelegateSignature) == 0x000008, "Wrong alignment on WI_JPSettingsScreen_C_BndEvt__LyraSettingScreen_Settings_Panel_K2Node_ComponentBoundEvent_0_OnExecuteNamedActionBP__DelegateSignature");
static_assert(sizeof(WI_JPSettingsScreen_C_BndEvt__LyraSettingScreen_Settings_Panel_K2Node_ComponentBoundEvent_0_OnExecuteNamedActionBP__DelegateSignature) == 0x000010, "Wrong size on WI_JPSettingsScreen_C_BndEvt__LyraSettingScreen_Settings_Panel_K2Node_ComponentBoundEvent_0_OnExecuteNamedActionBP__DelegateSignature");
static_assert(offsetof(WI_JPSettingsScreen_C_BndEvt__LyraSettingScreen_Settings_Panel_K2Node_ComponentBoundEvent_0_OnExecuteNamedActionBP__DelegateSignature, Setting) == 0x000000, "Member 'WI_JPSettingsScreen_C_BndEvt__LyraSettingScreen_Settings_Panel_K2Node_ComponentBoundEvent_0_OnExecuteNamedActionBP__DelegateSignature::Setting' has a wrong offset!");
static_assert(offsetof(WI_JPSettingsScreen_C_BndEvt__LyraSettingScreen_Settings_Panel_K2Node_ComponentBoundEvent_0_OnExecuteNamedActionBP__DelegateSignature, Action) == 0x000008, "Member 'WI_JPSettingsScreen_C_BndEvt__LyraSettingScreen_Settings_Panel_K2Node_ComponentBoundEvent_0_OnExecuteNamedActionBP__DelegateSignature::Action' has a wrong offset!");

// Function WI_JPSettingsScreen.WI_JPSettingsScreen_C.BndEvt__SettingsPanel_HorizontalTabList_K2Node_ComponentBoundEvent_0_OnTabSelected__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct WI_JPSettingsScreen_C_BndEvt__SettingsPanel_HorizontalTabList_K2Node_ComponentBoundEvent_0_OnTabSelected__DelegateSignature final
{
public:
	class FName                                   TabId;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WI_JPSettingsScreen_C_BndEvt__SettingsPanel_HorizontalTabList_K2Node_ComponentBoundEvent_0_OnTabSelected__DelegateSignature) == 0x000004, "Wrong alignment on WI_JPSettingsScreen_C_BndEvt__SettingsPanel_HorizontalTabList_K2Node_ComponentBoundEvent_0_OnTabSelected__DelegateSignature");
static_assert(sizeof(WI_JPSettingsScreen_C_BndEvt__SettingsPanel_HorizontalTabList_K2Node_ComponentBoundEvent_0_OnTabSelected__DelegateSignature) == 0x000008, "Wrong size on WI_JPSettingsScreen_C_BndEvt__SettingsPanel_HorizontalTabList_K2Node_ComponentBoundEvent_0_OnTabSelected__DelegateSignature");
static_assert(offsetof(WI_JPSettingsScreen_C_BndEvt__SettingsPanel_HorizontalTabList_K2Node_ComponentBoundEvent_0_OnTabSelected__DelegateSignature, TabId) == 0x000000, "Member 'WI_JPSettingsScreen_C_BndEvt__SettingsPanel_HorizontalTabList_K2Node_ComponentBoundEvent_0_OnTabSelected__DelegateSignature::TabId' has a wrong offset!");

// Function WI_JPSettingsScreen.WI_JPSettingsScreen_C.ExecuteUbergraph_WI_JPSettingsScreen
// 0x0178 (0x0178 - 0x0000)
struct WI_JPSettingsScreen_C_ExecuteUbergraph_WI_JPSettingsScreen final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UCommonActivatableWidget*               K2Node_CustomEvent_UserWidget_3;                   // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UCommonActivatableWidget*               K2Node_CustomEvent_UserWidget_2;                   // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UCommonActivatableWidget* UserWidget)> K2Node_CreateDelegate_OutputDelegate;              // 0x0018(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UCommonActivatableWidget*               Temp_object_Variable;                              // 0x0028(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UCommonActivatableWidget* UserWidget)> K2Node_CreateDelegate_OutputDelegate_1;            // 0x0030(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IGameSettingActionInterface> K2Node_DynamicCast_AsGame_Setting_Action_Interface; // 0x0040(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCommonActivatableWidget*               K2Node_CustomEvent_UserWidget_1;                   // 0x0058(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UCommonActivatableWidget*               K2Node_CustomEvent_UserWidget;                     // 0x0060(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UCommonActivatableWidget* UserWidget)> K2Node_CreateDelegate_OutputDelegate_2;            // 0x0068(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UCommonActivatableWidget*               Temp_object_Variable_1;                            // 0x0078(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FInputActionValue                      K2Node_EnhancedInputActionEvent_ActionValue;       // 0x0080(0x0020)(NoDestructor)
	float                                         K2Node_EnhancedInputActionEvent_ElapsedTime;       // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_EnhancedInputActionEvent_TriggeredTime;     // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	const class UInputAction*                     K2Node_EnhancedInputActionEvent_SourceAction;      // 0x00A8(0x0008)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IGameSettingActionInterface> K2Node_DynamicCast_AsGame_Setting_Action_Interface_1; // 0x00B0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Conv_InputActionValueToBool_ReturnValue;  // 0x00C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C2[0x6];                                       // 0x00C2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UInputAction*                           Temp_object_Variable_2;                            // 0x00C8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable;                                // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_0;                              // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_1;                              // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E9[0x7];                                       // 0x00E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Temp_real_Variable_1_0;                            // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x00F8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_ComponentBoundEvent_TabId;                  // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAsyncAction_PushContentToLayerForPlayer* CallFunc_PushContentToLayerForPlayer_ReturnValue;  // 0x0108(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_111[0x7];                                      // 0x0111(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameSetting*                           K2Node_ComponentBoundEvent_Setting;                // 0x0118(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           K2Node_ComponentBoundEvent_Action;                 // 0x0120(0x0008)(NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UCommonActivatableWidget* UserWidget)> K2Node_CreateDelegate_OutputDelegate_3;            // 0x0128(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ExecuteActionForSetting_ReturnValue;      // 0x0138(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ExecuteActionForSetting_ReturnValue_1;    // 0x0139(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          GameplayTagsK2Node_SwitchGameplayTag_CmpSuccess;   // 0x013A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_13B[0x5];                                      // 0x013B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue_1;            // 0x0140(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UW_SettingsPanel_C*                     K2Node_DynamicCast_AsW_Settings_Panel;             // 0x0148(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0150(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_151[0x7];                                      // 0x0151(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAsyncAction_PushContentToLayerForPlayer* CallFunc_PushContentToLayerForPlayer_ReturnValue_1; // 0x0158(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0160(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0161(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_162[0x6];                                      // 0x0162(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UWI_JPHorizontalTabList_C*              K2Node_DynamicCast_AsWI_JPHorizontal_Tab_List;     // 0x0168(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0170(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WI_JPSettingsScreen_C_ExecuteUbergraph_WI_JPSettingsScreen) == 0x000008, "Wrong alignment on WI_JPSettingsScreen_C_ExecuteUbergraph_WI_JPSettingsScreen");
static_assert(sizeof(WI_JPSettingsScreen_C_ExecuteUbergraph_WI_JPSettingsScreen) == 0x000178, "Wrong size on WI_JPSettingsScreen_C_ExecuteUbergraph_WI_JPSettingsScreen");
static_assert(offsetof(WI_JPSettingsScreen_C_ExecuteUbergraph_WI_JPSettingsScreen, EntryPoint) == 0x000000, "Member 'WI_JPSettingsScreen_C_ExecuteUbergraph_WI_JPSettingsScreen::EntryPoint' has a wrong offset!");
static_assert(offsetof(WI_JPSettingsScreen_C_ExecuteUbergraph_WI_JPSettingsScreen, K2Node_CustomEvent_UserWidget_3) == 0x000008, "Member 'WI_JPSettingsScreen_C_ExecuteUbergraph_WI_JPSettingsScreen::K2Node_CustomEvent_UserWidget_3' has a wrong offset!");
static_assert(offsetof(WI_JPSettingsScreen_C_ExecuteUbergraph_WI_JPSettingsScreen, K2Node_CustomEvent_UserWidget_2) == 0x000010, "Member 'WI_JPSettingsScreen_C_ExecuteUbergraph_WI_JPSettingsScreen::K2Node_CustomEvent_UserWidget_2' has a wrong offset!");
static_assert(offsetof(WI_JPSettingsScreen_C_ExecuteUbergraph_WI_JPSettingsScreen, K2Node_CreateDelegate_OutputDelegate) == 0x000018, "Member 'WI_JPSettingsScreen_C_ExecuteUbergraph_WI_JPSettingsScreen::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WI_JPSettingsScreen_C_ExecuteUbergraph_WI_JPSettingsScreen, Temp_object_Variable) == 0x000028, "Member 'WI_JPSettingsScreen_C_ExecuteUbergraph_WI_JPSettingsScreen::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(WI_JPSettingsScreen_C_ExecuteUbergraph_WI_JPSettingsScreen, K2Node_CreateDelegate_OutputDelegate_1) == 0x000030, "Member 'WI_JPSettingsScreen_C_ExecuteUbergraph_WI_JPSettingsScreen::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(WI_JPSettingsScreen_C_ExecuteUbergraph_WI_JPSettingsScreen, K2Node_DynamicCast_AsGame_Setting_Action_Interface) == 0x000040, "Member 'WI_JPSettingsScreen_C_ExecuteUbergraph_WI_JPSettingsScreen::K2Node_DynamicCast_AsGame_Setting_Action_Interface' has a wrong offset!");
static_assert(offsetof(WI_JPSettingsScreen_C_ExecuteUbergraph_WI_JPSettingsScreen, K2Node_DynamicCast_bSuccess) == 0x000050, "Member 'WI_JPSettingsScreen_C_ExecuteUbergraph_WI_JPSettingsScreen::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WI_JPSettingsScreen_C_ExecuteUbergraph_WI_JPSettingsScreen, K2Node_CustomEvent_UserWidget_1) == 0x000058, "Member 'WI_JPSettingsScreen_C_ExecuteUbergraph_WI_JPSettingsScreen::K2Node_CustomEvent_UserWidget_1' has a wrong offset!");
static_assert(offsetof(WI_JPSettingsScreen_C_ExecuteUbergraph_WI_JPSettingsScreen, K2Node_CustomEvent_UserWidget) == 0x000060, "Member 'WI_JPSettingsScreen_C_ExecuteUbergraph_WI_JPSettingsScreen::K2Node_CustomEvent_UserWidget' has a wrong offset!");
static_assert(offsetof(WI_JPSettingsScreen_C_ExecuteUbergraph_WI_JPSettingsScreen, K2Node_CreateDelegate_OutputDelegate_2) == 0x000068, "Member 'WI_JPSettingsScreen_C_ExecuteUbergraph_WI_JPSettingsScreen::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(WI_JPSettingsScreen_C_ExecuteUbergraph_WI_JPSettingsScreen, Temp_object_Variable_1) == 0x000078, "Member 'WI_JPSettingsScreen_C_ExecuteUbergraph_WI_JPSettingsScreen::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(WI_JPSettingsScreen_C_ExecuteUbergraph_WI_JPSettingsScreen, K2Node_EnhancedInputActionEvent_ActionValue) == 0x000080, "Member 'WI_JPSettingsScreen_C_ExecuteUbergraph_WI_JPSettingsScreen::K2Node_EnhancedInputActionEvent_ActionValue' has a wrong offset!");
static_assert(offsetof(WI_JPSettingsScreen_C_ExecuteUbergraph_WI_JPSettingsScreen, K2Node_EnhancedInputActionEvent_ElapsedTime) == 0x0000A0, "Member 'WI_JPSettingsScreen_C_ExecuteUbergraph_WI_JPSettingsScreen::K2Node_EnhancedInputActionEvent_ElapsedTime' has a wrong offset!");
static_assert(offsetof(WI_JPSettingsScreen_C_ExecuteUbergraph_WI_JPSettingsScreen, K2Node_EnhancedInputActionEvent_TriggeredTime) == 0x0000A4, "Member 'WI_JPSettingsScreen_C_ExecuteUbergraph_WI_JPSettingsScreen::K2Node_EnhancedInputActionEvent_TriggeredTime' has a wrong offset!");
static_assert(offsetof(WI_JPSettingsScreen_C_ExecuteUbergraph_WI_JPSettingsScreen, K2Node_EnhancedInputActionEvent_SourceAction) == 0x0000A8, "Member 'WI_JPSettingsScreen_C_ExecuteUbergraph_WI_JPSettingsScreen::K2Node_EnhancedInputActionEvent_SourceAction' has a wrong offset!");
static_assert(offsetof(WI_JPSettingsScreen_C_ExecuteUbergraph_WI_JPSettingsScreen, K2Node_DynamicCast_AsGame_Setting_Action_Interface_1) == 0x0000B0, "Member 'WI_JPSettingsScreen_C_ExecuteUbergraph_WI_JPSettingsScreen::K2Node_DynamicCast_AsGame_Setting_Action_Interface_1' has a wrong offset!");
static_assert(offsetof(WI_JPSettingsScreen_C_ExecuteUbergraph_WI_JPSettingsScreen, K2Node_DynamicCast_bSuccess_1) == 0x0000C0, "Member 'WI_JPSettingsScreen_C_ExecuteUbergraph_WI_JPSettingsScreen::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(WI_JPSettingsScreen_C_ExecuteUbergraph_WI_JPSettingsScreen, CallFunc_Conv_InputActionValueToBool_ReturnValue) == 0x0000C1, "Member 'WI_JPSettingsScreen_C_ExecuteUbergraph_WI_JPSettingsScreen::CallFunc_Conv_InputActionValueToBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WI_JPSettingsScreen_C_ExecuteUbergraph_WI_JPSettingsScreen, Temp_object_Variable_2) == 0x0000C8, "Member 'WI_JPSettingsScreen_C_ExecuteUbergraph_WI_JPSettingsScreen::Temp_object_Variable_2' has a wrong offset!");
static_assert(offsetof(WI_JPSettingsScreen_C_ExecuteUbergraph_WI_JPSettingsScreen, Temp_real_Variable) == 0x0000D0, "Member 'WI_JPSettingsScreen_C_ExecuteUbergraph_WI_JPSettingsScreen::Temp_real_Variable' has a wrong offset!");
static_assert(offsetof(WI_JPSettingsScreen_C_ExecuteUbergraph_WI_JPSettingsScreen, Temp_real_Variable_0) == 0x0000D8, "Member 'WI_JPSettingsScreen_C_ExecuteUbergraph_WI_JPSettingsScreen::Temp_real_Variable_0' has a wrong offset!");
static_assert(offsetof(WI_JPSettingsScreen_C_ExecuteUbergraph_WI_JPSettingsScreen, Temp_real_Variable_1) == 0x0000E0, "Member 'WI_JPSettingsScreen_C_ExecuteUbergraph_WI_JPSettingsScreen::Temp_real_Variable_1' has a wrong offset!");
static_assert(offsetof(WI_JPSettingsScreen_C_ExecuteUbergraph_WI_JPSettingsScreen, Temp_bool_Variable) == 0x0000E8, "Member 'WI_JPSettingsScreen_C_ExecuteUbergraph_WI_JPSettingsScreen::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WI_JPSettingsScreen_C_ExecuteUbergraph_WI_JPSettingsScreen, Temp_real_Variable_1_0) == 0x0000F0, "Member 'WI_JPSettingsScreen_C_ExecuteUbergraph_WI_JPSettingsScreen::Temp_real_Variable_1_0' has a wrong offset!");
static_assert(offsetof(WI_JPSettingsScreen_C_ExecuteUbergraph_WI_JPSettingsScreen, CallFunc_GetOwningPlayer_ReturnValue) == 0x0000F8, "Member 'WI_JPSettingsScreen_C_ExecuteUbergraph_WI_JPSettingsScreen::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(WI_JPSettingsScreen_C_ExecuteUbergraph_WI_JPSettingsScreen, K2Node_ComponentBoundEvent_TabId) == 0x000100, "Member 'WI_JPSettingsScreen_C_ExecuteUbergraph_WI_JPSettingsScreen::K2Node_ComponentBoundEvent_TabId' has a wrong offset!");
static_assert(offsetof(WI_JPSettingsScreen_C_ExecuteUbergraph_WI_JPSettingsScreen, CallFunc_PushContentToLayerForPlayer_ReturnValue) == 0x000108, "Member 'WI_JPSettingsScreen_C_ExecuteUbergraph_WI_JPSettingsScreen::CallFunc_PushContentToLayerForPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(WI_JPSettingsScreen_C_ExecuteUbergraph_WI_JPSettingsScreen, CallFunc_IsValid_ReturnValue) == 0x000110, "Member 'WI_JPSettingsScreen_C_ExecuteUbergraph_WI_JPSettingsScreen::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WI_JPSettingsScreen_C_ExecuteUbergraph_WI_JPSettingsScreen, K2Node_ComponentBoundEvent_Setting) == 0x000118, "Member 'WI_JPSettingsScreen_C_ExecuteUbergraph_WI_JPSettingsScreen::K2Node_ComponentBoundEvent_Setting' has a wrong offset!");
static_assert(offsetof(WI_JPSettingsScreen_C_ExecuteUbergraph_WI_JPSettingsScreen, K2Node_ComponentBoundEvent_Action) == 0x000120, "Member 'WI_JPSettingsScreen_C_ExecuteUbergraph_WI_JPSettingsScreen::K2Node_ComponentBoundEvent_Action' has a wrong offset!");
static_assert(offsetof(WI_JPSettingsScreen_C_ExecuteUbergraph_WI_JPSettingsScreen, K2Node_CreateDelegate_OutputDelegate_3) == 0x000128, "Member 'WI_JPSettingsScreen_C_ExecuteUbergraph_WI_JPSettingsScreen::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(WI_JPSettingsScreen_C_ExecuteUbergraph_WI_JPSettingsScreen, CallFunc_ExecuteActionForSetting_ReturnValue) == 0x000138, "Member 'WI_JPSettingsScreen_C_ExecuteUbergraph_WI_JPSettingsScreen::CallFunc_ExecuteActionForSetting_ReturnValue' has a wrong offset!");
static_assert(offsetof(WI_JPSettingsScreen_C_ExecuteUbergraph_WI_JPSettingsScreen, CallFunc_ExecuteActionForSetting_ReturnValue_1) == 0x000139, "Member 'WI_JPSettingsScreen_C_ExecuteUbergraph_WI_JPSettingsScreen::CallFunc_ExecuteActionForSetting_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WI_JPSettingsScreen_C_ExecuteUbergraph_WI_JPSettingsScreen, GameplayTagsK2Node_SwitchGameplayTag_CmpSuccess) == 0x00013A, "Member 'WI_JPSettingsScreen_C_ExecuteUbergraph_WI_JPSettingsScreen::GameplayTagsK2Node_SwitchGameplayTag_CmpSuccess' has a wrong offset!");
static_assert(offsetof(WI_JPSettingsScreen_C_ExecuteUbergraph_WI_JPSettingsScreen, CallFunc_GetOwningPlayer_ReturnValue_1) == 0x000140, "Member 'WI_JPSettingsScreen_C_ExecuteUbergraph_WI_JPSettingsScreen::CallFunc_GetOwningPlayer_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WI_JPSettingsScreen_C_ExecuteUbergraph_WI_JPSettingsScreen, K2Node_DynamicCast_AsW_Settings_Panel) == 0x000148, "Member 'WI_JPSettingsScreen_C_ExecuteUbergraph_WI_JPSettingsScreen::K2Node_DynamicCast_AsW_Settings_Panel' has a wrong offset!");
static_assert(offsetof(WI_JPSettingsScreen_C_ExecuteUbergraph_WI_JPSettingsScreen, K2Node_DynamicCast_bSuccess_2) == 0x000150, "Member 'WI_JPSettingsScreen_C_ExecuteUbergraph_WI_JPSettingsScreen::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(WI_JPSettingsScreen_C_ExecuteUbergraph_WI_JPSettingsScreen, CallFunc_PushContentToLayerForPlayer_ReturnValue_1) == 0x000158, "Member 'WI_JPSettingsScreen_C_ExecuteUbergraph_WI_JPSettingsScreen::CallFunc_PushContentToLayerForPlayer_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WI_JPSettingsScreen_C_ExecuteUbergraph_WI_JPSettingsScreen, CallFunc_IsValid_ReturnValue_1) == 0x000160, "Member 'WI_JPSettingsScreen_C_ExecuteUbergraph_WI_JPSettingsScreen::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WI_JPSettingsScreen_C_ExecuteUbergraph_WI_JPSettingsScreen, K2Node_Event_IsDesignTime) == 0x000161, "Member 'WI_JPSettingsScreen_C_ExecuteUbergraph_WI_JPSettingsScreen::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(WI_JPSettingsScreen_C_ExecuteUbergraph_WI_JPSettingsScreen, K2Node_DynamicCast_AsWI_JPHorizontal_Tab_List) == 0x000168, "Member 'WI_JPSettingsScreen_C_ExecuteUbergraph_WI_JPSettingsScreen::K2Node_DynamicCast_AsWI_JPHorizontal_Tab_List' has a wrong offset!");
static_assert(offsetof(WI_JPSettingsScreen_C_ExecuteUbergraph_WI_JPSettingsScreen, K2Node_DynamicCast_bSuccess_3) == 0x000170, "Member 'WI_JPSettingsScreen_C_ExecuteUbergraph_WI_JPSettingsScreen::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");

// Function WI_JPSettingsScreen.WI_JPSettingsScreen_C.InpActEvt_IA_CloseGameMenu_K2Node_EnhancedInputActionEvent_0
// 0x0030 (0x0030 - 0x0000)
struct WI_JPSettingsScreen_C_InpActEvt_IA_CloseGameMenu_K2Node_EnhancedInputActionEvent_0 final
{
public:
	struct FInputActionValue                      ActionValue;                                       // 0x0000(0x0020)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	float                                         ElapsedTime;                                       // 0x0020(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TriggeredTime;                                     // 0x0024(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	const class UInputAction*                     SourceAction;                                      // 0x0028(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WI_JPSettingsScreen_C_InpActEvt_IA_CloseGameMenu_K2Node_EnhancedInputActionEvent_0) == 0x000008, "Wrong alignment on WI_JPSettingsScreen_C_InpActEvt_IA_CloseGameMenu_K2Node_EnhancedInputActionEvent_0");
static_assert(sizeof(WI_JPSettingsScreen_C_InpActEvt_IA_CloseGameMenu_K2Node_EnhancedInputActionEvent_0) == 0x000030, "Wrong size on WI_JPSettingsScreen_C_InpActEvt_IA_CloseGameMenu_K2Node_EnhancedInputActionEvent_0");
static_assert(offsetof(WI_JPSettingsScreen_C_InpActEvt_IA_CloseGameMenu_K2Node_EnhancedInputActionEvent_0, ActionValue) == 0x000000, "Member 'WI_JPSettingsScreen_C_InpActEvt_IA_CloseGameMenu_K2Node_EnhancedInputActionEvent_0::ActionValue' has a wrong offset!");
static_assert(offsetof(WI_JPSettingsScreen_C_InpActEvt_IA_CloseGameMenu_K2Node_EnhancedInputActionEvent_0, ElapsedTime) == 0x000020, "Member 'WI_JPSettingsScreen_C_InpActEvt_IA_CloseGameMenu_K2Node_EnhancedInputActionEvent_0::ElapsedTime' has a wrong offset!");
static_assert(offsetof(WI_JPSettingsScreen_C_InpActEvt_IA_CloseGameMenu_K2Node_EnhancedInputActionEvent_0, TriggeredTime) == 0x000024, "Member 'WI_JPSettingsScreen_C_InpActEvt_IA_CloseGameMenu_K2Node_EnhancedInputActionEvent_0::TriggeredTime' has a wrong offset!");
static_assert(offsetof(WI_JPSettingsScreen_C_InpActEvt_IA_CloseGameMenu_K2Node_EnhancedInputActionEvent_0, SourceAction) == 0x000028, "Member 'WI_JPSettingsScreen_C_InpActEvt_IA_CloseGameMenu_K2Node_EnhancedInputActionEvent_0::SourceAction' has a wrong offset!");

// Function WI_JPSettingsScreen.WI_JPSettingsScreen_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct WI_JPSettingsScreen_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WI_JPSettingsScreen_C_PreConstruct) == 0x000001, "Wrong alignment on WI_JPSettingsScreen_C_PreConstruct");
static_assert(sizeof(WI_JPSettingsScreen_C_PreConstruct) == 0x000001, "Wrong size on WI_JPSettingsScreen_C_PreConstruct");
static_assert(offsetof(WI_JPSettingsScreen_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'WI_JPSettingsScreen_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function WI_JPSettingsScreen.WI_JPSettingsScreen_C.RegisterTopLevelTab
// 0x0150 (0x0150 - 0x0000)
struct WI_JPSettingsScreen_C_RegisterTopLevelTab final
{
public:
	class FName                                   SettingDevName;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetSettingCollection_HasAnySettings;      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameSettingCollection*                 CallFunc_GetSettingCollection_ReturnValue;         // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_GetDisplayName_ReturnValue;               // 0x0018(0x0010)()
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLyraTabDescriptor                     K2Node_MakeStruct_LyraTabDescriptor;               // 0x0030(0x0110)(ContainsInstancedReference)
	bool                                          CallFunc_RegisterDynamicTab_ReturnValue;           // 0x0140(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WI_JPSettingsScreen_C_RegisterTopLevelTab) == 0x000010, "Wrong alignment on WI_JPSettingsScreen_C_RegisterTopLevelTab");
static_assert(sizeof(WI_JPSettingsScreen_C_RegisterTopLevelTab) == 0x000150, "Wrong size on WI_JPSettingsScreen_C_RegisterTopLevelTab");
static_assert(offsetof(WI_JPSettingsScreen_C_RegisterTopLevelTab, SettingDevName) == 0x000000, "Member 'WI_JPSettingsScreen_C_RegisterTopLevelTab::SettingDevName' has a wrong offset!");
static_assert(offsetof(WI_JPSettingsScreen_C_RegisterTopLevelTab, CallFunc_GetSettingCollection_HasAnySettings) == 0x000008, "Member 'WI_JPSettingsScreen_C_RegisterTopLevelTab::CallFunc_GetSettingCollection_HasAnySettings' has a wrong offset!");
static_assert(offsetof(WI_JPSettingsScreen_C_RegisterTopLevelTab, CallFunc_GetSettingCollection_ReturnValue) == 0x000010, "Member 'WI_JPSettingsScreen_C_RegisterTopLevelTab::CallFunc_GetSettingCollection_ReturnValue' has a wrong offset!");
static_assert(offsetof(WI_JPSettingsScreen_C_RegisterTopLevelTab, CallFunc_GetDisplayName_ReturnValue) == 0x000018, "Member 'WI_JPSettingsScreen_C_RegisterTopLevelTab::CallFunc_GetDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(WI_JPSettingsScreen_C_RegisterTopLevelTab, CallFunc_Not_PreBool_ReturnValue) == 0x000028, "Member 'WI_JPSettingsScreen_C_RegisterTopLevelTab::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WI_JPSettingsScreen_C_RegisterTopLevelTab, K2Node_MakeStruct_LyraTabDescriptor) == 0x000030, "Member 'WI_JPSettingsScreen_C_RegisterTopLevelTab::K2Node_MakeStruct_LyraTabDescriptor' has a wrong offset!");
static_assert(offsetof(WI_JPSettingsScreen_C_RegisterTopLevelTab, CallFunc_RegisterDynamicTab_ReturnValue) == 0x000140, "Member 'WI_JPSettingsScreen_C_RegisterTopLevelTab::CallFunc_RegisterDynamicTab_ReturnValue' has a wrong offset!");

// Function WI_JPSettingsScreen.WI_JPSettingsScreen_C.GetTabDescriptors
// 0x0020 (0x0020 - 0x0000)
struct WI_JPSettingsScreen_C_GetTabDescriptors final
{
public:
	TArray<struct FLyraTabDescriptor>             ExistingTabDescriptors;                            // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
	TArray<struct FLyraTabDescriptor>             ReturnValue;                                       // 0x0010(0x0010)(Parm, OutParm, ReturnParm, ContainsInstancedReference)
};
static_assert(alignof(WI_JPSettingsScreen_C_GetTabDescriptors) == 0x000008, "Wrong alignment on WI_JPSettingsScreen_C_GetTabDescriptors");
static_assert(sizeof(WI_JPSettingsScreen_C_GetTabDescriptors) == 0x000020, "Wrong size on WI_JPSettingsScreen_C_GetTabDescriptors");
static_assert(offsetof(WI_JPSettingsScreen_C_GetTabDescriptors, ExistingTabDescriptors) == 0x000000, "Member 'WI_JPSettingsScreen_C_GetTabDescriptors::ExistingTabDescriptors' has a wrong offset!");
static_assert(offsetof(WI_JPSettingsScreen_C_GetTabDescriptors, ReturnValue) == 0x000010, "Member 'WI_JPSettingsScreen_C_GetTabDescriptors::ReturnValue' has a wrong offset!");

// Function WI_JPSettingsScreen.WI_JPSettingsScreen_C.IsTabDisabled
// 0x000C (0x000C - 0x0000)
struct WI_JPSettingsScreen_C_IsTabDisabled final
{
public:
	class FName                                   TabName;                                           // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WI_JPSettingsScreen_C_IsTabDisabled) == 0x000004, "Wrong alignment on WI_JPSettingsScreen_C_IsTabDisabled");
static_assert(sizeof(WI_JPSettingsScreen_C_IsTabDisabled) == 0x00000C, "Wrong size on WI_JPSettingsScreen_C_IsTabDisabled");
static_assert(offsetof(WI_JPSettingsScreen_C_IsTabDisabled, TabName) == 0x000000, "Member 'WI_JPSettingsScreen_C_IsTabDisabled::TabName' has a wrong offset!");
static_assert(offsetof(WI_JPSettingsScreen_C_IsTabDisabled, ReturnValue) == 0x000008, "Member 'WI_JPSettingsScreen_C_IsTabDisabled::ReturnValue' has a wrong offset!");

}

