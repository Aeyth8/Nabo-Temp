#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Window_Benchmark

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "E_ImpactEffect_structs.hpp"
#include "JP_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BP_Window_Benchmark.BP_Window_Benchmark_C.DestroyGlassHits
// 0x0020 (0x0020 - 0x0000)
struct BP_Window_Benchmark_C_DestroyGlassHits final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UStaticMeshComponent*                   CallFunc_Array_Get_Item;                           // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Window_Benchmark_C_DestroyGlassHits) == 0x000008, "Wrong alignment on BP_Window_Benchmark_C_DestroyGlassHits");
static_assert(sizeof(BP_Window_Benchmark_C_DestroyGlassHits) == 0x000020, "Wrong size on BP_Window_Benchmark_C_DestroyGlassHits");
static_assert(offsetof(BP_Window_Benchmark_C_DestroyGlassHits, Temp_int_Array_Index_Variable) == 0x000000, "Member 'BP_Window_Benchmark_C_DestroyGlassHits::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_Window_Benchmark_C_DestroyGlassHits, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'BP_Window_Benchmark_C_DestroyGlassHits::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_Window_Benchmark_C_DestroyGlassHits, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'BP_Window_Benchmark_C_DestroyGlassHits::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Window_Benchmark_C_DestroyGlassHits, CallFunc_Array_Get_Item) == 0x000010, "Member 'BP_Window_Benchmark_C_DestroyGlassHits::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_Window_Benchmark_C_DestroyGlassHits, CallFunc_Array_Length_ReturnValue) == 0x000018, "Member 'BP_Window_Benchmark_C_DestroyGlassHits::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Window_Benchmark_C_DestroyGlassHits, CallFunc_Less_IntInt_ReturnValue) == 0x00001C, "Member 'BP_Window_Benchmark_C_DestroyGlassHits::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function BP_Window_Benchmark.BP_Window_Benchmark_C.DestroyShatteredGeometry
// 0x0020 (0x0020 - 0x0000)
struct BP_Window_Benchmark_C_DestroyShatteredGeometry final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UGeometryCollectionComponent*           CallFunc_Array_Get_Item;                           // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x001D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Window_Benchmark_C_DestroyShatteredGeometry) == 0x000008, "Wrong alignment on BP_Window_Benchmark_C_DestroyShatteredGeometry");
static_assert(sizeof(BP_Window_Benchmark_C_DestroyShatteredGeometry) == 0x000020, "Wrong size on BP_Window_Benchmark_C_DestroyShatteredGeometry");
static_assert(offsetof(BP_Window_Benchmark_C_DestroyShatteredGeometry, Temp_int_Array_Index_Variable) == 0x000000, "Member 'BP_Window_Benchmark_C_DestroyShatteredGeometry::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_Window_Benchmark_C_DestroyShatteredGeometry, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'BP_Window_Benchmark_C_DestroyShatteredGeometry::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_Window_Benchmark_C_DestroyShatteredGeometry, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'BP_Window_Benchmark_C_DestroyShatteredGeometry::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Window_Benchmark_C_DestroyShatteredGeometry, CallFunc_Array_Get_Item) == 0x000010, "Member 'BP_Window_Benchmark_C_DestroyShatteredGeometry::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_Window_Benchmark_C_DestroyShatteredGeometry, CallFunc_Array_Length_ReturnValue) == 0x000018, "Member 'BP_Window_Benchmark_C_DestroyShatteredGeometry::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Window_Benchmark_C_DestroyShatteredGeometry, CallFunc_Less_IntInt_ReturnValue) == 0x00001C, "Member 'BP_Window_Benchmark_C_DestroyShatteredGeometry::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Window_Benchmark_C_DestroyShatteredGeometry, CallFunc_IsValid_ReturnValue) == 0x00001D, "Member 'BP_Window_Benchmark_C_DestroyShatteredGeometry::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_Window_Benchmark.BP_Window_Benchmark_C.ExecuteUbergraph_BP_Window_Benchmark
// 0x05C0 (0x05C0 - 0x0000)
struct BP_Window_Benchmark_C_ExecuteUbergraph_BP_Window_Benchmark final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UEconomySubsystem*                      CallFunc_GetWorldSubsystem_ReturnValue;            // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UEconomySubsystem*                      CallFunc_GetWorldSubsystem_ReturnValue_1;          // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue_1;               // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable;                       // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable;                 // 0x002B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable_1;                     // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable_1;               // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x3];                                       // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x3];                                       // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable;                                // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue;                         // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0058(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetRelativeRotation_SweepHitResult;    // 0x0078(0x00F8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue_1;                // 0x0170(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_K2_SetRelativeRotation_SweepHitResult_1;  // 0x0188(0x00F8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	double                                        Temp_real_Variable_1;                              // 0x0280(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_288[0x8];                                      // 0x0288(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetRelativeTransform_ReturnValue;         // 0x0290(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_GetRelativeTransform_ReturnValue_1;       // 0x02F0(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGeometryCollectionComponent*           CallFunc_AddComponent_ReturnValue;                 // 0x0350(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UGeometryCollectionComponent*           CallFunc_AddComponent_ReturnValue_1;               // 0x0358(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0360(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x0364(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_368[0x8];                                      // 0x0368(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetRelativeTransform_ReturnValue_2;       // 0x0370(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_GetRelativeTransform_ReturnValue_3;       // 0x03D0(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGeometryCollectionComponent*           CallFunc_AddComponent_ReturnValue_2;               // 0x0430(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UGeometryCollectionComponent*           CallFunc_AddComponent_ReturnValue_3;               // 0x0438(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_2;                  // 0x0440(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_3;                  // 0x0444(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0448(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_449[0x3];                                      // 0x0449(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x044C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_Select_Default;                             // 0x0450(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0458(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_459[0x7];                                      // 0x0459(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UGeometryCollectionComponent*           CallFunc_Array_Get_Item;                           // 0x0460(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0468(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x046C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_46D[0x3];                                      // 0x046D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x0470(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_474[0x4];                                      // 0x0474(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UGeometryCollectionComponent*           CallFunc_Array_Get_Item_1;                         // 0x0478(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsBeingDestroyed_ReturnValue;             // 0x0480(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0481(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_482[0x6];                                      // 0x0482(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UGeometryCollectionComponent*           CallFunc_Array_Get_Item_2;                         // 0x0488(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x0490(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x0494(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0495(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_496[0x2];                                      // 0x0496(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                K2Node_Event_Location;                             // 0x0498(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Event_HitImpulse;                           // 0x04B0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_ImpactEffect                                K2Node_Event_ImpactEffect;                         // 0x04C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C9[0x7];                                      // 0x04C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_Event_SabotagingActor;                      // 0x04D0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue_2;               // 0x04D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4D9[0x7];                                      // 0x04D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_Event_InteractingActor;                     // 0x04E0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_Event_InteractionComponent;                 // 0x04E8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class ABP_ResidentCharacter_C*                K2Node_DynamicCast_AsBP_Resident_Character;        // 0x04F0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x04F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsInteractingActorATeamMember_Return;     // 0x04F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4FA[0x6];                                      // 0x04FA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            CallFunc_GetController_ReturnValue;                // 0x0500(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0508(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_509[0x7];                                      // 0x0509(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      K2Node_DynamicCast_AsPlayer_Controller;            // 0x0510(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0518(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_519[0x7];                                      // 0x0519(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPlayerMessage                         K2Node_MakeStruct_PlayerMessage;                   // 0x0520(0x0058)()
	float                                         CallFunc_GetDotProductTo_ReturnValue;              // 0x0578(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x057C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_57D[0x3];                                      // 0x057D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0580(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0598(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_WithdrawEconomyFromTeamAtPoint_ReturnValue; // 0x0599(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59A[0x6];                                      // 0x059A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Lerp_Alpha_ImplicitCast;                  // 0x05A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeRotator_Yaw_ImplicitCast;             // 0x05A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeRotator_Yaw_ImplicitCast_1;           // 0x05AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Greater_DoubleDouble_A_ImplicitCast;      // 0x05B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Window_Benchmark_C_ExecuteUbergraph_BP_Window_Benchmark) == 0x000010, "Wrong alignment on BP_Window_Benchmark_C_ExecuteUbergraph_BP_Window_Benchmark");
static_assert(sizeof(BP_Window_Benchmark_C_ExecuteUbergraph_BP_Window_Benchmark) == 0x0005C0, "Wrong size on BP_Window_Benchmark_C_ExecuteUbergraph_BP_Window_Benchmark");
static_assert(offsetof(BP_Window_Benchmark_C_ExecuteUbergraph_BP_Window_Benchmark, EntryPoint) == 0x000000, "Member 'BP_Window_Benchmark_C_ExecuteUbergraph_BP_Window_Benchmark::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_Window_Benchmark_C_ExecuteUbergraph_BP_Window_Benchmark, CallFunc_GetWorldSubsystem_ReturnValue) == 0x000008, "Member 'BP_Window_Benchmark_C_ExecuteUbergraph_BP_Window_Benchmark::CallFunc_GetWorldSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Window_Benchmark_C_ExecuteUbergraph_BP_Window_Benchmark, CallFunc_GetWorldSubsystem_ReturnValue_1) == 0x000010, "Member 'BP_Window_Benchmark_C_ExecuteUbergraph_BP_Window_Benchmark::CallFunc_GetWorldSubsystem_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Window_Benchmark_C_ExecuteUbergraph_BP_Window_Benchmark, Temp_int_Array_Index_Variable) == 0x000018, "Member 'BP_Window_Benchmark_C_ExecuteUbergraph_BP_Window_Benchmark::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_Window_Benchmark_C_ExecuteUbergraph_BP_Window_Benchmark, Temp_int_Loop_Counter_Variable) == 0x00001C, "Member 'BP_Window_Benchmark_C_ExecuteUbergraph_BP_Window_Benchmark::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_Window_Benchmark_C_ExecuteUbergraph_BP_Window_Benchmark, CallFunc_Add_IntInt_ReturnValue) == 0x000020, "Member 'BP_Window_Benchmark_C_ExecuteUbergraph_BP_Window_Benchmark::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Window_Benchmark_C_ExecuteUbergraph_BP_Window_Benchmark, Temp_int_Array_Index_Variable_1) == 0x000024, "Member 'BP_Window_Benchmark_C_ExecuteUbergraph_BP_Window_Benchmark::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_Window_Benchmark_C_ExecuteUbergraph_BP_Window_Benchmark, CallFunc_HasAuthority_ReturnValue) == 0x000028, "Member 'BP_Window_Benchmark_C_ExecuteUbergraph_BP_Window_Benchmark::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Window_Benchmark_C_ExecuteUbergraph_BP_Window_Benchmark, CallFunc_HasAuthority_ReturnValue_1) == 0x000029, "Member 'BP_Window_Benchmark_C_ExecuteUbergraph_BP_Window_Benchmark::CallFunc_HasAuthority_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Window_Benchmark_C_ExecuteUbergraph_BP_Window_Benchmark, Temp_bool_IsClosed_Variable) == 0x00002A, "Member 'BP_Window_Benchmark_C_ExecuteUbergraph_BP_Window_Benchmark::Temp_bool_IsClosed_Variable' has a wrong offset!");
static_assert(offsetof(BP_Window_Benchmark_C_ExecuteUbergraph_BP_Window_Benchmark, Temp_bool_Has_Been_Initd_Variable) == 0x00002B, "Member 'BP_Window_Benchmark_C_ExecuteUbergraph_BP_Window_Benchmark::Temp_bool_Has_Been_Initd_Variable' has a wrong offset!");
static_assert(offsetof(BP_Window_Benchmark_C_ExecuteUbergraph_BP_Window_Benchmark, Temp_int_Loop_Counter_Variable_1) == 0x00002C, "Member 'BP_Window_Benchmark_C_ExecuteUbergraph_BP_Window_Benchmark::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_Window_Benchmark_C_ExecuteUbergraph_BP_Window_Benchmark, Temp_bool_IsClosed_Variable_1) == 0x000030, "Member 'BP_Window_Benchmark_C_ExecuteUbergraph_BP_Window_Benchmark::Temp_bool_IsClosed_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_Window_Benchmark_C_ExecuteUbergraph_BP_Window_Benchmark, CallFunc_Add_IntInt_ReturnValue_1) == 0x000034, "Member 'BP_Window_Benchmark_C_ExecuteUbergraph_BP_Window_Benchmark::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Window_Benchmark_C_ExecuteUbergraph_BP_Window_Benchmark, Temp_bool_Has_Been_Initd_Variable_1) == 0x000038, "Member 'BP_Window_Benchmark_C_ExecuteUbergraph_BP_Window_Benchmark::Temp_bool_Has_Been_Initd_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_Window_Benchmark_C_ExecuteUbergraph_BP_Window_Benchmark, Temp_int_Loop_Counter_Variable_2) == 0x00003C, "Member 'BP_Window_Benchmark_C_ExecuteUbergraph_BP_Window_Benchmark::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_Window_Benchmark_C_ExecuteUbergraph_BP_Window_Benchmark, CallFunc_Not_PreBool_ReturnValue) == 0x000040, "Member 'BP_Window_Benchmark_C_ExecuteUbergraph_BP_Window_Benchmark::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Window_Benchmark_C_ExecuteUbergraph_BP_Window_Benchmark, CallFunc_Add_IntInt_ReturnValue_2) == 0x000044, "Member 'BP_Window_Benchmark_C_ExecuteUbergraph_BP_Window_Benchmark::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Window_Benchmark_C_ExecuteUbergraph_BP_Window_Benchmark, Temp_real_Variable) == 0x000048, "Member 'BP_Window_Benchmark_C_ExecuteUbergraph_BP_Window_Benchmark::Temp_real_Variable' has a wrong offset!");
static_assert(offsetof(BP_Window_Benchmark_C_ExecuteUbergraph_BP_Window_Benchmark, CallFunc_Lerp_ReturnValue) == 0x000050, "Member 'BP_Window_Benchmark_C_ExecuteUbergraph_BP_Window_Benchmark::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Window_Benchmark_C_ExecuteUbergraph_BP_Window_Benchmark, CallFunc_MakeRotator_ReturnValue) == 0x000058, "Member 'BP_Window_Benchmark_C_ExecuteUbergraph_BP_Window_Benchmark::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Window_Benchmark_C_ExecuteUbergraph_BP_Window_Benchmark, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000070, "Member 'BP_Window_Benchmark_C_ExecuteUbergraph_BP_Window_Benchmark::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Window_Benchmark_C_ExecuteUbergraph_BP_Window_Benchmark, CallFunc_K2_SetRelativeRotation_SweepHitResult) == 0x000078, "Member 'BP_Window_Benchmark_C_ExecuteUbergraph_BP_Window_Benchmark::CallFunc_K2_SetRelativeRotation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_Window_Benchmark_C_ExecuteUbergraph_BP_Window_Benchmark, CallFunc_MakeRotator_ReturnValue_1) == 0x000170, "Member 'BP_Window_Benchmark_C_ExecuteUbergraph_BP_Window_Benchmark::CallFunc_MakeRotator_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Window_Benchmark_C_ExecuteUbergraph_BP_Window_Benchmark, CallFunc_K2_SetRelativeRotation_SweepHitResult_1) == 0x000188, "Member 'BP_Window_Benchmark_C_ExecuteUbergraph_BP_Window_Benchmark::CallFunc_K2_SetRelativeRotation_SweepHitResult_1' has a wrong offset!");
static_assert(offsetof(BP_Window_Benchmark_C_ExecuteUbergraph_BP_Window_Benchmark, Temp_real_Variable_1) == 0x000280, "Member 'BP_Window_Benchmark_C_ExecuteUbergraph_BP_Window_Benchmark::Temp_real_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_Window_Benchmark_C_ExecuteUbergraph_BP_Window_Benchmark, CallFunc_GetRelativeTransform_ReturnValue) == 0x000290, "Member 'BP_Window_Benchmark_C_ExecuteUbergraph_BP_Window_Benchmark::CallFunc_GetRelativeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Window_Benchmark_C_ExecuteUbergraph_BP_Window_Benchmark, CallFunc_GetRelativeTransform_ReturnValue_1) == 0x0002F0, "Member 'BP_Window_Benchmark_C_ExecuteUbergraph_BP_Window_Benchmark::CallFunc_GetRelativeTransform_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Window_Benchmark_C_ExecuteUbergraph_BP_Window_Benchmark, CallFunc_AddComponent_ReturnValue) == 0x000350, "Member 'BP_Window_Benchmark_C_ExecuteUbergraph_BP_Window_Benchmark::CallFunc_AddComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Window_Benchmark_C_ExecuteUbergraph_BP_Window_Benchmark, CallFunc_AddComponent_ReturnValue_1) == 0x000358, "Member 'BP_Window_Benchmark_C_ExecuteUbergraph_BP_Window_Benchmark::CallFunc_AddComponent_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Window_Benchmark_C_ExecuteUbergraph_BP_Window_Benchmark, CallFunc_Array_Add_ReturnValue) == 0x000360, "Member 'BP_Window_Benchmark_C_ExecuteUbergraph_BP_Window_Benchmark::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Window_Benchmark_C_ExecuteUbergraph_BP_Window_Benchmark, CallFunc_Array_Add_ReturnValue_1) == 0x000364, "Member 'BP_Window_Benchmark_C_ExecuteUbergraph_BP_Window_Benchmark::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Window_Benchmark_C_ExecuteUbergraph_BP_Window_Benchmark, CallFunc_GetRelativeTransform_ReturnValue_2) == 0x000370, "Member 'BP_Window_Benchmark_C_ExecuteUbergraph_BP_Window_Benchmark::CallFunc_GetRelativeTransform_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Window_Benchmark_C_ExecuteUbergraph_BP_Window_Benchmark, CallFunc_GetRelativeTransform_ReturnValue_3) == 0x0003D0, "Member 'BP_Window_Benchmark_C_ExecuteUbergraph_BP_Window_Benchmark::CallFunc_GetRelativeTransform_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Window_Benchmark_C_ExecuteUbergraph_BP_Window_Benchmark, CallFunc_AddComponent_ReturnValue_2) == 0x000430, "Member 'BP_Window_Benchmark_C_ExecuteUbergraph_BP_Window_Benchmark::CallFunc_AddComponent_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Window_Benchmark_C_ExecuteUbergraph_BP_Window_Benchmark, CallFunc_AddComponent_ReturnValue_3) == 0x000438, "Member 'BP_Window_Benchmark_C_ExecuteUbergraph_BP_Window_Benchmark::CallFunc_AddComponent_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Window_Benchmark_C_ExecuteUbergraph_BP_Window_Benchmark, CallFunc_Array_Add_ReturnValue_2) == 0x000440, "Member 'BP_Window_Benchmark_C_ExecuteUbergraph_BP_Window_Benchmark::CallFunc_Array_Add_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Window_Benchmark_C_ExecuteUbergraph_BP_Window_Benchmark, CallFunc_Array_Add_ReturnValue_3) == 0x000444, "Member 'BP_Window_Benchmark_C_ExecuteUbergraph_BP_Window_Benchmark::CallFunc_Array_Add_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Window_Benchmark_C_ExecuteUbergraph_BP_Window_Benchmark, Temp_bool_Variable) == 0x000448, "Member 'BP_Window_Benchmark_C_ExecuteUbergraph_BP_Window_Benchmark::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_Window_Benchmark_C_ExecuteUbergraph_BP_Window_Benchmark, CallFunc_Array_Length_ReturnValue) == 0x00044C, "Member 'BP_Window_Benchmark_C_ExecuteUbergraph_BP_Window_Benchmark::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Window_Benchmark_C_ExecuteUbergraph_BP_Window_Benchmark, K2Node_Select_Default) == 0x000450, "Member 'BP_Window_Benchmark_C_ExecuteUbergraph_BP_Window_Benchmark::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_Window_Benchmark_C_ExecuteUbergraph_BP_Window_Benchmark, CallFunc_Less_IntInt_ReturnValue) == 0x000458, "Member 'BP_Window_Benchmark_C_ExecuteUbergraph_BP_Window_Benchmark::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Window_Benchmark_C_ExecuteUbergraph_BP_Window_Benchmark, CallFunc_Array_Get_Item) == 0x000460, "Member 'BP_Window_Benchmark_C_ExecuteUbergraph_BP_Window_Benchmark::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_Window_Benchmark_C_ExecuteUbergraph_BP_Window_Benchmark, CallFunc_Array_Length_ReturnValue_1) == 0x000468, "Member 'BP_Window_Benchmark_C_ExecuteUbergraph_BP_Window_Benchmark::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Window_Benchmark_C_ExecuteUbergraph_BP_Window_Benchmark, CallFunc_Less_IntInt_ReturnValue_1) == 0x00046C, "Member 'BP_Window_Benchmark_C_ExecuteUbergraph_BP_Window_Benchmark::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Window_Benchmark_C_ExecuteUbergraph_BP_Window_Benchmark, Temp_int_Array_Index_Variable_2) == 0x000470, "Member 'BP_Window_Benchmark_C_ExecuteUbergraph_BP_Window_Benchmark::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_Window_Benchmark_C_ExecuteUbergraph_BP_Window_Benchmark, CallFunc_Array_Get_Item_1) == 0x000478, "Member 'BP_Window_Benchmark_C_ExecuteUbergraph_BP_Window_Benchmark::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_Window_Benchmark_C_ExecuteUbergraph_BP_Window_Benchmark, CallFunc_IsBeingDestroyed_ReturnValue) == 0x000480, "Member 'BP_Window_Benchmark_C_ExecuteUbergraph_BP_Window_Benchmark::CallFunc_IsBeingDestroyed_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Window_Benchmark_C_ExecuteUbergraph_BP_Window_Benchmark, CallFunc_IsValid_ReturnValue) == 0x000481, "Member 'BP_Window_Benchmark_C_ExecuteUbergraph_BP_Window_Benchmark::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Window_Benchmark_C_ExecuteUbergraph_BP_Window_Benchmark, CallFunc_Array_Get_Item_2) == 0x000488, "Member 'BP_Window_Benchmark_C_ExecuteUbergraph_BP_Window_Benchmark::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(BP_Window_Benchmark_C_ExecuteUbergraph_BP_Window_Benchmark, CallFunc_Array_Length_ReturnValue_2) == 0x000490, "Member 'BP_Window_Benchmark_C_ExecuteUbergraph_BP_Window_Benchmark::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Window_Benchmark_C_ExecuteUbergraph_BP_Window_Benchmark, CallFunc_Less_IntInt_ReturnValue_2) == 0x000494, "Member 'BP_Window_Benchmark_C_ExecuteUbergraph_BP_Window_Benchmark::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Window_Benchmark_C_ExecuteUbergraph_BP_Window_Benchmark, CallFunc_IsValid_ReturnValue_1) == 0x000495, "Member 'BP_Window_Benchmark_C_ExecuteUbergraph_BP_Window_Benchmark::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Window_Benchmark_C_ExecuteUbergraph_BP_Window_Benchmark, K2Node_Event_Location) == 0x000498, "Member 'BP_Window_Benchmark_C_ExecuteUbergraph_BP_Window_Benchmark::K2Node_Event_Location' has a wrong offset!");
static_assert(offsetof(BP_Window_Benchmark_C_ExecuteUbergraph_BP_Window_Benchmark, K2Node_Event_HitImpulse) == 0x0004B0, "Member 'BP_Window_Benchmark_C_ExecuteUbergraph_BP_Window_Benchmark::K2Node_Event_HitImpulse' has a wrong offset!");
static_assert(offsetof(BP_Window_Benchmark_C_ExecuteUbergraph_BP_Window_Benchmark, K2Node_Event_ImpactEffect) == 0x0004C8, "Member 'BP_Window_Benchmark_C_ExecuteUbergraph_BP_Window_Benchmark::K2Node_Event_ImpactEffect' has a wrong offset!");
static_assert(offsetof(BP_Window_Benchmark_C_ExecuteUbergraph_BP_Window_Benchmark, K2Node_Event_SabotagingActor) == 0x0004D0, "Member 'BP_Window_Benchmark_C_ExecuteUbergraph_BP_Window_Benchmark::K2Node_Event_SabotagingActor' has a wrong offset!");
static_assert(offsetof(BP_Window_Benchmark_C_ExecuteUbergraph_BP_Window_Benchmark, CallFunc_HasAuthority_ReturnValue_2) == 0x0004D8, "Member 'BP_Window_Benchmark_C_ExecuteUbergraph_BP_Window_Benchmark::CallFunc_HasAuthority_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Window_Benchmark_C_ExecuteUbergraph_BP_Window_Benchmark, K2Node_Event_InteractingActor) == 0x0004E0, "Member 'BP_Window_Benchmark_C_ExecuteUbergraph_BP_Window_Benchmark::K2Node_Event_InteractingActor' has a wrong offset!");
static_assert(offsetof(BP_Window_Benchmark_C_ExecuteUbergraph_BP_Window_Benchmark, K2Node_Event_InteractionComponent) == 0x0004E8, "Member 'BP_Window_Benchmark_C_ExecuteUbergraph_BP_Window_Benchmark::K2Node_Event_InteractionComponent' has a wrong offset!");
static_assert(offsetof(BP_Window_Benchmark_C_ExecuteUbergraph_BP_Window_Benchmark, K2Node_DynamicCast_AsBP_Resident_Character) == 0x0004F0, "Member 'BP_Window_Benchmark_C_ExecuteUbergraph_BP_Window_Benchmark::K2Node_DynamicCast_AsBP_Resident_Character' has a wrong offset!");
static_assert(offsetof(BP_Window_Benchmark_C_ExecuteUbergraph_BP_Window_Benchmark, K2Node_DynamicCast_bSuccess) == 0x0004F8, "Member 'BP_Window_Benchmark_C_ExecuteUbergraph_BP_Window_Benchmark::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_Window_Benchmark_C_ExecuteUbergraph_BP_Window_Benchmark, CallFunc_IsInteractingActorATeamMember_Return) == 0x0004F9, "Member 'BP_Window_Benchmark_C_ExecuteUbergraph_BP_Window_Benchmark::CallFunc_IsInteractingActorATeamMember_Return' has a wrong offset!");
static_assert(offsetof(BP_Window_Benchmark_C_ExecuteUbergraph_BP_Window_Benchmark, CallFunc_GetController_ReturnValue) == 0x000500, "Member 'BP_Window_Benchmark_C_ExecuteUbergraph_BP_Window_Benchmark::CallFunc_GetController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Window_Benchmark_C_ExecuteUbergraph_BP_Window_Benchmark, CallFunc_BooleanOR_ReturnValue) == 0x000508, "Member 'BP_Window_Benchmark_C_ExecuteUbergraph_BP_Window_Benchmark::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Window_Benchmark_C_ExecuteUbergraph_BP_Window_Benchmark, K2Node_DynamicCast_AsPlayer_Controller) == 0x000510, "Member 'BP_Window_Benchmark_C_ExecuteUbergraph_BP_Window_Benchmark::K2Node_DynamicCast_AsPlayer_Controller' has a wrong offset!");
static_assert(offsetof(BP_Window_Benchmark_C_ExecuteUbergraph_BP_Window_Benchmark, K2Node_DynamicCast_bSuccess_1) == 0x000518, "Member 'BP_Window_Benchmark_C_ExecuteUbergraph_BP_Window_Benchmark::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_Window_Benchmark_C_ExecuteUbergraph_BP_Window_Benchmark, K2Node_MakeStruct_PlayerMessage) == 0x000520, "Member 'BP_Window_Benchmark_C_ExecuteUbergraph_BP_Window_Benchmark::K2Node_MakeStruct_PlayerMessage' has a wrong offset!");
static_assert(offsetof(BP_Window_Benchmark_C_ExecuteUbergraph_BP_Window_Benchmark, CallFunc_GetDotProductTo_ReturnValue) == 0x000578, "Member 'BP_Window_Benchmark_C_ExecuteUbergraph_BP_Window_Benchmark::CallFunc_GetDotProductTo_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Window_Benchmark_C_ExecuteUbergraph_BP_Window_Benchmark, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x00057C, "Member 'BP_Window_Benchmark_C_ExecuteUbergraph_BP_Window_Benchmark::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Window_Benchmark_C_ExecuteUbergraph_BP_Window_Benchmark, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000580, "Member 'BP_Window_Benchmark_C_ExecuteUbergraph_BP_Window_Benchmark::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Window_Benchmark_C_ExecuteUbergraph_BP_Window_Benchmark, K2Node_SwitchEnum_CmpSuccess) == 0x000598, "Member 'BP_Window_Benchmark_C_ExecuteUbergraph_BP_Window_Benchmark::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_Window_Benchmark_C_ExecuteUbergraph_BP_Window_Benchmark, CallFunc_WithdrawEconomyFromTeamAtPoint_ReturnValue) == 0x000599, "Member 'BP_Window_Benchmark_C_ExecuteUbergraph_BP_Window_Benchmark::CallFunc_WithdrawEconomyFromTeamAtPoint_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Window_Benchmark_C_ExecuteUbergraph_BP_Window_Benchmark, CallFunc_Lerp_Alpha_ImplicitCast) == 0x0005A0, "Member 'BP_Window_Benchmark_C_ExecuteUbergraph_BP_Window_Benchmark::CallFunc_Lerp_Alpha_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_Window_Benchmark_C_ExecuteUbergraph_BP_Window_Benchmark, CallFunc_MakeRotator_Yaw_ImplicitCast) == 0x0005A8, "Member 'BP_Window_Benchmark_C_ExecuteUbergraph_BP_Window_Benchmark::CallFunc_MakeRotator_Yaw_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_Window_Benchmark_C_ExecuteUbergraph_BP_Window_Benchmark, CallFunc_MakeRotator_Yaw_ImplicitCast_1) == 0x0005AC, "Member 'BP_Window_Benchmark_C_ExecuteUbergraph_BP_Window_Benchmark::CallFunc_MakeRotator_Yaw_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(BP_Window_Benchmark_C_ExecuteUbergraph_BP_Window_Benchmark, CallFunc_Greater_DoubleDouble_A_ImplicitCast) == 0x0005B0, "Member 'BP_Window_Benchmark_C_ExecuteUbergraph_BP_Window_Benchmark::CallFunc_Greater_DoubleDouble_A_ImplicitCast' has a wrong offset!");

// Function BP_Window_Benchmark.BP_Window_Benchmark_C.GetWidgetLocation
// 0x0030 (0x0030 - 0x0000)
struct BP_Window_Benchmark_C_GetWidgetLocation final
{
public:
	struct FVector                                Location;                                          // 0x0000(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0018(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Window_Benchmark_C_GetWidgetLocation) == 0x000008, "Wrong alignment on BP_Window_Benchmark_C_GetWidgetLocation");
static_assert(sizeof(BP_Window_Benchmark_C_GetWidgetLocation) == 0x000030, "Wrong size on BP_Window_Benchmark_C_GetWidgetLocation");
static_assert(offsetof(BP_Window_Benchmark_C_GetWidgetLocation, Location) == 0x000000, "Member 'BP_Window_Benchmark_C_GetWidgetLocation::Location' has a wrong offset!");
static_assert(offsetof(BP_Window_Benchmark_C_GetWidgetLocation, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000018, "Member 'BP_Window_Benchmark_C_GetWidgetLocation::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");

// Function BP_Window_Benchmark.BP_Window_Benchmark_C.HideInteractionWidget
// 0x0001 (0x0001 - 0x0000)
struct BP_Window_Benchmark_C_HideInteractionWidget final
{
public:
	bool                                          Return;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Window_Benchmark_C_HideInteractionWidget) == 0x000001, "Wrong alignment on BP_Window_Benchmark_C_HideInteractionWidget");
static_assert(sizeof(BP_Window_Benchmark_C_HideInteractionWidget) == 0x000001, "Wrong size on BP_Window_Benchmark_C_HideInteractionWidget");
static_assert(offsetof(BP_Window_Benchmark_C_HideInteractionWidget, Return) == 0x000000, "Member 'BP_Window_Benchmark_C_HideInteractionWidget::Return' has a wrong offset!");

// Function BP_Window_Benchmark.BP_Window_Benchmark_C.House Actor Impact Cosmetics
// 0x0038 (0x0038 - 0x0000)
struct BP_Window_Benchmark_C_House_Actor_Impact_Cosmetics final
{
public:
	struct FVector                                Location;                                          // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                HitImpulse;                                        // 0x0018(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_ImpactEffect                                ImpactEffect;                                      // 0x0030(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Window_Benchmark_C_House_Actor_Impact_Cosmetics) == 0x000008, "Wrong alignment on BP_Window_Benchmark_C_House_Actor_Impact_Cosmetics");
static_assert(sizeof(BP_Window_Benchmark_C_House_Actor_Impact_Cosmetics) == 0x000038, "Wrong size on BP_Window_Benchmark_C_House_Actor_Impact_Cosmetics");
static_assert(offsetof(BP_Window_Benchmark_C_House_Actor_Impact_Cosmetics, Location) == 0x000000, "Member 'BP_Window_Benchmark_C_House_Actor_Impact_Cosmetics::Location' has a wrong offset!");
static_assert(offsetof(BP_Window_Benchmark_C_House_Actor_Impact_Cosmetics, HitImpulse) == 0x000018, "Member 'BP_Window_Benchmark_C_House_Actor_Impact_Cosmetics::HitImpulse' has a wrong offset!");
static_assert(offsetof(BP_Window_Benchmark_C_House_Actor_Impact_Cosmetics, ImpactEffect) == 0x000030, "Member 'BP_Window_Benchmark_C_House_Actor_Impact_Cosmetics::ImpactEffect' has a wrong offset!");

// Function BP_Window_Benchmark.BP_Window_Benchmark_C.IsInteractable
// 0x0002 (0x0002 - 0x0000)
struct BP_Window_Benchmark_C_IsInteractable final
{
public:
	bool                                          Interactable;                                      // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Window_Benchmark_C_IsInteractable) == 0x000001, "Wrong alignment on BP_Window_Benchmark_C_IsInteractable");
static_assert(sizeof(BP_Window_Benchmark_C_IsInteractable) == 0x000002, "Wrong size on BP_Window_Benchmark_C_IsInteractable");
static_assert(offsetof(BP_Window_Benchmark_C_IsInteractable, Interactable) == 0x000000, "Member 'BP_Window_Benchmark_C_IsInteractable::Interactable' has a wrong offset!");
static_assert(offsetof(BP_Window_Benchmark_C_IsInteractable, CallFunc_Not_PreBool_ReturnValue) == 0x000001, "Member 'BP_Window_Benchmark_C_IsInteractable::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function BP_Window_Benchmark.BP_Window_Benchmark_C.IsInteractingActorATeamMember
// 0x0068 (0x0068 - 0x0000)
struct BP_Window_Benchmark_C_IsInteractingActorATeamMember final
{
public:
	class AActor*                                 Actor;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Return;                                            // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharacter*                             K2Node_DynamicCast_AsCharacter;                    // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTeam                                  CallFunc_GetTeam_ReturnValue;                      // 0x0020(0x0038)(ConstParm, NoDestructor)
	class APlayerStateJP*                         K2Node_DynamicCast_AsPlayer_State_JP;              // 0x0058(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetTeamID_ReturnValue;                    // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0062(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Window_Benchmark_C_IsInteractingActorATeamMember) == 0x000008, "Wrong alignment on BP_Window_Benchmark_C_IsInteractingActorATeamMember");
static_assert(sizeof(BP_Window_Benchmark_C_IsInteractingActorATeamMember) == 0x000068, "Wrong size on BP_Window_Benchmark_C_IsInteractingActorATeamMember");
static_assert(offsetof(BP_Window_Benchmark_C_IsInteractingActorATeamMember, Actor) == 0x000000, "Member 'BP_Window_Benchmark_C_IsInteractingActorATeamMember::Actor' has a wrong offset!");
static_assert(offsetof(BP_Window_Benchmark_C_IsInteractingActorATeamMember, Return) == 0x000008, "Member 'BP_Window_Benchmark_C_IsInteractingActorATeamMember::Return' has a wrong offset!");
static_assert(offsetof(BP_Window_Benchmark_C_IsInteractingActorATeamMember, K2Node_DynamicCast_AsCharacter) == 0x000010, "Member 'BP_Window_Benchmark_C_IsInteractingActorATeamMember::K2Node_DynamicCast_AsCharacter' has a wrong offset!");
static_assert(offsetof(BP_Window_Benchmark_C_IsInteractingActorATeamMember, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_Window_Benchmark_C_IsInteractingActorATeamMember::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_Window_Benchmark_C_IsInteractingActorATeamMember, CallFunc_GetTeam_ReturnValue) == 0x000020, "Member 'BP_Window_Benchmark_C_IsInteractingActorATeamMember::CallFunc_GetTeam_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Window_Benchmark_C_IsInteractingActorATeamMember, K2Node_DynamicCast_AsPlayer_State_JP) == 0x000058, "Member 'BP_Window_Benchmark_C_IsInteractingActorATeamMember::K2Node_DynamicCast_AsPlayer_State_JP' has a wrong offset!");
static_assert(offsetof(BP_Window_Benchmark_C_IsInteractingActorATeamMember, K2Node_DynamicCast_bSuccess_1) == 0x000060, "Member 'BP_Window_Benchmark_C_IsInteractingActorATeamMember::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_Window_Benchmark_C_IsInteractingActorATeamMember, CallFunc_GetTeamID_ReturnValue) == 0x000061, "Member 'BP_Window_Benchmark_C_IsInteractingActorATeamMember::CallFunc_GetTeamID_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Window_Benchmark_C_IsInteractingActorATeamMember, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000062, "Member 'BP_Window_Benchmark_C_IsInteractingActorATeamMember::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function BP_Window_Benchmark.BP_Window_Benchmark_C.PostInteract
// 0x0010 (0x0010 - 0x0000)
struct BP_Window_Benchmark_C_PostInteract final
{
public:
	class AActor*                                 InteractingActor;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    InteractionComponent;                              // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Window_Benchmark_C_PostInteract) == 0x000008, "Wrong alignment on BP_Window_Benchmark_C_PostInteract");
static_assert(sizeof(BP_Window_Benchmark_C_PostInteract) == 0x000010, "Wrong size on BP_Window_Benchmark_C_PostInteract");
static_assert(offsetof(BP_Window_Benchmark_C_PostInteract, InteractingActor) == 0x000000, "Member 'BP_Window_Benchmark_C_PostInteract::InteractingActor' has a wrong offset!");
static_assert(offsetof(BP_Window_Benchmark_C_PostInteract, InteractionComponent) == 0x000008, "Member 'BP_Window_Benchmark_C_PostInteract::InteractionComponent' has a wrong offset!");

// Function BP_Window_Benchmark.BP_Window_Benchmark_C.ReloadAfterHousesLoaded
// 0x0001 (0x0001 - 0x0000)
struct BP_Window_Benchmark_C_ReloadAfterHousesLoaded final
{
public:
	bool                                          Return;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Window_Benchmark_C_ReloadAfterHousesLoaded) == 0x000001, "Wrong alignment on BP_Window_Benchmark_C_ReloadAfterHousesLoaded");
static_assert(sizeof(BP_Window_Benchmark_C_ReloadAfterHousesLoaded) == 0x000001, "Wrong size on BP_Window_Benchmark_C_ReloadAfterHousesLoaded");
static_assert(offsetof(BP_Window_Benchmark_C_ReloadAfterHousesLoaded, Return) == 0x000000, "Member 'BP_Window_Benchmark_C_ReloadAfterHousesLoaded::Return' has a wrong offset!");

// Function BP_Window_Benchmark.BP_Window_Benchmark_C.RemoveGlassDecal
// 0x0020 (0x0020 - 0x0000)
struct BP_Window_Benchmark_C_RemoveGlassDecal final
{
public:
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_LastIndex_ReturnValue;              // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UStaticMeshComponent*                   CallFunc_Array_Get_Item;                           // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Window_Benchmark_C_RemoveGlassDecal) == 0x000008, "Wrong alignment on BP_Window_Benchmark_C_RemoveGlassDecal");
static_assert(sizeof(BP_Window_Benchmark_C_RemoveGlassDecal) == 0x000020, "Wrong size on BP_Window_Benchmark_C_RemoveGlassDecal");
static_assert(offsetof(BP_Window_Benchmark_C_RemoveGlassDecal, CallFunc_Array_Length_ReturnValue) == 0x000000, "Member 'BP_Window_Benchmark_C_RemoveGlassDecal::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Window_Benchmark_C_RemoveGlassDecal, CallFunc_Array_LastIndex_ReturnValue) == 0x000004, "Member 'BP_Window_Benchmark_C_RemoveGlassDecal::CallFunc_Array_LastIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Window_Benchmark_C_RemoveGlassDecal, CallFunc_Greater_IntInt_ReturnValue) == 0x000008, "Member 'BP_Window_Benchmark_C_RemoveGlassDecal::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Window_Benchmark_C_RemoveGlassDecal, CallFunc_Array_Get_Item) == 0x000010, "Member 'BP_Window_Benchmark_C_RemoveGlassDecal::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_Window_Benchmark_C_RemoveGlassDecal, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'BP_Window_Benchmark_C_RemoveGlassDecal::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_Window_Benchmark.BP_Window_Benchmark_C.Sabotage
// 0x0008 (0x0008 - 0x0000)
struct BP_Window_Benchmark_C_Sabotage final
{
public:
	class AActor*                                 SabotagingActor;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Window_Benchmark_C_Sabotage) == 0x000008, "Wrong alignment on BP_Window_Benchmark_C_Sabotage");
static_assert(sizeof(BP_Window_Benchmark_C_Sabotage) == 0x000008, "Wrong size on BP_Window_Benchmark_C_Sabotage");
static_assert(offsetof(BP_Window_Benchmark_C_Sabotage, SabotagingActor) == 0x000000, "Member 'BP_Window_Benchmark_C_Sabotage::SabotagingActor' has a wrong offset!");

// Function BP_Window_Benchmark.BP_Window_Benchmark_C.SpawnRandomGlassHit
// 0x01B0 (0x01B0 - 0x0000)
struct BP_Window_Benchmark_C_SpawnRandomGlassHit final
{
public:
	struct FVector                                Location;                                          // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x0020(0x0060)(ConstParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstance*                      CallFunc_Array_Random_OutItem;                     // 0x0080(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Random_OutIndex;                    // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8C[0x4];                                       // 0x008C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_InverseTransformLocation_ReturnValue;     // 0x0090(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorForwardVector_ReturnValue;        // 0x00A8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X_1;                          // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_1;                          // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_1;                          // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x00F0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0110(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_128[0x8];                                      // 0x0128(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0130(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   CallFunc_AddComponent_ReturnValue;                 // 0x0190(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_AttachToComponent_ReturnValue;         // 0x0198(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_199[0x3];                                      // 0x0199(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x019C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeRotator_Roll_ImplicitCast;            // 0x01A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeRotator_Yaw_ImplicitCast;             // 0x01A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeRotator_Pitch_ImplicitCast;           // 0x01A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Window_Benchmark_C_SpawnRandomGlassHit) == 0x000010, "Wrong alignment on BP_Window_Benchmark_C_SpawnRandomGlassHit");
static_assert(sizeof(BP_Window_Benchmark_C_SpawnRandomGlassHit) == 0x0001B0, "Wrong size on BP_Window_Benchmark_C_SpawnRandomGlassHit");
static_assert(offsetof(BP_Window_Benchmark_C_SpawnRandomGlassHit, Location) == 0x000000, "Member 'BP_Window_Benchmark_C_SpawnRandomGlassHit::Location' has a wrong offset!");
static_assert(offsetof(BP_Window_Benchmark_C_SpawnRandomGlassHit, CallFunc_GetOwner_ReturnValue) == 0x000018, "Member 'BP_Window_Benchmark_C_SpawnRandomGlassHit::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Window_Benchmark_C_SpawnRandomGlassHit, CallFunc_GetTransform_ReturnValue) == 0x000020, "Member 'BP_Window_Benchmark_C_SpawnRandomGlassHit::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Window_Benchmark_C_SpawnRandomGlassHit, CallFunc_Array_Random_OutItem) == 0x000080, "Member 'BP_Window_Benchmark_C_SpawnRandomGlassHit::CallFunc_Array_Random_OutItem' has a wrong offset!");
static_assert(offsetof(BP_Window_Benchmark_C_SpawnRandomGlassHit, CallFunc_Array_Random_OutIndex) == 0x000088, "Member 'BP_Window_Benchmark_C_SpawnRandomGlassHit::CallFunc_Array_Random_OutIndex' has a wrong offset!");
static_assert(offsetof(BP_Window_Benchmark_C_SpawnRandomGlassHit, CallFunc_InverseTransformLocation_ReturnValue) == 0x000090, "Member 'BP_Window_Benchmark_C_SpawnRandomGlassHit::CallFunc_InverseTransformLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Window_Benchmark_C_SpawnRandomGlassHit, CallFunc_GetActorForwardVector_ReturnValue) == 0x0000A8, "Member 'BP_Window_Benchmark_C_SpawnRandomGlassHit::CallFunc_GetActorForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Window_Benchmark_C_SpawnRandomGlassHit, CallFunc_BreakVector_X) == 0x0000C0, "Member 'BP_Window_Benchmark_C_SpawnRandomGlassHit::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_Window_Benchmark_C_SpawnRandomGlassHit, CallFunc_BreakVector_Y) == 0x0000C8, "Member 'BP_Window_Benchmark_C_SpawnRandomGlassHit::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_Window_Benchmark_C_SpawnRandomGlassHit, CallFunc_BreakVector_Z) == 0x0000D0, "Member 'BP_Window_Benchmark_C_SpawnRandomGlassHit::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_Window_Benchmark_C_SpawnRandomGlassHit, CallFunc_BreakVector_X_1) == 0x0000D8, "Member 'BP_Window_Benchmark_C_SpawnRandomGlassHit::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(BP_Window_Benchmark_C_SpawnRandomGlassHit, CallFunc_BreakVector_Y_1) == 0x0000E0, "Member 'BP_Window_Benchmark_C_SpawnRandomGlassHit::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(BP_Window_Benchmark_C_SpawnRandomGlassHit, CallFunc_BreakVector_Z_1) == 0x0000E8, "Member 'BP_Window_Benchmark_C_SpawnRandomGlassHit::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(BP_Window_Benchmark_C_SpawnRandomGlassHit, CallFunc_MakeVector_ReturnValue) == 0x0000F0, "Member 'BP_Window_Benchmark_C_SpawnRandomGlassHit::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Window_Benchmark_C_SpawnRandomGlassHit, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000108, "Member 'BP_Window_Benchmark_C_SpawnRandomGlassHit::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Window_Benchmark_C_SpawnRandomGlassHit, CallFunc_MakeRotator_ReturnValue) == 0x000110, "Member 'BP_Window_Benchmark_C_SpawnRandomGlassHit::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Window_Benchmark_C_SpawnRandomGlassHit, CallFunc_MakeTransform_ReturnValue) == 0x000130, "Member 'BP_Window_Benchmark_C_SpawnRandomGlassHit::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Window_Benchmark_C_SpawnRandomGlassHit, CallFunc_AddComponent_ReturnValue) == 0x000190, "Member 'BP_Window_Benchmark_C_SpawnRandomGlassHit::CallFunc_AddComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Window_Benchmark_C_SpawnRandomGlassHit, CallFunc_K2_AttachToComponent_ReturnValue) == 0x000198, "Member 'BP_Window_Benchmark_C_SpawnRandomGlassHit::CallFunc_K2_AttachToComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Window_Benchmark_C_SpawnRandomGlassHit, CallFunc_Array_Add_ReturnValue) == 0x00019C, "Member 'BP_Window_Benchmark_C_SpawnRandomGlassHit::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Window_Benchmark_C_SpawnRandomGlassHit, CallFunc_MakeRotator_Roll_ImplicitCast) == 0x0001A0, "Member 'BP_Window_Benchmark_C_SpawnRandomGlassHit::CallFunc_MakeRotator_Roll_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_Window_Benchmark_C_SpawnRandomGlassHit, CallFunc_MakeRotator_Yaw_ImplicitCast) == 0x0001A4, "Member 'BP_Window_Benchmark_C_SpawnRandomGlassHit::CallFunc_MakeRotator_Yaw_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_Window_Benchmark_C_SpawnRandomGlassHit, CallFunc_MakeRotator_Pitch_ImplicitCast) == 0x0001A8, "Member 'BP_Window_Benchmark_C_SpawnRandomGlassHit::CallFunc_MakeRotator_Pitch_ImplicitCast' has a wrong offset!");

// Function BP_Window_Benchmark.BP_Window_Benchmark_C.UserConstructionScript
// 0x0010 (0x0010 - 0x0000)
struct BP_Window_Benchmark_C_UserConstructionScript final
{
public:
	TArray<class UMeshComponent*>                 K2Node_MakeArray_Array;                            // 0x0000(0x0010)(ReferenceParm, ContainsInstancedReference)
};
static_assert(alignof(BP_Window_Benchmark_C_UserConstructionScript) == 0x000008, "Wrong alignment on BP_Window_Benchmark_C_UserConstructionScript");
static_assert(sizeof(BP_Window_Benchmark_C_UserConstructionScript) == 0x000010, "Wrong size on BP_Window_Benchmark_C_UserConstructionScript");
static_assert(offsetof(BP_Window_Benchmark_C_UserConstructionScript, K2Node_MakeArray_Array) == 0x000000, "Member 'BP_Window_Benchmark_C_UserConstructionScript::K2Node_MakeArray_Array' has a wrong offset!");

// Function BP_Window_Benchmark.BP_Window_Benchmark_C.WindowImpactCosmetics
// 0x0070 (0x0070 - 0x0000)
struct BP_Window_Benchmark_C_WindowImpactCosmetics final
{
public:
	struct FVector                                Location;                                          // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_ImpactEffect                                Selection;                                         // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                HitImpulse;                                        // 0x0020(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Conv_DoubleToVector_ReturnValue;          // 0x0040(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue;        // 0x0058(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Window_Benchmark_C_WindowImpactCosmetics) == 0x000008, "Wrong alignment on BP_Window_Benchmark_C_WindowImpactCosmetics");
static_assert(sizeof(BP_Window_Benchmark_C_WindowImpactCosmetics) == 0x000070, "Wrong size on BP_Window_Benchmark_C_WindowImpactCosmetics");
static_assert(offsetof(BP_Window_Benchmark_C_WindowImpactCosmetics, Location) == 0x000000, "Member 'BP_Window_Benchmark_C_WindowImpactCosmetics::Location' has a wrong offset!");
static_assert(offsetof(BP_Window_Benchmark_C_WindowImpactCosmetics, Selection) == 0x000018, "Member 'BP_Window_Benchmark_C_WindowImpactCosmetics::Selection' has a wrong offset!");
static_assert(offsetof(BP_Window_Benchmark_C_WindowImpactCosmetics, HitImpulse) == 0x000020, "Member 'BP_Window_Benchmark_C_WindowImpactCosmetics::HitImpulse' has a wrong offset!");
static_assert(offsetof(BP_Window_Benchmark_C_WindowImpactCosmetics, K2Node_SwitchEnum_CmpSuccess) == 0x000038, "Member 'BP_Window_Benchmark_C_WindowImpactCosmetics::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_Window_Benchmark_C_WindowImpactCosmetics, CallFunc_Conv_DoubleToVector_ReturnValue) == 0x000040, "Member 'BP_Window_Benchmark_C_WindowImpactCosmetics::CallFunc_Conv_DoubleToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Window_Benchmark_C_WindowImpactCosmetics, CallFunc_Multiply_VectorVector_ReturnValue) == 0x000058, "Member 'BP_Window_Benchmark_C_WindowImpactCosmetics::CallFunc_Multiply_VectorVector_ReturnValue' has a wrong offset!");

// Function BP_Window_Benchmark.BP_Window_Benchmark_C.WindowSabotaged
// 0x0001 (0x0001 - 0x0000)
struct BP_Window_Benchmark_C_WindowSabotaged final
{
public:
	bool                                          TURR;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Window_Benchmark_C_WindowSabotaged) == 0x000001, "Wrong alignment on BP_Window_Benchmark_C_WindowSabotaged");
static_assert(sizeof(BP_Window_Benchmark_C_WindowSabotaged) == 0x000001, "Wrong size on BP_Window_Benchmark_C_WindowSabotaged");
static_assert(offsetof(BP_Window_Benchmark_C_WindowSabotaged, TURR) == 0x000000, "Member 'BP_Window_Benchmark_C_WindowSabotaged::TURR' has a wrong offset!");

}

