#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_WinScreenStage

#include "Basic.hpp"

#include "BP_WinScreenStage_classes.hpp"
#include "BP_WinScreenStage_parameters.hpp"


namespace SDK
{

// Function BP_WinScreenStage.BP_WinScreenStage_C.Activate New State
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// E_WinscreenState                        NewState                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_WinScreenStage_C::Activate_New_State(E_WinscreenState NewState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_WinScreenStage_C", "Activate New State");

	Params::BP_WinScreenStage_C_Activate_New_State Parms{};

	Parms.NewState = NewState;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_WinScreenStage.BP_WinScreenStage_C.ActivateStage
// (BlueprintCallable, BlueprintEvent)

void ABP_WinScreenStage_C::ActivateStage()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_WinScreenStage_C", "ActivateStage");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_WinScreenStage.BP_WinScreenStage_C.AttachListenerToCameraRig
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_WinScreenStage_C::AttachListenerToCameraRig()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_WinScreenStage_C", "AttachListenerToCameraRig");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_WinScreenStage.BP_WinScreenStage_C.CameraMove__FinishedFunc
// (BlueprintEvent)

void ABP_WinScreenStage_C::CameraMove__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_WinScreenStage_C", "CameraMove__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_WinScreenStage.BP_WinScreenStage_C.CameraMove__UpdateFunc
// (BlueprintEvent)

void ABP_WinScreenStage_C::CameraMove__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_WinScreenStage_C", "CameraMove__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_WinScreenStage.BP_WinScreenStage_C.CameraRailFinished
// (BlueprintCallable, BlueprintEvent)

void ABP_WinScreenStage_C::CameraRailFinished()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_WinScreenStage_C", "CameraRailFinished");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_WinScreenStage.BP_WinScreenStage_C.CameraRigTimeline__FinishedFunc
// (BlueprintEvent)

void ABP_WinScreenStage_C::CameraRigTimeline__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_WinScreenStage_C", "CameraRigTimeline__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_WinScreenStage.BP_WinScreenStage_C.CameraRigTimeline__UpdateFunc
// (BlueprintEvent)

void ABP_WinScreenStage_C::CameraRigTimeline__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_WinScreenStage_C", "CameraRigTimeline__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_WinScreenStage.BP_WinScreenStage_C.CheckAchievement
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_WinScreenStage_C::CheckAchievement()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_WinScreenStage_C", "CheckAchievement");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_WinScreenStage.BP_WinScreenStage_C.CreateNewCharacters
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_WinScreenStage_C::CreateNewCharacters()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_WinScreenStage_C", "CreateNewCharacters");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_WinScreenStage.BP_WinScreenStage_C.CreateWidgetAndBindEvents
// (BlueprintCallable, BlueprintEvent)

void ABP_WinScreenStage_C::CreateWidgetAndBindEvents()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_WinScreenStage_C", "CreateWidgetAndBindEvents");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_WinScreenStage.BP_WinScreenStage_C.DestroyPreviewComponents
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_WinScreenStage_C::DestroyPreviewComponents()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_WinScreenStage_C", "DestroyPreviewComponents");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_WinScreenStage.BP_WinScreenStage_C.ExecuteUbergraph_BP_WinScreenStage
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_WinScreenStage_C::ExecuteUbergraph_BP_WinScreenStage(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_WinScreenStage_C", "ExecuteUbergraph_BP_WinScreenStage");

	Params::BP_WinScreenStage_C_ExecuteUbergraph_BP_WinScreenStage Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_WinScreenStage.BP_WinScreenStage_C.FindEssentialToFocus
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_HouseEssential_Cube_C*        Essential                                              (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_WinScreenStage_C::FindEssentialToFocus(class ABP_HouseEssential_Cube_C** Essential)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_WinScreenStage_C", "FindEssentialToFocus");

	Params::BP_WinScreenStage_C_FindEssentialToFocus Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Essential != nullptr)
		*Essential = Parms.Essential;
}


// Function BP_WinScreenStage.BP_WinScreenStage_C.FocusPlayerTimeline__FinishedFunc
// (BlueprintEvent)

void ABP_WinScreenStage_C::FocusPlayerTimeline__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_WinScreenStage_C", "FocusPlayerTimeline__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_WinScreenStage.BP_WinScreenStage_C.FocusPlayerTimeline__UpdateFunc
// (BlueprintEvent)

void ABP_WinScreenStage_C::FocusPlayerTimeline__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_WinScreenStage_C", "FocusPlayerTimeline__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_WinScreenStage.BP_WinScreenStage_C.Get Focused Camera End Location
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FVector                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

struct FVector ABP_WinScreenStage_C::Get_Focused_Camera_End_Location()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_WinScreenStage_C", "Get Focused Camera End Location");

	Params::BP_WinScreenStage_C_Get_Focused_Camera_End_Location Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_WinScreenStage.BP_WinScreenStage_C.Get House Spawn Transform for Team
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// uint8                                   Team                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FTransform                       Transform                                              (Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_WinScreenStage_C::Get_House_Spawn_Transform_for_Team(uint8 Team, struct FTransform* Transform)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_WinScreenStage_C", "Get House Spawn Transform for Team");

	Params::BP_WinScreenStage_C_Get_House_Spawn_Transform_for_Team Parms{};

	Parms.Team = Team;

	UObject::ProcessEvent(Func, &Parms);

	if (Transform != nullptr)
		*Transform = std::move(Parms.Transform);
}


// Function BP_WinScreenStage.BP_WinScreenStage_C.GetHouseDefinitionForTeam
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// uint8                                   Team                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UClass*                           HouseToSpawn                                           (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_WinScreenStage_C::GetHouseDefinitionForTeam(uint8 Team, class UClass** HouseToSpawn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_WinScreenStage_C", "GetHouseDefinitionForTeam");

	Params::BP_WinScreenStage_C_GetHouseDefinitionForTeam Parms{};

	Parms.Team = Team;

	UObject::ProcessEvent(Func, &Parms);

	if (HouseToSpawn != nullptr)
		*HouseToSpawn = Parms.HouseToSpawn;
}


// Function BP_WinScreenStage.BP_WinScreenStage_C.GetPlayerSpawnData
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class APlayerStateJP*                   PlayerState                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// int32                                   Index_0                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// uint8                                   Team                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FTransform                       Transform                                              (Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    WinningTeam                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_WinScreenStage_C::GetPlayerSpawnData(class APlayerStateJP* PlayerState, int32 Index_0, uint8 Team, struct FTransform* Transform, bool* WinningTeam)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_WinScreenStage_C", "GetPlayerSpawnData");

	Params::BP_WinScreenStage_C_GetPlayerSpawnData Parms{};

	Parms.PlayerState = PlayerState;
	Parms.Index_0 = Index_0;
	Parms.Team = Team;

	UObject::ProcessEvent(Func, &Parms);

	if (Transform != nullptr)
		*Transform = std::move(Parms.Transform);

	if (WinningTeam != nullptr)
		*WinningTeam = Parms.WinningTeam;
}


// Function BP_WinScreenStage.BP_WinScreenStage_C.GetSpawnTransform
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FVector                          InVec                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FTransform                       ReturnValue                                            (Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

struct FTransform ABP_WinScreenStage_C::GetSpawnTransform(const struct FVector& InVec)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_WinScreenStage_C", "GetSpawnTransform");

	Params::BP_WinScreenStage_C_GetSpawnTransform Parms{};

	Parms.InVec = std::move(InVec);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_WinScreenStage.BP_WinScreenStage_C.MakeHouseForSpecificTeam
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// uint8                                   SpecificTeamID                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_WinScreenStage_C::MakeHouseForSpecificTeam(uint8 SpecificTeamID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_WinScreenStage_C", "MakeHouseForSpecificTeam");

	Params::BP_WinScreenStage_C_MakeHouseForSpecificTeam Parms{};

	Parms.SpecificTeamID = SpecificTeamID;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_WinScreenStage.BP_WinScreenStage_C.MakeHouses
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_WinScreenStage_C::MakeHouses()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_WinScreenStage_C", "MakeHouses");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_WinScreenStage.BP_WinScreenStage_C.Multi_SpawnPreviewHouse
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UClass*                           House                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// struct FTransform                       Transform                                              (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_WinScreenStage_C::Multi_SpawnPreviewHouse(class UClass* House, const struct FTransform& Transform)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_WinScreenStage_C", "Multi_SpawnPreviewHouse");

	Params::BP_WinScreenStage_C_Multi_SpawnPreviewHouse Parms{};

	Parms.House = House;
	Parms.Transform = std::move(Transform);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_WinScreenStage.BP_WinScreenStage_C.PlaceActorsForTeam
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// uint8                                   Team                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_WinScreenStage_C::PlaceActorsForTeam(uint8 Team)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_WinScreenStage_C", "PlaceActorsForTeam");

	Params::BP_WinScreenStage_C_PlaceActorsForTeam Parms{};

	Parms.Team = Team;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_WinScreenStage.BP_WinScreenStage_C.PlayWinLoseAnimations
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_WinScreenStage_C::PlayWinLoseAnimations()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_WinScreenStage_C", "PlayWinLoseAnimations");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_WinScreenStage.BP_WinScreenStage_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ABP_WinScreenStage_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_WinScreenStage_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_WinScreenStage.BP_WinScreenStage_C.Save Cameras
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_WinScreenStage_C::Save_Cameras()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_WinScreenStage_C", "Save Cameras");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_WinScreenStage.BP_WinScreenStage_C.Set Nameplate Visibility
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Visible                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_WinScreenStage_C::Set_Nameplate_Visibility(bool Visible)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_WinScreenStage_C", "Set Nameplate Visibility");

	Params::BP_WinScreenStage_C_Set_Nameplate_Visibility Parms{};

	Parms.Visible = Visible;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_WinScreenStage.BP_WinScreenStage_C.Set New Camera View
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_WinScreenStage_C::Set_New_Camera_View()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_WinScreenStage_C", "Set New Camera View");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_WinScreenStage.BP_WinScreenStage_C.SetSpawnLocations
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_WinScreenStage_C::SetSpawnLocations()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_WinScreenStage_C", "SetSpawnLocations");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_WinScreenStage.BP_WinScreenStage_C.ShowWinningTeamEffects
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_WinScreenStage_C::ShowWinningTeamEffects()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_WinScreenStage_C", "ShowWinningTeamEffects");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_WinScreenStage.BP_WinScreenStage_C.UserConstructionScript
// (Event, Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_WinScreenStage_C::UserConstructionScript()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_WinScreenStage_C", "UserConstructionScript");

	UObject::ProcessEvent(Func, nullptr);
}

}

