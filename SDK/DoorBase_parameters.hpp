#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: DoorBase

#include "Basic.hpp"

#include "GameplayTags_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "JP_structs.hpp"
#include "E_ImpactEffect_structs.hpp"


namespace SDK::Params
{

// Function DoorBase.DoorBase_C.DestroyDoorMesh
// 0x0038 (0x0038 - 0x0000)
struct DoorBase_C_DestroyDoorMesh final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UStaticMeshComponent*>           CallFunc_K2_GetComponentsByClass_ReturnValue;      // 0x0010(0x0010)(ReferenceParm, ContainsInstancedReference)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UStaticMeshComponent*                   CallFunc_Array_Get_Item;                           // 0x0028(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ComponentHasTag_ReturnValue;              // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(DoorBase_C_DestroyDoorMesh) == 0x000008, "Wrong alignment on DoorBase_C_DestroyDoorMesh");
static_assert(sizeof(DoorBase_C_DestroyDoorMesh) == 0x000038, "Wrong size on DoorBase_C_DestroyDoorMesh");
static_assert(offsetof(DoorBase_C_DestroyDoorMesh, Temp_int_Array_Index_Variable) == 0x000000, "Member 'DoorBase_C_DestroyDoorMesh::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(DoorBase_C_DestroyDoorMesh, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'DoorBase_C_DestroyDoorMesh::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(DoorBase_C_DestroyDoorMesh, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'DoorBase_C_DestroyDoorMesh::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(DoorBase_C_DestroyDoorMesh, CallFunc_K2_GetComponentsByClass_ReturnValue) == 0x000010, "Member 'DoorBase_C_DestroyDoorMesh::CallFunc_K2_GetComponentsByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(DoorBase_C_DestroyDoorMesh, CallFunc_Array_Length_ReturnValue) == 0x000020, "Member 'DoorBase_C_DestroyDoorMesh::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(DoorBase_C_DestroyDoorMesh, CallFunc_Array_Get_Item) == 0x000028, "Member 'DoorBase_C_DestroyDoorMesh::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(DoorBase_C_DestroyDoorMesh, CallFunc_Less_IntInt_ReturnValue) == 0x000030, "Member 'DoorBase_C_DestroyDoorMesh::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(DoorBase_C_DestroyDoorMesh, CallFunc_ComponentHasTag_ReturnValue) == 0x000031, "Member 'DoorBase_C_DestroyDoorMesh::CallFunc_ComponentHasTag_ReturnValue' has a wrong offset!");

// Function DoorBase.DoorBase_C.Event Apply Audio Multiplier
// 0x0008 (0x0008 - 0x0000)
struct DoorBase_C_Event_Apply_Audio_Multiplier final
{
public:
	class AActor*                                 InteractingActor;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(DoorBase_C_Event_Apply_Audio_Multiplier) == 0x000008, "Wrong alignment on DoorBase_C_Event_Apply_Audio_Multiplier");
static_assert(sizeof(DoorBase_C_Event_Apply_Audio_Multiplier) == 0x000008, "Wrong size on DoorBase_C_Event_Apply_Audio_Multiplier");
static_assert(offsetof(DoorBase_C_Event_Apply_Audio_Multiplier, InteractingActor) == 0x000000, "Member 'DoorBase_C_Event_Apply_Audio_Multiplier::InteractingActor' has a wrong offset!");

// Function DoorBase.DoorBase_C.ExecuteUbergraph_DoorBase
// 0x0818 (0x0818 - 0x0000)
struct DoorBase_C_ExecuteUbergraph_DoorBase final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UInitializationStateEnded*              CallFunc_ListenToInitializationStateEnded_ReturnValue; // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable;                 // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_13[0x1];                                       // 0x0013(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0018(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x0034(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0048(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable;                       // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_52[0x6];                                       // 0x0052(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_CustomEvent_Alpha;                          // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue_1;               // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_62[0x6];                                       // 0x0062(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0068(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetTeamAtPoint_bFoundTeam;                // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_81[0x3];                                       // 0x0081(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           CallFunc_GetTeamAtPoint_TeamVolumeGameplayTag;     // 0x0084(0x0008)(NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8C[0x4];                                       // 0x008C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTeam                                  CallFunc_GetTeamAtPoint_ReturnValue;               // 0x0090(0x0038)(ConstParm, NoDestructor)
	TScriptInterface<class ITeamSetterInterface>  K2Node_DynamicCast_AsTeam_Setter_Interface;        // 0x00C8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x00D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPlaying_ReturnValue;                    // 0x00DA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_DB[0x5];                                       // 0x00DB(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_Event_InteractingActor_1;                   // 0x00E0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_Event_InteractionComponent;                 // 0x00E8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsInteractingActorTeamMember_Return;      // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F1[0x7];                                       // 0x00F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_ResidentCharacter_C*                K2Node_DynamicCast_AsBP_Resident_Character;        // 0x00F8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0101(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_102[0x6];                                      // 0x0102(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            CallFunc_GetController_ReturnValue;                // 0x0108(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      K2Node_DynamicCast_AsPlayer_Controller;            // 0x0110(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_119[0x3];                                      // 0x0119(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetDotProductTo_ReturnValue;              // 0x011C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class II_PlayerControllerMessage_C> K2Node_DynamicCast_AsI_Player_Controller_Message;  // 0x0120(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0131(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x0132(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_133[0x5];                                      // 0x0133(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPlayerMessage                         K2Node_MakeStruct_PlayerMessage;                   // 0x0138(0x0058)()
	bool                                          CallFunc_ReloadAfterHousesLoaded_Return;           // 0x0190(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_191[0x3];                                      // 0x0191(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0194(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_CustomEvent_InteractingActor;               // 0x0198(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x01A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue_2;               // 0x01A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue_3;               // 0x01A5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A6[0x2];                                      // 0x01A6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Temp_real_Variable;                                // 0x01A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Select_Default;                             // 0x01B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B1[0x7];                                      // 0x01B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Temp_real_Variable_1;                              // 0x01B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_Select_Default_1;                           // 0x01C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_Event_InteractingActor;                     // 0x01C8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_AttachToComponent_ReturnValue;         // 0x01D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_AttachToComponent_ReturnValue_1;       // 0x01D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D2[0x6];                                      // 0x01D2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_K2_AddLocalOffset_SweepHitResult;         // 0x01D8(0x00F8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x02D0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x02E8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_AddLocalOffset_SweepHitResult_1;       // 0x0300(0x00F8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	float                                         K2Node_Event_Delta;                                // 0x03F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3FC[0x4];                                      // 0x03FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_Event_Causer;                               // 0x0400(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FCombatParticipant                     K2Node_Event_CombatParticipant;                    // 0x0408(0x0060)(ConstParm)
	struct FKillMethod                            K2Node_Event_KillMethod;                           // 0x0468(0x02E8)(ConstParm)
	struct FVector_NetQuantize                    K2Node_Event_Location_1;                           // 0x0750(0x0018)(NoDestructor, HasGetValueTypeHash)
	class UUserWidget*                            CallFunc_GetUserWidgetObject_ReturnValue;          // 0x0768(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Event_Location;                             // 0x0770(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Event_HitImpulse;                           // 0x0788(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_ImpactEffect                                K2Node_Event_ImpactEffect;                         // 0x07A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_1;                    // 0x07A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7A2[0x6];                                      // 0x07A2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_Event_Focusing_Actor;                       // 0x07A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x07B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class USceneComponent*>                CallFunc_K2_GetComponentsByClass_ReturnValue;      // 0x07B8(0x0010)(ReferenceParm, ContainsInstancedReference)
	class USceneComponent*                        CallFunc_Array_Get_Item;                           // 0x07C8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x07D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x07D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ComponentHasTag_ReturnValue;              // 0x07D5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue_4;               // 0x07D6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7D7[0x1];                                      // 0x07D7(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class UMeshComponent*                         CallFunc_Array_Get_Item_1;                         // 0x07D8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x07E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x07E4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x07E5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetFloatAttributeFromAbilitySystemComponent_bSuccessfullyFoundAttribute; // 0x07E6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7E7[0x1];                                      // 0x07E7(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetFloatAttributeFromAbilitySystemComponent_ReturnValue; // 0x07E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_1;       // 0x07EC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7ED[0x3];                                      // 0x07ED(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Less_DoubleDouble_A_ImplicitCast;         // 0x07F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Greater_DoubleDouble_A_ImplicitCast;      // 0x07F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetPlayRate_NewRate_ImplicitCast;         // 0x0800(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_804[0x4];                                      // 0x0804(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Update_Alpha_Alpha_ImplicitCast;          // 0x0808(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Greater_DoubleDouble_A_ImplicitCast_1;    // 0x0810(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(DoorBase_C_ExecuteUbergraph_DoorBase) == 0x000008, "Wrong alignment on DoorBase_C_ExecuteUbergraph_DoorBase");
static_assert(sizeof(DoorBase_C_ExecuteUbergraph_DoorBase) == 0x000818, "Wrong size on DoorBase_C_ExecuteUbergraph_DoorBase");
static_assert(offsetof(DoorBase_C_ExecuteUbergraph_DoorBase, EntryPoint) == 0x000000, "Member 'DoorBase_C_ExecuteUbergraph_DoorBase::EntryPoint' has a wrong offset!");
static_assert(offsetof(DoorBase_C_ExecuteUbergraph_DoorBase, Temp_bool_Variable) == 0x000004, "Member 'DoorBase_C_ExecuteUbergraph_DoorBase::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(DoorBase_C_ExecuteUbergraph_DoorBase, CallFunc_ListenToInitializationStateEnded_ReturnValue) == 0x000008, "Member 'DoorBase_C_ExecuteUbergraph_DoorBase::CallFunc_ListenToInitializationStateEnded_ReturnValue' has a wrong offset!");
static_assert(offsetof(DoorBase_C_ExecuteUbergraph_DoorBase, Temp_bool_Variable_1) == 0x000010, "Member 'DoorBase_C_ExecuteUbergraph_DoorBase::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(DoorBase_C_ExecuteUbergraph_DoorBase, CallFunc_IsValid_ReturnValue) == 0x000011, "Member 'DoorBase_C_ExecuteUbergraph_DoorBase::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(DoorBase_C_ExecuteUbergraph_DoorBase, Temp_bool_Has_Been_Initd_Variable) == 0x000012, "Member 'DoorBase_C_ExecuteUbergraph_DoorBase::Temp_bool_Has_Been_Initd_Variable' has a wrong offset!");
static_assert(offsetof(DoorBase_C_ExecuteUbergraph_DoorBase, Temp_int_Array_Index_Variable) == 0x000014, "Member 'DoorBase_C_ExecuteUbergraph_DoorBase::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(DoorBase_C_ExecuteUbergraph_DoorBase, K2Node_CreateDelegate_OutputDelegate) == 0x000018, "Member 'DoorBase_C_ExecuteUbergraph_DoorBase::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(DoorBase_C_ExecuteUbergraph_DoorBase, Temp_int_Loop_Counter_Variable) == 0x000028, "Member 'DoorBase_C_ExecuteUbergraph_DoorBase::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(DoorBase_C_ExecuteUbergraph_DoorBase, CallFunc_Add_IntInt_ReturnValue) == 0x00002C, "Member 'DoorBase_C_ExecuteUbergraph_DoorBase::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(DoorBase_C_ExecuteUbergraph_DoorBase, Temp_int_Array_Index_Variable_1) == 0x000030, "Member 'DoorBase_C_ExecuteUbergraph_DoorBase::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(DoorBase_C_ExecuteUbergraph_DoorBase, K2Node_CreateDelegate_OutputDelegate_1) == 0x000034, "Member 'DoorBase_C_ExecuteUbergraph_DoorBase::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(DoorBase_C_ExecuteUbergraph_DoorBase, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000048, "Member 'DoorBase_C_ExecuteUbergraph_DoorBase::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(DoorBase_C_ExecuteUbergraph_DoorBase, Temp_bool_IsClosed_Variable) == 0x000050, "Member 'DoorBase_C_ExecuteUbergraph_DoorBase::Temp_bool_IsClosed_Variable' has a wrong offset!");
static_assert(offsetof(DoorBase_C_ExecuteUbergraph_DoorBase, CallFunc_HasAuthority_ReturnValue) == 0x000051, "Member 'DoorBase_C_ExecuteUbergraph_DoorBase::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(DoorBase_C_ExecuteUbergraph_DoorBase, K2Node_CustomEvent_Alpha) == 0x000058, "Member 'DoorBase_C_ExecuteUbergraph_DoorBase::K2Node_CustomEvent_Alpha' has a wrong offset!");
static_assert(offsetof(DoorBase_C_ExecuteUbergraph_DoorBase, CallFunc_Not_PreBool_ReturnValue) == 0x000060, "Member 'DoorBase_C_ExecuteUbergraph_DoorBase::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(DoorBase_C_ExecuteUbergraph_DoorBase, CallFunc_HasAuthority_ReturnValue_1) == 0x000061, "Member 'DoorBase_C_ExecuteUbergraph_DoorBase::CallFunc_HasAuthority_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(DoorBase_C_ExecuteUbergraph_DoorBase, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000068, "Member 'DoorBase_C_ExecuteUbergraph_DoorBase::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(DoorBase_C_ExecuteUbergraph_DoorBase, CallFunc_GetTeamAtPoint_bFoundTeam) == 0x000080, "Member 'DoorBase_C_ExecuteUbergraph_DoorBase::CallFunc_GetTeamAtPoint_bFoundTeam' has a wrong offset!");
static_assert(offsetof(DoorBase_C_ExecuteUbergraph_DoorBase, CallFunc_GetTeamAtPoint_TeamVolumeGameplayTag) == 0x000084, "Member 'DoorBase_C_ExecuteUbergraph_DoorBase::CallFunc_GetTeamAtPoint_TeamVolumeGameplayTag' has a wrong offset!");
static_assert(offsetof(DoorBase_C_ExecuteUbergraph_DoorBase, CallFunc_GetTeamAtPoint_ReturnValue) == 0x000090, "Member 'DoorBase_C_ExecuteUbergraph_DoorBase::CallFunc_GetTeamAtPoint_ReturnValue' has a wrong offset!");
static_assert(offsetof(DoorBase_C_ExecuteUbergraph_DoorBase, K2Node_DynamicCast_AsTeam_Setter_Interface) == 0x0000C8, "Member 'DoorBase_C_ExecuteUbergraph_DoorBase::K2Node_DynamicCast_AsTeam_Setter_Interface' has a wrong offset!");
static_assert(offsetof(DoorBase_C_ExecuteUbergraph_DoorBase, K2Node_DynamicCast_bSuccess) == 0x0000D8, "Member 'DoorBase_C_ExecuteUbergraph_DoorBase::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(DoorBase_C_ExecuteUbergraph_DoorBase, K2Node_SwitchEnum_CmpSuccess) == 0x0000D9, "Member 'DoorBase_C_ExecuteUbergraph_DoorBase::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(DoorBase_C_ExecuteUbergraph_DoorBase, CallFunc_IsPlaying_ReturnValue) == 0x0000DA, "Member 'DoorBase_C_ExecuteUbergraph_DoorBase::CallFunc_IsPlaying_ReturnValue' has a wrong offset!");
static_assert(offsetof(DoorBase_C_ExecuteUbergraph_DoorBase, K2Node_Event_InteractingActor_1) == 0x0000E0, "Member 'DoorBase_C_ExecuteUbergraph_DoorBase::K2Node_Event_InteractingActor_1' has a wrong offset!");
static_assert(offsetof(DoorBase_C_ExecuteUbergraph_DoorBase, K2Node_Event_InteractionComponent) == 0x0000E8, "Member 'DoorBase_C_ExecuteUbergraph_DoorBase::K2Node_Event_InteractionComponent' has a wrong offset!");
static_assert(offsetof(DoorBase_C_ExecuteUbergraph_DoorBase, CallFunc_IsInteractingActorTeamMember_Return) == 0x0000F0, "Member 'DoorBase_C_ExecuteUbergraph_DoorBase::CallFunc_IsInteractingActorTeamMember_Return' has a wrong offset!");
static_assert(offsetof(DoorBase_C_ExecuteUbergraph_DoorBase, K2Node_DynamicCast_AsBP_Resident_Character) == 0x0000F8, "Member 'DoorBase_C_ExecuteUbergraph_DoorBase::K2Node_DynamicCast_AsBP_Resident_Character' has a wrong offset!");
static_assert(offsetof(DoorBase_C_ExecuteUbergraph_DoorBase, K2Node_DynamicCast_bSuccess_1) == 0x000100, "Member 'DoorBase_C_ExecuteUbergraph_DoorBase::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(DoorBase_C_ExecuteUbergraph_DoorBase, CallFunc_BooleanOR_ReturnValue) == 0x000101, "Member 'DoorBase_C_ExecuteUbergraph_DoorBase::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(DoorBase_C_ExecuteUbergraph_DoorBase, CallFunc_GetController_ReturnValue) == 0x000108, "Member 'DoorBase_C_ExecuteUbergraph_DoorBase::CallFunc_GetController_ReturnValue' has a wrong offset!");
static_assert(offsetof(DoorBase_C_ExecuteUbergraph_DoorBase, K2Node_DynamicCast_AsPlayer_Controller) == 0x000110, "Member 'DoorBase_C_ExecuteUbergraph_DoorBase::K2Node_DynamicCast_AsPlayer_Controller' has a wrong offset!");
static_assert(offsetof(DoorBase_C_ExecuteUbergraph_DoorBase, K2Node_DynamicCast_bSuccess_2) == 0x000118, "Member 'DoorBase_C_ExecuteUbergraph_DoorBase::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(DoorBase_C_ExecuteUbergraph_DoorBase, CallFunc_GetDotProductTo_ReturnValue) == 0x00011C, "Member 'DoorBase_C_ExecuteUbergraph_DoorBase::CallFunc_GetDotProductTo_ReturnValue' has a wrong offset!");
static_assert(offsetof(DoorBase_C_ExecuteUbergraph_DoorBase, K2Node_DynamicCast_AsI_Player_Controller_Message) == 0x000120, "Member 'DoorBase_C_ExecuteUbergraph_DoorBase::K2Node_DynamicCast_AsI_Player_Controller_Message' has a wrong offset!");
static_assert(offsetof(DoorBase_C_ExecuteUbergraph_DoorBase, K2Node_DynamicCast_bSuccess_3) == 0x000130, "Member 'DoorBase_C_ExecuteUbergraph_DoorBase::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(DoorBase_C_ExecuteUbergraph_DoorBase, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000131, "Member 'DoorBase_C_ExecuteUbergraph_DoorBase::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(DoorBase_C_ExecuteUbergraph_DoorBase, CallFunc_Less_DoubleDouble_ReturnValue) == 0x000132, "Member 'DoorBase_C_ExecuteUbergraph_DoorBase::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(DoorBase_C_ExecuteUbergraph_DoorBase, K2Node_MakeStruct_PlayerMessage) == 0x000138, "Member 'DoorBase_C_ExecuteUbergraph_DoorBase::K2Node_MakeStruct_PlayerMessage' has a wrong offset!");
static_assert(offsetof(DoorBase_C_ExecuteUbergraph_DoorBase, CallFunc_ReloadAfterHousesLoaded_Return) == 0x000190, "Member 'DoorBase_C_ExecuteUbergraph_DoorBase::CallFunc_ReloadAfterHousesLoaded_Return' has a wrong offset!");
static_assert(offsetof(DoorBase_C_ExecuteUbergraph_DoorBase, Temp_int_Loop_Counter_Variable_1) == 0x000194, "Member 'DoorBase_C_ExecuteUbergraph_DoorBase::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(DoorBase_C_ExecuteUbergraph_DoorBase, K2Node_CustomEvent_InteractingActor) == 0x000198, "Member 'DoorBase_C_ExecuteUbergraph_DoorBase::K2Node_CustomEvent_InteractingActor' has a wrong offset!");
static_assert(offsetof(DoorBase_C_ExecuteUbergraph_DoorBase, CallFunc_Add_IntInt_ReturnValue_1) == 0x0001A0, "Member 'DoorBase_C_ExecuteUbergraph_DoorBase::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(DoorBase_C_ExecuteUbergraph_DoorBase, CallFunc_HasAuthority_ReturnValue_2) == 0x0001A4, "Member 'DoorBase_C_ExecuteUbergraph_DoorBase::CallFunc_HasAuthority_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(DoorBase_C_ExecuteUbergraph_DoorBase, CallFunc_HasAuthority_ReturnValue_3) == 0x0001A5, "Member 'DoorBase_C_ExecuteUbergraph_DoorBase::CallFunc_HasAuthority_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(DoorBase_C_ExecuteUbergraph_DoorBase, Temp_real_Variable) == 0x0001A8, "Member 'DoorBase_C_ExecuteUbergraph_DoorBase::Temp_real_Variable' has a wrong offset!");
static_assert(offsetof(DoorBase_C_ExecuteUbergraph_DoorBase, K2Node_Select_Default) == 0x0001B0, "Member 'DoorBase_C_ExecuteUbergraph_DoorBase::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(DoorBase_C_ExecuteUbergraph_DoorBase, Temp_real_Variable_1) == 0x0001B8, "Member 'DoorBase_C_ExecuteUbergraph_DoorBase::Temp_real_Variable_1' has a wrong offset!");
static_assert(offsetof(DoorBase_C_ExecuteUbergraph_DoorBase, K2Node_Select_Default_1) == 0x0001C0, "Member 'DoorBase_C_ExecuteUbergraph_DoorBase::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(DoorBase_C_ExecuteUbergraph_DoorBase, K2Node_Event_InteractingActor) == 0x0001C8, "Member 'DoorBase_C_ExecuteUbergraph_DoorBase::K2Node_Event_InteractingActor' has a wrong offset!");
static_assert(offsetof(DoorBase_C_ExecuteUbergraph_DoorBase, CallFunc_K2_AttachToComponent_ReturnValue) == 0x0001D0, "Member 'DoorBase_C_ExecuteUbergraph_DoorBase::CallFunc_K2_AttachToComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(DoorBase_C_ExecuteUbergraph_DoorBase, CallFunc_K2_AttachToComponent_ReturnValue_1) == 0x0001D1, "Member 'DoorBase_C_ExecuteUbergraph_DoorBase::CallFunc_K2_AttachToComponent_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(DoorBase_C_ExecuteUbergraph_DoorBase, CallFunc_K2_AddLocalOffset_SweepHitResult) == 0x0001D8, "Member 'DoorBase_C_ExecuteUbergraph_DoorBase::CallFunc_K2_AddLocalOffset_SweepHitResult' has a wrong offset!");
static_assert(offsetof(DoorBase_C_ExecuteUbergraph_DoorBase, CallFunc_MakeVector_ReturnValue) == 0x0002D0, "Member 'DoorBase_C_ExecuteUbergraph_DoorBase::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(DoorBase_C_ExecuteUbergraph_DoorBase, CallFunc_Add_VectorVector_ReturnValue) == 0x0002E8, "Member 'DoorBase_C_ExecuteUbergraph_DoorBase::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(DoorBase_C_ExecuteUbergraph_DoorBase, CallFunc_K2_AddLocalOffset_SweepHitResult_1) == 0x000300, "Member 'DoorBase_C_ExecuteUbergraph_DoorBase::CallFunc_K2_AddLocalOffset_SweepHitResult_1' has a wrong offset!");
static_assert(offsetof(DoorBase_C_ExecuteUbergraph_DoorBase, K2Node_Event_Delta) == 0x0003F8, "Member 'DoorBase_C_ExecuteUbergraph_DoorBase::K2Node_Event_Delta' has a wrong offset!");
static_assert(offsetof(DoorBase_C_ExecuteUbergraph_DoorBase, K2Node_Event_Causer) == 0x000400, "Member 'DoorBase_C_ExecuteUbergraph_DoorBase::K2Node_Event_Causer' has a wrong offset!");
static_assert(offsetof(DoorBase_C_ExecuteUbergraph_DoorBase, K2Node_Event_CombatParticipant) == 0x000408, "Member 'DoorBase_C_ExecuteUbergraph_DoorBase::K2Node_Event_CombatParticipant' has a wrong offset!");
static_assert(offsetof(DoorBase_C_ExecuteUbergraph_DoorBase, K2Node_Event_KillMethod) == 0x000468, "Member 'DoorBase_C_ExecuteUbergraph_DoorBase::K2Node_Event_KillMethod' has a wrong offset!");
static_assert(offsetof(DoorBase_C_ExecuteUbergraph_DoorBase, K2Node_Event_Location_1) == 0x000750, "Member 'DoorBase_C_ExecuteUbergraph_DoorBase::K2Node_Event_Location_1' has a wrong offset!");
static_assert(offsetof(DoorBase_C_ExecuteUbergraph_DoorBase, CallFunc_GetUserWidgetObject_ReturnValue) == 0x000768, "Member 'DoorBase_C_ExecuteUbergraph_DoorBase::CallFunc_GetUserWidgetObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(DoorBase_C_ExecuteUbergraph_DoorBase, K2Node_Event_Location) == 0x000770, "Member 'DoorBase_C_ExecuteUbergraph_DoorBase::K2Node_Event_Location' has a wrong offset!");
static_assert(offsetof(DoorBase_C_ExecuteUbergraph_DoorBase, K2Node_Event_HitImpulse) == 0x000788, "Member 'DoorBase_C_ExecuteUbergraph_DoorBase::K2Node_Event_HitImpulse' has a wrong offset!");
static_assert(offsetof(DoorBase_C_ExecuteUbergraph_DoorBase, K2Node_Event_ImpactEffect) == 0x0007A0, "Member 'DoorBase_C_ExecuteUbergraph_DoorBase::K2Node_Event_ImpactEffect' has a wrong offset!");
static_assert(offsetof(DoorBase_C_ExecuteUbergraph_DoorBase, K2Node_SwitchEnum_CmpSuccess_1) == 0x0007A1, "Member 'DoorBase_C_ExecuteUbergraph_DoorBase::K2Node_SwitchEnum_CmpSuccess_1' has a wrong offset!");
static_assert(offsetof(DoorBase_C_ExecuteUbergraph_DoorBase, K2Node_Event_Focusing_Actor) == 0x0007A8, "Member 'DoorBase_C_ExecuteUbergraph_DoorBase::K2Node_Event_Focusing_Actor' has a wrong offset!");
static_assert(offsetof(DoorBase_C_ExecuteUbergraph_DoorBase, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x0007B0, "Member 'DoorBase_C_ExecuteUbergraph_DoorBase::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(DoorBase_C_ExecuteUbergraph_DoorBase, CallFunc_K2_GetComponentsByClass_ReturnValue) == 0x0007B8, "Member 'DoorBase_C_ExecuteUbergraph_DoorBase::CallFunc_K2_GetComponentsByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(DoorBase_C_ExecuteUbergraph_DoorBase, CallFunc_Array_Get_Item) == 0x0007C8, "Member 'DoorBase_C_ExecuteUbergraph_DoorBase::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(DoorBase_C_ExecuteUbergraph_DoorBase, CallFunc_Array_Length_ReturnValue) == 0x0007D0, "Member 'DoorBase_C_ExecuteUbergraph_DoorBase::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(DoorBase_C_ExecuteUbergraph_DoorBase, CallFunc_Less_IntInt_ReturnValue) == 0x0007D4, "Member 'DoorBase_C_ExecuteUbergraph_DoorBase::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(DoorBase_C_ExecuteUbergraph_DoorBase, CallFunc_ComponentHasTag_ReturnValue) == 0x0007D5, "Member 'DoorBase_C_ExecuteUbergraph_DoorBase::CallFunc_ComponentHasTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(DoorBase_C_ExecuteUbergraph_DoorBase, CallFunc_HasAuthority_ReturnValue_4) == 0x0007D6, "Member 'DoorBase_C_ExecuteUbergraph_DoorBase::CallFunc_HasAuthority_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(DoorBase_C_ExecuteUbergraph_DoorBase, CallFunc_Array_Get_Item_1) == 0x0007D8, "Member 'DoorBase_C_ExecuteUbergraph_DoorBase::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(DoorBase_C_ExecuteUbergraph_DoorBase, CallFunc_Array_Length_ReturnValue_1) == 0x0007E0, "Member 'DoorBase_C_ExecuteUbergraph_DoorBase::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(DoorBase_C_ExecuteUbergraph_DoorBase, CallFunc_IsValid_ReturnValue_1) == 0x0007E4, "Member 'DoorBase_C_ExecuteUbergraph_DoorBase::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(DoorBase_C_ExecuteUbergraph_DoorBase, CallFunc_Less_IntInt_ReturnValue_1) == 0x0007E5, "Member 'DoorBase_C_ExecuteUbergraph_DoorBase::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(DoorBase_C_ExecuteUbergraph_DoorBase, CallFunc_GetFloatAttributeFromAbilitySystemComponent_bSuccessfullyFoundAttribute) == 0x0007E6, "Member 'DoorBase_C_ExecuteUbergraph_DoorBase::CallFunc_GetFloatAttributeFromAbilitySystemComponent_bSuccessfullyFoundAttribute' has a wrong offset!");
static_assert(offsetof(DoorBase_C_ExecuteUbergraph_DoorBase, CallFunc_GetFloatAttributeFromAbilitySystemComponent_ReturnValue) == 0x0007E8, "Member 'DoorBase_C_ExecuteUbergraph_DoorBase::CallFunc_GetFloatAttributeFromAbilitySystemComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(DoorBase_C_ExecuteUbergraph_DoorBase, CallFunc_Greater_DoubleDouble_ReturnValue_1) == 0x0007EC, "Member 'DoorBase_C_ExecuteUbergraph_DoorBase::CallFunc_Greater_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(DoorBase_C_ExecuteUbergraph_DoorBase, CallFunc_Less_DoubleDouble_A_ImplicitCast) == 0x0007F0, "Member 'DoorBase_C_ExecuteUbergraph_DoorBase::CallFunc_Less_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(DoorBase_C_ExecuteUbergraph_DoorBase, CallFunc_Greater_DoubleDouble_A_ImplicitCast) == 0x0007F8, "Member 'DoorBase_C_ExecuteUbergraph_DoorBase::CallFunc_Greater_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(DoorBase_C_ExecuteUbergraph_DoorBase, CallFunc_SetPlayRate_NewRate_ImplicitCast) == 0x000800, "Member 'DoorBase_C_ExecuteUbergraph_DoorBase::CallFunc_SetPlayRate_NewRate_ImplicitCast' has a wrong offset!");
static_assert(offsetof(DoorBase_C_ExecuteUbergraph_DoorBase, CallFunc_Update_Alpha_Alpha_ImplicitCast) == 0x000808, "Member 'DoorBase_C_ExecuteUbergraph_DoorBase::CallFunc_Update_Alpha_Alpha_ImplicitCast' has a wrong offset!");
static_assert(offsetof(DoorBase_C_ExecuteUbergraph_DoorBase, CallFunc_Greater_DoubleDouble_A_ImplicitCast_1) == 0x000810, "Member 'DoorBase_C_ExecuteUbergraph_DoorBase::CallFunc_Greater_DoubleDouble_A_ImplicitCast_1' has a wrong offset!");

// Function DoorBase.DoorBase_C.GetCenterLocation
// 0x0030 (0x0030 - 0x0000)
struct DoorBase_C_GetCenterLocation final
{
public:
	struct FVector                                Location;                                          // 0x0000(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0018(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(DoorBase_C_GetCenterLocation) == 0x000008, "Wrong alignment on DoorBase_C_GetCenterLocation");
static_assert(sizeof(DoorBase_C_GetCenterLocation) == 0x000030, "Wrong size on DoorBase_C_GetCenterLocation");
static_assert(offsetof(DoorBase_C_GetCenterLocation, Location) == 0x000000, "Member 'DoorBase_C_GetCenterLocation::Location' has a wrong offset!");
static_assert(offsetof(DoorBase_C_GetCenterLocation, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000018, "Member 'DoorBase_C_GetCenterLocation::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");

// Function DoorBase.DoorBase_C.GetInteractableLockedCosmetics
// 0x0001 (0x0001 - 0x0000)
struct DoorBase_C_GetInteractableLockedCosmetics final
{
public:
	bool                                          Return;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(DoorBase_C_GetInteractableLockedCosmetics) == 0x000001, "Wrong alignment on DoorBase_C_GetInteractableLockedCosmetics");
static_assert(sizeof(DoorBase_C_GetInteractableLockedCosmetics) == 0x000001, "Wrong size on DoorBase_C_GetInteractableLockedCosmetics");
static_assert(offsetof(DoorBase_C_GetInteractableLockedCosmetics, Return) == 0x000000, "Member 'DoorBase_C_GetInteractableLockedCosmetics::Return' has a wrong offset!");

// Function DoorBase.DoorBase_C.ImpactBounce
// 0x0030 (0x0030 - 0x0000)
struct DoorBase_C_ImpactBounce final
{
public:
	struct FVector                                HitLocation;                                       // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                HitImpact;                                         // 0x0018(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(DoorBase_C_ImpactBounce) == 0x000008, "Wrong alignment on DoorBase_C_ImpactBounce");
static_assert(sizeof(DoorBase_C_ImpactBounce) == 0x000030, "Wrong size on DoorBase_C_ImpactBounce");
static_assert(offsetof(DoorBase_C_ImpactBounce, HitLocation) == 0x000000, "Member 'DoorBase_C_ImpactBounce::HitLocation' has a wrong offset!");
static_assert(offsetof(DoorBase_C_ImpactBounce, HitImpact) == 0x000018, "Member 'DoorBase_C_ImpactBounce::HitImpact' has a wrong offset!");

// Function DoorBase.DoorBase_C.IsActorSameTeam
// 0x0040 (0x0040 - 0x0000)
struct DoorBase_C_IsActorSameTeam final
{
public:
	class UObject*                                FocusingActor;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Temp_byte_Variable;                                // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A[0x6];                                        // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class ITeamableInterface>    K2Node_DynamicCast_AsTeamable_Interface;           // 0x0010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetTeamID_ReturnValue;                    // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Temp_byte_Variable_1;                              // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0023(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class ITeamableInterface>    K2Node_DynamicCast_AsTeamable_Interface_1;         // 0x0028(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetTeamID_ReturnValue_1;                  // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(DoorBase_C_IsActorSameTeam) == 0x000008, "Wrong alignment on DoorBase_C_IsActorSameTeam");
static_assert(sizeof(DoorBase_C_IsActorSameTeam) == 0x000040, "Wrong size on DoorBase_C_IsActorSameTeam");
static_assert(offsetof(DoorBase_C_IsActorSameTeam, FocusingActor) == 0x000000, "Member 'DoorBase_C_IsActorSameTeam::FocusingActor' has a wrong offset!");
static_assert(offsetof(DoorBase_C_IsActorSameTeam, ReturnValue) == 0x000008, "Member 'DoorBase_C_IsActorSameTeam::ReturnValue' has a wrong offset!");
static_assert(offsetof(DoorBase_C_IsActorSameTeam, Temp_byte_Variable) == 0x000009, "Member 'DoorBase_C_IsActorSameTeam::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(DoorBase_C_IsActorSameTeam, K2Node_DynamicCast_AsTeamable_Interface) == 0x000010, "Member 'DoorBase_C_IsActorSameTeam::K2Node_DynamicCast_AsTeamable_Interface' has a wrong offset!");
static_assert(offsetof(DoorBase_C_IsActorSameTeam, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'DoorBase_C_IsActorSameTeam::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(DoorBase_C_IsActorSameTeam, CallFunc_GetTeamID_ReturnValue) == 0x000021, "Member 'DoorBase_C_IsActorSameTeam::CallFunc_GetTeamID_ReturnValue' has a wrong offset!");
static_assert(offsetof(DoorBase_C_IsActorSameTeam, Temp_byte_Variable_1) == 0x000022, "Member 'DoorBase_C_IsActorSameTeam::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(DoorBase_C_IsActorSameTeam, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000023, "Member 'DoorBase_C_IsActorSameTeam::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(DoorBase_C_IsActorSameTeam, K2Node_DynamicCast_AsTeamable_Interface_1) == 0x000028, "Member 'DoorBase_C_IsActorSameTeam::K2Node_DynamicCast_AsTeamable_Interface_1' has a wrong offset!");
static_assert(offsetof(DoorBase_C_IsActorSameTeam, K2Node_DynamicCast_bSuccess_1) == 0x000038, "Member 'DoorBase_C_IsActorSameTeam::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(DoorBase_C_IsActorSameTeam, CallFunc_GetTeamID_ReturnValue_1) == 0x000039, "Member 'DoorBase_C_IsActorSameTeam::CallFunc_GetTeamID_ReturnValue_1' has a wrong offset!");

// Function DoorBase.DoorBase_C.IsInteractingActorTeamMember
// 0x00D8 (0x00D8 - 0x0000)
struct DoorBase_C_IsInteractingActorTeamMember final
{
public:
	class AActor*                                 Actor;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Return;                                            // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTeam                                  Temp_struct_Variable;                              // 0x0010(0x0038)(NoDestructor)
	TScriptInterface<class ITeamableInterface>    K2Node_DynamicCast_AsTeamable_Interface;           // 0x0048(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTeam                                  CallFunc_GetTeam_ReturnValue;                      // 0x0060(0x0038)(NoDestructor)
	struct FTeam                                  CallFunc_GetTeam_ReturnValue_1;                    // 0x0098(0x0038)(ConstParm, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(DoorBase_C_IsInteractingActorTeamMember) == 0x000008, "Wrong alignment on DoorBase_C_IsInteractingActorTeamMember");
static_assert(sizeof(DoorBase_C_IsInteractingActorTeamMember) == 0x0000D8, "Wrong size on DoorBase_C_IsInteractingActorTeamMember");
static_assert(offsetof(DoorBase_C_IsInteractingActorTeamMember, Actor) == 0x000000, "Member 'DoorBase_C_IsInteractingActorTeamMember::Actor' has a wrong offset!");
static_assert(offsetof(DoorBase_C_IsInteractingActorTeamMember, Return) == 0x000008, "Member 'DoorBase_C_IsInteractingActorTeamMember::Return' has a wrong offset!");
static_assert(offsetof(DoorBase_C_IsInteractingActorTeamMember, Temp_struct_Variable) == 0x000010, "Member 'DoorBase_C_IsInteractingActorTeamMember::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(DoorBase_C_IsInteractingActorTeamMember, K2Node_DynamicCast_AsTeamable_Interface) == 0x000048, "Member 'DoorBase_C_IsInteractingActorTeamMember::K2Node_DynamicCast_AsTeamable_Interface' has a wrong offset!");
static_assert(offsetof(DoorBase_C_IsInteractingActorTeamMember, K2Node_DynamicCast_bSuccess) == 0x000058, "Member 'DoorBase_C_IsInteractingActorTeamMember::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(DoorBase_C_IsInteractingActorTeamMember, CallFunc_GetTeam_ReturnValue) == 0x000060, "Member 'DoorBase_C_IsInteractingActorTeamMember::CallFunc_GetTeam_ReturnValue' has a wrong offset!");
static_assert(offsetof(DoorBase_C_IsInteractingActorTeamMember, CallFunc_GetTeam_ReturnValue_1) == 0x000098, "Member 'DoorBase_C_IsInteractingActorTeamMember::CallFunc_GetTeam_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(DoorBase_C_IsInteractingActorTeamMember, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x0000D0, "Member 'DoorBase_C_IsInteractingActorTeamMember::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function DoorBase.DoorBase_C.IsLockedToPlayer
// 0x0028 (0x0028 - 0x0000)
struct DoorBase_C_IsLockedToPlayer final
{
public:
	const class AActor*                           FocusingActor;                                     // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetDotProductTo_ReturnValue;              // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsActorSameTeam_ReturnValue;              // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x000E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x000F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Select_Default;                             // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0013(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Greater_DoubleDouble_A_ImplicitCast;      // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Less_DoubleDouble_A_ImplicitCast;         // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(DoorBase_C_IsLockedToPlayer) == 0x000008, "Wrong alignment on DoorBase_C_IsLockedToPlayer");
static_assert(sizeof(DoorBase_C_IsLockedToPlayer) == 0x000028, "Wrong size on DoorBase_C_IsLockedToPlayer");
static_assert(offsetof(DoorBase_C_IsLockedToPlayer, FocusingActor) == 0x000000, "Member 'DoorBase_C_IsLockedToPlayer::FocusingActor' has a wrong offset!");
static_assert(offsetof(DoorBase_C_IsLockedToPlayer, CallFunc_GetDotProductTo_ReturnValue) == 0x000008, "Member 'DoorBase_C_IsLockedToPlayer::CallFunc_GetDotProductTo_ReturnValue' has a wrong offset!");
static_assert(offsetof(DoorBase_C_IsLockedToPlayer, CallFunc_IsActorSameTeam_ReturnValue) == 0x00000C, "Member 'DoorBase_C_IsLockedToPlayer::CallFunc_IsActorSameTeam_ReturnValue' has a wrong offset!");
static_assert(offsetof(DoorBase_C_IsLockedToPlayer, CallFunc_Less_DoubleDouble_ReturnValue) == 0x00000D, "Member 'DoorBase_C_IsLockedToPlayer::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(DoorBase_C_IsLockedToPlayer, CallFunc_Not_PreBool_ReturnValue) == 0x00000E, "Member 'DoorBase_C_IsLockedToPlayer::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(DoorBase_C_IsLockedToPlayer, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x00000F, "Member 'DoorBase_C_IsLockedToPlayer::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(DoorBase_C_IsLockedToPlayer, Temp_bool_Variable) == 0x000010, "Member 'DoorBase_C_IsLockedToPlayer::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(DoorBase_C_IsLockedToPlayer, K2Node_Select_Default) == 0x000011, "Member 'DoorBase_C_IsLockedToPlayer::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(DoorBase_C_IsLockedToPlayer, CallFunc_Not_PreBool_ReturnValue_1) == 0x000012, "Member 'DoorBase_C_IsLockedToPlayer::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(DoorBase_C_IsLockedToPlayer, CallFunc_BooleanAND_ReturnValue) == 0x000013, "Member 'DoorBase_C_IsLockedToPlayer::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(DoorBase_C_IsLockedToPlayer, CallFunc_Greater_DoubleDouble_A_ImplicitCast) == 0x000018, "Member 'DoorBase_C_IsLockedToPlayer::CallFunc_Greater_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(DoorBase_C_IsLockedToPlayer, CallFunc_Less_DoubleDouble_A_ImplicitCast) == 0x000020, "Member 'DoorBase_C_IsLockedToPlayer::CallFunc_Less_DoubleDouble_A_ImplicitCast' has a wrong offset!");

// Function DoorBase.DoorBase_C.Leloi_Interact
// 0x0008 (0x0008 - 0x0000)
struct DoorBase_C_Leloi_Interact final
{
public:
	class AActor*                                 InteractingActor;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(DoorBase_C_Leloi_Interact) == 0x000008, "Wrong alignment on DoorBase_C_Leloi_Interact");
static_assert(sizeof(DoorBase_C_Leloi_Interact) == 0x000008, "Wrong size on DoorBase_C_Leloi_Interact");
static_assert(offsetof(DoorBase_C_Leloi_Interact, InteractingActor) == 0x000000, "Member 'DoorBase_C_Leloi_Interact::InteractingActor' has a wrong offset!");

// Function DoorBase.DoorBase_C.OnOpen__DelegateSignature
// 0x0001 (0x0001 - 0x0000)
struct DoorBase_C_OnOpen__DelegateSignature final
{
public:
	bool                                          Open_0;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(DoorBase_C_OnOpen__DelegateSignature) == 0x000001, "Wrong alignment on DoorBase_C_OnOpen__DelegateSignature");
static_assert(sizeof(DoorBase_C_OnOpen__DelegateSignature) == 0x000001, "Wrong size on DoorBase_C_OnOpen__DelegateSignature");
static_assert(offsetof(DoorBase_C_OnOpen__DelegateSignature, Open_0) == 0x000000, "Member 'DoorBase_C_OnOpen__DelegateSignature::Open_0' has a wrong offset!");

// Function DoorBase.DoorBase_C.OnRep_CollisionEnabledImplementation
// 0x0038 (0x0038 - 0x0000)
struct DoorBase_C_OnRep_CollisionEnabledImplementation final
{
public:
	bool                                          Temp_bool_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECollisionEnabled                             Temp_byte_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECollisionEnabled                             Temp_byte_Variable_1;                              // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3[0x1];                                        // 0x0003(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UStaticMeshComponent*>           CallFunc_K2_GetComponentsByClass_ReturnValue;      // 0x0010(0x0010)(ReferenceParm, ContainsInstancedReference)
	class UStaticMeshComponent*                   CallFunc_Array_Get_Item;                           // 0x0020(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	ECollisionEnabled                             K2Node_Select_Default;                             // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(DoorBase_C_OnRep_CollisionEnabledImplementation) == 0x000008, "Wrong alignment on DoorBase_C_OnRep_CollisionEnabledImplementation");
static_assert(sizeof(DoorBase_C_OnRep_CollisionEnabledImplementation) == 0x000038, "Wrong size on DoorBase_C_OnRep_CollisionEnabledImplementation");
static_assert(offsetof(DoorBase_C_OnRep_CollisionEnabledImplementation, Temp_bool_Variable) == 0x000000, "Member 'DoorBase_C_OnRep_CollisionEnabledImplementation::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(DoorBase_C_OnRep_CollisionEnabledImplementation, Temp_byte_Variable) == 0x000001, "Member 'DoorBase_C_OnRep_CollisionEnabledImplementation::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(DoorBase_C_OnRep_CollisionEnabledImplementation, Temp_byte_Variable_1) == 0x000002, "Member 'DoorBase_C_OnRep_CollisionEnabledImplementation::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(DoorBase_C_OnRep_CollisionEnabledImplementation, Temp_int_Array_Index_Variable) == 0x000004, "Member 'DoorBase_C_OnRep_CollisionEnabledImplementation::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(DoorBase_C_OnRep_CollisionEnabledImplementation, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'DoorBase_C_OnRep_CollisionEnabledImplementation::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(DoorBase_C_OnRep_CollisionEnabledImplementation, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'DoorBase_C_OnRep_CollisionEnabledImplementation::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(DoorBase_C_OnRep_CollisionEnabledImplementation, CallFunc_K2_GetComponentsByClass_ReturnValue) == 0x000010, "Member 'DoorBase_C_OnRep_CollisionEnabledImplementation::CallFunc_K2_GetComponentsByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(DoorBase_C_OnRep_CollisionEnabledImplementation, CallFunc_Array_Get_Item) == 0x000020, "Member 'DoorBase_C_OnRep_CollisionEnabledImplementation::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(DoorBase_C_OnRep_CollisionEnabledImplementation, K2Node_Select_Default) == 0x000028, "Member 'DoorBase_C_OnRep_CollisionEnabledImplementation::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(DoorBase_C_OnRep_CollisionEnabledImplementation, CallFunc_Array_Length_ReturnValue) == 0x00002C, "Member 'DoorBase_C_OnRep_CollisionEnabledImplementation::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(DoorBase_C_OnRep_CollisionEnabledImplementation, CallFunc_Less_IntInt_ReturnValue) == 0x000030, "Member 'DoorBase_C_OnRep_CollisionEnabledImplementation::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function DoorBase.DoorBase_C.OnRep_Open
// 0x0038 (0x0038 - 0x0000)
struct DoorBase_C_OnRep_Open final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0004(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0018(0x0008)(NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMeshComponent*                         CallFunc_Array_Get_Item;                           // 0x0028(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0035(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(DoorBase_C_OnRep_Open) == 0x000008, "Wrong alignment on DoorBase_C_OnRep_Open");
static_assert(sizeof(DoorBase_C_OnRep_Open) == 0x000038, "Wrong size on DoorBase_C_OnRep_Open");
static_assert(offsetof(DoorBase_C_OnRep_Open, Temp_int_Array_Index_Variable) == 0x000000, "Member 'DoorBase_C_OnRep_Open::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(DoorBase_C_OnRep_Open, K2Node_CreateDelegate_OutputDelegate) == 0x000004, "Member 'DoorBase_C_OnRep_Open::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(DoorBase_C_OnRep_Open, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000018, "Member 'DoorBase_C_OnRep_Open::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(DoorBase_C_OnRep_Open, Temp_int_Loop_Counter_Variable) == 0x000020, "Member 'DoorBase_C_OnRep_Open::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(DoorBase_C_OnRep_Open, CallFunc_Add_IntInt_ReturnValue) == 0x000024, "Member 'DoorBase_C_OnRep_Open::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(DoorBase_C_OnRep_Open, CallFunc_Array_Get_Item) == 0x000028, "Member 'DoorBase_C_OnRep_Open::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(DoorBase_C_OnRep_Open, CallFunc_Array_Length_ReturnValue) == 0x000030, "Member 'DoorBase_C_OnRep_Open::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(DoorBase_C_OnRep_Open, CallFunc_IsValid_ReturnValue) == 0x000034, "Member 'DoorBase_C_OnRep_Open::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(DoorBase_C_OnRep_Open, CallFunc_Less_IntInt_ReturnValue) == 0x000035, "Member 'DoorBase_C_OnRep_Open::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function DoorBase.DoorBase_C.PingTeamOnDestruction
// 0x0030 (0x0030 - 0x0000)
struct DoorBase_C_PingTeamOnDestruction final
{
public:
	TArray<class APlayerControllerJP*>            CallFunc_GetPlayerControllersOfTeam_ReturnValue;   // 0x0000(0x0010)(ReferenceParm)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerControllerJP*                    CallFunc_Array_Get_Item;                           // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APlayerControllerJP_MatchBP_C*          K2Node_DynamicCast_AsPlayer_Controller_JP_Match_BP; // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(DoorBase_C_PingTeamOnDestruction) == 0x000008, "Wrong alignment on DoorBase_C_PingTeamOnDestruction");
static_assert(sizeof(DoorBase_C_PingTeamOnDestruction) == 0x000030, "Wrong size on DoorBase_C_PingTeamOnDestruction");
static_assert(offsetof(DoorBase_C_PingTeamOnDestruction, CallFunc_GetPlayerControllersOfTeam_ReturnValue) == 0x000000, "Member 'DoorBase_C_PingTeamOnDestruction::CallFunc_GetPlayerControllersOfTeam_ReturnValue' has a wrong offset!");
static_assert(offsetof(DoorBase_C_PingTeamOnDestruction, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000010, "Member 'DoorBase_C_PingTeamOnDestruction::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(DoorBase_C_PingTeamOnDestruction, CallFunc_Array_Get_Item) == 0x000018, "Member 'DoorBase_C_PingTeamOnDestruction::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(DoorBase_C_PingTeamOnDestruction, K2Node_DynamicCast_AsPlayer_Controller_JP_Match_BP) == 0x000020, "Member 'DoorBase_C_PingTeamOnDestruction::K2Node_DynamicCast_AsPlayer_Controller_JP_Match_BP' has a wrong offset!");
static_assert(offsetof(DoorBase_C_PingTeamOnDestruction, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'DoorBase_C_PingTeamOnDestruction::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function DoorBase.DoorBase_C.SpawnDestroyedDoor
// 0x0090 (0x0090 - 0x0000)
struct DoorBase_C_SpawnDestroyedDoor final
{
public:
	struct FTransform                             CallFunc_K2_GetComponentToWorld_ReturnValue;       // 0x0000(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0060(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x0078(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_MainDoor_Destroyed_C*               CallFunc_FinishSpawningActor_ReturnValue;          // 0x0080(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(DoorBase_C_SpawnDestroyedDoor) == 0x000010, "Wrong alignment on DoorBase_C_SpawnDestroyedDoor");
static_assert(sizeof(DoorBase_C_SpawnDestroyedDoor) == 0x000090, "Wrong size on DoorBase_C_SpawnDestroyedDoor");
static_assert(offsetof(DoorBase_C_SpawnDestroyedDoor, CallFunc_K2_GetComponentToWorld_ReturnValue) == 0x000000, "Member 'DoorBase_C_SpawnDestroyedDoor::CallFunc_K2_GetComponentToWorld_ReturnValue' has a wrong offset!");
static_assert(offsetof(DoorBase_C_SpawnDestroyedDoor, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000060, "Member 'DoorBase_C_SpawnDestroyedDoor::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(DoorBase_C_SpawnDestroyedDoor, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x000078, "Member 'DoorBase_C_SpawnDestroyedDoor::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(DoorBase_C_SpawnDestroyedDoor, CallFunc_FinishSpawningActor_ReturnValue) == 0x000080, "Member 'DoorBase_C_SpawnDestroyedDoor::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");

// Function DoorBase.DoorBase_C.ToggleCollision
// 0x0028 (0x0028 - 0x0000)
struct DoorBase_C_ToggleCollision final
{
public:
	bool                                          CollisionOn;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECollisionEnabled                             Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECollisionEnabled                             Temp_byte_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UStaticMeshComponent*>           CallFunc_K2_GetComponentsByClass_ReturnValue;      // 0x0008(0x0010)(ReferenceParm, ContainsInstancedReference)
	ECollisionEnabled                             K2Node_Select_Default;                             // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UStaticMeshComponent*                   CallFunc_Array_Get_Item;                           // 0x0020(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(DoorBase_C_ToggleCollision) == 0x000008, "Wrong alignment on DoorBase_C_ToggleCollision");
static_assert(sizeof(DoorBase_C_ToggleCollision) == 0x000028, "Wrong size on DoorBase_C_ToggleCollision");
static_assert(offsetof(DoorBase_C_ToggleCollision, CollisionOn) == 0x000000, "Member 'DoorBase_C_ToggleCollision::CollisionOn' has a wrong offset!");
static_assert(offsetof(DoorBase_C_ToggleCollision, Temp_bool_Variable) == 0x000001, "Member 'DoorBase_C_ToggleCollision::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(DoorBase_C_ToggleCollision, Temp_byte_Variable) == 0x000002, "Member 'DoorBase_C_ToggleCollision::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(DoorBase_C_ToggleCollision, Temp_byte_Variable_1) == 0x000003, "Member 'DoorBase_C_ToggleCollision::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(DoorBase_C_ToggleCollision, CallFunc_K2_GetComponentsByClass_ReturnValue) == 0x000008, "Member 'DoorBase_C_ToggleCollision::CallFunc_K2_GetComponentsByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(DoorBase_C_ToggleCollision, K2Node_Select_Default) == 0x000018, "Member 'DoorBase_C_ToggleCollision::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(DoorBase_C_ToggleCollision, CallFunc_Array_Get_Item) == 0x000020, "Member 'DoorBase_C_ToggleCollision::CallFunc_Array_Get_Item' has a wrong offset!");

// Function DoorBase.DoorBase_C.Update Alpha
// 0x0008 (0x0008 - 0x0000)
struct DoorBase_C_Update_Alpha final
{
public:
	double                                        Alpha;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(DoorBase_C_Update_Alpha) == 0x000008, "Wrong alignment on DoorBase_C_Update_Alpha");
static_assert(sizeof(DoorBase_C_Update_Alpha) == 0x000008, "Wrong size on DoorBase_C_Update_Alpha");
static_assert(offsetof(DoorBase_C_Update_Alpha, Alpha) == 0x000000, "Member 'DoorBase_C_Update_Alpha::Alpha' has a wrong offset!");

// Function DoorBase.DoorBase_C.GetWidgetLocation
// 0x0030 (0x0030 - 0x0000)
struct DoorBase_C_GetWidgetLocation final
{
public:
	struct FVector                                Location;                                          // 0x0000(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0018(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(DoorBase_C_GetWidgetLocation) == 0x000008, "Wrong alignment on DoorBase_C_GetWidgetLocation");
static_assert(sizeof(DoorBase_C_GetWidgetLocation) == 0x000030, "Wrong size on DoorBase_C_GetWidgetLocation");
static_assert(offsetof(DoorBase_C_GetWidgetLocation, Location) == 0x000000, "Member 'DoorBase_C_GetWidgetLocation::Location' has a wrong offset!");
static_assert(offsetof(DoorBase_C_GetWidgetLocation, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000018, "Member 'DoorBase_C_GetWidgetLocation::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");

// Function DoorBase.DoorBase_C.House Actor Impact Cosmetics
// 0x0038 (0x0038 - 0x0000)
struct DoorBase_C_House_Actor_Impact_Cosmetics final
{
public:
	struct FVector                                Location;                                          // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                HitImpulse;                                        // 0x0018(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_ImpactEffect                                ImpactEffect;                                      // 0x0030(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(DoorBase_C_House_Actor_Impact_Cosmetics) == 0x000008, "Wrong alignment on DoorBase_C_House_Actor_Impact_Cosmetics");
static_assert(sizeof(DoorBase_C_House_Actor_Impact_Cosmetics) == 0x000038, "Wrong size on DoorBase_C_House_Actor_Impact_Cosmetics");
static_assert(offsetof(DoorBase_C_House_Actor_Impact_Cosmetics, Location) == 0x000000, "Member 'DoorBase_C_House_Actor_Impact_Cosmetics::Location' has a wrong offset!");
static_assert(offsetof(DoorBase_C_House_Actor_Impact_Cosmetics, HitImpulse) == 0x000018, "Member 'DoorBase_C_House_Actor_Impact_Cosmetics::HitImpulse' has a wrong offset!");
static_assert(offsetof(DoorBase_C_House_Actor_Impact_Cosmetics, ImpactEffect) == 0x000030, "Member 'DoorBase_C_House_Actor_Impact_Cosmetics::ImpactEffect' has a wrong offset!");

// Function DoorBase.DoorBase_C.IsInFocus
// 0x0008 (0x0008 - 0x0000)
struct DoorBase_C_IsInFocus final
{
public:
	class AActor*                                 Focusing_Actor;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(DoorBase_C_IsInFocus) == 0x000008, "Wrong alignment on DoorBase_C_IsInFocus");
static_assert(sizeof(DoorBase_C_IsInFocus) == 0x000008, "Wrong size on DoorBase_C_IsInFocus");
static_assert(offsetof(DoorBase_C_IsInFocus, Focusing_Actor) == 0x000000, "Member 'DoorBase_C_IsInFocus::Focusing_Actor' has a wrong offset!");

// Function DoorBase.DoorBase_C.OnDamaged
// 0x0370 (0x0370 - 0x0000)
struct DoorBase_C_OnDamaged final
{
public:
	float                                         Delta;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 Causer;                                            // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FCombatParticipant                     CombatParticipant;                                 // 0x0010(0x0060)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm)
	struct FKillMethod                            KillMethod;                                        // 0x0070(0x02E8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm)
	struct FVector_NetQuantize                    Location;                                          // 0x0358(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(DoorBase_C_OnDamaged) == 0x000008, "Wrong alignment on DoorBase_C_OnDamaged");
static_assert(sizeof(DoorBase_C_OnDamaged) == 0x000370, "Wrong size on DoorBase_C_OnDamaged");
static_assert(offsetof(DoorBase_C_OnDamaged, Delta) == 0x000000, "Member 'DoorBase_C_OnDamaged::Delta' has a wrong offset!");
static_assert(offsetof(DoorBase_C_OnDamaged, Causer) == 0x000008, "Member 'DoorBase_C_OnDamaged::Causer' has a wrong offset!");
static_assert(offsetof(DoorBase_C_OnDamaged, CombatParticipant) == 0x000010, "Member 'DoorBase_C_OnDamaged::CombatParticipant' has a wrong offset!");
static_assert(offsetof(DoorBase_C_OnDamaged, KillMethod) == 0x000070, "Member 'DoorBase_C_OnDamaged::KillMethod' has a wrong offset!");
static_assert(offsetof(DoorBase_C_OnDamaged, Location) == 0x000358, "Member 'DoorBase_C_OnDamaged::Location' has a wrong offset!");

// Function DoorBase.DoorBase_C.PostInteract
// 0x0010 (0x0010 - 0x0000)
struct DoorBase_C_PostInteract final
{
public:
	class AActor*                                 InteractingActor;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    InteractionComponent;                              // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(DoorBase_C_PostInteract) == 0x000008, "Wrong alignment on DoorBase_C_PostInteract");
static_assert(sizeof(DoorBase_C_PostInteract) == 0x000010, "Wrong size on DoorBase_C_PostInteract");
static_assert(offsetof(DoorBase_C_PostInteract, InteractingActor) == 0x000000, "Member 'DoorBase_C_PostInteract::InteractingActor' has a wrong offset!");
static_assert(offsetof(DoorBase_C_PostInteract, InteractionComponent) == 0x000008, "Member 'DoorBase_C_PostInteract::InteractionComponent' has a wrong offset!");

// Function DoorBase.DoorBase_C.ReloadAfterHousesLoaded
// 0x0001 (0x0001 - 0x0000)
struct DoorBase_C_ReloadAfterHousesLoaded final
{
public:
	bool                                          Return;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(DoorBase_C_ReloadAfterHousesLoaded) == 0x000001, "Wrong alignment on DoorBase_C_ReloadAfterHousesLoaded");
static_assert(sizeof(DoorBase_C_ReloadAfterHousesLoaded) == 0x000001, "Wrong size on DoorBase_C_ReloadAfterHousesLoaded");
static_assert(offsetof(DoorBase_C_ReloadAfterHousesLoaded, Return) == 0x000000, "Member 'DoorBase_C_ReloadAfterHousesLoaded::Return' has a wrong offset!");

// Function DoorBase.DoorBase_C.GetTeamID
// 0x0018 (0x0018 - 0x0000)
struct DoorBase_C_GetTeamID final
{
public:
	uint8                                         ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AGroundsKeeper*                         CallFunc_GetGroundsKeeper_ReturnValue;             // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetTeamID_ReturnValue;                    // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(DoorBase_C_GetTeamID) == 0x000008, "Wrong alignment on DoorBase_C_GetTeamID");
static_assert(sizeof(DoorBase_C_GetTeamID) == 0x000018, "Wrong size on DoorBase_C_GetTeamID");
static_assert(offsetof(DoorBase_C_GetTeamID, ReturnValue) == 0x000000, "Member 'DoorBase_C_GetTeamID::ReturnValue' has a wrong offset!");
static_assert(offsetof(DoorBase_C_GetTeamID, CallFunc_GetGroundsKeeper_ReturnValue) == 0x000008, "Member 'DoorBase_C_GetTeamID::CallFunc_GetGroundsKeeper_ReturnValue' has a wrong offset!");
static_assert(offsetof(DoorBase_C_GetTeamID, CallFunc_GetTeamID_ReturnValue) == 0x000010, "Member 'DoorBase_C_GetTeamID::CallFunc_GetTeamID_ReturnValue' has a wrong offset!");

// Function DoorBase.DoorBase_C.IsAvailableForInteraction
// 0x0018 (0x0018 - 0x0000)
struct DoorBase_C_IsAvailableForInteraction final
{
public:
	class AActor*                                 InteractingActor;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    InteractionComponent;                              // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(DoorBase_C_IsAvailableForInteraction) == 0x000008, "Wrong alignment on DoorBase_C_IsAvailableForInteraction");
static_assert(sizeof(DoorBase_C_IsAvailableForInteraction) == 0x000018, "Wrong size on DoorBase_C_IsAvailableForInteraction");
static_assert(offsetof(DoorBase_C_IsAvailableForInteraction, InteractingActor) == 0x000000, "Member 'DoorBase_C_IsAvailableForInteraction::InteractingActor' has a wrong offset!");
static_assert(offsetof(DoorBase_C_IsAvailableForInteraction, InteractionComponent) == 0x000008, "Member 'DoorBase_C_IsAvailableForInteraction::InteractionComponent' has a wrong offset!");
static_assert(offsetof(DoorBase_C_IsAvailableForInteraction, ReturnValue) == 0x000010, "Member 'DoorBase_C_IsAvailableForInteraction::ReturnValue' has a wrong offset!");
static_assert(offsetof(DoorBase_C_IsAvailableForInteraction, CallFunc_Not_PreBool_ReturnValue) == 0x000011, "Member 'DoorBase_C_IsAvailableForInteraction::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

}

