#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WI_VoiceChatTeammate

#include "Basic.hpp"

#include "UMG_structs.hpp"


namespace SDK::Params
{

// Function WI_VoiceChatTeammate.WI_VoiceChatTeammate_C.ExecuteUbergraph_WI_VoiceChatTeammate
// 0x0004 (0x0004 - 0x0000)
struct WI_VoiceChatTeammate_C_ExecuteUbergraph_WI_VoiceChatTeammate final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WI_VoiceChatTeammate_C_ExecuteUbergraph_WI_VoiceChatTeammate) == 0x000004, "Wrong alignment on WI_VoiceChatTeammate_C_ExecuteUbergraph_WI_VoiceChatTeammate");
static_assert(sizeof(WI_VoiceChatTeammate_C_ExecuteUbergraph_WI_VoiceChatTeammate) == 0x000004, "Wrong size on WI_VoiceChatTeammate_C_ExecuteUbergraph_WI_VoiceChatTeammate");
static_assert(offsetof(WI_VoiceChatTeammate_C_ExecuteUbergraph_WI_VoiceChatTeammate, EntryPoint) == 0x000000, "Member 'WI_VoiceChatTeammate_C_ExecuteUbergraph_WI_VoiceChatTeammate::EntryPoint' has a wrong offset!");

// Function WI_VoiceChatTeammate.WI_VoiceChatTeammate_C.ShowTalkingAsTeam
// 0x0005 (0x0005 - 0x0000)
struct WI_VoiceChatTeammate_C_ShowTalkingAsTeam final
{
public:
	bool                                          Activated;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WI_VoiceChatTeammate_C_ShowTalkingAsTeam) == 0x000001, "Wrong alignment on WI_VoiceChatTeammate_C_ShowTalkingAsTeam");
static_assert(sizeof(WI_VoiceChatTeammate_C_ShowTalkingAsTeam) == 0x000005, "Wrong size on WI_VoiceChatTeammate_C_ShowTalkingAsTeam");
static_assert(offsetof(WI_VoiceChatTeammate_C_ShowTalkingAsTeam, Activated) == 0x000000, "Member 'WI_VoiceChatTeammate_C_ShowTalkingAsTeam::Activated' has a wrong offset!");
static_assert(offsetof(WI_VoiceChatTeammate_C_ShowTalkingAsTeam, Temp_bool_Variable) == 0x000001, "Member 'WI_VoiceChatTeammate_C_ShowTalkingAsTeam::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WI_VoiceChatTeammate_C_ShowTalkingAsTeam, Temp_byte_Variable) == 0x000002, "Member 'WI_VoiceChatTeammate_C_ShowTalkingAsTeam::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WI_VoiceChatTeammate_C_ShowTalkingAsTeam, Temp_byte_Variable_1) == 0x000003, "Member 'WI_VoiceChatTeammate_C_ShowTalkingAsTeam::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WI_VoiceChatTeammate_C_ShowTalkingAsTeam, K2Node_Select_Default) == 0x000004, "Member 'WI_VoiceChatTeammate_C_ShowTalkingAsTeam::K2Node_Select_Default' has a wrong offset!");

// Function WI_VoiceChatTeammate.WI_VoiceChatTeammate_C.ShowTalkingProximity
// 0x0005 (0x0005 - 0x0000)
struct WI_VoiceChatTeammate_C_ShowTalkingProximity final
{
public:
	bool                                          Index_0;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WI_VoiceChatTeammate_C_ShowTalkingProximity) == 0x000001, "Wrong alignment on WI_VoiceChatTeammate_C_ShowTalkingProximity");
static_assert(sizeof(WI_VoiceChatTeammate_C_ShowTalkingProximity) == 0x000005, "Wrong size on WI_VoiceChatTeammate_C_ShowTalkingProximity");
static_assert(offsetof(WI_VoiceChatTeammate_C_ShowTalkingProximity, Index_0) == 0x000000, "Member 'WI_VoiceChatTeammate_C_ShowTalkingProximity::Index_0' has a wrong offset!");
static_assert(offsetof(WI_VoiceChatTeammate_C_ShowTalkingProximity, Temp_bool_Variable) == 0x000001, "Member 'WI_VoiceChatTeammate_C_ShowTalkingProximity::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WI_VoiceChatTeammate_C_ShowTalkingProximity, Temp_byte_Variable) == 0x000002, "Member 'WI_VoiceChatTeammate_C_ShowTalkingProximity::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WI_VoiceChatTeammate_C_ShowTalkingProximity, Temp_byte_Variable_1) == 0x000003, "Member 'WI_VoiceChatTeammate_C_ShowTalkingProximity::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WI_VoiceChatTeammate_C_ShowTalkingProximity, K2Node_Select_Default) == 0x000004, "Member 'WI_VoiceChatTeammate_C_ShowTalkingProximity::K2Node_Select_Default' has a wrong offset!");

}

