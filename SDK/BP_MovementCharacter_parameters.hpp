#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_MovementCharacter

#include "Basic.hpp"

#include "S_CharacterMovementModeChange_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "JP_structs.hpp"
#include "GameplayAbilities_structs.hpp"
#include "E_MaterialTypes_structs.hpp"
#include "E_ImpactEffect_structs.hpp"
#include "EnhancedInput_structs.hpp"
#include "Engine_structs.hpp"
#include "E_OverlayStates_structs.hpp"


namespace SDK::Params
{

// Function BP_MovementCharacter.BP_MovementCharacter_C.AccelerateAir
// 0x0160 (0x0160 - 0x0000)
struct BP_MovementCharacter_C_AccelerateAir final
{
public:
	struct FVector                                ForwardVector;                                     // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        ForwardAxis;                                       // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                SideVector;                                        // 0x0020(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        SideAxis;                                          // 0x0038(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CalcMaxAir;                                        // 0x0040(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                AirAccelDir;                                       // 0x0048(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ApplyingAirAccel_0;                                // 0x0060(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0068(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_1;       // 0x0080(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0098(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x00B0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C9[0x7];                                       // 0x00C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_FClamp_ReturnValue;                       // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_1;           // 0x00D8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_VSize_ReturnValue;                        // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_2;       // 0x00F8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue_1;                     // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_VSize_ReturnValue_1;                      // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Dot_VectorVector_ReturnValue;             // 0x0120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0128(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0130(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue_2;                     // 0x0138(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_3;       // 0x0140(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0158(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MovementCharacter_C_AccelerateAir) == 0x000008, "Wrong alignment on BP_MovementCharacter_C_AccelerateAir");
static_assert(sizeof(BP_MovementCharacter_C_AccelerateAir) == 0x000160, "Wrong size on BP_MovementCharacter_C_AccelerateAir");
static_assert(offsetof(BP_MovementCharacter_C_AccelerateAir, ForwardVector) == 0x000000, "Member 'BP_MovementCharacter_C_AccelerateAir::ForwardVector' has a wrong offset!");
static_assert(offsetof(BP_MovementCharacter_C_AccelerateAir, ForwardAxis) == 0x000018, "Member 'BP_MovementCharacter_C_AccelerateAir::ForwardAxis' has a wrong offset!");
static_assert(offsetof(BP_MovementCharacter_C_AccelerateAir, SideVector) == 0x000020, "Member 'BP_MovementCharacter_C_AccelerateAir::SideVector' has a wrong offset!");
static_assert(offsetof(BP_MovementCharacter_C_AccelerateAir, SideAxis) == 0x000038, "Member 'BP_MovementCharacter_C_AccelerateAir::SideAxis' has a wrong offset!");
static_assert(offsetof(BP_MovementCharacter_C_AccelerateAir, CalcMaxAir) == 0x000040, "Member 'BP_MovementCharacter_C_AccelerateAir::CalcMaxAir' has a wrong offset!");
static_assert(offsetof(BP_MovementCharacter_C_AccelerateAir, AirAccelDir) == 0x000048, "Member 'BP_MovementCharacter_C_AccelerateAir::AirAccelDir' has a wrong offset!");
static_assert(offsetof(BP_MovementCharacter_C_AccelerateAir, ApplyingAirAccel_0) == 0x000060, "Member 'BP_MovementCharacter_C_AccelerateAir::ApplyingAirAccel_0' has a wrong offset!");
static_assert(offsetof(BP_MovementCharacter_C_AccelerateAir, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000068, "Member 'BP_MovementCharacter_C_AccelerateAir::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MovementCharacter_C_AccelerateAir, CallFunc_Multiply_VectorFloat_ReturnValue_1) == 0x000080, "Member 'BP_MovementCharacter_C_AccelerateAir::CallFunc_Multiply_VectorFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MovementCharacter_C_AccelerateAir, CallFunc_Add_VectorVector_ReturnValue) == 0x000098, "Member 'BP_MovementCharacter_C_AccelerateAir::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MovementCharacter_C_AccelerateAir, CallFunc_Normal_ReturnValue) == 0x0000B0, "Member 'BP_MovementCharacter_C_AccelerateAir::CallFunc_Normal_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MovementCharacter_C_AccelerateAir, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x0000C8, "Member 'BP_MovementCharacter_C_AccelerateAir::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MovementCharacter_C_AccelerateAir, CallFunc_FClamp_ReturnValue) == 0x0000D0, "Member 'BP_MovementCharacter_C_AccelerateAir::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MovementCharacter_C_AccelerateAir, CallFunc_Add_VectorVector_ReturnValue_1) == 0x0000D8, "Member 'BP_MovementCharacter_C_AccelerateAir::CallFunc_Add_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MovementCharacter_C_AccelerateAir, CallFunc_VSize_ReturnValue) == 0x0000F0, "Member 'BP_MovementCharacter_C_AccelerateAir::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MovementCharacter_C_AccelerateAir, CallFunc_Multiply_VectorFloat_ReturnValue_2) == 0x0000F8, "Member 'BP_MovementCharacter_C_AccelerateAir::CallFunc_Multiply_VectorFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_MovementCharacter_C_AccelerateAir, CallFunc_FClamp_ReturnValue_1) == 0x000110, "Member 'BP_MovementCharacter_C_AccelerateAir::CallFunc_FClamp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MovementCharacter_C_AccelerateAir, CallFunc_VSize_ReturnValue_1) == 0x000118, "Member 'BP_MovementCharacter_C_AccelerateAir::CallFunc_VSize_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MovementCharacter_C_AccelerateAir, CallFunc_Dot_VectorVector_ReturnValue) == 0x000120, "Member 'BP_MovementCharacter_C_AccelerateAir::CallFunc_Dot_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MovementCharacter_C_AccelerateAir, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000128, "Member 'BP_MovementCharacter_C_AccelerateAir::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MovementCharacter_C_AccelerateAir, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000130, "Member 'BP_MovementCharacter_C_AccelerateAir::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MovementCharacter_C_AccelerateAir, CallFunc_FClamp_ReturnValue_2) == 0x000138, "Member 'BP_MovementCharacter_C_AccelerateAir::CallFunc_FClamp_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_MovementCharacter_C_AccelerateAir, CallFunc_Multiply_VectorFloat_ReturnValue_3) == 0x000140, "Member 'BP_MovementCharacter_C_AccelerateAir::CallFunc_Multiply_VectorFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_MovementCharacter_C_AccelerateAir, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000158, "Member 'BP_MovementCharacter_C_AccelerateAir::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");

// Function BP_MovementCharacter.BP_MovementCharacter_C.AirControlChanged
// 0x0010 (0x0010 - 0x0000)
struct BP_MovementCharacter_C_AirControlChanged final
{
public:
	double                                        NewAirControl;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_VariableSet_AirControl_ImplicitCast;        // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MovementCharacter_C_AirControlChanged) == 0x000008, "Wrong alignment on BP_MovementCharacter_C_AirControlChanged");
static_assert(sizeof(BP_MovementCharacter_C_AirControlChanged) == 0x000010, "Wrong size on BP_MovementCharacter_C_AirControlChanged");
static_assert(offsetof(BP_MovementCharacter_C_AirControlChanged, NewAirControl) == 0x000000, "Member 'BP_MovementCharacter_C_AirControlChanged::NewAirControl' has a wrong offset!");
static_assert(offsetof(BP_MovementCharacter_C_AirControlChanged, K2Node_VariableSet_AirControl_ImplicitCast) == 0x000008, "Member 'BP_MovementCharacter_C_AirControlChanged::K2Node_VariableSet_AirControl_ImplicitCast' has a wrong offset!");

// Function BP_MovementCharacter.BP_MovementCharacter_C.ApplyBhopCap
// 0x0098 (0x0098 - 0x0000)
struct BP_MovementCharacter_C_ApplyBhopCap final
{
public:
	double                                        bhopCapNewSpeed;                                   // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                bhopCapVector;                                     // 0x0008(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Applyingcap;                                       // 0x0020(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x0028(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_NegateVector_ReturnValue;                 // 0x0040(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0070(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MovementCharacter_C_ApplyBhopCap) == 0x000008, "Wrong alignment on BP_MovementCharacter_C_ApplyBhopCap");
static_assert(sizeof(BP_MovementCharacter_C_ApplyBhopCap) == 0x000098, "Wrong size on BP_MovementCharacter_C_ApplyBhopCap");
static_assert(offsetof(BP_MovementCharacter_C_ApplyBhopCap, bhopCapNewSpeed) == 0x000000, "Member 'BP_MovementCharacter_C_ApplyBhopCap::bhopCapNewSpeed' has a wrong offset!");
static_assert(offsetof(BP_MovementCharacter_C_ApplyBhopCap, bhopCapVector) == 0x000008, "Member 'BP_MovementCharacter_C_ApplyBhopCap::bhopCapVector' has a wrong offset!");
static_assert(offsetof(BP_MovementCharacter_C_ApplyBhopCap, Applyingcap) == 0x000020, "Member 'BP_MovementCharacter_C_ApplyBhopCap::Applyingcap' has a wrong offset!");
static_assert(offsetof(BP_MovementCharacter_C_ApplyBhopCap, CallFunc_Normal_ReturnValue) == 0x000028, "Member 'BP_MovementCharacter_C_ApplyBhopCap::CallFunc_Normal_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MovementCharacter_C_ApplyBhopCap, CallFunc_NegateVector_ReturnValue) == 0x000040, "Member 'BP_MovementCharacter_C_ApplyBhopCap::CallFunc_NegateVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MovementCharacter_C_ApplyBhopCap, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000058, "Member 'BP_MovementCharacter_C_ApplyBhopCap::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MovementCharacter_C_ApplyBhopCap, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000060, "Member 'BP_MovementCharacter_C_ApplyBhopCap::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MovementCharacter_C_ApplyBhopCap, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000068, "Member 'BP_MovementCharacter_C_ApplyBhopCap::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MovementCharacter_C_ApplyBhopCap, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000070, "Member 'BP_MovementCharacter_C_ApplyBhopCap::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MovementCharacter_C_ApplyBhopCap, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000088, "Member 'BP_MovementCharacter_C_ApplyBhopCap::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MovementCharacter_C_ApplyBhopCap, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000090, "Member 'BP_MovementCharacter_C_ApplyBhopCap::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");

// Function BP_MovementCharacter.BP_MovementCharacter_C.ExecuteUbergraph_BP_MovementCharacter
// 0x0D10 (0x0D10 - 0x0000)
struct BP_MovementCharacter_C_ExecuteUbergraph_BP_MovementCharacter final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FInputActionValue                      K2Node_EnhancedInputActionEvent_ActionValue_6;     // 0x0010(0x0020)(NoDestructor)
	float                                         K2Node_EnhancedInputActionEvent_ElapsedTime_6;     // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_EnhancedInputActionEvent_TriggeredTime_6;   // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	const class UInputAction*                     K2Node_EnhancedInputActionEvent_SourceAction_6;    // 0x0038(0x0008)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FInputActionValue                      K2Node_EnhancedInputActionEvent_ActionValue_5;     // 0x0040(0x0020)(NoDestructor)
	float                                         K2Node_EnhancedInputActionEvent_ElapsedTime_5;     // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_EnhancedInputActionEvent_TriggeredTime_5;   // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	const class UInputAction*                     K2Node_EnhancedInputActionEvent_SourceAction_5;    // 0x0068(0x0008)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Conv_InputActionValueToBool_ReturnValue;  // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Conv_InputActionValueToBool_ReturnValue_1; // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_72[0x6];                                       // 0x0072(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FInputActionValue                      K2Node_EnhancedInputActionEvent_ActionValue_4;     // 0x0078(0x0020)(NoDestructor)
	float                                         K2Node_EnhancedInputActionEvent_ElapsedTime_4;     // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_EnhancedInputActionEvent_TriggeredTime_4;   // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	const class UInputAction*                     K2Node_EnhancedInputActionEvent_SourceAction_4;    // 0x00A0(0x0008)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UInputAction*                           Temp_object_Variable;                              // 0x00A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Conv_InputActionValueToBool_ReturnValue_2; // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B1[0x7];                                       // 0x00B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Temp_real_Variable;                                // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_1;                              // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_0;                              // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_1_0;                            // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_1_1;                            // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_1_2;                            // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_1;                              // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_2;                              // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F9[0x7];                                       // 0x00F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FInputActionValue                      K2Node_EnhancedInputActionEvent_ActionValue_3;     // 0x0100(0x0020)(NoDestructor)
	float                                         K2Node_EnhancedInputActionEvent_ElapsedTime_3;     // 0x0120(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_EnhancedInputActionEvent_TriggeredTime_3;   // 0x0124(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	const class UInputAction*                     K2Node_EnhancedInputActionEvent_SourceAction_3;    // 0x0128(0x0008)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Conv_InputActionValueToBool_ReturnValue_3; // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_131[0x7];                                      // 0x0131(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UInputAction*                           Temp_object_Variable_1;                            // 0x0138(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_2;                              // 0x0140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_2_0;                            // 0x0148(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_3;                              // 0x0150(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0158(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_159[0x7];                                      // 0x0159(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Temp_real_Variable_3_0;                            // 0x0160(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGameplayMessageSubsystem*              CallFunc_GetGameInstanceSubsystem_ReturnValue;     // 0x0168(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FInputActionValue                      K2Node_EnhancedInputActionEvent_ActionValue_2;     // 0x0170(0x0020)(NoDestructor)
	float                                         K2Node_EnhancedInputActionEvent_ElapsedTime_2;     // 0x0190(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_EnhancedInputActionEvent_TriggeredTime_2;   // 0x0194(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	const class UInputAction*                     K2Node_EnhancedInputActionEvent_SourceAction_2;    // 0x0198(0x0008)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FInputActionValue                      K2Node_EnhancedInputActionEvent_ActionValue_1;     // 0x01A0(0x0020)(NoDestructor)
	float                                         K2Node_EnhancedInputActionEvent_ElapsedTime_1;     // 0x01C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_EnhancedInputActionEvent_TriggeredTime_1;   // 0x01C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	const class UInputAction*                     K2Node_EnhancedInputActionEvent_SourceAction_1;    // 0x01C8(0x0008)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_InputActionValueToAxis1D_ReturnValue; // 0x01D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_InputActionValueToAxis1D_ReturnValue_1; // 0x01D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FInputActionValue                      K2Node_EnhancedInputActionEvent_ActionValue;       // 0x01E0(0x0020)(NoDestructor)
	float                                         K2Node_EnhancedInputActionEvent_ElapsedTime;       // 0x0200(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_EnhancedInputActionEvent_TriggeredTime;     // 0x0204(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	const class UInputAction*                     K2Node_EnhancedInputActionEvent_SourceAction;      // 0x0208(0x0008)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UInputAction*                           Temp_object_Variable_2;                            // 0x0210(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_InputActionValueToAxis1D_ReturnValue_2; // 0x0218(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_4;                              // 0x0220(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_5;                              // 0x0228(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_4_0;                            // 0x0230(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_5_0;                            // 0x0238(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_5_1;                            // 0x0240(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_5_2;                            // 0x0248(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_4_1;                            // 0x0250(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_4_2;                            // 0x0258(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_6;                              // 0x0260(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetVelocity_ReturnValue;                  // 0x0268(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x0280(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0288(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0290(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetGameTimeInSeconds_ReturnValue;         // 0x0298(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x02A0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x02B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2B9[0x7];                                      // 0x02B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_VSize_ReturnValue;                        // 0x02C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerCameraManager*                   CallFunc_GetPlayerCameraManager_ReturnValue;       // 0x02C8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x02D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2D1[0x7];                                      // 0x02D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCameraShakeBase*                       CallFunc_StartCameraShake_ReturnValue;             // 0x02D8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x02E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue;              // 0x02E8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	EMovementMode                                 K2Node_Event_PrevMovementMode;                     // 0x02F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMovementMode                                 K2Node_Event_NewMovementMode;                      // 0x02F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         K2Node_Event_PrevCustomMode;                       // 0x02F2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         K2Node_Event_NewCustomMode;                        // 0x02F3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2F4[0x4];                                      // 0x02F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UABP_JP_TPP_C*                          K2Node_DynamicCast_AsABP_JP_TPP;                   // 0x02F8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0300(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0301(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FS_CharacterMovementModeChange         K2Node_MakeStruct_S_CharacterMovementModeChange;   // 0x0302(0x0002)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_CrouchJump;                     // 0x0304(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLocallyControlled_ReturnValue;          // 0x0305(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLocallyControlled_ReturnValue_1;        // 0x0306(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsCrouching_ReturnValue;                  // 0x0307(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLocallyControlled_ReturnValue_2;        // 0x0308(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsFalling_ReturnValue;                    // 0x0309(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_30A[0x2];                                      // 0x030A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_DeltaSeconds;                         // 0x030C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_Dead;                                 // 0x0310(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_311[0x7];                                      // 0x0311(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                K2Node_Event_OptionalVelocity;                     // 0x0318(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FKillInfo                              K2Node_Event_KillInfo;                             // 0x0330(0x03D8)()
	float                                         K2Node_Event_SprintSpeed_1;                        // 0x0708(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_MovementSpeed;                        // 0x070C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_JumpVelocity;                         // 0x0710(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_CrouchSpeed;                          // 0x0714(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_AirControl;                           // 0x0718(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_71C[0x4];                                      // 0x071C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IGameplayTagAssetInterface> CallFunc_HasMatchingGameplayTag_self_CastInput;    // 0x0720(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasMatchingGameplayTag_ReturnValue;       // 0x0730(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0731(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_732[0x6];                                      // 0x0732(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue_1;            // 0x0738(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UABP_JP_FPP_C*                          K2Node_DynamicCast_AsABP_JP_FPP;                   // 0x0740(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0748(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_749[0x7];                                      // 0x0749(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            K2Node_CustomEvent_Target;                         // 0x0750(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0758(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLocalPlayerController_ReturnValue;      // 0x0759(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_75A[0x6];                                      // 0x075A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            K2Node_Event_NewController;                        // 0x0760(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_CrouchJumpVelocityCoefficient;        // 0x0768(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_SprintSpeed;                          // 0x076C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Event_HitLocation;                          // 0x0770(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_Event_Bone;                                 // 0x0788(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetVelocity_ReturnValue_1;                // 0x0790(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x07A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7A9[0x7];                                      // 0x07A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_BreakVector_X_1;                          // 0x07B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_1;                          // 0x07B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_1;                          // 0x07C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_1;                 // 0x07C8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_7;                              // 0x07E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_VSize_ReturnValue_1;                      // 0x07E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_8;                              // 0x07F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_1;       // 0x07F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7F9[0x7];                                      // 0x07F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UInputAction*                           Temp_object_Variable_3;                            // 0x0800(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_Enable;                         // 0x0808(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_809[0x7];                                      // 0x0809(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            CallFunc_GetController_ReturnValue;                // 0x0810(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Get_ClassLog_Name_name;                   // 0x0818(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FInputActionValue                      K2Node_EnhancedInputActionEvent_ActionValue_7;     // 0x0828(0x0020)(NoDestructor)
	float                                         K2Node_EnhancedInputActionEvent_ElapsedTime_7;     // 0x0848(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_EnhancedInputActionEvent_TriggeredTime_7;   // 0x084C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	const class UInputAction*                     K2Node_EnhancedInputActionEvent_SourceAction_7;    // 0x0850(0x0008)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_8_0;                            // 0x0858(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_7_0;                            // 0x0860(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Conv_InputActionValueToBool_ReturnValue_4; // 0x0868(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLocallyControlled_ReturnValue_3;        // 0x0869(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x086A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsServer_ReturnValue;                     // 0x086B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x086C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_86D[0x3];                                      // 0x086D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_Event_Hit;                                  // 0x0870(0x00F8)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0968(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0969(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_96A[0x6];                                      // 0x096A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FInputActionValue                      K2Node_EnhancedInputActionEvent_ActionValue_9;     // 0x0970(0x0020)(NoDestructor)
	float                                         K2Node_EnhancedInputActionEvent_ElapsedTime_9;     // 0x0990(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_EnhancedInputActionEvent_TriggeredTime_9;   // 0x0994(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	const class UInputAction*                     K2Node_EnhancedInputActionEvent_SourceAction_9;    // 0x0998(0x0008)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_8_1;                            // 0x09A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_7_1;                            // 0x09A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Conv_InputActionValueToBool_ReturnValue_5; // 0x09B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLocallyControlled_ReturnValue_4;        // 0x09B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9B2[0x6];                                      // 0x09B2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue_2;            // 0x09B8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UABP_JP_FPP_C*                          K2Node_DynamicCast_AsABP_JP_FPP_1;                 // 0x09C0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x09C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9C9[0x7];                                      // 0x09C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_GetObjectClass_ReturnValue;               // 0x09D0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetPhysicsLinearVelocity_ReturnValue;     // 0x09D8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_RemoveActiveGameplayEffect_ReturnValue;   // 0x09F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9F1[0x7];                                      // 0x09F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_BreakVector_X_2;                          // 0x09F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_2;                          // 0x0A00(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_2;                          // 0x0A08(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_2;       // 0x0A10(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A11[0x7];                                      // 0x0A11(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayEffectSpecHandle              CallFunc_MakeOutgoingSpec_ReturnValue;             // 0x0A18(0x0010)()
	struct FActiveGameplayEffectHandle            CallFunc_BP_ApplyGameplayEffectSpecToSelf_ReturnValue; // 0x0A28(0x0008)(NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_HalfHeightAdjust_1;                   // 0x0A30(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_ScaledHalfHeightAdjust_1;             // 0x0A34(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X_3;                          // 0x0A38(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_3;                          // 0x0A40(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_3;                          // 0x0A48(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0A50(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_2;                 // 0x0A58(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetRelativeLocation_SweepHitResult;    // 0x0A70(0x00F8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	double                                        CallFunc_BreakVector_X_4;                          // 0x0B68(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_4;                          // 0x0B70(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_4;                          // 0x0B78(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FInputActionValue                      K2Node_EnhancedInputActionEvent_ActionValue_8;     // 0x0B80(0x0020)(NoDestructor)
	float                                         K2Node_EnhancedInputActionEvent_ElapsedTime_8;     // 0x0BA0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_EnhancedInputActionEvent_TriggeredTime_8;   // 0x0BA4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	const class UInputAction*                     K2Node_EnhancedInputActionEvent_SourceAction_8;    // 0x0BA8(0x0008)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0BB0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_3;                 // 0x0BB8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_8_2;                            // 0x0BD0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetRelativeLocation_SweepHitResult_1;  // 0x0BD8(0x00F8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	double                                        Temp_real_Variable_7_2;                            // 0x0CD0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Conv_InputActionValueToBool_ReturnValue_6; // 0x0CD8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_CD9[0x3];                                      // 0x0CD9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_HalfHeightAdjust;                     // 0x0CDC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_ScaledHalfHeightAdjust;               // 0x0CE0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_CE4[0x4];                                      // 0x0CE4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_VariableSet_frametime_ImplicitCast;         // 0x0CE8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_VariableSet_Delta_Seconds_ImplicitCast;     // 0x0CF0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MovementSpeedChanged_NewMovementSpeed_ImplicitCast; // 0x0CF8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_JumpVelocityChanged_JumpVelocity_ImplicitCast; // 0x0D00(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_AirControlChanged_NewAirControl_ImplicitCast; // 0x0D08(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MovementCharacter_C_ExecuteUbergraph_BP_MovementCharacter) == 0x000008, "Wrong alignment on BP_MovementCharacter_C_ExecuteUbergraph_BP_MovementCharacter");
static_assert(sizeof(BP_MovementCharacter_C_ExecuteUbergraph_BP_MovementCharacter) == 0x000D10, "Wrong size on BP_MovementCharacter_C_ExecuteUbergraph_BP_MovementCharacter");
static_assert(offsetof(BP_MovementCharacter_C_ExecuteUbergraph_BP_MovementCharacter, EntryPoint) == 0x000000, "Member 'BP_MovementCharacter_C_ExecuteUbergraph_BP_MovementCharacter::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_MovementCharacter_C_ExecuteUbergraph_BP_MovementCharacter, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000008, "Member 'BP_MovementCharacter_C_ExecuteUbergraph_BP_MovementCharacter::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MovementCharacter_C_ExecuteUbergraph_BP_MovementCharacter, K2Node_EnhancedInputActionEvent_ActionValue_6) == 0x000010, "Member 'BP_MovementCharacter_C_ExecuteUbergraph_BP_MovementCharacter::K2Node_EnhancedInputActionEvent_ActionValue_6' has a wrong offset!");
static_assert(offsetof(BP_MovementCharacter_C_ExecuteUbergraph_BP_MovementCharacter, K2Node_EnhancedInputActionEvent_ElapsedTime_6) == 0x000030, "Member 'BP_MovementCharacter_C_ExecuteUbergraph_BP_MovementCharacter::K2Node_EnhancedInputActionEvent_ElapsedTime_6' has a wrong offset!");
static_assert(offsetof(BP_MovementCharacter_C_ExecuteUbergraph_BP_MovementCharacter, K2Node_EnhancedInputActionEvent_TriggeredTime_6) == 0x000034, "Member 'BP_MovementCharacter_C_ExecuteUbergraph_BP_MovementCharacter::K2Node_EnhancedInputActionEvent_TriggeredTime_6' has a wrong offset!");
static_assert(offsetof(BP_MovementCharacter_C_ExecuteUbergraph_BP_MovementCharacter, K2Node_EnhancedInputActionEvent_SourceAction_6) == 0x000038, "Member 'BP_MovementCharacter_C_ExecuteUbergraph_BP_MovementCharacter::K2Node_EnhancedInputActionEvent_SourceAction_6' has a wrong offset!");
static_assert(offsetof(BP_MovementCharacter_C_ExecuteUbergraph_BP_MovementCharacter, K2Node_EnhancedInputActionEvent_ActionValue_5) == 0x000040, "Member 'BP_MovementCharacter_C_ExecuteUbergraph_BP_MovementCharacter::K2Node_EnhancedInputActionEvent_ActionValue_5' has a wrong offset!");
static_assert(offsetof(BP_MovementCharacter_C_ExecuteUbergraph_BP_MovementCharacter, K2Node_EnhancedInputActionEvent_ElapsedTime_5) == 0x000060, "Member 'BP_MovementCharacter_C_ExecuteUbergraph_BP_MovementCharacter::K2Node_EnhancedInputActionEvent_ElapsedTime_5' has a wrong offset!");
static_assert(offsetof(BP_MovementCharacter_C_ExecuteUbergraph_BP_MovementCharacter, K2Node_EnhancedInputActionEvent_TriggeredTime_5) == 0x000064, "Member 'BP_MovementCharacter_C_ExecuteUbergraph_BP_MovementCharacter::K2Node_EnhancedInputActionEvent_TriggeredTime_5' has a wrong offset!");
static_assert(offsetof(BP_MovementCharacter_C_ExecuteUbergraph_BP_MovementCharacter, K2Node_EnhancedInputActionEvent_SourceAction_5) == 0x000068, "Member 'BP_MovementCharacter_C_ExecuteUbergraph_BP_MovementCharacter::K2Node_EnhancedInputActionEvent_SourceAction_5' has a wrong offset!");
static_assert(offsetof(BP_MovementCharacter_C_ExecuteUbergraph_BP_MovementCharacter, CallFunc_Conv_InputActionValueToBool_ReturnValue) == 0x000070, "Member 'BP_MovementCharacter_C_ExecuteUbergraph_BP_MovementCharacter::CallFunc_Conv_InputActionValueToBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MovementCharacter_C_ExecuteUbergraph_BP_MovementCharacter, CallFunc_Conv_InputActionValueToBool_ReturnValue_1) == 0x000071, "Member 'BP_MovementCharacter_C_ExecuteUbergraph_BP_MovementCharacter::CallFunc_Conv_InputActionValueToBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MovementCharacter_C_ExecuteUbergraph_BP_MovementCharacter, K2Node_EnhancedInputActionEvent_ActionValue_4) == 0x000078, "Member 'BP_MovementCharacter_C_ExecuteUbergraph_BP_MovementCharacter::K2Node_EnhancedInputActionEvent_ActionValue_4' has a wrong offset!");
static_assert(offsetof(BP_MovementCharacter_C_ExecuteUbergraph_BP_MovementCharacter, K2Node_EnhancedInputActionEvent_ElapsedTime_4) == 0x000098, "Member 'BP_MovementCharacter_C_ExecuteUbergraph_BP_MovementCharacter::K2Node_EnhancedInputActionEvent_ElapsedTime_4' has a wrong offset!");
static_assert(offsetof(BP_MovementCharacter_C_ExecuteUbergraph_BP_MovementCharacter, K2Node_EnhancedInputActionEvent_TriggeredTime_4) == 0x00009C, "Member 'BP_MovementCharacter_C_ExecuteUbergraph_BP_MovementCharacter::K2Node_EnhancedInputActionEvent_TriggeredTime_4' has a wrong offset!");
static_assert(offsetof(BP_MovementCharacter_C_ExecuteUbergraph_BP_MovementCharacter, K2Node_EnhancedInputActionEvent_SourceAction_4) == 0x0000A0, "Member 'BP_MovementCharacter_C_ExecuteUbergraph_BP_MovementCharacter::K2Node_EnhancedInputActionEvent_SourceAction_4' has a wrong offset!");
static_assert(offsetof(BP_MovementCharacter_C_ExecuteUbergraph_BP_MovementCharacter, Temp_object_Variable) == 0x0000A8, "Member 'BP_MovementCharacter_C_ExecuteUbergraph_BP_MovementCharacter::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BP_MovementCharacter_C_ExecuteUbergraph_BP_MovementCharacter, CallFunc_Conv_InputActionValueToBool_ReturnValue_2) == 0x0000B0, "Member 'BP_MovementCharacter_C_ExecuteUbergraph_BP_MovementCharacter::CallFunc_Conv_InputActionValueToBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_MovementCharacter_C_ExecuteUbergraph_BP_MovementCharacter, Temp_real_Variable) == 0x0000B8, "Member 'BP_MovementCharacter_C_ExecuteUbergraph_BP_MovementCharacter::Temp_real_Variable' has a wrong offset!");
static_assert(offsetof(BP_MovementCharacter_C_ExecuteUbergraph_BP_MovementCharacter, Temp_real_Variable_1) == 0x0000C0, "Member 'BP_MovementCharacter_C_ExecuteUbergraph_BP_MovementCharacter::Temp_real_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_MovementCharacter_C_ExecuteUbergraph_BP_MovementCharacter, Temp_real_Variable_0) == 0x0000C8, "Member 'BP_MovementCharacter_C_ExecuteUbergraph_BP_MovementCharacter::Temp_real_Variable_0' has a wrong offset!");
static_assert(offsetof(BP_MovementCharacter_C_ExecuteUbergraph_BP_MovementCharacter, Temp_real_Variable_1_0) == 0x0000D0, "Member 'BP_MovementCharacter_C_ExecuteUbergraph_BP_MovementCharacter::Temp_real_Variable_1_0' has a wrong offset!");
static_assert(offsetof(BP_MovementCharacter_C_ExecuteUbergraph_BP_MovementCharacter, Temp_real_Variable_1_1) == 0x0000D8, "Member 'BP_MovementCharacter_C_ExecuteUbergraph_BP_MovementCharacter::Temp_real_Variable_1_1' has a wrong offset!");
static_assert(offsetof(BP_MovementCharacter_C_ExecuteUbergraph_BP_MovementCharacter, Temp_real_Variable_1_2) == 0x0000E0, "Member 'BP_MovementCharacter_C_ExecuteUbergraph_BP_MovementCharacter::Temp_real_Variable_1_2' has a wrong offset!");
static_assert(offsetof(BP_MovementCharacter_C_ExecuteUbergraph_BP_MovementCharacter, Temp_real_Variable_1) == 0x0000E8, "Member 'BP_MovementCharacter_C_ExecuteUbergraph_BP_MovementCharacter::Temp_real_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_MovementCharacter_C_ExecuteUbergraph_BP_MovementCharacter, Temp_real_Variable_2) == 0x0000F0, "Member 'BP_MovementCharacter_C_ExecuteUbergraph_BP_MovementCharacter::Temp_real_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_MovementCharacter_C_ExecuteUbergraph_BP_MovementCharacter, Temp_bool_Variable) == 0x0000F8, "Member 'BP_MovementCharacter_C_ExecuteUbergraph_BP_MovementCharacter::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_MovementCharacter_C_ExecuteUbergraph_BP_MovementCharacter, K2Node_EnhancedInputActionEvent_ActionValue_3) == 0x000100, "Member 'BP_MovementCharacter_C_ExecuteUbergraph_BP_MovementCharacter::K2Node_EnhancedInputActionEvent_ActionValue_3' has a wrong offset!");
static_assert(offsetof(BP_MovementCharacter_C_ExecuteUbergraph_BP_MovementCharacter, K2Node_EnhancedInputActionEvent_ElapsedTime_3) == 0x000120, "Member 'BP_MovementCharacter_C_ExecuteUbergraph_BP_MovementCharacter::K2Node_EnhancedInputActionEvent_ElapsedTime_3' has a wrong offset!");
static_assert(offsetof(BP_MovementCharacter_C_ExecuteUbergraph_BP_MovementCharacter, K2Node_EnhancedInputActionEvent_TriggeredTime_3) == 0x000124, "Member 'BP_MovementCharacter_C_ExecuteUbergraph_BP_MovementCharacter::K2Node_EnhancedInputActionEvent_TriggeredTime_3' has a wrong offset!");
static_assert(offsetof(BP_MovementCharacter_C_ExecuteUbergraph_BP_MovementCharacter, K2Node_EnhancedInputActionEvent_SourceAction_3) == 0x000128, "Member 'BP_MovementCharacter_C_ExecuteUbergraph_BP_MovementCharacter::K2Node_EnhancedInputActionEvent_SourceAction_3' has a wrong offset!");
static_assert(offsetof(BP_MovementCharacter_C_ExecuteUbergraph_BP_MovementCharacter, CallFunc_Conv_InputActionValueToBool_ReturnValue_3) == 0x000130, "Member 'BP_MovementCharacter_C_ExecuteUbergraph_BP_MovementCharacter::CallFunc_Conv_InputActionValueToBool_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_MovementCharacter_C_ExecuteUbergraph_BP_MovementCharacter, Temp_object_Variable_1) == 0x000138, "Member 'BP_MovementCharacter_C_ExecuteUbergraph_BP_MovementCharacter::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_MovementCharacter_C_ExecuteUbergraph_BP_MovementCharacter, Temp_real_Variable_2) == 0x000140, "Member 'BP_MovementCharacter_C_ExecuteUbergraph_BP_MovementCharacter::Temp_real_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_MovementCharacter_C_ExecuteUbergraph_BP_MovementCharacter, Temp_real_Variable_2_0) == 0x000148, "Member 'BP_MovementCharacter_C_ExecuteUbergraph_BP_MovementCharacter::Temp_real_Variable_2_0' has a wrong offset!");
static_assert(offsetof(BP_MovementCharacter_C_ExecuteUbergraph_BP_MovementCharacter, Temp_real_Variable_3) == 0x000150, "Member 'BP_MovementCharacter_C_ExecuteUbergraph_BP_MovementCharacter::Temp_real_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_MovementCharacter_C_ExecuteUbergraph_BP_MovementCharacter, Temp_bool_Variable_1) == 0x000158, "Member 'BP_MovementCharacter_C_ExecuteUbergraph_BP_MovementCharacter::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_MovementCharacter_C_ExecuteUbergraph_BP_MovementCharacter, Temp_real_Variable_3_0) == 0x000160, "Member 'BP_MovementCharacter_C_ExecuteUbergraph_BP_MovementCharacter::Temp_real_Variable_3_0' has a wrong offset!");
static_assert(offsetof(BP_MovementCharacter_C_ExecuteUbergraph_BP_MovementCharacter, CallFunc_GetGameInstanceSubsystem_ReturnValue) == 0x000168, "Member 'BP_MovementCharacter_C_ExecuteUbergraph_BP_MovementCharacter::CallFunc_GetGameInstanceSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MovementCharacter_C_ExecuteUbergraph_BP_MovementCharacter, K2Node_EnhancedInputActionEvent_ActionValue_2) == 0x000170, "Member 'BP_MovementCharacter_C_ExecuteUbergraph_BP_MovementCharacter::K2Node_EnhancedInputActionEvent_ActionValue_2' has a wrong offset!");
static_assert(offsetof(BP_MovementCharacter_C_ExecuteUbergraph_BP_MovementCharacter, K2Node_EnhancedInputActionEvent_ElapsedTime_2) == 0x000190, "Member 'BP_MovementCharacter_C_ExecuteUbergraph_BP_MovementCharacter::K2Node_EnhancedInputActionEvent_ElapsedTime_2' has a wrong offset!");
static_assert(offsetof(BP_MovementCharacter_C_ExecuteUbergraph_BP_MovementCharacter, K2Node_EnhancedInputActionEvent_TriggeredTime_2) == 0x000194, "Member 'BP_MovementCharacter_C_ExecuteUbergraph_BP_MovementCharacter::K2Node_EnhancedInputActionEvent_TriggeredTime_2' has a wrong offset!");
static_assert(offsetof(BP_MovementCharacter_C_ExecuteUbergraph_BP_MovementCharacter, K2Node_EnhancedInputActionEvent_SourceAction_2) == 0x000198, "Member 'BP_MovementCharacter_C_ExecuteUbergraph_BP_MovementCharacter::K2Node_EnhancedInputActionEvent_SourceAction_2' has a wrong offset!");
static_assert(offsetof(BP_MovementCharacter_C_ExecuteUbergraph_BP_MovementCharacter, K2Node_EnhancedInputActionEvent_ActionValue_1) == 0x0001A0, "Member 'BP_MovementCharacter_C_ExecuteUbergraph_BP_MovementCharacter::K2Node_EnhancedInputActionEvent_ActionValue_1' has a wrong offset!");
static_assert(offsetof(BP_MovementCharacter_C_ExecuteUbergraph_BP_MovementCharacter, K2Node_EnhancedInputActionEvent_ElapsedTime_1) == 0x0001C0, "Member 'BP_MovementCharacter_C_ExecuteUbergraph_BP_MovementCharacter::K2Node_EnhancedInputActionEvent_ElapsedTime_1' has a wrong offset!");
static_assert(offsetof(BP_MovementCharacter_C_ExecuteUbergraph_BP_MovementCharacter, K2Node_EnhancedInputActionEvent_TriggeredTime_1) == 0x0001C4, "Member 'BP_MovementCharacter_C_ExecuteUbergraph_BP_MovementCharacter::K2Node_EnhancedInputActionEvent_TriggeredTime_1' has a wrong offset!");
static_assert(offsetof(BP_MovementCharacter_C_ExecuteUbergraph_BP_MovementCharacter, K2Node_EnhancedInputActionEvent_SourceAction_1) == 0x0001C8, "Member 'BP_MovementCharacter_C_ExecuteUbergraph_BP_MovementCharacter::K2Node_EnhancedInputActionEvent_SourceAction_1' has a wrong offset!");
static_assert(offsetof(BP_MovementCharacter_C_ExecuteUbergraph_BP_MovementCharacter, CallFunc_Conv_InputActionValueToAxis1D_ReturnValue) == 0x0001D0, "Member 'BP_MovementCharacter_C_ExecuteUbergraph_BP_MovementCharacter::CallFunc_Conv_InputActionValueToAxis1D_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MovementCharacter_C_ExecuteUbergraph_BP_MovementCharacter, CallFunc_Conv_InputActionValueToAxis1D_ReturnValue_1) == 0x0001D8, "Member 'BP_MovementCharacter_C_ExecuteUbergraph_BP_MovementCharacter::CallFunc_Conv_InputActionValueToAxis1D_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MovementCharacter_C_ExecuteUbergraph_BP_MovementCharacter, K2Node_EnhancedInputActionEvent_ActionValue) == 0x0001E0, "Member 'BP_MovementCharacter_C_ExecuteUbergraph_BP_MovementCharacter::K2Node_EnhancedInputActionEvent_ActionValue' has a wrong offset!");
static_assert(offsetof(BP_MovementCharacter_C_ExecuteUbergraph_BP_MovementCharacter, K2Node_EnhancedInputActionEvent_ElapsedTime) == 0x000200, "Member 'BP_MovementCharacter_C_ExecuteUbergraph_BP_MovementCharacter::K2Node_EnhancedInputActionEvent_ElapsedTime' has a wrong offset!");
static_assert(offsetof(BP_MovementCharacter_C_ExecuteUbergraph_BP_MovementCharacter, K2Node_EnhancedInputActionEvent_TriggeredTime) == 0x000204, "Member 'BP_MovementCharacter_C_ExecuteUbergraph_BP_MovementCharacter::K2Node_EnhancedInputActionEvent_TriggeredTime' has a wrong offset!");
static_assert(offsetof(BP_MovementCharacter_C_ExecuteUbergraph_BP_MovementCharacter, K2Node_EnhancedInputActionEvent_SourceAction) == 0x000208, "Member 'BP_MovementCharacter_C_ExecuteUbergraph_BP_MovementCharacter::K2Node_EnhancedInputActionEvent_SourceAction' has a wrong offset!");
static_assert(offsetof(BP_MovementCharacter_C_ExecuteUbergraph_BP_MovementCharacter, Temp_object_Variable_2) == 0x000210, "Member 'BP_MovementCharacter_C_ExecuteUbergraph_BP_MovementCharacter::Temp_object_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_MovementCharacter_C_ExecuteUbergraph_BP_MovementCharacter, CallFunc_Conv_InputActionValueToAxis1D_ReturnValue_2) == 0x000218, "Member 'BP_MovementCharacter_C_ExecuteUbergraph_BP_MovementCharacter::CallFunc_Conv_InputActionValueToAxis1D_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_MovementCharacter_C_ExecuteUbergraph_BP_MovementCharacter, Temp_real_Variable_4) == 0x000220, "Member 'BP_MovementCharacter_C_ExecuteUbergraph_BP_MovementCharacter::Temp_real_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_MovementCharacter_C_ExecuteUbergraph_BP_MovementCharacter, Temp_real_Variable_5) == 0x000228, "Member 'BP_MovementCharacter_C_ExecuteUbergraph_BP_MovementCharacter::Temp_real_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_MovementCharacter_C_ExecuteUbergraph_BP_MovementCharacter, Temp_real_Variable_4_0) == 0x000230, "Member 'BP_MovementCharacter_C_ExecuteUbergraph_BP_MovementCharacter::Temp_real_Variable_4_0' has a wrong offset!");
static_assert(offsetof(BP_MovementCharacter_C_ExecuteUbergraph_BP_MovementCharacter, Temp_real_Variable_5_0) == 0x000238, "Member 'BP_MovementCharacter_C_ExecuteUbergraph_BP_MovementCharacter::Temp_real_Variable_5_0' has a wrong offset!");
static_assert(offsetof(BP_MovementCharacter_C_ExecuteUbergraph_BP_MovementCharacter, Temp_real_Variable_5_1) == 0x000240, "Member 'BP_MovementCharacter_C_ExecuteUbergraph_BP_MovementCharacter::Temp_real_Variable_5_1' has a wrong offset!");
static_assert(offsetof(BP_MovementCharacter_C_ExecuteUbergraph_BP_MovementCharacter, Temp_real_Variable_5_2) == 0x000248, "Member 'BP_MovementCharacter_C_ExecuteUbergraph_BP_MovementCharacter::Temp_real_Variable_5_2' has a wrong offset!");
static_assert(offsetof(BP_MovementCharacter_C_ExecuteUbergraph_BP_MovementCharacter, Temp_real_Variable_4_1) == 0x000250, "Member 'BP_MovementCharacter_C_ExecuteUbergraph_BP_MovementCharacter::Temp_real_Variable_4_1' has a wrong offset!");
static_assert(offsetof(BP_MovementCharacter_C_ExecuteUbergraph_BP_MovementCharacter, Temp_real_Variable_4_2) == 0x000258, "Member 'BP_MovementCharacter_C_ExecuteUbergraph_BP_MovementCharacter::Temp_real_Variable_4_2' has a wrong offset!");
static_assert(offsetof(BP_MovementCharacter_C_ExecuteUbergraph_BP_MovementCharacter, Temp_real_Variable_6) == 0x000260, "Member 'BP_MovementCharacter_C_ExecuteUbergraph_BP_MovementCharacter::Temp_real_Variable_6' has a wrong offset!");
static_assert(offsetof(BP_MovementCharacter_C_ExecuteUbergraph_BP_MovementCharacter, CallFunc_GetVelocity_ReturnValue) == 0x000268, "Member 'BP_MovementCharacter_C_ExecuteUbergraph_BP_MovementCharacter::CallFunc_GetVelocity_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MovementCharacter_C_ExecuteUbergraph_BP_MovementCharacter, CallFunc_BreakVector_X) == 0x000280, "Member 'BP_MovementCharacter_C_ExecuteUbergraph_BP_MovementCharacter::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_MovementCharacter_C_ExecuteUbergraph_BP_MovementCharacter, CallFunc_BreakVector_Y) == 0x000288, "Member 'BP_MovementCharacter_C_ExecuteUbergraph_BP_MovementCharacter::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_MovementCharacter_C_ExecuteUbergraph_BP_MovementCharacter, CallFunc_BreakVector_Z) == 0x000290, "Member 'BP_MovementCharacter_C_ExecuteUbergraph_BP_MovementCharacter::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_MovementCharacter_C_ExecuteUbergraph_BP_MovementCharacter, CallFunc_GetGameTimeInSeconds_ReturnValue) == 0x000298, "Member 'BP_MovementCharacter_C_ExecuteUbergraph_BP_MovementCharacter::CallFunc_GetGameTimeInSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MovementCharacter_C_ExecuteUbergraph_BP_MovementCharacter, CallFunc_MakeVector_ReturnValue) == 0x0002A0, "Member 'BP_MovementCharacter_C_ExecuteUbergraph_BP_MovementCharacter::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MovementCharacter_C_ExecuteUbergraph_BP_MovementCharacter, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x0002B8, "Member 'BP_MovementCharacter_C_ExecuteUbergraph_BP_MovementCharacter::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MovementCharacter_C_ExecuteUbergraph_BP_MovementCharacter, CallFunc_VSize_ReturnValue) == 0x0002C0, "Member 'BP_MovementCharacter_C_ExecuteUbergraph_BP_MovementCharacter::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MovementCharacter_C_ExecuteUbergraph_BP_MovementCharacter, CallFunc_GetPlayerCameraManager_ReturnValue) == 0x0002C8, "Member 'BP_MovementCharacter_C_ExecuteUbergraph_BP_MovementCharacter::CallFunc_GetPlayerCameraManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MovementCharacter_C_ExecuteUbergraph_BP_MovementCharacter, CallFunc_IsValid_ReturnValue) == 0x0002D0, "Member 'BP_MovementCharacter_C_ExecuteUbergraph_BP_MovementCharacter::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MovementCharacter_C_ExecuteUbergraph_BP_MovementCharacter, CallFunc_StartCameraShake_ReturnValue) == 0x0002D8, "Member 'BP_MovementCharacter_C_ExecuteUbergraph_BP_MovementCharacter::CallFunc_StartCameraShake_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MovementCharacter_C_ExecuteUbergraph_BP_MovementCharacter, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x0002E0, "Member 'BP_MovementCharacter_C_ExecuteUbergraph_BP_MovementCharacter::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MovementCharacter_C_ExecuteUbergraph_BP_MovementCharacter, CallFunc_GetAnimInstance_ReturnValue) == 0x0002E8, "Member 'BP_MovementCharacter_C_ExecuteUbergraph_BP_MovementCharacter::CallFunc_GetAnimInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MovementCharacter_C_ExecuteUbergraph_BP_MovementCharacter, K2Node_Event_PrevMovementMode) == 0x0002F0, "Member 'BP_MovementCharacter_C_ExecuteUbergraph_BP_MovementCharacter::K2Node_Event_PrevMovementMode' has a wrong offset!");
static_assert(offsetof(BP_MovementCharacter_C_ExecuteUbergraph_BP_MovementCharacter, K2Node_Event_NewMovementMode) == 0x0002F1, "Member 'BP_MovementCharacter_C_ExecuteUbergraph_BP_MovementCharacter::K2Node_Event_NewMovementMode' has a wrong offset!");
static_assert(offsetof(BP_MovementCharacter_C_ExecuteUbergraph_BP_MovementCharacter, K2Node_Event_PrevCustomMode) == 0x0002F2, "Member 'BP_MovementCharacter_C_ExecuteUbergraph_BP_MovementCharacter::K2Node_Event_PrevCustomMode' has a wrong offset!");
static_assert(offsetof(BP_MovementCharacter_C_ExecuteUbergraph_BP_MovementCharacter, K2Node_Event_NewCustomMode) == 0x0002F3, "Member 'BP_MovementCharacter_C_ExecuteUbergraph_BP_MovementCharacter::K2Node_Event_NewCustomMode' has a wrong offset!");
static_assert(offsetof(BP_MovementCharacter_C_ExecuteUbergraph_BP_MovementCharacter, K2Node_DynamicCast_AsABP_JP_TPP) == 0x0002F8, "Member 'BP_MovementCharacter_C_ExecuteUbergraph_BP_MovementCharacter::K2Node_DynamicCast_AsABP_JP_TPP' has a wrong offset!");
static_assert(offsetof(BP_MovementCharacter_C_ExecuteUbergraph_BP_MovementCharacter, K2Node_DynamicCast_bSuccess) == 0x000300, "Member 'BP_MovementCharacter_C_ExecuteUbergraph_BP_MovementCharacter::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_MovementCharacter_C_ExecuteUbergraph_BP_MovementCharacter, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000301, "Member 'BP_MovementCharacter_C_ExecuteUbergraph_BP_MovementCharacter::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MovementCharacter_C_ExecuteUbergraph_BP_MovementCharacter, K2Node_MakeStruct_S_CharacterMovementModeChange) == 0x000302, "Member 'BP_MovementCharacter_C_ExecuteUbergraph_BP_MovementCharacter::K2Node_MakeStruct_S_CharacterMovementModeChange' has a wrong offset!");
static_assert(offsetof(BP_MovementCharacter_C_ExecuteUbergraph_BP_MovementCharacter, K2Node_CustomEvent_CrouchJump) == 0x000304, "Member 'BP_MovementCharacter_C_ExecuteUbergraph_BP_MovementCharacter::K2Node_CustomEvent_CrouchJump' has a wrong offset!");
static_assert(offsetof(BP_MovementCharacter_C_ExecuteUbergraph_BP_MovementCharacter, CallFunc_IsLocallyControlled_ReturnValue) == 0x000305, "Member 'BP_MovementCharacter_C_ExecuteUbergraph_BP_MovementCharacter::CallFunc_IsLocallyControlled_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MovementCharacter_C_ExecuteUbergraph_BP_MovementCharacter, CallFunc_IsLocallyControlled_ReturnValue_1) == 0x000306, "Member 'BP_MovementCharacter_C_ExecuteUbergraph_BP_MovementCharacter::CallFunc_IsLocallyControlled_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MovementCharacter_C_ExecuteUbergraph_BP_MovementCharacter, CallFunc_IsCrouching_ReturnValue) == 0x000307, "Member 'BP_MovementCharacter_C_ExecuteUbergraph_BP_MovementCharacter::CallFunc_IsCrouching_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MovementCharacter_C_ExecuteUbergraph_BP_MovementCharacter, CallFunc_IsLocallyControlled_ReturnValue_2) == 0x000308, "Member 'BP_MovementCharacter_C_ExecuteUbergraph_BP_MovementCharacter::CallFunc_IsLocallyControlled_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_MovementCharacter_C_ExecuteUbergraph_BP_MovementCharacter, CallFunc_IsFalling_ReturnValue) == 0x000309, "Member 'BP_MovementCharacter_C_ExecuteUbergraph_BP_MovementCharacter::CallFunc_IsFalling_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MovementCharacter_C_ExecuteUbergraph_BP_MovementCharacter, K2Node_Event_DeltaSeconds) == 0x00030C, "Member 'BP_MovementCharacter_C_ExecuteUbergraph_BP_MovementCharacter::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_MovementCharacter_C_ExecuteUbergraph_BP_MovementCharacter, K2Node_Event_Dead) == 0x000310, "Member 'BP_MovementCharacter_C_ExecuteUbergraph_BP_MovementCharacter::K2Node_Event_Dead' has a wrong offset!");
static_assert(offsetof(BP_MovementCharacter_C_ExecuteUbergraph_BP_MovementCharacter, K2Node_Event_OptionalVelocity) == 0x000318, "Member 'BP_MovementCharacter_C_ExecuteUbergraph_BP_MovementCharacter::K2Node_Event_OptionalVelocity' has a wrong offset!");
static_assert(offsetof(BP_MovementCharacter_C_ExecuteUbergraph_BP_MovementCharacter, K2Node_Event_KillInfo) == 0x000330, "Member 'BP_MovementCharacter_C_ExecuteUbergraph_BP_MovementCharacter::K2Node_Event_KillInfo' has a wrong offset!");
static_assert(offsetof(BP_MovementCharacter_C_ExecuteUbergraph_BP_MovementCharacter, K2Node_Event_SprintSpeed_1) == 0x000708, "Member 'BP_MovementCharacter_C_ExecuteUbergraph_BP_MovementCharacter::K2Node_Event_SprintSpeed_1' has a wrong offset!");
static_assert(offsetof(BP_MovementCharacter_C_ExecuteUbergraph_BP_MovementCharacter, K2Node_Event_MovementSpeed) == 0x00070C, "Member 'BP_MovementCharacter_C_ExecuteUbergraph_BP_MovementCharacter::K2Node_Event_MovementSpeed' has a wrong offset!");
static_assert(offsetof(BP_MovementCharacter_C_ExecuteUbergraph_BP_MovementCharacter, K2Node_Event_JumpVelocity) == 0x000710, "Member 'BP_MovementCharacter_C_ExecuteUbergraph_BP_MovementCharacter::K2Node_Event_JumpVelocity' has a wrong offset!");
static_assert(offsetof(BP_MovementCharacter_C_ExecuteUbergraph_BP_MovementCharacter, K2Node_Event_CrouchSpeed) == 0x000714, "Member 'BP_MovementCharacter_C_ExecuteUbergraph_BP_MovementCharacter::K2Node_Event_CrouchSpeed' has a wrong offset!");
static_assert(offsetof(BP_MovementCharacter_C_ExecuteUbergraph_BP_MovementCharacter, K2Node_Event_AirControl) == 0x000718, "Member 'BP_MovementCharacter_C_ExecuteUbergraph_BP_MovementCharacter::K2Node_Event_AirControl' has a wrong offset!");
static_assert(offsetof(BP_MovementCharacter_C_ExecuteUbergraph_BP_MovementCharacter, CallFunc_HasMatchingGameplayTag_self_CastInput) == 0x000720, "Member 'BP_MovementCharacter_C_ExecuteUbergraph_BP_MovementCharacter::CallFunc_HasMatchingGameplayTag_self_CastInput' has a wrong offset!");
static_assert(offsetof(BP_MovementCharacter_C_ExecuteUbergraph_BP_MovementCharacter, CallFunc_HasMatchingGameplayTag_ReturnValue) == 0x000730, "Member 'BP_MovementCharacter_C_ExecuteUbergraph_BP_MovementCharacter::CallFunc_HasMatchingGameplayTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MovementCharacter_C_ExecuteUbergraph_BP_MovementCharacter, CallFunc_Not_PreBool_ReturnValue) == 0x000731, "Member 'BP_MovementCharacter_C_ExecuteUbergraph_BP_MovementCharacter::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MovementCharacter_C_ExecuteUbergraph_BP_MovementCharacter, CallFunc_GetAnimInstance_ReturnValue_1) == 0x000738, "Member 'BP_MovementCharacter_C_ExecuteUbergraph_BP_MovementCharacter::CallFunc_GetAnimInstance_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MovementCharacter_C_ExecuteUbergraph_BP_MovementCharacter, K2Node_DynamicCast_AsABP_JP_FPP) == 0x000740, "Member 'BP_MovementCharacter_C_ExecuteUbergraph_BP_MovementCharacter::K2Node_DynamicCast_AsABP_JP_FPP' has a wrong offset!");
static_assert(offsetof(BP_MovementCharacter_C_ExecuteUbergraph_BP_MovementCharacter, K2Node_DynamicCast_bSuccess_1) == 0x000748, "Member 'BP_MovementCharacter_C_ExecuteUbergraph_BP_MovementCharacter::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_MovementCharacter_C_ExecuteUbergraph_BP_MovementCharacter, K2Node_CustomEvent_Target) == 0x000750, "Member 'BP_MovementCharacter_C_ExecuteUbergraph_BP_MovementCharacter::K2Node_CustomEvent_Target' has a wrong offset!");
static_assert(offsetof(BP_MovementCharacter_C_ExecuteUbergraph_BP_MovementCharacter, CallFunc_IsValid_ReturnValue_1) == 0x000758, "Member 'BP_MovementCharacter_C_ExecuteUbergraph_BP_MovementCharacter::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MovementCharacter_C_ExecuteUbergraph_BP_MovementCharacter, CallFunc_IsLocalPlayerController_ReturnValue) == 0x000759, "Member 'BP_MovementCharacter_C_ExecuteUbergraph_BP_MovementCharacter::CallFunc_IsLocalPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MovementCharacter_C_ExecuteUbergraph_BP_MovementCharacter, K2Node_Event_NewController) == 0x000760, "Member 'BP_MovementCharacter_C_ExecuteUbergraph_BP_MovementCharacter::K2Node_Event_NewController' has a wrong offset!");
static_assert(offsetof(BP_MovementCharacter_C_ExecuteUbergraph_BP_MovementCharacter, K2Node_Event_CrouchJumpVelocityCoefficient) == 0x000768, "Member 'BP_MovementCharacter_C_ExecuteUbergraph_BP_MovementCharacter::K2Node_Event_CrouchJumpVelocityCoefficient' has a wrong offset!");
static_assert(offsetof(BP_MovementCharacter_C_ExecuteUbergraph_BP_MovementCharacter, K2Node_Event_SprintSpeed) == 0x00076C, "Member 'BP_MovementCharacter_C_ExecuteUbergraph_BP_MovementCharacter::K2Node_Event_SprintSpeed' has a wrong offset!");
static_assert(offsetof(BP_MovementCharacter_C_ExecuteUbergraph_BP_MovementCharacter, K2Node_Event_HitLocation) == 0x000770, "Member 'BP_MovementCharacter_C_ExecuteUbergraph_BP_MovementCharacter::K2Node_Event_HitLocation' has a wrong offset!");
static_assert(offsetof(BP_MovementCharacter_C_ExecuteUbergraph_BP_MovementCharacter, K2Node_Event_Bone) == 0x000788, "Member 'BP_MovementCharacter_C_ExecuteUbergraph_BP_MovementCharacter::K2Node_Event_Bone' has a wrong offset!");
static_assert(offsetof(BP_MovementCharacter_C_ExecuteUbergraph_BP_MovementCharacter, CallFunc_GetVelocity_ReturnValue_1) == 0x000790, "Member 'BP_MovementCharacter_C_ExecuteUbergraph_BP_MovementCharacter::CallFunc_GetVelocity_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MovementCharacter_C_ExecuteUbergraph_BP_MovementCharacter, Temp_bool_Variable_2) == 0x0007A8, "Member 'BP_MovementCharacter_C_ExecuteUbergraph_BP_MovementCharacter::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_MovementCharacter_C_ExecuteUbergraph_BP_MovementCharacter, CallFunc_BreakVector_X_1) == 0x0007B0, "Member 'BP_MovementCharacter_C_ExecuteUbergraph_BP_MovementCharacter::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(BP_MovementCharacter_C_ExecuteUbergraph_BP_MovementCharacter, CallFunc_BreakVector_Y_1) == 0x0007B8, "Member 'BP_MovementCharacter_C_ExecuteUbergraph_BP_MovementCharacter::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(BP_MovementCharacter_C_ExecuteUbergraph_BP_MovementCharacter, CallFunc_BreakVector_Z_1) == 0x0007C0, "Member 'BP_MovementCharacter_C_ExecuteUbergraph_BP_MovementCharacter::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(BP_MovementCharacter_C_ExecuteUbergraph_BP_MovementCharacter, CallFunc_MakeVector_ReturnValue_1) == 0x0007C8, "Member 'BP_MovementCharacter_C_ExecuteUbergraph_BP_MovementCharacter::CallFunc_MakeVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MovementCharacter_C_ExecuteUbergraph_BP_MovementCharacter, Temp_real_Variable_7) == 0x0007E0, "Member 'BP_MovementCharacter_C_ExecuteUbergraph_BP_MovementCharacter::Temp_real_Variable_7' has a wrong offset!");
static_assert(offsetof(BP_MovementCharacter_C_ExecuteUbergraph_BP_MovementCharacter, CallFunc_VSize_ReturnValue_1) == 0x0007E8, "Member 'BP_MovementCharacter_C_ExecuteUbergraph_BP_MovementCharacter::CallFunc_VSize_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MovementCharacter_C_ExecuteUbergraph_BP_MovementCharacter, Temp_real_Variable_8) == 0x0007F0, "Member 'BP_MovementCharacter_C_ExecuteUbergraph_BP_MovementCharacter::Temp_real_Variable_8' has a wrong offset!");
static_assert(offsetof(BP_MovementCharacter_C_ExecuteUbergraph_BP_MovementCharacter, CallFunc_Greater_DoubleDouble_ReturnValue_1) == 0x0007F8, "Member 'BP_MovementCharacter_C_ExecuteUbergraph_BP_MovementCharacter::CallFunc_Greater_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MovementCharacter_C_ExecuteUbergraph_BP_MovementCharacter, Temp_object_Variable_3) == 0x000800, "Member 'BP_MovementCharacter_C_ExecuteUbergraph_BP_MovementCharacter::Temp_object_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_MovementCharacter_C_ExecuteUbergraph_BP_MovementCharacter, K2Node_CustomEvent_Enable) == 0x000808, "Member 'BP_MovementCharacter_C_ExecuteUbergraph_BP_MovementCharacter::K2Node_CustomEvent_Enable' has a wrong offset!");
static_assert(offsetof(BP_MovementCharacter_C_ExecuteUbergraph_BP_MovementCharacter, CallFunc_GetController_ReturnValue) == 0x000810, "Member 'BP_MovementCharacter_C_ExecuteUbergraph_BP_MovementCharacter::CallFunc_GetController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MovementCharacter_C_ExecuteUbergraph_BP_MovementCharacter, CallFunc_Get_ClassLog_Name_name) == 0x000818, "Member 'BP_MovementCharacter_C_ExecuteUbergraph_BP_MovementCharacter::CallFunc_Get_ClassLog_Name_name' has a wrong offset!");
static_assert(offsetof(BP_MovementCharacter_C_ExecuteUbergraph_BP_MovementCharacter, K2Node_EnhancedInputActionEvent_ActionValue_7) == 0x000828, "Member 'BP_MovementCharacter_C_ExecuteUbergraph_BP_MovementCharacter::K2Node_EnhancedInputActionEvent_ActionValue_7' has a wrong offset!");
static_assert(offsetof(BP_MovementCharacter_C_ExecuteUbergraph_BP_MovementCharacter, K2Node_EnhancedInputActionEvent_ElapsedTime_7) == 0x000848, "Member 'BP_MovementCharacter_C_ExecuteUbergraph_BP_MovementCharacter::K2Node_EnhancedInputActionEvent_ElapsedTime_7' has a wrong offset!");
static_assert(offsetof(BP_MovementCharacter_C_ExecuteUbergraph_BP_MovementCharacter, K2Node_EnhancedInputActionEvent_TriggeredTime_7) == 0x00084C, "Member 'BP_MovementCharacter_C_ExecuteUbergraph_BP_MovementCharacter::K2Node_EnhancedInputActionEvent_TriggeredTime_7' has a wrong offset!");
static_assert(offsetof(BP_MovementCharacter_C_ExecuteUbergraph_BP_MovementCharacter, K2Node_EnhancedInputActionEvent_SourceAction_7) == 0x000850, "Member 'BP_MovementCharacter_C_ExecuteUbergraph_BP_MovementCharacter::K2Node_EnhancedInputActionEvent_SourceAction_7' has a wrong offset!");
static_assert(offsetof(BP_MovementCharacter_C_ExecuteUbergraph_BP_MovementCharacter, Temp_real_Variable_8_0) == 0x000858, "Member 'BP_MovementCharacter_C_ExecuteUbergraph_BP_MovementCharacter::Temp_real_Variable_8_0' has a wrong offset!");
static_assert(offsetof(BP_MovementCharacter_C_ExecuteUbergraph_BP_MovementCharacter, Temp_real_Variable_7_0) == 0x000860, "Member 'BP_MovementCharacter_C_ExecuteUbergraph_BP_MovementCharacter::Temp_real_Variable_7_0' has a wrong offset!");
static_assert(offsetof(BP_MovementCharacter_C_ExecuteUbergraph_BP_MovementCharacter, CallFunc_Conv_InputActionValueToBool_ReturnValue_4) == 0x000868, "Member 'BP_MovementCharacter_C_ExecuteUbergraph_BP_MovementCharacter::CallFunc_Conv_InputActionValueToBool_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_MovementCharacter_C_ExecuteUbergraph_BP_MovementCharacter, CallFunc_IsLocallyControlled_ReturnValue_3) == 0x000869, "Member 'BP_MovementCharacter_C_ExecuteUbergraph_BP_MovementCharacter::CallFunc_IsLocallyControlled_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_MovementCharacter_C_ExecuteUbergraph_BP_MovementCharacter, CallFunc_Not_PreBool_ReturnValue_1) == 0x00086A, "Member 'BP_MovementCharacter_C_ExecuteUbergraph_BP_MovementCharacter::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MovementCharacter_C_ExecuteUbergraph_BP_MovementCharacter, CallFunc_IsServer_ReturnValue) == 0x00086B, "Member 'BP_MovementCharacter_C_ExecuteUbergraph_BP_MovementCharacter::CallFunc_IsServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MovementCharacter_C_ExecuteUbergraph_BP_MovementCharacter, CallFunc_Not_PreBool_ReturnValue_2) == 0x00086C, "Member 'BP_MovementCharacter_C_ExecuteUbergraph_BP_MovementCharacter::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_MovementCharacter_C_ExecuteUbergraph_BP_MovementCharacter, K2Node_Event_Hit) == 0x000870, "Member 'BP_MovementCharacter_C_ExecuteUbergraph_BP_MovementCharacter::K2Node_Event_Hit' has a wrong offset!");
static_assert(offsetof(BP_MovementCharacter_C_ExecuteUbergraph_BP_MovementCharacter, CallFunc_BooleanAND_ReturnValue) == 0x000968, "Member 'BP_MovementCharacter_C_ExecuteUbergraph_BP_MovementCharacter::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MovementCharacter_C_ExecuteUbergraph_BP_MovementCharacter, CallFunc_HasAuthority_ReturnValue) == 0x000969, "Member 'BP_MovementCharacter_C_ExecuteUbergraph_BP_MovementCharacter::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MovementCharacter_C_ExecuteUbergraph_BP_MovementCharacter, K2Node_EnhancedInputActionEvent_ActionValue_9) == 0x000970, "Member 'BP_MovementCharacter_C_ExecuteUbergraph_BP_MovementCharacter::K2Node_EnhancedInputActionEvent_ActionValue_9' has a wrong offset!");
static_assert(offsetof(BP_MovementCharacter_C_ExecuteUbergraph_BP_MovementCharacter, K2Node_EnhancedInputActionEvent_ElapsedTime_9) == 0x000990, "Member 'BP_MovementCharacter_C_ExecuteUbergraph_BP_MovementCharacter::K2Node_EnhancedInputActionEvent_ElapsedTime_9' has a wrong offset!");
static_assert(offsetof(BP_MovementCharacter_C_ExecuteUbergraph_BP_MovementCharacter, K2Node_EnhancedInputActionEvent_TriggeredTime_9) == 0x000994, "Member 'BP_MovementCharacter_C_ExecuteUbergraph_BP_MovementCharacter::K2Node_EnhancedInputActionEvent_TriggeredTime_9' has a wrong offset!");
static_assert(offsetof(BP_MovementCharacter_C_ExecuteUbergraph_BP_MovementCharacter, K2Node_EnhancedInputActionEvent_SourceAction_9) == 0x000998, "Member 'BP_MovementCharacter_C_ExecuteUbergraph_BP_MovementCharacter::K2Node_EnhancedInputActionEvent_SourceAction_9' has a wrong offset!");
static_assert(offsetof(BP_MovementCharacter_C_ExecuteUbergraph_BP_MovementCharacter, Temp_real_Variable_8_1) == 0x0009A0, "Member 'BP_MovementCharacter_C_ExecuteUbergraph_BP_MovementCharacter::Temp_real_Variable_8_1' has a wrong offset!");
static_assert(offsetof(BP_MovementCharacter_C_ExecuteUbergraph_BP_MovementCharacter, Temp_real_Variable_7_1) == 0x0009A8, "Member 'BP_MovementCharacter_C_ExecuteUbergraph_BP_MovementCharacter::Temp_real_Variable_7_1' has a wrong offset!");
static_assert(offsetof(BP_MovementCharacter_C_ExecuteUbergraph_BP_MovementCharacter, CallFunc_Conv_InputActionValueToBool_ReturnValue_5) == 0x0009B0, "Member 'BP_MovementCharacter_C_ExecuteUbergraph_BP_MovementCharacter::CallFunc_Conv_InputActionValueToBool_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_MovementCharacter_C_ExecuteUbergraph_BP_MovementCharacter, CallFunc_IsLocallyControlled_ReturnValue_4) == 0x0009B1, "Member 'BP_MovementCharacter_C_ExecuteUbergraph_BP_MovementCharacter::CallFunc_IsLocallyControlled_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_MovementCharacter_C_ExecuteUbergraph_BP_MovementCharacter, CallFunc_GetAnimInstance_ReturnValue_2) == 0x0009B8, "Member 'BP_MovementCharacter_C_ExecuteUbergraph_BP_MovementCharacter::CallFunc_GetAnimInstance_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_MovementCharacter_C_ExecuteUbergraph_BP_MovementCharacter, K2Node_DynamicCast_AsABP_JP_FPP_1) == 0x0009C0, "Member 'BP_MovementCharacter_C_ExecuteUbergraph_BP_MovementCharacter::K2Node_DynamicCast_AsABP_JP_FPP_1' has a wrong offset!");
static_assert(offsetof(BP_MovementCharacter_C_ExecuteUbergraph_BP_MovementCharacter, K2Node_DynamicCast_bSuccess_2) == 0x0009C8, "Member 'BP_MovementCharacter_C_ExecuteUbergraph_BP_MovementCharacter::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_MovementCharacter_C_ExecuteUbergraph_BP_MovementCharacter, CallFunc_GetObjectClass_ReturnValue) == 0x0009D0, "Member 'BP_MovementCharacter_C_ExecuteUbergraph_BP_MovementCharacter::CallFunc_GetObjectClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MovementCharacter_C_ExecuteUbergraph_BP_MovementCharacter, CallFunc_GetPhysicsLinearVelocity_ReturnValue) == 0x0009D8, "Member 'BP_MovementCharacter_C_ExecuteUbergraph_BP_MovementCharacter::CallFunc_GetPhysicsLinearVelocity_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MovementCharacter_C_ExecuteUbergraph_BP_MovementCharacter, CallFunc_RemoveActiveGameplayEffect_ReturnValue) == 0x0009F0, "Member 'BP_MovementCharacter_C_ExecuteUbergraph_BP_MovementCharacter::CallFunc_RemoveActiveGameplayEffect_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MovementCharacter_C_ExecuteUbergraph_BP_MovementCharacter, CallFunc_BreakVector_X_2) == 0x0009F8, "Member 'BP_MovementCharacter_C_ExecuteUbergraph_BP_MovementCharacter::CallFunc_BreakVector_X_2' has a wrong offset!");
static_assert(offsetof(BP_MovementCharacter_C_ExecuteUbergraph_BP_MovementCharacter, CallFunc_BreakVector_Y_2) == 0x000A00, "Member 'BP_MovementCharacter_C_ExecuteUbergraph_BP_MovementCharacter::CallFunc_BreakVector_Y_2' has a wrong offset!");
static_assert(offsetof(BP_MovementCharacter_C_ExecuteUbergraph_BP_MovementCharacter, CallFunc_BreakVector_Z_2) == 0x000A08, "Member 'BP_MovementCharacter_C_ExecuteUbergraph_BP_MovementCharacter::CallFunc_BreakVector_Z_2' has a wrong offset!");
static_assert(offsetof(BP_MovementCharacter_C_ExecuteUbergraph_BP_MovementCharacter, CallFunc_Greater_DoubleDouble_ReturnValue_2) == 0x000A10, "Member 'BP_MovementCharacter_C_ExecuteUbergraph_BP_MovementCharacter::CallFunc_Greater_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_MovementCharacter_C_ExecuteUbergraph_BP_MovementCharacter, CallFunc_MakeOutgoingSpec_ReturnValue) == 0x000A18, "Member 'BP_MovementCharacter_C_ExecuteUbergraph_BP_MovementCharacter::CallFunc_MakeOutgoingSpec_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MovementCharacter_C_ExecuteUbergraph_BP_MovementCharacter, CallFunc_BP_ApplyGameplayEffectSpecToSelf_ReturnValue) == 0x000A28, "Member 'BP_MovementCharacter_C_ExecuteUbergraph_BP_MovementCharacter::CallFunc_BP_ApplyGameplayEffectSpecToSelf_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MovementCharacter_C_ExecuteUbergraph_BP_MovementCharacter, K2Node_Event_HalfHeightAdjust_1) == 0x000A30, "Member 'BP_MovementCharacter_C_ExecuteUbergraph_BP_MovementCharacter::K2Node_Event_HalfHeightAdjust_1' has a wrong offset!");
static_assert(offsetof(BP_MovementCharacter_C_ExecuteUbergraph_BP_MovementCharacter, K2Node_Event_ScaledHalfHeightAdjust_1) == 0x000A34, "Member 'BP_MovementCharacter_C_ExecuteUbergraph_BP_MovementCharacter::K2Node_Event_ScaledHalfHeightAdjust_1' has a wrong offset!");
static_assert(offsetof(BP_MovementCharacter_C_ExecuteUbergraph_BP_MovementCharacter, CallFunc_BreakVector_X_3) == 0x000A38, "Member 'BP_MovementCharacter_C_ExecuteUbergraph_BP_MovementCharacter::CallFunc_BreakVector_X_3' has a wrong offset!");
static_assert(offsetof(BP_MovementCharacter_C_ExecuteUbergraph_BP_MovementCharacter, CallFunc_BreakVector_Y_3) == 0x000A40, "Member 'BP_MovementCharacter_C_ExecuteUbergraph_BP_MovementCharacter::CallFunc_BreakVector_Y_3' has a wrong offset!");
static_assert(offsetof(BP_MovementCharacter_C_ExecuteUbergraph_BP_MovementCharacter, CallFunc_BreakVector_Z_3) == 0x000A48, "Member 'BP_MovementCharacter_C_ExecuteUbergraph_BP_MovementCharacter::CallFunc_BreakVector_Z_3' has a wrong offset!");
static_assert(offsetof(BP_MovementCharacter_C_ExecuteUbergraph_BP_MovementCharacter, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000A50, "Member 'BP_MovementCharacter_C_ExecuteUbergraph_BP_MovementCharacter::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MovementCharacter_C_ExecuteUbergraph_BP_MovementCharacter, CallFunc_MakeVector_ReturnValue_2) == 0x000A58, "Member 'BP_MovementCharacter_C_ExecuteUbergraph_BP_MovementCharacter::CallFunc_MakeVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_MovementCharacter_C_ExecuteUbergraph_BP_MovementCharacter, CallFunc_K2_SetRelativeLocation_SweepHitResult) == 0x000A70, "Member 'BP_MovementCharacter_C_ExecuteUbergraph_BP_MovementCharacter::CallFunc_K2_SetRelativeLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_MovementCharacter_C_ExecuteUbergraph_BP_MovementCharacter, CallFunc_BreakVector_X_4) == 0x000B68, "Member 'BP_MovementCharacter_C_ExecuteUbergraph_BP_MovementCharacter::CallFunc_BreakVector_X_4' has a wrong offset!");
static_assert(offsetof(BP_MovementCharacter_C_ExecuteUbergraph_BP_MovementCharacter, CallFunc_BreakVector_Y_4) == 0x000B70, "Member 'BP_MovementCharacter_C_ExecuteUbergraph_BP_MovementCharacter::CallFunc_BreakVector_Y_4' has a wrong offset!");
static_assert(offsetof(BP_MovementCharacter_C_ExecuteUbergraph_BP_MovementCharacter, CallFunc_BreakVector_Z_4) == 0x000B78, "Member 'BP_MovementCharacter_C_ExecuteUbergraph_BP_MovementCharacter::CallFunc_BreakVector_Z_4' has a wrong offset!");
static_assert(offsetof(BP_MovementCharacter_C_ExecuteUbergraph_BP_MovementCharacter, K2Node_EnhancedInputActionEvent_ActionValue_8) == 0x000B80, "Member 'BP_MovementCharacter_C_ExecuteUbergraph_BP_MovementCharacter::K2Node_EnhancedInputActionEvent_ActionValue_8' has a wrong offset!");
static_assert(offsetof(BP_MovementCharacter_C_ExecuteUbergraph_BP_MovementCharacter, K2Node_EnhancedInputActionEvent_ElapsedTime_8) == 0x000BA0, "Member 'BP_MovementCharacter_C_ExecuteUbergraph_BP_MovementCharacter::K2Node_EnhancedInputActionEvent_ElapsedTime_8' has a wrong offset!");
static_assert(offsetof(BP_MovementCharacter_C_ExecuteUbergraph_BP_MovementCharacter, K2Node_EnhancedInputActionEvent_TriggeredTime_8) == 0x000BA4, "Member 'BP_MovementCharacter_C_ExecuteUbergraph_BP_MovementCharacter::K2Node_EnhancedInputActionEvent_TriggeredTime_8' has a wrong offset!");
static_assert(offsetof(BP_MovementCharacter_C_ExecuteUbergraph_BP_MovementCharacter, K2Node_EnhancedInputActionEvent_SourceAction_8) == 0x000BA8, "Member 'BP_MovementCharacter_C_ExecuteUbergraph_BP_MovementCharacter::K2Node_EnhancedInputActionEvent_SourceAction_8' has a wrong offset!");
static_assert(offsetof(BP_MovementCharacter_C_ExecuteUbergraph_BP_MovementCharacter, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000BB0, "Member 'BP_MovementCharacter_C_ExecuteUbergraph_BP_MovementCharacter::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MovementCharacter_C_ExecuteUbergraph_BP_MovementCharacter, CallFunc_MakeVector_ReturnValue_3) == 0x000BB8, "Member 'BP_MovementCharacter_C_ExecuteUbergraph_BP_MovementCharacter::CallFunc_MakeVector_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_MovementCharacter_C_ExecuteUbergraph_BP_MovementCharacter, Temp_real_Variable_8_2) == 0x000BD0, "Member 'BP_MovementCharacter_C_ExecuteUbergraph_BP_MovementCharacter::Temp_real_Variable_8_2' has a wrong offset!");
static_assert(offsetof(BP_MovementCharacter_C_ExecuteUbergraph_BP_MovementCharacter, CallFunc_K2_SetRelativeLocation_SweepHitResult_1) == 0x000BD8, "Member 'BP_MovementCharacter_C_ExecuteUbergraph_BP_MovementCharacter::CallFunc_K2_SetRelativeLocation_SweepHitResult_1' has a wrong offset!");
static_assert(offsetof(BP_MovementCharacter_C_ExecuteUbergraph_BP_MovementCharacter, Temp_real_Variable_7_2) == 0x000CD0, "Member 'BP_MovementCharacter_C_ExecuteUbergraph_BP_MovementCharacter::Temp_real_Variable_7_2' has a wrong offset!");
static_assert(offsetof(BP_MovementCharacter_C_ExecuteUbergraph_BP_MovementCharacter, CallFunc_Conv_InputActionValueToBool_ReturnValue_6) == 0x000CD8, "Member 'BP_MovementCharacter_C_ExecuteUbergraph_BP_MovementCharacter::CallFunc_Conv_InputActionValueToBool_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_MovementCharacter_C_ExecuteUbergraph_BP_MovementCharacter, K2Node_Event_HalfHeightAdjust) == 0x000CDC, "Member 'BP_MovementCharacter_C_ExecuteUbergraph_BP_MovementCharacter::K2Node_Event_HalfHeightAdjust' has a wrong offset!");
static_assert(offsetof(BP_MovementCharacter_C_ExecuteUbergraph_BP_MovementCharacter, K2Node_Event_ScaledHalfHeightAdjust) == 0x000CE0, "Member 'BP_MovementCharacter_C_ExecuteUbergraph_BP_MovementCharacter::K2Node_Event_ScaledHalfHeightAdjust' has a wrong offset!");
static_assert(offsetof(BP_MovementCharacter_C_ExecuteUbergraph_BP_MovementCharacter, K2Node_VariableSet_frametime_ImplicitCast) == 0x000CE8, "Member 'BP_MovementCharacter_C_ExecuteUbergraph_BP_MovementCharacter::K2Node_VariableSet_frametime_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_MovementCharacter_C_ExecuteUbergraph_BP_MovementCharacter, K2Node_VariableSet_Delta_Seconds_ImplicitCast) == 0x000CF0, "Member 'BP_MovementCharacter_C_ExecuteUbergraph_BP_MovementCharacter::K2Node_VariableSet_Delta_Seconds_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_MovementCharacter_C_ExecuteUbergraph_BP_MovementCharacter, CallFunc_MovementSpeedChanged_NewMovementSpeed_ImplicitCast) == 0x000CF8, "Member 'BP_MovementCharacter_C_ExecuteUbergraph_BP_MovementCharacter::CallFunc_MovementSpeedChanged_NewMovementSpeed_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_MovementCharacter_C_ExecuteUbergraph_BP_MovementCharacter, CallFunc_JumpVelocityChanged_JumpVelocity_ImplicitCast) == 0x000D00, "Member 'BP_MovementCharacter_C_ExecuteUbergraph_BP_MovementCharacter::CallFunc_JumpVelocityChanged_JumpVelocity_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_MovementCharacter_C_ExecuteUbergraph_BP_MovementCharacter, CallFunc_AirControlChanged_NewAirControl_ImplicitCast) == 0x000D08, "Member 'BP_MovementCharacter_C_ExecuteUbergraph_BP_MovementCharacter::CallFunc_AirControlChanged_NewAirControl_ImplicitCast' has a wrong offset!");

// Function BP_MovementCharacter.BP_MovementCharacter_C.Get1PMesh
// 0x0008 (0x0008 - 0x0000)
struct BP_MovementCharacter_C_Get1PMesh final
{
public:
	class USkeletalMeshComponent*                 OnePMesh;                                          // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MovementCharacter_C_Get1PMesh) == 0x000008, "Wrong alignment on BP_MovementCharacter_C_Get1PMesh");
static_assert(sizeof(BP_MovementCharacter_C_Get1PMesh) == 0x000008, "Wrong size on BP_MovementCharacter_C_Get1PMesh");
static_assert(offsetof(BP_MovementCharacter_C_Get1PMesh, OnePMesh) == 0x000000, "Member 'BP_MovementCharacter_C_Get1PMesh::OnePMesh' has a wrong offset!");

// Function BP_MovementCharacter.BP_MovementCharacter_C.Get3PMesh
// 0x0008 (0x0008 - 0x0000)
struct BP_MovementCharacter_C_Get3PMesh final
{
public:
	class USkeletalMeshComponent*                 ThreePMesh;                                        // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MovementCharacter_C_Get3PMesh) == 0x000008, "Wrong alignment on BP_MovementCharacter_C_Get3PMesh");
static_assert(sizeof(BP_MovementCharacter_C_Get3PMesh) == 0x000008, "Wrong size on BP_MovementCharacter_C_Get3PMesh");
static_assert(offsetof(BP_MovementCharacter_C_Get3PMesh, ThreePMesh) == 0x000000, "Member 'BP_MovementCharacter_C_Get3PMesh::ThreePMesh' has a wrong offset!");

// Function BP_MovementCharacter.BP_MovementCharacter_C.GetAnimBPs
// 0x0020 (0x0020 - 0x0000)
struct BP_MovementCharacter_C_GetAnimBPs final
{
public:
	TArray<class UAnimInstance*>                  AnimBPs;                                           // 0x0000(0x0010)(Parm, OutParm)
	TArray<class UAnimInstance*>                  K2Node_MakeArray_Array;                            // 0x0010(0x0010)(ReferenceParm)
};
static_assert(alignof(BP_MovementCharacter_C_GetAnimBPs) == 0x000008, "Wrong alignment on BP_MovementCharacter_C_GetAnimBPs");
static_assert(sizeof(BP_MovementCharacter_C_GetAnimBPs) == 0x000020, "Wrong size on BP_MovementCharacter_C_GetAnimBPs");
static_assert(offsetof(BP_MovementCharacter_C_GetAnimBPs, AnimBPs) == 0x000000, "Member 'BP_MovementCharacter_C_GetAnimBPs::AnimBPs' has a wrong offset!");
static_assert(offsetof(BP_MovementCharacter_C_GetAnimBPs, K2Node_MakeArray_Array) == 0x000010, "Member 'BP_MovementCharacter_C_GetAnimBPs::K2Node_MakeArray_Array' has a wrong offset!");

// Function BP_MovementCharacter.BP_MovementCharacter_C.GetCharacterName
// 0x0001 (0x0001 - 0x0000)
struct BP_MovementCharacter_C_GetCharacterName final
{
public:
	ECharacterName                                CharacterName_0;                                   // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MovementCharacter_C_GetCharacterName) == 0x000001, "Wrong alignment on BP_MovementCharacter_C_GetCharacterName");
static_assert(sizeof(BP_MovementCharacter_C_GetCharacterName) == 0x000001, "Wrong size on BP_MovementCharacter_C_GetCharacterName");
static_assert(offsetof(BP_MovementCharacter_C_GetCharacterName, CharacterName_0) == 0x000000, "Member 'BP_MovementCharacter_C_GetCharacterName::CharacterName_0' has a wrong offset!");

// Function BP_MovementCharacter.BP_MovementCharacter_C.GetCharacterSize
// 0x0001 (0x0001 - 0x0000)
struct BP_MovementCharacter_C_GetCharacterSize final
{
public:
	ECharacterSize                                CharacterSize_0;                                   // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MovementCharacter_C_GetCharacterSize) == 0x000001, "Wrong alignment on BP_MovementCharacter_C_GetCharacterSize");
static_assert(sizeof(BP_MovementCharacter_C_GetCharacterSize) == 0x000001, "Wrong size on BP_MovementCharacter_C_GetCharacterSize");
static_assert(offsetof(BP_MovementCharacter_C_GetCharacterSize, CharacterSize_0) == 0x000000, "Member 'BP_MovementCharacter_C_GetCharacterSize::CharacterSize_0' has a wrong offset!");

// Function BP_MovementCharacter.BP_MovementCharacter_C.GetDurabilityCostWhenHit
// 0x0008 (0x0008 - 0x0000)
struct BP_MovementCharacter_C_GetDurabilityCostWhenHit final
{
public:
	double                                        Amount;                                            // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MovementCharacter_C_GetDurabilityCostWhenHit) == 0x000008, "Wrong alignment on BP_MovementCharacter_C_GetDurabilityCostWhenHit");
static_assert(sizeof(BP_MovementCharacter_C_GetDurabilityCostWhenHit) == 0x000008, "Wrong size on BP_MovementCharacter_C_GetDurabilityCostWhenHit");
static_assert(offsetof(BP_MovementCharacter_C_GetDurabilityCostWhenHit, Amount) == 0x000000, "Member 'BP_MovementCharacter_C_GetDurabilityCostWhenHit::Amount' has a wrong offset!");

// Function BP_MovementCharacter.BP_MovementCharacter_C.GetGaitFromMovementSpeed
// 0x0088 (0x0088 - 0x0000)
struct BP_MovementCharacter_C_GetGaitFromMovementSpeed final
{
public:
	EGaitJP                                       Gait;                                              // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         RunThreshold;                                      // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         SprintThreshold;                                   // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IGameplayTagAssetInterface> CallFunc_HasMatchingGameplayTag_self_CastInput;    // 0x0010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasMatchingGameplayTag_ReturnValue;       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_22[0x6];                                       // 0x0022(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMovementDataJP                        CallFunc_GetDataTableRowFromName_OutRow;           // 0x0028(0x0040)()
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_1;       // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6A[0x6];                                       // 0x006A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Greater_DoubleDouble_B_ImplicitCast;      // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Greater_DoubleDouble_B_ImplicitCast_1;    // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_VariableSet_SprintThresholdd_ImplicitCast;  // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MovementCharacter_C_GetGaitFromMovementSpeed) == 0x000008, "Wrong alignment on BP_MovementCharacter_C_GetGaitFromMovementSpeed");
static_assert(sizeof(BP_MovementCharacter_C_GetGaitFromMovementSpeed) == 0x000088, "Wrong size on BP_MovementCharacter_C_GetGaitFromMovementSpeed");
static_assert(offsetof(BP_MovementCharacter_C_GetGaitFromMovementSpeed, Gait) == 0x000000, "Member 'BP_MovementCharacter_C_GetGaitFromMovementSpeed::Gait' has a wrong offset!");
static_assert(offsetof(BP_MovementCharacter_C_GetGaitFromMovementSpeed, RunThreshold) == 0x000004, "Member 'BP_MovementCharacter_C_GetGaitFromMovementSpeed::RunThreshold' has a wrong offset!");
static_assert(offsetof(BP_MovementCharacter_C_GetGaitFromMovementSpeed, SprintThreshold) == 0x000008, "Member 'BP_MovementCharacter_C_GetGaitFromMovementSpeed::SprintThreshold' has a wrong offset!");
static_assert(offsetof(BP_MovementCharacter_C_GetGaitFromMovementSpeed, CallFunc_HasMatchingGameplayTag_self_CastInput) == 0x000010, "Member 'BP_MovementCharacter_C_GetGaitFromMovementSpeed::CallFunc_HasMatchingGameplayTag_self_CastInput' has a wrong offset!");
static_assert(offsetof(BP_MovementCharacter_C_GetGaitFromMovementSpeed, CallFunc_HasMatchingGameplayTag_ReturnValue) == 0x000020, "Member 'BP_MovementCharacter_C_GetGaitFromMovementSpeed::CallFunc_HasMatchingGameplayTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MovementCharacter_C_GetGaitFromMovementSpeed, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000021, "Member 'BP_MovementCharacter_C_GetGaitFromMovementSpeed::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MovementCharacter_C_GetGaitFromMovementSpeed, CallFunc_GetDataTableRowFromName_OutRow) == 0x000028, "Member 'BP_MovementCharacter_C_GetGaitFromMovementSpeed::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(BP_MovementCharacter_C_GetGaitFromMovementSpeed, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000068, "Member 'BP_MovementCharacter_C_GetGaitFromMovementSpeed::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MovementCharacter_C_GetGaitFromMovementSpeed, CallFunc_Greater_DoubleDouble_ReturnValue_1) == 0x000069, "Member 'BP_MovementCharacter_C_GetGaitFromMovementSpeed::CallFunc_Greater_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MovementCharacter_C_GetGaitFromMovementSpeed, CallFunc_Greater_DoubleDouble_B_ImplicitCast) == 0x000070, "Member 'BP_MovementCharacter_C_GetGaitFromMovementSpeed::CallFunc_Greater_DoubleDouble_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_MovementCharacter_C_GetGaitFromMovementSpeed, CallFunc_Greater_DoubleDouble_B_ImplicitCast_1) == 0x000078, "Member 'BP_MovementCharacter_C_GetGaitFromMovementSpeed::CallFunc_Greater_DoubleDouble_B_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(BP_MovementCharacter_C_GetGaitFromMovementSpeed, K2Node_VariableSet_SprintThresholdd_ImplicitCast) == 0x000080, "Member 'BP_MovementCharacter_C_GetGaitFromMovementSpeed::K2Node_VariableSet_SprintThresholdd_ImplicitCast' has a wrong offset!");

// Function BP_MovementCharacter.BP_MovementCharacter_C.GetGuardDogTargetOffset
// 0x0018 (0x0018 - 0x0000)
struct BP_MovementCharacter_C_GetGuardDogTargetOffset final
{
public:
	struct FVector                                TargetOffset;                                      // 0x0000(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MovementCharacter_C_GetGuardDogTargetOffset) == 0x000008, "Wrong alignment on BP_MovementCharacter_C_GetGuardDogTargetOffset");
static_assert(sizeof(BP_MovementCharacter_C_GetGuardDogTargetOffset) == 0x000018, "Wrong size on BP_MovementCharacter_C_GetGuardDogTargetOffset");
static_assert(offsetof(BP_MovementCharacter_C_GetGuardDogTargetOffset, TargetOffset) == 0x000000, "Member 'BP_MovementCharacter_C_GetGuardDogTargetOffset::TargetOffset' has a wrong offset!");

// Function BP_MovementCharacter.BP_MovementCharacter_C.GetInventory
// 0x0008 (0x0008 - 0x0000)
struct BP_MovementCharacter_C_GetInventory final
{
public:
	class UShopInteractionAC_C*                   Inventory;                                         // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MovementCharacter_C_GetInventory) == 0x000008, "Wrong alignment on BP_MovementCharacter_C_GetInventory");
static_assert(sizeof(BP_MovementCharacter_C_GetInventory) == 0x000008, "Wrong size on BP_MovementCharacter_C_GetInventory");
static_assert(offsetof(BP_MovementCharacter_C_GetInventory, Inventory) == 0x000000, "Member 'BP_MovementCharacter_C_GetInventory::Inventory' has a wrong offset!");

// Function BP_MovementCharacter.BP_MovementCharacter_C.GetIsDead
// 0x0001 (0x0001 - 0x0000)
struct BP_MovementCharacter_C_GetIsDead final
{
public:
	bool                                          Dead;                                              // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MovementCharacter_C_GetIsDead) == 0x000001, "Wrong alignment on BP_MovementCharacter_C_GetIsDead");
static_assert(sizeof(BP_MovementCharacter_C_GetIsDead) == 0x000001, "Wrong size on BP_MovementCharacter_C_GetIsDead");
static_assert(offsetof(BP_MovementCharacter_C_GetIsDead, Dead) == 0x000000, "Member 'BP_MovementCharacter_C_GetIsDead::Dead' has a wrong offset!");

// Function BP_MovementCharacter.BP_MovementCharacter_C.GetJPPlayerController
// 0x0008 (0x0008 - 0x0000)
struct BP_MovementCharacter_C_GetJPPlayerController final
{
public:
	class APlayerControllerJP*                    PlayerController;                                  // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MovementCharacter_C_GetJPPlayerController) == 0x000008, "Wrong alignment on BP_MovementCharacter_C_GetJPPlayerController");
static_assert(sizeof(BP_MovementCharacter_C_GetJPPlayerController) == 0x000008, "Wrong size on BP_MovementCharacter_C_GetJPPlayerController");
static_assert(offsetof(BP_MovementCharacter_C_GetJPPlayerController, PlayerController) == 0x000000, "Member 'BP_MovementCharacter_C_GetJPPlayerController::PlayerController' has a wrong offset!");

// Function BP_MovementCharacter.BP_MovementCharacter_C.GetMaterialType
// 0x0001 (0x0001 - 0x0000)
struct BP_MovementCharacter_C_GetMaterialType final
{
public:
	E_MaterialTypes                               MaterialType;                                      // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MovementCharacter_C_GetMaterialType) == 0x000001, "Wrong alignment on BP_MovementCharacter_C_GetMaterialType");
static_assert(sizeof(BP_MovementCharacter_C_GetMaterialType) == 0x000001, "Wrong size on BP_MovementCharacter_C_GetMaterialType");
static_assert(offsetof(BP_MovementCharacter_C_GetMaterialType, MaterialType) == 0x000000, "Member 'BP_MovementCharacter_C_GetMaterialType::MaterialType' has a wrong offset!");

// Function BP_MovementCharacter.BP_MovementCharacter_C.HitReactionImpact
// 0x0020 (0x0020 - 0x0000)
struct BP_MovementCharacter_C_HitReactionImpact final
{
public:
	struct FVector                                HitLocation;                                       // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   bone;                                              // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MovementCharacter_C_HitReactionImpact) == 0x000008, "Wrong alignment on BP_MovementCharacter_C_HitReactionImpact");
static_assert(sizeof(BP_MovementCharacter_C_HitReactionImpact) == 0x000020, "Wrong size on BP_MovementCharacter_C_HitReactionImpact");
static_assert(offsetof(BP_MovementCharacter_C_HitReactionImpact, HitLocation) == 0x000000, "Member 'BP_MovementCharacter_C_HitReactionImpact::HitLocation' has a wrong offset!");
static_assert(offsetof(BP_MovementCharacter_C_HitReactionImpact, bone) == 0x000018, "Member 'BP_MovementCharacter_C_HitReactionImpact::bone' has a wrong offset!");

// Function BP_MovementCharacter.BP_MovementCharacter_C.ImpactCosmetics
// 0x0048 (0x0048 - 0x0000)
struct BP_MovementCharacter_C_ImpactCosmetics final
{
public:
	class APawn*                                  ImpactCauser;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Location;                                          // 0x0008(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                HitImpulse;                                        // 0x0020(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_ImpactEffect                                ImpactEffect;                                      // 0x0038(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x3];                                       // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   BoneName;                                          // 0x003C(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ChangedAttributes;                                 // 0x0044(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MovementCharacter_C_ImpactCosmetics) == 0x000008, "Wrong alignment on BP_MovementCharacter_C_ImpactCosmetics");
static_assert(sizeof(BP_MovementCharacter_C_ImpactCosmetics) == 0x000048, "Wrong size on BP_MovementCharacter_C_ImpactCosmetics");
static_assert(offsetof(BP_MovementCharacter_C_ImpactCosmetics, ImpactCauser) == 0x000000, "Member 'BP_MovementCharacter_C_ImpactCosmetics::ImpactCauser' has a wrong offset!");
static_assert(offsetof(BP_MovementCharacter_C_ImpactCosmetics, Location) == 0x000008, "Member 'BP_MovementCharacter_C_ImpactCosmetics::Location' has a wrong offset!");
static_assert(offsetof(BP_MovementCharacter_C_ImpactCosmetics, HitImpulse) == 0x000020, "Member 'BP_MovementCharacter_C_ImpactCosmetics::HitImpulse' has a wrong offset!");
static_assert(offsetof(BP_MovementCharacter_C_ImpactCosmetics, ImpactEffect) == 0x000038, "Member 'BP_MovementCharacter_C_ImpactCosmetics::ImpactEffect' has a wrong offset!");
static_assert(offsetof(BP_MovementCharacter_C_ImpactCosmetics, BoneName) == 0x00003C, "Member 'BP_MovementCharacter_C_ImpactCosmetics::BoneName' has a wrong offset!");
static_assert(offsetof(BP_MovementCharacter_C_ImpactCosmetics, ChangedAttributes) == 0x000044, "Member 'BP_MovementCharacter_C_ImpactCosmetics::ChangedAttributes' has a wrong offset!");

// Function BP_MovementCharacter.BP_MovementCharacter_C.InitializeAttributes
// 0x00A8 (0x00A8 - 0x0000)
struct BP_MovementCharacter_C_InitializeAttributes final
{
public:
	float                                         CallFunc_GetAimMovementSpeedCoefficient_Initial_Aim_Movement_Speed_Coefficient; // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetInitialAirControl_Initial_Jump_Velocity; // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetInitialJumpVelocity_Initial_Jump_Velocity; // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetCrouchJumpVelocityCoefficient_Crouch_Jump_Velocity_Coefficient; // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetSprintMovementCoefficient_Sprint_Coefficient; // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetCrouchMovementCoefficient_Crouch_Coefficient; // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayEffectSpecHandle              CallFunc_MakeOutgoingSpec_ReturnValue;             // 0x0018(0x0010)()
	float                                         CallFunc_GetInitialMovementSpeed_InitialMovementSpeed; // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayEffectSpecHandle              CallFunc_AssignTagSetByCallerMagnitude_ReturnValue; // 0x0030(0x0010)()
	struct FGameplayEffectSpecHandle              CallFunc_AssignTagSetByCallerMagnitude_ReturnValue_1; // 0x0040(0x0010)()
	struct FGameplayEffectSpecHandle              CallFunc_AssignTagSetByCallerMagnitude_ReturnValue_2; // 0x0050(0x0010)()
	struct FGameplayEffectSpecHandle              CallFunc_AssignTagSetByCallerMagnitude_ReturnValue_3; // 0x0060(0x0010)()
	struct FGameplayEffectSpecHandle              CallFunc_AssignTagSetByCallerMagnitude_ReturnValue_4; // 0x0070(0x0010)()
	struct FGameplayEffectSpecHandle              CallFunc_AssignTagSetByCallerMagnitude_ReturnValue_5; // 0x0080(0x0010)()
	struct FGameplayEffectSpecHandle              CallFunc_AssignTagSetByCallerMagnitude_ReturnValue_6; // 0x0090(0x0010)()
	struct FActiveGameplayEffectHandle            CallFunc_BP_ApplyGameplayEffectSpecToSelf_ReturnValue; // 0x00A0(0x0008)(NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MovementCharacter_C_InitializeAttributes) == 0x000008, "Wrong alignment on BP_MovementCharacter_C_InitializeAttributes");
static_assert(sizeof(BP_MovementCharacter_C_InitializeAttributes) == 0x0000A8, "Wrong size on BP_MovementCharacter_C_InitializeAttributes");
static_assert(offsetof(BP_MovementCharacter_C_InitializeAttributes, CallFunc_GetAimMovementSpeedCoefficient_Initial_Aim_Movement_Speed_Coefficient) == 0x000000, "Member 'BP_MovementCharacter_C_InitializeAttributes::CallFunc_GetAimMovementSpeedCoefficient_Initial_Aim_Movement_Speed_Coefficient' has a wrong offset!");
static_assert(offsetof(BP_MovementCharacter_C_InitializeAttributes, CallFunc_GetInitialAirControl_Initial_Jump_Velocity) == 0x000004, "Member 'BP_MovementCharacter_C_InitializeAttributes::CallFunc_GetInitialAirControl_Initial_Jump_Velocity' has a wrong offset!");
static_assert(offsetof(BP_MovementCharacter_C_InitializeAttributes, CallFunc_GetInitialJumpVelocity_Initial_Jump_Velocity) == 0x000008, "Member 'BP_MovementCharacter_C_InitializeAttributes::CallFunc_GetInitialJumpVelocity_Initial_Jump_Velocity' has a wrong offset!");
static_assert(offsetof(BP_MovementCharacter_C_InitializeAttributes, CallFunc_GetCrouchJumpVelocityCoefficient_Crouch_Jump_Velocity_Coefficient) == 0x00000C, "Member 'BP_MovementCharacter_C_InitializeAttributes::CallFunc_GetCrouchJumpVelocityCoefficient_Crouch_Jump_Velocity_Coefficient' has a wrong offset!");
static_assert(offsetof(BP_MovementCharacter_C_InitializeAttributes, CallFunc_GetSprintMovementCoefficient_Sprint_Coefficient) == 0x000010, "Member 'BP_MovementCharacter_C_InitializeAttributes::CallFunc_GetSprintMovementCoefficient_Sprint_Coefficient' has a wrong offset!");
static_assert(offsetof(BP_MovementCharacter_C_InitializeAttributes, CallFunc_GetCrouchMovementCoefficient_Crouch_Coefficient) == 0x000014, "Member 'BP_MovementCharacter_C_InitializeAttributes::CallFunc_GetCrouchMovementCoefficient_Crouch_Coefficient' has a wrong offset!");
static_assert(offsetof(BP_MovementCharacter_C_InitializeAttributes, CallFunc_MakeOutgoingSpec_ReturnValue) == 0x000018, "Member 'BP_MovementCharacter_C_InitializeAttributes::CallFunc_MakeOutgoingSpec_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MovementCharacter_C_InitializeAttributes, CallFunc_GetInitialMovementSpeed_InitialMovementSpeed) == 0x000028, "Member 'BP_MovementCharacter_C_InitializeAttributes::CallFunc_GetInitialMovementSpeed_InitialMovementSpeed' has a wrong offset!");
static_assert(offsetof(BP_MovementCharacter_C_InitializeAttributes, CallFunc_AssignTagSetByCallerMagnitude_ReturnValue) == 0x000030, "Member 'BP_MovementCharacter_C_InitializeAttributes::CallFunc_AssignTagSetByCallerMagnitude_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MovementCharacter_C_InitializeAttributes, CallFunc_AssignTagSetByCallerMagnitude_ReturnValue_1) == 0x000040, "Member 'BP_MovementCharacter_C_InitializeAttributes::CallFunc_AssignTagSetByCallerMagnitude_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MovementCharacter_C_InitializeAttributes, CallFunc_AssignTagSetByCallerMagnitude_ReturnValue_2) == 0x000050, "Member 'BP_MovementCharacter_C_InitializeAttributes::CallFunc_AssignTagSetByCallerMagnitude_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_MovementCharacter_C_InitializeAttributes, CallFunc_AssignTagSetByCallerMagnitude_ReturnValue_3) == 0x000060, "Member 'BP_MovementCharacter_C_InitializeAttributes::CallFunc_AssignTagSetByCallerMagnitude_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_MovementCharacter_C_InitializeAttributes, CallFunc_AssignTagSetByCallerMagnitude_ReturnValue_4) == 0x000070, "Member 'BP_MovementCharacter_C_InitializeAttributes::CallFunc_AssignTagSetByCallerMagnitude_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_MovementCharacter_C_InitializeAttributes, CallFunc_AssignTagSetByCallerMagnitude_ReturnValue_5) == 0x000080, "Member 'BP_MovementCharacter_C_InitializeAttributes::CallFunc_AssignTagSetByCallerMagnitude_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_MovementCharacter_C_InitializeAttributes, CallFunc_AssignTagSetByCallerMagnitude_ReturnValue_6) == 0x000090, "Member 'BP_MovementCharacter_C_InitializeAttributes::CallFunc_AssignTagSetByCallerMagnitude_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_MovementCharacter_C_InitializeAttributes, CallFunc_BP_ApplyGameplayEffectSpecToSelf_ReturnValue) == 0x0000A0, "Member 'BP_MovementCharacter_C_InitializeAttributes::CallFunc_BP_ApplyGameplayEffectSpecToSelf_ReturnValue' has a wrong offset!");

// Function BP_MovementCharacter.BP_MovementCharacter_C.InitializeMovementSettings
// 0x0068 (0x0068 - 0x0000)
struct BP_MovementCharacter_C_InitializeMovementSettings final
{
public:
	struct FMovementDataJP                        CallFunc_GetDataTableRowFromName_OutRow;           // 0x0000(0x0040)()
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_VariableSet_default_friction_ImplicitCast;  // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_VariableSet_CachedBackwardsMovementSpeedCoefficient_ImplicitCast; // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_VariableSet_CachedSidewaysMovementSpeedCoefficient_ImplicitCast; // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_VariableSet_default_braking_ImplicitCast;   // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MovementCharacter_C_InitializeMovementSettings) == 0x000008, "Wrong alignment on BP_MovementCharacter_C_InitializeMovementSettings");
static_assert(sizeof(BP_MovementCharacter_C_InitializeMovementSettings) == 0x000068, "Wrong size on BP_MovementCharacter_C_InitializeMovementSettings");
static_assert(offsetof(BP_MovementCharacter_C_InitializeMovementSettings, CallFunc_GetDataTableRowFromName_OutRow) == 0x000000, "Member 'BP_MovementCharacter_C_InitializeMovementSettings::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(BP_MovementCharacter_C_InitializeMovementSettings, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000040, "Member 'BP_MovementCharacter_C_InitializeMovementSettings::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MovementCharacter_C_InitializeMovementSettings, K2Node_VariableSet_default_friction_ImplicitCast) == 0x000048, "Member 'BP_MovementCharacter_C_InitializeMovementSettings::K2Node_VariableSet_default_friction_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_MovementCharacter_C_InitializeMovementSettings, K2Node_VariableSet_CachedBackwardsMovementSpeedCoefficient_ImplicitCast) == 0x000050, "Member 'BP_MovementCharacter_C_InitializeMovementSettings::K2Node_VariableSet_CachedBackwardsMovementSpeedCoefficient_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_MovementCharacter_C_InitializeMovementSettings, K2Node_VariableSet_CachedSidewaysMovementSpeedCoefficient_ImplicitCast) == 0x000058, "Member 'BP_MovementCharacter_C_InitializeMovementSettings::K2Node_VariableSet_CachedSidewaysMovementSpeedCoefficient_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_MovementCharacter_C_InitializeMovementSettings, K2Node_VariableSet_default_braking_ImplicitCast) == 0x000060, "Member 'BP_MovementCharacter_C_InitializeMovementSettings::K2Node_VariableSet_default_braking_ImplicitCast' has a wrong offset!");

// Function BP_MovementCharacter.BP_MovementCharacter_C.InpActEvt_IA_Crouch_K2Node_EnhancedInputActionEvent_4
// 0x0030 (0x0030 - 0x0000)
struct BP_MovementCharacter_C_InpActEvt_IA_Crouch_K2Node_EnhancedInputActionEvent_4 final
{
public:
	struct FInputActionValue                      ActionValue;                                       // 0x0000(0x0020)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	float                                         ElapsedTime;                                       // 0x0020(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TriggeredTime;                                     // 0x0024(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	const class UInputAction*                     SourceAction;                                      // 0x0028(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MovementCharacter_C_InpActEvt_IA_Crouch_K2Node_EnhancedInputActionEvent_4) == 0x000008, "Wrong alignment on BP_MovementCharacter_C_InpActEvt_IA_Crouch_K2Node_EnhancedInputActionEvent_4");
static_assert(sizeof(BP_MovementCharacter_C_InpActEvt_IA_Crouch_K2Node_EnhancedInputActionEvent_4) == 0x000030, "Wrong size on BP_MovementCharacter_C_InpActEvt_IA_Crouch_K2Node_EnhancedInputActionEvent_4");
static_assert(offsetof(BP_MovementCharacter_C_InpActEvt_IA_Crouch_K2Node_EnhancedInputActionEvent_4, ActionValue) == 0x000000, "Member 'BP_MovementCharacter_C_InpActEvt_IA_Crouch_K2Node_EnhancedInputActionEvent_4::ActionValue' has a wrong offset!");
static_assert(offsetof(BP_MovementCharacter_C_InpActEvt_IA_Crouch_K2Node_EnhancedInputActionEvent_4, ElapsedTime) == 0x000020, "Member 'BP_MovementCharacter_C_InpActEvt_IA_Crouch_K2Node_EnhancedInputActionEvent_4::ElapsedTime' has a wrong offset!");
static_assert(offsetof(BP_MovementCharacter_C_InpActEvt_IA_Crouch_K2Node_EnhancedInputActionEvent_4, TriggeredTime) == 0x000024, "Member 'BP_MovementCharacter_C_InpActEvt_IA_Crouch_K2Node_EnhancedInputActionEvent_4::TriggeredTime' has a wrong offset!");
static_assert(offsetof(BP_MovementCharacter_C_InpActEvt_IA_Crouch_K2Node_EnhancedInputActionEvent_4, SourceAction) == 0x000028, "Member 'BP_MovementCharacter_C_InpActEvt_IA_Crouch_K2Node_EnhancedInputActionEvent_4::SourceAction' has a wrong offset!");

// Function BP_MovementCharacter.BP_MovementCharacter_C.InpActEvt_IA_Crouch_K2Node_EnhancedInputActionEvent_5
// 0x0030 (0x0030 - 0x0000)
struct BP_MovementCharacter_C_InpActEvt_IA_Crouch_K2Node_EnhancedInputActionEvent_5 final
{
public:
	struct FInputActionValue                      ActionValue;                                       // 0x0000(0x0020)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	float                                         ElapsedTime;                                       // 0x0020(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TriggeredTime;                                     // 0x0024(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	const class UInputAction*                     SourceAction;                                      // 0x0028(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MovementCharacter_C_InpActEvt_IA_Crouch_K2Node_EnhancedInputActionEvent_5) == 0x000008, "Wrong alignment on BP_MovementCharacter_C_InpActEvt_IA_Crouch_K2Node_EnhancedInputActionEvent_5");
static_assert(sizeof(BP_MovementCharacter_C_InpActEvt_IA_Crouch_K2Node_EnhancedInputActionEvent_5) == 0x000030, "Wrong size on BP_MovementCharacter_C_InpActEvt_IA_Crouch_K2Node_EnhancedInputActionEvent_5");
static_assert(offsetof(BP_MovementCharacter_C_InpActEvt_IA_Crouch_K2Node_EnhancedInputActionEvent_5, ActionValue) == 0x000000, "Member 'BP_MovementCharacter_C_InpActEvt_IA_Crouch_K2Node_EnhancedInputActionEvent_5::ActionValue' has a wrong offset!");
static_assert(offsetof(BP_MovementCharacter_C_InpActEvt_IA_Crouch_K2Node_EnhancedInputActionEvent_5, ElapsedTime) == 0x000020, "Member 'BP_MovementCharacter_C_InpActEvt_IA_Crouch_K2Node_EnhancedInputActionEvent_5::ElapsedTime' has a wrong offset!");
static_assert(offsetof(BP_MovementCharacter_C_InpActEvt_IA_Crouch_K2Node_EnhancedInputActionEvent_5, TriggeredTime) == 0x000024, "Member 'BP_MovementCharacter_C_InpActEvt_IA_Crouch_K2Node_EnhancedInputActionEvent_5::TriggeredTime' has a wrong offset!");
static_assert(offsetof(BP_MovementCharacter_C_InpActEvt_IA_Crouch_K2Node_EnhancedInputActionEvent_5, SourceAction) == 0x000028, "Member 'BP_MovementCharacter_C_InpActEvt_IA_Crouch_K2Node_EnhancedInputActionEvent_5::SourceAction' has a wrong offset!");

// Function BP_MovementCharacter.BP_MovementCharacter_C.InpActEvt_IA_Crouch_K2Node_EnhancedInputActionEvent_6
// 0x0030 (0x0030 - 0x0000)
struct BP_MovementCharacter_C_InpActEvt_IA_Crouch_K2Node_EnhancedInputActionEvent_6 final
{
public:
	struct FInputActionValue                      ActionValue;                                       // 0x0000(0x0020)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	float                                         ElapsedTime;                                       // 0x0020(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TriggeredTime;                                     // 0x0024(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	const class UInputAction*                     SourceAction;                                      // 0x0028(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MovementCharacter_C_InpActEvt_IA_Crouch_K2Node_EnhancedInputActionEvent_6) == 0x000008, "Wrong alignment on BP_MovementCharacter_C_InpActEvt_IA_Crouch_K2Node_EnhancedInputActionEvent_6");
static_assert(sizeof(BP_MovementCharacter_C_InpActEvt_IA_Crouch_K2Node_EnhancedInputActionEvent_6) == 0x000030, "Wrong size on BP_MovementCharacter_C_InpActEvt_IA_Crouch_K2Node_EnhancedInputActionEvent_6");
static_assert(offsetof(BP_MovementCharacter_C_InpActEvt_IA_Crouch_K2Node_EnhancedInputActionEvent_6, ActionValue) == 0x000000, "Member 'BP_MovementCharacter_C_InpActEvt_IA_Crouch_K2Node_EnhancedInputActionEvent_6::ActionValue' has a wrong offset!");
static_assert(offsetof(BP_MovementCharacter_C_InpActEvt_IA_Crouch_K2Node_EnhancedInputActionEvent_6, ElapsedTime) == 0x000020, "Member 'BP_MovementCharacter_C_InpActEvt_IA_Crouch_K2Node_EnhancedInputActionEvent_6::ElapsedTime' has a wrong offset!");
static_assert(offsetof(BP_MovementCharacter_C_InpActEvt_IA_Crouch_K2Node_EnhancedInputActionEvent_6, TriggeredTime) == 0x000024, "Member 'BP_MovementCharacter_C_InpActEvt_IA_Crouch_K2Node_EnhancedInputActionEvent_6::TriggeredTime' has a wrong offset!");
static_assert(offsetof(BP_MovementCharacter_C_InpActEvt_IA_Crouch_K2Node_EnhancedInputActionEvent_6, SourceAction) == 0x000028, "Member 'BP_MovementCharacter_C_InpActEvt_IA_Crouch_K2Node_EnhancedInputActionEvent_6::SourceAction' has a wrong offset!");

// Function BP_MovementCharacter.BP_MovementCharacter_C.InpActEvt_IA_CrouchToggle_K2Node_EnhancedInputActionEvent_3
// 0x0030 (0x0030 - 0x0000)
struct BP_MovementCharacter_C_InpActEvt_IA_CrouchToggle_K2Node_EnhancedInputActionEvent_3 final
{
public:
	struct FInputActionValue                      ActionValue;                                       // 0x0000(0x0020)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	float                                         ElapsedTime;                                       // 0x0020(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TriggeredTime;                                     // 0x0024(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	const class UInputAction*                     SourceAction;                                      // 0x0028(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MovementCharacter_C_InpActEvt_IA_CrouchToggle_K2Node_EnhancedInputActionEvent_3) == 0x000008, "Wrong alignment on BP_MovementCharacter_C_InpActEvt_IA_CrouchToggle_K2Node_EnhancedInputActionEvent_3");
static_assert(sizeof(BP_MovementCharacter_C_InpActEvt_IA_CrouchToggle_K2Node_EnhancedInputActionEvent_3) == 0x000030, "Wrong size on BP_MovementCharacter_C_InpActEvt_IA_CrouchToggle_K2Node_EnhancedInputActionEvent_3");
static_assert(offsetof(BP_MovementCharacter_C_InpActEvt_IA_CrouchToggle_K2Node_EnhancedInputActionEvent_3, ActionValue) == 0x000000, "Member 'BP_MovementCharacter_C_InpActEvt_IA_CrouchToggle_K2Node_EnhancedInputActionEvent_3::ActionValue' has a wrong offset!");
static_assert(offsetof(BP_MovementCharacter_C_InpActEvt_IA_CrouchToggle_K2Node_EnhancedInputActionEvent_3, ElapsedTime) == 0x000020, "Member 'BP_MovementCharacter_C_InpActEvt_IA_CrouchToggle_K2Node_EnhancedInputActionEvent_3::ElapsedTime' has a wrong offset!");
static_assert(offsetof(BP_MovementCharacter_C_InpActEvt_IA_CrouchToggle_K2Node_EnhancedInputActionEvent_3, TriggeredTime) == 0x000024, "Member 'BP_MovementCharacter_C_InpActEvt_IA_CrouchToggle_K2Node_EnhancedInputActionEvent_3::TriggeredTime' has a wrong offset!");
static_assert(offsetof(BP_MovementCharacter_C_InpActEvt_IA_CrouchToggle_K2Node_EnhancedInputActionEvent_3, SourceAction) == 0x000028, "Member 'BP_MovementCharacter_C_InpActEvt_IA_CrouchToggle_K2Node_EnhancedInputActionEvent_3::SourceAction' has a wrong offset!");

// Function BP_MovementCharacter.BP_MovementCharacter_C.InpActEvt_IA_MoveBackwards_K2Node_EnhancedInputActionEvent_0
// 0x0030 (0x0030 - 0x0000)
struct BP_MovementCharacter_C_InpActEvt_IA_MoveBackwards_K2Node_EnhancedInputActionEvent_0 final
{
public:
	struct FInputActionValue                      ActionValue;                                       // 0x0000(0x0020)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	float                                         ElapsedTime;                                       // 0x0020(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TriggeredTime;                                     // 0x0024(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	const class UInputAction*                     SourceAction;                                      // 0x0028(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MovementCharacter_C_InpActEvt_IA_MoveBackwards_K2Node_EnhancedInputActionEvent_0) == 0x000008, "Wrong alignment on BP_MovementCharacter_C_InpActEvt_IA_MoveBackwards_K2Node_EnhancedInputActionEvent_0");
static_assert(sizeof(BP_MovementCharacter_C_InpActEvt_IA_MoveBackwards_K2Node_EnhancedInputActionEvent_0) == 0x000030, "Wrong size on BP_MovementCharacter_C_InpActEvt_IA_MoveBackwards_K2Node_EnhancedInputActionEvent_0");
static_assert(offsetof(BP_MovementCharacter_C_InpActEvt_IA_MoveBackwards_K2Node_EnhancedInputActionEvent_0, ActionValue) == 0x000000, "Member 'BP_MovementCharacter_C_InpActEvt_IA_MoveBackwards_K2Node_EnhancedInputActionEvent_0::ActionValue' has a wrong offset!");
static_assert(offsetof(BP_MovementCharacter_C_InpActEvt_IA_MoveBackwards_K2Node_EnhancedInputActionEvent_0, ElapsedTime) == 0x000020, "Member 'BP_MovementCharacter_C_InpActEvt_IA_MoveBackwards_K2Node_EnhancedInputActionEvent_0::ElapsedTime' has a wrong offset!");
static_assert(offsetof(BP_MovementCharacter_C_InpActEvt_IA_MoveBackwards_K2Node_EnhancedInputActionEvent_0, TriggeredTime) == 0x000024, "Member 'BP_MovementCharacter_C_InpActEvt_IA_MoveBackwards_K2Node_EnhancedInputActionEvent_0::TriggeredTime' has a wrong offset!");
static_assert(offsetof(BP_MovementCharacter_C_InpActEvt_IA_MoveBackwards_K2Node_EnhancedInputActionEvent_0, SourceAction) == 0x000028, "Member 'BP_MovementCharacter_C_InpActEvt_IA_MoveBackwards_K2Node_EnhancedInputActionEvent_0::SourceAction' has a wrong offset!");

// Function BP_MovementCharacter.BP_MovementCharacter_C.InpActEvt_IA_MoveBackwards_K2Node_EnhancedInputActionEvent_1
// 0x0030 (0x0030 - 0x0000)
struct BP_MovementCharacter_C_InpActEvt_IA_MoveBackwards_K2Node_EnhancedInputActionEvent_1 final
{
public:
	struct FInputActionValue                      ActionValue;                                       // 0x0000(0x0020)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	float                                         ElapsedTime;                                       // 0x0020(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TriggeredTime;                                     // 0x0024(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	const class UInputAction*                     SourceAction;                                      // 0x0028(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MovementCharacter_C_InpActEvt_IA_MoveBackwards_K2Node_EnhancedInputActionEvent_1) == 0x000008, "Wrong alignment on BP_MovementCharacter_C_InpActEvt_IA_MoveBackwards_K2Node_EnhancedInputActionEvent_1");
static_assert(sizeof(BP_MovementCharacter_C_InpActEvt_IA_MoveBackwards_K2Node_EnhancedInputActionEvent_1) == 0x000030, "Wrong size on BP_MovementCharacter_C_InpActEvt_IA_MoveBackwards_K2Node_EnhancedInputActionEvent_1");
static_assert(offsetof(BP_MovementCharacter_C_InpActEvt_IA_MoveBackwards_K2Node_EnhancedInputActionEvent_1, ActionValue) == 0x000000, "Member 'BP_MovementCharacter_C_InpActEvt_IA_MoveBackwards_K2Node_EnhancedInputActionEvent_1::ActionValue' has a wrong offset!");
static_assert(offsetof(BP_MovementCharacter_C_InpActEvt_IA_MoveBackwards_K2Node_EnhancedInputActionEvent_1, ElapsedTime) == 0x000020, "Member 'BP_MovementCharacter_C_InpActEvt_IA_MoveBackwards_K2Node_EnhancedInputActionEvent_1::ElapsedTime' has a wrong offset!");
static_assert(offsetof(BP_MovementCharacter_C_InpActEvt_IA_MoveBackwards_K2Node_EnhancedInputActionEvent_1, TriggeredTime) == 0x000024, "Member 'BP_MovementCharacter_C_InpActEvt_IA_MoveBackwards_K2Node_EnhancedInputActionEvent_1::TriggeredTime' has a wrong offset!");
static_assert(offsetof(BP_MovementCharacter_C_InpActEvt_IA_MoveBackwards_K2Node_EnhancedInputActionEvent_1, SourceAction) == 0x000028, "Member 'BP_MovementCharacter_C_InpActEvt_IA_MoveBackwards_K2Node_EnhancedInputActionEvent_1::SourceAction' has a wrong offset!");

// Function BP_MovementCharacter.BP_MovementCharacter_C.InpActEvt_IA_MoveBackwards_K2Node_EnhancedInputActionEvent_2
// 0x0030 (0x0030 - 0x0000)
struct BP_MovementCharacter_C_InpActEvt_IA_MoveBackwards_K2Node_EnhancedInputActionEvent_2 final
{
public:
	struct FInputActionValue                      ActionValue;                                       // 0x0000(0x0020)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	float                                         ElapsedTime;                                       // 0x0020(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TriggeredTime;                                     // 0x0024(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	const class UInputAction*                     SourceAction;                                      // 0x0028(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MovementCharacter_C_InpActEvt_IA_MoveBackwards_K2Node_EnhancedInputActionEvent_2) == 0x000008, "Wrong alignment on BP_MovementCharacter_C_InpActEvt_IA_MoveBackwards_K2Node_EnhancedInputActionEvent_2");
static_assert(sizeof(BP_MovementCharacter_C_InpActEvt_IA_MoveBackwards_K2Node_EnhancedInputActionEvent_2) == 0x000030, "Wrong size on BP_MovementCharacter_C_InpActEvt_IA_MoveBackwards_K2Node_EnhancedInputActionEvent_2");
static_assert(offsetof(BP_MovementCharacter_C_InpActEvt_IA_MoveBackwards_K2Node_EnhancedInputActionEvent_2, ActionValue) == 0x000000, "Member 'BP_MovementCharacter_C_InpActEvt_IA_MoveBackwards_K2Node_EnhancedInputActionEvent_2::ActionValue' has a wrong offset!");
static_assert(offsetof(BP_MovementCharacter_C_InpActEvt_IA_MoveBackwards_K2Node_EnhancedInputActionEvent_2, ElapsedTime) == 0x000020, "Member 'BP_MovementCharacter_C_InpActEvt_IA_MoveBackwards_K2Node_EnhancedInputActionEvent_2::ElapsedTime' has a wrong offset!");
static_assert(offsetof(BP_MovementCharacter_C_InpActEvt_IA_MoveBackwards_K2Node_EnhancedInputActionEvent_2, TriggeredTime) == 0x000024, "Member 'BP_MovementCharacter_C_InpActEvt_IA_MoveBackwards_K2Node_EnhancedInputActionEvent_2::TriggeredTime' has a wrong offset!");
static_assert(offsetof(BP_MovementCharacter_C_InpActEvt_IA_MoveBackwards_K2Node_EnhancedInputActionEvent_2, SourceAction) == 0x000028, "Member 'BP_MovementCharacter_C_InpActEvt_IA_MoveBackwards_K2Node_EnhancedInputActionEvent_2::SourceAction' has a wrong offset!");

// Function BP_MovementCharacter.BP_MovementCharacter_C.InpActEvt_IA_SprintDash_K2Node_EnhancedInputActionEvent_7
// 0x0030 (0x0030 - 0x0000)
struct BP_MovementCharacter_C_InpActEvt_IA_SprintDash_K2Node_EnhancedInputActionEvent_7 final
{
public:
	struct FInputActionValue                      ActionValue;                                       // 0x0000(0x0020)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	float                                         ElapsedTime;                                       // 0x0020(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TriggeredTime;                                     // 0x0024(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	const class UInputAction*                     SourceAction;                                      // 0x0028(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MovementCharacter_C_InpActEvt_IA_SprintDash_K2Node_EnhancedInputActionEvent_7) == 0x000008, "Wrong alignment on BP_MovementCharacter_C_InpActEvt_IA_SprintDash_K2Node_EnhancedInputActionEvent_7");
static_assert(sizeof(BP_MovementCharacter_C_InpActEvt_IA_SprintDash_K2Node_EnhancedInputActionEvent_7) == 0x000030, "Wrong size on BP_MovementCharacter_C_InpActEvt_IA_SprintDash_K2Node_EnhancedInputActionEvent_7");
static_assert(offsetof(BP_MovementCharacter_C_InpActEvt_IA_SprintDash_K2Node_EnhancedInputActionEvent_7, ActionValue) == 0x000000, "Member 'BP_MovementCharacter_C_InpActEvt_IA_SprintDash_K2Node_EnhancedInputActionEvent_7::ActionValue' has a wrong offset!");
static_assert(offsetof(BP_MovementCharacter_C_InpActEvt_IA_SprintDash_K2Node_EnhancedInputActionEvent_7, ElapsedTime) == 0x000020, "Member 'BP_MovementCharacter_C_InpActEvt_IA_SprintDash_K2Node_EnhancedInputActionEvent_7::ElapsedTime' has a wrong offset!");
static_assert(offsetof(BP_MovementCharacter_C_InpActEvt_IA_SprintDash_K2Node_EnhancedInputActionEvent_7, TriggeredTime) == 0x000024, "Member 'BP_MovementCharacter_C_InpActEvt_IA_SprintDash_K2Node_EnhancedInputActionEvent_7::TriggeredTime' has a wrong offset!");
static_assert(offsetof(BP_MovementCharacter_C_InpActEvt_IA_SprintDash_K2Node_EnhancedInputActionEvent_7, SourceAction) == 0x000028, "Member 'BP_MovementCharacter_C_InpActEvt_IA_SprintDash_K2Node_EnhancedInputActionEvent_7::SourceAction' has a wrong offset!");

// Function BP_MovementCharacter.BP_MovementCharacter_C.InpActEvt_IA_SprintDash_K2Node_EnhancedInputActionEvent_8
// 0x0030 (0x0030 - 0x0000)
struct BP_MovementCharacter_C_InpActEvt_IA_SprintDash_K2Node_EnhancedInputActionEvent_8 final
{
public:
	struct FInputActionValue                      ActionValue;                                       // 0x0000(0x0020)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	float                                         ElapsedTime;                                       // 0x0020(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TriggeredTime;                                     // 0x0024(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	const class UInputAction*                     SourceAction;                                      // 0x0028(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MovementCharacter_C_InpActEvt_IA_SprintDash_K2Node_EnhancedInputActionEvent_8) == 0x000008, "Wrong alignment on BP_MovementCharacter_C_InpActEvt_IA_SprintDash_K2Node_EnhancedInputActionEvent_8");
static_assert(sizeof(BP_MovementCharacter_C_InpActEvt_IA_SprintDash_K2Node_EnhancedInputActionEvent_8) == 0x000030, "Wrong size on BP_MovementCharacter_C_InpActEvt_IA_SprintDash_K2Node_EnhancedInputActionEvent_8");
static_assert(offsetof(BP_MovementCharacter_C_InpActEvt_IA_SprintDash_K2Node_EnhancedInputActionEvent_8, ActionValue) == 0x000000, "Member 'BP_MovementCharacter_C_InpActEvt_IA_SprintDash_K2Node_EnhancedInputActionEvent_8::ActionValue' has a wrong offset!");
static_assert(offsetof(BP_MovementCharacter_C_InpActEvt_IA_SprintDash_K2Node_EnhancedInputActionEvent_8, ElapsedTime) == 0x000020, "Member 'BP_MovementCharacter_C_InpActEvt_IA_SprintDash_K2Node_EnhancedInputActionEvent_8::ElapsedTime' has a wrong offset!");
static_assert(offsetof(BP_MovementCharacter_C_InpActEvt_IA_SprintDash_K2Node_EnhancedInputActionEvent_8, TriggeredTime) == 0x000024, "Member 'BP_MovementCharacter_C_InpActEvt_IA_SprintDash_K2Node_EnhancedInputActionEvent_8::TriggeredTime' has a wrong offset!");
static_assert(offsetof(BP_MovementCharacter_C_InpActEvt_IA_SprintDash_K2Node_EnhancedInputActionEvent_8, SourceAction) == 0x000028, "Member 'BP_MovementCharacter_C_InpActEvt_IA_SprintDash_K2Node_EnhancedInputActionEvent_8::SourceAction' has a wrong offset!");

// Function BP_MovementCharacter.BP_MovementCharacter_C.InpActEvt_IA_SprintDash_K2Node_EnhancedInputActionEvent_9
// 0x0030 (0x0030 - 0x0000)
struct BP_MovementCharacter_C_InpActEvt_IA_SprintDash_K2Node_EnhancedInputActionEvent_9 final
{
public:
	struct FInputActionValue                      ActionValue;                                       // 0x0000(0x0020)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	float                                         ElapsedTime;                                       // 0x0020(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TriggeredTime;                                     // 0x0024(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	const class UInputAction*                     SourceAction;                                      // 0x0028(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MovementCharacter_C_InpActEvt_IA_SprintDash_K2Node_EnhancedInputActionEvent_9) == 0x000008, "Wrong alignment on BP_MovementCharacter_C_InpActEvt_IA_SprintDash_K2Node_EnhancedInputActionEvent_9");
static_assert(sizeof(BP_MovementCharacter_C_InpActEvt_IA_SprintDash_K2Node_EnhancedInputActionEvent_9) == 0x000030, "Wrong size on BP_MovementCharacter_C_InpActEvt_IA_SprintDash_K2Node_EnhancedInputActionEvent_9");
static_assert(offsetof(BP_MovementCharacter_C_InpActEvt_IA_SprintDash_K2Node_EnhancedInputActionEvent_9, ActionValue) == 0x000000, "Member 'BP_MovementCharacter_C_InpActEvt_IA_SprintDash_K2Node_EnhancedInputActionEvent_9::ActionValue' has a wrong offset!");
static_assert(offsetof(BP_MovementCharacter_C_InpActEvt_IA_SprintDash_K2Node_EnhancedInputActionEvent_9, ElapsedTime) == 0x000020, "Member 'BP_MovementCharacter_C_InpActEvt_IA_SprintDash_K2Node_EnhancedInputActionEvent_9::ElapsedTime' has a wrong offset!");
static_assert(offsetof(BP_MovementCharacter_C_InpActEvt_IA_SprintDash_K2Node_EnhancedInputActionEvent_9, TriggeredTime) == 0x000024, "Member 'BP_MovementCharacter_C_InpActEvt_IA_SprintDash_K2Node_EnhancedInputActionEvent_9::TriggeredTime' has a wrong offset!");
static_assert(offsetof(BP_MovementCharacter_C_InpActEvt_IA_SprintDash_K2Node_EnhancedInputActionEvent_9, SourceAction) == 0x000028, "Member 'BP_MovementCharacter_C_InpActEvt_IA_SprintDash_K2Node_EnhancedInputActionEvent_9::SourceAction' has a wrong offset!");

// Function BP_MovementCharacter.BP_MovementCharacter_C.JumpVelocityChanged
// 0x0010 (0x0010 - 0x0000)
struct BP_MovementCharacter_C_JumpVelocityChanged final
{
public:
	double                                        JumpVelocity;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_VariableSet_JumpZVelocity_ImplicitCast;     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MovementCharacter_C_JumpVelocityChanged) == 0x000008, "Wrong alignment on BP_MovementCharacter_C_JumpVelocityChanged");
static_assert(sizeof(BP_MovementCharacter_C_JumpVelocityChanged) == 0x000010, "Wrong size on BP_MovementCharacter_C_JumpVelocityChanged");
static_assert(offsetof(BP_MovementCharacter_C_JumpVelocityChanged, JumpVelocity) == 0x000000, "Member 'BP_MovementCharacter_C_JumpVelocityChanged::JumpVelocity' has a wrong offset!");
static_assert(offsetof(BP_MovementCharacter_C_JumpVelocityChanged, K2Node_VariableSet_JumpZVelocity_ImplicitCast) == 0x000008, "Member 'BP_MovementCharacter_C_JumpVelocityChanged::K2Node_VariableSet_JumpZVelocity_ImplicitCast' has a wrong offset!");

// Function BP_MovementCharacter.BP_MovementCharacter_C.K2_OnEndCrouch
// 0x0008 (0x0008 - 0x0000)
struct BP_MovementCharacter_C_K2_OnEndCrouch final
{
public:
	float                                         HalfHeightAdjust;                                  // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ScaledHalfHeightAdjust;                            // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MovementCharacter_C_K2_OnEndCrouch) == 0x000004, "Wrong alignment on BP_MovementCharacter_C_K2_OnEndCrouch");
static_assert(sizeof(BP_MovementCharacter_C_K2_OnEndCrouch) == 0x000008, "Wrong size on BP_MovementCharacter_C_K2_OnEndCrouch");
static_assert(offsetof(BP_MovementCharacter_C_K2_OnEndCrouch, HalfHeightAdjust) == 0x000000, "Member 'BP_MovementCharacter_C_K2_OnEndCrouch::HalfHeightAdjust' has a wrong offset!");
static_assert(offsetof(BP_MovementCharacter_C_K2_OnEndCrouch, ScaledHalfHeightAdjust) == 0x000004, "Member 'BP_MovementCharacter_C_K2_OnEndCrouch::ScaledHalfHeightAdjust' has a wrong offset!");

// Function BP_MovementCharacter.BP_MovementCharacter_C.K2_OnMovementModeChanged
// 0x0004 (0x0004 - 0x0000)
struct BP_MovementCharacter_C_K2_OnMovementModeChanged final
{
public:
	EMovementMode                                 PrevMovementMode;                                  // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMovementMode                                 NewMovementMode;                                   // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         PrevCustomMode;                                    // 0x0002(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         NewCustomMode;                                     // 0x0003(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MovementCharacter_C_K2_OnMovementModeChanged) == 0x000001, "Wrong alignment on BP_MovementCharacter_C_K2_OnMovementModeChanged");
static_assert(sizeof(BP_MovementCharacter_C_K2_OnMovementModeChanged) == 0x000004, "Wrong size on BP_MovementCharacter_C_K2_OnMovementModeChanged");
static_assert(offsetof(BP_MovementCharacter_C_K2_OnMovementModeChanged, PrevMovementMode) == 0x000000, "Member 'BP_MovementCharacter_C_K2_OnMovementModeChanged::PrevMovementMode' has a wrong offset!");
static_assert(offsetof(BP_MovementCharacter_C_K2_OnMovementModeChanged, NewMovementMode) == 0x000001, "Member 'BP_MovementCharacter_C_K2_OnMovementModeChanged::NewMovementMode' has a wrong offset!");
static_assert(offsetof(BP_MovementCharacter_C_K2_OnMovementModeChanged, PrevCustomMode) == 0x000002, "Member 'BP_MovementCharacter_C_K2_OnMovementModeChanged::PrevCustomMode' has a wrong offset!");
static_assert(offsetof(BP_MovementCharacter_C_K2_OnMovementModeChanged, NewCustomMode) == 0x000003, "Member 'BP_MovementCharacter_C_K2_OnMovementModeChanged::NewCustomMode' has a wrong offset!");

// Function BP_MovementCharacter.BP_MovementCharacter_C.K2_OnStartCrouch
// 0x0008 (0x0008 - 0x0000)
struct BP_MovementCharacter_C_K2_OnStartCrouch final
{
public:
	float                                         HalfHeightAdjust;                                  // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ScaledHalfHeightAdjust;                            // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MovementCharacter_C_K2_OnStartCrouch) == 0x000004, "Wrong alignment on BP_MovementCharacter_C_K2_OnStartCrouch");
static_assert(sizeof(BP_MovementCharacter_C_K2_OnStartCrouch) == 0x000008, "Wrong size on BP_MovementCharacter_C_K2_OnStartCrouch");
static_assert(offsetof(BP_MovementCharacter_C_K2_OnStartCrouch, HalfHeightAdjust) == 0x000000, "Member 'BP_MovementCharacter_C_K2_OnStartCrouch::HalfHeightAdjust' has a wrong offset!");
static_assert(offsetof(BP_MovementCharacter_C_K2_OnStartCrouch, ScaledHalfHeightAdjust) == 0x000004, "Member 'BP_MovementCharacter_C_K2_OnStartCrouch::ScaledHalfHeightAdjust' has a wrong offset!");

// Function BP_MovementCharacter.BP_MovementCharacter_C.MovementInputPreProcess
// 0x0098 (0x0098 - 0x0000)
struct BP_MovementCharacter_C_MovementInputPreProcess final
{
public:
	struct FVector                                WorldDirection;                                    // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ScaleValue;                                        // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bForce;                                            // 0x001C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CachedScale;                                       // 0x0020(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                SidewaysComponent;                                 // 0x0028(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                ForwardComponent;                                  // 0x0040(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_ReverseMovementDirectionPreProcess_ModifiedValue; // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_WalkingBackwardsInputPreProcess_ModifiedMovementScale; // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Strafing_Input_Pre_Process_ModifiedScale; // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_FunctionEntry_ScaleValue_ImplicitCast;      // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_84[0x4];                                       // 0x0084(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_VariableSetRef_Target_ImplicitCast;         // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_ReverseMovementDirectionPreProcess_ScaleValue_ImplicitCast; // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MovementCharacter_C_MovementInputPreProcess) == 0x000008, "Wrong alignment on BP_MovementCharacter_C_MovementInputPreProcess");
static_assert(sizeof(BP_MovementCharacter_C_MovementInputPreProcess) == 0x000098, "Wrong size on BP_MovementCharacter_C_MovementInputPreProcess");
static_assert(offsetof(BP_MovementCharacter_C_MovementInputPreProcess, WorldDirection) == 0x000000, "Member 'BP_MovementCharacter_C_MovementInputPreProcess::WorldDirection' has a wrong offset!");
static_assert(offsetof(BP_MovementCharacter_C_MovementInputPreProcess, ScaleValue) == 0x000018, "Member 'BP_MovementCharacter_C_MovementInputPreProcess::ScaleValue' has a wrong offset!");
static_assert(offsetof(BP_MovementCharacter_C_MovementInputPreProcess, bForce) == 0x00001C, "Member 'BP_MovementCharacter_C_MovementInputPreProcess::bForce' has a wrong offset!");
static_assert(offsetof(BP_MovementCharacter_C_MovementInputPreProcess, CachedScale) == 0x000020, "Member 'BP_MovementCharacter_C_MovementInputPreProcess::CachedScale' has a wrong offset!");
static_assert(offsetof(BP_MovementCharacter_C_MovementInputPreProcess, SidewaysComponent) == 0x000028, "Member 'BP_MovementCharacter_C_MovementInputPreProcess::SidewaysComponent' has a wrong offset!");
static_assert(offsetof(BP_MovementCharacter_C_MovementInputPreProcess, ForwardComponent) == 0x000040, "Member 'BP_MovementCharacter_C_MovementInputPreProcess::ForwardComponent' has a wrong offset!");
static_assert(offsetof(BP_MovementCharacter_C_MovementInputPreProcess, CallFunc_SelectFloat_ReturnValue) == 0x000058, "Member 'BP_MovementCharacter_C_MovementInputPreProcess::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MovementCharacter_C_MovementInputPreProcess, CallFunc_ReverseMovementDirectionPreProcess_ModifiedValue) == 0x000060, "Member 'BP_MovementCharacter_C_MovementInputPreProcess::CallFunc_ReverseMovementDirectionPreProcess_ModifiedValue' has a wrong offset!");
static_assert(offsetof(BP_MovementCharacter_C_MovementInputPreProcess, CallFunc_WalkingBackwardsInputPreProcess_ModifiedMovementScale) == 0x000068, "Member 'BP_MovementCharacter_C_MovementInputPreProcess::CallFunc_WalkingBackwardsInputPreProcess_ModifiedMovementScale' has a wrong offset!");
static_assert(offsetof(BP_MovementCharacter_C_MovementInputPreProcess, CallFunc_Strafing_Input_Pre_Process_ModifiedScale) == 0x000070, "Member 'BP_MovementCharacter_C_MovementInputPreProcess::CallFunc_Strafing_Input_Pre_Process_ModifiedScale' has a wrong offset!");
static_assert(offsetof(BP_MovementCharacter_C_MovementInputPreProcess, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000078, "Member 'BP_MovementCharacter_C_MovementInputPreProcess::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MovementCharacter_C_MovementInputPreProcess, K2Node_FunctionEntry_ScaleValue_ImplicitCast) == 0x000080, "Member 'BP_MovementCharacter_C_MovementInputPreProcess::K2Node_FunctionEntry_ScaleValue_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_MovementCharacter_C_MovementInputPreProcess, K2Node_VariableSetRef_Target_ImplicitCast) == 0x000088, "Member 'BP_MovementCharacter_C_MovementInputPreProcess::K2Node_VariableSetRef_Target_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_MovementCharacter_C_MovementInputPreProcess, CallFunc_ReverseMovementDirectionPreProcess_ScaleValue_ImplicitCast) == 0x000090, "Member 'BP_MovementCharacter_C_MovementInputPreProcess::CallFunc_ReverseMovementDirectionPreProcess_ScaleValue_ImplicitCast' has a wrong offset!");

// Function BP_MovementCharacter.BP_MovementCharacter_C.MovementSpeedChanged
// 0x0010 (0x0010 - 0x0000)
struct BP_MovementCharacter_C_MovementSpeedChanged final
{
public:
	double                                        NewMovementSpeed;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_VariableSet_MaxWalkSpeed_ImplicitCast;      // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MovementCharacter_C_MovementSpeedChanged) == 0x000008, "Wrong alignment on BP_MovementCharacter_C_MovementSpeedChanged");
static_assert(sizeof(BP_MovementCharacter_C_MovementSpeedChanged) == 0x000010, "Wrong size on BP_MovementCharacter_C_MovementSpeedChanged");
static_assert(offsetof(BP_MovementCharacter_C_MovementSpeedChanged, NewMovementSpeed) == 0x000000, "Member 'BP_MovementCharacter_C_MovementSpeedChanged::NewMovementSpeed' has a wrong offset!");
static_assert(offsetof(BP_MovementCharacter_C_MovementSpeedChanged, K2Node_VariableSet_MaxWalkSpeed_ImplicitCast) == 0x000008, "Member 'BP_MovementCharacter_C_MovementSpeedChanged::K2Node_VariableSet_MaxWalkSpeed_ImplicitCast' has a wrong offset!");

// Function BP_MovementCharacter.BP_MovementCharacter_C.OnAimSpeedCoefficientChanged
// 0x0004 (0x0004 - 0x0000)
struct BP_MovementCharacter_C_OnAimSpeedCoefficientChanged final
{
public:
	float                                         SprintSpeed;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MovementCharacter_C_OnAimSpeedCoefficientChanged) == 0x000004, "Wrong alignment on BP_MovementCharacter_C_OnAimSpeedCoefficientChanged");
static_assert(sizeof(BP_MovementCharacter_C_OnAimSpeedCoefficientChanged) == 0x000004, "Wrong size on BP_MovementCharacter_C_OnAimSpeedCoefficientChanged");
static_assert(offsetof(BP_MovementCharacter_C_OnAimSpeedCoefficientChanged, SprintSpeed) == 0x000000, "Member 'BP_MovementCharacter_C_OnAimSpeedCoefficientChanged::SprintSpeed' has a wrong offset!");

// Function BP_MovementCharacter.BP_MovementCharacter_C.OnAirControlChanged
// 0x0004 (0x0004 - 0x0000)
struct BP_MovementCharacter_C_OnAirControlChanged final
{
public:
	float                                         AirControl;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MovementCharacter_C_OnAirControlChanged) == 0x000004, "Wrong alignment on BP_MovementCharacter_C_OnAirControlChanged");
static_assert(sizeof(BP_MovementCharacter_C_OnAirControlChanged) == 0x000004, "Wrong size on BP_MovementCharacter_C_OnAirControlChanged");
static_assert(offsetof(BP_MovementCharacter_C_OnAirControlChanged, AirControl) == 0x000000, "Member 'BP_MovementCharacter_C_OnAirControlChanged::AirControl' has a wrong offset!");

// Function BP_MovementCharacter.BP_MovementCharacter_C.OnCrouchJumpVelocityCoefficientChanged
// 0x0004 (0x0004 - 0x0000)
struct BP_MovementCharacter_C_OnCrouchJumpVelocityCoefficientChanged final
{
public:
	float                                         CrouchJumpVelocityCoefficient;                     // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MovementCharacter_C_OnCrouchJumpVelocityCoefficientChanged) == 0x000004, "Wrong alignment on BP_MovementCharacter_C_OnCrouchJumpVelocityCoefficientChanged");
static_assert(sizeof(BP_MovementCharacter_C_OnCrouchJumpVelocityCoefficientChanged) == 0x000004, "Wrong size on BP_MovementCharacter_C_OnCrouchJumpVelocityCoefficientChanged");
static_assert(offsetof(BP_MovementCharacter_C_OnCrouchJumpVelocityCoefficientChanged, CrouchJumpVelocityCoefficient) == 0x000000, "Member 'BP_MovementCharacter_C_OnCrouchJumpVelocityCoefficientChanged::CrouchJumpVelocityCoefficient' has a wrong offset!");

// Function BP_MovementCharacter.BP_MovementCharacter_C.OnCrouchSpeedCoefficientChanged
// 0x0004 (0x0004 - 0x0000)
struct BP_MovementCharacter_C_OnCrouchSpeedCoefficientChanged final
{
public:
	float                                         CrouchSpeed;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MovementCharacter_C_OnCrouchSpeedCoefficientChanged) == 0x000004, "Wrong alignment on BP_MovementCharacter_C_OnCrouchSpeedCoefficientChanged");
static_assert(sizeof(BP_MovementCharacter_C_OnCrouchSpeedCoefficientChanged) == 0x000004, "Wrong size on BP_MovementCharacter_C_OnCrouchSpeedCoefficientChanged");
static_assert(offsetof(BP_MovementCharacter_C_OnCrouchSpeedCoefficientChanged, CrouchSpeed) == 0x000000, "Member 'BP_MovementCharacter_C_OnCrouchSpeedCoefficientChanged::CrouchSpeed' has a wrong offset!");

// Function BP_MovementCharacter.BP_MovementCharacter_C.OnDied__DelegateSignature
// 0x0001 (0x0001 - 0x0000)
struct BP_MovementCharacter_C_OnDied__DelegateSignature final
{
public:
	E_OverlayStates                               Weapon;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MovementCharacter_C_OnDied__DelegateSignature) == 0x000001, "Wrong alignment on BP_MovementCharacter_C_OnDied__DelegateSignature");
static_assert(sizeof(BP_MovementCharacter_C_OnDied__DelegateSignature) == 0x000001, "Wrong size on BP_MovementCharacter_C_OnDied__DelegateSignature");
static_assert(offsetof(BP_MovementCharacter_C_OnDied__DelegateSignature, Weapon) == 0x000000, "Member 'BP_MovementCharacter_C_OnDied__DelegateSignature::Weapon' has a wrong offset!");

// Function BP_MovementCharacter.BP_MovementCharacter_C.OnJumpVelocityChanged
// 0x0004 (0x0004 - 0x0000)
struct BP_MovementCharacter_C_OnJumpVelocityChanged final
{
public:
	float                                         JumpVelocity;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MovementCharacter_C_OnJumpVelocityChanged) == 0x000004, "Wrong alignment on BP_MovementCharacter_C_OnJumpVelocityChanged");
static_assert(sizeof(BP_MovementCharacter_C_OnJumpVelocityChanged) == 0x000004, "Wrong size on BP_MovementCharacter_C_OnJumpVelocityChanged");
static_assert(offsetof(BP_MovementCharacter_C_OnJumpVelocityChanged, JumpVelocity) == 0x000000, "Member 'BP_MovementCharacter_C_OnJumpVelocityChanged::JumpVelocity' has a wrong offset!");

// Function BP_MovementCharacter.BP_MovementCharacter_C.OnLanded
// 0x00F8 (0x00F8 - 0x0000)
struct BP_MovementCharacter_C_OnLanded final
{
public:
	struct FHitResult                             Hit;                                               // 0x0000(0x00F8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_MovementCharacter_C_OnLanded) == 0x000008, "Wrong alignment on BP_MovementCharacter_C_OnLanded");
static_assert(sizeof(BP_MovementCharacter_C_OnLanded) == 0x0000F8, "Wrong size on BP_MovementCharacter_C_OnLanded");
static_assert(offsetof(BP_MovementCharacter_C_OnLanded, Hit) == 0x000000, "Member 'BP_MovementCharacter_C_OnLanded::Hit' has a wrong offset!");

// Function BP_MovementCharacter.BP_MovementCharacter_C.OnLanding__DelegateSignature
// 0x00F8 (0x00F8 - 0x0000)
struct BP_MovementCharacter_C_OnLanding__DelegateSignature final
{
public:
	struct FHitResult                             Hit;                                               // 0x0000(0x00F8)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_MovementCharacter_C_OnLanding__DelegateSignature) == 0x000008, "Wrong alignment on BP_MovementCharacter_C_OnLanding__DelegateSignature");
static_assert(sizeof(BP_MovementCharacter_C_OnLanding__DelegateSignature) == 0x0000F8, "Wrong size on BP_MovementCharacter_C_OnLanding__DelegateSignature");
static_assert(offsetof(BP_MovementCharacter_C_OnLanding__DelegateSignature, Hit) == 0x000000, "Member 'BP_MovementCharacter_C_OnLanding__DelegateSignature::Hit' has a wrong offset!");

// Function BP_MovementCharacter.BP_MovementCharacter_C.OnMovementSpeedChanged
// 0x0004 (0x0004 - 0x0000)
struct BP_MovementCharacter_C_OnMovementSpeedChanged final
{
public:
	float                                         MovementSpeed;                                     // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MovementCharacter_C_OnMovementSpeedChanged) == 0x000004, "Wrong alignment on BP_MovementCharacter_C_OnMovementSpeedChanged");
static_assert(sizeof(BP_MovementCharacter_C_OnMovementSpeedChanged) == 0x000004, "Wrong size on BP_MovementCharacter_C_OnMovementSpeedChanged");
static_assert(offsetof(BP_MovementCharacter_C_OnMovementSpeedChanged, MovementSpeed) == 0x000000, "Member 'BP_MovementCharacter_C_OnMovementSpeedChanged::MovementSpeed' has a wrong offset!");

// Function BP_MovementCharacter.BP_MovementCharacter_C.OnSprintSpeedCoefficientChanged
// 0x0004 (0x0004 - 0x0000)
struct BP_MovementCharacter_C_OnSprintSpeedCoefficientChanged final
{
public:
	float                                         SprintSpeed;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MovementCharacter_C_OnSprintSpeedCoefficientChanged) == 0x000004, "Wrong alignment on BP_MovementCharacter_C_OnSprintSpeedCoefficientChanged");
static_assert(sizeof(BP_MovementCharacter_C_OnSprintSpeedCoefficientChanged) == 0x000004, "Wrong size on BP_MovementCharacter_C_OnSprintSpeedCoefficientChanged");
static_assert(offsetof(BP_MovementCharacter_C_OnSprintSpeedCoefficientChanged, SprintSpeed) == 0x000000, "Member 'BP_MovementCharacter_C_OnSprintSpeedCoefficientChanged::SprintSpeed' has a wrong offset!");

// Function BP_MovementCharacter.BP_MovementCharacter_C.OnStationary
// 0x000C (0x000C - 0x0000)
struct BP_MovementCharacter_C_OnStationary final
{
public:
	struct FActiveGameplayEffectHandle            CallFunc_BP_ApplyGameplayEffectToSelf_ReturnValue; // 0x0000(0x0008)(NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_RemoveActiveEffectsWithGrantedTags_ReturnValue; // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MovementCharacter_C_OnStationary) == 0x000004, "Wrong alignment on BP_MovementCharacter_C_OnStationary");
static_assert(sizeof(BP_MovementCharacter_C_OnStationary) == 0x00000C, "Wrong size on BP_MovementCharacter_C_OnStationary");
static_assert(offsetof(BP_MovementCharacter_C_OnStationary, CallFunc_BP_ApplyGameplayEffectToSelf_ReturnValue) == 0x000000, "Member 'BP_MovementCharacter_C_OnStationary::CallFunc_BP_ApplyGameplayEffectToSelf_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MovementCharacter_C_OnStationary, CallFunc_RemoveActiveEffectsWithGrantedTags_ReturnValue) == 0x000008, "Member 'BP_MovementCharacter_C_OnStationary::CallFunc_RemoveActiveEffectsWithGrantedTags_ReturnValue' has a wrong offset!");

// Function BP_MovementCharacter.BP_MovementCharacter_C.Owner_Enable TPP Anim Instance
// 0x0001 (0x0001 - 0x0000)
struct BP_MovementCharacter_C_Owner_Enable_TPP_Anim_Instance final
{
public:
	bool                                          Enable;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MovementCharacter_C_Owner_Enable_TPP_Anim_Instance) == 0x000001, "Wrong alignment on BP_MovementCharacter_C_Owner_Enable_TPP_Anim_Instance");
static_assert(sizeof(BP_MovementCharacter_C_Owner_Enable_TPP_Anim_Instance) == 0x000001, "Wrong size on BP_MovementCharacter_C_Owner_Enable_TPP_Anim_Instance");
static_assert(offsetof(BP_MovementCharacter_C_Owner_Enable_TPP_Anim_Instance, Enable) == 0x000000, "Member 'BP_MovementCharacter_C_Owner_Enable_TPP_Anim_Instance::Enable' has a wrong offset!");

// Function BP_MovementCharacter.BP_MovementCharacter_C.Owner_Set Anim Instances
// 0x0008 (0x0008 - 0x0000)
struct BP_MovementCharacter_C_Owner_Set_Anim_Instances final
{
public:
	class AController*                            Target;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MovementCharacter_C_Owner_Set_Anim_Instances) == 0x000008, "Wrong alignment on BP_MovementCharacter_C_Owner_Set_Anim_Instances");
static_assert(sizeof(BP_MovementCharacter_C_Owner_Set_Anim_Instances) == 0x000008, "Wrong size on BP_MovementCharacter_C_Owner_Set_Anim_Instances");
static_assert(offsetof(BP_MovementCharacter_C_Owner_Set_Anim_Instances, Target) == 0x000000, "Member 'BP_MovementCharacter_C_Owner_Set_Anim_Instances::Target' has a wrong offset!");

// Function BP_MovementCharacter.BP_MovementCharacter_C.Query is Stationary
// 0x0020 (0x0020 - 0x0000)
struct BP_MovementCharacter_C_Query_is_Stationary final
{
public:
	struct FVector                                CallFunc_GetCurrentAcceleration_ReturnValue;       // 0x0000(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_VectorVector_ReturnValue;      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MovementCharacter_C_Query_is_Stationary) == 0x000008, "Wrong alignment on BP_MovementCharacter_C_Query_is_Stationary");
static_assert(sizeof(BP_MovementCharacter_C_Query_is_Stationary) == 0x000020, "Wrong size on BP_MovementCharacter_C_Query_is_Stationary");
static_assert(offsetof(BP_MovementCharacter_C_Query_is_Stationary, CallFunc_GetCurrentAcceleration_ReturnValue) == 0x000000, "Member 'BP_MovementCharacter_C_Query_is_Stationary::CallFunc_GetCurrentAcceleration_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MovementCharacter_C_Query_is_Stationary, CallFunc_EqualEqual_VectorVector_ReturnValue) == 0x000018, "Member 'BP_MovementCharacter_C_Query_is_Stationary::CallFunc_EqualEqual_VectorVector_ReturnValue' has a wrong offset!");

// Function BP_MovementCharacter.BP_MovementCharacter_C.ReceivePossessed
// 0x0008 (0x0008 - 0x0000)
struct BP_MovementCharacter_C_ReceivePossessed final
{
public:
	class AController*                            NewController;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MovementCharacter_C_ReceivePossessed) == 0x000008, "Wrong alignment on BP_MovementCharacter_C_ReceivePossessed");
static_assert(sizeof(BP_MovementCharacter_C_ReceivePossessed) == 0x000008, "Wrong size on BP_MovementCharacter_C_ReceivePossessed");
static_assert(offsetof(BP_MovementCharacter_C_ReceivePossessed, NewController) == 0x000000, "Member 'BP_MovementCharacter_C_ReceivePossessed::NewController' has a wrong offset!");

// Function BP_MovementCharacter.BP_MovementCharacter_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct BP_MovementCharacter_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MovementCharacter_C_ReceiveTick) == 0x000004, "Wrong alignment on BP_MovementCharacter_C_ReceiveTick");
static_assert(sizeof(BP_MovementCharacter_C_ReceiveTick) == 0x000004, "Wrong size on BP_MovementCharacter_C_ReceiveTick");
static_assert(offsetof(BP_MovementCharacter_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'BP_MovementCharacter_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function BP_MovementCharacter.BP_MovementCharacter_C.RemoveFriction
// 0x0001 (0x0001 - 0x0000)
struct BP_MovementCharacter_C_RemoveFriction final
{
public:
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MovementCharacter_C_RemoveFriction) == 0x000001, "Wrong alignment on BP_MovementCharacter_C_RemoveFriction");
static_assert(sizeof(BP_MovementCharacter_C_RemoveFriction) == 0x000001, "Wrong size on BP_MovementCharacter_C_RemoveFriction");
static_assert(offsetof(BP_MovementCharacter_C_RemoveFriction, CallFunc_HasAuthority_ReturnValue) == 0x000000, "Member 'BP_MovementCharacter_C_RemoveFriction::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");

// Function BP_MovementCharacter.BP_MovementCharacter_C.ResetAirControl
// 0x0004 (0x0004 - 0x0000)
struct BP_MovementCharacter_C_ResetAirControl final
{
public:
	int32                                         CallFunc_RemoveActiveEffectsWithGrantedTags_ReturnValue; // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MovementCharacter_C_ResetAirControl) == 0x000004, "Wrong alignment on BP_MovementCharacter_C_ResetAirControl");
static_assert(sizeof(BP_MovementCharacter_C_ResetAirControl) == 0x000004, "Wrong size on BP_MovementCharacter_C_ResetAirControl");
static_assert(offsetof(BP_MovementCharacter_C_ResetAirControl, CallFunc_RemoveActiveEffectsWithGrantedTags_ReturnValue) == 0x000000, "Member 'BP_MovementCharacter_C_ResetAirControl::CallFunc_RemoveActiveEffectsWithGrantedTags_ReturnValue' has a wrong offset!");

// Function BP_MovementCharacter.BP_MovementCharacter_C.ResetFriction
// 0x0010 (0x0010 - 0x0000)
struct BP_MovementCharacter_C_ResetFriction final
{
public:
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_VariableSet_GroundFriction_ImplicitCast;    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_VariableSet_BrakingDecelerationWalking_ImplicitCast; // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_VariableSet_MaxWalkSpeed_ImplicitCast;      // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MovementCharacter_C_ResetFriction) == 0x000004, "Wrong alignment on BP_MovementCharacter_C_ResetFriction");
static_assert(sizeof(BP_MovementCharacter_C_ResetFriction) == 0x000010, "Wrong size on BP_MovementCharacter_C_ResetFriction");
static_assert(offsetof(BP_MovementCharacter_C_ResetFriction, CallFunc_HasAuthority_ReturnValue) == 0x000000, "Member 'BP_MovementCharacter_C_ResetFriction::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MovementCharacter_C_ResetFriction, K2Node_VariableSet_GroundFriction_ImplicitCast) == 0x000004, "Member 'BP_MovementCharacter_C_ResetFriction::K2Node_VariableSet_GroundFriction_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_MovementCharacter_C_ResetFriction, K2Node_VariableSet_BrakingDecelerationWalking_ImplicitCast) == 0x000008, "Member 'BP_MovementCharacter_C_ResetFriction::K2Node_VariableSet_BrakingDecelerationWalking_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_MovementCharacter_C_ResetFriction, K2Node_VariableSet_MaxWalkSpeed_ImplicitCast) == 0x00000C, "Member 'BP_MovementCharacter_C_ResetFriction::K2Node_VariableSet_MaxWalkSpeed_ImplicitCast' has a wrong offset!");

// Function BP_MovementCharacter.BP_MovementCharacter_C.ReverseMovementDirectionPreProcess
// 0x0030 (0x0030 - 0x0000)
struct BP_MovementCharacter_C_ReverseMovementDirectionPreProcess final
{
public:
	double                                        ScaleValue;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        ModifiedValue;                                     // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IGameplayTagAssetInterface> CallFunc_HasMatchingGameplayTag_self_CastInput;    // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasMatchingGameplayTag_ReturnValue;       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MovementCharacter_C_ReverseMovementDirectionPreProcess) == 0x000008, "Wrong alignment on BP_MovementCharacter_C_ReverseMovementDirectionPreProcess");
static_assert(sizeof(BP_MovementCharacter_C_ReverseMovementDirectionPreProcess) == 0x000030, "Wrong size on BP_MovementCharacter_C_ReverseMovementDirectionPreProcess");
static_assert(offsetof(BP_MovementCharacter_C_ReverseMovementDirectionPreProcess, ScaleValue) == 0x000000, "Member 'BP_MovementCharacter_C_ReverseMovementDirectionPreProcess::ScaleValue' has a wrong offset!");
static_assert(offsetof(BP_MovementCharacter_C_ReverseMovementDirectionPreProcess, ModifiedValue) == 0x000008, "Member 'BP_MovementCharacter_C_ReverseMovementDirectionPreProcess::ModifiedValue' has a wrong offset!");
static_assert(offsetof(BP_MovementCharacter_C_ReverseMovementDirectionPreProcess, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000010, "Member 'BP_MovementCharacter_C_ReverseMovementDirectionPreProcess::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MovementCharacter_C_ReverseMovementDirectionPreProcess, CallFunc_HasMatchingGameplayTag_self_CastInput) == 0x000018, "Member 'BP_MovementCharacter_C_ReverseMovementDirectionPreProcess::CallFunc_HasMatchingGameplayTag_self_CastInput' has a wrong offset!");
static_assert(offsetof(BP_MovementCharacter_C_ReverseMovementDirectionPreProcess, CallFunc_HasMatchingGameplayTag_ReturnValue) == 0x000028, "Member 'BP_MovementCharacter_C_ReverseMovementDirectionPreProcess::CallFunc_HasMatchingGameplayTag_ReturnValue' has a wrong offset!");

// Function BP_MovementCharacter.BP_MovementCharacter_C.Server_CrouchJump
// 0x0001 (0x0001 - 0x0000)
struct BP_MovementCharacter_C_Server_CrouchJump final
{
public:
	bool                                          CrouchJump_0;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MovementCharacter_C_Server_CrouchJump) == 0x000001, "Wrong alignment on BP_MovementCharacter_C_Server_CrouchJump");
static_assert(sizeof(BP_MovementCharacter_C_Server_CrouchJump) == 0x000001, "Wrong size on BP_MovementCharacter_C_Server_CrouchJump");
static_assert(offsetof(BP_MovementCharacter_C_Server_CrouchJump, CrouchJump_0) == 0x000000, "Member 'BP_MovementCharacter_C_Server_CrouchJump::CrouchJump_0' has a wrong offset!");

// Function BP_MovementCharacter.BP_MovementCharacter_C.SetIsDead
// 0x03F8 (0x03F8 - 0x0000)
struct BP_MovementCharacter_C_SetIsDead final
{
public:
	bool                                          Dead;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                OptionalVelocity;                                  // 0x0008(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FKillInfo                              KillInfo;                                          // 0x0020(0x03D8)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(BP_MovementCharacter_C_SetIsDead) == 0x000008, "Wrong alignment on BP_MovementCharacter_C_SetIsDead");
static_assert(sizeof(BP_MovementCharacter_C_SetIsDead) == 0x0003F8, "Wrong size on BP_MovementCharacter_C_SetIsDead");
static_assert(offsetof(BP_MovementCharacter_C_SetIsDead, Dead) == 0x000000, "Member 'BP_MovementCharacter_C_SetIsDead::Dead' has a wrong offset!");
static_assert(offsetof(BP_MovementCharacter_C_SetIsDead, OptionalVelocity) == 0x000008, "Member 'BP_MovementCharacter_C_SetIsDead::OptionalVelocity' has a wrong offset!");
static_assert(offsetof(BP_MovementCharacter_C_SetIsDead, KillInfo) == 0x000020, "Member 'BP_MovementCharacter_C_SetIsDead::KillInfo' has a wrong offset!");

// Function BP_MovementCharacter.BP_MovementCharacter_C.SetRagdollPhysicsAsset
// 0x0028 (0x0028 - 0x0000)
struct BP_MovementCharacter_C_SetRagdollPhysicsAsset final
{
public:
	class USkeletalMesh*                          CallFunc_GetSkeletalMeshAsset_ReturnValue;         // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USkeletalMesh*                          CallFunc_GetSkeletalMeshAsset_ReturnValue_1;       // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPhysicsAsset*                          CallFunc_GetPhysicsAsset_ReturnValue;              // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPhysicsAsset*                          CallFunc_GetPhysicsAsset_ReturnValue_1;            // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MovementCharacter_C_SetRagdollPhysicsAsset) == 0x000008, "Wrong alignment on BP_MovementCharacter_C_SetRagdollPhysicsAsset");
static_assert(sizeof(BP_MovementCharacter_C_SetRagdollPhysicsAsset) == 0x000028, "Wrong size on BP_MovementCharacter_C_SetRagdollPhysicsAsset");
static_assert(offsetof(BP_MovementCharacter_C_SetRagdollPhysicsAsset, CallFunc_GetSkeletalMeshAsset_ReturnValue) == 0x000000, "Member 'BP_MovementCharacter_C_SetRagdollPhysicsAsset::CallFunc_GetSkeletalMeshAsset_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MovementCharacter_C_SetRagdollPhysicsAsset, CallFunc_GetSkeletalMeshAsset_ReturnValue_1) == 0x000008, "Member 'BP_MovementCharacter_C_SetRagdollPhysicsAsset::CallFunc_GetSkeletalMeshAsset_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MovementCharacter_C_SetRagdollPhysicsAsset, CallFunc_GetPhysicsAsset_ReturnValue) == 0x000010, "Member 'BP_MovementCharacter_C_SetRagdollPhysicsAsset::CallFunc_GetPhysicsAsset_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MovementCharacter_C_SetRagdollPhysicsAsset, CallFunc_GetPhysicsAsset_ReturnValue_1) == 0x000018, "Member 'BP_MovementCharacter_C_SetRagdollPhysicsAsset::CallFunc_GetPhysicsAsset_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MovementCharacter_C_SetRagdollPhysicsAsset, CallFunc_IsValid_ReturnValue) == 0x000020, "Member 'BP_MovementCharacter_C_SetRagdollPhysicsAsset::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_MovementCharacter.BP_MovementCharacter_C.UpdateGait
// 0x0001 (0x0001 - 0x0000)
struct BP_MovementCharacter_C_UpdateGait final
{
public:
	EGaitJP                                       CallFunc_GetGaitFromMovementSpeed_Gait;            // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MovementCharacter_C_UpdateGait) == 0x000001, "Wrong alignment on BP_MovementCharacter_C_UpdateGait");
static_assert(sizeof(BP_MovementCharacter_C_UpdateGait) == 0x000001, "Wrong size on BP_MovementCharacter_C_UpdateGait");
static_assert(offsetof(BP_MovementCharacter_C_UpdateGait, CallFunc_GetGaitFromMovementSpeed_Gait) == 0x000000, "Member 'BP_MovementCharacter_C_UpdateGait::CallFunc_GetGaitFromMovementSpeed_Gait' has a wrong offset!");

// Function BP_MovementCharacter.BP_MovementCharacter_C.CanJumpInternal
// 0x0020 (0x0020 - 0x0000)
struct BP_MovementCharacter_C_CanJumpInternal final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsFalling_ReturnValue;                    // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IGameplayTagAssetInterface> CallFunc_HasMatchingGameplayTag_self_CastInput;    // 0x0008(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasMatchingGameplayTag_ReturnValue;       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x001B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MovementCharacter_C_CanJumpInternal) == 0x000008, "Wrong alignment on BP_MovementCharacter_C_CanJumpInternal");
static_assert(sizeof(BP_MovementCharacter_C_CanJumpInternal) == 0x000020, "Wrong size on BP_MovementCharacter_C_CanJumpInternal");
static_assert(offsetof(BP_MovementCharacter_C_CanJumpInternal, ReturnValue) == 0x000000, "Member 'BP_MovementCharacter_C_CanJumpInternal::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MovementCharacter_C_CanJumpInternal, CallFunc_IsFalling_ReturnValue) == 0x000001, "Member 'BP_MovementCharacter_C_CanJumpInternal::CallFunc_IsFalling_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MovementCharacter_C_CanJumpInternal, CallFunc_HasMatchingGameplayTag_self_CastInput) == 0x000008, "Member 'BP_MovementCharacter_C_CanJumpInternal::CallFunc_HasMatchingGameplayTag_self_CastInput' has a wrong offset!");
static_assert(offsetof(BP_MovementCharacter_C_CanJumpInternal, CallFunc_HasMatchingGameplayTag_ReturnValue) == 0x000018, "Member 'BP_MovementCharacter_C_CanJumpInternal::CallFunc_HasMatchingGameplayTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MovementCharacter_C_CanJumpInternal, CallFunc_Not_PreBool_ReturnValue) == 0x000019, "Member 'BP_MovementCharacter_C_CanJumpInternal::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MovementCharacter_C_CanJumpInternal, CallFunc_Not_PreBool_ReturnValue_1) == 0x00001A, "Member 'BP_MovementCharacter_C_CanJumpInternal::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MovementCharacter_C_CanJumpInternal, CallFunc_BooleanAND_ReturnValue) == 0x00001B, "Member 'BP_MovementCharacter_C_CanJumpInternal::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function BP_MovementCharacter.BP_MovementCharacter_C.GetAimMovementSpeedCoefficient
// 0x0050 (0x0050 - 0x0000)
struct BP_MovementCharacter_C_GetAimMovementSpeedCoefficient final
{
public:
	float                                         Initial_Aim_Movement_Speed_Coefficient;            // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMovementDataJP                        CallFunc_GetDataTableRowFromName_OutRow;           // 0x0008(0x0040)()
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MovementCharacter_C_GetAimMovementSpeedCoefficient) == 0x000008, "Wrong alignment on BP_MovementCharacter_C_GetAimMovementSpeedCoefficient");
static_assert(sizeof(BP_MovementCharacter_C_GetAimMovementSpeedCoefficient) == 0x000050, "Wrong size on BP_MovementCharacter_C_GetAimMovementSpeedCoefficient");
static_assert(offsetof(BP_MovementCharacter_C_GetAimMovementSpeedCoefficient, Initial_Aim_Movement_Speed_Coefficient) == 0x000000, "Member 'BP_MovementCharacter_C_GetAimMovementSpeedCoefficient::Initial_Aim_Movement_Speed_Coefficient' has a wrong offset!");
static_assert(offsetof(BP_MovementCharacter_C_GetAimMovementSpeedCoefficient, CallFunc_GetDataTableRowFromName_OutRow) == 0x000008, "Member 'BP_MovementCharacter_C_GetAimMovementSpeedCoefficient::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(BP_MovementCharacter_C_GetAimMovementSpeedCoefficient, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000048, "Member 'BP_MovementCharacter_C_GetAimMovementSpeedCoefficient::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");

// Function BP_MovementCharacter.BP_MovementCharacter_C.GetCrouchJumpVelocityCoefficient
// 0x0050 (0x0050 - 0x0000)
struct BP_MovementCharacter_C_GetCrouchJumpVelocityCoefficient final
{
public:
	float                                         Crouch_Jump_Velocity_Coefficient;                  // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMovementDataJP                        CallFunc_GetDataTableRowFromName_OutRow;           // 0x0008(0x0040)()
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MovementCharacter_C_GetCrouchJumpVelocityCoefficient) == 0x000008, "Wrong alignment on BP_MovementCharacter_C_GetCrouchJumpVelocityCoefficient");
static_assert(sizeof(BP_MovementCharacter_C_GetCrouchJumpVelocityCoefficient) == 0x000050, "Wrong size on BP_MovementCharacter_C_GetCrouchJumpVelocityCoefficient");
static_assert(offsetof(BP_MovementCharacter_C_GetCrouchJumpVelocityCoefficient, Crouch_Jump_Velocity_Coefficient) == 0x000000, "Member 'BP_MovementCharacter_C_GetCrouchJumpVelocityCoefficient::Crouch_Jump_Velocity_Coefficient' has a wrong offset!");
static_assert(offsetof(BP_MovementCharacter_C_GetCrouchJumpVelocityCoefficient, CallFunc_GetDataTableRowFromName_OutRow) == 0x000008, "Member 'BP_MovementCharacter_C_GetCrouchJumpVelocityCoefficient::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(BP_MovementCharacter_C_GetCrouchJumpVelocityCoefficient, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000048, "Member 'BP_MovementCharacter_C_GetCrouchJumpVelocityCoefficient::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");

// Function BP_MovementCharacter.BP_MovementCharacter_C.GetCrouchMovementCoefficient
// 0x0050 (0x0050 - 0x0000)
struct BP_MovementCharacter_C_GetCrouchMovementCoefficient final
{
public:
	float                                         Crouch_Coefficient;                                // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMovementDataJP                        CallFunc_GetDataTableRowFromName_OutRow;           // 0x0008(0x0040)()
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MovementCharacter_C_GetCrouchMovementCoefficient) == 0x000008, "Wrong alignment on BP_MovementCharacter_C_GetCrouchMovementCoefficient");
static_assert(sizeof(BP_MovementCharacter_C_GetCrouchMovementCoefficient) == 0x000050, "Wrong size on BP_MovementCharacter_C_GetCrouchMovementCoefficient");
static_assert(offsetof(BP_MovementCharacter_C_GetCrouchMovementCoefficient, Crouch_Coefficient) == 0x000000, "Member 'BP_MovementCharacter_C_GetCrouchMovementCoefficient::Crouch_Coefficient' has a wrong offset!");
static_assert(offsetof(BP_MovementCharacter_C_GetCrouchMovementCoefficient, CallFunc_GetDataTableRowFromName_OutRow) == 0x000008, "Member 'BP_MovementCharacter_C_GetCrouchMovementCoefficient::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(BP_MovementCharacter_C_GetCrouchMovementCoefficient, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000048, "Member 'BP_MovementCharacter_C_GetCrouchMovementCoefficient::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");

// Function BP_MovementCharacter.BP_MovementCharacter_C.GetInitialAirControl
// 0x0050 (0x0050 - 0x0000)
struct BP_MovementCharacter_C_GetInitialAirControl final
{
public:
	float                                         Initial_Jump_Velocity;                             // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMovementDataJP                        CallFunc_GetDataTableRowFromName_OutRow;           // 0x0008(0x0040)()
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MovementCharacter_C_GetInitialAirControl) == 0x000008, "Wrong alignment on BP_MovementCharacter_C_GetInitialAirControl");
static_assert(sizeof(BP_MovementCharacter_C_GetInitialAirControl) == 0x000050, "Wrong size on BP_MovementCharacter_C_GetInitialAirControl");
static_assert(offsetof(BP_MovementCharacter_C_GetInitialAirControl, Initial_Jump_Velocity) == 0x000000, "Member 'BP_MovementCharacter_C_GetInitialAirControl::Initial_Jump_Velocity' has a wrong offset!");
static_assert(offsetof(BP_MovementCharacter_C_GetInitialAirControl, CallFunc_GetDataTableRowFromName_OutRow) == 0x000008, "Member 'BP_MovementCharacter_C_GetInitialAirControl::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(BP_MovementCharacter_C_GetInitialAirControl, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000048, "Member 'BP_MovementCharacter_C_GetInitialAirControl::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");

// Function BP_MovementCharacter.BP_MovementCharacter_C.GetInitialJumpVelocity
// 0x0050 (0x0050 - 0x0000)
struct BP_MovementCharacter_C_GetInitialJumpVelocity final
{
public:
	float                                         Initial_Jump_Velocity;                             // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMovementDataJP                        CallFunc_GetDataTableRowFromName_OutRow;           // 0x0008(0x0040)()
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MovementCharacter_C_GetInitialJumpVelocity) == 0x000008, "Wrong alignment on BP_MovementCharacter_C_GetInitialJumpVelocity");
static_assert(sizeof(BP_MovementCharacter_C_GetInitialJumpVelocity) == 0x000050, "Wrong size on BP_MovementCharacter_C_GetInitialJumpVelocity");
static_assert(offsetof(BP_MovementCharacter_C_GetInitialJumpVelocity, Initial_Jump_Velocity) == 0x000000, "Member 'BP_MovementCharacter_C_GetInitialJumpVelocity::Initial_Jump_Velocity' has a wrong offset!");
static_assert(offsetof(BP_MovementCharacter_C_GetInitialJumpVelocity, CallFunc_GetDataTableRowFromName_OutRow) == 0x000008, "Member 'BP_MovementCharacter_C_GetInitialJumpVelocity::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(BP_MovementCharacter_C_GetInitialJumpVelocity, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000048, "Member 'BP_MovementCharacter_C_GetInitialJumpVelocity::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");

// Function BP_MovementCharacter.BP_MovementCharacter_C.GetInitialMaxAcceleration
// 0x0050 (0x0050 - 0x0000)
struct BP_MovementCharacter_C_GetInitialMaxAcceleration final
{
public:
	float                                         InitialMovementSpeed;                              // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMovementDataJP                        CallFunc_GetDataTableRowFromName_OutRow;           // 0x0008(0x0040)()
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MovementCharacter_C_GetInitialMaxAcceleration) == 0x000008, "Wrong alignment on BP_MovementCharacter_C_GetInitialMaxAcceleration");
static_assert(sizeof(BP_MovementCharacter_C_GetInitialMaxAcceleration) == 0x000050, "Wrong size on BP_MovementCharacter_C_GetInitialMaxAcceleration");
static_assert(offsetof(BP_MovementCharacter_C_GetInitialMaxAcceleration, InitialMovementSpeed) == 0x000000, "Member 'BP_MovementCharacter_C_GetInitialMaxAcceleration::InitialMovementSpeed' has a wrong offset!");
static_assert(offsetof(BP_MovementCharacter_C_GetInitialMaxAcceleration, CallFunc_GetDataTableRowFromName_OutRow) == 0x000008, "Member 'BP_MovementCharacter_C_GetInitialMaxAcceleration::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(BP_MovementCharacter_C_GetInitialMaxAcceleration, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000048, "Member 'BP_MovementCharacter_C_GetInitialMaxAcceleration::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");

// Function BP_MovementCharacter.BP_MovementCharacter_C.GetInitialMovementSpeed
// 0x0050 (0x0050 - 0x0000)
struct BP_MovementCharacter_C_GetInitialMovementSpeed final
{
public:
	float                                         InitialMovementSpeed;                              // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMovementDataJP                        CallFunc_GetDataTableRowFromName_OutRow;           // 0x0008(0x0040)()
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MovementCharacter_C_GetInitialMovementSpeed) == 0x000008, "Wrong alignment on BP_MovementCharacter_C_GetInitialMovementSpeed");
static_assert(sizeof(BP_MovementCharacter_C_GetInitialMovementSpeed) == 0x000050, "Wrong size on BP_MovementCharacter_C_GetInitialMovementSpeed");
static_assert(offsetof(BP_MovementCharacter_C_GetInitialMovementSpeed, InitialMovementSpeed) == 0x000000, "Member 'BP_MovementCharacter_C_GetInitialMovementSpeed::InitialMovementSpeed' has a wrong offset!");
static_assert(offsetof(BP_MovementCharacter_C_GetInitialMovementSpeed, CallFunc_GetDataTableRowFromName_OutRow) == 0x000008, "Member 'BP_MovementCharacter_C_GetInitialMovementSpeed::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(BP_MovementCharacter_C_GetInitialMovementSpeed, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000048, "Member 'BP_MovementCharacter_C_GetInitialMovementSpeed::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");

// Function BP_MovementCharacter.BP_MovementCharacter_C.GetSprintMovementCoefficient
// 0x0050 (0x0050 - 0x0000)
struct BP_MovementCharacter_C_GetSprintMovementCoefficient final
{
public:
	float                                         Sprint_Coefficient;                                // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMovementDataJP                        CallFunc_GetDataTableRowFromName_OutRow;           // 0x0008(0x0040)()
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MovementCharacter_C_GetSprintMovementCoefficient) == 0x000008, "Wrong alignment on BP_MovementCharacter_C_GetSprintMovementCoefficient");
static_assert(sizeof(BP_MovementCharacter_C_GetSprintMovementCoefficient) == 0x000050, "Wrong size on BP_MovementCharacter_C_GetSprintMovementCoefficient");
static_assert(offsetof(BP_MovementCharacter_C_GetSprintMovementCoefficient, Sprint_Coefficient) == 0x000000, "Member 'BP_MovementCharacter_C_GetSprintMovementCoefficient::Sprint_Coefficient' has a wrong offset!");
static_assert(offsetof(BP_MovementCharacter_C_GetSprintMovementCoefficient, CallFunc_GetDataTableRowFromName_OutRow) == 0x000008, "Member 'BP_MovementCharacter_C_GetSprintMovementCoefficient::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(BP_MovementCharacter_C_GetSprintMovementCoefficient, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000048, "Member 'BP_MovementCharacter_C_GetSprintMovementCoefficient::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");

// Function BP_MovementCharacter.BP_MovementCharacter_C.Strafing Input Pre Process
// 0x0068 (0x0068 - 0x0000)
struct BP_MovementCharacter_C_Strafing_Input_Pre_Process final
{
public:
	struct FVector                                World_Direction;                                   // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Scale_Value;                                       // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        ModifiedScale;                                     // 0x0020(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_1;       // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x002B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetActorRightVector_ReturnValue;          // 0x0030(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_Select_Default;                             // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Dot_VectorVector_ReturnValue;             // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NearlyEqual_FloatFloat_ReturnValue;       // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MovementCharacter_C_Strafing_Input_Pre_Process) == 0x000008, "Wrong alignment on BP_MovementCharacter_C_Strafing_Input_Pre_Process");
static_assert(sizeof(BP_MovementCharacter_C_Strafing_Input_Pre_Process) == 0x000068, "Wrong size on BP_MovementCharacter_C_Strafing_Input_Pre_Process");
static_assert(offsetof(BP_MovementCharacter_C_Strafing_Input_Pre_Process, World_Direction) == 0x000000, "Member 'BP_MovementCharacter_C_Strafing_Input_Pre_Process::World_Direction' has a wrong offset!");
static_assert(offsetof(BP_MovementCharacter_C_Strafing_Input_Pre_Process, Scale_Value) == 0x000018, "Member 'BP_MovementCharacter_C_Strafing_Input_Pre_Process::Scale_Value' has a wrong offset!");
static_assert(offsetof(BP_MovementCharacter_C_Strafing_Input_Pre_Process, ModifiedScale) == 0x000020, "Member 'BP_MovementCharacter_C_Strafing_Input_Pre_Process::ModifiedScale' has a wrong offset!");
static_assert(offsetof(BP_MovementCharacter_C_Strafing_Input_Pre_Process, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000028, "Member 'BP_MovementCharacter_C_Strafing_Input_Pre_Process::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MovementCharacter_C_Strafing_Input_Pre_Process, CallFunc_Greater_DoubleDouble_ReturnValue_1) == 0x000029, "Member 'BP_MovementCharacter_C_Strafing_Input_Pre_Process::CallFunc_Greater_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MovementCharacter_C_Strafing_Input_Pre_Process, CallFunc_BooleanOR_ReturnValue) == 0x00002A, "Member 'BP_MovementCharacter_C_Strafing_Input_Pre_Process::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MovementCharacter_C_Strafing_Input_Pre_Process, Temp_bool_Variable) == 0x00002B, "Member 'BP_MovementCharacter_C_Strafing_Input_Pre_Process::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_MovementCharacter_C_Strafing_Input_Pre_Process, CallFunc_GetActorRightVector_ReturnValue) == 0x000030, "Member 'BP_MovementCharacter_C_Strafing_Input_Pre_Process::CallFunc_GetActorRightVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MovementCharacter_C_Strafing_Input_Pre_Process, K2Node_Select_Default) == 0x000048, "Member 'BP_MovementCharacter_C_Strafing_Input_Pre_Process::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_MovementCharacter_C_Strafing_Input_Pre_Process, CallFunc_Dot_VectorVector_ReturnValue) == 0x000050, "Member 'BP_MovementCharacter_C_Strafing_Input_Pre_Process::CallFunc_Dot_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MovementCharacter_C_Strafing_Input_Pre_Process, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000058, "Member 'BP_MovementCharacter_C_Strafing_Input_Pre_Process::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MovementCharacter_C_Strafing_Input_Pre_Process, CallFunc_NearlyEqual_FloatFloat_ReturnValue) == 0x000060, "Member 'BP_MovementCharacter_C_Strafing_Input_Pre_Process::CallFunc_NearlyEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MovementCharacter_C_Strafing_Input_Pre_Process, CallFunc_BooleanAND_ReturnValue) == 0x000061, "Member 'BP_MovementCharacter_C_Strafing_Input_Pre_Process::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function BP_MovementCharacter.BP_MovementCharacter_C.WalkingBackwardsInputPreProcess
// 0x0060 (0x0060 - 0x0000)
struct BP_MovementCharacter_C_WalkingBackwardsInputPreProcess final
{
public:
	struct FVector                                World_Direction;                                   // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Scale_Value;                                       // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        ModifiedMovementScale;                             // 0x0020(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorForwardVector_ReturnValue;        // 0x0038(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Dot_VectorVector_ReturnValue;             // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NearlyEqual_FloatFloat_ReturnValue;       // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MovementCharacter_C_WalkingBackwardsInputPreProcess) == 0x000008, "Wrong alignment on BP_MovementCharacter_C_WalkingBackwardsInputPreProcess");
static_assert(sizeof(BP_MovementCharacter_C_WalkingBackwardsInputPreProcess) == 0x000060, "Wrong size on BP_MovementCharacter_C_WalkingBackwardsInputPreProcess");
static_assert(offsetof(BP_MovementCharacter_C_WalkingBackwardsInputPreProcess, World_Direction) == 0x000000, "Member 'BP_MovementCharacter_C_WalkingBackwardsInputPreProcess::World_Direction' has a wrong offset!");
static_assert(offsetof(BP_MovementCharacter_C_WalkingBackwardsInputPreProcess, Scale_Value) == 0x000018, "Member 'BP_MovementCharacter_C_WalkingBackwardsInputPreProcess::Scale_Value' has a wrong offset!");
static_assert(offsetof(BP_MovementCharacter_C_WalkingBackwardsInputPreProcess, ModifiedMovementScale) == 0x000020, "Member 'BP_MovementCharacter_C_WalkingBackwardsInputPreProcess::ModifiedMovementScale' has a wrong offset!");
static_assert(offsetof(BP_MovementCharacter_C_WalkingBackwardsInputPreProcess, CallFunc_Less_DoubleDouble_ReturnValue) == 0x000028, "Member 'BP_MovementCharacter_C_WalkingBackwardsInputPreProcess::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MovementCharacter_C_WalkingBackwardsInputPreProcess, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000030, "Member 'BP_MovementCharacter_C_WalkingBackwardsInputPreProcess::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MovementCharacter_C_WalkingBackwardsInputPreProcess, CallFunc_GetActorForwardVector_ReturnValue) == 0x000038, "Member 'BP_MovementCharacter_C_WalkingBackwardsInputPreProcess::CallFunc_GetActorForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MovementCharacter_C_WalkingBackwardsInputPreProcess, CallFunc_Dot_VectorVector_ReturnValue) == 0x000050, "Member 'BP_MovementCharacter_C_WalkingBackwardsInputPreProcess::CallFunc_Dot_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MovementCharacter_C_WalkingBackwardsInputPreProcess, CallFunc_NearlyEqual_FloatFloat_ReturnValue) == 0x000058, "Member 'BP_MovementCharacter_C_WalkingBackwardsInputPreProcess::CallFunc_NearlyEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MovementCharacter_C_WalkingBackwardsInputPreProcess, CallFunc_BooleanAND_ReturnValue) == 0x000059, "Member 'BP_MovementCharacter_C_WalkingBackwardsInputPreProcess::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

}

