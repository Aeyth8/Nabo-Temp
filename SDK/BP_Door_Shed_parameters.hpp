#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Door_Shed

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BP_Door_Shed.BP_Door_Shed_C.ExecuteUbergraph_BP_Door_Shed
// 0x0130 (0x0130 - 0x0000)
struct BP_Door_Shed_C_ExecuteUbergraph_BP_Door_Shed final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_Event_Alpha;                                // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue;                         // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0018(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_K2_SetRelativeRotation_SweepHitResult;    // 0x0030(0x00F8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_AttachToComponent_ReturnValue;         // 0x0128(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_129[0x3];                                      // 0x0129(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_MakeRotator_Yaw_ImplicitCast;             // 0x012C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Door_Shed_C_ExecuteUbergraph_BP_Door_Shed) == 0x000008, "Wrong alignment on BP_Door_Shed_C_ExecuteUbergraph_BP_Door_Shed");
static_assert(sizeof(BP_Door_Shed_C_ExecuteUbergraph_BP_Door_Shed) == 0x000130, "Wrong size on BP_Door_Shed_C_ExecuteUbergraph_BP_Door_Shed");
static_assert(offsetof(BP_Door_Shed_C_ExecuteUbergraph_BP_Door_Shed, EntryPoint) == 0x000000, "Member 'BP_Door_Shed_C_ExecuteUbergraph_BP_Door_Shed::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_Door_Shed_C_ExecuteUbergraph_BP_Door_Shed, K2Node_Event_Alpha) == 0x000008, "Member 'BP_Door_Shed_C_ExecuteUbergraph_BP_Door_Shed::K2Node_Event_Alpha' has a wrong offset!");
static_assert(offsetof(BP_Door_Shed_C_ExecuteUbergraph_BP_Door_Shed, CallFunc_Lerp_ReturnValue) == 0x000010, "Member 'BP_Door_Shed_C_ExecuteUbergraph_BP_Door_Shed::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Door_Shed_C_ExecuteUbergraph_BP_Door_Shed, CallFunc_MakeRotator_ReturnValue) == 0x000018, "Member 'BP_Door_Shed_C_ExecuteUbergraph_BP_Door_Shed::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Door_Shed_C_ExecuteUbergraph_BP_Door_Shed, CallFunc_K2_SetRelativeRotation_SweepHitResult) == 0x000030, "Member 'BP_Door_Shed_C_ExecuteUbergraph_BP_Door_Shed::CallFunc_K2_SetRelativeRotation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_Door_Shed_C_ExecuteUbergraph_BP_Door_Shed, CallFunc_K2_AttachToComponent_ReturnValue) == 0x000128, "Member 'BP_Door_Shed_C_ExecuteUbergraph_BP_Door_Shed::CallFunc_K2_AttachToComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Door_Shed_C_ExecuteUbergraph_BP_Door_Shed, CallFunc_MakeRotator_Yaw_ImplicitCast) == 0x00012C, "Member 'BP_Door_Shed_C_ExecuteUbergraph_BP_Door_Shed::CallFunc_MakeRotator_Yaw_ImplicitCast' has a wrong offset!");

// Function BP_Door_Shed.BP_Door_Shed_C.GetOptionalText
// 0x0020 (0x0020 - 0x0000)
struct BP_Door_Shed_C_GetOptionalText final
{
public:
	class FText                                   Return;                                            // 0x0000(0x0010)(Parm, OutParm)
	class FText                                   Optional_Second_Line;                              // 0x0010(0x0010)(Parm, OutParm)
};
static_assert(alignof(BP_Door_Shed_C_GetOptionalText) == 0x000008, "Wrong alignment on BP_Door_Shed_C_GetOptionalText");
static_assert(sizeof(BP_Door_Shed_C_GetOptionalText) == 0x000020, "Wrong size on BP_Door_Shed_C_GetOptionalText");
static_assert(offsetof(BP_Door_Shed_C_GetOptionalText, Return) == 0x000000, "Member 'BP_Door_Shed_C_GetOptionalText::Return' has a wrong offset!");
static_assert(offsetof(BP_Door_Shed_C_GetOptionalText, Optional_Second_Line) == 0x000010, "Member 'BP_Door_Shed_C_GetOptionalText::Optional_Second_Line' has a wrong offset!");

// Function BP_Door_Shed.BP_Door_Shed_C.GetPriority
// 0x0004 (0x0004 - 0x0000)
struct BP_Door_Shed_C_GetPriority final
{
public:
	int32                                         Priority;                                          // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Door_Shed_C_GetPriority) == 0x000004, "Wrong alignment on BP_Door_Shed_C_GetPriority");
static_assert(sizeof(BP_Door_Shed_C_GetPriority) == 0x000004, "Wrong size on BP_Door_Shed_C_GetPriority");
static_assert(offsetof(BP_Door_Shed_C_GetPriority, Priority) == 0x000000, "Member 'BP_Door_Shed_C_GetPriority::Priority' has a wrong offset!");

// Function BP_Door_Shed.BP_Door_Shed_C.SpawnDestroyedDoor
// 0x0090 (0x0090 - 0x0000)
struct BP_Door_Shed_C_SpawnDestroyedDoor final
{
public:
	struct FTransform                             CallFunc_K2_GetComponentToWorld_ReturnValue;       // 0x0000(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0060(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x0078(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_Standard_Door_Shed2_Destroyed_C*    CallFunc_FinishSpawningActor_ReturnValue;          // 0x0080(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Door_Shed_C_SpawnDestroyedDoor) == 0x000010, "Wrong alignment on BP_Door_Shed_C_SpawnDestroyedDoor");
static_assert(sizeof(BP_Door_Shed_C_SpawnDestroyedDoor) == 0x000090, "Wrong size on BP_Door_Shed_C_SpawnDestroyedDoor");
static_assert(offsetof(BP_Door_Shed_C_SpawnDestroyedDoor, CallFunc_K2_GetComponentToWorld_ReturnValue) == 0x000000, "Member 'BP_Door_Shed_C_SpawnDestroyedDoor::CallFunc_K2_GetComponentToWorld_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Door_Shed_C_SpawnDestroyedDoor, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000060, "Member 'BP_Door_Shed_C_SpawnDestroyedDoor::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Door_Shed_C_SpawnDestroyedDoor, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x000078, "Member 'BP_Door_Shed_C_SpawnDestroyedDoor::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Door_Shed_C_SpawnDestroyedDoor, CallFunc_FinishSpawningActor_ReturnValue) == 0x000080, "Member 'BP_Door_Shed_C_SpawnDestroyedDoor::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");

// Function BP_Door_Shed.BP_Door_Shed_C.Update Alpha
// 0x0008 (0x0008 - 0x0000)
struct BP_Door_Shed_C_Update_Alpha final
{
public:
	double                                        Alpha;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Door_Shed_C_Update_Alpha) == 0x000008, "Wrong alignment on BP_Door_Shed_C_Update_Alpha");
static_assert(sizeof(BP_Door_Shed_C_Update_Alpha) == 0x000008, "Wrong size on BP_Door_Shed_C_Update_Alpha");
static_assert(offsetof(BP_Door_Shed_C_Update_Alpha, Alpha) == 0x000000, "Member 'BP_Door_Shed_C_Update_Alpha::Alpha' has a wrong offset!");

}

