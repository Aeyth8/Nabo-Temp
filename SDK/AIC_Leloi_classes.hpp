#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: AIC_Leloi

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "E_TimeOfDay_structs.hpp"
#include "AIModule_classes.hpp"
#include "E_LeloiSenses_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass AIC_Leloi.AIC_Leloi_C
// 0x00A8 (0x0460 - 0x03B8)
class AAIC_Leloi_C final : public AAIController
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x03B8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UAIPerceptionComponent*                 AIPerception;                                      // 0x03C0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class FName                                   TargetActorKeyName;                                // 0x03C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   LeloiStateKeyName;                                 // 0x03D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_Leloi_C*                            AssociatedLeloi;                                   // 0x03D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CheckForTrespassersTimer;                          // 0x03E0(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class ACharacter*                             Marked;                                            // 0x03E8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	TArray<class ACharacter*>                     EnemyCharacters;                                   // 0x03F0(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, DisableEditOnInstance)
	TMap<class ACharacter*, double>               DistanceToEnemiesMarkedForDeath;                   // 0x0400(0x0050)(Edit, BlueprintVisible, DisableEditOnTemplate, DisableEditOnInstance)
	E_TimeOfDay                                   Time_Of_Day;                                       // 0x0450(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_451[0x3];                                      // 0x0451(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   PettedKeyName;                                     // 0x0454(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void BndEvt__AIC_Leloi_AIPerception_K2Node_ComponentBoundEvent_0_PerceptionUpdatedDelegate__DelegateSignature(const TArray<class AActor*>& UpdatedActors);
	void BndEvt__AIC_Leloi_AIPerception_K2Node_ComponentBoundEvent_1_ActorPerceptionForgetUpdatedDelegate__DelegateSignature(class AActor* Actor);
	void CacheEnemyCharacters();
	void CanSenseActor(class AActor* Actor, E_LeloiSenses Sense, bool* Sensed, struct FAIStimulus* Stimulus, class AActor** SensedActor);
	void Check_For_Trespassers();
	void ExecuteUbergraph_AIC_Leloi(int32 EntryPoint);
	void GetClosestMarkedForDeathEnemy(const TMap<class ACharacter*, double>& DistanceToMarkedEnemies, class ACharacter** Output);
	void GetClosestTrespassingCharacter(class ACharacter** Return);
	bool IsDistracted();
	bool IsHunting();
	bool IsSensedActorOnProperty(class AActor* SensedActor);
	bool IsSleeping();
	void On_TimeOfDayChange_Event(E_TimeOfDay TimeOfDay);
	void ReceivePossess(class APawn* PossessedPawn);
	void Set_State_as_Distracted(class UObject* ActorOfInterest);
	void SetAndRefreshBehaviourBasedOnTimeOfDay();
	void SetStateAsHunting(class UObject* HuntedTarget);
	void SetStateAsPatrolling();
	void SetStateAsSleeping();
	void TeleportLeloiToDogHouseIfNotOnProperty();
	void UpdateEnemiesMarkedForDeath();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"AIC_Leloi_C">();
	}
	static class AAIC_Leloi_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AAIC_Leloi_C>();
	}
};
static_assert(alignof(AAIC_Leloi_C) == 0x000008, "Wrong alignment on AAIC_Leloi_C");
static_assert(sizeof(AAIC_Leloi_C) == 0x000460, "Wrong size on AAIC_Leloi_C");
static_assert(offsetof(AAIC_Leloi_C, UberGraphFrame) == 0x0003B8, "Member 'AAIC_Leloi_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(AAIC_Leloi_C, AIPerception) == 0x0003C0, "Member 'AAIC_Leloi_C::AIPerception' has a wrong offset!");
static_assert(offsetof(AAIC_Leloi_C, TargetActorKeyName) == 0x0003C8, "Member 'AAIC_Leloi_C::TargetActorKeyName' has a wrong offset!");
static_assert(offsetof(AAIC_Leloi_C, LeloiStateKeyName) == 0x0003D0, "Member 'AAIC_Leloi_C::LeloiStateKeyName' has a wrong offset!");
static_assert(offsetof(AAIC_Leloi_C, AssociatedLeloi) == 0x0003D8, "Member 'AAIC_Leloi_C::AssociatedLeloi' has a wrong offset!");
static_assert(offsetof(AAIC_Leloi_C, CheckForTrespassersTimer) == 0x0003E0, "Member 'AAIC_Leloi_C::CheckForTrespassersTimer' has a wrong offset!");
static_assert(offsetof(AAIC_Leloi_C, Marked) == 0x0003E8, "Member 'AAIC_Leloi_C::Marked' has a wrong offset!");
static_assert(offsetof(AAIC_Leloi_C, EnemyCharacters) == 0x0003F0, "Member 'AAIC_Leloi_C::EnemyCharacters' has a wrong offset!");
static_assert(offsetof(AAIC_Leloi_C, DistanceToEnemiesMarkedForDeath) == 0x000400, "Member 'AAIC_Leloi_C::DistanceToEnemiesMarkedForDeath' has a wrong offset!");
static_assert(offsetof(AAIC_Leloi_C, Time_Of_Day) == 0x000450, "Member 'AAIC_Leloi_C::Time_Of_Day' has a wrong offset!");
static_assert(offsetof(AAIC_Leloi_C, PettedKeyName) == 0x000454, "Member 'AAIC_Leloi_C::PettedKeyName' has a wrong offset!");

}

