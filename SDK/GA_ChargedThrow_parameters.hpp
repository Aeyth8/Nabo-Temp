#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GA_ChargedThrow

#include "Basic.hpp"

#include "GameplayTags_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "GameplayAbilities_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function GA_ChargedThrow.GA_ChargedThrow_C.CalculateChargeFraction
// 0x0028 (0x0028 - 0x0000)
struct GA_ChargedThrow_C_CalculateChargeFraction final
{
public:
	double                                        SecondsHeld;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        ChargeFraction;                                    // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SafeDivide_ReturnValue;                   // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_1;       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_ChargedThrow_C_CalculateChargeFraction) == 0x000008, "Wrong alignment on GA_ChargedThrow_C_CalculateChargeFraction");
static_assert(sizeof(GA_ChargedThrow_C_CalculateChargeFraction) == 0x000028, "Wrong size on GA_ChargedThrow_C_CalculateChargeFraction");
static_assert(offsetof(GA_ChargedThrow_C_CalculateChargeFraction, SecondsHeld) == 0x000000, "Member 'GA_ChargedThrow_C_CalculateChargeFraction::SecondsHeld' has a wrong offset!");
static_assert(offsetof(GA_ChargedThrow_C_CalculateChargeFraction, ChargeFraction) == 0x000008, "Member 'GA_ChargedThrow_C_CalculateChargeFraction::ChargeFraction' has a wrong offset!");
static_assert(offsetof(GA_ChargedThrow_C_CalculateChargeFraction, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000010, "Member 'GA_ChargedThrow_C_CalculateChargeFraction::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_ChargedThrow_C_CalculateChargeFraction, CallFunc_SafeDivide_ReturnValue) == 0x000018, "Member 'GA_ChargedThrow_C_CalculateChargeFraction::CallFunc_SafeDivide_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_ChargedThrow_C_CalculateChargeFraction, CallFunc_Greater_DoubleDouble_ReturnValue_1) == 0x000020, "Member 'GA_ChargedThrow_C_CalculateChargeFraction::CallFunc_Greater_DoubleDouble_ReturnValue_1' has a wrong offset!");

// Function GA_ChargedThrow.GA_ChargedThrow_C.CalculateThrowTransform
// 0x00F0 (0x00F0 - 0x0000)
struct GA_ChargedThrow_C_CalculateThrowTransform final
{
public:
	struct FTransform                             Spawn_Transform;                                   // 0x0000(0x0060)(Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetAvatarActorFromActorInfo_ReturnValue;  // 0x0060(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_ResidentCharacter_C*                K2Node_DynamicCast_AsBP_Resident_Character;        // 0x0068(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_71[0x7];                                       // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0078(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0090(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_ChargedThrow_C_CalculateThrowTransform) == 0x000010, "Wrong alignment on GA_ChargedThrow_C_CalculateThrowTransform");
static_assert(sizeof(GA_ChargedThrow_C_CalculateThrowTransform) == 0x0000F0, "Wrong size on GA_ChargedThrow_C_CalculateThrowTransform");
static_assert(offsetof(GA_ChargedThrow_C_CalculateThrowTransform, Spawn_Transform) == 0x000000, "Member 'GA_ChargedThrow_C_CalculateThrowTransform::Spawn_Transform' has a wrong offset!");
static_assert(offsetof(GA_ChargedThrow_C_CalculateThrowTransform, CallFunc_GetAvatarActorFromActorInfo_ReturnValue) == 0x000060, "Member 'GA_ChargedThrow_C_CalculateThrowTransform::CallFunc_GetAvatarActorFromActorInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_ChargedThrow_C_CalculateThrowTransform, K2Node_DynamicCast_AsBP_Resident_Character) == 0x000068, "Member 'GA_ChargedThrow_C_CalculateThrowTransform::K2Node_DynamicCast_AsBP_Resident_Character' has a wrong offset!");
static_assert(offsetof(GA_ChargedThrow_C_CalculateThrowTransform, K2Node_DynamicCast_bSuccess) == 0x000070, "Member 'GA_ChargedThrow_C_CalculateThrowTransform::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(GA_ChargedThrow_C_CalculateThrowTransform, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000078, "Member 'GA_ChargedThrow_C_CalculateThrowTransform::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_ChargedThrow_C_CalculateThrowTransform, CallFunc_MakeTransform_ReturnValue) == 0x000090, "Member 'GA_ChargedThrow_C_CalculateThrowTransform::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");

// Function GA_ChargedThrow.GA_ChargedThrow_C.DisableTrajectory
// 0x0020 (0x0020 - 0x0000)
struct GA_ChargedThrow_C_DisableTrajectory final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Get_ClassLog_Name_name;                   // 0x0008(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLocallyControlled_ReturnValue;          // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_ChargedThrow_C_DisableTrajectory) == 0x000008, "Wrong alignment on GA_ChargedThrow_C_DisableTrajectory");
static_assert(sizeof(GA_ChargedThrow_C_DisableTrajectory) == 0x000020, "Wrong size on GA_ChargedThrow_C_DisableTrajectory");
static_assert(offsetof(GA_ChargedThrow_C_DisableTrajectory, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'GA_ChargedThrow_C_DisableTrajectory::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_ChargedThrow_C_DisableTrajectory, CallFunc_Get_ClassLog_Name_name) == 0x000008, "Member 'GA_ChargedThrow_C_DisableTrajectory::CallFunc_Get_ClassLog_Name_name' has a wrong offset!");
static_assert(offsetof(GA_ChargedThrow_C_DisableTrajectory, CallFunc_IsLocallyControlled_ReturnValue) == 0x000018, "Member 'GA_ChargedThrow_C_DisableTrajectory::CallFunc_IsLocallyControlled_ReturnValue' has a wrong offset!");

// Function GA_ChargedThrow.GA_ChargedThrow_C.EnableTrajectory
// 0x0090 (0x0090 - 0x0000)
struct GA_ChargedThrow_C_EnableTrajectory final
{
public:
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0000(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0060(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x0068(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLocallyControlled_ReturnValue;          // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_71[0x7];                                       // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABp_Trajectory_C*                       CallFunc_FinishSpawningActor_ReturnValue;          // 0x0078(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class II_Trajectoryable_C>   CallFunc_SetInterfacePropertyByName_Value_CastInput; // 0x0080(0x0010)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
};
static_assert(alignof(GA_ChargedThrow_C_EnableTrajectory) == 0x000010, "Wrong alignment on GA_ChargedThrow_C_EnableTrajectory");
static_assert(sizeof(GA_ChargedThrow_C_EnableTrajectory) == 0x000090, "Wrong size on GA_ChargedThrow_C_EnableTrajectory");
static_assert(offsetof(GA_ChargedThrow_C_EnableTrajectory, CallFunc_MakeTransform_ReturnValue) == 0x000000, "Member 'GA_ChargedThrow_C_EnableTrajectory::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_ChargedThrow_C_EnableTrajectory, CallFunc_GetPlayerController_ReturnValue) == 0x000060, "Member 'GA_ChargedThrow_C_EnableTrajectory::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_ChargedThrow_C_EnableTrajectory, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x000068, "Member 'GA_ChargedThrow_C_EnableTrajectory::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_ChargedThrow_C_EnableTrajectory, CallFunc_IsLocallyControlled_ReturnValue) == 0x000070, "Member 'GA_ChargedThrow_C_EnableTrajectory::CallFunc_IsLocallyControlled_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_ChargedThrow_C_EnableTrajectory, CallFunc_FinishSpawningActor_ReturnValue) == 0x000078, "Member 'GA_ChargedThrow_C_EnableTrajectory::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_ChargedThrow_C_EnableTrajectory, CallFunc_SetInterfacePropertyByName_Value_CastInput) == 0x000080, "Member 'GA_ChargedThrow_C_EnableTrajectory::CallFunc_SetInterfacePropertyByName_Value_CastInput' has a wrong offset!");

// Function GA_ChargedThrow.GA_ChargedThrow_C.ExecuteUbergraph_GA_ChargedThrow
// 0x0190 (0x0190 - 0x0000)
struct GA_ChargedThrow_C_ExecuteUbergraph_GA_ChargedThrow final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_TimeHeld;                       // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_real_Variable;                                // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAbilityTask_WaitInputRelease*          CallFunc_WaitInputRelease_ReturnValue;             // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_CalculateChargeFraction_ChargeFraction;   // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ContainsTagStack_ReturnValue;             // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x002C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0040(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLocallyControlled_ReturnValue;          // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_HasAuthority_ReturnValue;              // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A[0x6];                                       // 0x004A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UItemInstance*                          K2Node_CustomEvent_ItemInstance;                   // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_ResidentCharacter_C*                K2Node_CustomEvent_Owner;                          // 0x0058(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             K2Node_CustomEvent_SpawnTransform;                 // 0x0060(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwningActorFromActorInfo_ReturnValue;  // 0x00C0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class II_FOVAble_C>          K2Node_DynamicCast_AsI_FOVAble;                    // 0x00C8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_HasAuthority_ReturnValue_1;            // 0x00D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_DA[0x6];                                       // 0x00DA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UItemInstance*                          CallFunc_GetProjectileData_HoldingItem;            // 0x00E0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_ResidentCharacter_C*                CallFunc_GetProjectileData_Owner;                  // 0x00E8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_GetProjectileData_Spawn_Transform;        // 0x00F0(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bWasCancelled;                        // 0x0150(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_151[0x7];                                      // 0x0151(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GetTimeSeconds_ReturnValue;               // 0x0158(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetTimeSeconds_ReturnValue_1;             // 0x0160(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0168(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(float TimeHeld)>               K2Node_CreateDelegate_OutputDelegate_1;            // 0x0170(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0180(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_181[0x7];                                      // 0x0181(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_CalculateChargeFraction_SecondsHeld_ImplicitCast; // 0x0188(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_ChargedThrow_C_ExecuteUbergraph_GA_ChargedThrow) == 0x000010, "Wrong alignment on GA_ChargedThrow_C_ExecuteUbergraph_GA_ChargedThrow");
static_assert(sizeof(GA_ChargedThrow_C_ExecuteUbergraph_GA_ChargedThrow) == 0x000190, "Wrong size on GA_ChargedThrow_C_ExecuteUbergraph_GA_ChargedThrow");
static_assert(offsetof(GA_ChargedThrow_C_ExecuteUbergraph_GA_ChargedThrow, EntryPoint) == 0x000000, "Member 'GA_ChargedThrow_C_ExecuteUbergraph_GA_ChargedThrow::EntryPoint' has a wrong offset!");
static_assert(offsetof(GA_ChargedThrow_C_ExecuteUbergraph_GA_ChargedThrow, K2Node_CustomEvent_TimeHeld) == 0x000004, "Member 'GA_ChargedThrow_C_ExecuteUbergraph_GA_ChargedThrow::K2Node_CustomEvent_TimeHeld' has a wrong offset!");
static_assert(offsetof(GA_ChargedThrow_C_ExecuteUbergraph_GA_ChargedThrow, Temp_real_Variable) == 0x000008, "Member 'GA_ChargedThrow_C_ExecuteUbergraph_GA_ChargedThrow::Temp_real_Variable' has a wrong offset!");
static_assert(offsetof(GA_ChargedThrow_C_ExecuteUbergraph_GA_ChargedThrow, CallFunc_WaitInputRelease_ReturnValue) == 0x000010, "Member 'GA_ChargedThrow_C_ExecuteUbergraph_GA_ChargedThrow::CallFunc_WaitInputRelease_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_ChargedThrow_C_ExecuteUbergraph_GA_ChargedThrow, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'GA_ChargedThrow_C_ExecuteUbergraph_GA_ChargedThrow::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_ChargedThrow_C_ExecuteUbergraph_GA_ChargedThrow, CallFunc_CalculateChargeFraction_ChargeFraction) == 0x000020, "Member 'GA_ChargedThrow_C_ExecuteUbergraph_GA_ChargedThrow::CallFunc_CalculateChargeFraction_ChargeFraction' has a wrong offset!");
static_assert(offsetof(GA_ChargedThrow_C_ExecuteUbergraph_GA_ChargedThrow, CallFunc_ContainsTagStack_ReturnValue) == 0x000028, "Member 'GA_ChargedThrow_C_ExecuteUbergraph_GA_ChargedThrow::CallFunc_ContainsTagStack_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_ChargedThrow_C_ExecuteUbergraph_GA_ChargedThrow, K2Node_CreateDelegate_OutputDelegate) == 0x00002C, "Member 'GA_ChargedThrow_C_ExecuteUbergraph_GA_ChargedThrow::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(GA_ChargedThrow_C_ExecuteUbergraph_GA_ChargedThrow, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000040, "Member 'GA_ChargedThrow_C_ExecuteUbergraph_GA_ChargedThrow::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_ChargedThrow_C_ExecuteUbergraph_GA_ChargedThrow, CallFunc_IsLocallyControlled_ReturnValue) == 0x000048, "Member 'GA_ChargedThrow_C_ExecuteUbergraph_GA_ChargedThrow::CallFunc_IsLocallyControlled_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_ChargedThrow_C_ExecuteUbergraph_GA_ChargedThrow, CallFunc_K2_HasAuthority_ReturnValue) == 0x000049, "Member 'GA_ChargedThrow_C_ExecuteUbergraph_GA_ChargedThrow::CallFunc_K2_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_ChargedThrow_C_ExecuteUbergraph_GA_ChargedThrow, K2Node_CustomEvent_ItemInstance) == 0x000050, "Member 'GA_ChargedThrow_C_ExecuteUbergraph_GA_ChargedThrow::K2Node_CustomEvent_ItemInstance' has a wrong offset!");
static_assert(offsetof(GA_ChargedThrow_C_ExecuteUbergraph_GA_ChargedThrow, K2Node_CustomEvent_Owner) == 0x000058, "Member 'GA_ChargedThrow_C_ExecuteUbergraph_GA_ChargedThrow::K2Node_CustomEvent_Owner' has a wrong offset!");
static_assert(offsetof(GA_ChargedThrow_C_ExecuteUbergraph_GA_ChargedThrow, K2Node_CustomEvent_SpawnTransform) == 0x000060, "Member 'GA_ChargedThrow_C_ExecuteUbergraph_GA_ChargedThrow::K2Node_CustomEvent_SpawnTransform' has a wrong offset!");
static_assert(offsetof(GA_ChargedThrow_C_ExecuteUbergraph_GA_ChargedThrow, CallFunc_GetOwningActorFromActorInfo_ReturnValue) == 0x0000C0, "Member 'GA_ChargedThrow_C_ExecuteUbergraph_GA_ChargedThrow::CallFunc_GetOwningActorFromActorInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_ChargedThrow_C_ExecuteUbergraph_GA_ChargedThrow, K2Node_DynamicCast_AsI_FOVAble) == 0x0000C8, "Member 'GA_ChargedThrow_C_ExecuteUbergraph_GA_ChargedThrow::K2Node_DynamicCast_AsI_FOVAble' has a wrong offset!");
static_assert(offsetof(GA_ChargedThrow_C_ExecuteUbergraph_GA_ChargedThrow, K2Node_DynamicCast_bSuccess) == 0x0000D8, "Member 'GA_ChargedThrow_C_ExecuteUbergraph_GA_ChargedThrow::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(GA_ChargedThrow_C_ExecuteUbergraph_GA_ChargedThrow, CallFunc_K2_HasAuthority_ReturnValue_1) == 0x0000D9, "Member 'GA_ChargedThrow_C_ExecuteUbergraph_GA_ChargedThrow::CallFunc_K2_HasAuthority_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_ChargedThrow_C_ExecuteUbergraph_GA_ChargedThrow, CallFunc_GetProjectileData_HoldingItem) == 0x0000E0, "Member 'GA_ChargedThrow_C_ExecuteUbergraph_GA_ChargedThrow::CallFunc_GetProjectileData_HoldingItem' has a wrong offset!");
static_assert(offsetof(GA_ChargedThrow_C_ExecuteUbergraph_GA_ChargedThrow, CallFunc_GetProjectileData_Owner) == 0x0000E8, "Member 'GA_ChargedThrow_C_ExecuteUbergraph_GA_ChargedThrow::CallFunc_GetProjectileData_Owner' has a wrong offset!");
static_assert(offsetof(GA_ChargedThrow_C_ExecuteUbergraph_GA_ChargedThrow, CallFunc_GetProjectileData_Spawn_Transform) == 0x0000F0, "Member 'GA_ChargedThrow_C_ExecuteUbergraph_GA_ChargedThrow::CallFunc_GetProjectileData_Spawn_Transform' has a wrong offset!");
static_assert(offsetof(GA_ChargedThrow_C_ExecuteUbergraph_GA_ChargedThrow, K2Node_Event_bWasCancelled) == 0x000150, "Member 'GA_ChargedThrow_C_ExecuteUbergraph_GA_ChargedThrow::K2Node_Event_bWasCancelled' has a wrong offset!");
static_assert(offsetof(GA_ChargedThrow_C_ExecuteUbergraph_GA_ChargedThrow, CallFunc_GetTimeSeconds_ReturnValue) == 0x000158, "Member 'GA_ChargedThrow_C_ExecuteUbergraph_GA_ChargedThrow::CallFunc_GetTimeSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_ChargedThrow_C_ExecuteUbergraph_GA_ChargedThrow, CallFunc_GetTimeSeconds_ReturnValue_1) == 0x000160, "Member 'GA_ChargedThrow_C_ExecuteUbergraph_GA_ChargedThrow::CallFunc_GetTimeSeconds_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_ChargedThrow_C_ExecuteUbergraph_GA_ChargedThrow, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000168, "Member 'GA_ChargedThrow_C_ExecuteUbergraph_GA_ChargedThrow::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_ChargedThrow_C_ExecuteUbergraph_GA_ChargedThrow, K2Node_CreateDelegate_OutputDelegate_1) == 0x000170, "Member 'GA_ChargedThrow_C_ExecuteUbergraph_GA_ChargedThrow::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(GA_ChargedThrow_C_ExecuteUbergraph_GA_ChargedThrow, CallFunc_IsValid_ReturnValue_1) == 0x000180, "Member 'GA_ChargedThrow_C_ExecuteUbergraph_GA_ChargedThrow::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_ChargedThrow_C_ExecuteUbergraph_GA_ChargedThrow, CallFunc_CalculateChargeFraction_SecondsHeld_ImplicitCast) == 0x000188, "Member 'GA_ChargedThrow_C_ExecuteUbergraph_GA_ChargedThrow::CallFunc_CalculateChargeFraction_SecondsHeld_ImplicitCast' has a wrong offset!");

// Function GA_ChargedThrow.GA_ChargedThrow_C.GetGravityScale
// 0x0008 (0x0008 - 0x0000)
struct GA_ChargedThrow_C_GetGravityScale final
{
public:
	double                                        GravityScale;                                      // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_ChargedThrow_C_GetGravityScale) == 0x000008, "Wrong alignment on GA_ChargedThrow_C_GetGravityScale");
static_assert(sizeof(GA_ChargedThrow_C_GetGravityScale) == 0x000008, "Wrong size on GA_ChargedThrow_C_GetGravityScale");
static_assert(offsetof(GA_ChargedThrow_C_GetGravityScale, GravityScale) == 0x000000, "Member 'GA_ChargedThrow_C_GetGravityScale::GravityScale' has a wrong offset!");

// Function GA_ChargedThrow.GA_ChargedThrow_C.GetOrCreateTrajectoryInstance
// 0x00A0 (0x00A0 - 0x0000)
struct GA_ChargedThrow_C_GetOrCreateTrajectoryInstance final
{
public:
	class ABp_Trajectory_C*                       Instance;                                          // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8[0x8];                                        // 0x0008(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0010(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x0070(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLocallyControlled_ReturnValue;          // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_79[0x7];                                       // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABp_Trajectory_C*                       CallFunc_FinishSpawningActor_ReturnValue;          // 0x0080(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0088(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class II_Trajectoryable_C>   CallFunc_SetInterfacePropertyByName_Value_CastInput; // 0x0090(0x0010)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
};
static_assert(alignof(GA_ChargedThrow_C_GetOrCreateTrajectoryInstance) == 0x000010, "Wrong alignment on GA_ChargedThrow_C_GetOrCreateTrajectoryInstance");
static_assert(sizeof(GA_ChargedThrow_C_GetOrCreateTrajectoryInstance) == 0x0000A0, "Wrong size on GA_ChargedThrow_C_GetOrCreateTrajectoryInstance");
static_assert(offsetof(GA_ChargedThrow_C_GetOrCreateTrajectoryInstance, Instance) == 0x000000, "Member 'GA_ChargedThrow_C_GetOrCreateTrajectoryInstance::Instance' has a wrong offset!");
static_assert(offsetof(GA_ChargedThrow_C_GetOrCreateTrajectoryInstance, CallFunc_MakeTransform_ReturnValue) == 0x000010, "Member 'GA_ChargedThrow_C_GetOrCreateTrajectoryInstance::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_ChargedThrow_C_GetOrCreateTrajectoryInstance, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x000070, "Member 'GA_ChargedThrow_C_GetOrCreateTrajectoryInstance::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_ChargedThrow_C_GetOrCreateTrajectoryInstance, CallFunc_IsLocallyControlled_ReturnValue) == 0x000078, "Member 'GA_ChargedThrow_C_GetOrCreateTrajectoryInstance::CallFunc_IsLocallyControlled_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_ChargedThrow_C_GetOrCreateTrajectoryInstance, CallFunc_FinishSpawningActor_ReturnValue) == 0x000080, "Member 'GA_ChargedThrow_C_GetOrCreateTrajectoryInstance::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_ChargedThrow_C_GetOrCreateTrajectoryInstance, CallFunc_GetPlayerController_ReturnValue) == 0x000088, "Member 'GA_ChargedThrow_C_GetOrCreateTrajectoryInstance::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_ChargedThrow_C_GetOrCreateTrajectoryInstance, CallFunc_SetInterfacePropertyByName_Value_CastInput) == 0x000090, "Member 'GA_ChargedThrow_C_GetOrCreateTrajectoryInstance::CallFunc_SetInterfacePropertyByName_Value_CastInput' has a wrong offset!");

// Function GA_ChargedThrow.GA_ChargedThrow_C.GetProjectileData
// 0x0120 (0x0120 - 0x0000)
struct GA_ChargedThrow_C_GetProjectileData final
{
public:
	class UItemInstance*                          HoldingItem;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_ResidentCharacter_C*                Owner;                                             // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             Spawn_Transform;                                   // 0x0010(0x0060)(Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetAvatarActorFromActorInfo_ReturnValue;  // 0x0070(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_78[0x8];                                       // 0x0078(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_CalculateThrowTransform_Spawn_Transform;  // 0x0080(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_ResidentCharacter_C*                K2Node_DynamicCast_AsBP_Resident_Character;        // 0x00E0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E9[0x7];                                       // 0x00E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UEquipmentManagerComponent*             CallFunc_GetEquipmentManager_ReturnValue;          // 0x00F0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetInstanceFromSlot_IsInstanceValid;      // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F9[0x7];                                       // 0x00F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UEquipmentInstance*                     CallFunc_GetInstanceFromSlot_ReturnValue;          // 0x0100(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_GetInstigator_ReturnValue;                // 0x0108(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UItemInstance*                          K2Node_DynamicCast_AsItem_Instance;                // 0x0110(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_ChargedThrow_C_GetProjectileData) == 0x000010, "Wrong alignment on GA_ChargedThrow_C_GetProjectileData");
static_assert(sizeof(GA_ChargedThrow_C_GetProjectileData) == 0x000120, "Wrong size on GA_ChargedThrow_C_GetProjectileData");
static_assert(offsetof(GA_ChargedThrow_C_GetProjectileData, HoldingItem) == 0x000000, "Member 'GA_ChargedThrow_C_GetProjectileData::HoldingItem' has a wrong offset!");
static_assert(offsetof(GA_ChargedThrow_C_GetProjectileData, Owner) == 0x000008, "Member 'GA_ChargedThrow_C_GetProjectileData::Owner' has a wrong offset!");
static_assert(offsetof(GA_ChargedThrow_C_GetProjectileData, Spawn_Transform) == 0x000010, "Member 'GA_ChargedThrow_C_GetProjectileData::Spawn_Transform' has a wrong offset!");
static_assert(offsetof(GA_ChargedThrow_C_GetProjectileData, CallFunc_GetAvatarActorFromActorInfo_ReturnValue) == 0x000070, "Member 'GA_ChargedThrow_C_GetProjectileData::CallFunc_GetAvatarActorFromActorInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_ChargedThrow_C_GetProjectileData, CallFunc_CalculateThrowTransform_Spawn_Transform) == 0x000080, "Member 'GA_ChargedThrow_C_GetProjectileData::CallFunc_CalculateThrowTransform_Spawn_Transform' has a wrong offset!");
static_assert(offsetof(GA_ChargedThrow_C_GetProjectileData, K2Node_DynamicCast_AsBP_Resident_Character) == 0x0000E0, "Member 'GA_ChargedThrow_C_GetProjectileData::K2Node_DynamicCast_AsBP_Resident_Character' has a wrong offset!");
static_assert(offsetof(GA_ChargedThrow_C_GetProjectileData, K2Node_DynamicCast_bSuccess) == 0x0000E8, "Member 'GA_ChargedThrow_C_GetProjectileData::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(GA_ChargedThrow_C_GetProjectileData, CallFunc_GetEquipmentManager_ReturnValue) == 0x0000F0, "Member 'GA_ChargedThrow_C_GetProjectileData::CallFunc_GetEquipmentManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_ChargedThrow_C_GetProjectileData, CallFunc_GetInstanceFromSlot_IsInstanceValid) == 0x0000F8, "Member 'GA_ChargedThrow_C_GetProjectileData::CallFunc_GetInstanceFromSlot_IsInstanceValid' has a wrong offset!");
static_assert(offsetof(GA_ChargedThrow_C_GetProjectileData, CallFunc_GetInstanceFromSlot_ReturnValue) == 0x000100, "Member 'GA_ChargedThrow_C_GetProjectileData::CallFunc_GetInstanceFromSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_ChargedThrow_C_GetProjectileData, CallFunc_GetInstigator_ReturnValue) == 0x000108, "Member 'GA_ChargedThrow_C_GetProjectileData::CallFunc_GetInstigator_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_ChargedThrow_C_GetProjectileData, K2Node_DynamicCast_AsItem_Instance) == 0x000110, "Member 'GA_ChargedThrow_C_GetProjectileData::K2Node_DynamicCast_AsItem_Instance' has a wrong offset!");
static_assert(offsetof(GA_ChargedThrow_C_GetProjectileData, K2Node_DynamicCast_bSuccess_1) == 0x000118, "Member 'GA_ChargedThrow_C_GetProjectileData::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");

// Function GA_ChargedThrow.GA_ChargedThrow_C.GetStartPositionTransform
// 0x00D0 (0x00D0 - 0x0000)
struct GA_ChargedThrow_C_GetStartPositionTransform final
{
public:
	struct FTransform                             StartTransform;                                    // 0x0000(0x0060)(Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UItemInstance*                          CallFunc_GetProjectileData_HoldingItem;            // 0x0060(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_ResidentCharacter_C*                CallFunc_GetProjectileData_Owner;                  // 0x0068(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_GetProjectileData_Spawn_Transform;        // 0x0070(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_ChargedThrow_C_GetStartPositionTransform) == 0x000010, "Wrong alignment on GA_ChargedThrow_C_GetStartPositionTransform");
static_assert(sizeof(GA_ChargedThrow_C_GetStartPositionTransform) == 0x0000D0, "Wrong size on GA_ChargedThrow_C_GetStartPositionTransform");
static_assert(offsetof(GA_ChargedThrow_C_GetStartPositionTransform, StartTransform) == 0x000000, "Member 'GA_ChargedThrow_C_GetStartPositionTransform::StartTransform' has a wrong offset!");
static_assert(offsetof(GA_ChargedThrow_C_GetStartPositionTransform, CallFunc_GetProjectileData_HoldingItem) == 0x000060, "Member 'GA_ChargedThrow_C_GetStartPositionTransform::CallFunc_GetProjectileData_HoldingItem' has a wrong offset!");
static_assert(offsetof(GA_ChargedThrow_C_GetStartPositionTransform, CallFunc_GetProjectileData_Owner) == 0x000068, "Member 'GA_ChargedThrow_C_GetStartPositionTransform::CallFunc_GetProjectileData_Owner' has a wrong offset!");
static_assert(offsetof(GA_ChargedThrow_C_GetStartPositionTransform, CallFunc_GetProjectileData_Spawn_Transform) == 0x000070, "Member 'GA_ChargedThrow_C_GetStartPositionTransform::CallFunc_GetProjectileData_Spawn_Transform' has a wrong offset!");

// Function GA_ChargedThrow.GA_ChargedThrow_C.GetVelocity
// 0x0150 (0x0150 - 0x0000)
struct GA_ChargedThrow_C_GetVelocity final
{
public:
	struct FVector                                Velocity;                                          // 0x0000(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_18[0x8];                                       // 0x0018(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_CalculateThrowTransform_Spawn_Transform;  // 0x0020(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_DoubleToVector_ReturnValue;          // 0x0080(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0098(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x00B0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x00C8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_RotatorToVector_ReturnValue;         // 0x00E0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_CalculateChargeFraction_ChargeFraction;   // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_DoubleToVector_ReturnValue_1;        // 0x0100(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue;        // 0x0118(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue_1;      // 0x0130(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_ChargedThrow_C_GetVelocity) == 0x000010, "Wrong alignment on GA_ChargedThrow_C_GetVelocity");
static_assert(sizeof(GA_ChargedThrow_C_GetVelocity) == 0x000150, "Wrong size on GA_ChargedThrow_C_GetVelocity");
static_assert(offsetof(GA_ChargedThrow_C_GetVelocity, Velocity) == 0x000000, "Member 'GA_ChargedThrow_C_GetVelocity::Velocity' has a wrong offset!");
static_assert(offsetof(GA_ChargedThrow_C_GetVelocity, CallFunc_CalculateThrowTransform_Spawn_Transform) == 0x000020, "Member 'GA_ChargedThrow_C_GetVelocity::CallFunc_CalculateThrowTransform_Spawn_Transform' has a wrong offset!");
static_assert(offsetof(GA_ChargedThrow_C_GetVelocity, CallFunc_Conv_DoubleToVector_ReturnValue) == 0x000080, "Member 'GA_ChargedThrow_C_GetVelocity::CallFunc_Conv_DoubleToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_ChargedThrow_C_GetVelocity, CallFunc_BreakTransform_Location) == 0x000098, "Member 'GA_ChargedThrow_C_GetVelocity::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(GA_ChargedThrow_C_GetVelocity, CallFunc_BreakTransform_Rotation) == 0x0000B0, "Member 'GA_ChargedThrow_C_GetVelocity::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(GA_ChargedThrow_C_GetVelocity, CallFunc_BreakTransform_Scale) == 0x0000C8, "Member 'GA_ChargedThrow_C_GetVelocity::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(GA_ChargedThrow_C_GetVelocity, CallFunc_Conv_RotatorToVector_ReturnValue) == 0x0000E0, "Member 'GA_ChargedThrow_C_GetVelocity::CallFunc_Conv_RotatorToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_ChargedThrow_C_GetVelocity, CallFunc_CalculateChargeFraction_ChargeFraction) == 0x0000F8, "Member 'GA_ChargedThrow_C_GetVelocity::CallFunc_CalculateChargeFraction_ChargeFraction' has a wrong offset!");
static_assert(offsetof(GA_ChargedThrow_C_GetVelocity, CallFunc_Conv_DoubleToVector_ReturnValue_1) == 0x000100, "Member 'GA_ChargedThrow_C_GetVelocity::CallFunc_Conv_DoubleToVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_ChargedThrow_C_GetVelocity, CallFunc_Multiply_VectorVector_ReturnValue) == 0x000118, "Member 'GA_ChargedThrow_C_GetVelocity::CallFunc_Multiply_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_ChargedThrow_C_GetVelocity, CallFunc_Multiply_VectorVector_ReturnValue_1) == 0x000130, "Member 'GA_ChargedThrow_C_GetVelocity::CallFunc_Multiply_VectorVector_ReturnValue_1' has a wrong offset!");

// Function GA_ChargedThrow.GA_ChargedThrow_C.K2_OnEndAbility
// 0x0001 (0x0001 - 0x0000)
struct GA_ChargedThrow_C_K2_OnEndAbility final
{
public:
	bool                                          bWasCancelled;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_ChargedThrow_C_K2_OnEndAbility) == 0x000001, "Wrong alignment on GA_ChargedThrow_C_K2_OnEndAbility");
static_assert(sizeof(GA_ChargedThrow_C_K2_OnEndAbility) == 0x000001, "Wrong size on GA_ChargedThrow_C_K2_OnEndAbility");
static_assert(offsetof(GA_ChargedThrow_C_K2_OnEndAbility, bWasCancelled) == 0x000000, "Member 'GA_ChargedThrow_C_K2_OnEndAbility::bWasCancelled' has a wrong offset!");

// Function GA_ChargedThrow.GA_ChargedThrow_C.OnRelease_9915CAF645FF4B7F6615D78A261FF9E4
// 0x0004 (0x0004 - 0x0000)
struct GA_ChargedThrow_C_OnRelease_9915CAF645FF4B7F6615D78A261FF9E4 final
{
public:
	float                                         TimeHeld;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_ChargedThrow_C_OnRelease_9915CAF645FF4B7F6615D78A261FF9E4) == 0x000004, "Wrong alignment on GA_ChargedThrow_C_OnRelease_9915CAF645FF4B7F6615D78A261FF9E4");
static_assert(sizeof(GA_ChargedThrow_C_OnRelease_9915CAF645FF4B7F6615D78A261FF9E4) == 0x000004, "Wrong size on GA_ChargedThrow_C_OnRelease_9915CAF645FF4B7F6615D78A261FF9E4");
static_assert(offsetof(GA_ChargedThrow_C_OnRelease_9915CAF645FF4B7F6615D78A261FF9E4, TimeHeld) == 0x000000, "Member 'GA_ChargedThrow_C_OnRelease_9915CAF645FF4B7F6615D78A261FF9E4::TimeHeld' has a wrong offset!");

// Function GA_ChargedThrow.GA_ChargedThrow_C.Remove Ammo from Held Item
// 0x0018 (0x0018 - 0x0000)
struct GA_ChargedThrow_C_Remove_Ammo_from_Held_Item final
{
public:
	int32                                         CallFunc_GetTagStackCount_ReturnValue;             // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	const class UItemAction_Droppable*            CallFunc_FindActionByType_ReturnValue;             // 0x0008(0x0008)(ConstParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetDroppedAmmoCount_ReturnValue;          // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_ChargedThrow_C_Remove_Ammo_from_Held_Item) == 0x000008, "Wrong alignment on GA_ChargedThrow_C_Remove_Ammo_from_Held_Item");
static_assert(sizeof(GA_ChargedThrow_C_Remove_Ammo_from_Held_Item) == 0x000018, "Wrong size on GA_ChargedThrow_C_Remove_Ammo_from_Held_Item");
static_assert(offsetof(GA_ChargedThrow_C_Remove_Ammo_from_Held_Item, CallFunc_GetTagStackCount_ReturnValue) == 0x000000, "Member 'GA_ChargedThrow_C_Remove_Ammo_from_Held_Item::CallFunc_GetTagStackCount_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_ChargedThrow_C_Remove_Ammo_from_Held_Item, CallFunc_Greater_IntInt_ReturnValue) == 0x000004, "Member 'GA_ChargedThrow_C_Remove_Ammo_from_Held_Item::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_ChargedThrow_C_Remove_Ammo_from_Held_Item, CallFunc_FindActionByType_ReturnValue) == 0x000008, "Member 'GA_ChargedThrow_C_Remove_Ammo_from_Held_Item::CallFunc_FindActionByType_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_ChargedThrow_C_Remove_Ammo_from_Held_Item, CallFunc_GetDroppedAmmoCount_ReturnValue) == 0x000010, "Member 'GA_ChargedThrow_C_Remove_Ammo_from_Held_Item::CallFunc_GetDroppedAmmoCount_ReturnValue' has a wrong offset!");

// Function GA_ChargedThrow.GA_ChargedThrow_C.RemoveItemFromInventory
// 0x0010 (0x0010 - 0x0000)
struct GA_ChargedThrow_C_RemoveItemFromInventory final
{
public:
	class AActor*                                 CallFunc_GetOwningActorFromActorInfo_ReturnValue;  // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UInventoryComponent*                    CallFunc_GetComponentByClass_ReturnValue;          // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_ChargedThrow_C_RemoveItemFromInventory) == 0x000008, "Wrong alignment on GA_ChargedThrow_C_RemoveItemFromInventory");
static_assert(sizeof(GA_ChargedThrow_C_RemoveItemFromInventory) == 0x000010, "Wrong size on GA_ChargedThrow_C_RemoveItemFromInventory");
static_assert(offsetof(GA_ChargedThrow_C_RemoveItemFromInventory, CallFunc_GetOwningActorFromActorInfo_ReturnValue) == 0x000000, "Member 'GA_ChargedThrow_C_RemoveItemFromInventory::CallFunc_GetOwningActorFromActorInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_ChargedThrow_C_RemoveItemFromInventory, CallFunc_GetComponentByClass_ReturnValue) == 0x000008, "Member 'GA_ChargedThrow_C_RemoveItemFromInventory::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");

// Function GA_ChargedThrow.GA_ChargedThrow_C.SpawnProjectile
// 0x0070 (0x0070 - 0x0000)
struct GA_ChargedThrow_C_SpawnProjectile final
{
public:
	class UItemInstance*                          ItemInstance;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_ResidentCharacter_C*                Owner;                                             // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             SpawnTransform;                                    // 0x0010(0x0060)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_ChargedThrow_C_SpawnProjectile) == 0x000010, "Wrong alignment on GA_ChargedThrow_C_SpawnProjectile");
static_assert(sizeof(GA_ChargedThrow_C_SpawnProjectile) == 0x000070, "Wrong size on GA_ChargedThrow_C_SpawnProjectile");
static_assert(offsetof(GA_ChargedThrow_C_SpawnProjectile, ItemInstance) == 0x000000, "Member 'GA_ChargedThrow_C_SpawnProjectile::ItemInstance' has a wrong offset!");
static_assert(offsetof(GA_ChargedThrow_C_SpawnProjectile, Owner) == 0x000008, "Member 'GA_ChargedThrow_C_SpawnProjectile::Owner' has a wrong offset!");
static_assert(offsetof(GA_ChargedThrow_C_SpawnProjectile, SpawnTransform) == 0x000010, "Member 'GA_ChargedThrow_C_SpawnProjectile::SpawnTransform' has a wrong offset!");

// Function GA_ChargedThrow.GA_ChargedThrow_C.ThrowEquipment
// 0x04A0 (0x04A0 - 0x0000)
struct GA_ChargedThrow_C_ThrowEquipment final
{
public:
	class UItemInstance*                          ItemInstance;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_ResidentCharacter_C*                Owner;                                             // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             SpawnTransform;                                    // 0x0010(0x0060)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        NewLocalVar;                                       // 0x0070(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0078(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x0090(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x00A8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetTagStackCount_ReturnValue;             // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C4[0xC];                                       // 0x00C4(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x00D0(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_Conv_IntToByte_ReturnValue;               // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_131[0xF];                                      // 0x0131(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_1;              // 0x0140(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	const class UItemAction_Droppable*            CallFunc_FindActionByType_ReturnValue;             // 0x01A0(0x0008)(ConstParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_DoubleToVector_ReturnValue;          // 0x01A8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x01C0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 K2Node_ClassDynamicCast_AsBP_Deed;                 // 0x01C8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ClassDynamicCast_bSuccess;                  // 0x01D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D1[0x7];                                      // 0x01D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_1; // 0x01D8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_FinishSpawningActor_ReturnValue;          // 0x01E0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   CallFunc_GetComponentByClass_ReturnValue;          // 0x01E8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class ABP_Deed_C*                             CallFunc_FinishSpawningActor_ReturnValue_1;        // 0x01F0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1F8[0x8];                                      // 0x01F8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_CalculateThrowTransform_Spawn_Transform;  // 0x0200(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   CallFunc_GetComponentByClass_ReturnValue_1;        // 0x0260(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location_1;                // 0x0268(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation_1;                // 0x0280(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale_1;                   // 0x0298(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_RotatorToVector_ReturnValue;         // 0x02B0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_CalculateChargeFraction_ChargeFraction;   // 0x02C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_DoubleToVector_ReturnValue_1;        // 0x02D0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue;        // 0x02E8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_DoubleToVector_ReturnValue_2;        // 0x0300(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue_1;      // 0x0318(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_CalculateThrowTransform_Spawn_Transform_1; // 0x0330(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x0390(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0398(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x03A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location_2;                // 0x03A8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation_2;                // 0x03C0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale_2;                   // 0x03D8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x03F0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_RotatorToVector_ReturnValue_1;       // 0x0408(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_CalculateChargeFraction_ChargeFraction_1; // 0x0420(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_DoubleToVector_ReturnValue_3;        // 0x0428(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue_2;      // 0x0440(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue_3;      // 0x0458(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X_1;                          // 0x0470(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_1;                          // 0x0478(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_1;                          // 0x0480(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_1;                 // 0x0488(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_ChargedThrow_C_ThrowEquipment) == 0x000010, "Wrong alignment on GA_ChargedThrow_C_ThrowEquipment");
static_assert(sizeof(GA_ChargedThrow_C_ThrowEquipment) == 0x0004A0, "Wrong size on GA_ChargedThrow_C_ThrowEquipment");
static_assert(offsetof(GA_ChargedThrow_C_ThrowEquipment, ItemInstance) == 0x000000, "Member 'GA_ChargedThrow_C_ThrowEquipment::ItemInstance' has a wrong offset!");
static_assert(offsetof(GA_ChargedThrow_C_ThrowEquipment, Owner) == 0x000008, "Member 'GA_ChargedThrow_C_ThrowEquipment::Owner' has a wrong offset!");
static_assert(offsetof(GA_ChargedThrow_C_ThrowEquipment, SpawnTransform) == 0x000010, "Member 'GA_ChargedThrow_C_ThrowEquipment::SpawnTransform' has a wrong offset!");
static_assert(offsetof(GA_ChargedThrow_C_ThrowEquipment, NewLocalVar) == 0x000070, "Member 'GA_ChargedThrow_C_ThrowEquipment::NewLocalVar' has a wrong offset!");
static_assert(offsetof(GA_ChargedThrow_C_ThrowEquipment, CallFunc_BreakTransform_Location) == 0x000078, "Member 'GA_ChargedThrow_C_ThrowEquipment::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(GA_ChargedThrow_C_ThrowEquipment, CallFunc_BreakTransform_Rotation) == 0x000090, "Member 'GA_ChargedThrow_C_ThrowEquipment::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(GA_ChargedThrow_C_ThrowEquipment, CallFunc_BreakTransform_Scale) == 0x0000A8, "Member 'GA_ChargedThrow_C_ThrowEquipment::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(GA_ChargedThrow_C_ThrowEquipment, CallFunc_GetTagStackCount_ReturnValue) == 0x0000C0, "Member 'GA_ChargedThrow_C_ThrowEquipment::CallFunc_GetTagStackCount_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_ChargedThrow_C_ThrowEquipment, CallFunc_MakeTransform_ReturnValue) == 0x0000D0, "Member 'GA_ChargedThrow_C_ThrowEquipment::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_ChargedThrow_C_ThrowEquipment, CallFunc_Conv_IntToByte_ReturnValue) == 0x000130, "Member 'GA_ChargedThrow_C_ThrowEquipment::CallFunc_Conv_IntToByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_ChargedThrow_C_ThrowEquipment, CallFunc_MakeTransform_ReturnValue_1) == 0x000140, "Member 'GA_ChargedThrow_C_ThrowEquipment::CallFunc_MakeTransform_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_ChargedThrow_C_ThrowEquipment, CallFunc_FindActionByType_ReturnValue) == 0x0001A0, "Member 'GA_ChargedThrow_C_ThrowEquipment::CallFunc_FindActionByType_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_ChargedThrow_C_ThrowEquipment, CallFunc_Conv_DoubleToVector_ReturnValue) == 0x0001A8, "Member 'GA_ChargedThrow_C_ThrowEquipment::CallFunc_Conv_DoubleToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_ChargedThrow_C_ThrowEquipment, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x0001C0, "Member 'GA_ChargedThrow_C_ThrowEquipment::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_ChargedThrow_C_ThrowEquipment, K2Node_ClassDynamicCast_AsBP_Deed) == 0x0001C8, "Member 'GA_ChargedThrow_C_ThrowEquipment::K2Node_ClassDynamicCast_AsBP_Deed' has a wrong offset!");
static_assert(offsetof(GA_ChargedThrow_C_ThrowEquipment, K2Node_ClassDynamicCast_bSuccess) == 0x0001D0, "Member 'GA_ChargedThrow_C_ThrowEquipment::K2Node_ClassDynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(GA_ChargedThrow_C_ThrowEquipment, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_1) == 0x0001D8, "Member 'GA_ChargedThrow_C_ThrowEquipment::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_ChargedThrow_C_ThrowEquipment, CallFunc_FinishSpawningActor_ReturnValue) == 0x0001E0, "Member 'GA_ChargedThrow_C_ThrowEquipment::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_ChargedThrow_C_ThrowEquipment, CallFunc_GetComponentByClass_ReturnValue) == 0x0001E8, "Member 'GA_ChargedThrow_C_ThrowEquipment::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_ChargedThrow_C_ThrowEquipment, CallFunc_FinishSpawningActor_ReturnValue_1) == 0x0001F0, "Member 'GA_ChargedThrow_C_ThrowEquipment::CallFunc_FinishSpawningActor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_ChargedThrow_C_ThrowEquipment, CallFunc_CalculateThrowTransform_Spawn_Transform) == 0x000200, "Member 'GA_ChargedThrow_C_ThrowEquipment::CallFunc_CalculateThrowTransform_Spawn_Transform' has a wrong offset!");
static_assert(offsetof(GA_ChargedThrow_C_ThrowEquipment, CallFunc_GetComponentByClass_ReturnValue_1) == 0x000260, "Member 'GA_ChargedThrow_C_ThrowEquipment::CallFunc_GetComponentByClass_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_ChargedThrow_C_ThrowEquipment, CallFunc_BreakTransform_Location_1) == 0x000268, "Member 'GA_ChargedThrow_C_ThrowEquipment::CallFunc_BreakTransform_Location_1' has a wrong offset!");
static_assert(offsetof(GA_ChargedThrow_C_ThrowEquipment, CallFunc_BreakTransform_Rotation_1) == 0x000280, "Member 'GA_ChargedThrow_C_ThrowEquipment::CallFunc_BreakTransform_Rotation_1' has a wrong offset!");
static_assert(offsetof(GA_ChargedThrow_C_ThrowEquipment, CallFunc_BreakTransform_Scale_1) == 0x000298, "Member 'GA_ChargedThrow_C_ThrowEquipment::CallFunc_BreakTransform_Scale_1' has a wrong offset!");
static_assert(offsetof(GA_ChargedThrow_C_ThrowEquipment, CallFunc_Conv_RotatorToVector_ReturnValue) == 0x0002B0, "Member 'GA_ChargedThrow_C_ThrowEquipment::CallFunc_Conv_RotatorToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_ChargedThrow_C_ThrowEquipment, CallFunc_CalculateChargeFraction_ChargeFraction) == 0x0002C8, "Member 'GA_ChargedThrow_C_ThrowEquipment::CallFunc_CalculateChargeFraction_ChargeFraction' has a wrong offset!");
static_assert(offsetof(GA_ChargedThrow_C_ThrowEquipment, CallFunc_Conv_DoubleToVector_ReturnValue_1) == 0x0002D0, "Member 'GA_ChargedThrow_C_ThrowEquipment::CallFunc_Conv_DoubleToVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_ChargedThrow_C_ThrowEquipment, CallFunc_Multiply_VectorVector_ReturnValue) == 0x0002E8, "Member 'GA_ChargedThrow_C_ThrowEquipment::CallFunc_Multiply_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_ChargedThrow_C_ThrowEquipment, CallFunc_Conv_DoubleToVector_ReturnValue_2) == 0x000300, "Member 'GA_ChargedThrow_C_ThrowEquipment::CallFunc_Conv_DoubleToVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GA_ChargedThrow_C_ThrowEquipment, CallFunc_Multiply_VectorVector_ReturnValue_1) == 0x000318, "Member 'GA_ChargedThrow_C_ThrowEquipment::CallFunc_Multiply_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_ChargedThrow_C_ThrowEquipment, CallFunc_CalculateThrowTransform_Spawn_Transform_1) == 0x000330, "Member 'GA_ChargedThrow_C_ThrowEquipment::CallFunc_CalculateThrowTransform_Spawn_Transform_1' has a wrong offset!");
static_assert(offsetof(GA_ChargedThrow_C_ThrowEquipment, CallFunc_BreakVector_X) == 0x000390, "Member 'GA_ChargedThrow_C_ThrowEquipment::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(GA_ChargedThrow_C_ThrowEquipment, CallFunc_BreakVector_Y) == 0x000398, "Member 'GA_ChargedThrow_C_ThrowEquipment::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(GA_ChargedThrow_C_ThrowEquipment, CallFunc_BreakVector_Z) == 0x0003A0, "Member 'GA_ChargedThrow_C_ThrowEquipment::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(GA_ChargedThrow_C_ThrowEquipment, CallFunc_BreakTransform_Location_2) == 0x0003A8, "Member 'GA_ChargedThrow_C_ThrowEquipment::CallFunc_BreakTransform_Location_2' has a wrong offset!");
static_assert(offsetof(GA_ChargedThrow_C_ThrowEquipment, CallFunc_BreakTransform_Rotation_2) == 0x0003C0, "Member 'GA_ChargedThrow_C_ThrowEquipment::CallFunc_BreakTransform_Rotation_2' has a wrong offset!");
static_assert(offsetof(GA_ChargedThrow_C_ThrowEquipment, CallFunc_BreakTransform_Scale_2) == 0x0003D8, "Member 'GA_ChargedThrow_C_ThrowEquipment::CallFunc_BreakTransform_Scale_2' has a wrong offset!");
static_assert(offsetof(GA_ChargedThrow_C_ThrowEquipment, CallFunc_MakeVector_ReturnValue) == 0x0003F0, "Member 'GA_ChargedThrow_C_ThrowEquipment::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_ChargedThrow_C_ThrowEquipment, CallFunc_Conv_RotatorToVector_ReturnValue_1) == 0x000408, "Member 'GA_ChargedThrow_C_ThrowEquipment::CallFunc_Conv_RotatorToVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_ChargedThrow_C_ThrowEquipment, CallFunc_CalculateChargeFraction_ChargeFraction_1) == 0x000420, "Member 'GA_ChargedThrow_C_ThrowEquipment::CallFunc_CalculateChargeFraction_ChargeFraction_1' has a wrong offset!");
static_assert(offsetof(GA_ChargedThrow_C_ThrowEquipment, CallFunc_Conv_DoubleToVector_ReturnValue_3) == 0x000428, "Member 'GA_ChargedThrow_C_ThrowEquipment::CallFunc_Conv_DoubleToVector_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(GA_ChargedThrow_C_ThrowEquipment, CallFunc_Multiply_VectorVector_ReturnValue_2) == 0x000440, "Member 'GA_ChargedThrow_C_ThrowEquipment::CallFunc_Multiply_VectorVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GA_ChargedThrow_C_ThrowEquipment, CallFunc_Multiply_VectorVector_ReturnValue_3) == 0x000458, "Member 'GA_ChargedThrow_C_ThrowEquipment::CallFunc_Multiply_VectorVector_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(GA_ChargedThrow_C_ThrowEquipment, CallFunc_BreakVector_X_1) == 0x000470, "Member 'GA_ChargedThrow_C_ThrowEquipment::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(GA_ChargedThrow_C_ThrowEquipment, CallFunc_BreakVector_Y_1) == 0x000478, "Member 'GA_ChargedThrow_C_ThrowEquipment::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(GA_ChargedThrow_C_ThrowEquipment, CallFunc_BreakVector_Z_1) == 0x000480, "Member 'GA_ChargedThrow_C_ThrowEquipment::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(GA_ChargedThrow_C_ThrowEquipment, CallFunc_MakeVector_ReturnValue_1) == 0x000488, "Member 'GA_ChargedThrow_C_ThrowEquipment::CallFunc_MakeVector_ReturnValue_1' has a wrong offset!");

// Function GA_ChargedThrow.GA_ChargedThrow_C.GetEquippedItemInstance
// 0x0040 (0x0040 - 0x0000)
struct GA_ChargedThrow_C_GetEquippedItemInstance final
{
public:
	class UItemInstance*                          AsItem_Instance;                                   // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwningActorFromActorInfo_ReturnValue;  // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UEquipmentManagerComponent*             CallFunc_GetComponentByClass_ReturnValue;          // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetInstanceFromSlot_IsInstanceValid;      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UEquipmentInstance*                     CallFunc_GetInstanceFromSlot_ReturnValue;          // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_GetInstigator_ReturnValue;                // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UItemInstance*                          K2Node_DynamicCast_AsItem_Instance;                // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_ChargedThrow_C_GetEquippedItemInstance) == 0x000008, "Wrong alignment on GA_ChargedThrow_C_GetEquippedItemInstance");
static_assert(sizeof(GA_ChargedThrow_C_GetEquippedItemInstance) == 0x000040, "Wrong size on GA_ChargedThrow_C_GetEquippedItemInstance");
static_assert(offsetof(GA_ChargedThrow_C_GetEquippedItemInstance, AsItem_Instance) == 0x000000, "Member 'GA_ChargedThrow_C_GetEquippedItemInstance::AsItem_Instance' has a wrong offset!");
static_assert(offsetof(GA_ChargedThrow_C_GetEquippedItemInstance, CallFunc_GetOwningActorFromActorInfo_ReturnValue) == 0x000008, "Member 'GA_ChargedThrow_C_GetEquippedItemInstance::CallFunc_GetOwningActorFromActorInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_ChargedThrow_C_GetEquippedItemInstance, CallFunc_GetComponentByClass_ReturnValue) == 0x000010, "Member 'GA_ChargedThrow_C_GetEquippedItemInstance::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_ChargedThrow_C_GetEquippedItemInstance, CallFunc_GetInstanceFromSlot_IsInstanceValid) == 0x000018, "Member 'GA_ChargedThrow_C_GetEquippedItemInstance::CallFunc_GetInstanceFromSlot_IsInstanceValid' has a wrong offset!");
static_assert(offsetof(GA_ChargedThrow_C_GetEquippedItemInstance, CallFunc_GetInstanceFromSlot_ReturnValue) == 0x000020, "Member 'GA_ChargedThrow_C_GetEquippedItemInstance::CallFunc_GetInstanceFromSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_ChargedThrow_C_GetEquippedItemInstance, CallFunc_GetInstigator_ReturnValue) == 0x000028, "Member 'GA_ChargedThrow_C_GetEquippedItemInstance::CallFunc_GetInstigator_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_ChargedThrow_C_GetEquippedItemInstance, K2Node_DynamicCast_AsItem_Instance) == 0x000030, "Member 'GA_ChargedThrow_C_GetEquippedItemInstance::K2Node_DynamicCast_AsItem_Instance' has a wrong offset!");
static_assert(offsetof(GA_ChargedThrow_C_GetEquippedItemInstance, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'GA_ChargedThrow_C_GetEquippedItemInstance::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function GA_ChargedThrow.GA_ChargedThrow_C.K2_CanActivateAbility
// 0x0098 (0x0098 - 0x0000)
struct GA_ChargedThrow_C_K2_CanActivateAbility final
{
public:
	struct FGameplayAbilityActorInfo              ActorInfo;                                         // 0x0000(0x0048)(BlueprintVisible, BlueprintReadOnly, Parm, ContainsInstancedReference)
	struct FGameplayAbilitySpecHandle             Handle;                                            // 0x0048(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagContainer                  RelevantTags;                                      // 0x0050(0x0020)(Parm, OutParm)
	bool                                          ReturnValue;                                       // 0x0070(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_71[0x7];                                       // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UItemInstance*                          CallFunc_GetEquippedItemInstance_AsItem_Instance;  // 0x0078(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_IsInstantiated_ReturnValue;            // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_81[0x7];                                       // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	const class UItemAction_Droppable*            CallFunc_FindActionByType_ReturnValue;             // 0x0088(0x0008)(ConstParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_ChargedThrow_C_K2_CanActivateAbility) == 0x000008, "Wrong alignment on GA_ChargedThrow_C_K2_CanActivateAbility");
static_assert(sizeof(GA_ChargedThrow_C_K2_CanActivateAbility) == 0x000098, "Wrong size on GA_ChargedThrow_C_K2_CanActivateAbility");
static_assert(offsetof(GA_ChargedThrow_C_K2_CanActivateAbility, ActorInfo) == 0x000000, "Member 'GA_ChargedThrow_C_K2_CanActivateAbility::ActorInfo' has a wrong offset!");
static_assert(offsetof(GA_ChargedThrow_C_K2_CanActivateAbility, Handle) == 0x000048, "Member 'GA_ChargedThrow_C_K2_CanActivateAbility::Handle' has a wrong offset!");
static_assert(offsetof(GA_ChargedThrow_C_K2_CanActivateAbility, RelevantTags) == 0x000050, "Member 'GA_ChargedThrow_C_K2_CanActivateAbility::RelevantTags' has a wrong offset!");
static_assert(offsetof(GA_ChargedThrow_C_K2_CanActivateAbility, ReturnValue) == 0x000070, "Member 'GA_ChargedThrow_C_K2_CanActivateAbility::ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_ChargedThrow_C_K2_CanActivateAbility, CallFunc_GetEquippedItemInstance_AsItem_Instance) == 0x000078, "Member 'GA_ChargedThrow_C_K2_CanActivateAbility::CallFunc_GetEquippedItemInstance_AsItem_Instance' has a wrong offset!");
static_assert(offsetof(GA_ChargedThrow_C_K2_CanActivateAbility, CallFunc_K2_IsInstantiated_ReturnValue) == 0x000080, "Member 'GA_ChargedThrow_C_K2_CanActivateAbility::CallFunc_K2_IsInstantiated_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_ChargedThrow_C_K2_CanActivateAbility, CallFunc_FindActionByType_ReturnValue) == 0x000088, "Member 'GA_ChargedThrow_C_K2_CanActivateAbility::CallFunc_FindActionByType_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_ChargedThrow_C_K2_CanActivateAbility, CallFunc_IsValid_ReturnValue) == 0x000090, "Member 'GA_ChargedThrow_C_K2_CanActivateAbility::CallFunc_IsValid_ReturnValue' has a wrong offset!");

}

