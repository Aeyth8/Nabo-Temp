#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GA_Base_Heal

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "GA_Equipment_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass GA_Base_Heal.GA_Base_Heal_C
// 0x0020 (0x0600 - 0x05E0)
class UGA_Base_Heal_C : public UGA_Equipment_C
{
public:
	uint8                                         Pad_5D1[0x7];                                      // 0x05D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPointerToUberGraphFrame               UberGraphFrame_GA_Base_Heal_C;                     // 0x05D8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	double                                        MinSpeed;                                          // 0x05E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAbilityTask_WaitInputRelease*          Async_Task;                                        // 0x05E8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           HealStartCue;                                      // 0x05F0(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)

public:
	void ApplyBuff();
	void ExecuteUbergraph_GA_Base_Heal(int32 EntryPoint);
	void GetEffectCauser(class AActor** Actor);
	void GetSpawnedActor(class AActor** Actor);
	void K2_ActivateAbility();
	void K2_OnEndAbility(bool bWasCancelled);
	void OnFinish_86E05DF34657309C51B499BF29742411();

	bool CanApplyHeal(class UAbilitySystemComponent* Actor_ACS) const;
	void CheckTagStackExists(const struct FGameplayTag& Tag, bool* DoesExist) const;
	void DisplayFullHealthMessage_Auth(class ABP_ResidentCharacter_C* BP_ResidentCharacter) const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"GA_Base_Heal_C">();
	}
	static class UGA_Base_Heal_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGA_Base_Heal_C>();
	}
};
static_assert(alignof(UGA_Base_Heal_C) == 0x000010, "Wrong alignment on UGA_Base_Heal_C");
static_assert(sizeof(UGA_Base_Heal_C) == 0x000600, "Wrong size on UGA_Base_Heal_C");
static_assert(offsetof(UGA_Base_Heal_C, UberGraphFrame_GA_Base_Heal_C) == 0x0005D8, "Member 'UGA_Base_Heal_C::UberGraphFrame_GA_Base_Heal_C' has a wrong offset!");
static_assert(offsetof(UGA_Base_Heal_C, MinSpeed) == 0x0005E0, "Member 'UGA_Base_Heal_C::MinSpeed' has a wrong offset!");
static_assert(offsetof(UGA_Base_Heal_C, Async_Task) == 0x0005E8, "Member 'UGA_Base_Heal_C::Async_Task' has a wrong offset!");
static_assert(offsetof(UGA_Base_Heal_C, HealStartCue) == 0x0005F0, "Member 'UGA_Base_Heal_C::HealStartCue' has a wrong offset!");

}

