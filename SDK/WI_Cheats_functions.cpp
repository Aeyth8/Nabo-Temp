#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WI_Cheats

#include "Basic.hpp"

#include "WI_Cheats_classes.hpp"
#include "WI_Cheats_parameters.hpp"


namespace SDK
{

// Function WI_Cheats.WI_Cheats_C.CacheMousePos
// (Public, BlueprintCallable, BlueprintEvent)

void UWI_Cheats_C::CacheMousePos()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WI_Cheats_C", "CacheMousePos");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WI_Cheats.WI_Cheats_C.Construct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UWI_Cheats_C::Construct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WI_Cheats_C", "Construct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WI_Cheats.WI_Cheats_C.DoMove
// (Public, BlueprintCallable, BlueprintEvent)

void UWI_Cheats_C::DoMove()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WI_Cheats_C", "DoMove");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WI_Cheats.WI_Cheats_C.DoResize
// (Public, BlueprintCallable, BlueprintEvent)

void UWI_Cheats_C::DoResize()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WI_Cheats_C", "DoResize");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WI_Cheats.WI_Cheats_C.ExecuteUbergraph_WI_Cheats
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWI_Cheats_C::ExecuteUbergraph_WI_Cheats(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WI_Cheats_C", "ExecuteUbergraph_WI_Cheats");

	Params::WI_Cheats_C_ExecuteUbergraph_WI_Cheats Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WI_Cheats.WI_Cheats_C.HandleChangeTeamClicked
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UWI_CheatInputField_C*            CheatInputField                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UWI_Cheats_C::HandleChangeTeamClicked(class UWI_CheatInputField_C* CheatInputField)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WI_Cheats_C", "HandleChangeTeamClicked");

	Params::WI_Cheats_C_HandleChangeTeamClicked Parms{};

	Parms.CheatInputField = CheatInputField;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WI_Cheats.WI_Cheats_C.OnDestroy
// (BlueprintCallable, BlueprintEvent)

void UWI_Cheats_C::OnDestroy()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WI_Cheats_C", "OnDestroy");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WI_Cheats.WI_Cheats_C.PreConstruct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// bool                                    IsDesignTime                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWI_Cheats_C::PreConstruct(bool IsDesignTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WI_Cheats_C", "PreConstruct");

	Params::WI_Cheats_C_PreConstruct Parms{};

	Parms.IsDesignTime = IsDesignTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WI_Cheats.WI_Cheats_C.SetGameInputMode
// (Public, BlueprintCallable, BlueprintEvent)

void UWI_Cheats_C::SetGameInputMode()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WI_Cheats_C", "SetGameInputMode");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WI_Cheats.WI_Cheats_C.SetPosition
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector2D                        InPosition                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWI_Cheats_C::SetPosition(const struct FVector2D& InPosition)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WI_Cheats_C", "SetPosition");

	Params::WI_Cheats_C_SetPosition Parms{};

	Parms.InPosition = std::move(InPosition);

	UObject::ProcessEvent(Func, &Parms);
}


// Function WI_Cheats.WI_Cheats_C.SetSize
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector2D                        InSize                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWI_Cheats_C::SetSize(const struct FVector2D& InSize)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WI_Cheats_C", "SetSize");

	Params::WI_Cheats_C_SetSize Parms{};

	Parms.InSize = std::move(InSize);

	UObject::ProcessEvent(Func, &Parms);
}


// Function WI_Cheats.WI_Cheats_C.SetUIInputMode
// (Public, BlueprintCallable, BlueprintEvent)

void UWI_Cheats_C::SetUIInputMode()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WI_Cheats_C", "SetUIInputMode");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WI_Cheats.WI_Cheats_C.UpdateYourTeamLabel
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UWI_Cheats_C::UpdateYourTeamLabel()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WI_Cheats_C", "UpdateYourTeamLabel");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WI_Cheats.WI_Cheats_C.ClampPossiblePosition
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// struct FVector2D                        Input                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector2D                        Output                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWI_Cheats_C::ClampPossiblePosition(const struct FVector2D& Input, struct FVector2D* Output) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WI_Cheats_C", "ClampPossiblePosition");

	Params::WI_Cheats_C_ClampPossiblePosition Parms{};

	Parms.Input = std::move(Input);

	UObject::ProcessEvent(Func, &Parms);

	if (Output != nullptr)
		*Output = std::move(Parms.Output);
}


// Function WI_Cheats.WI_Cheats_C.ClampPossibleSize
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// struct FVector2D                        Input                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector2D                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

struct FVector2D UWI_Cheats_C::ClampPossibleSize(const struct FVector2D& Input) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WI_Cheats_C", "ClampPossibleSize");

	Params::WI_Cheats_C_ClampPossibleSize Parms{};

	Parms.Input = std::move(Input);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function WI_Cheats.WI_Cheats_C.GetMouseDelta
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// struct FVector2D                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

struct FVector2D UWI_Cheats_C::GetMouseDelta() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WI_Cheats_C", "GetMouseDelta");

	Params::WI_Cheats_C_GetMouseDelta Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function WI_Cheats.WI_Cheats_C.GetMousePos
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// struct FVector2D                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

struct FVector2D UWI_Cheats_C::GetMousePos() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WI_Cheats_C", "GetMousePos");

	Params::WI_Cheats_C_GetMousePos Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function WI_Cheats.WI_Cheats_C.GetPosition
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// struct FVector2D                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

struct FVector2D UWI_Cheats_C::GetPosition() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WI_Cheats_C", "GetPosition");

	Params::WI_Cheats_C_GetPosition Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function WI_Cheats.WI_Cheats_C.GetSize
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// struct FVector2D                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

struct FVector2D UWI_Cheats_C::GetSize() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WI_Cheats_C", "GetSize");

	Params::WI_Cheats_C_GetSize Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}

}

