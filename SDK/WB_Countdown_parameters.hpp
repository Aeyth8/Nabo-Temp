#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WB_Countdown

#include "Basic.hpp"


namespace SDK::Params
{

// Function WB_Countdown.WB_Countdown_C.ExecuteUbergraph_WB_Countdown
// 0x0020 (0x0020 - 0x0000)
struct WB_Countdown_C_ExecuteUbergraph_WB_Countdown final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_CountdownTime;                  // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0010(0x0010)()
};
static_assert(alignof(WB_Countdown_C_ExecuteUbergraph_WB_Countdown) == 0x000008, "Wrong alignment on WB_Countdown_C_ExecuteUbergraph_WB_Countdown");
static_assert(sizeof(WB_Countdown_C_ExecuteUbergraph_WB_Countdown) == 0x000020, "Wrong size on WB_Countdown_C_ExecuteUbergraph_WB_Countdown");
static_assert(offsetof(WB_Countdown_C_ExecuteUbergraph_WB_Countdown, EntryPoint) == 0x000000, "Member 'WB_Countdown_C_ExecuteUbergraph_WB_Countdown::EntryPoint' has a wrong offset!");
static_assert(offsetof(WB_Countdown_C_ExecuteUbergraph_WB_Countdown, CallFunc_Greater_IntInt_ReturnValue) == 0x000004, "Member 'WB_Countdown_C_ExecuteUbergraph_WB_Countdown::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Countdown_C_ExecuteUbergraph_WB_Countdown, CallFunc_Subtract_IntInt_ReturnValue) == 0x000008, "Member 'WB_Countdown_C_ExecuteUbergraph_WB_Countdown::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Countdown_C_ExecuteUbergraph_WB_Countdown, K2Node_CustomEvent_CountdownTime) == 0x00000C, "Member 'WB_Countdown_C_ExecuteUbergraph_WB_Countdown::K2Node_CustomEvent_CountdownTime' has a wrong offset!");
static_assert(offsetof(WB_Countdown_C_ExecuteUbergraph_WB_Countdown, CallFunc_Conv_IntToText_ReturnValue) == 0x000010, "Member 'WB_Countdown_C_ExecuteUbergraph_WB_Countdown::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");

// Function WB_Countdown.WB_Countdown_C.Start Countdown
// 0x0004 (0x0004 - 0x0000)
struct WB_Countdown_C_Start_Countdown final
{
public:
	int32                                         CountdownTime;                                     // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_Countdown_C_Start_Countdown) == 0x000004, "Wrong alignment on WB_Countdown_C_Start_Countdown");
static_assert(sizeof(WB_Countdown_C_Start_Countdown) == 0x000004, "Wrong size on WB_Countdown_C_Start_Countdown");
static_assert(offsetof(WB_Countdown_C_Start_Countdown, CountdownTime) == 0x000000, "Member 'WB_Countdown_C_Start_Countdown::CountdownTime' has a wrong offset!");

}

