#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WI_XPProgressionBar

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function WI_XPProgressionBar.WI_XPProgressionBar_C.ExecuteUbergraph_WI_XPProgressionBar
// 0x0008 (0x0008 - 0x0000)
struct WI_XPProgressionBar_C_ExecuteUbergraph_WI_XPProgressionBar final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WI_XPProgressionBar_C_ExecuteUbergraph_WI_XPProgressionBar) == 0x000004, "Wrong alignment on WI_XPProgressionBar_C_ExecuteUbergraph_WI_XPProgressionBar");
static_assert(sizeof(WI_XPProgressionBar_C_ExecuteUbergraph_WI_XPProgressionBar) == 0x000008, "Wrong size on WI_XPProgressionBar_C_ExecuteUbergraph_WI_XPProgressionBar");
static_assert(offsetof(WI_XPProgressionBar_C_ExecuteUbergraph_WI_XPProgressionBar, EntryPoint) == 0x000000, "Member 'WI_XPProgressionBar_C_ExecuteUbergraph_WI_XPProgressionBar::EntryPoint' has a wrong offset!");
static_assert(offsetof(WI_XPProgressionBar_C_ExecuteUbergraph_WI_XPProgressionBar, K2Node_Event_IsDesignTime) == 0x000004, "Member 'WI_XPProgressionBar_C_ExecuteUbergraph_WI_XPProgressionBar::K2Node_Event_IsDesignTime' has a wrong offset!");

// Function WI_XPProgressionBar.WI_XPProgressionBar_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct WI_XPProgressionBar_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WI_XPProgressionBar_C_PreConstruct) == 0x000001, "Wrong alignment on WI_XPProgressionBar_C_PreConstruct");
static_assert(sizeof(WI_XPProgressionBar_C_PreConstruct) == 0x000001, "Wrong size on WI_XPProgressionBar_C_PreConstruct");
static_assert(offsetof(WI_XPProgressionBar_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'WI_XPProgressionBar_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function WI_XPProgressionBar.WI_XPProgressionBar_C.SetBarThickness
// 0x0020 (0x0020 - 0x0000)
struct WI_XPProgressionBar_C_SetBarThickness final
{
public:
	double                                        Thickness_0;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0008(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FDeprecateSlateVector2D                K2Node_SetFieldsInStruct_ImageSize_ImplicitCast;   // 0x0018(0x0008)(NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WI_XPProgressionBar_C_SetBarThickness) == 0x000008, "Wrong alignment on WI_XPProgressionBar_C_SetBarThickness");
static_assert(sizeof(WI_XPProgressionBar_C_SetBarThickness) == 0x000020, "Wrong size on WI_XPProgressionBar_C_SetBarThickness");
static_assert(offsetof(WI_XPProgressionBar_C_SetBarThickness, Thickness_0) == 0x000000, "Member 'WI_XPProgressionBar_C_SetBarThickness::Thickness_0' has a wrong offset!");
static_assert(offsetof(WI_XPProgressionBar_C_SetBarThickness, CallFunc_MakeVector2D_ReturnValue) == 0x000008, "Member 'WI_XPProgressionBar_C_SetBarThickness::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(WI_XPProgressionBar_C_SetBarThickness, K2Node_SetFieldsInStruct_ImageSize_ImplicitCast) == 0x000018, "Member 'WI_XPProgressionBar_C_SetBarThickness::K2Node_SetFieldsInStruct_ImageSize_ImplicitCast' has a wrong offset!");

// Function WI_XPProgressionBar.WI_XPProgressionBar_C.SetBorderPadding
// 0x0014 (0x0014 - 0x0000)
struct WI_XPProgressionBar_C_SetBorderPadding final
{
public:
	float                                         Padding_0;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FMargin                                K2Node_MakeStruct_Margin;                          // 0x0004(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WI_XPProgressionBar_C_SetBorderPadding) == 0x000004, "Wrong alignment on WI_XPProgressionBar_C_SetBorderPadding");
static_assert(sizeof(WI_XPProgressionBar_C_SetBorderPadding) == 0x000014, "Wrong size on WI_XPProgressionBar_C_SetBorderPadding");
static_assert(offsetof(WI_XPProgressionBar_C_SetBorderPadding, Padding_0) == 0x000000, "Member 'WI_XPProgressionBar_C_SetBorderPadding::Padding_0' has a wrong offset!");
static_assert(offsetof(WI_XPProgressionBar_C_SetBorderPadding, K2Node_MakeStruct_Margin) == 0x000004, "Member 'WI_XPProgressionBar_C_SetBorderPadding::K2Node_MakeStruct_Margin' has a wrong offset!");

// Function WI_XPProgressionBar.WI_XPProgressionBar_C.SetBorderThickness
// 0x00E0 (0x00E0 - 0x0000)
struct WI_XPProgressionBar_C_SetBorderThickness final
{
public:
	float                                         Widthhickness;                                     // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0xC];                                        // 0x0004(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateBrush                            K2Node_MakeStruct_SlateBrush;                      // 0x0010(0x00D0)()
};
static_assert(alignof(WI_XPProgressionBar_C_SetBorderThickness) == 0x000010, "Wrong alignment on WI_XPProgressionBar_C_SetBorderThickness");
static_assert(sizeof(WI_XPProgressionBar_C_SetBorderThickness) == 0x0000E0, "Wrong size on WI_XPProgressionBar_C_SetBorderThickness");
static_assert(offsetof(WI_XPProgressionBar_C_SetBorderThickness, Widthhickness) == 0x000000, "Member 'WI_XPProgressionBar_C_SetBorderThickness::Widthhickness' has a wrong offset!");
static_assert(offsetof(WI_XPProgressionBar_C_SetBorderThickness, K2Node_MakeStruct_SlateBrush) == 0x000010, "Member 'WI_XPProgressionBar_C_SetBorderThickness::K2Node_MakeStruct_SlateBrush' has a wrong offset!");

// Function WI_XPProgressionBar.WI_XPProgressionBar_C.SetProgress
// 0x0018 (0x0018 - 0x0000)
struct WI_XPProgressionBar_C_SetProgress final
{
public:
	double                                        Progress_0;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0008(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WI_XPProgressionBar_C_SetProgress) == 0x000008, "Wrong alignment on WI_XPProgressionBar_C_SetProgress");
static_assert(sizeof(WI_XPProgressionBar_C_SetProgress) == 0x000018, "Wrong size on WI_XPProgressionBar_C_SetProgress");
static_assert(offsetof(WI_XPProgressionBar_C_SetProgress, Progress_0) == 0x000000, "Member 'WI_XPProgressionBar_C_SetProgress::Progress_0' has a wrong offset!");
static_assert(offsetof(WI_XPProgressionBar_C_SetProgress, CallFunc_MakeVector2D_ReturnValue) == 0x000008, "Member 'WI_XPProgressionBar_C_SetProgress::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");

// Function WI_XPProgressionBar.WI_XPProgressionBar_C.SetThickness
// 0x0020 (0x0020 - 0x0000)
struct WI_XPProgressionBar_C_SetThickness final
{
public:
	double                                        Thickness_0;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetBorderThickness_Widthhickness_ImplicitCast; // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetBorderPadding_Padding_ImplicitCast;    // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WI_XPProgressionBar_C_SetThickness) == 0x000008, "Wrong alignment on WI_XPProgressionBar_C_SetThickness");
static_assert(sizeof(WI_XPProgressionBar_C_SetThickness) == 0x000020, "Wrong size on WI_XPProgressionBar_C_SetThickness");
static_assert(offsetof(WI_XPProgressionBar_C_SetThickness, Thickness_0) == 0x000000, "Member 'WI_XPProgressionBar_C_SetThickness::Thickness_0' has a wrong offset!");
static_assert(offsetof(WI_XPProgressionBar_C_SetThickness, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000008, "Member 'WI_XPProgressionBar_C_SetThickness::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WI_XPProgressionBar_C_SetThickness, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000010, "Member 'WI_XPProgressionBar_C_SetThickness::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WI_XPProgressionBar_C_SetThickness, CallFunc_SetBorderThickness_Widthhickness_ImplicitCast) == 0x000018, "Member 'WI_XPProgressionBar_C_SetThickness::CallFunc_SetBorderThickness_Widthhickness_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WI_XPProgressionBar_C_SetThickness, CallFunc_SetBorderPadding_Padding_ImplicitCast) == 0x00001C, "Member 'WI_XPProgressionBar_C_SetThickness::CallFunc_SetBorderPadding_Padding_ImplicitCast' has a wrong offset!");

}

