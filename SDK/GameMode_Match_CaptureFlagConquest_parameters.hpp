#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GameMode_Match_CaptureFlagConquest

#include "Basic.hpp"


namespace SDK::Params
{

// Function GameMode_Match_CaptureFlagConquest.GameMode_Match_CaptureFlagConquest_C.CheatKillTeam
// 0x0001 (0x0001 - 0x0000)
struct GameMode_Match_CaptureFlagConquest_C_CheatKillTeam final
{
public:
	uint8                                         DeedTeamID;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GameMode_Match_CaptureFlagConquest_C_CheatKillTeam) == 0x000001, "Wrong alignment on GameMode_Match_CaptureFlagConquest_C_CheatKillTeam");
static_assert(sizeof(GameMode_Match_CaptureFlagConquest_C_CheatKillTeam) == 0x000001, "Wrong size on GameMode_Match_CaptureFlagConquest_C_CheatKillTeam");
static_assert(offsetof(GameMode_Match_CaptureFlagConquest_C_CheatKillTeam, DeedTeamID) == 0x000000, "Member 'GameMode_Match_CaptureFlagConquest_C_CheatKillTeam::DeedTeamID' has a wrong offset!");

// Function GameMode_Match_CaptureFlagConquest.GameMode_Match_CaptureFlagConquest_C.ExecuteUbergraph_GameMode_Match_CaptureFlagConquest
// 0x0020 (0x0020 - 0x0000)
struct GameMode_Match_CaptureFlagConquest_C_ExecuteUbergraph_GameMode_Match_CaptureFlagConquest final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         K2Node_CustomEvent_DeedTeamID;                     // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AEndCondition*                          CallFunc_GetEndCondition_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ACaptureTheFlagEndCondition_C*          K2Node_DynamicCast_AsCapture_the_Flag_End_Condition; // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GameMode_Match_CaptureFlagConquest_C_ExecuteUbergraph_GameMode_Match_CaptureFlagConquest) == 0x000008, "Wrong alignment on GameMode_Match_CaptureFlagConquest_C_ExecuteUbergraph_GameMode_Match_CaptureFlagConquest");
static_assert(sizeof(GameMode_Match_CaptureFlagConquest_C_ExecuteUbergraph_GameMode_Match_CaptureFlagConquest) == 0x000020, "Wrong size on GameMode_Match_CaptureFlagConquest_C_ExecuteUbergraph_GameMode_Match_CaptureFlagConquest");
static_assert(offsetof(GameMode_Match_CaptureFlagConquest_C_ExecuteUbergraph_GameMode_Match_CaptureFlagConquest, EntryPoint) == 0x000000, "Member 'GameMode_Match_CaptureFlagConquest_C_ExecuteUbergraph_GameMode_Match_CaptureFlagConquest::EntryPoint' has a wrong offset!");
static_assert(offsetof(GameMode_Match_CaptureFlagConquest_C_ExecuteUbergraph_GameMode_Match_CaptureFlagConquest, K2Node_CustomEvent_DeedTeamID) == 0x000004, "Member 'GameMode_Match_CaptureFlagConquest_C_ExecuteUbergraph_GameMode_Match_CaptureFlagConquest::K2Node_CustomEvent_DeedTeamID' has a wrong offset!");
static_assert(offsetof(GameMode_Match_CaptureFlagConquest_C_ExecuteUbergraph_GameMode_Match_CaptureFlagConquest, CallFunc_GetEndCondition_ReturnValue) == 0x000008, "Member 'GameMode_Match_CaptureFlagConquest_C_ExecuteUbergraph_GameMode_Match_CaptureFlagConquest::CallFunc_GetEndCondition_ReturnValue' has a wrong offset!");
static_assert(offsetof(GameMode_Match_CaptureFlagConquest_C_ExecuteUbergraph_GameMode_Match_CaptureFlagConquest, K2Node_DynamicCast_AsCapture_the_Flag_End_Condition) == 0x000010, "Member 'GameMode_Match_CaptureFlagConquest_C_ExecuteUbergraph_GameMode_Match_CaptureFlagConquest::K2Node_DynamicCast_AsCapture_the_Flag_End_Condition' has a wrong offset!");
static_assert(offsetof(GameMode_Match_CaptureFlagConquest_C_ExecuteUbergraph_GameMode_Match_CaptureFlagConquest, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'GameMode_Match_CaptureFlagConquest_C_ExecuteUbergraph_GameMode_Match_CaptureFlagConquest::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function GameMode_Match_CaptureFlagConquest.GameMode_Match_CaptureFlagConquest_C.HandInTeamDeed
// 0x0020 (0x0020 - 0x0000)
struct GameMode_Match_CaptureFlagConquest_C_HandInTeamDeed final
{
public:
	uint8                                         DeedTeamID;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AEndCondition*                          CallFunc_GetEndCondition_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ACaptureTheFlagEndCondition_C*          K2Node_DynamicCast_AsCapture_the_Flag_End_Condition; // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GameMode_Match_CaptureFlagConquest_C_HandInTeamDeed) == 0x000008, "Wrong alignment on GameMode_Match_CaptureFlagConquest_C_HandInTeamDeed");
static_assert(sizeof(GameMode_Match_CaptureFlagConquest_C_HandInTeamDeed) == 0x000020, "Wrong size on GameMode_Match_CaptureFlagConquest_C_HandInTeamDeed");
static_assert(offsetof(GameMode_Match_CaptureFlagConquest_C_HandInTeamDeed, DeedTeamID) == 0x000000, "Member 'GameMode_Match_CaptureFlagConquest_C_HandInTeamDeed::DeedTeamID' has a wrong offset!");
static_assert(offsetof(GameMode_Match_CaptureFlagConquest_C_HandInTeamDeed, CallFunc_GetEndCondition_ReturnValue) == 0x000008, "Member 'GameMode_Match_CaptureFlagConquest_C_HandInTeamDeed::CallFunc_GetEndCondition_ReturnValue' has a wrong offset!");
static_assert(offsetof(GameMode_Match_CaptureFlagConquest_C_HandInTeamDeed, K2Node_DynamicCast_AsCapture_the_Flag_End_Condition) == 0x000010, "Member 'GameMode_Match_CaptureFlagConquest_C_HandInTeamDeed::K2Node_DynamicCast_AsCapture_the_Flag_End_Condition' has a wrong offset!");
static_assert(offsetof(GameMode_Match_CaptureFlagConquest_C_HandInTeamDeed, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'GameMode_Match_CaptureFlagConquest_C_HandInTeamDeed::K2Node_DynamicCast_bSuccess' has a wrong offset!");

}

