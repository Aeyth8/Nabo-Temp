#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GA_ThrowProjectile

#include "Basic.hpp"

#include "GA_Equipment_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass GA_ThrowProjectile.GA_ThrowProjectile_C
// 0x0000 (0x05E0 - 0x05E0)
#pragma pack(push, 0x1)
class alignas(0x10) UGA_ThrowProjectile_C : public UGA_Equipment_C
{
public:
	void CalculateChargeBasedOnTimeHeld(double TimeHeld, double* Charge);
	double GetSpeed(double TimeHeld);
	void InitializeProjectileValues(class UObject* Object, double ChargePercent, double ProjectileSpeed, float InLifespan, double GravityScale, double MinDamage, double MaxDamage, double DamageMultiplierToStructures, const struct FTransform& InTransform, bool IsCosmetic, class ABP_ProjectileBase_C** ProjectileWithValues);
	void SpawnProjectile(const struct FTransform& SpawnTransform, double ChargePercent, class APawn* Owner, const struct FVector& LocalVelocity, double Speed, double Lifetime, double MinDamage, double MaxDamage, double GravityScale, double StructureDamageMultiplier, class UClass* ProjectileClass);

	double GetMaxSpeed() const;
	void GetMinSpeed(double* MinSpeed) const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"GA_ThrowProjectile_C">();
	}
	static class UGA_ThrowProjectile_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGA_ThrowProjectile_C>();
	}
};
#pragma pack(pop)
static_assert(alignof(UGA_ThrowProjectile_C) == 0x000010, "Wrong alignment on UGA_ThrowProjectile_C");
static_assert(sizeof(UGA_ThrowProjectile_C) == 0x0005E0, "Wrong size on UGA_ThrowProjectile_C");

}

