#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_TeamLeftMatchEndCondition

#include "Basic.hpp"

#include "JP_structs.hpp"


namespace SDK::Params
{

// Function BP_TeamLeftMatchEndCondition.BP_TeamLeftMatchEndCondition_C.CreateObjective
// 0x0020 (0x0020 - 0x0000)
struct BP_TeamLeftMatchEndCondition_C_CreateObjective final
{
public:
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_DestructionObjective_C*             CallFunc_SpawnObject_ReturnValue;                  // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<class UObjectiveBase*>                 CallFunc_CreateObjective_ReturnValue;              // 0x0010(0x0010)(ReferenceParm)
};
static_assert(alignof(BP_TeamLeftMatchEndCondition_C_CreateObjective) == 0x000008, "Wrong alignment on BP_TeamLeftMatchEndCondition_C_CreateObjective");
static_assert(sizeof(BP_TeamLeftMatchEndCondition_C_CreateObjective) == 0x000020, "Wrong size on BP_TeamLeftMatchEndCondition_C_CreateObjective");
static_assert(offsetof(BP_TeamLeftMatchEndCondition_C_CreateObjective, CallFunc_HasAuthority_ReturnValue) == 0x000000, "Member 'BP_TeamLeftMatchEndCondition_C_CreateObjective::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TeamLeftMatchEndCondition_C_CreateObjective, CallFunc_SpawnObject_ReturnValue) == 0x000008, "Member 'BP_TeamLeftMatchEndCondition_C_CreateObjective::CallFunc_SpawnObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TeamLeftMatchEndCondition_C_CreateObjective, CallFunc_CreateObjective_ReturnValue) == 0x000010, "Member 'BP_TeamLeftMatchEndCondition_C_CreateObjective::CallFunc_CreateObjective_ReturnValue' has a wrong offset!");

// Function BP_TeamLeftMatchEndCondition.BP_TeamLeftMatchEndCondition_C.Does Team Have Valid Player
// 0x0040 (0x0040 - 0x0000)
struct BP_TeamLeftMatchEndCondition_C_Does_Team_Have_Valid_Player final
{
public:
	uint8                                         TeamId;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Return;                                            // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         ID;                                                // 0x0002(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3[0x1];                                        // 0x0003(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class APlayerStateJP*>                 CallFunc_GetPlayersOfTeam_ReturnValue;             // 0x0008(0x0010)(ReferenceParm)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerStateJP*                         CallFunc_Array_Get_Item;                           // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_GetPawn_ReturnValue;                      // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_35[0x3];                                       // 0x0035(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_TeamLeftMatchEndCondition_C_Does_Team_Have_Valid_Player) == 0x000008, "Wrong alignment on BP_TeamLeftMatchEndCondition_C_Does_Team_Have_Valid_Player");
static_assert(sizeof(BP_TeamLeftMatchEndCondition_C_Does_Team_Have_Valid_Player) == 0x000040, "Wrong size on BP_TeamLeftMatchEndCondition_C_Does_Team_Have_Valid_Player");
static_assert(offsetof(BP_TeamLeftMatchEndCondition_C_Does_Team_Have_Valid_Player, TeamId) == 0x000000, "Member 'BP_TeamLeftMatchEndCondition_C_Does_Team_Have_Valid_Player::TeamId' has a wrong offset!");
static_assert(offsetof(BP_TeamLeftMatchEndCondition_C_Does_Team_Have_Valid_Player, Return) == 0x000001, "Member 'BP_TeamLeftMatchEndCondition_C_Does_Team_Have_Valid_Player::Return' has a wrong offset!");
static_assert(offsetof(BP_TeamLeftMatchEndCondition_C_Does_Team_Have_Valid_Player, ID) == 0x000002, "Member 'BP_TeamLeftMatchEndCondition_C_Does_Team_Have_Valid_Player::ID' has a wrong offset!");
static_assert(offsetof(BP_TeamLeftMatchEndCondition_C_Does_Team_Have_Valid_Player, Temp_int_Array_Index_Variable) == 0x000004, "Member 'BP_TeamLeftMatchEndCondition_C_Does_Team_Have_Valid_Player::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_TeamLeftMatchEndCondition_C_Does_Team_Have_Valid_Player, CallFunc_GetPlayersOfTeam_ReturnValue) == 0x000008, "Member 'BP_TeamLeftMatchEndCondition_C_Does_Team_Have_Valid_Player::CallFunc_GetPlayersOfTeam_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TeamLeftMatchEndCondition_C_Does_Team_Have_Valid_Player, Temp_int_Loop_Counter_Variable) == 0x000018, "Member 'BP_TeamLeftMatchEndCondition_C_Does_Team_Have_Valid_Player::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_TeamLeftMatchEndCondition_C_Does_Team_Have_Valid_Player, CallFunc_Array_Get_Item) == 0x000020, "Member 'BP_TeamLeftMatchEndCondition_C_Does_Team_Have_Valid_Player::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_TeamLeftMatchEndCondition_C_Does_Team_Have_Valid_Player, CallFunc_GetPawn_ReturnValue) == 0x000028, "Member 'BP_TeamLeftMatchEndCondition_C_Does_Team_Have_Valid_Player::CallFunc_GetPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TeamLeftMatchEndCondition_C_Does_Team_Have_Valid_Player, CallFunc_Add_IntInt_ReturnValue) == 0x000030, "Member 'BP_TeamLeftMatchEndCondition_C_Does_Team_Have_Valid_Player::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TeamLeftMatchEndCondition_C_Does_Team_Have_Valid_Player, CallFunc_IsValid_ReturnValue) == 0x000034, "Member 'BP_TeamLeftMatchEndCondition_C_Does_Team_Have_Valid_Player::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TeamLeftMatchEndCondition_C_Does_Team_Have_Valid_Player, CallFunc_Array_Length_ReturnValue) == 0x000038, "Member 'BP_TeamLeftMatchEndCondition_C_Does_Team_Have_Valid_Player::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TeamLeftMatchEndCondition_C_Does_Team_Have_Valid_Player, CallFunc_Less_IntInt_ReturnValue) == 0x00003C, "Member 'BP_TeamLeftMatchEndCondition_C_Does_Team_Have_Valid_Player::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function BP_TeamLeftMatchEndCondition.BP_TeamLeftMatchEndCondition_C.ExecuteUbergraph_BP_TeamLeftMatchEndCondition
// 0x0178 (0x0178 - 0x0000)
struct BP_TeamLeftMatchEndCondition_C_ExecuteUbergraph_BP_TeamLeftMatchEndCondition final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable;                 // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12[0x6];                                       // 0x0012(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameModeJP*                            CallFunc_GetGameModeJP_ReturnValue;                // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APlayerState*                           K2Node_CustomEvent_PlayerState;                    // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AController*                            K2Node_CustomEvent_Controller;                     // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AGameModeJP_MatchBP_C*                  K2Node_DynamicCast_AsGame_Mode_JP_Match_BP;        // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetDisplayName_ReturnValue;               // 0x0040(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0050(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Get_ClassLog_Name_name;                   // 0x0060(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Get_ClassLog_Name_name_1;                 // 0x0070(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Get_ClassLog_Name_name_2;                 // 0x0080(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	TArray<struct FTeam>                          CallFunc_GetTeams_ReturnValue;                     // 0x0090(0x0010)(ReferenceParm)
	struct FTeam                                  CallFunc_Array_Get_Item;                           // 0x00A0(0x0038)(NoDestructor)
	TDelegate<void(class APlayerState* PlayerState, class AController* Controller)> K2Node_CreateDelegate_OutputDelegate;              // 0x00D8(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Does_Team_Have_Valid_Player_Return;       // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_Does_Team_Have_Valid_Player_ID;           // 0x00E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_EA[0x2];                                       // 0x00EA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_ByteToString_ReturnValue;            // 0x00F0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_101[0x7];                                      // 0x0101(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0108(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_ByteToString_ReturnValue_1;          // 0x0118(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x0128(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetIsPie_ReturnValue;                     // 0x0138(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_139[0x7];                                      // 0x0139(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_3;              // 0x0140(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetCommandLine_ReturnValue;               // 0x0150(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_ParseParam_ReturnValue;                   // 0x0160(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_161[0x7];                                      // 0x0161(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Get_ClassLog_Name_name_3;                 // 0x0168(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_TeamLeftMatchEndCondition_C_ExecuteUbergraph_BP_TeamLeftMatchEndCondition) == 0x000008, "Wrong alignment on BP_TeamLeftMatchEndCondition_C_ExecuteUbergraph_BP_TeamLeftMatchEndCondition");
static_assert(sizeof(BP_TeamLeftMatchEndCondition_C_ExecuteUbergraph_BP_TeamLeftMatchEndCondition) == 0x000178, "Wrong size on BP_TeamLeftMatchEndCondition_C_ExecuteUbergraph_BP_TeamLeftMatchEndCondition");
static_assert(offsetof(BP_TeamLeftMatchEndCondition_C_ExecuteUbergraph_BP_TeamLeftMatchEndCondition, EntryPoint) == 0x000000, "Member 'BP_TeamLeftMatchEndCondition_C_ExecuteUbergraph_BP_TeamLeftMatchEndCondition::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_TeamLeftMatchEndCondition_C_ExecuteUbergraph_BP_TeamLeftMatchEndCondition, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'BP_TeamLeftMatchEndCondition_C_ExecuteUbergraph_BP_TeamLeftMatchEndCondition::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_TeamLeftMatchEndCondition_C_ExecuteUbergraph_BP_TeamLeftMatchEndCondition, Temp_int_Array_Index_Variable) == 0x000008, "Member 'BP_TeamLeftMatchEndCondition_C_ExecuteUbergraph_BP_TeamLeftMatchEndCondition::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_TeamLeftMatchEndCondition_C_ExecuteUbergraph_BP_TeamLeftMatchEndCondition, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'BP_TeamLeftMatchEndCondition_C_ExecuteUbergraph_BP_TeamLeftMatchEndCondition::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TeamLeftMatchEndCondition_C_ExecuteUbergraph_BP_TeamLeftMatchEndCondition, Temp_bool_IsClosed_Variable) == 0x000010, "Member 'BP_TeamLeftMatchEndCondition_C_ExecuteUbergraph_BP_TeamLeftMatchEndCondition::Temp_bool_IsClosed_Variable' has a wrong offset!");
static_assert(offsetof(BP_TeamLeftMatchEndCondition_C_ExecuteUbergraph_BP_TeamLeftMatchEndCondition, Temp_bool_Has_Been_Initd_Variable) == 0x000011, "Member 'BP_TeamLeftMatchEndCondition_C_ExecuteUbergraph_BP_TeamLeftMatchEndCondition::Temp_bool_Has_Been_Initd_Variable' has a wrong offset!");
static_assert(offsetof(BP_TeamLeftMatchEndCondition_C_ExecuteUbergraph_BP_TeamLeftMatchEndCondition, CallFunc_GetGameModeJP_ReturnValue) == 0x000018, "Member 'BP_TeamLeftMatchEndCondition_C_ExecuteUbergraph_BP_TeamLeftMatchEndCondition::CallFunc_GetGameModeJP_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TeamLeftMatchEndCondition_C_ExecuteUbergraph_BP_TeamLeftMatchEndCondition, K2Node_CustomEvent_PlayerState) == 0x000020, "Member 'BP_TeamLeftMatchEndCondition_C_ExecuteUbergraph_BP_TeamLeftMatchEndCondition::K2Node_CustomEvent_PlayerState' has a wrong offset!");
static_assert(offsetof(BP_TeamLeftMatchEndCondition_C_ExecuteUbergraph_BP_TeamLeftMatchEndCondition, K2Node_CustomEvent_Controller) == 0x000028, "Member 'BP_TeamLeftMatchEndCondition_C_ExecuteUbergraph_BP_TeamLeftMatchEndCondition::K2Node_CustomEvent_Controller' has a wrong offset!");
static_assert(offsetof(BP_TeamLeftMatchEndCondition_C_ExecuteUbergraph_BP_TeamLeftMatchEndCondition, K2Node_DynamicCast_AsGame_Mode_JP_Match_BP) == 0x000030, "Member 'BP_TeamLeftMatchEndCondition_C_ExecuteUbergraph_BP_TeamLeftMatchEndCondition::K2Node_DynamicCast_AsGame_Mode_JP_Match_BP' has a wrong offset!");
static_assert(offsetof(BP_TeamLeftMatchEndCondition_C_ExecuteUbergraph_BP_TeamLeftMatchEndCondition, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'BP_TeamLeftMatchEndCondition_C_ExecuteUbergraph_BP_TeamLeftMatchEndCondition::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_TeamLeftMatchEndCondition_C_ExecuteUbergraph_BP_TeamLeftMatchEndCondition, CallFunc_GetDisplayName_ReturnValue) == 0x000040, "Member 'BP_TeamLeftMatchEndCondition_C_ExecuteUbergraph_BP_TeamLeftMatchEndCondition::CallFunc_GetDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TeamLeftMatchEndCondition_C_ExecuteUbergraph_BP_TeamLeftMatchEndCondition, CallFunc_Concat_StrStr_ReturnValue) == 0x000050, "Member 'BP_TeamLeftMatchEndCondition_C_ExecuteUbergraph_BP_TeamLeftMatchEndCondition::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TeamLeftMatchEndCondition_C_ExecuteUbergraph_BP_TeamLeftMatchEndCondition, CallFunc_Get_ClassLog_Name_name) == 0x000060, "Member 'BP_TeamLeftMatchEndCondition_C_ExecuteUbergraph_BP_TeamLeftMatchEndCondition::CallFunc_Get_ClassLog_Name_name' has a wrong offset!");
static_assert(offsetof(BP_TeamLeftMatchEndCondition_C_ExecuteUbergraph_BP_TeamLeftMatchEndCondition, CallFunc_Get_ClassLog_Name_name_1) == 0x000070, "Member 'BP_TeamLeftMatchEndCondition_C_ExecuteUbergraph_BP_TeamLeftMatchEndCondition::CallFunc_Get_ClassLog_Name_name_1' has a wrong offset!");
static_assert(offsetof(BP_TeamLeftMatchEndCondition_C_ExecuteUbergraph_BP_TeamLeftMatchEndCondition, CallFunc_Get_ClassLog_Name_name_2) == 0x000080, "Member 'BP_TeamLeftMatchEndCondition_C_ExecuteUbergraph_BP_TeamLeftMatchEndCondition::CallFunc_Get_ClassLog_Name_name_2' has a wrong offset!");
static_assert(offsetof(BP_TeamLeftMatchEndCondition_C_ExecuteUbergraph_BP_TeamLeftMatchEndCondition, CallFunc_GetTeams_ReturnValue) == 0x000090, "Member 'BP_TeamLeftMatchEndCondition_C_ExecuteUbergraph_BP_TeamLeftMatchEndCondition::CallFunc_GetTeams_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TeamLeftMatchEndCondition_C_ExecuteUbergraph_BP_TeamLeftMatchEndCondition, CallFunc_Array_Get_Item) == 0x0000A0, "Member 'BP_TeamLeftMatchEndCondition_C_ExecuteUbergraph_BP_TeamLeftMatchEndCondition::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_TeamLeftMatchEndCondition_C_ExecuteUbergraph_BP_TeamLeftMatchEndCondition, K2Node_CreateDelegate_OutputDelegate) == 0x0000D8, "Member 'BP_TeamLeftMatchEndCondition_C_ExecuteUbergraph_BP_TeamLeftMatchEndCondition::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_TeamLeftMatchEndCondition_C_ExecuteUbergraph_BP_TeamLeftMatchEndCondition, CallFunc_Does_Team_Have_Valid_Player_Return) == 0x0000E8, "Member 'BP_TeamLeftMatchEndCondition_C_ExecuteUbergraph_BP_TeamLeftMatchEndCondition::CallFunc_Does_Team_Have_Valid_Player_Return' has a wrong offset!");
static_assert(offsetof(BP_TeamLeftMatchEndCondition_C_ExecuteUbergraph_BP_TeamLeftMatchEndCondition, CallFunc_Does_Team_Have_Valid_Player_ID) == 0x0000E9, "Member 'BP_TeamLeftMatchEndCondition_C_ExecuteUbergraph_BP_TeamLeftMatchEndCondition::CallFunc_Does_Team_Have_Valid_Player_ID' has a wrong offset!");
static_assert(offsetof(BP_TeamLeftMatchEndCondition_C_ExecuteUbergraph_BP_TeamLeftMatchEndCondition, CallFunc_Array_Length_ReturnValue) == 0x0000EC, "Member 'BP_TeamLeftMatchEndCondition_C_ExecuteUbergraph_BP_TeamLeftMatchEndCondition::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TeamLeftMatchEndCondition_C_ExecuteUbergraph_BP_TeamLeftMatchEndCondition, CallFunc_Conv_ByteToString_ReturnValue) == 0x0000F0, "Member 'BP_TeamLeftMatchEndCondition_C_ExecuteUbergraph_BP_TeamLeftMatchEndCondition::CallFunc_Conv_ByteToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TeamLeftMatchEndCondition_C_ExecuteUbergraph_BP_TeamLeftMatchEndCondition, CallFunc_Less_IntInt_ReturnValue) == 0x000100, "Member 'BP_TeamLeftMatchEndCondition_C_ExecuteUbergraph_BP_TeamLeftMatchEndCondition::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TeamLeftMatchEndCondition_C_ExecuteUbergraph_BP_TeamLeftMatchEndCondition, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000108, "Member 'BP_TeamLeftMatchEndCondition_C_ExecuteUbergraph_BP_TeamLeftMatchEndCondition::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_TeamLeftMatchEndCondition_C_ExecuteUbergraph_BP_TeamLeftMatchEndCondition, CallFunc_Conv_ByteToString_ReturnValue_1) == 0x000118, "Member 'BP_TeamLeftMatchEndCondition_C_ExecuteUbergraph_BP_TeamLeftMatchEndCondition::CallFunc_Conv_ByteToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_TeamLeftMatchEndCondition_C_ExecuteUbergraph_BP_TeamLeftMatchEndCondition, CallFunc_Concat_StrStr_ReturnValue_2) == 0x000128, "Member 'BP_TeamLeftMatchEndCondition_C_ExecuteUbergraph_BP_TeamLeftMatchEndCondition::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_TeamLeftMatchEndCondition_C_ExecuteUbergraph_BP_TeamLeftMatchEndCondition, CallFunc_GetIsPie_ReturnValue) == 0x000138, "Member 'BP_TeamLeftMatchEndCondition_C_ExecuteUbergraph_BP_TeamLeftMatchEndCondition::CallFunc_GetIsPie_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TeamLeftMatchEndCondition_C_ExecuteUbergraph_BP_TeamLeftMatchEndCondition, CallFunc_Concat_StrStr_ReturnValue_3) == 0x000140, "Member 'BP_TeamLeftMatchEndCondition_C_ExecuteUbergraph_BP_TeamLeftMatchEndCondition::CallFunc_Concat_StrStr_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_TeamLeftMatchEndCondition_C_ExecuteUbergraph_BP_TeamLeftMatchEndCondition, CallFunc_GetCommandLine_ReturnValue) == 0x000150, "Member 'BP_TeamLeftMatchEndCondition_C_ExecuteUbergraph_BP_TeamLeftMatchEndCondition::CallFunc_GetCommandLine_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TeamLeftMatchEndCondition_C_ExecuteUbergraph_BP_TeamLeftMatchEndCondition, CallFunc_ParseParam_ReturnValue) == 0x000160, "Member 'BP_TeamLeftMatchEndCondition_C_ExecuteUbergraph_BP_TeamLeftMatchEndCondition::CallFunc_ParseParam_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TeamLeftMatchEndCondition_C_ExecuteUbergraph_BP_TeamLeftMatchEndCondition, CallFunc_Get_ClassLog_Name_name_3) == 0x000168, "Member 'BP_TeamLeftMatchEndCondition_C_ExecuteUbergraph_BP_TeamLeftMatchEndCondition::CallFunc_Get_ClassLog_Name_name_3' has a wrong offset!");

// Function BP_TeamLeftMatchEndCondition.BP_TeamLeftMatchEndCondition_C.HasTeamAlreadyBeenEliminated
// 0x0048 (0x0048 - 0x0000)
struct BP_TeamLeftMatchEndCondition_C_HasTeamAlreadyBeenEliminated final
{
public:
	uint8                                         TeamId;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Eliminated;                                        // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTeam                                  CallFunc_GetTeam_ReturnValue;                      // 0x0008(0x0038)(ConstParm, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_TeamLeftMatchEndCondition_C_HasTeamAlreadyBeenEliminated) == 0x000008, "Wrong alignment on BP_TeamLeftMatchEndCondition_C_HasTeamAlreadyBeenEliminated");
static_assert(sizeof(BP_TeamLeftMatchEndCondition_C_HasTeamAlreadyBeenEliminated) == 0x000048, "Wrong size on BP_TeamLeftMatchEndCondition_C_HasTeamAlreadyBeenEliminated");
static_assert(offsetof(BP_TeamLeftMatchEndCondition_C_HasTeamAlreadyBeenEliminated, TeamId) == 0x000000, "Member 'BP_TeamLeftMatchEndCondition_C_HasTeamAlreadyBeenEliminated::TeamId' has a wrong offset!");
static_assert(offsetof(BP_TeamLeftMatchEndCondition_C_HasTeamAlreadyBeenEliminated, Eliminated) == 0x000001, "Member 'BP_TeamLeftMatchEndCondition_C_HasTeamAlreadyBeenEliminated::Eliminated' has a wrong offset!");
static_assert(offsetof(BP_TeamLeftMatchEndCondition_C_HasTeamAlreadyBeenEliminated, CallFunc_GetTeam_ReturnValue) == 0x000008, "Member 'BP_TeamLeftMatchEndCondition_C_HasTeamAlreadyBeenEliminated::CallFunc_GetTeam_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TeamLeftMatchEndCondition_C_HasTeamAlreadyBeenEliminated, CallFunc_IsValid_ReturnValue) == 0x000040, "Member 'BP_TeamLeftMatchEndCondition_C_HasTeamAlreadyBeenEliminated::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_TeamLeftMatchEndCondition.BP_TeamLeftMatchEndCondition_C.On_PlayerLoggedOut_Event
// 0x0010 (0x0010 - 0x0000)
struct BP_TeamLeftMatchEndCondition_C_On_PlayerLoggedOut_Event final
{
public:
	class APlayerState*                           PlayerState;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AController*                            Controller;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_TeamLeftMatchEndCondition_C_On_PlayerLoggedOut_Event) == 0x000008, "Wrong alignment on BP_TeamLeftMatchEndCondition_C_On_PlayerLoggedOut_Event");
static_assert(sizeof(BP_TeamLeftMatchEndCondition_C_On_PlayerLoggedOut_Event) == 0x000010, "Wrong size on BP_TeamLeftMatchEndCondition_C_On_PlayerLoggedOut_Event");
static_assert(offsetof(BP_TeamLeftMatchEndCondition_C_On_PlayerLoggedOut_Event, PlayerState) == 0x000000, "Member 'BP_TeamLeftMatchEndCondition_C_On_PlayerLoggedOut_Event::PlayerState' has a wrong offset!");
static_assert(offsetof(BP_TeamLeftMatchEndCondition_C_On_PlayerLoggedOut_Event, Controller) == 0x000008, "Member 'BP_TeamLeftMatchEndCondition_C_On_PlayerLoggedOut_Event::Controller' has a wrong offset!");

}

