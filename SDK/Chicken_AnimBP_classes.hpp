#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Chicken_AnimBP

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "EChickenStates_structs.hpp"
#include "EChickenOverlays_structs.hpp"
#include "AnimGraphRuntime_structs.hpp"
#include "EChickenIdleStates_structs.hpp"
#include "Chicken_AnimBP_structs.hpp"
#include "EChickenRunStates_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK
{

// AnimBlueprintGeneratedClass Chicken_AnimBP.Chicken_AnimBP_C
// 0x2970 (0x2CE0 - 0x0370)
class UChicken_AnimBP_C final : public UAnimInstance
{
public:
	uint8                                         Pad_368[0x8];                                      // 0x0368(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0370(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct Chicken_AnimBP::FAnimBlueprintGeneratedMutableData __AnimBlueprintMutables;                           // 0x0378(0x0014)(HasGetValueTypeHash)
	uint8                                         Pad_38C[0x4];                                      // 0x038C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAnimSubsystemInstance                 AnimBlueprintExtension_PropertyAccess;             // 0x0390(0x0008)()
	struct FAnimSubsystemInstance_NodeRelevancy   AnimBlueprintExtension_NodeRelevancy;              // 0x0398(0x00A8)()
	struct FAnimSubsystemInstance                 AnimBlueprintExtension_Base;                       // 0x0440(0x0008)()
	struct FAnimNode_SequenceEvaluator            AnimGraphNode_SequenceEvaluator;                   // 0x0448(0x0040)()
	struct FAnimNode_Root                         AnimGraphNode_Root_4;                              // 0x0488(0x0020)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_34;                 // 0x04A8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_33;                 // 0x04D0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_32;                 // 0x04F8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_31;                 // 0x0520(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_30;                 // 0x0548(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_29;                 // 0x0570(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_28;                 // 0x0598(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_27;                 // 0x05C0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_26;                 // 0x05E8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_25;                 // 0x0610(0x0028)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_15;                   // 0x0638(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_16;                      // 0x0680(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_14;                   // 0x06A0(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_15;                      // 0x06E8(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_13;                   // 0x0708(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_14;                      // 0x0750(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_12;                   // 0x0770(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_13;                      // 0x07B8(0x0020)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_24;                 // 0x07D8(0x0028)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_11;                   // 0x0800(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_12;                      // 0x0848(0x0020)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine_1;                      // 0x0868(0x00C8)()
	struct FAnimNode_Root                         AnimGraphNode_Root_3;                              // 0x0930(0x0020)()
	struct FAnimNode_Root                         AnimGraphNode_Root_2;                              // 0x0950(0x0020)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_23;                 // 0x0970(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_22;                 // 0x0998(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_21;                 // 0x09C0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_20;                 // 0x09E8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_19;                 // 0x0A10(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_18;                 // 0x0A38(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_17;                 // 0x0A60(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_16;                 // 0x0A88(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_15;                 // 0x0AB0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_14;                 // 0x0AD8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_13;                 // 0x0B00(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_12;                 // 0x0B28(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_11;                 // 0x0B50(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_10;                 // 0x0B78(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_9;                  // 0x0BA0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_8;                  // 0x0BC8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_7;                  // 0x0BF0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_6;                  // 0x0C18(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_5;                  // 0x0C40(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_4;                  // 0x0C68(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_3;                  // 0x0C90(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_2;                  // 0x0CB8(0x0028)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer;                    // 0x0CE0(0x0070)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_11;                      // 0x0D50(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_10;                   // 0x0D70(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_10;                      // 0x0DB8(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_9;                    // 0x0DD8(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_9;                       // 0x0E20(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_8;                    // 0x0E40(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_8;                       // 0x0E88(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_7;                    // 0x0EA8(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_7;                       // 0x0EF0(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_6;                    // 0x0F10(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_6;                       // 0x0F58(0x0020)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_1;                  // 0x0F78(0x0028)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_5;                    // 0x0FA0(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_5;                       // 0x0FE8(0x0020)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult;                    // 0x1008(0x0028)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_4;                    // 0x1030(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_4;                       // 0x1078(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_3;                    // 0x1098(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_3;                       // 0x10E0(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_2;                    // 0x1100(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_2;                       // 0x1148(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_1;                    // 0x1168(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_1;                       // 0x11B0(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer;                      // 0x11D0(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult;                         // 0x1218(0x0020)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine;                        // 0x1238(0x00C8)()
	struct FAnimNode_Inertialization              AnimGraphNode_Inertialization;                     // 0x1300(0x0440)()
	struct FAnimNode_Root                         AnimGraphNode_Root_1;                              // 0x1740(0x0020)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose_6;                    // 0x1760(0x0080)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose_5;                    // 0x17E0(0x0080)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose_4;                    // 0x1860(0x0080)()
	struct FAnimNode_MakeDynamicAdditive          AnimGraphNode_MakeDynamicAdditive_1;               // 0x18E0(0x0038)()
	struct FAnimNode_MakeDynamicAdditive          AnimGraphNode_MakeDynamicAdditive;                 // 0x1918(0x0038)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose_3;                    // 0x1950(0x0080)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose_2;                    // 0x19D0(0x0080)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_14;                    // 0x1A50(0x0028)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_13;                    // 0x1A78(0x0028)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_12;                    // 0x1AA0(0x0028)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_11;                    // 0x1AC8(0x0028)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot_3;                              // 0x1AF0(0x0048)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot_2;                              // 0x1B38(0x0048)()
	struct FAnimNode_TwoWayBlend                  AnimGraphNode_TwoWayBlend_1;                       // 0x1B80(0x00C8)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose_1;                    // 0x1C48(0x0080)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_10;                    // 0x1CC8(0x0028)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_9;                     // 0x1CF0(0x0028)()
	struct FAnimNode_LayeredBoneBlend             AnimGraphNode_LayeredBoneBlend_3;                  // 0x1D18(0x00F0)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_8;                     // 0x1E08(0x0028)()
	struct FAnimNode_LayeredBoneBlend             AnimGraphNode_LayeredBoneBlend_2;                  // 0x1E30(0x00F0)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot_1;                              // 0x1F20(0x0048)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_7;                     // 0x1F68(0x0028)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_6;                     // 0x1F90(0x0028)()
	struct FAnimNode_LayeredBoneBlend             AnimGraphNode_LayeredBoneBlend_1;                  // 0x1FB8(0x00F0)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_5;                     // 0x20A8(0x0028)()
	struct FAnimNode_LayeredBoneBlend             AnimGraphNode_LayeredBoneBlend;                    // 0x20D0(0x00F0)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_4;                     // 0x21C0(0x0028)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_3;                     // 0x21E8(0x0028)()
	struct FAnimNode_TwoWayBlend                  AnimGraphNode_TwoWayBlend;                         // 0x2210(0x00C8)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose;                      // 0x22D8(0x0080)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_2;                     // 0x2358(0x0028)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_1;                     // 0x2380(0x0028)()
	struct FAnimNode_LinkedInputPose              AnimGraphNode_LinkedInputPose_2;                   // 0x23A8(0x00B8)()
	struct FAnimNode_LinkedInputPose              AnimGraphNode_LinkedInputPose_1;                   // 0x2460(0x00B8)()
	struct FAnimNode_LinkedInputPose              AnimGraphNode_LinkedInputPose;                     // 0x2518(0x00B8)()
	struct FAnimNode_ApplyAdditive                AnimGraphNode_ApplyAdditive_1;                     // 0x25D0(0x00C8)()
	struct FAnimNode_ApplyAdditive                AnimGraphNode_ApplyAdditive;                       // 0x2698(0x00C8)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose;                       // 0x2760(0x0028)()
	struct FAnimNode_Root                         AnimGraphNode_Root;                                // 0x2788(0x0020)()
	struct FAnimNode_LinkedAnimGraph              AnimGraphNode_LinkedAnimGraph;                     // 0x27A8(0x00B8)()
	struct FAnimNode_LinkedAnimLayer              AnimGraphNode_LinkedAnimLayer_3;                   // 0x2860(0x00C8)()
	struct FAnimNode_LinkedAnimLayer              AnimGraphNode_LinkedAnimLayer_2;                   // 0x2928(0x00C8)()
	struct FAnimNode_LinkedAnimLayer              AnimGraphNode_LinkedAnimLayer_1;                   // 0x29F0(0x00C8)()
	struct FAnimNode_LinkedAnimLayer              AnimGraphNode_LinkedAnimLayer;                     // 0x2AB8(0x00C8)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot;                                // 0x2B80(0x0048)()
	class UPawnMovementComponent*                 K2Node_PropertyAccess_4;                           // 0x2BC8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_PropertyAccess_2;                           // 0x2BD0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2BD1[0x7];                                     // 0x2BD1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                K2Node_PropertyAccess_1;                           // 0x2BD8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_PropertyAccess;                             // 0x2BF0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                External_Force;                                    // 0x2C08(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EChickenOverlays                              OverlayState;                                      // 0x2C20(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C21[0x7];                                     // 0x2C21(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Enable_HandIK_R;                                   // 0x2C28(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Enable_HandIK_L;                                   // 0x2C30(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Hand_r;                                            // 0x2C38(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Hand_l;                                            // 0x2C40(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Equipping_Layer;                                   // 0x2C48(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Spine_Add;                                         // 0x2C50(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Head_Add;                                          // 0x2C58(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Leg_L_Add;                                         // 0x2C60(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Leg_R_Add;                                         // 0x2C68(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Leg_L_LS;                                          // 0x2C70(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Leg_R_LS;                                          // 0x2C78(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Leg_L_MS;                                          // 0x2C80(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Leg_R_MS;                                          // 0x2C88(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EChickenIdleStates                            IdleState;                                         // 0x2C90(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EChickenIdleStates                            IdleStatePrev;                                     // 0x2C91(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C92[0x6];                                     // 0x2C92(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        IdleEndTimeTolerance;                              // 0x2C98(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        InitialIdleStartTime;                              // 0x2CA0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EChickenStates                                State;                                             // 0x2CA8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EChickenRunStates                             RunState;                                          // 0x2CA9(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          AttackLoop;                                        // 0x2CAA(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2CAB[0x5];                                     // 0x2CAB(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_Goose_C*                            As_BP_Goose;                                       // 0x2CB0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FVector                                WorldVelocity;                                     // 0x2CB8(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsJumping;                                        // 0x2CD0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsFalling;                                        // 0x2CD1(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bInAir;                                            // 0x2CD2(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bMoving;                                           // 0x2CD3(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2CD4[0x4];                                     // 0x2CD4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Speed;                                             // 0x2CD8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void AnimGraph(struct FPoseLink* AnimGraph_0);
	void AnimNotify_ResetIdleState();
	void AnimNotify_SetRandomIdleState();
	void base(struct FPoseLink* base_0);
	void BasePose(struct FPoseLink* BasePose_0);
	void BlendLayers(const struct FPoseLink& BaseLayer, const struct FPoseLink& OverlayLayer, const struct FPoseLink& BasePoseLayer, struct FPoseLink* BlendLayers_0);
	void BlueprintInitializeAnimation();
	void BlueprintThreadSafeUpdateAnimation(float DeltaTime);
	void ChangeAnimationState(EChickenStates State_0);
	void ChangeRunState(EChickenRunStates RunState_0);
	void EvaluateGraphExposedInputs_ExecuteUbergraph_Chicken_AnimBP_AnimGraphNode_TransitionResult_05611BCF4720775012843BB0F0617AF7();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_Chicken_AnimBP_AnimGraphNode_TransitionResult_08F10A88480B6A3B733E7984B9D62745();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_Chicken_AnimBP_AnimGraphNode_TransitionResult_1A19E98B44A58D517015D98CC8F9F760();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_Chicken_AnimBP_AnimGraphNode_TransitionResult_1A8FFDC048D4B509DC0CC08E0A87E091();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_Chicken_AnimBP_AnimGraphNode_TransitionResult_26BB5DD146FFC042CCD86BBCC896DB9A();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_Chicken_AnimBP_AnimGraphNode_TransitionResult_2D35E363448E7B8CCFDF4589D2879FAD();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_Chicken_AnimBP_AnimGraphNode_TransitionResult_2F11502646EED44A58D489B232594A47();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_Chicken_AnimBP_AnimGraphNode_TransitionResult_372D2D494C31B1AECC70559183460313();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_Chicken_AnimBP_AnimGraphNode_TransitionResult_4F538D77489CBDAD45EBB582C0428ECE();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_Chicken_AnimBP_AnimGraphNode_TransitionResult_54DBFA974BC7DAB8DEED119DFD36DB48();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_Chicken_AnimBP_AnimGraphNode_TransitionResult_59EE8826496D62AC4945C4BC90847669();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_Chicken_AnimBP_AnimGraphNode_TransitionResult_6A5EB7B34DAA5FA1E911EC87364C1978();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_Chicken_AnimBP_AnimGraphNode_TransitionResult_75A8DB564AFDF1DD73F92391342452A8();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_Chicken_AnimBP_AnimGraphNode_TransitionResult_7745931F43C821961724BE93315E8362();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_Chicken_AnimBP_AnimGraphNode_TransitionResult_7CC3025648BEC8DA5E2A1180BC959D1F();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_Chicken_AnimBP_AnimGraphNode_TransitionResult_995BA29346E9795CE6532F9190D8BBA9();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_Chicken_AnimBP_AnimGraphNode_TransitionResult_AB66A0A845815B4C24D621837B211159();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_Chicken_AnimBP_AnimGraphNode_TransitionResult_BA4E885D408F858A5430A9BE3D615702();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_Chicken_AnimBP_AnimGraphNode_TransitionResult_D734BFF147DE89B78E71A39E7EC7C7DB();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_Chicken_AnimBP_AnimGraphNode_TransitionResult_DE3E98D14A1893CC94D45FAEAD722FB2();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_Chicken_AnimBP_AnimGraphNode_TransitionResult_E271AB254F1BC5A642FAB59806A86EE6();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_Chicken_AnimBP_AnimGraphNode_TransitionResult_E3379089407DE9060F8ED58063A463DC();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_Chicken_AnimBP_AnimGraphNode_TransitionResult_E7169F0A4F0CBC09455A8F898ADC7767();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_Chicken_AnimBP_AnimGraphNode_TransitionResult_F97446BF43DD9425FF3532902A571303();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_Chicken_AnimBP_AnimGraphNode_TransitionResult_FD0A797E4DCFCEFE5110ADBAC9DFF4EE();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_Chicken_AnimBP_AnimGraphNode_TransitionResult_FD605C0B47B70097C59D3A8777CF549C();
	void ExecuteUbergraph_Chicken_AnimBP(int32 EntryPoint);
	class UCharacterMovementComponent* GetMovementComponent();
	void Overlay(struct FPoseLink* Overlay_0);
	void ResetIdleState(const struct FAnimUpdateContext& Context, const struct FAnimNodeReference& Node);
	void Update_Pawn_Info();
	void UpdateLayerData();
	void UpdatePlayerStateData();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"Chicken_AnimBP_C">();
	}
	static class UChicken_AnimBP_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UChicken_AnimBP_C>();
	}
};
static_assert(alignof(UChicken_AnimBP_C) == 0x000010, "Wrong alignment on UChicken_AnimBP_C");
static_assert(sizeof(UChicken_AnimBP_C) == 0x002CE0, "Wrong size on UChicken_AnimBP_C");
static_assert(offsetof(UChicken_AnimBP_C, UberGraphFrame) == 0x000370, "Member 'UChicken_AnimBP_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UChicken_AnimBP_C, __AnimBlueprintMutables) == 0x000378, "Member 'UChicken_AnimBP_C::__AnimBlueprintMutables' has a wrong offset!");
static_assert(offsetof(UChicken_AnimBP_C, AnimBlueprintExtension_PropertyAccess) == 0x000390, "Member 'UChicken_AnimBP_C::AnimBlueprintExtension_PropertyAccess' has a wrong offset!");
static_assert(offsetof(UChicken_AnimBP_C, AnimBlueprintExtension_NodeRelevancy) == 0x000398, "Member 'UChicken_AnimBP_C::AnimBlueprintExtension_NodeRelevancy' has a wrong offset!");
static_assert(offsetof(UChicken_AnimBP_C, AnimBlueprintExtension_Base) == 0x000440, "Member 'UChicken_AnimBP_C::AnimBlueprintExtension_Base' has a wrong offset!");
static_assert(offsetof(UChicken_AnimBP_C, AnimGraphNode_SequenceEvaluator) == 0x000448, "Member 'UChicken_AnimBP_C::AnimGraphNode_SequenceEvaluator' has a wrong offset!");
static_assert(offsetof(UChicken_AnimBP_C, AnimGraphNode_Root_4) == 0x000488, "Member 'UChicken_AnimBP_C::AnimGraphNode_Root_4' has a wrong offset!");
static_assert(offsetof(UChicken_AnimBP_C, AnimGraphNode_TransitionResult_34) == 0x0004A8, "Member 'UChicken_AnimBP_C::AnimGraphNode_TransitionResult_34' has a wrong offset!");
static_assert(offsetof(UChicken_AnimBP_C, AnimGraphNode_TransitionResult_33) == 0x0004D0, "Member 'UChicken_AnimBP_C::AnimGraphNode_TransitionResult_33' has a wrong offset!");
static_assert(offsetof(UChicken_AnimBP_C, AnimGraphNode_TransitionResult_32) == 0x0004F8, "Member 'UChicken_AnimBP_C::AnimGraphNode_TransitionResult_32' has a wrong offset!");
static_assert(offsetof(UChicken_AnimBP_C, AnimGraphNode_TransitionResult_31) == 0x000520, "Member 'UChicken_AnimBP_C::AnimGraphNode_TransitionResult_31' has a wrong offset!");
static_assert(offsetof(UChicken_AnimBP_C, AnimGraphNode_TransitionResult_30) == 0x000548, "Member 'UChicken_AnimBP_C::AnimGraphNode_TransitionResult_30' has a wrong offset!");
static_assert(offsetof(UChicken_AnimBP_C, AnimGraphNode_TransitionResult_29) == 0x000570, "Member 'UChicken_AnimBP_C::AnimGraphNode_TransitionResult_29' has a wrong offset!");
static_assert(offsetof(UChicken_AnimBP_C, AnimGraphNode_TransitionResult_28) == 0x000598, "Member 'UChicken_AnimBP_C::AnimGraphNode_TransitionResult_28' has a wrong offset!");
static_assert(offsetof(UChicken_AnimBP_C, AnimGraphNode_TransitionResult_27) == 0x0005C0, "Member 'UChicken_AnimBP_C::AnimGraphNode_TransitionResult_27' has a wrong offset!");
static_assert(offsetof(UChicken_AnimBP_C, AnimGraphNode_TransitionResult_26) == 0x0005E8, "Member 'UChicken_AnimBP_C::AnimGraphNode_TransitionResult_26' has a wrong offset!");
static_assert(offsetof(UChicken_AnimBP_C, AnimGraphNode_TransitionResult_25) == 0x000610, "Member 'UChicken_AnimBP_C::AnimGraphNode_TransitionResult_25' has a wrong offset!");
static_assert(offsetof(UChicken_AnimBP_C, AnimGraphNode_SequencePlayer_15) == 0x000638, "Member 'UChicken_AnimBP_C::AnimGraphNode_SequencePlayer_15' has a wrong offset!");
static_assert(offsetof(UChicken_AnimBP_C, AnimGraphNode_StateResult_16) == 0x000680, "Member 'UChicken_AnimBP_C::AnimGraphNode_StateResult_16' has a wrong offset!");
static_assert(offsetof(UChicken_AnimBP_C, AnimGraphNode_SequencePlayer_14) == 0x0006A0, "Member 'UChicken_AnimBP_C::AnimGraphNode_SequencePlayer_14' has a wrong offset!");
static_assert(offsetof(UChicken_AnimBP_C, AnimGraphNode_StateResult_15) == 0x0006E8, "Member 'UChicken_AnimBP_C::AnimGraphNode_StateResult_15' has a wrong offset!");
static_assert(offsetof(UChicken_AnimBP_C, AnimGraphNode_SequencePlayer_13) == 0x000708, "Member 'UChicken_AnimBP_C::AnimGraphNode_SequencePlayer_13' has a wrong offset!");
static_assert(offsetof(UChicken_AnimBP_C, AnimGraphNode_StateResult_14) == 0x000750, "Member 'UChicken_AnimBP_C::AnimGraphNode_StateResult_14' has a wrong offset!");
static_assert(offsetof(UChicken_AnimBP_C, AnimGraphNode_SequencePlayer_12) == 0x000770, "Member 'UChicken_AnimBP_C::AnimGraphNode_SequencePlayer_12' has a wrong offset!");
static_assert(offsetof(UChicken_AnimBP_C, AnimGraphNode_StateResult_13) == 0x0007B8, "Member 'UChicken_AnimBP_C::AnimGraphNode_StateResult_13' has a wrong offset!");
static_assert(offsetof(UChicken_AnimBP_C, AnimGraphNode_TransitionResult_24) == 0x0007D8, "Member 'UChicken_AnimBP_C::AnimGraphNode_TransitionResult_24' has a wrong offset!");
static_assert(offsetof(UChicken_AnimBP_C, AnimGraphNode_SequencePlayer_11) == 0x000800, "Member 'UChicken_AnimBP_C::AnimGraphNode_SequencePlayer_11' has a wrong offset!");
static_assert(offsetof(UChicken_AnimBP_C, AnimGraphNode_StateResult_12) == 0x000848, "Member 'UChicken_AnimBP_C::AnimGraphNode_StateResult_12' has a wrong offset!");
static_assert(offsetof(UChicken_AnimBP_C, AnimGraphNode_StateMachine_1) == 0x000868, "Member 'UChicken_AnimBP_C::AnimGraphNode_StateMachine_1' has a wrong offset!");
static_assert(offsetof(UChicken_AnimBP_C, AnimGraphNode_Root_3) == 0x000930, "Member 'UChicken_AnimBP_C::AnimGraphNode_Root_3' has a wrong offset!");
static_assert(offsetof(UChicken_AnimBP_C, AnimGraphNode_Root_2) == 0x000950, "Member 'UChicken_AnimBP_C::AnimGraphNode_Root_2' has a wrong offset!");
static_assert(offsetof(UChicken_AnimBP_C, AnimGraphNode_TransitionResult_23) == 0x000970, "Member 'UChicken_AnimBP_C::AnimGraphNode_TransitionResult_23' has a wrong offset!");
static_assert(offsetof(UChicken_AnimBP_C, AnimGraphNode_TransitionResult_22) == 0x000998, "Member 'UChicken_AnimBP_C::AnimGraphNode_TransitionResult_22' has a wrong offset!");
static_assert(offsetof(UChicken_AnimBP_C, AnimGraphNode_TransitionResult_21) == 0x0009C0, "Member 'UChicken_AnimBP_C::AnimGraphNode_TransitionResult_21' has a wrong offset!");
static_assert(offsetof(UChicken_AnimBP_C, AnimGraphNode_TransitionResult_20) == 0x0009E8, "Member 'UChicken_AnimBP_C::AnimGraphNode_TransitionResult_20' has a wrong offset!");
static_assert(offsetof(UChicken_AnimBP_C, AnimGraphNode_TransitionResult_19) == 0x000A10, "Member 'UChicken_AnimBP_C::AnimGraphNode_TransitionResult_19' has a wrong offset!");
static_assert(offsetof(UChicken_AnimBP_C, AnimGraphNode_TransitionResult_18) == 0x000A38, "Member 'UChicken_AnimBP_C::AnimGraphNode_TransitionResult_18' has a wrong offset!");
static_assert(offsetof(UChicken_AnimBP_C, AnimGraphNode_TransitionResult_17) == 0x000A60, "Member 'UChicken_AnimBP_C::AnimGraphNode_TransitionResult_17' has a wrong offset!");
static_assert(offsetof(UChicken_AnimBP_C, AnimGraphNode_TransitionResult_16) == 0x000A88, "Member 'UChicken_AnimBP_C::AnimGraphNode_TransitionResult_16' has a wrong offset!");
static_assert(offsetof(UChicken_AnimBP_C, AnimGraphNode_TransitionResult_15) == 0x000AB0, "Member 'UChicken_AnimBP_C::AnimGraphNode_TransitionResult_15' has a wrong offset!");
static_assert(offsetof(UChicken_AnimBP_C, AnimGraphNode_TransitionResult_14) == 0x000AD8, "Member 'UChicken_AnimBP_C::AnimGraphNode_TransitionResult_14' has a wrong offset!");
static_assert(offsetof(UChicken_AnimBP_C, AnimGraphNode_TransitionResult_13) == 0x000B00, "Member 'UChicken_AnimBP_C::AnimGraphNode_TransitionResult_13' has a wrong offset!");
static_assert(offsetof(UChicken_AnimBP_C, AnimGraphNode_TransitionResult_12) == 0x000B28, "Member 'UChicken_AnimBP_C::AnimGraphNode_TransitionResult_12' has a wrong offset!");
static_assert(offsetof(UChicken_AnimBP_C, AnimGraphNode_TransitionResult_11) == 0x000B50, "Member 'UChicken_AnimBP_C::AnimGraphNode_TransitionResult_11' has a wrong offset!");
static_assert(offsetof(UChicken_AnimBP_C, AnimGraphNode_TransitionResult_10) == 0x000B78, "Member 'UChicken_AnimBP_C::AnimGraphNode_TransitionResult_10' has a wrong offset!");
static_assert(offsetof(UChicken_AnimBP_C, AnimGraphNode_TransitionResult_9) == 0x000BA0, "Member 'UChicken_AnimBP_C::AnimGraphNode_TransitionResult_9' has a wrong offset!");
static_assert(offsetof(UChicken_AnimBP_C, AnimGraphNode_TransitionResult_8) == 0x000BC8, "Member 'UChicken_AnimBP_C::AnimGraphNode_TransitionResult_8' has a wrong offset!");
static_assert(offsetof(UChicken_AnimBP_C, AnimGraphNode_TransitionResult_7) == 0x000BF0, "Member 'UChicken_AnimBP_C::AnimGraphNode_TransitionResult_7' has a wrong offset!");
static_assert(offsetof(UChicken_AnimBP_C, AnimGraphNode_TransitionResult_6) == 0x000C18, "Member 'UChicken_AnimBP_C::AnimGraphNode_TransitionResult_6' has a wrong offset!");
static_assert(offsetof(UChicken_AnimBP_C, AnimGraphNode_TransitionResult_5) == 0x000C40, "Member 'UChicken_AnimBP_C::AnimGraphNode_TransitionResult_5' has a wrong offset!");
static_assert(offsetof(UChicken_AnimBP_C, AnimGraphNode_TransitionResult_4) == 0x000C68, "Member 'UChicken_AnimBP_C::AnimGraphNode_TransitionResult_4' has a wrong offset!");
static_assert(offsetof(UChicken_AnimBP_C, AnimGraphNode_TransitionResult_3) == 0x000C90, "Member 'UChicken_AnimBP_C::AnimGraphNode_TransitionResult_3' has a wrong offset!");
static_assert(offsetof(UChicken_AnimBP_C, AnimGraphNode_TransitionResult_2) == 0x000CB8, "Member 'UChicken_AnimBP_C::AnimGraphNode_TransitionResult_2' has a wrong offset!");
static_assert(offsetof(UChicken_AnimBP_C, AnimGraphNode_BlendSpacePlayer) == 0x000CE0, "Member 'UChicken_AnimBP_C::AnimGraphNode_BlendSpacePlayer' has a wrong offset!");
static_assert(offsetof(UChicken_AnimBP_C, AnimGraphNode_StateResult_11) == 0x000D50, "Member 'UChicken_AnimBP_C::AnimGraphNode_StateResult_11' has a wrong offset!");
static_assert(offsetof(UChicken_AnimBP_C, AnimGraphNode_SequencePlayer_10) == 0x000D70, "Member 'UChicken_AnimBP_C::AnimGraphNode_SequencePlayer_10' has a wrong offset!");
static_assert(offsetof(UChicken_AnimBP_C, AnimGraphNode_StateResult_10) == 0x000DB8, "Member 'UChicken_AnimBP_C::AnimGraphNode_StateResult_10' has a wrong offset!");
static_assert(offsetof(UChicken_AnimBP_C, AnimGraphNode_SequencePlayer_9) == 0x000DD8, "Member 'UChicken_AnimBP_C::AnimGraphNode_SequencePlayer_9' has a wrong offset!");
static_assert(offsetof(UChicken_AnimBP_C, AnimGraphNode_StateResult_9) == 0x000E20, "Member 'UChicken_AnimBP_C::AnimGraphNode_StateResult_9' has a wrong offset!");
static_assert(offsetof(UChicken_AnimBP_C, AnimGraphNode_SequencePlayer_8) == 0x000E40, "Member 'UChicken_AnimBP_C::AnimGraphNode_SequencePlayer_8' has a wrong offset!");
static_assert(offsetof(UChicken_AnimBP_C, AnimGraphNode_StateResult_8) == 0x000E88, "Member 'UChicken_AnimBP_C::AnimGraphNode_StateResult_8' has a wrong offset!");
static_assert(offsetof(UChicken_AnimBP_C, AnimGraphNode_SequencePlayer_7) == 0x000EA8, "Member 'UChicken_AnimBP_C::AnimGraphNode_SequencePlayer_7' has a wrong offset!");
static_assert(offsetof(UChicken_AnimBP_C, AnimGraphNode_StateResult_7) == 0x000EF0, "Member 'UChicken_AnimBP_C::AnimGraphNode_StateResult_7' has a wrong offset!");
static_assert(offsetof(UChicken_AnimBP_C, AnimGraphNode_SequencePlayer_6) == 0x000F10, "Member 'UChicken_AnimBP_C::AnimGraphNode_SequencePlayer_6' has a wrong offset!");
static_assert(offsetof(UChicken_AnimBP_C, AnimGraphNode_StateResult_6) == 0x000F58, "Member 'UChicken_AnimBP_C::AnimGraphNode_StateResult_6' has a wrong offset!");
static_assert(offsetof(UChicken_AnimBP_C, AnimGraphNode_TransitionResult_1) == 0x000F78, "Member 'UChicken_AnimBP_C::AnimGraphNode_TransitionResult_1' has a wrong offset!");
static_assert(offsetof(UChicken_AnimBP_C, AnimGraphNode_SequencePlayer_5) == 0x000FA0, "Member 'UChicken_AnimBP_C::AnimGraphNode_SequencePlayer_5' has a wrong offset!");
static_assert(offsetof(UChicken_AnimBP_C, AnimGraphNode_StateResult_5) == 0x000FE8, "Member 'UChicken_AnimBP_C::AnimGraphNode_StateResult_5' has a wrong offset!");
static_assert(offsetof(UChicken_AnimBP_C, AnimGraphNode_TransitionResult) == 0x001008, "Member 'UChicken_AnimBP_C::AnimGraphNode_TransitionResult' has a wrong offset!");
static_assert(offsetof(UChicken_AnimBP_C, AnimGraphNode_SequencePlayer_4) == 0x001030, "Member 'UChicken_AnimBP_C::AnimGraphNode_SequencePlayer_4' has a wrong offset!");
static_assert(offsetof(UChicken_AnimBP_C, AnimGraphNode_StateResult_4) == 0x001078, "Member 'UChicken_AnimBP_C::AnimGraphNode_StateResult_4' has a wrong offset!");
static_assert(offsetof(UChicken_AnimBP_C, AnimGraphNode_SequencePlayer_3) == 0x001098, "Member 'UChicken_AnimBP_C::AnimGraphNode_SequencePlayer_3' has a wrong offset!");
static_assert(offsetof(UChicken_AnimBP_C, AnimGraphNode_StateResult_3) == 0x0010E0, "Member 'UChicken_AnimBP_C::AnimGraphNode_StateResult_3' has a wrong offset!");
static_assert(offsetof(UChicken_AnimBP_C, AnimGraphNode_SequencePlayer_2) == 0x001100, "Member 'UChicken_AnimBP_C::AnimGraphNode_SequencePlayer_2' has a wrong offset!");
static_assert(offsetof(UChicken_AnimBP_C, AnimGraphNode_StateResult_2) == 0x001148, "Member 'UChicken_AnimBP_C::AnimGraphNode_StateResult_2' has a wrong offset!");
static_assert(offsetof(UChicken_AnimBP_C, AnimGraphNode_SequencePlayer_1) == 0x001168, "Member 'UChicken_AnimBP_C::AnimGraphNode_SequencePlayer_1' has a wrong offset!");
static_assert(offsetof(UChicken_AnimBP_C, AnimGraphNode_StateResult_1) == 0x0011B0, "Member 'UChicken_AnimBP_C::AnimGraphNode_StateResult_1' has a wrong offset!");
static_assert(offsetof(UChicken_AnimBP_C, AnimGraphNode_SequencePlayer) == 0x0011D0, "Member 'UChicken_AnimBP_C::AnimGraphNode_SequencePlayer' has a wrong offset!");
static_assert(offsetof(UChicken_AnimBP_C, AnimGraphNode_StateResult) == 0x001218, "Member 'UChicken_AnimBP_C::AnimGraphNode_StateResult' has a wrong offset!");
static_assert(offsetof(UChicken_AnimBP_C, AnimGraphNode_StateMachine) == 0x001238, "Member 'UChicken_AnimBP_C::AnimGraphNode_StateMachine' has a wrong offset!");
static_assert(offsetof(UChicken_AnimBP_C, AnimGraphNode_Inertialization) == 0x001300, "Member 'UChicken_AnimBP_C::AnimGraphNode_Inertialization' has a wrong offset!");
static_assert(offsetof(UChicken_AnimBP_C, AnimGraphNode_Root_1) == 0x001740, "Member 'UChicken_AnimBP_C::AnimGraphNode_Root_1' has a wrong offset!");
static_assert(offsetof(UChicken_AnimBP_C, AnimGraphNode_SaveCachedPose_6) == 0x001760, "Member 'UChicken_AnimBP_C::AnimGraphNode_SaveCachedPose_6' has a wrong offset!");
static_assert(offsetof(UChicken_AnimBP_C, AnimGraphNode_SaveCachedPose_5) == 0x0017E0, "Member 'UChicken_AnimBP_C::AnimGraphNode_SaveCachedPose_5' has a wrong offset!");
static_assert(offsetof(UChicken_AnimBP_C, AnimGraphNode_SaveCachedPose_4) == 0x001860, "Member 'UChicken_AnimBP_C::AnimGraphNode_SaveCachedPose_4' has a wrong offset!");
static_assert(offsetof(UChicken_AnimBP_C, AnimGraphNode_MakeDynamicAdditive_1) == 0x0018E0, "Member 'UChicken_AnimBP_C::AnimGraphNode_MakeDynamicAdditive_1' has a wrong offset!");
static_assert(offsetof(UChicken_AnimBP_C, AnimGraphNode_MakeDynamicAdditive) == 0x001918, "Member 'UChicken_AnimBP_C::AnimGraphNode_MakeDynamicAdditive' has a wrong offset!");
static_assert(offsetof(UChicken_AnimBP_C, AnimGraphNode_SaveCachedPose_3) == 0x001950, "Member 'UChicken_AnimBP_C::AnimGraphNode_SaveCachedPose_3' has a wrong offset!");
static_assert(offsetof(UChicken_AnimBP_C, AnimGraphNode_SaveCachedPose_2) == 0x0019D0, "Member 'UChicken_AnimBP_C::AnimGraphNode_SaveCachedPose_2' has a wrong offset!");
static_assert(offsetof(UChicken_AnimBP_C, AnimGraphNode_UseCachedPose_14) == 0x001A50, "Member 'UChicken_AnimBP_C::AnimGraphNode_UseCachedPose_14' has a wrong offset!");
static_assert(offsetof(UChicken_AnimBP_C, AnimGraphNode_UseCachedPose_13) == 0x001A78, "Member 'UChicken_AnimBP_C::AnimGraphNode_UseCachedPose_13' has a wrong offset!");
static_assert(offsetof(UChicken_AnimBP_C, AnimGraphNode_UseCachedPose_12) == 0x001AA0, "Member 'UChicken_AnimBP_C::AnimGraphNode_UseCachedPose_12' has a wrong offset!");
static_assert(offsetof(UChicken_AnimBP_C, AnimGraphNode_UseCachedPose_11) == 0x001AC8, "Member 'UChicken_AnimBP_C::AnimGraphNode_UseCachedPose_11' has a wrong offset!");
static_assert(offsetof(UChicken_AnimBP_C, AnimGraphNode_Slot_3) == 0x001AF0, "Member 'UChicken_AnimBP_C::AnimGraphNode_Slot_3' has a wrong offset!");
static_assert(offsetof(UChicken_AnimBP_C, AnimGraphNode_Slot_2) == 0x001B38, "Member 'UChicken_AnimBP_C::AnimGraphNode_Slot_2' has a wrong offset!");
static_assert(offsetof(UChicken_AnimBP_C, AnimGraphNode_TwoWayBlend_1) == 0x001B80, "Member 'UChicken_AnimBP_C::AnimGraphNode_TwoWayBlend_1' has a wrong offset!");
static_assert(offsetof(UChicken_AnimBP_C, AnimGraphNode_SaveCachedPose_1) == 0x001C48, "Member 'UChicken_AnimBP_C::AnimGraphNode_SaveCachedPose_1' has a wrong offset!");
static_assert(offsetof(UChicken_AnimBP_C, AnimGraphNode_UseCachedPose_10) == 0x001CC8, "Member 'UChicken_AnimBP_C::AnimGraphNode_UseCachedPose_10' has a wrong offset!");
static_assert(offsetof(UChicken_AnimBP_C, AnimGraphNode_UseCachedPose_9) == 0x001CF0, "Member 'UChicken_AnimBP_C::AnimGraphNode_UseCachedPose_9' has a wrong offset!");
static_assert(offsetof(UChicken_AnimBP_C, AnimGraphNode_LayeredBoneBlend_3) == 0x001D18, "Member 'UChicken_AnimBP_C::AnimGraphNode_LayeredBoneBlend_3' has a wrong offset!");
static_assert(offsetof(UChicken_AnimBP_C, AnimGraphNode_UseCachedPose_8) == 0x001E08, "Member 'UChicken_AnimBP_C::AnimGraphNode_UseCachedPose_8' has a wrong offset!");
static_assert(offsetof(UChicken_AnimBP_C, AnimGraphNode_LayeredBoneBlend_2) == 0x001E30, "Member 'UChicken_AnimBP_C::AnimGraphNode_LayeredBoneBlend_2' has a wrong offset!");
static_assert(offsetof(UChicken_AnimBP_C, AnimGraphNode_Slot_1) == 0x001F20, "Member 'UChicken_AnimBP_C::AnimGraphNode_Slot_1' has a wrong offset!");
static_assert(offsetof(UChicken_AnimBP_C, AnimGraphNode_UseCachedPose_7) == 0x001F68, "Member 'UChicken_AnimBP_C::AnimGraphNode_UseCachedPose_7' has a wrong offset!");
static_assert(offsetof(UChicken_AnimBP_C, AnimGraphNode_UseCachedPose_6) == 0x001F90, "Member 'UChicken_AnimBP_C::AnimGraphNode_UseCachedPose_6' has a wrong offset!");
static_assert(offsetof(UChicken_AnimBP_C, AnimGraphNode_LayeredBoneBlend_1) == 0x001FB8, "Member 'UChicken_AnimBP_C::AnimGraphNode_LayeredBoneBlend_1' has a wrong offset!");
static_assert(offsetof(UChicken_AnimBP_C, AnimGraphNode_UseCachedPose_5) == 0x0020A8, "Member 'UChicken_AnimBP_C::AnimGraphNode_UseCachedPose_5' has a wrong offset!");
static_assert(offsetof(UChicken_AnimBP_C, AnimGraphNode_LayeredBoneBlend) == 0x0020D0, "Member 'UChicken_AnimBP_C::AnimGraphNode_LayeredBoneBlend' has a wrong offset!");
static_assert(offsetof(UChicken_AnimBP_C, AnimGraphNode_UseCachedPose_4) == 0x0021C0, "Member 'UChicken_AnimBP_C::AnimGraphNode_UseCachedPose_4' has a wrong offset!");
static_assert(offsetof(UChicken_AnimBP_C, AnimGraphNode_UseCachedPose_3) == 0x0021E8, "Member 'UChicken_AnimBP_C::AnimGraphNode_UseCachedPose_3' has a wrong offset!");
static_assert(offsetof(UChicken_AnimBP_C, AnimGraphNode_TwoWayBlend) == 0x002210, "Member 'UChicken_AnimBP_C::AnimGraphNode_TwoWayBlend' has a wrong offset!");
static_assert(offsetof(UChicken_AnimBP_C, AnimGraphNode_SaveCachedPose) == 0x0022D8, "Member 'UChicken_AnimBP_C::AnimGraphNode_SaveCachedPose' has a wrong offset!");
static_assert(offsetof(UChicken_AnimBP_C, AnimGraphNode_UseCachedPose_2) == 0x002358, "Member 'UChicken_AnimBP_C::AnimGraphNode_UseCachedPose_2' has a wrong offset!");
static_assert(offsetof(UChicken_AnimBP_C, AnimGraphNode_UseCachedPose_1) == 0x002380, "Member 'UChicken_AnimBP_C::AnimGraphNode_UseCachedPose_1' has a wrong offset!");
static_assert(offsetof(UChicken_AnimBP_C, AnimGraphNode_LinkedInputPose_2) == 0x0023A8, "Member 'UChicken_AnimBP_C::AnimGraphNode_LinkedInputPose_2' has a wrong offset!");
static_assert(offsetof(UChicken_AnimBP_C, AnimGraphNode_LinkedInputPose_1) == 0x002460, "Member 'UChicken_AnimBP_C::AnimGraphNode_LinkedInputPose_1' has a wrong offset!");
static_assert(offsetof(UChicken_AnimBP_C, AnimGraphNode_LinkedInputPose) == 0x002518, "Member 'UChicken_AnimBP_C::AnimGraphNode_LinkedInputPose' has a wrong offset!");
static_assert(offsetof(UChicken_AnimBP_C, AnimGraphNode_ApplyAdditive_1) == 0x0025D0, "Member 'UChicken_AnimBP_C::AnimGraphNode_ApplyAdditive_1' has a wrong offset!");
static_assert(offsetof(UChicken_AnimBP_C, AnimGraphNode_ApplyAdditive) == 0x002698, "Member 'UChicken_AnimBP_C::AnimGraphNode_ApplyAdditive' has a wrong offset!");
static_assert(offsetof(UChicken_AnimBP_C, AnimGraphNode_UseCachedPose) == 0x002760, "Member 'UChicken_AnimBP_C::AnimGraphNode_UseCachedPose' has a wrong offset!");
static_assert(offsetof(UChicken_AnimBP_C, AnimGraphNode_Root) == 0x002788, "Member 'UChicken_AnimBP_C::AnimGraphNode_Root' has a wrong offset!");
static_assert(offsetof(UChicken_AnimBP_C, AnimGraphNode_LinkedAnimGraph) == 0x0027A8, "Member 'UChicken_AnimBP_C::AnimGraphNode_LinkedAnimGraph' has a wrong offset!");
static_assert(offsetof(UChicken_AnimBP_C, AnimGraphNode_LinkedAnimLayer_3) == 0x002860, "Member 'UChicken_AnimBP_C::AnimGraphNode_LinkedAnimLayer_3' has a wrong offset!");
static_assert(offsetof(UChicken_AnimBP_C, AnimGraphNode_LinkedAnimLayer_2) == 0x002928, "Member 'UChicken_AnimBP_C::AnimGraphNode_LinkedAnimLayer_2' has a wrong offset!");
static_assert(offsetof(UChicken_AnimBP_C, AnimGraphNode_LinkedAnimLayer_1) == 0x0029F0, "Member 'UChicken_AnimBP_C::AnimGraphNode_LinkedAnimLayer_1' has a wrong offset!");
static_assert(offsetof(UChicken_AnimBP_C, AnimGraphNode_LinkedAnimLayer) == 0x002AB8, "Member 'UChicken_AnimBP_C::AnimGraphNode_LinkedAnimLayer' has a wrong offset!");
static_assert(offsetof(UChicken_AnimBP_C, AnimGraphNode_Slot) == 0x002B80, "Member 'UChicken_AnimBP_C::AnimGraphNode_Slot' has a wrong offset!");
static_assert(offsetof(UChicken_AnimBP_C, K2Node_PropertyAccess_4) == 0x002BC8, "Member 'UChicken_AnimBP_C::K2Node_PropertyAccess_4' has a wrong offset!");
static_assert(offsetof(UChicken_AnimBP_C, K2Node_PropertyAccess_2) == 0x002BD0, "Member 'UChicken_AnimBP_C::K2Node_PropertyAccess_2' has a wrong offset!");
static_assert(offsetof(UChicken_AnimBP_C, K2Node_PropertyAccess_1) == 0x002BD8, "Member 'UChicken_AnimBP_C::K2Node_PropertyAccess_1' has a wrong offset!");
static_assert(offsetof(UChicken_AnimBP_C, K2Node_PropertyAccess) == 0x002BF0, "Member 'UChicken_AnimBP_C::K2Node_PropertyAccess' has a wrong offset!");
static_assert(offsetof(UChicken_AnimBP_C, External_Force) == 0x002C08, "Member 'UChicken_AnimBP_C::External_Force' has a wrong offset!");
static_assert(offsetof(UChicken_AnimBP_C, OverlayState) == 0x002C20, "Member 'UChicken_AnimBP_C::OverlayState' has a wrong offset!");
static_assert(offsetof(UChicken_AnimBP_C, Enable_HandIK_R) == 0x002C28, "Member 'UChicken_AnimBP_C::Enable_HandIK_R' has a wrong offset!");
static_assert(offsetof(UChicken_AnimBP_C, Enable_HandIK_L) == 0x002C30, "Member 'UChicken_AnimBP_C::Enable_HandIK_L' has a wrong offset!");
static_assert(offsetof(UChicken_AnimBP_C, Hand_r) == 0x002C38, "Member 'UChicken_AnimBP_C::Hand_r' has a wrong offset!");
static_assert(offsetof(UChicken_AnimBP_C, Hand_l) == 0x002C40, "Member 'UChicken_AnimBP_C::Hand_l' has a wrong offset!");
static_assert(offsetof(UChicken_AnimBP_C, Equipping_Layer) == 0x002C48, "Member 'UChicken_AnimBP_C::Equipping_Layer' has a wrong offset!");
static_assert(offsetof(UChicken_AnimBP_C, Spine_Add) == 0x002C50, "Member 'UChicken_AnimBP_C::Spine_Add' has a wrong offset!");
static_assert(offsetof(UChicken_AnimBP_C, Head_Add) == 0x002C58, "Member 'UChicken_AnimBP_C::Head_Add' has a wrong offset!");
static_assert(offsetof(UChicken_AnimBP_C, Leg_L_Add) == 0x002C60, "Member 'UChicken_AnimBP_C::Leg_L_Add' has a wrong offset!");
static_assert(offsetof(UChicken_AnimBP_C, Leg_R_Add) == 0x002C68, "Member 'UChicken_AnimBP_C::Leg_R_Add' has a wrong offset!");
static_assert(offsetof(UChicken_AnimBP_C, Leg_L_LS) == 0x002C70, "Member 'UChicken_AnimBP_C::Leg_L_LS' has a wrong offset!");
static_assert(offsetof(UChicken_AnimBP_C, Leg_R_LS) == 0x002C78, "Member 'UChicken_AnimBP_C::Leg_R_LS' has a wrong offset!");
static_assert(offsetof(UChicken_AnimBP_C, Leg_L_MS) == 0x002C80, "Member 'UChicken_AnimBP_C::Leg_L_MS' has a wrong offset!");
static_assert(offsetof(UChicken_AnimBP_C, Leg_R_MS) == 0x002C88, "Member 'UChicken_AnimBP_C::Leg_R_MS' has a wrong offset!");
static_assert(offsetof(UChicken_AnimBP_C, IdleState) == 0x002C90, "Member 'UChicken_AnimBP_C::IdleState' has a wrong offset!");
static_assert(offsetof(UChicken_AnimBP_C, IdleStatePrev) == 0x002C91, "Member 'UChicken_AnimBP_C::IdleStatePrev' has a wrong offset!");
static_assert(offsetof(UChicken_AnimBP_C, IdleEndTimeTolerance) == 0x002C98, "Member 'UChicken_AnimBP_C::IdleEndTimeTolerance' has a wrong offset!");
static_assert(offsetof(UChicken_AnimBP_C, InitialIdleStartTime) == 0x002CA0, "Member 'UChicken_AnimBP_C::InitialIdleStartTime' has a wrong offset!");
static_assert(offsetof(UChicken_AnimBP_C, State) == 0x002CA8, "Member 'UChicken_AnimBP_C::State' has a wrong offset!");
static_assert(offsetof(UChicken_AnimBP_C, RunState) == 0x002CA9, "Member 'UChicken_AnimBP_C::RunState' has a wrong offset!");
static_assert(offsetof(UChicken_AnimBP_C, AttackLoop) == 0x002CAA, "Member 'UChicken_AnimBP_C::AttackLoop' has a wrong offset!");
static_assert(offsetof(UChicken_AnimBP_C, As_BP_Goose) == 0x002CB0, "Member 'UChicken_AnimBP_C::As_BP_Goose' has a wrong offset!");
static_assert(offsetof(UChicken_AnimBP_C, WorldVelocity) == 0x002CB8, "Member 'UChicken_AnimBP_C::WorldVelocity' has a wrong offset!");
static_assert(offsetof(UChicken_AnimBP_C, bIsJumping) == 0x002CD0, "Member 'UChicken_AnimBP_C::bIsJumping' has a wrong offset!");
static_assert(offsetof(UChicken_AnimBP_C, bIsFalling) == 0x002CD1, "Member 'UChicken_AnimBP_C::bIsFalling' has a wrong offset!");
static_assert(offsetof(UChicken_AnimBP_C, bInAir) == 0x002CD2, "Member 'UChicken_AnimBP_C::bInAir' has a wrong offset!");
static_assert(offsetof(UChicken_AnimBP_C, bMoving) == 0x002CD3, "Member 'UChicken_AnimBP_C::bMoving' has a wrong offset!");
static_assert(offsetof(UChicken_AnimBP_C, Speed) == 0x002CD8, "Member 'UChicken_AnimBP_C::Speed' has a wrong offset!");

}

