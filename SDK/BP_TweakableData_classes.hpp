#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_TweakableData

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "JP_structs.hpp"
#include "JP_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_TweakableData.BP_TweakableData_C
// 0x01A0 (0x0348 - 0x01A8)
class UBP_TweakableData_C final : public UTweakableData
{
public:
	int32                                         MaxWheelItems;                                     // 0x01A8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1AC[0x4];                                      // 0x01AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   StartItemDisplayName;                              // 0x01B0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FRuntimeFloatCurve                     ObjectiveCount;                                    // 0x01C0(0x0088)(Edit, BlueprintVisible, DisableEditOnInstance)
	int32                                         DirtToSpawn;                                       // 0x0248(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         DustToSpawn;                                       // 0x024C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         BranchesToSpawn;                                   // 0x0250(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           InProgressColor;                                   // 0x0254(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           SucceededColor;                                    // 0x0264(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         HouseEssentialCubeHealth;                          // 0x0274(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         FlowersToSpawn;                                    // 0x0278(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         TrashToSpawn;                                      // 0x027C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         NonObjectiveDustToSpawn;                           // 0x0280(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         NonObjectiveBranchesToSpawn;                       // 0x0284(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         NonObjectiveFlowersToSpawn;                        // 0x0288(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         NonObjectiveTrashToSpawn;                          // 0x028C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         TrashNeededForObjectiveComplete;                   // 0x0290(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         BranchesNeededForObjectiveComplete;                // 0x0294(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         FlowersNeededForObjectiveComplete;                 // 0x0298(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         DustNeededForObjectiveComplete;                    // 0x029C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         DirtNeededForObjectiveComplete;                    // 0x02A0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2A4[0x4];                                      // 0x02A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Shop_Upgrade_Duration;                             // 0x02A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        ResourcePileSpawnTimeNight;                        // 0x02B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        ResourcePileSpawnTimeDay;                          // 0x02B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         FenceHealth;                                       // 0x02C0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         WindowHealth;                                      // 0x02C4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        AtHomeRegenPerSecond;                              // 0x02C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        BaselineRespawnTime;                               // 0x02D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        RespawnTimeAddedPerDeath;                          // 0x02D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        MaxRespawnTimeByDeath;                             // 0x02E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        RespawnTimeByGameTimeStart;                        // 0x02E8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        RespawnTimeByGameTimeEnd;                          // 0x02F0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        MaxRespawnTimeByGameTime;                          // 0x02F8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         WindowHealthLvl2;                                  // 0x0300(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         WindowHealthLvl3;                                  // 0x0304(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         WindowLargeHealth;                                 // 0x0308(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         WindowLargeHealthLvl2;                             // 0x030C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         WindowLargeHealthLvl3;                             // 0x0310(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         WindowSkylightHealth;                              // 0x0314(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FKillReward>                    KillRewards_BountyHunterBonus;                     // 0x0318(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	double                                        SuddenDeathDuration;                               // 0x0328(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        EvaluateSuddenDeathInterval;                       // 0x0330(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         FenceHealthConstruction;                           // 0x0338(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_33C[0x4];                                      // 0x033C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        DefaultInCombatDuration;                           // 0x0340(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_TweakableData_C">();
	}
	static class UBP_TweakableData_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_TweakableData_C>();
	}
};
static_assert(alignof(UBP_TweakableData_C) == 0x000008, "Wrong alignment on UBP_TweakableData_C");
static_assert(sizeof(UBP_TweakableData_C) == 0x000348, "Wrong size on UBP_TweakableData_C");
static_assert(offsetof(UBP_TweakableData_C, MaxWheelItems) == 0x0001A8, "Member 'UBP_TweakableData_C::MaxWheelItems' has a wrong offset!");
static_assert(offsetof(UBP_TweakableData_C, StartItemDisplayName) == 0x0001B0, "Member 'UBP_TweakableData_C::StartItemDisplayName' has a wrong offset!");
static_assert(offsetof(UBP_TweakableData_C, ObjectiveCount) == 0x0001C0, "Member 'UBP_TweakableData_C::ObjectiveCount' has a wrong offset!");
static_assert(offsetof(UBP_TweakableData_C, DirtToSpawn) == 0x000248, "Member 'UBP_TweakableData_C::DirtToSpawn' has a wrong offset!");
static_assert(offsetof(UBP_TweakableData_C, DustToSpawn) == 0x00024C, "Member 'UBP_TweakableData_C::DustToSpawn' has a wrong offset!");
static_assert(offsetof(UBP_TweakableData_C, BranchesToSpawn) == 0x000250, "Member 'UBP_TweakableData_C::BranchesToSpawn' has a wrong offset!");
static_assert(offsetof(UBP_TweakableData_C, InProgressColor) == 0x000254, "Member 'UBP_TweakableData_C::InProgressColor' has a wrong offset!");
static_assert(offsetof(UBP_TweakableData_C, SucceededColor) == 0x000264, "Member 'UBP_TweakableData_C::SucceededColor' has a wrong offset!");
static_assert(offsetof(UBP_TweakableData_C, HouseEssentialCubeHealth) == 0x000274, "Member 'UBP_TweakableData_C::HouseEssentialCubeHealth' has a wrong offset!");
static_assert(offsetof(UBP_TweakableData_C, FlowersToSpawn) == 0x000278, "Member 'UBP_TweakableData_C::FlowersToSpawn' has a wrong offset!");
static_assert(offsetof(UBP_TweakableData_C, TrashToSpawn) == 0x00027C, "Member 'UBP_TweakableData_C::TrashToSpawn' has a wrong offset!");
static_assert(offsetof(UBP_TweakableData_C, NonObjectiveDustToSpawn) == 0x000280, "Member 'UBP_TweakableData_C::NonObjectiveDustToSpawn' has a wrong offset!");
static_assert(offsetof(UBP_TweakableData_C, NonObjectiveBranchesToSpawn) == 0x000284, "Member 'UBP_TweakableData_C::NonObjectiveBranchesToSpawn' has a wrong offset!");
static_assert(offsetof(UBP_TweakableData_C, NonObjectiveFlowersToSpawn) == 0x000288, "Member 'UBP_TweakableData_C::NonObjectiveFlowersToSpawn' has a wrong offset!");
static_assert(offsetof(UBP_TweakableData_C, NonObjectiveTrashToSpawn) == 0x00028C, "Member 'UBP_TweakableData_C::NonObjectiveTrashToSpawn' has a wrong offset!");
static_assert(offsetof(UBP_TweakableData_C, TrashNeededForObjectiveComplete) == 0x000290, "Member 'UBP_TweakableData_C::TrashNeededForObjectiveComplete' has a wrong offset!");
static_assert(offsetof(UBP_TweakableData_C, BranchesNeededForObjectiveComplete) == 0x000294, "Member 'UBP_TweakableData_C::BranchesNeededForObjectiveComplete' has a wrong offset!");
static_assert(offsetof(UBP_TweakableData_C, FlowersNeededForObjectiveComplete) == 0x000298, "Member 'UBP_TweakableData_C::FlowersNeededForObjectiveComplete' has a wrong offset!");
static_assert(offsetof(UBP_TweakableData_C, DustNeededForObjectiveComplete) == 0x00029C, "Member 'UBP_TweakableData_C::DustNeededForObjectiveComplete' has a wrong offset!");
static_assert(offsetof(UBP_TweakableData_C, DirtNeededForObjectiveComplete) == 0x0002A0, "Member 'UBP_TweakableData_C::DirtNeededForObjectiveComplete' has a wrong offset!");
static_assert(offsetof(UBP_TweakableData_C, Shop_Upgrade_Duration) == 0x0002A8, "Member 'UBP_TweakableData_C::Shop_Upgrade_Duration' has a wrong offset!");
static_assert(offsetof(UBP_TweakableData_C, ResourcePileSpawnTimeNight) == 0x0002B0, "Member 'UBP_TweakableData_C::ResourcePileSpawnTimeNight' has a wrong offset!");
static_assert(offsetof(UBP_TweakableData_C, ResourcePileSpawnTimeDay) == 0x0002B8, "Member 'UBP_TweakableData_C::ResourcePileSpawnTimeDay' has a wrong offset!");
static_assert(offsetof(UBP_TweakableData_C, FenceHealth) == 0x0002C0, "Member 'UBP_TweakableData_C::FenceHealth' has a wrong offset!");
static_assert(offsetof(UBP_TweakableData_C, WindowHealth) == 0x0002C4, "Member 'UBP_TweakableData_C::WindowHealth' has a wrong offset!");
static_assert(offsetof(UBP_TweakableData_C, AtHomeRegenPerSecond) == 0x0002C8, "Member 'UBP_TweakableData_C::AtHomeRegenPerSecond' has a wrong offset!");
static_assert(offsetof(UBP_TweakableData_C, BaselineRespawnTime) == 0x0002D0, "Member 'UBP_TweakableData_C::BaselineRespawnTime' has a wrong offset!");
static_assert(offsetof(UBP_TweakableData_C, RespawnTimeAddedPerDeath) == 0x0002D8, "Member 'UBP_TweakableData_C::RespawnTimeAddedPerDeath' has a wrong offset!");
static_assert(offsetof(UBP_TweakableData_C, MaxRespawnTimeByDeath) == 0x0002E0, "Member 'UBP_TweakableData_C::MaxRespawnTimeByDeath' has a wrong offset!");
static_assert(offsetof(UBP_TweakableData_C, RespawnTimeByGameTimeStart) == 0x0002E8, "Member 'UBP_TweakableData_C::RespawnTimeByGameTimeStart' has a wrong offset!");
static_assert(offsetof(UBP_TweakableData_C, RespawnTimeByGameTimeEnd) == 0x0002F0, "Member 'UBP_TweakableData_C::RespawnTimeByGameTimeEnd' has a wrong offset!");
static_assert(offsetof(UBP_TweakableData_C, MaxRespawnTimeByGameTime) == 0x0002F8, "Member 'UBP_TweakableData_C::MaxRespawnTimeByGameTime' has a wrong offset!");
static_assert(offsetof(UBP_TweakableData_C, WindowHealthLvl2) == 0x000300, "Member 'UBP_TweakableData_C::WindowHealthLvl2' has a wrong offset!");
static_assert(offsetof(UBP_TweakableData_C, WindowHealthLvl3) == 0x000304, "Member 'UBP_TweakableData_C::WindowHealthLvl3' has a wrong offset!");
static_assert(offsetof(UBP_TweakableData_C, WindowLargeHealth) == 0x000308, "Member 'UBP_TweakableData_C::WindowLargeHealth' has a wrong offset!");
static_assert(offsetof(UBP_TweakableData_C, WindowLargeHealthLvl2) == 0x00030C, "Member 'UBP_TweakableData_C::WindowLargeHealthLvl2' has a wrong offset!");
static_assert(offsetof(UBP_TweakableData_C, WindowLargeHealthLvl3) == 0x000310, "Member 'UBP_TweakableData_C::WindowLargeHealthLvl3' has a wrong offset!");
static_assert(offsetof(UBP_TweakableData_C, WindowSkylightHealth) == 0x000314, "Member 'UBP_TweakableData_C::WindowSkylightHealth' has a wrong offset!");
static_assert(offsetof(UBP_TweakableData_C, KillRewards_BountyHunterBonus) == 0x000318, "Member 'UBP_TweakableData_C::KillRewards_BountyHunterBonus' has a wrong offset!");
static_assert(offsetof(UBP_TweakableData_C, SuddenDeathDuration) == 0x000328, "Member 'UBP_TweakableData_C::SuddenDeathDuration' has a wrong offset!");
static_assert(offsetof(UBP_TweakableData_C, EvaluateSuddenDeathInterval) == 0x000330, "Member 'UBP_TweakableData_C::EvaluateSuddenDeathInterval' has a wrong offset!");
static_assert(offsetof(UBP_TweakableData_C, FenceHealthConstruction) == 0x000338, "Member 'UBP_TweakableData_C::FenceHealthConstruction' has a wrong offset!");
static_assert(offsetof(UBP_TweakableData_C, DefaultInCombatDuration) == 0x000340, "Member 'UBP_TweakableData_C::DefaultInCombatDuration' has a wrong offset!");

}

