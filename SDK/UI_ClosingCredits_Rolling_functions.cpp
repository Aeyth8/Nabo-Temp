#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UI_ClosingCredits_Rolling

#include "Basic.hpp"

#include "UI_ClosingCredits_Rolling_classes.hpp"
#include "UI_ClosingCredits_Rolling_parameters.hpp"


namespace SDK
{

// Function UI_ClosingCredits_Rolling.UI_ClosingCredits_Rolling_C.Add Vertical Spacer
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  Size                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUI_ClosingCredits_Rolling_C::Add_Vertical_Spacer(double Size)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_ClosingCredits_Rolling_C", "Add Vertical Spacer");

	Params::UI_ClosingCredits_Rolling_C_Add_Vertical_Spacer Parms{};

	Parms.Size = Size;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_ClosingCredits_Rolling.UI_ClosingCredits_Rolling_C.CollectDataTableSequence
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UUI_ClosingCredits_Rolling_C::CollectDataTableSequence()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_ClosingCredits_Rolling_C", "CollectDataTableSequence");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UI_ClosingCredits_Rolling.UI_ClosingCredits_Rolling_C.Construct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UUI_ClosingCredits_Rolling_C::Construct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_ClosingCredits_Rolling_C", "Construct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UI_ClosingCredits_Rolling.UI_ClosingCredits_Rolling_C.CreditsEnd
// (Public, BlueprintCallable, BlueprintEvent)

void UUI_ClosingCredits_Rolling_C::CreditsEnd()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_ClosingCredits_Rolling_C", "CreditsEnd");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UI_ClosingCredits_Rolling.UI_ClosingCredits_Rolling_C.Destruct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UUI_ClosingCredits_Rolling_C::Destruct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_ClosingCredits_Rolling_C", "Destruct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UI_ClosingCredits_Rolling.UI_ClosingCredits_Rolling_C.ExecuteUbergraph_UI_ClosingCredits_Rolling
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUI_ClosingCredits_Rolling_C::ExecuteUbergraph_UI_ClosingCredits_Rolling(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_ClosingCredits_Rolling_C", "ExecuteUbergraph_UI_ClosingCredits_Rolling");

	Params::UI_ClosingCredits_Rolling_C_ExecuteUbergraph_UI_ClosingCredits_Rolling Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_ClosingCredits_Rolling.UI_ClosingCredits_Rolling_C.FillProgressBar
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

float UUI_ClosingCredits_Rolling_C::FillProgressBar()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_ClosingCredits_Rolling_C", "FillProgressBar");

	Params::UI_ClosingCredits_Rolling_C_FillProgressBar Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function UI_ClosingCredits_Rolling.UI_ClosingCredits_Rolling_C.HorizontalAlignAsVerticalBoxSlot
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UPanelWidget*                     Vertical_Box                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// EHorizontalAlignment                    InHorizontalAlignment                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUI_ClosingCredits_Rolling_C::HorizontalAlignAsVerticalBoxSlot(class UPanelWidget* Vertical_Box, EHorizontalAlignment InHorizontalAlignment)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_ClosingCredits_Rolling_C", "HorizontalAlignAsVerticalBoxSlot");

	Params::UI_ClosingCredits_Rolling_C_HorizontalAlignAsVerticalBoxSlot Parms{};

	Parms.Vertical_Box = Vertical_Box;
	Parms.InHorizontalAlignment = InHorizontalAlignment;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_ClosingCredits_Rolling.UI_ClosingCredits_Rolling_C.InpActEvt_IA_ASkipSplashScreen_K2Node_EnhancedInputActionEvent_0
// (BlueprintEvent)
// Parameters:
// struct FInputActionValue                ActionValue                                            (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
// float                                   ElapsedTime                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   TriggeredTime                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UInputAction*                     SourceAction                                           (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UUI_ClosingCredits_Rolling_C::InpActEvt_IA_ASkipSplashScreen_K2Node_EnhancedInputActionEvent_0(const struct FInputActionValue& ActionValue, float ElapsedTime, float TriggeredTime, const class UInputAction* SourceAction)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_ClosingCredits_Rolling_C", "InpActEvt_IA_ASkipSplashScreen_K2Node_EnhancedInputActionEvent_0");

	Params::UI_ClosingCredits_Rolling_C_InpActEvt_IA_ASkipSplashScreen_K2Node_EnhancedInputActionEvent_0 Parms{};

	Parms.ActionValue = std::move(ActionValue);
	Parms.ElapsedTime = ElapsedTime;
	Parms.TriggeredTime = TriggeredTime;
	Parms.SourceAction = SourceAction;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_ClosingCredits_Rolling.UI_ClosingCredits_Rolling_C.InpActEvt_IA_ASkipSplashScreen_K2Node_EnhancedInputActionEvent_1
// (BlueprintEvent)
// Parameters:
// struct FInputActionValue                ActionValue                                            (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
// float                                   ElapsedTime                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   TriggeredTime                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UInputAction*                     SourceAction                                           (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UUI_ClosingCredits_Rolling_C::InpActEvt_IA_ASkipSplashScreen_K2Node_EnhancedInputActionEvent_1(const struct FInputActionValue& ActionValue, float ElapsedTime, float TriggeredTime, const class UInputAction* SourceAction)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_ClosingCredits_Rolling_C", "InpActEvt_IA_ASkipSplashScreen_K2Node_EnhancedInputActionEvent_1");

	Params::UI_ClosingCredits_Rolling_C_InpActEvt_IA_ASkipSplashScreen_K2Node_EnhancedInputActionEvent_1 Parms{};

	Parms.ActionValue = std::move(ActionValue);
	Parms.ElapsedTime = ElapsedTime;
	Parms.TriggeredTime = TriggeredTime;
	Parms.SourceAction = SourceAction;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_ClosingCredits_Rolling.UI_ClosingCredits_Rolling_C.InpActEvt_IA_ASkipSplashScreen_K2Node_EnhancedInputActionEvent_2
// (BlueprintEvent)
// Parameters:
// struct FInputActionValue                ActionValue                                            (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
// float                                   ElapsedTime                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   TriggeredTime                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UInputAction*                     SourceAction                                           (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UUI_ClosingCredits_Rolling_C::InpActEvt_IA_ASkipSplashScreen_K2Node_EnhancedInputActionEvent_2(const struct FInputActionValue& ActionValue, float ElapsedTime, float TriggeredTime, const class UInputAction* SourceAction)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_ClosingCredits_Rolling_C", "InpActEvt_IA_ASkipSplashScreen_K2Node_EnhancedInputActionEvent_2");

	Params::UI_ClosingCredits_Rolling_C_InpActEvt_IA_ASkipSplashScreen_K2Node_EnhancedInputActionEvent_2 Parms{};

	Parms.ActionValue = std::move(ActionValue);
	Parms.ElapsedTime = ElapsedTime;
	Parms.TriggeredTime = TriggeredTime;
	Parms.SourceAction = SourceAction;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_ClosingCredits_Rolling.UI_ClosingCredits_Rolling_C.MediaAndBackground
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UUI_ClosingCredits_Rolling_C::MediaAndBackground()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_ClosingCredits_Rolling_C", "MediaAndBackground");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UI_ClosingCredits_Rolling.UI_ClosingCredits_Rolling_C.Other Settings
// (Public, BlueprintCallable, BlueprintEvent)

void UUI_ClosingCredits_Rolling_C::Other_Settings()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_ClosingCredits_Rolling_C", "Other Settings");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UI_ClosingCredits_Rolling.UI_ClosingCredits_Rolling_C.PreConstruct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// bool                                    IsDesignTime                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUI_ClosingCredits_Rolling_C::PreConstruct(bool IsDesignTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_ClosingCredits_Rolling_C", "PreConstruct");

	Params::UI_ClosingCredits_Rolling_C_PreConstruct Parms{};

	Parms.IsDesignTime = IsDesignTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_ClosingCredits_Rolling.UI_ClosingCredits_Rolling_C.RollCredits
// (BlueprintCallable, BlueprintEvent)

void UUI_ClosingCredits_Rolling_C::RollCredits()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_ClosingCredits_Rolling_C", "RollCredits");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UI_ClosingCredits_Rolling.UI_ClosingCredits_Rolling_C.SetAlignment
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UVerticalBoxSlot*                 Vertical_Box_Slot                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class UUI_Role_C*                       UI_Role                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UUI_ClosingCredits_Rolling_C::SetAlignment(class UVerticalBoxSlot* Vertical_Box_Slot, class UUI_Role_C* UI_Role)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_ClosingCredits_Rolling_C", "SetAlignment");

	Params::UI_ClosingCredits_Rolling_C_SetAlignment Parms{};

	Parms.Vertical_Box_Slot = Vertical_Box_Slot;
	Parms.UI_Role = UI_Role;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_ClosingCredits_Rolling.UI_ClosingCredits_Rolling_C.SetGameInputMode
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// E_InputMode                             Input_Mode_0                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUI_ClosingCredits_Rolling_C::SetGameInputMode(E_InputMode Input_Mode_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_ClosingCredits_Rolling_C", "SetGameInputMode");

	Params::UI_ClosingCredits_Rolling_C_SetGameInputMode Parms{};

	Parms.Input_Mode_0 = Input_Mode_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_ClosingCredits_Rolling.UI_ClosingCredits_Rolling_C.Slideshow
// (BlueprintCallable, BlueprintEvent)

void UUI_ClosingCredits_Rolling_C::Slideshow()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_ClosingCredits_Rolling_C", "Slideshow");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UI_ClosingCredits_Rolling.UI_ClosingCredits_Rolling_C.Tick
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// struct FGeometry                        MyGeometry                                             (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// float                                   InDeltaTime                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUI_ClosingCredits_Rolling_C::Tick(const struct FGeometry& MyGeometry, float InDeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_ClosingCredits_Rolling_C", "Tick");

	Params::UI_ClosingCredits_Rolling_C_Tick Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.InDeltaTime = InDeltaTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_ClosingCredits_Rolling.UI_ClosingCredits_Rolling_C.UpdateSlide
// (BlueprintCallable, BlueprintEvent)

void UUI_ClosingCredits_Rolling_C::UpdateSlide()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_ClosingCredits_Rolling_C", "UpdateSlide");

	UObject::ProcessEvent(Func, nullptr);
}

}

