#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: LevelInstanceManager

#include "Basic.hpp"

#include "LevelInstanceManager_classes.hpp"
#include "LevelInstanceManager_parameters.hpp"


namespace SDK
{

// Function LevelInstanceManager.LevelInstanceManager_C.AllHousesLoaded
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    Return                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ALevelInstanceManager_C::AllHousesLoaded(bool* Return)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LevelInstanceManager_C", "AllHousesLoaded");

	Params::LevelInstanceManager_C_AllHousesLoaded Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Return != nullptr)
		*Return = Parms.Return;
}


// Function LevelInstanceManager.LevelInstanceManager_C.CalculateLevelsLoadTime
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash)

class FString ALevelInstanceManager_C::CalculateLevelsLoadTime()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LevelInstanceManager_C", "CalculateLevelsLoadTime");

	Params::LevelInstanceManager_C_CalculateLevelsLoadTime Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function LevelInstanceManager.LevelInstanceManager_C.ExecuteUbergraph_LevelInstanceManager
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ALevelInstanceManager_C::ExecuteUbergraph_LevelInstanceManager(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LevelInstanceManager_C", "ExecuteUbergraph_LevelInstanceManager");

	Params::LevelInstanceManager_C_ExecuteUbergraph_LevelInstanceManager Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function LevelInstanceManager.LevelInstanceManager_C.Fail Safe
// (BlueprintCallable, BlueprintEvent)

void ALevelInstanceManager_C::Fail_Safe()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LevelInstanceManager_C", "Fail Safe");

	UObject::ProcessEvent(Func, nullptr);
}


// Function LevelInstanceManager.LevelInstanceManager_C.GetGroundskeeperFromTeamID
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// uint8                                   TeamIDToLookFor                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class Abp_groundskeeper_C*              Return                                                 (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ALevelInstanceManager_C::GetGroundskeeperFromTeamID(uint8 TeamIDToLookFor, class Abp_groundskeeper_C** Return)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LevelInstanceManager_C", "GetGroundskeeperFromTeamID");

	Params::LevelInstanceManager_C_GetGroundskeeperFromTeamID Parms{};

	Parms.TeamIDToLookFor = TeamIDToLookFor;

	UObject::ProcessEvent(Func, &Parms);

	if (Return != nullptr)
		*Return = Parms.Return;
}


// Function LevelInstanceManager.LevelInstanceManager_C.GetHouseName
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// uint8                                   HouseIndex                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FName                             HouseName                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ALevelInstanceManager_C::GetHouseName(uint8 HouseIndex, class FName* HouseName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LevelInstanceManager_C", "GetHouseName");

	Params::LevelInstanceManager_C_GetHouseName Parms{};

	Parms.HouseIndex = HouseIndex;

	UObject::ProcessEvent(Func, &Parms);

	if (HouseName != nullptr)
		*HouseName = Parms.HouseName;
}


// Function LevelInstanceManager.LevelInstanceManager_C.GetStoredHouseDefinitionForTeam
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// uint8                                   TeamId                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TSoftObjectPtr<class UHouseDefinition>  OutSoftHouseDefinition                                 (Parm, OutParm, UObjectWrapper, HasGetValueTypeHash)

void ALevelInstanceManager_C::GetStoredHouseDefinitionForTeam(uint8 TeamId, TSoftObjectPtr<class UHouseDefinition>* OutSoftHouseDefinition)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LevelInstanceManager_C", "GetStoredHouseDefinitionForTeam");

	Params::LevelInstanceManager_C_GetStoredHouseDefinitionForTeam Parms{};

	Parms.TeamId = TeamId;

	UObject::ProcessEvent(Func, &Parms);

	if (OutSoftHouseDefinition != nullptr)
		*OutSoftHouseDefinition = Parms.OutSoftHouseDefinition;
}


// Function LevelInstanceManager.LevelInstanceManager_C.Load Next House
// (BlueprintCallable, BlueprintEvent)

void ALevelInstanceManager_C::Load_Next_House()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LevelInstanceManager_C", "Load Next House");

	UObject::ProcessEvent(Func, nullptr);
}


// Function LevelInstanceManager.LevelInstanceManager_C.LoadLevelInstanceToGroundsKeeper
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// uint8                                   TeamId                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TSoftObjectPtr<class UHouseDefinition>  LevelName                                              (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
// class ULevelStreamingDynamic*           LevelInstance                                          (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ALevelInstanceManager_C::LoadLevelInstanceToGroundsKeeper(uint8 TeamId, TSoftObjectPtr<class UHouseDefinition> LevelName, class ULevelStreamingDynamic** LevelInstance)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LevelInstanceManager_C", "LoadLevelInstanceToGroundsKeeper");

	Params::LevelInstanceManager_C_LoadLevelInstanceToGroundsKeeper Parms{};

	Parms.TeamId = TeamId;
	Parms.LevelName = LevelName;

	UObject::ProcessEvent(Func, &Parms);

	if (LevelInstance != nullptr)
		*LevelInstance = Parms.LevelInstance;
}


// Function LevelInstanceManager.LevelInstanceManager_C.On_HousesLoaded__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)

void ALevelInstanceManager_C::On_HousesLoaded__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LevelInstanceManager_C", "On_HousesLoaded__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function LevelInstanceManager.LevelInstanceManager_C.OnAllLevelsLoaded
// (BlueprintCallable, BlueprintEvent)

void ALevelInstanceManager_C::OnAllLevelsLoaded()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LevelInstanceManager_C", "OnAllLevelsLoaded");

	UObject::ProcessEvent(Func, nullptr);
}


// Function LevelInstanceManager.LevelInstanceManager_C.OnEnded_95EFB67846315BD3980A3EADC599285D
// (BlueprintCallable, BlueprintEvent)

void ALevelInstanceManager_C::OnEnded_95EFB67846315BD3980A3EADC599285D()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LevelInstanceManager_C", "OnEnded_95EFB67846315BD3980A3EADC599285D");

	UObject::ProcessEvent(Func, nullptr);
}


// Function LevelInstanceManager.LevelInstanceManager_C.OnEnded_BF35C9D44C228AD26543DE9501787E5B
// (BlueprintCallable, BlueprintEvent)

void ALevelInstanceManager_C::OnEnded_BF35C9D44C228AD26543DE9501787E5B()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LevelInstanceManager_C", "OnEnded_BF35C9D44C228AD26543DE9501787E5B");

	UObject::ProcessEvent(Func, nullptr);
}


// Function LevelInstanceManager.LevelInstanceManager_C.OnLevelLoaded
// (BlueprintCallable, BlueprintEvent)

void ALevelInstanceManager_C::OnLevelLoaded()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LevelInstanceManager_C", "OnLevelLoaded");

	UObject::ProcessEvent(Func, nullptr);
}


// Function LevelInstanceManager.LevelInstanceManager_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ALevelInstanceManager_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LevelInstanceManager_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function LevelInstanceManager.LevelInstanceManager_C.Reload Runtime Reloadable Actors
// (BlueprintCallable, BlueprintEvent)

void ALevelInstanceManager_C::Reload_Runtime_Reloadable_Actors()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LevelInstanceManager_C", "Reload Runtime Reloadable Actors");

	UObject::ProcessEvent(Func, nullptr);
}


// Function LevelInstanceManager.LevelInstanceManager_C.ReloadRuntimeReloadableActor
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Actor                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ALevelInstanceManager_C::ReloadRuntimeReloadableActor(class AActor* Actor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LevelInstanceManager_C", "ReloadRuntimeReloadableActor");

	Params::LevelInstanceManager_C_ReloadRuntimeReloadableActor Parms{};

	Parms.Actor = Actor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function LevelInstanceManager.LevelInstanceManager_C.Spawn Houses
// (BlueprintCallable, BlueprintEvent)

void ALevelInstanceManager_C::Spawn_Houses()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LevelInstanceManager_C", "Spawn Houses");

	UObject::ProcessEvent(Func, nullptr);
}


// Function LevelInstanceManager.LevelInstanceManager_C.StoreLevelInstanceManagers
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ALevelInstanceManager_C::StoreLevelInstanceManagers()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LevelInstanceManager_C", "StoreLevelInstanceManagers");

	UObject::ProcessEvent(Func, nullptr);
}

}

