#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Window_Level3

#include "Basic.hpp"


namespace SDK::Params
{

// Function BP_Window_Level3.BP_Window_Level3_C.AddMeshBounceComponents
// 0x0010 (0x0010 - 0x0000)
struct BP_Window_Level3_C_AddMeshBounceComponents final
{
public:
	TArray<class UMeshComponent*>                 K2Node_MakeArray_Array;                            // 0x0000(0x0010)(ReferenceParm, ContainsInstancedReference)
};
static_assert(alignof(BP_Window_Level3_C_AddMeshBounceComponents) == 0x000008, "Wrong alignment on BP_Window_Level3_C_AddMeshBounceComponents");
static_assert(sizeof(BP_Window_Level3_C_AddMeshBounceComponents) == 0x000010, "Wrong size on BP_Window_Level3_C_AddMeshBounceComponents");
static_assert(offsetof(BP_Window_Level3_C_AddMeshBounceComponents, K2Node_MakeArray_Array) == 0x000000, "Member 'BP_Window_Level3_C_AddMeshBounceComponents::K2Node_MakeArray_Array' has a wrong offset!");

// Function BP_Window_Level3.BP_Window_Level3_C.ExecuteUbergraph_BP_Window_Level3
// 0x0008 (0x0008 - 0x0000)
struct BP_Window_Level3_C_ExecuteUbergraph_BP_Window_Level3 final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPlaying_ReturnValue;                    // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Window_Level3_C_ExecuteUbergraph_BP_Window_Level3) == 0x000004, "Wrong alignment on BP_Window_Level3_C_ExecuteUbergraph_BP_Window_Level3");
static_assert(sizeof(BP_Window_Level3_C_ExecuteUbergraph_BP_Window_Level3) == 0x000008, "Wrong size on BP_Window_Level3_C_ExecuteUbergraph_BP_Window_Level3");
static_assert(offsetof(BP_Window_Level3_C_ExecuteUbergraph_BP_Window_Level3, EntryPoint) == 0x000000, "Member 'BP_Window_Level3_C_ExecuteUbergraph_BP_Window_Level3::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_Window_Level3_C_ExecuteUbergraph_BP_Window_Level3, CallFunc_IsPlaying_ReturnValue) == 0x000004, "Member 'BP_Window_Level3_C_ExecuteUbergraph_BP_Window_Level3::CallFunc_IsPlaying_ReturnValue' has a wrong offset!");

// Function BP_Window_Level3.BP_Window_Level3_C.GetWindowBaseHealth
// 0x0018 (0x0018 - 0x0000)
struct BP_Window_Level3_C_GetWindowBaseHealth final
{
public:
	double                                        Health;                                            // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_TweakableData_C*                    CallFunc_Get_BP_Tweakable_Data_AsBP_Tweakable_Data; // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Window_Level3_C_GetWindowBaseHealth) == 0x000008, "Wrong alignment on BP_Window_Level3_C_GetWindowBaseHealth");
static_assert(sizeof(BP_Window_Level3_C_GetWindowBaseHealth) == 0x000018, "Wrong size on BP_Window_Level3_C_GetWindowBaseHealth");
static_assert(offsetof(BP_Window_Level3_C_GetWindowBaseHealth, Health) == 0x000000, "Member 'BP_Window_Level3_C_GetWindowBaseHealth::Health' has a wrong offset!");
static_assert(offsetof(BP_Window_Level3_C_GetWindowBaseHealth, CallFunc_Get_BP_Tweakable_Data_AsBP_Tweakable_Data) == 0x000008, "Member 'BP_Window_Level3_C_GetWindowBaseHealth::CallFunc_Get_BP_Tweakable_Data_AsBP_Tweakable_Data' has a wrong offset!");
static_assert(offsetof(BP_Window_Level3_C_GetWindowBaseHealth, CallFunc_Conv_IntToDouble_ReturnValue) == 0x000010, "Member 'BP_Window_Level3_C_GetWindowBaseHealth::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");

// Function BP_Window_Level3.BP_Window_Level3_C.IsNotLockpickable
// 0x0001 (0x0001 - 0x0000)
struct BP_Window_Level3_C_IsNotLockpickable final
{
public:
	bool                                          Param_IsNotLockpickable_0;                         // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Window_Level3_C_IsNotLockpickable) == 0x000001, "Wrong alignment on BP_Window_Level3_C_IsNotLockpickable");
static_assert(sizeof(BP_Window_Level3_C_IsNotLockpickable) == 0x000001, "Wrong size on BP_Window_Level3_C_IsNotLockpickable");
static_assert(offsetof(BP_Window_Level3_C_IsNotLockpickable, Param_IsNotLockpickable_0) == 0x000000, "Member 'BP_Window_Level3_C_IsNotLockpickable::Param_IsNotLockpickable_0' has a wrong offset!");

// Function BP_Window_Level3.BP_Window_Level3_C.WindowSabotaged
// 0x0001 (0x0001 - 0x0000)
struct BP_Window_Level3_C_WindowSabotaged final
{
public:
	bool                                          TURR;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Window_Level3_C_WindowSabotaged) == 0x000001, "Wrong alignment on BP_Window_Level3_C_WindowSabotaged");
static_assert(sizeof(BP_Window_Level3_C_WindowSabotaged) == 0x000001, "Wrong size on BP_Window_Level3_C_WindowSabotaged");
static_assert(offsetof(BP_Window_Level3_C_WindowSabotaged, TURR) == 0x000000, "Member 'BP_Window_Level3_C_WindowSabotaged::TURR' has a wrong offset!");

// Function BP_Window_Level3.BP_Window_Level3_C.IsAvailableForInteraction
// 0x0018 (0x0018 - 0x0000)
struct BP_Window_Level3_C_IsAvailableForInteraction final
{
public:
	class AActor*                                 InteractingActor;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    InteractionComponent;                              // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Window_Level3_C_IsAvailableForInteraction) == 0x000008, "Wrong alignment on BP_Window_Level3_C_IsAvailableForInteraction");
static_assert(sizeof(BP_Window_Level3_C_IsAvailableForInteraction) == 0x000018, "Wrong size on BP_Window_Level3_C_IsAvailableForInteraction");
static_assert(offsetof(BP_Window_Level3_C_IsAvailableForInteraction, InteractingActor) == 0x000000, "Member 'BP_Window_Level3_C_IsAvailableForInteraction::InteractingActor' has a wrong offset!");
static_assert(offsetof(BP_Window_Level3_C_IsAvailableForInteraction, InteractionComponent) == 0x000008, "Member 'BP_Window_Level3_C_IsAvailableForInteraction::InteractionComponent' has a wrong offset!");
static_assert(offsetof(BP_Window_Level3_C_IsAvailableForInteraction, ReturnValue) == 0x000010, "Member 'BP_Window_Level3_C_IsAvailableForInteraction::ReturnValue' has a wrong offset!");

}

