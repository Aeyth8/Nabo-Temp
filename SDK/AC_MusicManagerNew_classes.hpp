#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: AC_MusicManagerNew

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "JP_structs.hpp"
#include "JP_classes.hpp"
#include "E_TimeOfDay_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass AC_MusicManagerNew.AC_MusicManagerNew_C
// 0x0018 (0x00C0 - 0x00A8)
class UAC_MusicManagerNew_C final : public UMusicManagerComponent
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x00A8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UAudioComponent*                        InGameMusic;                                       // 0x00B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	float                                         FadeOutDuration;                                   // 0x00B8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void Attach_Audio_ComponentTo_Jackhammer(class USceneComponent* ComponentToAttachTo);
	void ExecuteUbergraph_AC_MusicManagerNew(int32 EntryPoint);
	void On_Client_TimeOfDayChange_Event(bool InitialState, E_TimeOfDay TimeOfDay);
	void On_IntroMusicFinished_Event();
	void OnEnded_56242F7E4CC2083A5E67E6AC6C0CFDBD();
	void Play_Music_To_Current_State();
	void ReceiveBeginPlay();
	void Refresh_Music();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"AC_MusicManagerNew_C">();
	}
	static class UAC_MusicManagerNew_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAC_MusicManagerNew_C>();
	}
};
static_assert(alignof(UAC_MusicManagerNew_C) == 0x000008, "Wrong alignment on UAC_MusicManagerNew_C");
static_assert(sizeof(UAC_MusicManagerNew_C) == 0x0000C0, "Wrong size on UAC_MusicManagerNew_C");
static_assert(offsetof(UAC_MusicManagerNew_C, UberGraphFrame) == 0x0000A8, "Member 'UAC_MusicManagerNew_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UAC_MusicManagerNew_C, InGameMusic) == 0x0000B0, "Member 'UAC_MusicManagerNew_C::InGameMusic' has a wrong offset!");
static_assert(offsetof(UAC_MusicManagerNew_C, FadeOutDuration) == 0x0000B8, "Member 'UAC_MusicManagerNew_C::FadeOutDuration' has a wrong offset!");

}

