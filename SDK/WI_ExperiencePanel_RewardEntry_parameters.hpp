#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WI_ExperiencePanel_RewardEntry

#include "Basic.hpp"

#include "UMG_structs.hpp"
#include "GameplayTags_structs.hpp"


namespace SDK::Params
{

// Function WI_ExperiencePanel_RewardEntry.WI_ExperiencePanel_RewardEntry_C.ExecuteUbergraph_WI_ExperiencePanel_RewardEntry
// 0x00A8 (0x00A8 - 0x0000)
struct WI_ExperiencePanel_RewardEntry_C_ExecuteUbergraph_WI_ExperiencePanel_RewardEntry final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UOnlineCurrency>         K2Node_CustomEvent_CurrencySoftAsset;              // 0x0018(0x0028)(UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_LoadAsync;                      // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_LoadAsset_Blocking_ReturnValue;           // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidSoftObjectReference_ReturnValue;   // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UOnlineCurrency*                        K2Node_DynamicCast_AsOnline_Currency;              // 0x0058(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                Temp_object_Variable;                              // 0x0068(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UOnlineCurrency*                        K2Node_DynamicCast_AsOnline_Currency_1;            // 0x0070(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_79[0x7];                                       // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                K2Node_CustomEvent_Loaded;                         // 0x0080(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UObject* Loaded)>        K2Node_CreateDelegate_OutputDelegate;              // 0x0088(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue_1;           // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetCurrentValue_NewValue_ImplicitCast;    // 0x00A0(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetCurrentValue_NewValue_ImplicitCast_1;  // 0x00A4(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WI_ExperiencePanel_RewardEntry_C_ExecuteUbergraph_WI_ExperiencePanel_RewardEntry) == 0x000008, "Wrong alignment on WI_ExperiencePanel_RewardEntry_C_ExecuteUbergraph_WI_ExperiencePanel_RewardEntry");
static_assert(sizeof(WI_ExperiencePanel_RewardEntry_C_ExecuteUbergraph_WI_ExperiencePanel_RewardEntry) == 0x0000A8, "Wrong size on WI_ExperiencePanel_RewardEntry_C_ExecuteUbergraph_WI_ExperiencePanel_RewardEntry");
static_assert(offsetof(WI_ExperiencePanel_RewardEntry_C_ExecuteUbergraph_WI_ExperiencePanel_RewardEntry, EntryPoint) == 0x000000, "Member 'WI_ExperiencePanel_RewardEntry_C_ExecuteUbergraph_WI_ExperiencePanel_RewardEntry::EntryPoint' has a wrong offset!");
static_assert(offsetof(WI_ExperiencePanel_RewardEntry_C_ExecuteUbergraph_WI_ExperiencePanel_RewardEntry, CallFunc_Conv_IntToDouble_ReturnValue) == 0x000008, "Member 'WI_ExperiencePanel_RewardEntry_C_ExecuteUbergraph_WI_ExperiencePanel_RewardEntry::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WI_ExperiencePanel_RewardEntry_C_ExecuteUbergraph_WI_ExperiencePanel_RewardEntry, K2Node_Event_IsDesignTime) == 0x000010, "Member 'WI_ExperiencePanel_RewardEntry_C_ExecuteUbergraph_WI_ExperiencePanel_RewardEntry::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(WI_ExperiencePanel_RewardEntry_C_ExecuteUbergraph_WI_ExperiencePanel_RewardEntry, K2Node_CustomEvent_CurrencySoftAsset) == 0x000018, "Member 'WI_ExperiencePanel_RewardEntry_C_ExecuteUbergraph_WI_ExperiencePanel_RewardEntry::K2Node_CustomEvent_CurrencySoftAsset' has a wrong offset!");
static_assert(offsetof(WI_ExperiencePanel_RewardEntry_C_ExecuteUbergraph_WI_ExperiencePanel_RewardEntry, K2Node_CustomEvent_LoadAsync) == 0x000040, "Member 'WI_ExperiencePanel_RewardEntry_C_ExecuteUbergraph_WI_ExperiencePanel_RewardEntry::K2Node_CustomEvent_LoadAsync' has a wrong offset!");
static_assert(offsetof(WI_ExperiencePanel_RewardEntry_C_ExecuteUbergraph_WI_ExperiencePanel_RewardEntry, CallFunc_LoadAsset_Blocking_ReturnValue) == 0x000048, "Member 'WI_ExperiencePanel_RewardEntry_C_ExecuteUbergraph_WI_ExperiencePanel_RewardEntry::CallFunc_LoadAsset_Blocking_ReturnValue' has a wrong offset!");
static_assert(offsetof(WI_ExperiencePanel_RewardEntry_C_ExecuteUbergraph_WI_ExperiencePanel_RewardEntry, CallFunc_IsValidSoftObjectReference_ReturnValue) == 0x000050, "Member 'WI_ExperiencePanel_RewardEntry_C_ExecuteUbergraph_WI_ExperiencePanel_RewardEntry::CallFunc_IsValidSoftObjectReference_ReturnValue' has a wrong offset!");
static_assert(offsetof(WI_ExperiencePanel_RewardEntry_C_ExecuteUbergraph_WI_ExperiencePanel_RewardEntry, K2Node_DynamicCast_AsOnline_Currency) == 0x000058, "Member 'WI_ExperiencePanel_RewardEntry_C_ExecuteUbergraph_WI_ExperiencePanel_RewardEntry::K2Node_DynamicCast_AsOnline_Currency' has a wrong offset!");
static_assert(offsetof(WI_ExperiencePanel_RewardEntry_C_ExecuteUbergraph_WI_ExperiencePanel_RewardEntry, K2Node_DynamicCast_bSuccess) == 0x000060, "Member 'WI_ExperiencePanel_RewardEntry_C_ExecuteUbergraph_WI_ExperiencePanel_RewardEntry::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WI_ExperiencePanel_RewardEntry_C_ExecuteUbergraph_WI_ExperiencePanel_RewardEntry, Temp_object_Variable) == 0x000068, "Member 'WI_ExperiencePanel_RewardEntry_C_ExecuteUbergraph_WI_ExperiencePanel_RewardEntry::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(WI_ExperiencePanel_RewardEntry_C_ExecuteUbergraph_WI_ExperiencePanel_RewardEntry, K2Node_DynamicCast_AsOnline_Currency_1) == 0x000070, "Member 'WI_ExperiencePanel_RewardEntry_C_ExecuteUbergraph_WI_ExperiencePanel_RewardEntry::K2Node_DynamicCast_AsOnline_Currency_1' has a wrong offset!");
static_assert(offsetof(WI_ExperiencePanel_RewardEntry_C_ExecuteUbergraph_WI_ExperiencePanel_RewardEntry, K2Node_DynamicCast_bSuccess_1) == 0x000078, "Member 'WI_ExperiencePanel_RewardEntry_C_ExecuteUbergraph_WI_ExperiencePanel_RewardEntry::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(WI_ExperiencePanel_RewardEntry_C_ExecuteUbergraph_WI_ExperiencePanel_RewardEntry, K2Node_CustomEvent_Loaded) == 0x000080, "Member 'WI_ExperiencePanel_RewardEntry_C_ExecuteUbergraph_WI_ExperiencePanel_RewardEntry::K2Node_CustomEvent_Loaded' has a wrong offset!");
static_assert(offsetof(WI_ExperiencePanel_RewardEntry_C_ExecuteUbergraph_WI_ExperiencePanel_RewardEntry, K2Node_CreateDelegate_OutputDelegate) == 0x000088, "Member 'WI_ExperiencePanel_RewardEntry_C_ExecuteUbergraph_WI_ExperiencePanel_RewardEntry::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WI_ExperiencePanel_RewardEntry_C_ExecuteUbergraph_WI_ExperiencePanel_RewardEntry, CallFunc_Conv_IntToDouble_ReturnValue_1) == 0x000098, "Member 'WI_ExperiencePanel_RewardEntry_C_ExecuteUbergraph_WI_ExperiencePanel_RewardEntry::CallFunc_Conv_IntToDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WI_ExperiencePanel_RewardEntry_C_ExecuteUbergraph_WI_ExperiencePanel_RewardEntry, CallFunc_SetCurrentValue_NewValue_ImplicitCast) == 0x0000A0, "Member 'WI_ExperiencePanel_RewardEntry_C_ExecuteUbergraph_WI_ExperiencePanel_RewardEntry::CallFunc_SetCurrentValue_NewValue_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WI_ExperiencePanel_RewardEntry_C_ExecuteUbergraph_WI_ExperiencePanel_RewardEntry, CallFunc_SetCurrentValue_NewValue_ImplicitCast_1) == 0x0000A4, "Member 'WI_ExperiencePanel_RewardEntry_C_ExecuteUbergraph_WI_ExperiencePanel_RewardEntry::CallFunc_SetCurrentValue_NewValue_ImplicitCast_1' has a wrong offset!");

// Function WI_ExperiencePanel_RewardEntry.WI_ExperiencePanel_RewardEntry_C.OnLoaded_0CE021DB4F943BBC5D2FAB9A5AF142CE
// 0x0008 (0x0008 - 0x0000)
struct WI_ExperiencePanel_RewardEntry_C_OnLoaded_0CE021DB4F943BBC5D2FAB9A5AF142CE final
{
public:
	class UObject*                                Loaded;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WI_ExperiencePanel_RewardEntry_C_OnLoaded_0CE021DB4F943BBC5D2FAB9A5AF142CE) == 0x000008, "Wrong alignment on WI_ExperiencePanel_RewardEntry_C_OnLoaded_0CE021DB4F943BBC5D2FAB9A5AF142CE");
static_assert(sizeof(WI_ExperiencePanel_RewardEntry_C_OnLoaded_0CE021DB4F943BBC5D2FAB9A5AF142CE) == 0x000008, "Wrong size on WI_ExperiencePanel_RewardEntry_C_OnLoaded_0CE021DB4F943BBC5D2FAB9A5AF142CE");
static_assert(offsetof(WI_ExperiencePanel_RewardEntry_C_OnLoaded_0CE021DB4F943BBC5D2FAB9A5AF142CE, Loaded) == 0x000000, "Member 'WI_ExperiencePanel_RewardEntry_C_OnLoaded_0CE021DB4F943BBC5D2FAB9A5AF142CE::Loaded' has a wrong offset!");

// Function WI_ExperiencePanel_RewardEntry.WI_ExperiencePanel_RewardEntry_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct WI_ExperiencePanel_RewardEntry_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WI_ExperiencePanel_RewardEntry_C_PreConstruct) == 0x000001, "Wrong alignment on WI_ExperiencePanel_RewardEntry_C_PreConstruct");
static_assert(sizeof(WI_ExperiencePanel_RewardEntry_C_PreConstruct) == 0x000001, "Wrong size on WI_ExperiencePanel_RewardEntry_C_PreConstruct");
static_assert(offsetof(WI_ExperiencePanel_RewardEntry_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'WI_ExperiencePanel_RewardEntry_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function WI_ExperiencePanel_RewardEntry.WI_ExperiencePanel_RewardEntry_C.SetCurrencyIconSoftTexture
// 0x0030 (0x0030 - 0x0000)
struct WI_ExperiencePanel_RewardEntry_C_SetCurrencyIconSoftTexture final
{
public:
	TSoftObjectPtr<class UTexture2D>              SoftTexture;                                       // 0x0000(0x0028)(BlueprintVisible, BlueprintReadOnly, Parm, UObjectWrapper, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidSoftObjectReference_ReturnValue;   // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WI_ExperiencePanel_RewardEntry_C_SetCurrencyIconSoftTexture) == 0x000008, "Wrong alignment on WI_ExperiencePanel_RewardEntry_C_SetCurrencyIconSoftTexture");
static_assert(sizeof(WI_ExperiencePanel_RewardEntry_C_SetCurrencyIconSoftTexture) == 0x000030, "Wrong size on WI_ExperiencePanel_RewardEntry_C_SetCurrencyIconSoftTexture");
static_assert(offsetof(WI_ExperiencePanel_RewardEntry_C_SetCurrencyIconSoftTexture, SoftTexture) == 0x000000, "Member 'WI_ExperiencePanel_RewardEntry_C_SetCurrencyIconSoftTexture::SoftTexture' has a wrong offset!");
static_assert(offsetof(WI_ExperiencePanel_RewardEntry_C_SetCurrencyIconSoftTexture, CallFunc_IsValidSoftObjectReference_ReturnValue) == 0x000028, "Member 'WI_ExperiencePanel_RewardEntry_C_SetCurrencyIconSoftTexture::CallFunc_IsValidSoftObjectReference_ReturnValue' has a wrong offset!");

// Function WI_ExperiencePanel_RewardEntry.WI_ExperiencePanel_RewardEntry_C.SetCurrencySoftAsset
// 0x0030 (0x0030 - 0x0000)
struct WI_ExperiencePanel_RewardEntry_C_SetCurrencySoftAsset final
{
public:
	TSoftObjectPtr<class UOnlineCurrency>         CurrencySoftAsset;                                 // 0x0000(0x0028)(BlueprintVisible, BlueprintReadOnly, Parm, UObjectWrapper, HasGetValueTypeHash)
	bool                                          LoadAsync;                                         // 0x0028(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WI_ExperiencePanel_RewardEntry_C_SetCurrencySoftAsset) == 0x000008, "Wrong alignment on WI_ExperiencePanel_RewardEntry_C_SetCurrencySoftAsset");
static_assert(sizeof(WI_ExperiencePanel_RewardEntry_C_SetCurrencySoftAsset) == 0x000030, "Wrong size on WI_ExperiencePanel_RewardEntry_C_SetCurrencySoftAsset");
static_assert(offsetof(WI_ExperiencePanel_RewardEntry_C_SetCurrencySoftAsset, CurrencySoftAsset) == 0x000000, "Member 'WI_ExperiencePanel_RewardEntry_C_SetCurrencySoftAsset::CurrencySoftAsset' has a wrong offset!");
static_assert(offsetof(WI_ExperiencePanel_RewardEntry_C_SetCurrencySoftAsset, LoadAsync) == 0x000028, "Member 'WI_ExperiencePanel_RewardEntry_C_SetCurrencySoftAsset::LoadAsync' has a wrong offset!");

// Function WI_ExperiencePanel_RewardEntry.WI_ExperiencePanel_RewardEntry_C.SetCurrencyTag
// 0x0040 (0x0040 - 0x0000)
struct WI_ExperiencePanel_RewardEntry_C_SetCurrencyTag final
{
public:
	struct FGameplayTag                           CurrencyIdentifier;                                // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	bool                                          LoadAsync;                                         // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UOnlineCurrency>         CallFunc_TryGetCurrencyFromTagIdentifier_OutCurrency; // 0x0010(0x0028)(UObjectWrapper, HasGetValueTypeHash)
	bool                                          CallFunc_TryGetCurrencyFromTagIdentifier_ReturnValue; // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WI_ExperiencePanel_RewardEntry_C_SetCurrencyTag) == 0x000008, "Wrong alignment on WI_ExperiencePanel_RewardEntry_C_SetCurrencyTag");
static_assert(sizeof(WI_ExperiencePanel_RewardEntry_C_SetCurrencyTag) == 0x000040, "Wrong size on WI_ExperiencePanel_RewardEntry_C_SetCurrencyTag");
static_assert(offsetof(WI_ExperiencePanel_RewardEntry_C_SetCurrencyTag, CurrencyIdentifier) == 0x000000, "Member 'WI_ExperiencePanel_RewardEntry_C_SetCurrencyTag::CurrencyIdentifier' has a wrong offset!");
static_assert(offsetof(WI_ExperiencePanel_RewardEntry_C_SetCurrencyTag, LoadAsync) == 0x000008, "Member 'WI_ExperiencePanel_RewardEntry_C_SetCurrencyTag::LoadAsync' has a wrong offset!");
static_assert(offsetof(WI_ExperiencePanel_RewardEntry_C_SetCurrencyTag, CallFunc_TryGetCurrencyFromTagIdentifier_OutCurrency) == 0x000010, "Member 'WI_ExperiencePanel_RewardEntry_C_SetCurrencyTag::CallFunc_TryGetCurrencyFromTagIdentifier_OutCurrency' has a wrong offset!");
static_assert(offsetof(WI_ExperiencePanel_RewardEntry_C_SetCurrencyTag, CallFunc_TryGetCurrencyFromTagIdentifier_ReturnValue) == 0x000038, "Member 'WI_ExperiencePanel_RewardEntry_C_SetCurrencyTag::CallFunc_TryGetCurrencyFromTagIdentifier_ReturnValue' has a wrong offset!");

// Function WI_ExperiencePanel_RewardEntry.WI_ExperiencePanel_RewardEntry_C.SetReason
// 0x0010 (0x0010 - 0x0000)
struct WI_ExperiencePanel_RewardEntry_C_SetReason final
{
public:
	class FText                                   InText;                                            // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(WI_ExperiencePanel_RewardEntry_C_SetReason) == 0x000008, "Wrong alignment on WI_ExperiencePanel_RewardEntry_C_SetReason");
static_assert(sizeof(WI_ExperiencePanel_RewardEntry_C_SetReason) == 0x000010, "Wrong size on WI_ExperiencePanel_RewardEntry_C_SetReason");
static_assert(offsetof(WI_ExperiencePanel_RewardEntry_C_SetReason, InText) == 0x000000, "Member 'WI_ExperiencePanel_RewardEntry_C_SetReason::InText' has a wrong offset!");

// Function WI_ExperiencePanel_RewardEntry.WI_ExperiencePanel_RewardEntry_C.SetShowCurrencyLabel
// 0x0005 (0x0005 - 0x0000)
struct WI_ExperiencePanel_RewardEntry_C_SetShowCurrencyLabel final
{
public:
	bool                                          ShowCurrencyLabel_0;                               // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WI_ExperiencePanel_RewardEntry_C_SetShowCurrencyLabel) == 0x000001, "Wrong alignment on WI_ExperiencePanel_RewardEntry_C_SetShowCurrencyLabel");
static_assert(sizeof(WI_ExperiencePanel_RewardEntry_C_SetShowCurrencyLabel) == 0x000005, "Wrong size on WI_ExperiencePanel_RewardEntry_C_SetShowCurrencyLabel");
static_assert(offsetof(WI_ExperiencePanel_RewardEntry_C_SetShowCurrencyLabel, ShowCurrencyLabel_0) == 0x000000, "Member 'WI_ExperiencePanel_RewardEntry_C_SetShowCurrencyLabel::ShowCurrencyLabel_0' has a wrong offset!");
static_assert(offsetof(WI_ExperiencePanel_RewardEntry_C_SetShowCurrencyLabel, Temp_bool_Variable) == 0x000001, "Member 'WI_ExperiencePanel_RewardEntry_C_SetShowCurrencyLabel::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WI_ExperiencePanel_RewardEntry_C_SetShowCurrencyLabel, Temp_byte_Variable) == 0x000002, "Member 'WI_ExperiencePanel_RewardEntry_C_SetShowCurrencyLabel::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WI_ExperiencePanel_RewardEntry_C_SetShowCurrencyLabel, Temp_byte_Variable_1) == 0x000003, "Member 'WI_ExperiencePanel_RewardEntry_C_SetShowCurrencyLabel::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WI_ExperiencePanel_RewardEntry_C_SetShowCurrencyLabel, K2Node_Select_Default) == 0x000004, "Member 'WI_ExperiencePanel_RewardEntry_C_SetShowCurrencyLabel::K2Node_Select_Default' has a wrong offset!");

// Function WI_ExperiencePanel_RewardEntry.WI_ExperiencePanel_RewardEntry_C.SetShowXPLabel
// 0x0005 (0x0005 - 0x0000)
struct WI_ExperiencePanel_RewardEntry_C_SetShowXPLabel final
{
public:
	bool                                          ShowXPLabel_0;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WI_ExperiencePanel_RewardEntry_C_SetShowXPLabel) == 0x000001, "Wrong alignment on WI_ExperiencePanel_RewardEntry_C_SetShowXPLabel");
static_assert(sizeof(WI_ExperiencePanel_RewardEntry_C_SetShowXPLabel) == 0x000005, "Wrong size on WI_ExperiencePanel_RewardEntry_C_SetShowXPLabel");
static_assert(offsetof(WI_ExperiencePanel_RewardEntry_C_SetShowXPLabel, ShowXPLabel_0) == 0x000000, "Member 'WI_ExperiencePanel_RewardEntry_C_SetShowXPLabel::ShowXPLabel_0' has a wrong offset!");
static_assert(offsetof(WI_ExperiencePanel_RewardEntry_C_SetShowXPLabel, Temp_bool_Variable) == 0x000001, "Member 'WI_ExperiencePanel_RewardEntry_C_SetShowXPLabel::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WI_ExperiencePanel_RewardEntry_C_SetShowXPLabel, Temp_byte_Variable) == 0x000002, "Member 'WI_ExperiencePanel_RewardEntry_C_SetShowXPLabel::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WI_ExperiencePanel_RewardEntry_C_SetShowXPLabel, Temp_byte_Variable_1) == 0x000003, "Member 'WI_ExperiencePanel_RewardEntry_C_SetShowXPLabel::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WI_ExperiencePanel_RewardEntry_C_SetShowXPLabel, K2Node_Select_Default) == 0x000004, "Member 'WI_ExperiencePanel_RewardEntry_C_SetShowXPLabel::K2Node_Select_Default' has a wrong offset!");

// Function WI_ExperiencePanel_RewardEntry.WI_ExperiencePanel_RewardEntry_C.SetXPText
// 0x0010 (0x0010 - 0x0000)
struct WI_ExperiencePanel_RewardEntry_C_SetXPText final
{
public:
	class FText                                   InText;                                            // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(WI_ExperiencePanel_RewardEntry_C_SetXPText) == 0x000008, "Wrong alignment on WI_ExperiencePanel_RewardEntry_C_SetXPText");
static_assert(sizeof(WI_ExperiencePanel_RewardEntry_C_SetXPText) == 0x000010, "Wrong size on WI_ExperiencePanel_RewardEntry_C_SetXPText");
static_assert(offsetof(WI_ExperiencePanel_RewardEntry_C_SetXPText, InText) == 0x000000, "Member 'WI_ExperiencePanel_RewardEntry_C_SetXPText::InText' has a wrong offset!");

}

