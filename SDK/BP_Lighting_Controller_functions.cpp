#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Lighting_Controller

#include "Basic.hpp"

#include "BP_Lighting_Controller_classes.hpp"
#include "BP_Lighting_Controller_parameters.hpp"


namespace SDK
{

// Function BP_Lighting_Controller.BP_Lighting_Controller_C.Blend to One
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_Lighting_Controller_C::Blend_to_One()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Lighting_Controller_C", "Blend to One");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Lighting_Controller.BP_Lighting_Controller_C.BlendBetweenTwo
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_Lighting_Controller_C::BlendBetweenTwo()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Lighting_Controller_C", "BlendBetweenTwo");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Lighting_Controller.BP_Lighting_Controller_C.BlendToDefault
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_Lighting_Controller_C::BlendToDefault()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Lighting_Controller_C", "BlendToDefault");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Lighting_Controller.BP_Lighting_Controller_C.CalculateDistanceSingle
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_JP_PP_C*                      Target                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// double                                  Blend                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Lighting_Controller_C::CalculateDistanceSingle(class ABP_JP_PP_C* Target, double* Blend)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Lighting_Controller_C", "CalculateDistanceSingle");

	Params::BP_Lighting_Controller_C_CalculateDistanceSingle Parms{};

	Parms.Target = Target;

	UObject::ProcessEvent(Func, &Parms);

	if (Blend != nullptr)
		*Blend = Parms.Blend;
}


// Function BP_Lighting_Controller.BP_Lighting_Controller_C.CalculateDistanceToPPs
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_JP_PP_C*                      Target                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// double                                  Distance                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Lighting_Controller_C::CalculateDistanceToPPs(class ABP_JP_PP_C* Target, double* Distance)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Lighting_Controller_C", "CalculateDistanceToPPs");

	Params::BP_Lighting_Controller_C_CalculateDistanceToPPs Parms{};

	Parms.Target = Target;

	UObject::ProcessEvent(Func, &Parms);

	if (Distance != nullptr)
		*Distance = Parms.Distance;
}


// Function BP_Lighting_Controller.BP_Lighting_Controller_C.CheckDistanceToPlayer
// (BlueprintCallable, BlueprintEvent)

void ABP_Lighting_Controller_C::CheckDistanceToPlayer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Lighting_Controller_C", "CheckDistanceToPlayer");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Lighting_Controller.BP_Lighting_Controller_C.ExecuteUbergraph_BP_Lighting_Controller
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Lighting_Controller_C::ExecuteUbergraph_BP_Lighting_Controller(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Lighting_Controller_C", "ExecuteUbergraph_BP_Lighting_Controller");

	Params::BP_Lighting_Controller_C_ExecuteUbergraph_BP_Lighting_Controller Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Lighting_Controller.BP_Lighting_Controller_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ABP_Lighting_Controller_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Lighting_Controller_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Lighting_Controller.BP_Lighting_Controller_C.ReceiveTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Lighting_Controller_C::ReceiveTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Lighting_Controller_C", "ReceiveTick");

	Params::BP_Lighting_Controller_C_ReceiveTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Lighting_Controller.BP_Lighting_Controller_C.ReplaceBackgroundBuildingMaterials
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_Lighting_Controller_C::ReplaceBackgroundBuildingMaterials()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Lighting_Controller_C", "ReplaceBackgroundBuildingMaterials");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Lighting_Controller.BP_Lighting_Controller_C.SetLightingSettingsPreview
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// E_Lighting_Presets                      Enumerator                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Lighting_Controller_C::SetLightingSettingsPreview(E_Lighting_Presets Enumerator)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Lighting_Controller_C", "SetLightingSettingsPreview");

	Params::BP_Lighting_Controller_C_SetLightingSettingsPreview Parms{};

	Parms.Enumerator = Enumerator;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Lighting_Controller.BP_Lighting_Controller_C.UpdateAllLightSettings
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Day_0                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Lighting_Controller_C::UpdateAllLightSettings(bool Day_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Lighting_Controller_C", "UpdateAllLightSettings");

	Params::BP_Lighting_Controller_C_UpdateAllLightSettings Parms{};

	Parms.Day_0 = Day_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Lighting_Controller.BP_Lighting_Controller_C.UpdateCityBuildingLights
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_Lighting_Controller_C::UpdateCityBuildingLights()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Lighting_Controller_C", "UpdateCityBuildingLights");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Lighting_Controller.BP_Lighting_Controller_C.UserConstructionScript
// (Event, Public, BlueprintCallable, BlueprintEvent)

void ABP_Lighting_Controller_C::UserConstructionScript()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Lighting_Controller_C", "UserConstructionScript");

	UObject::ProcessEvent(Func, nullptr);
}

}

