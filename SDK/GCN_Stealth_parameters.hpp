#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GCN_Stealth

#include "Basic.hpp"

#include "GameplayAbilities_structs.hpp"


namespace SDK::Params
{

// Function GCN_Stealth.GCN_Stealth_C.ExecuteUbergraph_GCN_Stealth
// 0x0004 (0x0004 - 0x0000)
struct GCN_Stealth_C_ExecuteUbergraph_GCN_Stealth final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GCN_Stealth_C_ExecuteUbergraph_GCN_Stealth) == 0x000004, "Wrong alignment on GCN_Stealth_C_ExecuteUbergraph_GCN_Stealth");
static_assert(sizeof(GCN_Stealth_C_ExecuteUbergraph_GCN_Stealth) == 0x000004, "Wrong size on GCN_Stealth_C_ExecuteUbergraph_GCN_Stealth");
static_assert(offsetof(GCN_Stealth_C_ExecuteUbergraph_GCN_Stealth, EntryPoint) == 0x000000, "Member 'GCN_Stealth_C_ExecuteUbergraph_GCN_Stealth::EntryPoint' has a wrong offset!");

// Function GCN_Stealth.GCN_Stealth_C.GetIsTargetEnemyToLocalPlayer
// 0x0048 (0x0048 - 0x0000)
struct GCN_Stealth_C_GetIsTargetEnemyToLocalPlayer final
{
public:
	class UObject*                                Target;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Temp_byte_Variable;                                // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A[0x6];                                        // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class ITeamableInterface>    K2Node_DynamicCast_AsTeamable_Interface;           // 0x0010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetTeamID_ReturnValue;                    // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_22[0x6];                                       // 0x0022(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_GetPlayerPawn_ReturnValue;                // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class ITeamableInterface>    K2Node_DynamicCast_AsTeamable_Interface_1;         // 0x0030(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetTeamID_ReturnValue_1;                  // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Temp_byte_Variable_1;                              // 0x0042(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0043(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GCN_Stealth_C_GetIsTargetEnemyToLocalPlayer) == 0x000008, "Wrong alignment on GCN_Stealth_C_GetIsTargetEnemyToLocalPlayer");
static_assert(sizeof(GCN_Stealth_C_GetIsTargetEnemyToLocalPlayer) == 0x000048, "Wrong size on GCN_Stealth_C_GetIsTargetEnemyToLocalPlayer");
static_assert(offsetof(GCN_Stealth_C_GetIsTargetEnemyToLocalPlayer, Target) == 0x000000, "Member 'GCN_Stealth_C_GetIsTargetEnemyToLocalPlayer::Target' has a wrong offset!");
static_assert(offsetof(GCN_Stealth_C_GetIsTargetEnemyToLocalPlayer, ReturnValue) == 0x000008, "Member 'GCN_Stealth_C_GetIsTargetEnemyToLocalPlayer::ReturnValue' has a wrong offset!");
static_assert(offsetof(GCN_Stealth_C_GetIsTargetEnemyToLocalPlayer, Temp_byte_Variable) == 0x000009, "Member 'GCN_Stealth_C_GetIsTargetEnemyToLocalPlayer::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(GCN_Stealth_C_GetIsTargetEnemyToLocalPlayer, K2Node_DynamicCast_AsTeamable_Interface) == 0x000010, "Member 'GCN_Stealth_C_GetIsTargetEnemyToLocalPlayer::K2Node_DynamicCast_AsTeamable_Interface' has a wrong offset!");
static_assert(offsetof(GCN_Stealth_C_GetIsTargetEnemyToLocalPlayer, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'GCN_Stealth_C_GetIsTargetEnemyToLocalPlayer::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(GCN_Stealth_C_GetIsTargetEnemyToLocalPlayer, CallFunc_GetTeamID_ReturnValue) == 0x000021, "Member 'GCN_Stealth_C_GetIsTargetEnemyToLocalPlayer::CallFunc_GetTeamID_ReturnValue' has a wrong offset!");
static_assert(offsetof(GCN_Stealth_C_GetIsTargetEnemyToLocalPlayer, CallFunc_GetPlayerPawn_ReturnValue) == 0x000028, "Member 'GCN_Stealth_C_GetIsTargetEnemyToLocalPlayer::CallFunc_GetPlayerPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(GCN_Stealth_C_GetIsTargetEnemyToLocalPlayer, K2Node_DynamicCast_AsTeamable_Interface_1) == 0x000030, "Member 'GCN_Stealth_C_GetIsTargetEnemyToLocalPlayer::K2Node_DynamicCast_AsTeamable_Interface_1' has a wrong offset!");
static_assert(offsetof(GCN_Stealth_C_GetIsTargetEnemyToLocalPlayer, K2Node_DynamicCast_bSuccess_1) == 0x000040, "Member 'GCN_Stealth_C_GetIsTargetEnemyToLocalPlayer::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(GCN_Stealth_C_GetIsTargetEnemyToLocalPlayer, CallFunc_GetTeamID_ReturnValue_1) == 0x000041, "Member 'GCN_Stealth_C_GetIsTargetEnemyToLocalPlayer::CallFunc_GetTeamID_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GCN_Stealth_C_GetIsTargetEnemyToLocalPlayer, Temp_byte_Variable_1) == 0x000042, "Member 'GCN_Stealth_C_GetIsTargetEnemyToLocalPlayer::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(GCN_Stealth_C_GetIsTargetEnemyToLocalPlayer, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000043, "Member 'GCN_Stealth_C_GetIsTargetEnemyToLocalPlayer::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(GCN_Stealth_C_GetIsTargetEnemyToLocalPlayer, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000044, "Member 'GCN_Stealth_C_GetIsTargetEnemyToLocalPlayer::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function GCN_Stealth.GCN_Stealth_C.OnActive
// 0x00E8 (0x00E8 - 0x0000)
struct GCN_Stealth_C_OnActive final
{
public:
	class AActor*                                 MyTarget;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayCueParameters                 Parameters;                                        // 0x0008(0x00D8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
	bool                                          ReturnValue;                                       // 0x00E0(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GCN_Stealth_C_OnActive) == 0x000008, "Wrong alignment on GCN_Stealth_C_OnActive");
static_assert(sizeof(GCN_Stealth_C_OnActive) == 0x0000E8, "Wrong size on GCN_Stealth_C_OnActive");
static_assert(offsetof(GCN_Stealth_C_OnActive, MyTarget) == 0x000000, "Member 'GCN_Stealth_C_OnActive::MyTarget' has a wrong offset!");
static_assert(offsetof(GCN_Stealth_C_OnActive, Parameters) == 0x000008, "Member 'GCN_Stealth_C_OnActive::Parameters' has a wrong offset!");
static_assert(offsetof(GCN_Stealth_C_OnActive, ReturnValue) == 0x0000E0, "Member 'GCN_Stealth_C_OnActive::ReturnValue' has a wrong offset!");

// Function GCN_Stealth.GCN_Stealth_C.OnRemove
// 0x00E8 (0x00E8 - 0x0000)
struct GCN_Stealth_C_OnRemove final
{
public:
	class AActor*                                 MyTarget;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayCueParameters                 Parameters;                                        // 0x0008(0x00D8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
	bool                                          ReturnValue;                                       // 0x00E0(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsEnemyToLocalPlayer;                              // 0x00E1(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GCN_Stealth_C_OnRemove) == 0x000008, "Wrong alignment on GCN_Stealth_C_OnRemove");
static_assert(sizeof(GCN_Stealth_C_OnRemove) == 0x0000E8, "Wrong size on GCN_Stealth_C_OnRemove");
static_assert(offsetof(GCN_Stealth_C_OnRemove, MyTarget) == 0x000000, "Member 'GCN_Stealth_C_OnRemove::MyTarget' has a wrong offset!");
static_assert(offsetof(GCN_Stealth_C_OnRemove, Parameters) == 0x000008, "Member 'GCN_Stealth_C_OnRemove::Parameters' has a wrong offset!");
static_assert(offsetof(GCN_Stealth_C_OnRemove, ReturnValue) == 0x0000E0, "Member 'GCN_Stealth_C_OnRemove::ReturnValue' has a wrong offset!");
static_assert(offsetof(GCN_Stealth_C_OnRemove, IsEnemyToLocalPlayer) == 0x0000E1, "Member 'GCN_Stealth_C_OnRemove::IsEnemyToLocalPlayer' has a wrong offset!");

// Function GCN_Stealth.GCN_Stealth_C.Toggle
// 0x0038 (0x0038 - 0x0000)
struct GCN_Stealth_C_Toggle final
{
public:
	class AActor*                                 Target;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          IsStealthEnabled;                                  // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsEnemyToLocalPlayer;                              // 0x0009(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A[0x6];                                        // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue_1;                   // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class II_Stealth_C>          K2Node_DynamicCast_AsI_Stealth;                    // 0x0020(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetIsTargetEnemyToLocalPlayer_ReturnValue; // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GCN_Stealth_C_Toggle) == 0x000008, "Wrong alignment on GCN_Stealth_C_Toggle");
static_assert(sizeof(GCN_Stealth_C_Toggle) == 0x000038, "Wrong size on GCN_Stealth_C_Toggle");
static_assert(offsetof(GCN_Stealth_C_Toggle, Target) == 0x000000, "Member 'GCN_Stealth_C_Toggle::Target' has a wrong offset!");
static_assert(offsetof(GCN_Stealth_C_Toggle, IsStealthEnabled) == 0x000008, "Member 'GCN_Stealth_C_Toggle::IsStealthEnabled' has a wrong offset!");
static_assert(offsetof(GCN_Stealth_C_Toggle, IsEnemyToLocalPlayer) == 0x000009, "Member 'GCN_Stealth_C_Toggle::IsEnemyToLocalPlayer' has a wrong offset!");
static_assert(offsetof(GCN_Stealth_C_Toggle, CallFunc_GetOwner_ReturnValue) == 0x000010, "Member 'GCN_Stealth_C_Toggle::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(GCN_Stealth_C_Toggle, CallFunc_GetOwner_ReturnValue_1) == 0x000018, "Member 'GCN_Stealth_C_Toggle::CallFunc_GetOwner_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GCN_Stealth_C_Toggle, K2Node_DynamicCast_AsI_Stealth) == 0x000020, "Member 'GCN_Stealth_C_Toggle::K2Node_DynamicCast_AsI_Stealth' has a wrong offset!");
static_assert(offsetof(GCN_Stealth_C_Toggle, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'GCN_Stealth_C_Toggle::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(GCN_Stealth_C_Toggle, CallFunc_GetIsTargetEnemyToLocalPlayer_ReturnValue) == 0x000031, "Member 'GCN_Stealth_C_Toggle::CallFunc_GetIsTargetEnemyToLocalPlayer_ReturnValue' has a wrong offset!");

// Function GCN_Stealth.GCN_Stealth_C.ToggleOnNameplate
// 0x0030 (0x0030 - 0x0000)
struct GCN_Stealth_C_ToggleOnNameplate final
{
public:
	class AActor*                                 Owner_0;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Enable;                                            // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsEnemyToLocalPlayer;                              // 0x0009(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A[0x6];                                        // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UAC_CharacterNamePlate_C*               CallFunc_GetComponentByClass_ReturnValue;          // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class II_Stealth_C>          K2Node_DynamicCast_AsI_Stealth;                    // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GCN_Stealth_C_ToggleOnNameplate) == 0x000008, "Wrong alignment on GCN_Stealth_C_ToggleOnNameplate");
static_assert(sizeof(GCN_Stealth_C_ToggleOnNameplate) == 0x000030, "Wrong size on GCN_Stealth_C_ToggleOnNameplate");
static_assert(offsetof(GCN_Stealth_C_ToggleOnNameplate, Owner_0) == 0x000000, "Member 'GCN_Stealth_C_ToggleOnNameplate::Owner_0' has a wrong offset!");
static_assert(offsetof(GCN_Stealth_C_ToggleOnNameplate, Enable) == 0x000008, "Member 'GCN_Stealth_C_ToggleOnNameplate::Enable' has a wrong offset!");
static_assert(offsetof(GCN_Stealth_C_ToggleOnNameplate, IsEnemyToLocalPlayer) == 0x000009, "Member 'GCN_Stealth_C_ToggleOnNameplate::IsEnemyToLocalPlayer' has a wrong offset!");
static_assert(offsetof(GCN_Stealth_C_ToggleOnNameplate, CallFunc_GetComponentByClass_ReturnValue) == 0x000010, "Member 'GCN_Stealth_C_ToggleOnNameplate::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(GCN_Stealth_C_ToggleOnNameplate, K2Node_DynamicCast_AsI_Stealth) == 0x000018, "Member 'GCN_Stealth_C_ToggleOnNameplate::K2Node_DynamicCast_AsI_Stealth' has a wrong offset!");
static_assert(offsetof(GCN_Stealth_C_ToggleOnNameplate, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'GCN_Stealth_C_ToggleOnNameplate::K2Node_DynamicCast_bSuccess' has a wrong offset!");

}

