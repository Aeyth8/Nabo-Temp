#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: IWTwitch

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"


namespace SDK
{

// Enum IWTwitch.ETwitchDropStatus
// NumValues: 0x0003
enum class ETwitchDropStatus : uint8
{
	CLAIMED                                  = 0,
	FULFILLED                                = 1,
	ETwitchDropStatus_MAX                    = 2,
};

// Enum IWTwitch.ETwitchHttpVerb
// NumValues: 0x0006
enum class ETwitchHttpVerb : uint8
{
	Get                                      = 0,
	Post                                     = 1,
	Put                                      = 2,
	Patch                                    = 3,
	Delete                                   = 4,
	ETwitchHttpVerb_MAX                      = 5,
};

// Enum IWTwitch.ETwitchChatMode
// NumValues: 0x0004
enum class ETwitchChatMode : uint8
{
	Disabled                                 = 0,
	READONLY                                 = 1,
	Enabled                                  = 2,
	ETwitchChatMode_MAX                      = 3,
};

// ScriptStruct IWTwitch.TwitchDropsPagination
// 0x0010 (0x0010 - 0x0000)
struct FTwitchDropsPagination final
{
public:
	class FString                                 Cursor;                                            // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FTwitchDropsPagination) == 0x000008, "Wrong alignment on FTwitchDropsPagination");
static_assert(sizeof(FTwitchDropsPagination) == 0x000010, "Wrong size on FTwitchDropsPagination");
static_assert(offsetof(FTwitchDropsPagination, Cursor) == 0x000000, "Member 'FTwitchDropsPagination::Cursor' has a wrong offset!");

// ScriptStruct IWTwitch.TwitchError
// 0x0028 (0x0028 - 0x0000)
struct FTwitchError final
{
public:
	class FString                                 Error;                                             // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Status;                                            // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Message;                                           // 0x0018(0x0010)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FTwitchError) == 0x000008, "Wrong alignment on FTwitchError");
static_assert(sizeof(FTwitchError) == 0x000028, "Wrong size on FTwitchError");
static_assert(offsetof(FTwitchError, Error) == 0x000000, "Member 'FTwitchError::Error' has a wrong offset!");
static_assert(offsetof(FTwitchError, Status) == 0x000010, "Member 'FTwitchError::Status' has a wrong offset!");
static_assert(offsetof(FTwitchError, Message) == 0x000018, "Member 'FTwitchError::Message' has a wrong offset!");

// ScriptStruct IWTwitch.TwitchAuthResponse
// 0x0048 (0x0048 - 0x0000)
struct FTwitchAuthResponse final
{
public:
	class FString                                 Client_ID;                                         // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Login;                                             // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class FString>                         Scopes;                                            // 0x0020(0x0010)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	class FString                                 User_ID;                                           // 0x0030(0x0010)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Expires_In;                                        // 0x0040(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FTwitchAuthResponse) == 0x000008, "Wrong alignment on FTwitchAuthResponse");
static_assert(sizeof(FTwitchAuthResponse) == 0x000048, "Wrong size on FTwitchAuthResponse");
static_assert(offsetof(FTwitchAuthResponse, Client_ID) == 0x000000, "Member 'FTwitchAuthResponse::Client_ID' has a wrong offset!");
static_assert(offsetof(FTwitchAuthResponse, Login) == 0x000010, "Member 'FTwitchAuthResponse::Login' has a wrong offset!");
static_assert(offsetof(FTwitchAuthResponse, Scopes) == 0x000020, "Member 'FTwitchAuthResponse::Scopes' has a wrong offset!");
static_assert(offsetof(FTwitchAuthResponse, User_ID) == 0x000030, "Member 'FTwitchAuthResponse::User_ID' has a wrong offset!");
static_assert(offsetof(FTwitchAuthResponse, Expires_In) == 0x000040, "Member 'FTwitchAuthResponse::Expires_In' has a wrong offset!");

// ScriptStruct IWTwitch.TwitchDrop
// 0x0058 (0x0058 - 0x0000)
struct FTwitchDrop final
{
public:
	class FString                                 ID;                                                // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Benefit_ID;                                        // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FDateTime                              Timestamp;                                         // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 User_ID;                                           // 0x0028(0x0010)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Game_ID;                                           // 0x0038(0x0010)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ETwitchDropStatus                             Fulfillment_Status;                                // 0x0048(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDateTime                              Updated_At;                                        // 0x0050(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FTwitchDrop) == 0x000008, "Wrong alignment on FTwitchDrop");
static_assert(sizeof(FTwitchDrop) == 0x000058, "Wrong size on FTwitchDrop");
static_assert(offsetof(FTwitchDrop, ID) == 0x000000, "Member 'FTwitchDrop::ID' has a wrong offset!");
static_assert(offsetof(FTwitchDrop, Benefit_ID) == 0x000010, "Member 'FTwitchDrop::Benefit_ID' has a wrong offset!");
static_assert(offsetof(FTwitchDrop, Timestamp) == 0x000020, "Member 'FTwitchDrop::Timestamp' has a wrong offset!");
static_assert(offsetof(FTwitchDrop, User_ID) == 0x000028, "Member 'FTwitchDrop::User_ID' has a wrong offset!");
static_assert(offsetof(FTwitchDrop, Game_ID) == 0x000038, "Member 'FTwitchDrop::Game_ID' has a wrong offset!");
static_assert(offsetof(FTwitchDrop, Fulfillment_Status) == 0x000048, "Member 'FTwitchDrop::Fulfillment_Status' has a wrong offset!");
static_assert(offsetof(FTwitchDrop, Updated_At) == 0x000050, "Member 'FTwitchDrop::Updated_At' has a wrong offset!");

// ScriptStruct IWTwitch.TwitchDropsEntitlements
// 0x0020 (0x0020 - 0x0000)
struct FTwitchDropsEntitlements final
{
public:
	TArray<struct FTwitchDrop>                    Data;                                              // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	struct FTwitchDropsPagination                 Pagination;                                        // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
};
static_assert(alignof(FTwitchDropsEntitlements) == 0x000008, "Wrong alignment on FTwitchDropsEntitlements");
static_assert(sizeof(FTwitchDropsEntitlements) == 0x000020, "Wrong size on FTwitchDropsEntitlements");
static_assert(offsetof(FTwitchDropsEntitlements, Data) == 0x000000, "Member 'FTwitchDropsEntitlements::Data' has a wrong offset!");
static_assert(offsetof(FTwitchDropsEntitlements, Pagination) == 0x000010, "Member 'FTwitchDropsEntitlements::Pagination' has a wrong offset!");

// ScriptStruct IWTwitch.TwitchTokenResponse
// 0x0048 (0x0048 - 0x0000)
struct FTwitchTokenResponse final
{
public:
	class FString                                 Access_Token;                                      // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Expires_In;                                        // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Refresh_Token;                                     // 0x0018(0x0010)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class FString>                         Scope;                                             // 0x0028(0x0010)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	class FString                                 Token_Type;                                        // 0x0038(0x0010)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FTwitchTokenResponse) == 0x000008, "Wrong alignment on FTwitchTokenResponse");
static_assert(sizeof(FTwitchTokenResponse) == 0x000048, "Wrong size on FTwitchTokenResponse");
static_assert(offsetof(FTwitchTokenResponse, Access_Token) == 0x000000, "Member 'FTwitchTokenResponse::Access_Token' has a wrong offset!");
static_assert(offsetof(FTwitchTokenResponse, Expires_In) == 0x000010, "Member 'FTwitchTokenResponse::Expires_In' has a wrong offset!");
static_assert(offsetof(FTwitchTokenResponse, Refresh_Token) == 0x000018, "Member 'FTwitchTokenResponse::Refresh_Token' has a wrong offset!");
static_assert(offsetof(FTwitchTokenResponse, Scope) == 0x000028, "Member 'FTwitchTokenResponse::Scope' has a wrong offset!");
static_assert(offsetof(FTwitchTokenResponse, Token_Type) == 0x000038, "Member 'FTwitchTokenResponse::Token_Type' has a wrong offset!");

// ScriptStruct IWTwitch.TwitchUser
// 0x00A0 (0x00A0 - 0x0000)
struct FTwitchUser final
{
public:
	class FString                                 _ID;                                               // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Login;                                             // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Display_Name;                                      // 0x0020(0x0010)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Type;                                              // 0x0030(0x0010)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Broadcaster_Type;                                  // 0x0040(0x0010)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Description;                                       // 0x0050(0x0010)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Profile_Image_Url;                                 // 0x0060(0x0010)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Offline_Image_Url;                                 // 0x0070(0x0010)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int64                                         View_Count;                                        // 0x0080(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Email;                                             // 0x0088(0x0010)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FDateTime                              Created_At;                                        // 0x0098(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FTwitchUser) == 0x000008, "Wrong alignment on FTwitchUser");
static_assert(sizeof(FTwitchUser) == 0x0000A0, "Wrong size on FTwitchUser");
static_assert(offsetof(FTwitchUser, _ID) == 0x000000, "Member 'FTwitchUser::_ID' has a wrong offset!");
static_assert(offsetof(FTwitchUser, Login) == 0x000010, "Member 'FTwitchUser::Login' has a wrong offset!");
static_assert(offsetof(FTwitchUser, Display_Name) == 0x000020, "Member 'FTwitchUser::Display_Name' has a wrong offset!");
static_assert(offsetof(FTwitchUser, Type) == 0x000030, "Member 'FTwitchUser::Type' has a wrong offset!");
static_assert(offsetof(FTwitchUser, Broadcaster_Type) == 0x000040, "Member 'FTwitchUser::Broadcaster_Type' has a wrong offset!");
static_assert(offsetof(FTwitchUser, Description) == 0x000050, "Member 'FTwitchUser::Description' has a wrong offset!");
static_assert(offsetof(FTwitchUser, Profile_Image_Url) == 0x000060, "Member 'FTwitchUser::Profile_Image_Url' has a wrong offset!");
static_assert(offsetof(FTwitchUser, Offline_Image_Url) == 0x000070, "Member 'FTwitchUser::Offline_Image_Url' has a wrong offset!");
static_assert(offsetof(FTwitchUser, View_Count) == 0x000080, "Member 'FTwitchUser::View_Count' has a wrong offset!");
static_assert(offsetof(FTwitchUser, Email) == 0x000088, "Member 'FTwitchUser::Email' has a wrong offset!");
static_assert(offsetof(FTwitchUser, Created_At) == 0x000098, "Member 'FTwitchUser::Created_At' has a wrong offset!");

// ScriptStruct IWTwitch.TwitchSimpleError
// 0x0018 (0x0018 - 0x0000)
struct FTwitchSimpleError final
{
public:
	int32                                         Status;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Message;                                           // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FTwitchSimpleError) == 0x000008, "Wrong alignment on FTwitchSimpleError");
static_assert(sizeof(FTwitchSimpleError) == 0x000018, "Wrong size on FTwitchSimpleError");
static_assert(offsetof(FTwitchSimpleError, Status) == 0x000000, "Member 'FTwitchSimpleError::Status' has a wrong offset!");
static_assert(offsetof(FTwitchSimpleError, Message) == 0x000008, "Member 'FTwitchSimpleError::Message' has a wrong offset!");

}

