#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Bp_TransformSyncLiteComponent

#include "Basic.hpp"

#include "Bp_TransformSyncLiteComponent_classes.hpp"
#include "Bp_TransformSyncLiteComponent_parameters.hpp"


namespace SDK
{

// Function Bp_TransformSyncLiteComponent.Bp_TransformSyncLiteComponent_C.ActualSleep
// (BlueprintCallable, BlueprintEvent)

void UBp_TransformSyncLiteComponent_C::ActualSleep()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Bp_TransformSyncLiteComponent_C", "ActualSleep");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Bp_TransformSyncLiteComponent.Bp_TransformSyncLiteComponent_C.BindSleepEvent
// (BlueprintCallable, BlueprintEvent)

void UBp_TransformSyncLiteComponent_C::BindSleepEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Bp_TransformSyncLiteComponent_C", "BindSleepEvent");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Bp_TransformSyncLiteComponent.Bp_TransformSyncLiteComponent_C.BindUpdateRate
// (BlueprintCallable, BlueprintEvent)

void UBp_TransformSyncLiteComponent_C::BindUpdateRate()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Bp_TransformSyncLiteComponent_C", "BindUpdateRate");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Bp_TransformSyncLiteComponent.Bp_TransformSyncLiteComponent_C.BindWakeEvent
// (BlueprintCallable, BlueprintEvent)

void UBp_TransformSyncLiteComponent_C::BindWakeEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Bp_TransformSyncLiteComponent_C", "BindWakeEvent");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Bp_TransformSyncLiteComponent.Bp_TransformSyncLiteComponent_C.CalculateTickGroup
// (Private, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// double                                  Distance                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

int32 UBp_TransformSyncLiteComponent_C::CalculateTickGroup(double Distance)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Bp_TransformSyncLiteComponent_C", "CalculateTickGroup");

	Params::Bp_TransformSyncLiteComponent_C_CalculateTickGroup Parms{};

	Parms.Distance = Distance;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function Bp_TransformSyncLiteComponent.Bp_TransformSyncLiteComponent_C.ClearSleepTimer
// (BlueprintCallable, BlueprintEvent)

void UBp_TransformSyncLiteComponent_C::ClearSleepTimer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Bp_TransformSyncLiteComponent_C", "ClearSleepTimer");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Bp_TransformSyncLiteComponent.Bp_TransformSyncLiteComponent_C.ComponentSleep
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UPrimitiveComponent*              SleepingComponent                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class FName                             BoneName                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBp_TransformSyncLiteComponent_C::ComponentSleep(class UPrimitiveComponent* SleepingComponent, class FName BoneName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Bp_TransformSyncLiteComponent_C", "ComponentSleep");

	Params::Bp_TransformSyncLiteComponent_C_ComponentSleep Parms{};

	Parms.SleepingComponent = SleepingComponent;
	Parms.BoneName = BoneName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Bp_TransformSyncLiteComponent.Bp_TransformSyncLiteComponent_C.ComponentWake
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UPrimitiveComponent*              WakingComponent                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class FName                             BoneName                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBp_TransformSyncLiteComponent_C::ComponentWake(class UPrimitiveComponent* WakingComponent, class FName BoneName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Bp_TransformSyncLiteComponent_C", "ComponentWake");

	Params::Bp_TransformSyncLiteComponent_C_ComponentWake Parms{};

	Parms.WakingComponent = WakingComponent;
	Parms.BoneName = BoneName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Bp_TransformSyncLiteComponent.Bp_TransformSyncLiteComponent_C.Enable Sync
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Enabled_0                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBp_TransformSyncLiteComponent_C::Enable_Sync(bool Enabled_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Bp_TransformSyncLiteComponent_C", "Enable Sync");

	Params::Bp_TransformSyncLiteComponent_C_Enable_Sync Parms{};

	Parms.Enabled_0 = Enabled_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Bp_TransformSyncLiteComponent.Bp_TransformSyncLiteComponent_C.EnableRelativeSync
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UPrimitiveComponent*              RelativeComponent_0                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UBp_TransformSyncLiteComponent_C::EnableRelativeSync(class UPrimitiveComponent* RelativeComponent_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Bp_TransformSyncLiteComponent_C", "EnableRelativeSync");

	Params::Bp_TransformSyncLiteComponent_C_EnableRelativeSync Parms{};

	Parms.RelativeComponent_0 = RelativeComponent_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Bp_TransformSyncLiteComponent.Bp_TransformSyncLiteComponent_C.ExecuteUbergraph_Bp_TransformSyncLiteComponent
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBp_TransformSyncLiteComponent_C::ExecuteUbergraph_Bp_TransformSyncLiteComponent(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Bp_TransformSyncLiteComponent_C", "ExecuteUbergraph_Bp_TransformSyncLiteComponent");

	Params::Bp_TransformSyncLiteComponent_C_ExecuteUbergraph_Bp_TransformSyncLiteComponent Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Bp_TransformSyncLiteComponent.Bp_TransformSyncLiteComponent_C.GetDefaultTickRate
// (Private, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// double                                  ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

double UBp_TransformSyncLiteComponent_C::GetDefaultTickRate()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Bp_TransformSyncLiteComponent_C", "GetDefaultTickRate");

	Params::Bp_TransformSyncLiteComponent_C_GetDefaultTickRate Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function Bp_TransformSyncLiteComponent.Bp_TransformSyncLiteComponent_C.IsLocallyControlled
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool UBp_TransformSyncLiteComponent_C::IsLocallyControlled()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Bp_TransformSyncLiteComponent_C", "IsLocallyControlled");

	Params::Bp_TransformSyncLiteComponent_C_IsLocallyControlled Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function Bp_TransformSyncLiteComponent.Bp_TransformSyncLiteComponent_C.OnRep_IsSimulating
// (BlueprintCallable, BlueprintEvent)

void UBp_TransformSyncLiteComponent_C::OnRep_IsSimulating()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Bp_TransformSyncLiteComponent_C", "OnRep_IsSimulating");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Bp_TransformSyncLiteComponent.Bp_TransformSyncLiteComponent_C.ReceiveBeginPlay
// (Event, Public, BlueprintEvent)

void UBp_TransformSyncLiteComponent_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Bp_TransformSyncLiteComponent_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Bp_TransformSyncLiteComponent.Bp_TransformSyncLiteComponent_C.ReceiveTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBp_TransformSyncLiteComponent_C::ReceiveTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Bp_TransformSyncLiteComponent_C", "ReceiveTick");

	Params::Bp_TransformSyncLiteComponent_C_ReceiveTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Bp_TransformSyncLiteComponent.Bp_TransformSyncLiteComponent_C.ResetCoordinates
// (Private, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UPrimitiveComponent*              RelativeComponent_0                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UBp_TransformSyncLiteComponent_C::ResetCoordinates(class UPrimitiveComponent* RelativeComponent_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Bp_TransformSyncLiteComponent_C", "ResetCoordinates");

	Params::Bp_TransformSyncLiteComponent_C_ResetCoordinates Parms{};

	Parms.RelativeComponent_0 = RelativeComponent_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Bp_TransformSyncLiteComponent.Bp_TransformSyncLiteComponent_C.SelectReceivePhysicsDataFPS
// (Private, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// int32                                   TickGroup                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  TickInterval                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBp_TransformSyncLiteComponent_C::SelectReceivePhysicsDataFPS(int32 TickGroup, double* TickInterval)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Bp_TransformSyncLiteComponent_C", "SelectReceivePhysicsDataFPS");

	Params::Bp_TransformSyncLiteComponent_C_SelectReceivePhysicsDataFPS Parms{};

	Parms.TickGroup = TickGroup;

	UObject::ProcessEvent(Func, &Parms);

	if (TickInterval != nullptr)
		*TickInterval = Parms.TickInterval;
}


// Function Bp_TransformSyncLiteComponent.Bp_TransformSyncLiteComponent_C.SelectSendPhysicsDataFPS
// (Private, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// int32                                   TickGroup                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  TickInterval                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBp_TransformSyncLiteComponent_C::SelectSendPhysicsDataFPS(int32 TickGroup, double* TickInterval)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Bp_TransformSyncLiteComponent_C", "SelectSendPhysicsDataFPS");

	Params::Bp_TransformSyncLiteComponent_C_SelectSendPhysicsDataFPS Parms{};

	Parms.TickGroup = TickGroup;

	UObject::ProcessEvent(Func, &Parms);

	if (TickInterval != nullptr)
		*TickInterval = Parms.TickInterval;
}


// Function Bp_TransformSyncLiteComponent.Bp_TransformSyncLiteComponent_C.SendTransforms
// (Private, HasDefaults, BlueprintCallable, BlueprintEvent)

void UBp_TransformSyncLiteComponent_C::SendTransforms()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Bp_TransformSyncLiteComponent_C", "SendTransforms");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Bp_TransformSyncLiteComponent.Bp_TransformSyncLiteComponent_C.SetAngularVelocity
// (Private, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          Velocity                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBp_TransformSyncLiteComponent_C::SetAngularVelocity(const struct FVector& Velocity)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Bp_TransformSyncLiteComponent_C", "SetAngularVelocity");

	Params::Bp_TransformSyncLiteComponent_C_SetAngularVelocity Parms{};

	Parms.Velocity = std::move(Velocity);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Bp_TransformSyncLiteComponent.Bp_TransformSyncLiteComponent_C.SetLinearVelocity
// (Private, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          Velocity                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBp_TransformSyncLiteComponent_C::SetLinearVelocity(const struct FVector& Velocity)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Bp_TransformSyncLiteComponent_C", "SetLinearVelocity");

	Params::Bp_TransformSyncLiteComponent_C_SetLinearVelocity Parms{};

	Parms.Velocity = std::move(Velocity);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Bp_TransformSyncLiteComponent.Bp_TransformSyncLiteComponent_C.SetOwner
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           NewOwner                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UBp_TransformSyncLiteComponent_C::SetOwner(class AActor* NewOwner)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Bp_TransformSyncLiteComponent_C", "SetOwner");

	Params::Bp_TransformSyncLiteComponent_C_SetOwner Parms{};

	Parms.NewOwner = NewOwner;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Bp_TransformSyncLiteComponent.Bp_TransformSyncLiteComponent_C.SetRelativeModeServer
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UPrimitiveComponent*              RelativeComponent_0                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UBp_TransformSyncLiteComponent_C::SetRelativeModeServer(class UPrimitiveComponent* RelativeComponent_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Bp_TransformSyncLiteComponent_C", "SetRelativeModeServer");

	Params::Bp_TransformSyncLiteComponent_C_SetRelativeModeServer Parms{};

	Parms.RelativeComponent_0 = RelativeComponent_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Bp_TransformSyncLiteComponent.Bp_TransformSyncLiteComponent_C.SetSimulatingServer
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsSimulating_0                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBp_TransformSyncLiteComponent_C::SetSimulatingServer(bool IsSimulating_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Bp_TransformSyncLiteComponent_C", "SetSimulatingServer");

	Params::Bp_TransformSyncLiteComponent_C_SetSimulatingServer Parms{};

	Parms.IsSimulating_0 = IsSimulating_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Bp_TransformSyncLiteComponent.Bp_TransformSyncLiteComponent_C.Sleep Function
// (Private, HasDefaults, BlueprintCallable, BlueprintEvent)

void UBp_TransformSyncLiteComponent_C::Sleep_Function()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Bp_TransformSyncLiteComponent_C", "Sleep Function");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Bp_TransformSyncLiteComponent.Bp_TransformSyncLiteComponent_C.UnbindSleepEvent
// (BlueprintCallable, BlueprintEvent)

void UBp_TransformSyncLiteComponent_C::UnbindSleepEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Bp_TransformSyncLiteComponent_C", "UnbindSleepEvent");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Bp_TransformSyncLiteComponent.Bp_TransformSyncLiteComponent_C.UnbindUpdateRate
// (BlueprintCallable, BlueprintEvent)

void UBp_TransformSyncLiteComponent_C::UnbindUpdateRate()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Bp_TransformSyncLiteComponent_C", "UnbindUpdateRate");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Bp_TransformSyncLiteComponent.Bp_TransformSyncLiteComponent_C.UnbindWakeEvent
// (BlueprintCallable, BlueprintEvent)

void UBp_TransformSyncLiteComponent_C::UnbindWakeEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Bp_TransformSyncLiteComponent_C", "UnbindWakeEvent");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Bp_TransformSyncLiteComponent.Bp_TransformSyncLiteComponent_C.UpdateRateOptimization
// (Private, HasDefaults, BlueprintCallable, BlueprintEvent)

void UBp_TransformSyncLiteComponent_C::UpdateRateOptimization()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Bp_TransformSyncLiteComponent_C", "UpdateRateOptimization");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Bp_TransformSyncLiteComponent.Bp_TransformSyncLiteComponent_C.UpdateRelativeTransformsServer
// (Net, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector_NetQuantize10            InLocation                                             (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
// struct FVector_NetQuantize10            InRotation                                             (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
// struct FVector_NetQuantize              LinearVelocity                                         (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
// struct FVector_NetQuantize              AngularVelocity                                        (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)

void UBp_TransformSyncLiteComponent_C::UpdateRelativeTransformsServer(const struct FVector_NetQuantize10& InLocation, const struct FVector_NetQuantize10& InRotation, const struct FVector_NetQuantize& LinearVelocity, const struct FVector_NetQuantize& AngularVelocity)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Bp_TransformSyncLiteComponent_C", "UpdateRelativeTransformsServer");

	Params::Bp_TransformSyncLiteComponent_C_UpdateRelativeTransformsServer Parms{};

	Parms.InLocation = std::move(InLocation);
	Parms.InRotation = std::move(InRotation);
	Parms.LinearVelocity = std::move(LinearVelocity);
	Parms.AngularVelocity = std::move(AngularVelocity);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Bp_TransformSyncLiteComponent.Bp_TransformSyncLiteComponent_C.UpdateTransforms
// (Private, HasDefaults, BlueprintCallable, BlueprintEvent)

void UBp_TransformSyncLiteComponent_C::UpdateTransforms()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Bp_TransformSyncLiteComponent_C", "UpdateTransforms");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Bp_TransformSyncLiteComponent.Bp_TransformSyncLiteComponent_C.UpdateWorldTransformsServer
// (Net, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector_NetQuantize10            InLocation                                             (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
// struct FVector_NetQuantize10            InRotation                                             (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
// struct FVector_NetQuantize              LinearVelocity                                         (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
// struct FVector_NetQuantize              AngularVelocity                                        (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)

void UBp_TransformSyncLiteComponent_C::UpdateWorldTransformsServer(const struct FVector_NetQuantize10& InLocation, const struct FVector_NetQuantize10& InRotation, const struct FVector_NetQuantize& LinearVelocity, const struct FVector_NetQuantize& AngularVelocity)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Bp_TransformSyncLiteComponent_C", "UpdateWorldTransformsServer");

	Params::Bp_TransformSyncLiteComponent_C_UpdateWorldTransformsServer Parms{};

	Parms.InLocation = std::move(InLocation);
	Parms.InRotation = std::move(InRotation);
	Parms.LinearVelocity = std::move(LinearVelocity);
	Parms.AngularVelocity = std::move(AngularVelocity);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Bp_TransformSyncLiteComponent.Bp_TransformSyncLiteComponent_C.WakeFunction
// (Private, BlueprintCallable, BlueprintEvent)

void UBp_TransformSyncLiteComponent_C::WakeFunction()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Bp_TransformSyncLiteComponent_C", "WakeFunction");

	UObject::ProcessEvent(Func, nullptr);
}

}

