#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WI_OnScreenIndicator

#include "Basic.hpp"

#include "WI_OnScreenIndicator_classes.hpp"
#include "WI_OnScreenIndicator_parameters.hpp"


namespace SDK
{

// Function WI_OnScreenIndicator.WI_OnScreenIndicator_C.ExecuteUbergraph_WI_OnScreenIndicator
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWI_OnScreenIndicator_C::ExecuteUbergraph_WI_OnScreenIndicator(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WI_OnScreenIndicator_C", "ExecuteUbergraph_WI_OnScreenIndicator");

	Params::WI_OnScreenIndicator_C_ExecuteUbergraph_WI_OnScreenIndicator Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WI_OnScreenIndicator.WI_OnScreenIndicator_C.SetCustomScale
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  NewScale                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWI_OnScreenIndicator_C::SetCustomScale(double NewScale)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WI_OnScreenIndicator_C", "SetCustomScale");

	Params::WI_OnScreenIndicator_C_SetCustomScale Parms{};

	Parms.NewScale = NewScale;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WI_OnScreenIndicator.WI_OnScreenIndicator_C.SetImageAndText
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UTexture2D*                       Image                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// struct FLinearColor                     ImageColor                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FText                             Text                                                   (BlueprintVisible, BlueprintReadOnly, Parm)
// struct FLinearColor                     TextColor                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Animate                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// E_IndicatorAnimation                    Animation                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWI_OnScreenIndicator_C::SetImageAndText(class UTexture2D* Image, const struct FLinearColor& ImageColor, const class FText& Text, const struct FLinearColor& TextColor, bool Animate, E_IndicatorAnimation Animation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WI_OnScreenIndicator_C", "SetImageAndText");

	Params::WI_OnScreenIndicator_C_SetImageAndText Parms{};

	Parms.Image = Image;
	Parms.ImageColor = std::move(ImageColor);
	Parms.Text = std::move(Text);
	Parms.TextColor = std::move(TextColor);
	Parms.Animate = Animate;
	Parms.Animation = Animation;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WI_OnScreenIndicator.WI_OnScreenIndicator_C.SetTextShadow
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FLinearColor                     Color                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector2D                        ShadowOffset                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWI_OnScreenIndicator_C::SetTextShadow(const struct FLinearColor& Color, const struct FVector2D& ShadowOffset)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WI_OnScreenIndicator_C", "SetTextShadow");

	Params::WI_OnScreenIndicator_C_SetTextShadow Parms{};

	Parms.Color = std::move(Color);
	Parms.ShadowOffset = std::move(ShadowOffset);

	UObject::ProcessEvent(Func, &Parms);
}

}

