#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_PickupBase

#include "Basic.hpp"

#include "BP_PickupBase_classes.hpp"
#include "BP_PickupBase_parameters.hpp"


namespace SDK
{

// Function BP_PickupBase.BP_PickupBase_C.Add Ammo
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   AmmoCount                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_PickupBase_C::Add_Ammo(int32 AmmoCount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PickupBase_C", "Add Ammo");

	Params::BP_PickupBase_C_Add_Ammo Parms{};

	Parms.AmmoCount = AmmoCount;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PickupBase.BP_PickupBase_C.AddNewItem
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UInventoryComponent*              Inventory_0                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class UItemInstance*                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash)

class UItemInstance* ABP_PickupBase_C::AddNewItem(class UInventoryComponent* Inventory_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PickupBase_C", "AddNewItem");

	Params::BP_PickupBase_C_AddNewItem Parms{};

	Parms.Inventory_0 = Inventory_0;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_PickupBase.BP_PickupBase_C.AmmoInPickup
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

int32 ABP_PickupBase_C::AmmoInPickup()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PickupBase_C", "AmmoInPickup");

	Params::BP_PickupBase_C_AmmoInPickup Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_PickupBase.BP_PickupBase_C.AssignCacheToItem
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UItemInstance*                    Item                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_PickupBase_C::AssignCacheToItem(class UItemInstance* Item)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PickupBase_C", "AssignCacheToItem");

	Params::BP_PickupBase_C_AssignCacheToItem Parms{};

	Parms.Item = Item;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PickupBase.BP_PickupBase_C.BndEvt__BP_PickupBase_StaticMeshComponent_K2Node_ComponentBoundEvent_0_ComponentSleepSignature__DelegateSignature
// (BlueprintEvent)
// Parameters:
// class UPrimitiveComponent*              SleepingComponent                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class FName                             BoneName                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_PickupBase_C::BndEvt__BP_PickupBase_StaticMeshComponent_K2Node_ComponentBoundEvent_0_ComponentSleepSignature__DelegateSignature(class UPrimitiveComponent* SleepingComponent, class FName BoneName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PickupBase_C", "BndEvt__BP_PickupBase_StaticMeshComponent_K2Node_ComponentBoundEvent_0_ComponentSleepSignature__DelegateSignature");

	Params::BP_PickupBase_C_BndEvt__BP_PickupBase_StaticMeshComponent_K2Node_ComponentBoundEvent_0_ComponentSleepSignature__DelegateSignature Parms{};

	Parms.SleepingComponent = SleepingComponent;
	Parms.BoneName = BoneName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PickupBase.BP_PickupBase_C.CalculateAmmoToAdd
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

int32 ABP_PickupBase_C::CalculateAmmoToAdd()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PickupBase_C", "CalculateAmmoToAdd");

	Params::BP_PickupBase_C_CalculateAmmoToAdd Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_PickupBase.BP_PickupBase_C.CanActivateTrap
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool ABP_PickupBase_C::CanActivateTrap()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PickupBase_C", "CanActivateTrap");

	Params::BP_PickupBase_C_CanActivateTrap Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_PickupBase.BP_PickupBase_C.CancelInteraction
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UPrimitiveComponent*              InteractionComponent                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void ABP_PickupBase_C::CancelInteraction(class UPrimitiveComponent* InteractionComponent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PickupBase_C", "CancelInteraction");

	Params::BP_PickupBase_C_CancelInteraction Parms{};

	Parms.InteractionComponent = InteractionComponent;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PickupBase.BP_PickupBase_C.CheckIfItemAlreadyInInventory
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           InteractingActor_0                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    ItemAlreadyInInventory                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_PickupBase_C::CheckIfItemAlreadyInInventory(class AActor* InteractingActor_0, bool* ItemAlreadyInInventory)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PickupBase_C", "CheckIfItemAlreadyInInventory");

	Params::BP_PickupBase_C_CheckIfItemAlreadyInInventory Parms{};

	Parms.InteractingActor_0 = InteractingActor_0;

	UObject::ProcessEvent(Func, &Parms);

	if (ItemAlreadyInInventory != nullptr)
		*ItemAlreadyInInventory = Parms.ItemAlreadyInInventory;
}


// Function BP_PickupBase.BP_PickupBase_C.DisplayFullAmmoMessage_Auth
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_ResidentCharacter_C*          BP_ResidentCharacter                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_PickupBase_C::DisplayFullAmmoMessage_Auth(class ABP_ResidentCharacter_C* BP_ResidentCharacter)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PickupBase_C", "DisplayFullAmmoMessage_Auth");

	Params::BP_PickupBase_C_DisplayFullAmmoMessage_Auth Parms{};

	Parms.BP_ResidentCharacter = BP_ResidentCharacter;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PickupBase.BP_PickupBase_C.DisplayFullInventoryMessage_Auth
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_ResidentCharacter_C*          BP_ResidentCharacter                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_PickupBase_C::DisplayFullInventoryMessage_Auth(class ABP_ResidentCharacter_C* BP_ResidentCharacter)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PickupBase_C", "DisplayFullInventoryMessage_Auth");

	Params::BP_PickupBase_C_DisplayFullInventoryMessage_Auth Parms{};

	Parms.BP_ResidentCharacter = BP_ResidentCharacter;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PickupBase.BP_PickupBase_C.Event Interact Cosmetics
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           InteractingActor_0                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*              InteractionComponent                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void ABP_PickupBase_C::Event_Interact_Cosmetics(class AActor* InteractingActor_0, class UPrimitiveComponent* InteractionComponent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PickupBase_C", "Event Interact Cosmetics");

	Params::BP_PickupBase_C_Event_Interact_Cosmetics Parms{};

	Parms.InteractingActor_0 = InteractingActor_0;
	Parms.InteractionComponent = InteractionComponent;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PickupBase.BP_PickupBase_C.ExecuteUbergraph_BP_PickupBase
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_PickupBase_C::ExecuteUbergraph_BP_PickupBase(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PickupBase_C", "ExecuteUbergraph_BP_PickupBase");

	Params::BP_PickupBase_C_ExecuteUbergraph_BP_PickupBase Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PickupBase.BP_PickupBase_C.GetDurability
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  Amount                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_PickupBase_C::GetDurability(double* Amount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PickupBase_C", "GetDurability");

	Params::BP_PickupBase_C_GetDurability Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Amount != nullptr)
		*Amount = Parms.Amount;
}


// Function BP_PickupBase.BP_PickupBase_C.GetInteractSound
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_PickupBase_C::GetInteractSound()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PickupBase_C", "GetInteractSound");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PickupBase.BP_PickupBase_C.GetItemColor
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FSlateColor                      SlateColor                                             (Parm, OutParm)
// int32                                   StencilValue                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_PickupBase_C::GetItemColor(struct FSlateColor* SlateColor, int32* StencilValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PickupBase_C", "GetItemColor");

	Params::BP_PickupBase_C_GetItemColor Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (SlateColor != nullptr)
		*SlateColor = std::move(Parms.SlateColor);

	if (StencilValue != nullptr)
		*StencilValue = Parms.StencilValue;
}


// Function BP_PickupBase.BP_PickupBase_C.GetNewWidgetColor
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FSlateColor                      NewColor                                               (Parm, OutParm)

void ABP_PickupBase_C::GetNewWidgetColor(struct FSlateColor* NewColor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PickupBase_C", "GetNewWidgetColor");

	Params::BP_PickupBase_C_GetNewWidgetColor Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (NewColor != nullptr)
		*NewColor = std::move(Parms.NewColor);
}


// Function BP_PickupBase.BP_PickupBase_C.GetOptionalText
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FText                             Return                                                 (Parm, OutParm)
// class FText                             Optional_Second_Line                                   (Parm, OutParm)

void ABP_PickupBase_C::GetOptionalText(class FText* Return, class FText* Optional_Second_Line)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PickupBase_C", "GetOptionalText");

	Params::BP_PickupBase_C_GetOptionalText Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Return != nullptr)
		*Return = std::move(Parms.Return);

	if (Optional_Second_Line != nullptr)
		*Optional_Second_Line = std::move(Parms.Optional_Second_Line);
}


// Function BP_PickupBase.BP_PickupBase_C.GetPriority
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Priority_0                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_PickupBase_C::GetPriority(int32* Priority_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PickupBase_C", "GetPriority");

	Params::BP_PickupBase_C_GetPriority Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Priority_0 != nullptr)
		*Priority_0 = Parms.Priority_0;
}


// Function BP_PickupBase.BP_PickupBase_C.GetRenderMeshes
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class UMeshComponent*>           Meshes                                                 (Parm, OutParm, ContainsInstancedReference)

void ABP_PickupBase_C::GetRenderMeshes(TArray<class UMeshComponent*>* Meshes)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PickupBase_C", "GetRenderMeshes");

	Params::BP_PickupBase_C_GetRenderMeshes Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Meshes != nullptr)
		*Meshes = std::move(Parms.Meshes);
}


// Function BP_PickupBase.BP_PickupBase_C.GetWidgetLocation
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          Location                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_PickupBase_C::GetWidgetLocation(struct FVector* Location)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PickupBase_C", "GetWidgetLocation");

	Params::BP_PickupBase_C_GetWidgetLocation Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Location != nullptr)
		*Location = std::move(Parms.Location);
}


// Function BP_PickupBase.BP_PickupBase_C.HideInteractionWidget
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Return                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_PickupBase_C::HideInteractionWidget(bool* Return)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PickupBase_C", "HideInteractionWidget");

	Params::BP_PickupBase_C_HideInteractionWidget Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Return != nullptr)
		*Return = Parms.Return;
}


// Function BP_PickupBase.BP_PickupBase_C.HighConstrastModeChanged
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsEnabled                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_PickupBase_C::HighConstrastModeChanged(bool IsEnabled)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PickupBase_C", "HighConstrastModeChanged");

	Params::BP_PickupBase_C_HighConstrastModeChanged Parms{};

	Parms.IsEnabled = IsEnabled;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PickupBase.BP_PickupBase_C.Interact Pressed Succes
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           InteractingActor_0                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_PickupBase_C::Interact_Pressed_Succes(class AActor* InteractingActor_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PickupBase_C", "Interact Pressed Succes");

	Params::BP_PickupBase_C_Interact_Pressed_Succes Parms{};

	Parms.InteractingActor_0 = InteractingActor_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PickupBase.BP_PickupBase_C.Interactable Cosmetics
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Interactable_0                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_PickupBase_C::Interactable_Cosmetics(bool Interactable_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PickupBase_C", "Interactable Cosmetics");

	Params::BP_PickupBase_C_Interactable_Cosmetics Parms{};

	Parms.Interactable_0 = Interactable_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PickupBase.BP_PickupBase_C.Interactable In Focus
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    InFocus                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_PickupBase_C::Interactable_In_Focus(bool InFocus)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PickupBase_C", "Interactable In Focus");

	Params::BP_PickupBase_C_Interactable_In_Focus Parms{};

	Parms.InFocus = InFocus;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PickupBase.BP_PickupBase_C.InteractableCancelInteraction
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UPrimitiveComponent*              InteractionComponent                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void ABP_PickupBase_C::InteractableCancelInteraction(class UPrimitiveComponent* InteractionComponent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PickupBase_C", "InteractableCancelInteraction");

	Params::BP_PickupBase_C_InteractableCancelInteraction Parms{};

	Parms.InteractionComponent = InteractionComponent;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PickupBase.BP_PickupBase_C.InteractPressed
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           InteractingActor_0                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_PickupBase_C::InteractPressed(class AActor* InteractingActor_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PickupBase_C", "InteractPressed");

	Params::BP_PickupBase_C_InteractPressed Parms{};

	Parms.InteractingActor_0 = InteractingActor_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PickupBase.BP_PickupBase_C.InteractReleased
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           InteractingActor_0                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_PickupBase_C::InteractReleased(class AActor* InteractingActor_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PickupBase_C", "InteractReleased");

	Params::BP_PickupBase_C_InteractReleased Parms{};

	Parms.InteractingActor_0 = InteractingActor_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PickupBase.BP_PickupBase_C.IsInFocus
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Focusing_Actor                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_PickupBase_C::IsInFocus(class AActor* Focusing_Actor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PickupBase_C", "IsInFocus");

	Params::BP_PickupBase_C_IsInFocus Parms{};

	Parms.Focusing_Actor = Focusing_Actor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PickupBase.BP_PickupBase_C.IsInteractable
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Interactable_0                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_PickupBase_C::IsInteractable(bool* Interactable_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PickupBase_C", "IsInteractable");

	Params::BP_PickupBase_C_IsInteractable Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Interactable_0 != nullptr)
		*Interactable_0 = Parms.Interactable_0;
}


// Function BP_PickupBase.BP_PickupBase_C.IsInventoryNotFull
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UInventoryComponent*              Inventory_0                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool ABP_PickupBase_C::IsInventoryNotFull(class UInventoryComponent* Inventory_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PickupBase_C", "IsInventoryNotFull");

	Params::BP_PickupBase_C_IsInventoryNotFull Parms{};

	Parms.Inventory_0 = Inventory_0;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_PickupBase.BP_PickupBase_C.IsThereAmmoMaximum
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    Return_Value                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_PickupBase_C::IsThereAmmoMaximum(bool* Return_Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PickupBase_C", "IsThereAmmoMaximum");

	Params::BP_PickupBase_C_IsThereAmmoMaximum Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Return_Value != nullptr)
		*Return_Value = Parms.Return_Value;
}


// Function BP_PickupBase.BP_PickupBase_C.Knockback
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          Velocity                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    XYOverride                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ZOverride                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  AirControlMultiplier                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Void                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_PickupBase_C::Knockback(const struct FVector& Velocity, bool XYOverride, bool ZOverride, double AirControlMultiplier, bool* Void)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PickupBase_C", "Knockback");

	Params::BP_PickupBase_C_Knockback Parms{};

	Parms.Velocity = std::move(Velocity);
	Parms.XYOverride = XYOverride;
	Parms.ZOverride = ZOverride;
	Parms.AirControlMultiplier = AirControlMultiplier;

	UObject::ProcessEvent(Func, &Parms);

	if (Void != nullptr)
		*Void = Parms.Void;
}


// Function BP_PickupBase.BP_PickupBase_C.MaxAmmoUnsetWarning
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_PickupBase_C::MaxAmmoUnsetWarning()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PickupBase_C", "MaxAmmoUnsetWarning");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PickupBase.BP_PickupBase_C.Multi_Interact Pressed Cosmetics
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)

void ABP_PickupBase_C::Multi_Interact_Pressed_Cosmetics()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PickupBase_C", "Multi_Interact Pressed Cosmetics");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PickupBase.BP_PickupBase_C.Multi_Launch
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          Velocity                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_PickupBase_C::Multi_Launch(const struct FVector& Velocity)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PickupBase_C", "Multi_Launch");

	Params::BP_PickupBase_C_Multi_Launch Parms{};

	Parms.Velocity = std::move(Velocity);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PickupBase.BP_PickupBase_C.Multi_Play Pick Up Audio
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)

void ABP_PickupBase_C::Multi_Play_Pick_Up_Audio()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PickupBase_C", "Multi_Play Pick Up Audio");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PickupBase.BP_PickupBase_C.MulticastPlayTPPPickupMontage
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)

void ABP_PickupBase_C::MulticastPlayTPPPickupMontage()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PickupBase_C", "MulticastPlayTPPPickupMontage");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PickupBase.BP_PickupBase_C.NonASCActorHit
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Instigator_0                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class UGameplayAbilityIW*               Ability                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// struct FHitResult                       Hit                                                    (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference)

void ABP_PickupBase_C::NonASCActorHit(class AActor* Instigator_0, class UGameplayAbilityIW* Ability, const struct FHitResult& Hit)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PickupBase_C", "NonASCActorHit");

	Params::BP_PickupBase_C_NonASCActorHit Parms{};

	Parms.Instigator_0 = Instigator_0;
	Parms.Ability = Ability;
	Parms.Hit = std::move(Hit);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PickupBase.BP_PickupBase_C.On_PickedUp__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Succes                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_PickupBase_C::On_PickedUp__DelegateSignature(bool Succes)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PickupBase_C", "On_PickedUp__DelegateSignature");

	Params::BP_PickupBase_C_On_PickedUp__DelegateSignature Parms{};

	Parms.Succes = Succes;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PickupBase.BP_PickupBase_C.On_PickedUpSucces__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)

void ABP_PickupBase_C::On_PickedUpSucces__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PickupBase_C", "On_PickedUpSucces__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PickupBase.BP_PickupBase_C.OnBlendOut_770EEC2341F018E6642145BB4D3B8DCF
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             NotifyName                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_PickupBase_C::OnBlendOut_770EEC2341F018E6642145BB4D3B8DCF(class FName NotifyName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PickupBase_C", "OnBlendOut_770EEC2341F018E6642145BB4D3B8DCF");

	Params::BP_PickupBase_C_OnBlendOut_770EEC2341F018E6642145BB4D3B8DCF Parms{};

	Parms.NotifyName = NotifyName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PickupBase.BP_PickupBase_C.OnBlendOut_C75049FD4FE6C1D28317FF882A5F7D3D
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             NotifyName                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_PickupBase_C::OnBlendOut_C75049FD4FE6C1D28317FF882A5F7D3D(class FName NotifyName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PickupBase_C", "OnBlendOut_C75049FD4FE6C1D28317FF882A5F7D3D");

	Params::BP_PickupBase_C_OnBlendOut_C75049FD4FE6C1D28317FF882A5F7D3D Parms{};

	Parms.NotifyName = NotifyName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PickupBase.BP_PickupBase_C.OnCompleted_770EEC2341F018E6642145BB4D3B8DCF
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             NotifyName                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_PickupBase_C::OnCompleted_770EEC2341F018E6642145BB4D3B8DCF(class FName NotifyName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PickupBase_C", "OnCompleted_770EEC2341F018E6642145BB4D3B8DCF");

	Params::BP_PickupBase_C_OnCompleted_770EEC2341F018E6642145BB4D3B8DCF Parms{};

	Parms.NotifyName = NotifyName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PickupBase.BP_PickupBase_C.OnCompleted_C75049FD4FE6C1D28317FF882A5F7D3D
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             NotifyName                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_PickupBase_C::OnCompleted_C75049FD4FE6C1D28317FF882A5F7D3D(class FName NotifyName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PickupBase_C", "OnCompleted_C75049FD4FE6C1D28317FF882A5F7D3D");

	Params::BP_PickupBase_C_OnCompleted_C75049FD4FE6C1D28317FF882A5F7D3D Parms{};

	Parms.NotifyName = NotifyName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PickupBase.BP_PickupBase_C.OnEnded_8DD6AD0C484431366F22F794B13C804E
// (BlueprintCallable, BlueprintEvent)

void ABP_PickupBase_C::OnEnded_8DD6AD0C484431366F22F794B13C804E()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PickupBase_C", "OnEnded_8DD6AD0C484431366F22F794B13C804E");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PickupBase.BP_PickupBase_C.OnInterrupted_770EEC2341F018E6642145BB4D3B8DCF
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             NotifyName                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_PickupBase_C::OnInterrupted_770EEC2341F018E6642145BB4D3B8DCF(class FName NotifyName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PickupBase_C", "OnInterrupted_770EEC2341F018E6642145BB4D3B8DCF");

	Params::BP_PickupBase_C_OnInterrupted_770EEC2341F018E6642145BB4D3B8DCF Parms{};

	Parms.NotifyName = NotifyName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PickupBase.BP_PickupBase_C.OnInterrupted_C75049FD4FE6C1D28317FF882A5F7D3D
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             NotifyName                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_PickupBase_C::OnInterrupted_C75049FD4FE6C1D28317FF882A5F7D3D(class FName NotifyName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PickupBase_C", "OnInterrupted_C75049FD4FE6C1D28317FF882A5F7D3D");

	Params::BP_PickupBase_C_OnInterrupted_C75049FD4FE6C1D28317FF882A5F7D3D Parms{};

	Parms.NotifyName = NotifyName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PickupBase.BP_PickupBase_C.OnNotifyBegin_770EEC2341F018E6642145BB4D3B8DCF
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             NotifyName                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_PickupBase_C::OnNotifyBegin_770EEC2341F018E6642145BB4D3B8DCF(class FName NotifyName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PickupBase_C", "OnNotifyBegin_770EEC2341F018E6642145BB4D3B8DCF");

	Params::BP_PickupBase_C_OnNotifyBegin_770EEC2341F018E6642145BB4D3B8DCF Parms{};

	Parms.NotifyName = NotifyName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PickupBase.BP_PickupBase_C.OnNotifyBegin_C75049FD4FE6C1D28317FF882A5F7D3D
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             NotifyName                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_PickupBase_C::OnNotifyBegin_C75049FD4FE6C1D28317FF882A5F7D3D(class FName NotifyName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PickupBase_C", "OnNotifyBegin_C75049FD4FE6C1D28317FF882A5F7D3D");

	Params::BP_PickupBase_C_OnNotifyBegin_C75049FD4FE6C1D28317FF882A5F7D3D Parms{};

	Parms.NotifyName = NotifyName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PickupBase.BP_PickupBase_C.OnNotifyEnd_770EEC2341F018E6642145BB4D3B8DCF
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             NotifyName                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_PickupBase_C::OnNotifyEnd_770EEC2341F018E6642145BB4D3B8DCF(class FName NotifyName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PickupBase_C", "OnNotifyEnd_770EEC2341F018E6642145BB4D3B8DCF");

	Params::BP_PickupBase_C_OnNotifyEnd_770EEC2341F018E6642145BB4D3B8DCF Parms{};

	Parms.NotifyName = NotifyName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PickupBase.BP_PickupBase_C.OnNotifyEnd_C75049FD4FE6C1D28317FF882A5F7D3D
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             NotifyName                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_PickupBase_C::OnNotifyEnd_C75049FD4FE6C1D28317FF882A5F7D3D(class FName NotifyName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PickupBase_C", "OnNotifyEnd_C75049FD4FE6C1D28317FF882A5F7D3D");

	Params::BP_PickupBase_C_OnNotifyEnd_C75049FD4FE6C1D28317FF882A5F7D3D Parms{};

	Parms.NotifyName = NotifyName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PickupBase.BP_PickupBase_C.OnRep_Interactable
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_PickupBase_C::OnRep_Interactable()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PickupBase_C", "OnRep_Interactable");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PickupBase.BP_PickupBase_C.PickupMessage
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_PickupBase_C::PickupMessage()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PickupBase_C", "PickupMessage");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PickupBase.BP_PickupBase_C.PlayDropSound
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_PickupBase_C::PlayDropSound()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PickupBase_C", "PlayDropSound");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PickupBase.BP_PickupBase_C.PlayErrorSound
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class USoundBase*                       Sound                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_PickupBase_C::PlayErrorSound(class USoundBase* Sound)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PickupBase_C", "PlayErrorSound");

	Params::BP_PickupBase_C_PlayErrorSound Parms{};

	Parms.Sound = Sound;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PickupBase.BP_PickupBase_C.PlayImpactCosmetics
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          Location                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FHitResult                       Hit                                                    (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
// class UPrimitiveComponent*              MyComponent                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void ABP_PickupBase_C::PlayImpactCosmetics(const struct FVector& Location, const struct FHitResult& Hit, class UPrimitiveComponent* MyComponent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PickupBase_C", "PlayImpactCosmetics");

	Params::BP_PickupBase_C_PlayImpactCosmetics Parms{};

	Parms.Location = std::move(Location);
	Parms.Hit = std::move(Hit);
	Parms.MyComponent = MyComponent;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PickupBase.BP_PickupBase_C.PostInteract
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           InteractingActor_0                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*              InteractionComponent                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void ABP_PickupBase_C::PostInteract(class AActor* InteractingActor_0, class UPrimitiveComponent* InteractionComponent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PickupBase_C", "PostInteract");

	Params::BP_PickupBase_C_PostInteract Parms{};

	Parms.InteractingActor_0 = InteractingActor_0;
	Parms.InteractionComponent = InteractionComponent;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PickupBase.BP_PickupBase_C.PreInteract
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           InteractingActor_0                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*              InteractionComponent                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void ABP_PickupBase_C::PreInteract(class AActor* InteractingActor_0, class UPrimitiveComponent* InteractionComponent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PickupBase_C", "PreInteract");

	Params::BP_PickupBase_C_PreInteract Parms{};

	Parms.InteractingActor_0 = InteractingActor_0;
	Parms.InteractionComponent = InteractionComponent;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PickupBase.BP_PickupBase_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ABP_PickupBase_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PickupBase_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PickupBase.BP_PickupBase_C.ReceiveHit
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// class UPrimitiveComponent*              MyComp                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class AActor*                           Other                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*              OtherComp                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// bool                                    bSelfMoved                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          HitLocation                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          HitNormal                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          NormalImpulse                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FHitResult                       Hit                                                    (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)

void ABP_PickupBase_C::ReceiveHit(class UPrimitiveComponent* MyComp, class AActor* Other, class UPrimitiveComponent* OtherComp, bool bSelfMoved, const struct FVector& HitLocation, const struct FVector& HitNormal, const struct FVector& NormalImpulse, const struct FHitResult& Hit)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PickupBase_C", "ReceiveHit");

	Params::BP_PickupBase_C_ReceiveHit Parms{};

	Parms.MyComp = MyComp;
	Parms.Other = Other;
	Parms.OtherComp = OtherComp;
	Parms.bSelfMoved = bSelfMoved;
	Parms.HitLocation = std::move(HitLocation);
	Parms.HitNormal = std::move(HitNormal);
	Parms.NormalImpulse = std::move(NormalImpulse);
	Parms.Hit = std::move(Hit);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PickupBase.BP_PickupBase_C.RegisterInteracter
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UPrimitiveComponent*              InteractionComponent                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class AActor*                           InteractingActor_0                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_PickupBase_C::RegisterInteracter(class UPrimitiveComponent* InteractionComponent, class AActor* InteractingActor_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PickupBase_C", "RegisterInteracter");

	Params::BP_PickupBase_C_RegisterInteracter Parms{};

	Parms.InteractionComponent = InteractionComponent;
	Parms.InteractingActor_0 = InteractingActor_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PickupBase.BP_PickupBase_C.ReloadAfterHousesLoaded
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Return                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_PickupBase_C::ReloadAfterHousesLoaded(bool* Return)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PickupBase_C", "ReloadAfterHousesLoaded");

	Params::BP_PickupBase_C_ReloadAfterHousesLoaded Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Return != nullptr)
		*Return = Parms.Return;
}


// Function BP_PickupBase.BP_PickupBase_C.Reset Cooldown
// (BlueprintCallable, BlueprintEvent)

void ABP_PickupBase_C::Reset_Cooldown()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PickupBase_C", "Reset Cooldown");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PickupBase.BP_PickupBase_C.ResetInventoryWidget
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_PickupBase_C::ResetInventoryWidget()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PickupBase_C", "ResetInventoryWidget");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PickupBase.BP_PickupBase_C.Set Widget Text and Color
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UItemDefinition*                  Definition                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    InventoryFull                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FText                             OptionalSecondText                                     (BlueprintVisible, BlueprintReadOnly, Parm)

void ABP_PickupBase_C::Set_Widget_Text_and_Color(class UItemDefinition* Definition, bool InventoryFull, const class FText& OptionalSecondText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PickupBase_C", "Set Widget Text and Color");

	Params::BP_PickupBase_C_Set_Widget_Text_and_Color Parms{};

	Parms.Definition = Definition;
	Parms.InventoryFull = InventoryFull;
	Parms.OptionalSecondText = std::move(OptionalSecondText);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PickupBase.BP_PickupBase_C.SetDurability
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  Amount                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Void                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_PickupBase_C::SetDurability(double Amount, bool* Void)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PickupBase_C", "SetDurability");

	Params::BP_PickupBase_C_SetDurability Parms{};

	Parms.Amount = Amount;

	UObject::ProcessEvent(Func, &Parms);

	if (Void != nullptr)
		*Void = Parms.Void;
}


// Function BP_PickupBase.BP_PickupBase_C.SetHighContrastMode
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Enabled                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_PickupBase_C::SetHighContrastMode(bool Enabled)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PickupBase_C", "SetHighContrastMode");

	Params::BP_PickupBase_C_SetHighContrastMode Parms{};

	Parms.Enabled = Enabled;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PickupBase.BP_PickupBase_C.SetHoveredComponent
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UInteractionComponent_C*          HoveredComponent                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// bool                                    Void                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_PickupBase_C::SetHoveredComponent(class UInteractionComponent_C* HoveredComponent, bool* Void)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PickupBase_C", "SetHoveredComponent");

	Params::BP_PickupBase_C_SetHoveredComponent Parms{};

	Parms.HoveredComponent = HoveredComponent;

	UObject::ProcessEvent(Func, &Parms);

	if (Void != nullptr)
		*Void = Parms.Void;
}


// Function BP_PickupBase.BP_PickupBase_C.SetInteractable
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Interactable_0                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_PickupBase_C::SetInteractable(bool Interactable_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PickupBase_C", "SetInteractable");

	Params::BP_PickupBase_C_SetInteractable Parms{};

	Parms.Interactable_0 = Interactable_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PickupBase.BP_PickupBase_C.SetWidgetForAmmoItems
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_PickupBase_C::SetWidgetForAmmoItems()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PickupBase_C", "SetWidgetForAmmoItems");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PickupBase.BP_PickupBase_C.ShouldAmmoBeAdded
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool ABP_PickupBase_C::ShouldAmmoBeAdded()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PickupBase_C", "ShouldAmmoBeAdded");

	Params::BP_PickupBase_C_ShouldAmmoBeAdded Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_PickupBase.BP_PickupBase_C.UnregisterInteracter
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UPrimitiveComponent*              InteractionComponent                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class AActor*                           InteractingActor_0                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_PickupBase_C::UnregisterInteracter(class UPrimitiveComponent* InteractionComponent, class AActor* InteractingActor_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PickupBase_C", "UnregisterInteracter");

	Params::BP_PickupBase_C_UnregisterInteracter Parms{};

	Parms.InteractionComponent = InteractionComponent;
	Parms.InteractingActor_0 = InteractingActor_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PickupBase.BP_PickupBase_C.UpdateInventoryWidget
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           InteractingActor_0                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_PickupBase_C::UpdateInventoryWidget(class AActor* InteractingActor_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PickupBase_C", "UpdateInventoryWidget");

	Params::BP_PickupBase_C_UpdateInventoryWidget Parms{};

	Parms.InteractingActor_0 = InteractingActor_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PickupBase.BP_PickupBase_C.UserConstructionScript
// (Event, Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_PickupBase_C::UserConstructionScript()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PickupBase_C", "UserConstructionScript");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PickupBase.BP_PickupBase_C.GetInteractionDuration
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// class UPrimitiveComponent*              InteractionComponent                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

float ABP_PickupBase_C::GetInteractionDuration(class UPrimitiveComponent* InteractionComponent) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PickupBase_C", "GetInteractionDuration");

	Params::BP_PickupBase_C_GetInteractionDuration Parms{};

	Parms.InteractionComponent = InteractionComponent;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_PickupBase.BP_PickupBase_C.GetPostInteractSyncType
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// bool                                    bShouldSync                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EAbilityTaskNetSyncType                 Type                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*              InteractionComponent                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void ABP_PickupBase_C::GetPostInteractSyncType(bool* bShouldSync, EAbilityTaskNetSyncType* Type, class UPrimitiveComponent* InteractionComponent) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PickupBase_C", "GetPostInteractSyncType");

	Params::BP_PickupBase_C_GetPostInteractSyncType Parms{};

	Parms.InteractionComponent = InteractionComponent;

	UObject::ProcessEvent(Func, &Parms);

	if (bShouldSync != nullptr)
		*bShouldSync = Parms.bShouldSync;

	if (Type != nullptr)
		*Type = Parms.Type;
}


// Function BP_PickupBase.BP_PickupBase_C.GetPreInteractSyncType
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// bool                                    bShouldSync                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EAbilityTaskNetSyncType                 Type                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*              InteractionComponent                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void ABP_PickupBase_C::GetPreInteractSyncType(bool* bShouldSync, EAbilityTaskNetSyncType* Type, class UPrimitiveComponent* InteractionComponent) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PickupBase_C", "GetPreInteractSyncType");

	Params::BP_PickupBase_C_GetPreInteractSyncType Parms{};

	Parms.InteractionComponent = InteractionComponent;

	UObject::ProcessEvent(Func, &Parms);

	if (bShouldSync != nullptr)
		*bShouldSync = Parms.bShouldSync;

	if (Type != nullptr)
		*Type = Parms.Type;
}


// Function BP_PickupBase.BP_PickupBase_C.IsAvailableForEnemyTeam
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// class UPrimitiveComponent*              InteractionComponent                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool ABP_PickupBase_C::IsAvailableForEnemyTeam(class UPrimitiveComponent* InteractionComponent) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PickupBase_C", "IsAvailableForEnemyTeam");

	Params::BP_PickupBase_C_IsAvailableForEnemyTeam Parms{};

	Parms.InteractionComponent = InteractionComponent;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_PickupBase.BP_PickupBase_C.IsAvailableForInteraction
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// class AActor*                           InteractingActor_0                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*              InteractionComponent                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool ABP_PickupBase_C::IsAvailableForInteraction(class AActor* InteractingActor_0, class UPrimitiveComponent* InteractionComponent) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PickupBase_C", "IsAvailableForInteraction");

	Params::BP_PickupBase_C_IsAvailableForInteraction Parms{};

	Parms.InteractingActor_0 = InteractingActor_0;
	Parms.InteractionComponent = InteractionComponent;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}

}

