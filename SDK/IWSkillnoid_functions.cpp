#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: IWSkillnoid

#include "Basic.hpp"

#include "IWSkillnoid_classes.hpp"
#include "IWSkillnoid_parameters.hpp"


namespace SDK
{

// Function IWSkillnoid.SkillnoidAuthTokenAsyncDelegate.GetConnectedSkillnoidAccount
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ConnectionToken                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   PollInterval                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   TokenTLL                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class USkillnoidAuthTokenAsyncDelegate* ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class USkillnoidAuthTokenAsyncDelegate* USkillnoidAuthTokenAsyncDelegate::GetConnectedSkillnoidAccount(class UObject* WorldContextObject, const class FString& ConnectionToken, int32 PollInterval, int32 TokenTLL)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("SkillnoidAuthTokenAsyncDelegate", "GetConnectedSkillnoidAccount");

	Params::SkillnoidAuthTokenAsyncDelegate_GetConnectedSkillnoidAccount Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.ConnectionToken = std::move(ConnectionToken);
	Parms.PollInterval = PollInterval;
	Parms.TokenTLL = TokenTLL;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function IWSkillnoid.SkillnoidGetAchievementsDelegate.GetSkillnoidAchievements
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           UserToken                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class USkillnoidGetAchievementsDelegate*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class USkillnoidGetAchievementsDelegate* USkillnoidGetAchievementsDelegate::GetSkillnoidAchievements(class UObject* WorldContextObject, const class FString& UserToken)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("SkillnoidGetAchievementsDelegate", "GetSkillnoidAchievements");

	Params::SkillnoidGetAchievementsDelegate_GetSkillnoidAchievements Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.UserToken = std::move(UserToken);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function IWSkillnoid.SkillnoidCollectAchievementsDelegate.CollectSkillnoidAchievement
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           UserToken                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           AchievementID                                          (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class USkillnoidCollectAchievementsDelegate*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class USkillnoidCollectAchievementsDelegate* USkillnoidCollectAchievementsDelegate::CollectSkillnoidAchievement(class UObject* WorldContextObject, const class FString& UserToken, const class FString& AchievementID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("SkillnoidCollectAchievementsDelegate", "CollectSkillnoidAchievement");

	Params::SkillnoidCollectAchievementsDelegate_CollectSkillnoidAchievement Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.UserToken = std::move(UserToken);
	Parms.AchievementID = std::move(AchievementID);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function IWSkillnoid.SkillnoidQrDownloader.DownloadSkillNoidQrCode
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FString                           CurrentDirectToken                                     (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class USkillnoidQrDownloader*           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class USkillnoidQrDownloader* USkillnoidQrDownloader::DownloadSkillNoidQrCode(const class FString& CurrentDirectToken)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("SkillnoidQrDownloader", "DownloadSkillNoidQrCode");

	Params::SkillnoidQrDownloader_DownloadSkillNoidQrCode Parms{};

	Parms.CurrentDirectToken = std::move(CurrentDirectToken);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}

}

