#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WI_Objective

#include "Basic.hpp"

#include "WI_Objective_classes.hpp"
#include "WI_Objective_parameters.hpp"


namespace SDK
{

// Function WI_Objective.WI_Objective_C.AddObjectiveTracker
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class APlayerState*                     TrackingPlayer                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UWI_Objective_C::AddObjectiveTracker(class APlayerState* TrackingPlayer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WI_Objective_C", "AddObjectiveTracker");

	Params::WI_Objective_C_AddObjectiveTracker Parms{};

	Parms.TrackingPlayer = TrackingPlayer;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WI_Objective.WI_Objective_C.CalculateTimeUntilObjectiveEnd
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UWI_Objective_C::CalculateTimeUntilObjectiveEnd()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WI_Objective_C", "CalculateTimeUntilObjectiveEnd");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WI_Objective.WI_Objective_C.Client_UpdateTimer
// (BlueprintCallable, BlueprintEvent)

void UWI_Objective_C::Client_UpdateTimer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WI_Objective_C", "Client_UpdateTimer");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WI_Objective.WI_Objective_C.ExecuteUbergraph_WI_Objective
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWI_Objective_C::ExecuteUbergraph_WI_Objective(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WI_Objective_C", "ExecuteUbergraph_WI_Objective");

	Params::WI_Objective_C_ExecuteUbergraph_WI_Objective Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WI_Objective.WI_Objective_C.OnInitialized
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UWI_Objective_C::OnInitialized()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WI_Objective_C", "OnInitialized");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WI_Objective.WI_Objective_C.PreConstruct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// bool                                    IsDesignTime                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWI_Objective_C::PreConstruct(bool IsDesignTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WI_Objective_C", "PreConstruct");

	Params::WI_Objective_C_PreConstruct Parms{};

	Parms.IsDesignTime = IsDesignTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WI_Objective.WI_Objective_C.RemoveFromList
// (BlueprintCallable, BlueprintEvent)

void UWI_Objective_C::RemoveFromList()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WI_Objective_C", "RemoveFromList");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WI_Objective.WI_Objective_C.Set Visuals
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObjectiveDefinition*             ObjectiveDefinition                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UWI_Objective_C::Set_Visuals(class UObjectiveDefinition* ObjectiveDefinition)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WI_Objective_C", "Set Visuals");

	Params::WI_Objective_C_Set_Visuals Parms{};

	Parms.ObjectiveDefinition = ObjectiveDefinition;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WI_Objective.WI_Objective_C.SetCompletedStatus
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsCompleted                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWI_Objective_C::SetCompletedStatus(bool IsCompleted)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WI_Objective_C", "SetCompletedStatus");

	Params::WI_Objective_C_SetCompletedStatus Parms{};

	Parms.IsCompleted = IsCompleted;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WI_Objective.WI_Objective_C.SetObjectiveReward
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FText                             ObjectiveReward_0                                      (BlueprintVisible, BlueprintReadOnly, Parm)

void UWI_Objective_C::SetObjectiveReward(const class FText& ObjectiveReward_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WI_Objective_C", "SetObjectiveReward");

	Params::WI_Objective_C_SetObjectiveReward Parms{};

	Parms.ObjectiveReward_0 = std::move(ObjectiveReward_0);

	UObject::ProcessEvent(Func, &Parms);
}


// Function WI_Objective.WI_Objective_C.SetObjectiveTitle
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FText                             ObjectiveTitle_0                                       (BlueprintVisible, BlueprintReadOnly, Parm)

void UWI_Objective_C::SetObjectiveTitle(const class FText& ObjectiveTitle_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WI_Objective_C", "SetObjectiveTitle");

	Params::WI_Objective_C_SetObjectiveTitle Parms{};

	Parms.ObjectiveTitle_0 = std::move(ObjectiveTitle_0);

	UObject::ProcessEvent(Func, &Parms);
}


// Function WI_Objective.WI_Objective_C.SetupVisualsForTutorialObjective
// (Public, BlueprintCallable, BlueprintEvent)

void UWI_Objective_C::SetupVisualsForTutorialObjective()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WI_Objective_C", "SetupVisualsForTutorialObjective");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WI_Objective.WI_Objective_C.StartAddAnimation
// (BlueprintCallable, BlueprintEvent)

void UWI_Objective_C::StartAddAnimation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WI_Objective_C", "StartAddAnimation");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WI_Objective.WI_Objective_C.StartRemoveAnim
// (BlueprintCallable, BlueprintEvent)

void UWI_Objective_C::StartRemoveAnim()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WI_Objective_C", "StartRemoveAnim");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WI_Objective.WI_Objective_C.StartShowObjective
// (BlueprintCallable, BlueprintEvent)

void UWI_Objective_C::StartShowObjective()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WI_Objective_C", "StartShowObjective");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WI_Objective.WI_Objective_C.TimeSinceObjectiveCreated
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class ASubObjective*                    SubObjective                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// double                                  ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

double UWI_Objective_C::TimeSinceObjectiveCreated(class ASubObjective* SubObjective)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WI_Objective_C", "TimeSinceObjectiveCreated");

	Params::WI_Objective_C_TimeSinceObjectiveCreated Parms{};

	Parms.SubObjective = SubObjective;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}

}

