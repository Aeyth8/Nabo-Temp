#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_AimCompensatorComponent

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "SlateCore_structs.hpp"
#include "AimAssistScripts_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_AimCompensatorComponent.BP_AimCompensatorComponent_C
// 0x0028 (0x01E8 - 0x01C0)
class UBP_AimCompensatorComponent_C final : public UAimCompensatorComponent
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x01C0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct FSlateColor                            ReticleColor;                                      // 0x01C8(0x0014)(Edit, BlueprintVisible)
	uint8                                         Pad_1DC[0x4];                                      // 0x01DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UW_AimAssistReticle_C*                  AimAssistReticle;                                  // 0x01E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

public:
	bool CanTargetActor(const class AActor* HitActor);
	void ExecuteUbergraph_BP_AimCompensatorComponent(int32 EntryPoint);
	void OnAimAssistEnabled_Event(bool IsEnabled);
	void ReceiveBeginPlay();
	void ReceiveEndPlay(EEndPlayReason EndPlayReason);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_AimCompensatorComponent_C">();
	}
	static class UBP_AimCompensatorComponent_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_AimCompensatorComponent_C>();
	}
};
static_assert(alignof(UBP_AimCompensatorComponent_C) == 0x000008, "Wrong alignment on UBP_AimCompensatorComponent_C");
static_assert(sizeof(UBP_AimCompensatorComponent_C) == 0x0001E8, "Wrong size on UBP_AimCompensatorComponent_C");
static_assert(offsetof(UBP_AimCompensatorComponent_C, UberGraphFrame) == 0x0001C0, "Member 'UBP_AimCompensatorComponent_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UBP_AimCompensatorComponent_C, ReticleColor) == 0x0001C8, "Member 'UBP_AimCompensatorComponent_C::ReticleColor' has a wrong offset!");
static_assert(offsetof(UBP_AimCompensatorComponent_C, AimAssistReticle) == 0x0001E0, "Member 'UBP_AimCompensatorComponent_C::AimAssistReticle' has a wrong offset!");

}

