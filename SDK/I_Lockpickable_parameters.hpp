#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: I_Lockpickable

#include "Basic.hpp"


namespace SDK::Params
{

// Function I_Lockpickable.I_Lockpickable_C.GetLockPickDuration
// 0x0004 (0x0004 - 0x0000)
struct I_Lockpickable_C_GetLockPickDuration final
{
public:
	int32                                         Return;                                            // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(I_Lockpickable_C_GetLockPickDuration) == 0x000004, "Wrong alignment on I_Lockpickable_C_GetLockPickDuration");
static_assert(sizeof(I_Lockpickable_C_GetLockPickDuration) == 0x000004, "Wrong size on I_Lockpickable_C_GetLockPickDuration");
static_assert(offsetof(I_Lockpickable_C_GetLockPickDuration, Return) == 0x000000, "Member 'I_Lockpickable_C_GetLockPickDuration::Return' has a wrong offset!");

// Function I_Lockpickable.I_Lockpickable_C.IsClosed
// 0x0001 (0x0001 - 0x0000)
struct I_Lockpickable_C_IsClosed final
{
public:
	bool                                          Open;                                              // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(I_Lockpickable_C_IsClosed) == 0x000001, "Wrong alignment on I_Lockpickable_C_IsClosed");
static_assert(sizeof(I_Lockpickable_C_IsClosed) == 0x000001, "Wrong size on I_Lockpickable_C_IsClosed");
static_assert(offsetof(I_Lockpickable_C_IsClosed, Open) == 0x000000, "Member 'I_Lockpickable_C_IsClosed::Open' has a wrong offset!");

// Function I_Lockpickable.I_Lockpickable_C.IsNotLockpickable
// 0x0001 (0x0001 - 0x0000)
struct I_Lockpickable_C_IsNotLockpickable final
{
public:
	bool                                          IsNotLockpickable_0;                               // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(I_Lockpickable_C_IsNotLockpickable) == 0x000001, "Wrong alignment on I_Lockpickable_C_IsNotLockpickable");
static_assert(sizeof(I_Lockpickable_C_IsNotLockpickable) == 0x000001, "Wrong size on I_Lockpickable_C_IsNotLockpickable");
static_assert(offsetof(I_Lockpickable_C_IsNotLockpickable, IsNotLockpickable_0) == 0x000000, "Member 'I_Lockpickable_C_IsNotLockpickable::IsNotLockpickable_0' has a wrong offset!");

// Function I_Lockpickable.I_Lockpickable_C.LockpickBegin
// 0x0008 (0x0008 - 0x0000)
struct I_Lockpickable_C_LockpickBegin final
{
public:
	class APlayerController*                      PickerController;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(I_Lockpickable_C_LockpickBegin) == 0x000008, "Wrong alignment on I_Lockpickable_C_LockpickBegin");
static_assert(sizeof(I_Lockpickable_C_LockpickBegin) == 0x000008, "Wrong size on I_Lockpickable_C_LockpickBegin");
static_assert(offsetof(I_Lockpickable_C_LockpickBegin, PickerController) == 0x000000, "Member 'I_Lockpickable_C_LockpickBegin::PickerController' has a wrong offset!");

// Function I_Lockpickable.I_Lockpickable_C.LockpickSuccess
// 0x0008 (0x0008 - 0x0000)
struct I_Lockpickable_C_LockpickSuccess final
{
public:
	class APlayerController*                      PickerController;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(I_Lockpickable_C_LockpickSuccess) == 0x000008, "Wrong alignment on I_Lockpickable_C_LockpickSuccess");
static_assert(sizeof(I_Lockpickable_C_LockpickSuccess) == 0x000008, "Wrong size on I_Lockpickable_C_LockpickSuccess");
static_assert(offsetof(I_Lockpickable_C_LockpickSuccess, PickerController) == 0x000000, "Member 'I_Lockpickable_C_LockpickSuccess::PickerController' has a wrong offset!");

}

