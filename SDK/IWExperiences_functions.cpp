#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: IWExperiences

#include "Basic.hpp"

#include "IWExperiences_classes.hpp"
#include "IWExperiences_parameters.hpp"


namespace SDK
{

// Function IWExperiences.AsyncAction_ExperienceReady.WaitForExperienceReady
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UAsyncAction_ExperienceReady*     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UAsyncAction_ExperienceReady* UAsyncAction_ExperienceReady::WaitForExperienceReady(class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AsyncAction_ExperienceReady", "WaitForExperienceReady");

	Params::AsyncAction_ExperienceReady_WaitForExperienceReady Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function IWExperiences.AsyncAction_ExperienceReady.Step2_HandleExperienceLoaded
// (Final, Native, Private)
// Parameters:
// class UExperienceDefinition*            CurrentExperience                                      (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAsyncAction_ExperienceReady::Step2_HandleExperienceLoaded(const class UExperienceDefinition* CurrentExperience)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AsyncAction_ExperienceReady", "Step2_HandleExperienceLoaded");

	Params::AsyncAction_ExperienceReady_Step2_HandleExperienceLoaded Parms{};

	Parms.CurrentExperience = CurrentExperience;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function IWExperiences.ExperienceFunctionLibrary.GetPrimaryAssetIdFromUserFacingExperienceName
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class FString                           AdvertisedExperienceID                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FPrimaryAssetId                  ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FPrimaryAssetId UExperienceFunctionLibrary::GetPrimaryAssetIdFromUserFacingExperienceName(const class FString& AdvertisedExperienceID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("ExperienceFunctionLibrary", "GetPrimaryAssetIdFromUserFacingExperienceName");

	Params::ExperienceFunctionLibrary_GetPrimaryAssetIdFromUserFacingExperienceName Parms{};

	Parms.AdvertisedExperienceID = std::move(AdvertisedExperienceID);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function IWExperiences.ExperienceWorldSubsystem.ExperienceLoaded
// (Final, Native, Private)
// Parameters:
// class UExperienceDefinition*            Experience                                             (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UExperienceWorldSubsystem::ExperienceLoaded(const class UExperienceDefinition* Experience)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExperienceWorldSubsystem", "ExperienceLoaded");

	Params::ExperienceWorldSubsystem_ExperienceLoaded Parms{};

	Parms.Experience = Experience;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function IWExperiences.ExperienceWorldSubsystem.ExperienceLoaded_HighPriority
// (Final, Native, Private)
// Parameters:
// class UExperienceDefinition*            Experience                                             (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UExperienceWorldSubsystem::ExperienceLoaded_HighPriority(const class UExperienceDefinition* Experience)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExperienceWorldSubsystem", "ExperienceLoaded_HighPriority");

	Params::ExperienceWorldSubsystem_ExperienceLoaded_HighPriority Parms{};

	Parms.Experience = Experience;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function IWExperiences.ExperienceWorldSubsystem.ExperienceLoaded_LowPriority
// (Final, Native, Private)
// Parameters:
// class UExperienceDefinition*            Experience                                             (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UExperienceWorldSubsystem::ExperienceLoaded_LowPriority(const class UExperienceDefinition* Experience)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExperienceWorldSubsystem", "ExperienceLoaded_LowPriority");

	Params::ExperienceWorldSubsystem_ExperienceLoaded_LowPriority Parms{};

	Parms.Experience = Experience;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function IWExperiences.ExperienceWorldSubsystem.InitializeNextFrame
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)

void UExperienceWorldSubsystem::InitializeNextFrame()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExperienceWorldSubsystem", "InitializeNextFrame");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function IWExperiences.ExperienceWorldSubsystem.GetCurrentDefinition
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const class UExperienceDefinition*      ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const class UExperienceDefinition* UExperienceWorldSubsystem::GetCurrentDefinition() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExperienceWorldSubsystem", "GetCurrentDefinition");

	Params::ExperienceWorldSubsystem_GetCurrentDefinition Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function IWExperiences.ExperienceWorldSubsystem.HasExperienceLoaded
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UExperienceWorldSubsystem::HasExperienceLoaded() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExperienceWorldSubsystem", "HasExperienceLoaded");

	Params::ExperienceWorldSubsystem_HasExperienceLoaded Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function IWExperiences.UserFacingExperienceDefinition.CreateHostingRequest
// (Final, Native, Public, BlueprintCallable, Const)
// Parameters:
// class UCommonSession_HostSessionRequest*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UCommonSession_HostSessionRequest* UUserFacingExperienceDefinition::CreateHostingRequest() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UserFacingExperienceDefinition", "CreateHostingRequest");

	Params::UserFacingExperienceDefinition_CreateHostingRequest Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function IWExperiences.ExperienceManagerComponent.OnRep_CurrentExperience
// (Final, Native, Private)

void UExperienceManagerComponent::OnRep_CurrentExperience()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExperienceManagerComponent", "OnRep_CurrentExperience");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}

}

