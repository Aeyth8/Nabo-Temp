#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: I_Equipable

#include "Basic.hpp"

#include "GASIW_structs.hpp"


namespace SDK::Params
{

// Function I_Equipable.I_Equipable_C.GetViewMode
// 0x0001 (0x0001 - 0x0000)
struct I_Equipable_C_GetViewMode final
{
public:
	EEquipmentViewMode                            ViewMode;                                          // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(I_Equipable_C_GetViewMode) == 0x000001, "Wrong alignment on I_Equipable_C_GetViewMode");
static_assert(sizeof(I_Equipable_C_GetViewMode) == 0x000001, "Wrong size on I_Equipable_C_GetViewMode");
static_assert(offsetof(I_Equipable_C_GetViewMode, ViewMode) == 0x000000, "Member 'I_Equipable_C_GetViewMode::ViewMode' has a wrong offset!");

// Function I_Equipable.I_Equipable_C.PlayEquipableMontage
// 0x0038 (0x0038 - 0x0000)
struct I_Equipable_C_PlayEquipableMontage final
{
public:
	class UAnimMontage*                           MontageToPlay;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAnimInstance*                          FollowerAnimInstance;                              // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           MontageLeader;                                     // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           CurrentActiveMontage;                              // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAnimInstance*                          OtherAnimInstance;                                 // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        InPlayRate;                                        // 0x0028(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bBlocking;                                         // 0x0030(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bItemReady;                                        // 0x0031(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(I_Equipable_C_PlayEquipableMontage) == 0x000008, "Wrong alignment on I_Equipable_C_PlayEquipableMontage");
static_assert(sizeof(I_Equipable_C_PlayEquipableMontage) == 0x000038, "Wrong size on I_Equipable_C_PlayEquipableMontage");
static_assert(offsetof(I_Equipable_C_PlayEquipableMontage, MontageToPlay) == 0x000000, "Member 'I_Equipable_C_PlayEquipableMontage::MontageToPlay' has a wrong offset!");
static_assert(offsetof(I_Equipable_C_PlayEquipableMontage, FollowerAnimInstance) == 0x000008, "Member 'I_Equipable_C_PlayEquipableMontage::FollowerAnimInstance' has a wrong offset!");
static_assert(offsetof(I_Equipable_C_PlayEquipableMontage, MontageLeader) == 0x000010, "Member 'I_Equipable_C_PlayEquipableMontage::MontageLeader' has a wrong offset!");
static_assert(offsetof(I_Equipable_C_PlayEquipableMontage, CurrentActiveMontage) == 0x000018, "Member 'I_Equipable_C_PlayEquipableMontage::CurrentActiveMontage' has a wrong offset!");
static_assert(offsetof(I_Equipable_C_PlayEquipableMontage, OtherAnimInstance) == 0x000020, "Member 'I_Equipable_C_PlayEquipableMontage::OtherAnimInstance' has a wrong offset!");
static_assert(offsetof(I_Equipable_C_PlayEquipableMontage, InPlayRate) == 0x000028, "Member 'I_Equipable_C_PlayEquipableMontage::InPlayRate' has a wrong offset!");
static_assert(offsetof(I_Equipable_C_PlayEquipableMontage, bBlocking) == 0x000030, "Member 'I_Equipable_C_PlayEquipableMontage::bBlocking' has a wrong offset!");
static_assert(offsetof(I_Equipable_C_PlayEquipableMontage, bItemReady) == 0x000031, "Member 'I_Equipable_C_PlayEquipableMontage::bItemReady' has a wrong offset!");

}

