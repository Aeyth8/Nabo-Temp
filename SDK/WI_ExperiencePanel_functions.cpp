#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WI_ExperiencePanel

#include "Basic.hpp"

#include "WI_ExperiencePanel_classes.hpp"
#include "WI_ExperiencePanel_parameters.hpp"


namespace SDK
{

// Function WI_ExperiencePanel.WI_ExperiencePanel_C.AddRewardEntry
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UWI_ExperiencePanel_RewardEntry_C*RewardEntryWidget                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class UWI_ExperiencePanel_RewardEntry_C*OutRewardEntryWidget                                   (Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class UHorizontalBoxSlot*               OutPanelSlot                                           (Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UWI_ExperiencePanel_C::AddRewardEntry(class UWI_ExperiencePanel_RewardEntry_C* RewardEntryWidget, class UWI_ExperiencePanel_RewardEntry_C** OutRewardEntryWidget, class UHorizontalBoxSlot** OutPanelSlot)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WI_ExperiencePanel_C", "AddRewardEntry");

	Params::WI_ExperiencePanel_C_AddRewardEntry Parms{};

	Parms.RewardEntryWidget = RewardEntryWidget;

	UObject::ProcessEvent(Func, &Parms);

	if (OutRewardEntryWidget != nullptr)
		*OutRewardEntryWidget = Parms.OutRewardEntryWidget;

	if (OutPanelSlot != nullptr)
		*OutPanelSlot = Parms.OutPanelSlot;
}


// Function WI_ExperiencePanel.WI_ExperiencePanel_C.Create Profile XPEntry
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UWI_ExperiencePanel_C::Create_Profile_XPEntry()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WI_ExperiencePanel_C", "Create Profile XPEntry");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WI_ExperiencePanel.WI_ExperiencePanel_C.CreateCurrencyRewardWidget
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGameplayTag                     CurrencyTag                                            (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
// int32                                   CurrencyAmount                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UWI_ExperiencePanel_RewardEntry_C*CurrencyRewardWidget                                   (Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UWI_ExperiencePanel_C::CreateCurrencyRewardWidget(const struct FGameplayTag& CurrencyTag, int32 CurrencyAmount, class UWI_ExperiencePanel_RewardEntry_C** CurrencyRewardWidget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WI_ExperiencePanel_C", "CreateCurrencyRewardWidget");

	Params::WI_ExperiencePanel_C_CreateCurrencyRewardWidget Parms{};

	Parms.CurrencyTag = std::move(CurrencyTag);
	Parms.CurrencyAmount = CurrencyAmount;

	UObject::ProcessEvent(Func, &Parms);

	if (CurrencyRewardWidget != nullptr)
		*CurrencyRewardWidget = Parms.CurrencyRewardWidget;
}


// Function WI_ExperiencePanel.WI_ExperiencePanel_C.CreateXPRewardWidget
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsOnWinningTeam_0                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    IsNeighborXP_0                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FText                             NeighborName                                           (BlueprintVisible, BlueprintReadOnly, Parm)
// int32                                   XP_Value                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UWI_ExperiencePanel_RewardEntry_C*XPRewardWidget                                         (Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UWI_ExperiencePanel_C::CreateXPRewardWidget(bool IsOnWinningTeam_0, bool IsNeighborXP_0, const class FText& NeighborName, int32 XP_Value, class UWI_ExperiencePanel_RewardEntry_C** XPRewardWidget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WI_ExperiencePanel_C", "CreateXPRewardWidget");

	Params::WI_ExperiencePanel_C_CreateXPRewardWidget Parms{};

	Parms.IsOnWinningTeam_0 = IsOnWinningTeam_0;
	Parms.IsNeighborXP_0 = IsNeighborXP_0;
	Parms.NeighborName = std::move(NeighborName);
	Parms.XP_Value = XP_Value;

	UObject::ProcessEvent(Func, &Parms);

	if (XPRewardWidget != nullptr)
		*XPRewardWidget = Parms.XPRewardWidget;
}


// Function WI_ExperiencePanel.WI_ExperiencePanel_C.EditorOnlyCreateRewardWidgets
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UWI_ExperiencePanel_C::EditorOnlyCreateRewardWidgets()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WI_ExperiencePanel_C", "EditorOnlyCreateRewardWidgets");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WI_ExperiencePanel.WI_ExperiencePanel_C.ExecuteUbergraph_WI_ExperiencePanel
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWI_ExperiencePanel_C::ExecuteUbergraph_WI_ExperiencePanel(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WI_ExperiencePanel_C", "ExecuteUbergraph_WI_ExperiencePanel");

	Params::WI_ExperiencePanel_C_ExecuteUbergraph_WI_ExperiencePanel Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WI_ExperiencePanel.WI_ExperiencePanel_C.GetNeighborNameFromPlayerState
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class APlayerStateJP*                   PlayerStateJP                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class FText                             Name_0                                                 (Parm, OutParm)

void UWI_ExperiencePanel_C::GetNeighborNameFromPlayerState(class APlayerStateJP* PlayerStateJP, class FText* Name_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WI_ExperiencePanel_C", "GetNeighborNameFromPlayerState");

	Params::WI_ExperiencePanel_C_GetNeighborNameFromPlayerState Parms{};

	Parms.PlayerStateJP = PlayerStateJP;

	UObject::ProcessEvent(Func, &Parms);

	if (Name_0 != nullptr)
		*Name_0 = std::move(Parms.Name_0);
}


// Function WI_ExperiencePanel.WI_ExperiencePanel_C.GetReasonText
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm)

class FText UWI_ExperiencePanel_C::GetReasonText()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WI_ExperiencePanel_C", "GetReasonText");

	Params::WI_ExperiencePanel_C_GetReasonText Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function WI_ExperiencePanel.WI_ExperiencePanel_C.GetUserFacingReason
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    IsOnWinningTeam_0                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// uint8                                   UserFacingReason                                       (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWI_ExperiencePanel_C::GetUserFacingReason(bool IsOnWinningTeam_0, uint8* UserFacingReason)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WI_ExperiencePanel_C", "GetUserFacingReason");

	Params::WI_ExperiencePanel_C_GetUserFacingReason Parms{};

	Parms.IsOnWinningTeam_0 = IsOnWinningTeam_0;

	UObject::ProcessEvent(Func, &Parms);

	if (UserFacingReason != nullptr)
		*UserFacingReason = Parms.UserFacingReason;
}


// Function WI_ExperiencePanel.WI_ExperiencePanel_C.PreConstruct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// bool                                    IsDesignTime                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWI_ExperiencePanel_C::PreConstruct(bool IsDesignTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WI_ExperiencePanel_C", "PreConstruct");

	Params::WI_ExperiencePanel_C_PreConstruct Parms{};

	Parms.IsDesignTime = IsDesignTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WI_ExperiencePanel.WI_ExperiencePanel_C.ReduceXP
// (BlueprintCallable, BlueprintEvent)

void UWI_ExperiencePanel_C::ReduceXP()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WI_ExperiencePanel_C", "ReduceXP");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WI_ExperiencePanel.WI_ExperiencePanel_C.RemoveAllRewardEntries
// (Public, BlueprintCallable, BlueprintEvent)

void UWI_ExperiencePanel_C::RemoveAllRewardEntries()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WI_ExperiencePanel_C", "RemoveAllRewardEntries");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WI_ExperiencePanel.WI_ExperiencePanel_C.SetIsOnWinningTeam
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsOnWinningTeam_0                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWI_ExperiencePanel_C::SetIsOnWinningTeam(bool IsOnWinningTeam_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WI_ExperiencePanel_C", "SetIsOnWinningTeam");

	Params::WI_ExperiencePanel_C_SetIsOnWinningTeam Parms{};

	Parms.IsOnWinningTeam_0 = IsOnWinningTeam_0;

	UObject::ProcessEvent(Func, &Parms);
}

}

