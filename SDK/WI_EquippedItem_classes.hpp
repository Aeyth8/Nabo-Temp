#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WI_EquippedItem

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "ItemData_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WI_EquippedItem.WI_EquippedItem_C
// 0x00C8 (0x03A8 - 0x02E0)
class UWI_EquippedItem_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02E0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UTextBlock*                             Ammo;                                              // 0x02E8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               Ammo_Display_Overlay;                              // 0x02F0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               Durability_Display_Overlay;                        // 0x02F8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image;                                             // 0x0300(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UProgressBar*                           ProgressBar_Ammo;                                  // 0x0308(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UProgressBar*                           ProgressBar_Durability;                            // 0x0310(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             Text_NA;                                           // 0x0318(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             Text_Unlimited;                                    // 0x0320(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             TextBlock_ItemName;                                // 0x0328(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             TextBlock_RepairItemInstruction;                   // 0x0330(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWidgetSwitcher*                        WidgetSwitcher_Type;                               // 0x0338(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	struct FItemData                              Item;                                              // 0x0340(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	class UShopInteractionAC_C*                   Inventory;                                         // 0x0368(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UEquipmentInstance*                     EquippedEquipment;                                 // 0x0370(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UItemInstance*                          EquippedItem;                                      // 0x0378(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           DefaultColor;                                      // 0x0380(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAbilitySystemComponent*                OwnerASC;                                          // 0x0390(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	float                                         DisplayDurability;                                 // 0x0398(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39C[0x4];                                      // 0x039C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        DisplayAmmoPercentage;                             // 0x03A0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void Construct();
	void EnableBrokenItemOverlay(bool Enable);
	void Equipped(class UEquipmentInstance* Equipment_Instance);
	void ExecuteUbergraph_WI_EquippedItem(int32 EntryPoint);
	double Get_Actual_Ammo_Percentage();
	void Get_Ammo_Type_Attributes(struct FGameplayAttribute* Attribute, struct FGameplayAttribute* MaxAttribute);
	float Get_Displayed_Durability();
	float Get_Percent_For_Equipped_Item();
	struct FLinearColor Get_ProgressBar_Durability_FillColorAndOpacity();
	class FText GetAmmoCountText();
	float GetDisplayAmmoPercentage();
	bool IsOverheating();
	void LerpDisplayAmmoPercentage(double Alpha);
	void LerpDisplayDurability(double Alpha);
	void OnEquipped(class UEquipmentInstance* Instance);
	void OnUnequipped(class UEquipmentInstance* Instance);
	void Reconstruct(class APawn* OldPawn, class APawn* NewPawn);
	void SetRelevantResourceType(class UItemInstance* Item_0);
	void Tick(const struct FGeometry& MyGeometry, float InDeltaTime);
	void Unequipped();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WI_EquippedItem_C">();
	}
	static class UWI_EquippedItem_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWI_EquippedItem_C>();
	}
};
static_assert(alignof(UWI_EquippedItem_C) == 0x000008, "Wrong alignment on UWI_EquippedItem_C");
static_assert(sizeof(UWI_EquippedItem_C) == 0x0003A8, "Wrong size on UWI_EquippedItem_C");
static_assert(offsetof(UWI_EquippedItem_C, UberGraphFrame) == 0x0002E0, "Member 'UWI_EquippedItem_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWI_EquippedItem_C, Ammo) == 0x0002E8, "Member 'UWI_EquippedItem_C::Ammo' has a wrong offset!");
static_assert(offsetof(UWI_EquippedItem_C, Ammo_Display_Overlay) == 0x0002F0, "Member 'UWI_EquippedItem_C::Ammo_Display_Overlay' has a wrong offset!");
static_assert(offsetof(UWI_EquippedItem_C, Durability_Display_Overlay) == 0x0002F8, "Member 'UWI_EquippedItem_C::Durability_Display_Overlay' has a wrong offset!");
static_assert(offsetof(UWI_EquippedItem_C, Image) == 0x000300, "Member 'UWI_EquippedItem_C::Image' has a wrong offset!");
static_assert(offsetof(UWI_EquippedItem_C, ProgressBar_Ammo) == 0x000308, "Member 'UWI_EquippedItem_C::ProgressBar_Ammo' has a wrong offset!");
static_assert(offsetof(UWI_EquippedItem_C, ProgressBar_Durability) == 0x000310, "Member 'UWI_EquippedItem_C::ProgressBar_Durability' has a wrong offset!");
static_assert(offsetof(UWI_EquippedItem_C, Text_NA) == 0x000318, "Member 'UWI_EquippedItem_C::Text_NA' has a wrong offset!");
static_assert(offsetof(UWI_EquippedItem_C, Text_Unlimited) == 0x000320, "Member 'UWI_EquippedItem_C::Text_Unlimited' has a wrong offset!");
static_assert(offsetof(UWI_EquippedItem_C, TextBlock_ItemName) == 0x000328, "Member 'UWI_EquippedItem_C::TextBlock_ItemName' has a wrong offset!");
static_assert(offsetof(UWI_EquippedItem_C, TextBlock_RepairItemInstruction) == 0x000330, "Member 'UWI_EquippedItem_C::TextBlock_RepairItemInstruction' has a wrong offset!");
static_assert(offsetof(UWI_EquippedItem_C, WidgetSwitcher_Type) == 0x000338, "Member 'UWI_EquippedItem_C::WidgetSwitcher_Type' has a wrong offset!");
static_assert(offsetof(UWI_EquippedItem_C, Item) == 0x000340, "Member 'UWI_EquippedItem_C::Item' has a wrong offset!");
static_assert(offsetof(UWI_EquippedItem_C, Inventory) == 0x000368, "Member 'UWI_EquippedItem_C::Inventory' has a wrong offset!");
static_assert(offsetof(UWI_EquippedItem_C, EquippedEquipment) == 0x000370, "Member 'UWI_EquippedItem_C::EquippedEquipment' has a wrong offset!");
static_assert(offsetof(UWI_EquippedItem_C, EquippedItem) == 0x000378, "Member 'UWI_EquippedItem_C::EquippedItem' has a wrong offset!");
static_assert(offsetof(UWI_EquippedItem_C, DefaultColor) == 0x000380, "Member 'UWI_EquippedItem_C::DefaultColor' has a wrong offset!");
static_assert(offsetof(UWI_EquippedItem_C, OwnerASC) == 0x000390, "Member 'UWI_EquippedItem_C::OwnerASC' has a wrong offset!");
static_assert(offsetof(UWI_EquippedItem_C, DisplayDurability) == 0x000398, "Member 'UWI_EquippedItem_C::DisplayDurability' has a wrong offset!");
static_assert(offsetof(UWI_EquippedItem_C, DisplayAmmoPercentage) == 0x0003A0, "Member 'UWI_EquippedItem_C::DisplayAmmoPercentage' has a wrong offset!");

}

