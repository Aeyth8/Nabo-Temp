#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WI_SlantedLabel

#include "Basic.hpp"

#include "WI_SlantedLabel_classes.hpp"
#include "WI_SlantedLabel_parameters.hpp"


namespace SDK
{

// Function WI_SlantedLabel.WI_SlantedLabel_C.ExecuteUbergraph_WI_SlantedLabel
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWI_SlantedLabel_C::ExecuteUbergraph_WI_SlantedLabel(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WI_SlantedLabel_C", "ExecuteUbergraph_WI_SlantedLabel");

	Params::WI_SlantedLabel_C_ExecuteUbergraph_WI_SlantedLabel Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WI_SlantedLabel.WI_SlantedLabel_C.PreConstruct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// bool                                    IsDesignTime                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWI_SlantedLabel_C::PreConstruct(bool IsDesignTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WI_SlantedLabel_C", "PreConstruct");

	Params::WI_SlantedLabel_C_PreConstruct Parms{};

	Parms.IsDesignTime = IsDesignTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WI_SlantedLabel.WI_SlantedLabel_C.SetBackgroundColor
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FLinearColor                     Color                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWI_SlantedLabel_C::SetBackgroundColor(const struct FLinearColor& Color)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WI_SlantedLabel_C", "SetBackgroundColor");

	Params::WI_SlantedLabel_C_SetBackgroundColor Parms{};

	Parms.Color = std::move(Color);

	UObject::ProcessEvent(Func, &Parms);
}


// Function WI_SlantedLabel.WI_SlantedLabel_C.SetFontColorAndOpacity
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FSlateColor                      Font_Color_and_Opacity_0                               (BlueprintVisible, BlueprintReadOnly, Parm)

void UWI_SlantedLabel_C::SetFontColorAndOpacity(const struct FSlateColor& Font_Color_and_Opacity_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WI_SlantedLabel_C", "SetFontColorAndOpacity");

	Params::WI_SlantedLabel_C_SetFontColorAndOpacity Parms{};

	Parms.Font_Color_and_Opacity_0 = std::move(Font_Color_and_Opacity_0);

	UObject::ProcessEvent(Func, &Parms);
}


// Function WI_SlantedLabel.WI_SlantedLabel_C.SetText
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FText                             Text_0                                                 (BlueprintVisible, BlueprintReadOnly, Parm)

void UWI_SlantedLabel_C::SetText(const class FText& Text_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WI_SlantedLabel_C", "SetText");

	Params::WI_SlantedLabel_C_SetText Parms{};

	Parms.Text_0 = std::move(Text_0);

	UObject::ProcessEvent(Func, &Parms);
}

}

