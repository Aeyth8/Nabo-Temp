#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_BalloonCrate_BeartrapLauncher

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_BalloonCrate_BeartrapLauncher.BP_BalloonCrate_BeartrapLauncher_C
// 0x00F0 (0x0380 - 0x0290)
class ABP_BalloonCrate_BeartrapLauncher_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0290(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x0298(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FVector                                VectorForward;                                     // 0x02A0(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                VectorBack;                                        // 0x02B8(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                VectorRight;                                       // 0x02D0(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                VectorLeft;                                        // 0x02E8(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                VectorForwardRight;                                // 0x0300(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                VectorForwardLeft;                                 // 0x0318(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                VectorBackRight;                                   // 0x0330(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                VectorBackLeft;                                    // 0x0348(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FVector>                        Directions;                                        // 0x0360(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	int32                                         Count;                                             // 0x0370(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_374[0x4];                                      // 0x0374(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           LaunchTimerHandle;                                 // 0x0378(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_BalloonCrate_BeartrapLauncher(int32 EntryPoint);
	void LaunchTrap();
	void ReceiveBeginPlay();
	void Server_LaunchTraps(const struct FVector& Direction);
	void SetDirections();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_BalloonCrate_BeartrapLauncher_C">();
	}
	static class ABP_BalloonCrate_BeartrapLauncher_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_BalloonCrate_BeartrapLauncher_C>();
	}
};
static_assert(alignof(ABP_BalloonCrate_BeartrapLauncher_C) == 0x000008, "Wrong alignment on ABP_BalloonCrate_BeartrapLauncher_C");
static_assert(sizeof(ABP_BalloonCrate_BeartrapLauncher_C) == 0x000380, "Wrong size on ABP_BalloonCrate_BeartrapLauncher_C");
static_assert(offsetof(ABP_BalloonCrate_BeartrapLauncher_C, UberGraphFrame) == 0x000290, "Member 'ABP_BalloonCrate_BeartrapLauncher_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_BalloonCrate_BeartrapLauncher_C, DefaultSceneRoot) == 0x000298, "Member 'ABP_BalloonCrate_BeartrapLauncher_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ABP_BalloonCrate_BeartrapLauncher_C, VectorForward) == 0x0002A0, "Member 'ABP_BalloonCrate_BeartrapLauncher_C::VectorForward' has a wrong offset!");
static_assert(offsetof(ABP_BalloonCrate_BeartrapLauncher_C, VectorBack) == 0x0002B8, "Member 'ABP_BalloonCrate_BeartrapLauncher_C::VectorBack' has a wrong offset!");
static_assert(offsetof(ABP_BalloonCrate_BeartrapLauncher_C, VectorRight) == 0x0002D0, "Member 'ABP_BalloonCrate_BeartrapLauncher_C::VectorRight' has a wrong offset!");
static_assert(offsetof(ABP_BalloonCrate_BeartrapLauncher_C, VectorLeft) == 0x0002E8, "Member 'ABP_BalloonCrate_BeartrapLauncher_C::VectorLeft' has a wrong offset!");
static_assert(offsetof(ABP_BalloonCrate_BeartrapLauncher_C, VectorForwardRight) == 0x000300, "Member 'ABP_BalloonCrate_BeartrapLauncher_C::VectorForwardRight' has a wrong offset!");
static_assert(offsetof(ABP_BalloonCrate_BeartrapLauncher_C, VectorForwardLeft) == 0x000318, "Member 'ABP_BalloonCrate_BeartrapLauncher_C::VectorForwardLeft' has a wrong offset!");
static_assert(offsetof(ABP_BalloonCrate_BeartrapLauncher_C, VectorBackRight) == 0x000330, "Member 'ABP_BalloonCrate_BeartrapLauncher_C::VectorBackRight' has a wrong offset!");
static_assert(offsetof(ABP_BalloonCrate_BeartrapLauncher_C, VectorBackLeft) == 0x000348, "Member 'ABP_BalloonCrate_BeartrapLauncher_C::VectorBackLeft' has a wrong offset!");
static_assert(offsetof(ABP_BalloonCrate_BeartrapLauncher_C, Directions) == 0x000360, "Member 'ABP_BalloonCrate_BeartrapLauncher_C::Directions' has a wrong offset!");
static_assert(offsetof(ABP_BalloonCrate_BeartrapLauncher_C, Count) == 0x000370, "Member 'ABP_BalloonCrate_BeartrapLauncher_C::Count' has a wrong offset!");
static_assert(offsetof(ABP_BalloonCrate_BeartrapLauncher_C, LaunchTimerHandle) == 0x000378, "Member 'ABP_BalloonCrate_BeartrapLauncher_C::LaunchTimerHandle' has a wrong offset!");

}

