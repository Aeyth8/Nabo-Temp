#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: SessionsFunctionLibrary

#include "Basic.hpp"

#include "Engine_classes.hpp"
#include "CommonUser_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass SessionsFunctionLibrary.SessionsFunctionLibrary_C
// 0x0000 (0x0028 - 0x0028)
class USessionsFunctionLibrary_C final : public UBlueprintFunctionLibrary
{
public:
	static void Create_Default_Host_Lobby_Request(class UObject* __WorldContext, class UCommonSession_HostSessionRequest** HostRequest);
	static class UCommonSession_SearchSessionRequest* CreateDefaultSessionSearchRequest(class UObject* __WorldContext);
	static void Dump_Session_Search_Result_To_String(class UCommonSession_SearchResult* Session, class UObject* __WorldContext, class FString* SessionDebugString);
	static void FindSessions(class UCommonSession_SearchSessionRequest* SearchRequest, class UObject* __WorldContext);
	static void HostLobbySession(class UObject* __WorldContext);
	static void QuickPlayOrHostLobbySession(class UObject* __WorldContext);
	static void SelectBestAvailableSession(class UCommonSession_SearchSessionRequest* AvailableSessions, class UObject* __WorldContext, class UCommonSession_SearchResult** BestAvailableSession);

	void CreateHostRequest(const class FString& GameModeNameForAdvertisement, ECommonSessionOnlineMode OnlineMode, const struct FPrimaryAssetId& MapID, int32 MaxPlayerCount, bool UseLobbies, class UObject* __WorldContext, class UCommonSession_HostSessionRequest** HostRequest);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"SessionsFunctionLibrary_C">();
	}
	static class USessionsFunctionLibrary_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<USessionsFunctionLibrary_C>();
	}
};
static_assert(alignof(USessionsFunctionLibrary_C) == 0x000008, "Wrong alignment on USessionsFunctionLibrary_C");
static_assert(sizeof(USessionsFunctionLibrary_C) == 0x000028, "Wrong size on USessionsFunctionLibrary_C");

}

