#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WB_Lobby_PlayerList_Entry

#include "Basic.hpp"

#include "JP_structs.hpp"
#include "UMG_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function WB_Lobby_PlayerList_Entry.WB_Lobby_PlayerList_Entry_C.ExecuteUbergraph_WB_Lobby_PlayerList_Entry
// 0x0038 (0x0038 - 0x0000)
struct WB_Lobby_PlayerList_Entry_C_ExecuteUbergraph_WB_Lobby_PlayerList_Entry final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerStateJP_Lobby*                   K2Node_CustomEvent_PlayerState;                    // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_ReadyAndWaiting;                // 0x0010(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class APlayerStateJP_Lobby* PlayerState, bool ReadyAndWaiting)> K2Node_CreateDelegate_OutputDelegate;              // 0x0014(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerStateJP_Lobby*                   CallFunc_Get_Player_State_Lobby_AsPlayer_State_JP_Lobby; // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_Lobby_PlayerList_Entry_C_ExecuteUbergraph_WB_Lobby_PlayerList_Entry) == 0x000008, "Wrong alignment on WB_Lobby_PlayerList_Entry_C_ExecuteUbergraph_WB_Lobby_PlayerList_Entry");
static_assert(sizeof(WB_Lobby_PlayerList_Entry_C_ExecuteUbergraph_WB_Lobby_PlayerList_Entry) == 0x000038, "Wrong size on WB_Lobby_PlayerList_Entry_C_ExecuteUbergraph_WB_Lobby_PlayerList_Entry");
static_assert(offsetof(WB_Lobby_PlayerList_Entry_C_ExecuteUbergraph_WB_Lobby_PlayerList_Entry, EntryPoint) == 0x000000, "Member 'WB_Lobby_PlayerList_Entry_C_ExecuteUbergraph_WB_Lobby_PlayerList_Entry::EntryPoint' has a wrong offset!");
static_assert(offsetof(WB_Lobby_PlayerList_Entry_C_ExecuteUbergraph_WB_Lobby_PlayerList_Entry, K2Node_CustomEvent_PlayerState) == 0x000008, "Member 'WB_Lobby_PlayerList_Entry_C_ExecuteUbergraph_WB_Lobby_PlayerList_Entry::K2Node_CustomEvent_PlayerState' has a wrong offset!");
static_assert(offsetof(WB_Lobby_PlayerList_Entry_C_ExecuteUbergraph_WB_Lobby_PlayerList_Entry, K2Node_CustomEvent_ReadyAndWaiting) == 0x000010, "Member 'WB_Lobby_PlayerList_Entry_C_ExecuteUbergraph_WB_Lobby_PlayerList_Entry::K2Node_CustomEvent_ReadyAndWaiting' has a wrong offset!");
static_assert(offsetof(WB_Lobby_PlayerList_Entry_C_ExecuteUbergraph_WB_Lobby_PlayerList_Entry, K2Node_CreateDelegate_OutputDelegate) == 0x000014, "Member 'WB_Lobby_PlayerList_Entry_C_ExecuteUbergraph_WB_Lobby_PlayerList_Entry::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WB_Lobby_PlayerList_Entry_C_ExecuteUbergraph_WB_Lobby_PlayerList_Entry, CallFunc_Get_Player_State_Lobby_AsPlayer_State_JP_Lobby) == 0x000028, "Member 'WB_Lobby_PlayerList_Entry_C_ExecuteUbergraph_WB_Lobby_PlayerList_Entry::CallFunc_Get_Player_State_Lobby_AsPlayer_State_JP_Lobby' has a wrong offset!");
static_assert(offsetof(WB_Lobby_PlayerList_Entry_C_ExecuteUbergraph_WB_Lobby_PlayerList_Entry, K2Node_Event_IsDesignTime) == 0x000030, "Member 'WB_Lobby_PlayerList_Entry_C_ExecuteUbergraph_WB_Lobby_PlayerList_Entry::K2Node_Event_IsDesignTime' has a wrong offset!");

// Function WB_Lobby_PlayerList_Entry.WB_Lobby_PlayerList_Entry_C.Get_TextBlock_Class_Text_0
// 0x0098 (0x0098 - 0x0000)
struct WB_Lobby_PlayerList_Entry_C_Get_TextBlock_Class_Text_0 final
{
public:
	class FText                                   ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ReturnParm)
	struct FCharacterRoleData                     CallFunc_GetCharacterRole_ReturnValue;             // 0x0010(0x0060)()
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_71[0x7];                                       // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue; // 0x0078(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0088(0x0010)()
};
static_assert(alignof(WB_Lobby_PlayerList_Entry_C_Get_TextBlock_Class_Text_0) == 0x000008, "Wrong alignment on WB_Lobby_PlayerList_Entry_C_Get_TextBlock_Class_Text_0");
static_assert(sizeof(WB_Lobby_PlayerList_Entry_C_Get_TextBlock_Class_Text_0) == 0x000098, "Wrong size on WB_Lobby_PlayerList_Entry_C_Get_TextBlock_Class_Text_0");
static_assert(offsetof(WB_Lobby_PlayerList_Entry_C_Get_TextBlock_Class_Text_0, ReturnValue) == 0x000000, "Member 'WB_Lobby_PlayerList_Entry_C_Get_TextBlock_Class_Text_0::ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Lobby_PlayerList_Entry_C_Get_TextBlock_Class_Text_0, CallFunc_GetCharacterRole_ReturnValue) == 0x000010, "Member 'WB_Lobby_PlayerList_Entry_C_Get_TextBlock_Class_Text_0::CallFunc_GetCharacterRole_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Lobby_PlayerList_Entry_C_Get_TextBlock_Class_Text_0, CallFunc_IsValid_ReturnValue) == 0x000070, "Member 'WB_Lobby_PlayerList_Entry_C_Get_TextBlock_Class_Text_0::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Lobby_PlayerList_Entry_C_Get_TextBlock_Class_Text_0, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue) == 0x000078, "Member 'WB_Lobby_PlayerList_Entry_C_Get_TextBlock_Class_Text_0::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Lobby_PlayerList_Entry_C_Get_TextBlock_Class_Text_0, CallFunc_Conv_StringToText_ReturnValue) == 0x000088, "Member 'WB_Lobby_PlayerList_Entry_C_Get_TextBlock_Class_Text_0::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");

// Function WB_Lobby_PlayerList_Entry.WB_Lobby_PlayerList_Entry_C.GetOuterBrushColor
// 0x0044 (0x0044 - 0x0000)
struct WB_Lobby_PlayerList_Entry_C_GetOuterBrushColor final
{
public:
	struct FLinearColor                           ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           Temp_struct_Variable;                              // 0x0014(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_1;                            // 0x0024(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_Select_Default;                             // 0x0034(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_Lobby_PlayerList_Entry_C_GetOuterBrushColor) == 0x000004, "Wrong alignment on WB_Lobby_PlayerList_Entry_C_GetOuterBrushColor");
static_assert(sizeof(WB_Lobby_PlayerList_Entry_C_GetOuterBrushColor) == 0x000044, "Wrong size on WB_Lobby_PlayerList_Entry_C_GetOuterBrushColor");
static_assert(offsetof(WB_Lobby_PlayerList_Entry_C_GetOuterBrushColor, ReturnValue) == 0x000000, "Member 'WB_Lobby_PlayerList_Entry_C_GetOuterBrushColor::ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Lobby_PlayerList_Entry_C_GetOuterBrushColor, Temp_bool_Variable) == 0x000010, "Member 'WB_Lobby_PlayerList_Entry_C_GetOuterBrushColor::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WB_Lobby_PlayerList_Entry_C_GetOuterBrushColor, Temp_struct_Variable) == 0x000014, "Member 'WB_Lobby_PlayerList_Entry_C_GetOuterBrushColor::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(WB_Lobby_PlayerList_Entry_C_GetOuterBrushColor, Temp_struct_Variable_1) == 0x000024, "Member 'WB_Lobby_PlayerList_Entry_C_GetOuterBrushColor::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(WB_Lobby_PlayerList_Entry_C_GetOuterBrushColor, K2Node_Select_Default) == 0x000034, "Member 'WB_Lobby_PlayerList_Entry_C_GetOuterBrushColor::K2Node_Select_Default' has a wrong offset!");

// Function WB_Lobby_PlayerList_Entry.WB_Lobby_PlayerList_Entry_C.GetVisibility_0
// 0x0009 (0x0009 - 0x0000)
struct WB_Lobby_PlayerList_Entry_C_GetVisibility_0 final
{
public:
	ESlateVisibility                              ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetTeamID_ReturnValue;                    // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_Conv_IntToByte_ReturnValue;               // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_Lobby_PlayerList_Entry_C_GetVisibility_0) == 0x000001, "Wrong alignment on WB_Lobby_PlayerList_Entry_C_GetVisibility_0");
static_assert(sizeof(WB_Lobby_PlayerList_Entry_C_GetVisibility_0) == 0x000009, "Wrong size on WB_Lobby_PlayerList_Entry_C_GetVisibility_0");
static_assert(offsetof(WB_Lobby_PlayerList_Entry_C_GetVisibility_0, ReturnValue) == 0x000000, "Member 'WB_Lobby_PlayerList_Entry_C_GetVisibility_0::ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Lobby_PlayerList_Entry_C_GetVisibility_0, Temp_byte_Variable) == 0x000001, "Member 'WB_Lobby_PlayerList_Entry_C_GetVisibility_0::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WB_Lobby_PlayerList_Entry_C_GetVisibility_0, Temp_byte_Variable_1) == 0x000002, "Member 'WB_Lobby_PlayerList_Entry_C_GetVisibility_0::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WB_Lobby_PlayerList_Entry_C_GetVisibility_0, CallFunc_IsValid_ReturnValue) == 0x000003, "Member 'WB_Lobby_PlayerList_Entry_C_GetVisibility_0::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Lobby_PlayerList_Entry_C_GetVisibility_0, CallFunc_GetTeamID_ReturnValue) == 0x000004, "Member 'WB_Lobby_PlayerList_Entry_C_GetVisibility_0::CallFunc_GetTeamID_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Lobby_PlayerList_Entry_C_GetVisibility_0, Temp_bool_Variable) == 0x000005, "Member 'WB_Lobby_PlayerList_Entry_C_GetVisibility_0::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WB_Lobby_PlayerList_Entry_C_GetVisibility_0, CallFunc_Conv_IntToByte_ReturnValue) == 0x000006, "Member 'WB_Lobby_PlayerList_Entry_C_GetVisibility_0::CallFunc_Conv_IntToByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Lobby_PlayerList_Entry_C_GetVisibility_0, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000007, "Member 'WB_Lobby_PlayerList_Entry_C_GetVisibility_0::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Lobby_PlayerList_Entry_C_GetVisibility_0, K2Node_Select_Default) == 0x000008, "Member 'WB_Lobby_PlayerList_Entry_C_GetVisibility_0::K2Node_Select_Default' has a wrong offset!");

// Function WB_Lobby_PlayerList_Entry.WB_Lobby_PlayerList_Entry_C.HandleReadyAndWaiting
// 0x0010 (0x0010 - 0x0000)
struct WB_Lobby_PlayerList_Entry_C_HandleReadyAndWaiting final
{
public:
	class APlayerStateJP_Lobby*                   PlayerState_0;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          ReadyAndWaiting_0;                                 // 0x0008(0x0001)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_Lobby_PlayerList_Entry_C_HandleReadyAndWaiting) == 0x000008, "Wrong alignment on WB_Lobby_PlayerList_Entry_C_HandleReadyAndWaiting");
static_assert(sizeof(WB_Lobby_PlayerList_Entry_C_HandleReadyAndWaiting) == 0x000010, "Wrong size on WB_Lobby_PlayerList_Entry_C_HandleReadyAndWaiting");
static_assert(offsetof(WB_Lobby_PlayerList_Entry_C_HandleReadyAndWaiting, PlayerState_0) == 0x000000, "Member 'WB_Lobby_PlayerList_Entry_C_HandleReadyAndWaiting::PlayerState_0' has a wrong offset!");
static_assert(offsetof(WB_Lobby_PlayerList_Entry_C_HandleReadyAndWaiting, ReadyAndWaiting_0) == 0x000008, "Member 'WB_Lobby_PlayerList_Entry_C_HandleReadyAndWaiting::ReadyAndWaiting_0' has a wrong offset!");

// Function WB_Lobby_PlayerList_Entry.WB_Lobby_PlayerList_Entry_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct WB_Lobby_PlayerList_Entry_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_Lobby_PlayerList_Entry_C_PreConstruct) == 0x000001, "Wrong alignment on WB_Lobby_PlayerList_Entry_C_PreConstruct");
static_assert(sizeof(WB_Lobby_PlayerList_Entry_C_PreConstruct) == 0x000001, "Wrong size on WB_Lobby_PlayerList_Entry_C_PreConstruct");
static_assert(offsetof(WB_Lobby_PlayerList_Entry_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'WB_Lobby_PlayerList_Entry_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function WB_Lobby_PlayerList_Entry.WB_Lobby_PlayerList_Entry_C.SetPingText
// 0x0028 (0x0028 - 0x0000)
struct WB_Lobby_PlayerList_Entry_C_SetPingText final
{
public:
	class FText                                   ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ReturnParm)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetCompressedPing_ReturnValue;            // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_Multiply_ByteByte_ReturnValue;            // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_13[0x5];                                       // 0x0013(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_ByteToText_ReturnValue;              // 0x0018(0x0010)()
};
static_assert(alignof(WB_Lobby_PlayerList_Entry_C_SetPingText) == 0x000008, "Wrong alignment on WB_Lobby_PlayerList_Entry_C_SetPingText");
static_assert(sizeof(WB_Lobby_PlayerList_Entry_C_SetPingText) == 0x000028, "Wrong size on WB_Lobby_PlayerList_Entry_C_SetPingText");
static_assert(offsetof(WB_Lobby_PlayerList_Entry_C_SetPingText, ReturnValue) == 0x000000, "Member 'WB_Lobby_PlayerList_Entry_C_SetPingText::ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Lobby_PlayerList_Entry_C_SetPingText, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'WB_Lobby_PlayerList_Entry_C_SetPingText::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Lobby_PlayerList_Entry_C_SetPingText, CallFunc_GetCompressedPing_ReturnValue) == 0x000011, "Member 'WB_Lobby_PlayerList_Entry_C_SetPingText::CallFunc_GetCompressedPing_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Lobby_PlayerList_Entry_C_SetPingText, CallFunc_Multiply_ByteByte_ReturnValue) == 0x000012, "Member 'WB_Lobby_PlayerList_Entry_C_SetPingText::CallFunc_Multiply_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Lobby_PlayerList_Entry_C_SetPingText, CallFunc_Conv_ByteToText_ReturnValue) == 0x000018, "Member 'WB_Lobby_PlayerList_Entry_C_SetPingText::CallFunc_Conv_ByteToText_ReturnValue' has a wrong offset!");

// Function WB_Lobby_PlayerList_Entry.WB_Lobby_PlayerList_Entry_C.SetPlayerNameText
// 0x0058 (0x0058 - 0x0000)
struct WB_Lobby_PlayerList_Entry_C_SetPlayerNameText final
{
public:
	class FText                                   ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ReturnParm)
	class FString                                 CallFunc_GetPlayerName_ReturnValue;                // 0x0010(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetSubstring_ReturnValue;                 // 0x0028(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0038(0x0010)()
	class FText                                   CallFunc_TextToUpper_ReturnValue;                  // 0x0048(0x0010)()
};
static_assert(alignof(WB_Lobby_PlayerList_Entry_C_SetPlayerNameText) == 0x000008, "Wrong alignment on WB_Lobby_PlayerList_Entry_C_SetPlayerNameText");
static_assert(sizeof(WB_Lobby_PlayerList_Entry_C_SetPlayerNameText) == 0x000058, "Wrong size on WB_Lobby_PlayerList_Entry_C_SetPlayerNameText");
static_assert(offsetof(WB_Lobby_PlayerList_Entry_C_SetPlayerNameText, ReturnValue) == 0x000000, "Member 'WB_Lobby_PlayerList_Entry_C_SetPlayerNameText::ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Lobby_PlayerList_Entry_C_SetPlayerNameText, CallFunc_GetPlayerName_ReturnValue) == 0x000010, "Member 'WB_Lobby_PlayerList_Entry_C_SetPlayerNameText::CallFunc_GetPlayerName_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Lobby_PlayerList_Entry_C_SetPlayerNameText, CallFunc_IsValid_ReturnValue) == 0x000020, "Member 'WB_Lobby_PlayerList_Entry_C_SetPlayerNameText::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Lobby_PlayerList_Entry_C_SetPlayerNameText, CallFunc_GetSubstring_ReturnValue) == 0x000028, "Member 'WB_Lobby_PlayerList_Entry_C_SetPlayerNameText::CallFunc_GetSubstring_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Lobby_PlayerList_Entry_C_SetPlayerNameText, CallFunc_Conv_StringToText_ReturnValue) == 0x000038, "Member 'WB_Lobby_PlayerList_Entry_C_SetPlayerNameText::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Lobby_PlayerList_Entry_C_SetPlayerNameText, CallFunc_TextToUpper_ReturnValue) == 0x000048, "Member 'WB_Lobby_PlayerList_Entry_C_SetPlayerNameText::CallFunc_TextToUpper_ReturnValue' has a wrong offset!");

// Function WB_Lobby_PlayerList_Entry.WB_Lobby_PlayerList_Entry_C.SetReadyText
// 0x0038 (0x0038 - 0x0000)
struct WB_Lobby_PlayerList_Entry_C_SetReadyText final
{
public:
	bool                                          Ready;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable;                                // 0x0008(0x0010)()
	class FText                                   Temp_text_Variable_1;                              // 0x0018(0x0010)()
	class FText                                   K2Node_Select_Default;                             // 0x0028(0x0010)()
};
static_assert(alignof(WB_Lobby_PlayerList_Entry_C_SetReadyText) == 0x000008, "Wrong alignment on WB_Lobby_PlayerList_Entry_C_SetReadyText");
static_assert(sizeof(WB_Lobby_PlayerList_Entry_C_SetReadyText) == 0x000038, "Wrong size on WB_Lobby_PlayerList_Entry_C_SetReadyText");
static_assert(offsetof(WB_Lobby_PlayerList_Entry_C_SetReadyText, Ready) == 0x000000, "Member 'WB_Lobby_PlayerList_Entry_C_SetReadyText::Ready' has a wrong offset!");
static_assert(offsetof(WB_Lobby_PlayerList_Entry_C_SetReadyText, Temp_bool_Variable) == 0x000001, "Member 'WB_Lobby_PlayerList_Entry_C_SetReadyText::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WB_Lobby_PlayerList_Entry_C_SetReadyText, Temp_text_Variable) == 0x000008, "Member 'WB_Lobby_PlayerList_Entry_C_SetReadyText::Temp_text_Variable' has a wrong offset!");
static_assert(offsetof(WB_Lobby_PlayerList_Entry_C_SetReadyText, Temp_text_Variable_1) == 0x000018, "Member 'WB_Lobby_PlayerList_Entry_C_SetReadyText::Temp_text_Variable_1' has a wrong offset!");
static_assert(offsetof(WB_Lobby_PlayerList_Entry_C_SetReadyText, K2Node_Select_Default) == 0x000028, "Member 'WB_Lobby_PlayerList_Entry_C_SetReadyText::K2Node_Select_Default' has a wrong offset!");

// Function WB_Lobby_PlayerList_Entry.WB_Lobby_PlayerList_Entry_C.Get Player State Lobby
// 0x0018 (0x0018 - 0x0000)
struct WB_Lobby_PlayerList_Entry_C_Get_Player_State_Lobby final
{
public:
	class APlayerStateJP_Lobby*                   AsPlayer_State_JP_Lobby;                           // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APlayerStateJP_Lobby*                   K2Node_DynamicCast_AsPlayer_State_JP_Lobby;        // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_Lobby_PlayerList_Entry_C_Get_Player_State_Lobby) == 0x000008, "Wrong alignment on WB_Lobby_PlayerList_Entry_C_Get_Player_State_Lobby");
static_assert(sizeof(WB_Lobby_PlayerList_Entry_C_Get_Player_State_Lobby) == 0x000018, "Wrong size on WB_Lobby_PlayerList_Entry_C_Get_Player_State_Lobby");
static_assert(offsetof(WB_Lobby_PlayerList_Entry_C_Get_Player_State_Lobby, AsPlayer_State_JP_Lobby) == 0x000000, "Member 'WB_Lobby_PlayerList_Entry_C_Get_Player_State_Lobby::AsPlayer_State_JP_Lobby' has a wrong offset!");
static_assert(offsetof(WB_Lobby_PlayerList_Entry_C_Get_Player_State_Lobby, K2Node_DynamicCast_AsPlayer_State_JP_Lobby) == 0x000008, "Member 'WB_Lobby_PlayerList_Entry_C_Get_Player_State_Lobby::K2Node_DynamicCast_AsPlayer_State_JP_Lobby' has a wrong offset!");
static_assert(offsetof(WB_Lobby_PlayerList_Entry_C_Get_Player_State_Lobby, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'WB_Lobby_PlayerList_Entry_C_Get_Player_State_Lobby::K2Node_DynamicCast_bSuccess' has a wrong offset!");

}

