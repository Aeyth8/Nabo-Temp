#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: I_Trajectoryable

#include "Basic.hpp"

#include "I_Trajectoryable_classes.hpp"
#include "I_Trajectoryable_parameters.hpp"


namespace SDK
{

// Function I_Trajectoryable.I_Trajectoryable_C.GetGravityScale
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  GravityScale                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void II_Trajectoryable_C::GetGravityScale(double* GravityScale)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("I_Trajectoryable_C", "GetGravityScale");

	Params::I_Trajectoryable_C_GetGravityScale Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (GravityScale != nullptr)
		*GravityScale = Parms.GravityScale;
}


// Function I_Trajectoryable.I_Trajectoryable_C.GetStartPositionTransform
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FTransform                       StartTransform                                         (Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void II_Trajectoryable_C::GetStartPositionTransform(struct FTransform* StartTransform)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("I_Trajectoryable_C", "GetStartPositionTransform");

	Params::I_Trajectoryable_C_GetStartPositionTransform Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (StartTransform != nullptr)
		*StartTransform = std::move(Parms.StartTransform);
}


// Function I_Trajectoryable.I_Trajectoryable_C.GetVelocity
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          Velocity                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void II_Trajectoryable_C::GetVelocity(struct FVector* Velocity)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("I_Trajectoryable_C", "GetVelocity");

	Params::I_Trajectoryable_C_GetVelocity Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Velocity != nullptr)
		*Velocity = std::move(Parms.Velocity);
}

}

