#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WI_JPRotator

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "SlateCore_structs.hpp"
#include "CommonUI_classes.hpp"
#include "UMG_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WI_JPRotator.WI_JPRotator_C
// 0x0030 (0x1640 - 0x1610)
class UWI_JPRotator_C final : public UCommonRotator
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x1610(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UImage*                                 OptionsPips;                                       // 0x1618(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                               OptionsScalingSizeBox;                             // 0x1620(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	bool                                          ShowPips;                                          // 0x1628(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1629[0x3];                                     // 0x1629(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateColor                            Text_Color;                                        // 0x162C(0x0014)(Edit, BlueprintVisible)

public:
	void BP_OnOptionSelected(int32 Index_0);
	void BP_OnOptionsPopulated(int32 Count);
	void CustomEvent(int32 DefaultOptionIndex);
	void ExecuteUbergraph_WI_JPRotator(int32 EntryPoint);
	void PreConstruct(bool IsDesignTime);
	void SetPipsStyle(int32 Count);
	void Update();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WI_JPRotator_C">();
	}
	static class UWI_JPRotator_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWI_JPRotator_C>();
	}
};
static_assert(alignof(UWI_JPRotator_C) == 0x000010, "Wrong alignment on UWI_JPRotator_C");
static_assert(sizeof(UWI_JPRotator_C) == 0x001640, "Wrong size on UWI_JPRotator_C");
static_assert(offsetof(UWI_JPRotator_C, UberGraphFrame) == 0x001610, "Member 'UWI_JPRotator_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWI_JPRotator_C, OptionsPips) == 0x001618, "Member 'UWI_JPRotator_C::OptionsPips' has a wrong offset!");
static_assert(offsetof(UWI_JPRotator_C, OptionsScalingSizeBox) == 0x001620, "Member 'UWI_JPRotator_C::OptionsScalingSizeBox' has a wrong offset!");
static_assert(offsetof(UWI_JPRotator_C, ShowPips) == 0x001628, "Member 'UWI_JPRotator_C::ShowPips' has a wrong offset!");
static_assert(offsetof(UWI_JPRotator_C, Text_Color) == 0x00162C, "Member 'UWI_JPRotator_C::Text_Color' has a wrong offset!");

}

