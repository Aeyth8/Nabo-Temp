#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WI_PerkDetailsPanel

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WI_PerkDetailsPanel.WI_PerkDetailsPanel_C
// 0x00C0 (0x03A0 - 0x02E0)
class UWI_PerkDetailsPanel_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02E0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWI_PerkButton_C*                       PerkButton;                                        // 0x02E8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       PerkDescriptionText;                               // 0x02F0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       PerkNameText;                                      // 0x02F8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       PerkTypeText;                                      // 0x0300(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	struct FGameplayTag                           PerkType;                                          // 0x0308(0x0008)(Edit, BlueprintVisible, Config, NoDestructor, HasGetValueTypeHash)
	class FText                                   Type;                                              // 0x0310(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	class FText                                   Name_0;                                            // 0x0320(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	class FText                                   Description;                                       // 0x0330(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TSoftObjectPtr<class UTexture2D>              Icon;                                              // 0x0340(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	FMulticastInlineDelegateProperty_             OnClick;                                           // 0x0368(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	double                                        ButtonDiameter;                                    // 0x0378(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        IconDiameter;                                      // 0x0380(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsLocked;                                          // 0x0388(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_389[0x7];                                      // 0x0389(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Lock_Description;                                  // 0x0390(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)

public:
	void BndEvt__WI_PerkDetailsPanel_PerkIcon_K2Node_ComponentBoundEvent_0_CommonButtonBaseClicked__DelegateSignature(class UCommonButtonBase* Button);
	void ExecuteUbergraph_WI_PerkDetailsPanel(int32 EntryPoint);
	void LockPerkSlot(const class FText& LockDescription);
	void OnClick__DelegateSignature();
	void OnLoaded_F8838F6E47B85CB8DCCD899F75BF8FA7(class UObject* Loaded);
	void PreConstruct(bool IsDesignTime);
	void Set_Button_and_Icon_Diameter(double ButtonDiameter_0, double IconDiameter_0);
	void SetDescription(const class FText& Description_0);
	void SetName(const class FText& Name_0);
	void SetPerk(const struct FGameplayTag& PerkID);
	void SetPerkType(const struct FGameplayTag& PerkTypeTag);
	void SetType(const class FText& Type_0);
	void ShouldLockPerkSlot(const struct FGameplayTag& NeighborID, int32 NeighborLevel, bool* IsLocked_0, class FText* Lock_Description_0);
	void UnlockPerkSlot();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WI_PerkDetailsPanel_C">();
	}
	static class UWI_PerkDetailsPanel_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWI_PerkDetailsPanel_C>();
	}
};
static_assert(alignof(UWI_PerkDetailsPanel_C) == 0x000008, "Wrong alignment on UWI_PerkDetailsPanel_C");
static_assert(sizeof(UWI_PerkDetailsPanel_C) == 0x0003A0, "Wrong size on UWI_PerkDetailsPanel_C");
static_assert(offsetof(UWI_PerkDetailsPanel_C, UberGraphFrame) == 0x0002E0, "Member 'UWI_PerkDetailsPanel_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWI_PerkDetailsPanel_C, PerkButton) == 0x0002E8, "Member 'UWI_PerkDetailsPanel_C::PerkButton' has a wrong offset!");
static_assert(offsetof(UWI_PerkDetailsPanel_C, PerkDescriptionText) == 0x0002F0, "Member 'UWI_PerkDetailsPanel_C::PerkDescriptionText' has a wrong offset!");
static_assert(offsetof(UWI_PerkDetailsPanel_C, PerkNameText) == 0x0002F8, "Member 'UWI_PerkDetailsPanel_C::PerkNameText' has a wrong offset!");
static_assert(offsetof(UWI_PerkDetailsPanel_C, PerkTypeText) == 0x000300, "Member 'UWI_PerkDetailsPanel_C::PerkTypeText' has a wrong offset!");
static_assert(offsetof(UWI_PerkDetailsPanel_C, PerkType) == 0x000308, "Member 'UWI_PerkDetailsPanel_C::PerkType' has a wrong offset!");
static_assert(offsetof(UWI_PerkDetailsPanel_C, Type) == 0x000310, "Member 'UWI_PerkDetailsPanel_C::Type' has a wrong offset!");
static_assert(offsetof(UWI_PerkDetailsPanel_C, Name_0) == 0x000320, "Member 'UWI_PerkDetailsPanel_C::Name_0' has a wrong offset!");
static_assert(offsetof(UWI_PerkDetailsPanel_C, Description) == 0x000330, "Member 'UWI_PerkDetailsPanel_C::Description' has a wrong offset!");
static_assert(offsetof(UWI_PerkDetailsPanel_C, Icon) == 0x000340, "Member 'UWI_PerkDetailsPanel_C::Icon' has a wrong offset!");
static_assert(offsetof(UWI_PerkDetailsPanel_C, OnClick) == 0x000368, "Member 'UWI_PerkDetailsPanel_C::OnClick' has a wrong offset!");
static_assert(offsetof(UWI_PerkDetailsPanel_C, ButtonDiameter) == 0x000378, "Member 'UWI_PerkDetailsPanel_C::ButtonDiameter' has a wrong offset!");
static_assert(offsetof(UWI_PerkDetailsPanel_C, IconDiameter) == 0x000380, "Member 'UWI_PerkDetailsPanel_C::IconDiameter' has a wrong offset!");
static_assert(offsetof(UWI_PerkDetailsPanel_C, IsLocked) == 0x000388, "Member 'UWI_PerkDetailsPanel_C::IsLocked' has a wrong offset!");
static_assert(offsetof(UWI_PerkDetailsPanel_C, Lock_Description) == 0x000390, "Member 'UWI_PerkDetailsPanel_C::Lock_Description' has a wrong offset!");

}

