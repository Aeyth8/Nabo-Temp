#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_OrangeTree

#include "Basic.hpp"

#include "BP_OrangeTree_classes.hpp"
#include "BP_OrangeTree_parameters.hpp"


namespace SDK
{

// Function BP_OrangeTree.BP_OrangeTree_C.CheckIfItemInInventory
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           InteractingActor_0                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    ItemAlreadyInInventory                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_OrangeTree_C::CheckIfItemInInventory(class AActor* InteractingActor_0, bool* ItemAlreadyInInventory)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_OrangeTree_C", "CheckIfItemInInventory");

	Params::BP_OrangeTree_C_CheckIfItemInInventory Parms{};

	Parms.InteractingActor_0 = InteractingActor_0;

	UObject::ProcessEvent(Func, &Parms);

	if (ItemAlreadyInInventory != nullptr)
		*ItemAlreadyInInventory = Parms.ItemAlreadyInInventory;
}


// Function BP_OrangeTree.BP_OrangeTree_C.DisplayInventoryWidget
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           InteractingActor_0                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_OrangeTree_C::DisplayInventoryWidget(class AActor* InteractingActor_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_OrangeTree_C", "DisplayInventoryWidget");

	Params::BP_OrangeTree_C_DisplayInventoryWidget Parms{};

	Parms.InteractingActor_0 = InteractingActor_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_OrangeTree.BP_OrangeTree_C.ExecuteUbergraph_BP_OrangeTree
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_OrangeTree_C::ExecuteUbergraph_BP_OrangeTree(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_OrangeTree_C", "ExecuteUbergraph_BP_OrangeTree");

	Params::BP_OrangeTree_C_ExecuteUbergraph_BP_OrangeTree Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_OrangeTree.BP_OrangeTree_C.GetNewWidgetColor
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FSlateColor                      NewColor                                               (Parm, OutParm)

void ABP_OrangeTree_C::GetNewWidgetColor(struct FSlateColor* NewColor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_OrangeTree_C", "GetNewWidgetColor");

	Params::BP_OrangeTree_C_GetNewWidgetColor Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (NewColor != nullptr)
		*NewColor = std::move(Parms.NewColor);
}


// Function BP_OrangeTree.BP_OrangeTree_C.GetOptionalText
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FText                             Return                                                 (Parm, OutParm)
// class FText                             Optional_Second_Line                                   (Parm, OutParm)

void ABP_OrangeTree_C::GetOptionalText(class FText* Return, class FText* Optional_Second_Line)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_OrangeTree_C", "GetOptionalText");

	Params::BP_OrangeTree_C_GetOptionalText Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Return != nullptr)
		*Return = std::move(Parms.Return);

	if (Optional_Second_Line != nullptr)
		*Optional_Second_Line = std::move(Parms.Optional_Second_Line);
}


// Function BP_OrangeTree.BP_OrangeTree_C.IsInFocus
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Focusing_Actor                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_OrangeTree_C::IsInFocus(class AActor* Focusing_Actor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_OrangeTree_C", "IsInFocus");

	Params::BP_OrangeTree_C_IsInFocus Parms{};

	Parms.Focusing_Actor = Focusing_Actor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_OrangeTree.BP_OrangeTree_C.MultiPlayCosmetics
// (Net, NetMulticast, BlueprintCallable, BlueprintEvent)

void ABP_OrangeTree_C::MultiPlayCosmetics()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_OrangeTree_C", "MultiPlayCosmetics");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_OrangeTree.BP_OrangeTree_C.PlayCosmetics
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_OrangeTree_C::PlayCosmetics()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_OrangeTree_C", "PlayCosmetics");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_OrangeTree.BP_OrangeTree_C.PlayErrorSound
// (Net, NetClient, BlueprintCallable, BlueprintEvent)

void ABP_OrangeTree_C::PlayErrorSound()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_OrangeTree_C", "PlayErrorSound");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_OrangeTree.BP_OrangeTree_C.PostInteract
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           InteractingActor_0                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*              InteractionComponent                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void ABP_OrangeTree_C::PostInteract(class AActor* InteractingActor_0, class UPrimitiveComponent* InteractionComponent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_OrangeTree_C", "PostInteract");

	Params::BP_OrangeTree_C_PostInteract Parms{};

	Parms.InteractingActor_0 = InteractingActor_0;
	Parms.InteractionComponent = InteractionComponent;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_OrangeTree.BP_OrangeTree_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ABP_OrangeTree_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_OrangeTree_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_OrangeTree.BP_OrangeTree_C.ReloadAfterHousesLoaded
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Return                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_OrangeTree_C::ReloadAfterHousesLoaded(bool* Return)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_OrangeTree_C", "ReloadAfterHousesLoaded");

	Params::BP_OrangeTree_C_ReloadAfterHousesLoaded Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Return != nullptr)
		*Return = Parms.Return;
}


// Function BP_OrangeTree.BP_OrangeTree_C.SetWidgetTextAndColor
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    AmmoFull                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FText                             OptionalSecondText                                     (BlueprintVisible, BlueprintReadOnly, Parm)

void ABP_OrangeTree_C::SetWidgetTextAndColor(bool AmmoFull, const class FText& OptionalSecondText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_OrangeTree_C", "SetWidgetTextAndColor");

	Params::BP_OrangeTree_C_SetWidgetTextAndColor Parms{};

	Parms.AmmoFull = AmmoFull;
	Parms.OptionalSecondText = std::move(OptionalSecondText);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_OrangeTree.BP_OrangeTree_C.UserConstructionScript
// (Event, Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_OrangeTree_C::UserConstructionScript()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_OrangeTree_C", "UserConstructionScript");

	UObject::ProcessEvent(Func, nullptr);
}

}

