#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WI_OnScreenIndicator

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "E_IndicatorAnimation_structs.hpp"
#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function WI_OnScreenIndicator.WI_OnScreenIndicator_C.ExecuteUbergraph_WI_OnScreenIndicator
// 0x00B0 (0x00B0 - 0x0000)
struct WI_OnScreenIndicator_C_ExecuteUbergraph_WI_OnScreenIndicator final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidgetAnimation*                       Temp_object_Variable;                              // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             K2Node_CustomEvent_Image;                          // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_CustomEvent_ImageColor;                     // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   K2Node_CustomEvent_Text;                           // 0x0028(0x0010)()
	struct FLinearColor                           K2Node_CustomEvent_TextColor;                      // 0x0038(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_Animate;                        // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_IndicatorAnimation                          K2Node_CustomEvent_Animation;                      // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A[0x2];                                       // 0x004A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x004C(0x0014)()
	struct FLinearColor                           K2Node_CustomEvent_Color;                          // 0x0060(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              K2Node_CustomEvent_ShadowOffset;                   // 0x0070(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_IndicatorAnimation                          Temp_byte_Variable;                                // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_81[0x7];                                       // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_CustomEvent_NewScale;                       // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       K2Node_Select_Default;                             // 0x0090(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_99[0x7];                                       // 0x0099(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x00A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetUserSpecifiedScale_InUserSpecifiedScale_ImplicitCast; // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WI_OnScreenIndicator_C_ExecuteUbergraph_WI_OnScreenIndicator) == 0x000008, "Wrong alignment on WI_OnScreenIndicator_C_ExecuteUbergraph_WI_OnScreenIndicator");
static_assert(sizeof(WI_OnScreenIndicator_C_ExecuteUbergraph_WI_OnScreenIndicator) == 0x0000B0, "Wrong size on WI_OnScreenIndicator_C_ExecuteUbergraph_WI_OnScreenIndicator");
static_assert(offsetof(WI_OnScreenIndicator_C_ExecuteUbergraph_WI_OnScreenIndicator, EntryPoint) == 0x000000, "Member 'WI_OnScreenIndicator_C_ExecuteUbergraph_WI_OnScreenIndicator::EntryPoint' has a wrong offset!");
static_assert(offsetof(WI_OnScreenIndicator_C_ExecuteUbergraph_WI_OnScreenIndicator, Temp_object_Variable) == 0x000008, "Member 'WI_OnScreenIndicator_C_ExecuteUbergraph_WI_OnScreenIndicator::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(WI_OnScreenIndicator_C_ExecuteUbergraph_WI_OnScreenIndicator, K2Node_CustomEvent_Image) == 0x000010, "Member 'WI_OnScreenIndicator_C_ExecuteUbergraph_WI_OnScreenIndicator::K2Node_CustomEvent_Image' has a wrong offset!");
static_assert(offsetof(WI_OnScreenIndicator_C_ExecuteUbergraph_WI_OnScreenIndicator, K2Node_CustomEvent_ImageColor) == 0x000018, "Member 'WI_OnScreenIndicator_C_ExecuteUbergraph_WI_OnScreenIndicator::K2Node_CustomEvent_ImageColor' has a wrong offset!");
static_assert(offsetof(WI_OnScreenIndicator_C_ExecuteUbergraph_WI_OnScreenIndicator, K2Node_CustomEvent_Text) == 0x000028, "Member 'WI_OnScreenIndicator_C_ExecuteUbergraph_WI_OnScreenIndicator::K2Node_CustomEvent_Text' has a wrong offset!");
static_assert(offsetof(WI_OnScreenIndicator_C_ExecuteUbergraph_WI_OnScreenIndicator, K2Node_CustomEvent_TextColor) == 0x000038, "Member 'WI_OnScreenIndicator_C_ExecuteUbergraph_WI_OnScreenIndicator::K2Node_CustomEvent_TextColor' has a wrong offset!");
static_assert(offsetof(WI_OnScreenIndicator_C_ExecuteUbergraph_WI_OnScreenIndicator, K2Node_CustomEvent_Animate) == 0x000048, "Member 'WI_OnScreenIndicator_C_ExecuteUbergraph_WI_OnScreenIndicator::K2Node_CustomEvent_Animate' has a wrong offset!");
static_assert(offsetof(WI_OnScreenIndicator_C_ExecuteUbergraph_WI_OnScreenIndicator, K2Node_CustomEvent_Animation) == 0x000049, "Member 'WI_OnScreenIndicator_C_ExecuteUbergraph_WI_OnScreenIndicator::K2Node_CustomEvent_Animation' has a wrong offset!");
static_assert(offsetof(WI_OnScreenIndicator_C_ExecuteUbergraph_WI_OnScreenIndicator, K2Node_MakeStruct_SlateColor) == 0x00004C, "Member 'WI_OnScreenIndicator_C_ExecuteUbergraph_WI_OnScreenIndicator::K2Node_MakeStruct_SlateColor' has a wrong offset!");
static_assert(offsetof(WI_OnScreenIndicator_C_ExecuteUbergraph_WI_OnScreenIndicator, K2Node_CustomEvent_Color) == 0x000060, "Member 'WI_OnScreenIndicator_C_ExecuteUbergraph_WI_OnScreenIndicator::K2Node_CustomEvent_Color' has a wrong offset!");
static_assert(offsetof(WI_OnScreenIndicator_C_ExecuteUbergraph_WI_OnScreenIndicator, K2Node_CustomEvent_ShadowOffset) == 0x000070, "Member 'WI_OnScreenIndicator_C_ExecuteUbergraph_WI_OnScreenIndicator::K2Node_CustomEvent_ShadowOffset' has a wrong offset!");
static_assert(offsetof(WI_OnScreenIndicator_C_ExecuteUbergraph_WI_OnScreenIndicator, Temp_byte_Variable) == 0x000080, "Member 'WI_OnScreenIndicator_C_ExecuteUbergraph_WI_OnScreenIndicator::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WI_OnScreenIndicator_C_ExecuteUbergraph_WI_OnScreenIndicator, K2Node_CustomEvent_NewScale) == 0x000088, "Member 'WI_OnScreenIndicator_C_ExecuteUbergraph_WI_OnScreenIndicator::K2Node_CustomEvent_NewScale' has a wrong offset!");
static_assert(offsetof(WI_OnScreenIndicator_C_ExecuteUbergraph_WI_OnScreenIndicator, K2Node_Select_Default) == 0x000090, "Member 'WI_OnScreenIndicator_C_ExecuteUbergraph_WI_OnScreenIndicator::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WI_OnScreenIndicator_C_ExecuteUbergraph_WI_OnScreenIndicator, CallFunc_IsValid_ReturnValue) == 0x000098, "Member 'WI_OnScreenIndicator_C_ExecuteUbergraph_WI_OnScreenIndicator::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WI_OnScreenIndicator_C_ExecuteUbergraph_WI_OnScreenIndicator, CallFunc_PlayAnimation_ReturnValue) == 0x0000A0, "Member 'WI_OnScreenIndicator_C_ExecuteUbergraph_WI_OnScreenIndicator::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(WI_OnScreenIndicator_C_ExecuteUbergraph_WI_OnScreenIndicator, CallFunc_SetUserSpecifiedScale_InUserSpecifiedScale_ImplicitCast) == 0x0000A8, "Member 'WI_OnScreenIndicator_C_ExecuteUbergraph_WI_OnScreenIndicator::CallFunc_SetUserSpecifiedScale_InUserSpecifiedScale_ImplicitCast' has a wrong offset!");

// Function WI_OnScreenIndicator.WI_OnScreenIndicator_C.SetCustomScale
// 0x0008 (0x0008 - 0x0000)
struct WI_OnScreenIndicator_C_SetCustomScale final
{
public:
	double                                        NewScale;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WI_OnScreenIndicator_C_SetCustomScale) == 0x000008, "Wrong alignment on WI_OnScreenIndicator_C_SetCustomScale");
static_assert(sizeof(WI_OnScreenIndicator_C_SetCustomScale) == 0x000008, "Wrong size on WI_OnScreenIndicator_C_SetCustomScale");
static_assert(offsetof(WI_OnScreenIndicator_C_SetCustomScale, NewScale) == 0x000000, "Member 'WI_OnScreenIndicator_C_SetCustomScale::NewScale' has a wrong offset!");

// Function WI_OnScreenIndicator.WI_OnScreenIndicator_C.SetImageAndText
// 0x0040 (0x0040 - 0x0000)
struct WI_OnScreenIndicator_C_SetImageAndText final
{
public:
	class UTexture2D*                             Image;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           ImageColor;                                        // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   Text;                                              // 0x0018(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm)
	struct FLinearColor                           TextColor;                                         // 0x0028(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Animate;                                           // 0x0038(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_IndicatorAnimation                          Animation;                                         // 0x0039(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WI_OnScreenIndicator_C_SetImageAndText) == 0x000008, "Wrong alignment on WI_OnScreenIndicator_C_SetImageAndText");
static_assert(sizeof(WI_OnScreenIndicator_C_SetImageAndText) == 0x000040, "Wrong size on WI_OnScreenIndicator_C_SetImageAndText");
static_assert(offsetof(WI_OnScreenIndicator_C_SetImageAndText, Image) == 0x000000, "Member 'WI_OnScreenIndicator_C_SetImageAndText::Image' has a wrong offset!");
static_assert(offsetof(WI_OnScreenIndicator_C_SetImageAndText, ImageColor) == 0x000008, "Member 'WI_OnScreenIndicator_C_SetImageAndText::ImageColor' has a wrong offset!");
static_assert(offsetof(WI_OnScreenIndicator_C_SetImageAndText, Text) == 0x000018, "Member 'WI_OnScreenIndicator_C_SetImageAndText::Text' has a wrong offset!");
static_assert(offsetof(WI_OnScreenIndicator_C_SetImageAndText, TextColor) == 0x000028, "Member 'WI_OnScreenIndicator_C_SetImageAndText::TextColor' has a wrong offset!");
static_assert(offsetof(WI_OnScreenIndicator_C_SetImageAndText, Animate) == 0x000038, "Member 'WI_OnScreenIndicator_C_SetImageAndText::Animate' has a wrong offset!");
static_assert(offsetof(WI_OnScreenIndicator_C_SetImageAndText, Animation) == 0x000039, "Member 'WI_OnScreenIndicator_C_SetImageAndText::Animation' has a wrong offset!");

// Function WI_OnScreenIndicator.WI_OnScreenIndicator_C.SetTextShadow
// 0x0020 (0x0020 - 0x0000)
struct WI_OnScreenIndicator_C_SetTextShadow final
{
public:
	struct FLinearColor                           Color;                                             // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              ShadowOffset;                                      // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WI_OnScreenIndicator_C_SetTextShadow) == 0x000008, "Wrong alignment on WI_OnScreenIndicator_C_SetTextShadow");
static_assert(sizeof(WI_OnScreenIndicator_C_SetTextShadow) == 0x000020, "Wrong size on WI_OnScreenIndicator_C_SetTextShadow");
static_assert(offsetof(WI_OnScreenIndicator_C_SetTextShadow, Color) == 0x000000, "Member 'WI_OnScreenIndicator_C_SetTextShadow::Color' has a wrong offset!");
static_assert(offsetof(WI_OnScreenIndicator_C_SetTextShadow, ShadowOffset) == 0x000010, "Member 'WI_OnScreenIndicator_C_SetTextShadow::ShadowOffset' has a wrong offset!");

}

