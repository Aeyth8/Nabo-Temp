#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: AC_AnnouncerListener

#include "Basic.hpp"

#include "JP_structs.hpp"
#include "E_AnnouncementTypes_structs.hpp"
#include "GameplayTags_structs.hpp"


namespace SDK::Params
{

// Function AC_AnnouncerListener.AC_AnnouncerListener_C.ExecuteUbergraph_AC_AnnouncerListener
// 0x0840 (0x0840 - 0x0000)
struct AC_AnnouncerListener_C_ExecuteUbergraph_AC_AnnouncerListener final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKillGameplayMessage                   Temp_struct_Variable;                              // 0x0008(0x03D8)()
	class UAsyncAction_ListenForGameplayMessage*  K2Node_CustomEvent_ProxyObject;                    // 0x03E0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           K2Node_CustomEvent_ActualChannel;                  // 0x03E8(0x0008)(NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UAsyncAction_ListenForGameplayMessage* ProxyObject, const struct FGameplayTag& ActualChannel)> K2Node_CreateDelegate_OutputDelegate;              // 0x03F0(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FKillGameplayMessage                   Temp_struct_Variable_1;                            // 0x0400(0x03D8)()
	struct FGameplayTag                           Temp_struct_Variable_2;                            // 0x07D8(0x0008)(NoDestructor, HasGetValueTypeHash)
	class UAsyncAction_ListenForGameplayMessage*  Temp_object_Variable;                              // 0x07E0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetPayload_ReturnValue;                   // 0x07E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          GameplayTagsK2Node_SwitchGameplayTag_CmpSuccess;   // 0x07E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7EA[0x6];                                      // 0x07EA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UAsyncAction_ListenForGameplayMessage*  CallFunc_ListenForGameplayMessages_ReturnValue;    // 0x07F0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x07F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_AnnouncementTypes                           K2Node_CustomEvent_AnnouncementType;               // 0x07F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7FA[0x6];                                      // 0x07FA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AnnouncerSpeaker_C*                 CallFunc_GetActorOfClass_ReturnValue;              // 0x0800(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0808(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      K2Node_DynamicCast_AsPlayer_Controller;            // 0x0810(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0818(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLocalController_ReturnValue;            // 0x0819(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x081A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_81B[0x5];                                      // 0x081B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerStateJP*                         K2Node_DynamicCast_AsPlayer_State_JP;              // 0x0820(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0828(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_829[0x7];                                      // 0x0829(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetPlayerDisplayName_ReturnValue;         // 0x0830(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(AC_AnnouncerListener_C_ExecuteUbergraph_AC_AnnouncerListener) == 0x000008, "Wrong alignment on AC_AnnouncerListener_C_ExecuteUbergraph_AC_AnnouncerListener");
static_assert(sizeof(AC_AnnouncerListener_C_ExecuteUbergraph_AC_AnnouncerListener) == 0x000840, "Wrong size on AC_AnnouncerListener_C_ExecuteUbergraph_AC_AnnouncerListener");
static_assert(offsetof(AC_AnnouncerListener_C_ExecuteUbergraph_AC_AnnouncerListener, EntryPoint) == 0x000000, "Member 'AC_AnnouncerListener_C_ExecuteUbergraph_AC_AnnouncerListener::EntryPoint' has a wrong offset!");
static_assert(offsetof(AC_AnnouncerListener_C_ExecuteUbergraph_AC_AnnouncerListener, Temp_struct_Variable) == 0x000008, "Member 'AC_AnnouncerListener_C_ExecuteUbergraph_AC_AnnouncerListener::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(AC_AnnouncerListener_C_ExecuteUbergraph_AC_AnnouncerListener, K2Node_CustomEvent_ProxyObject) == 0x0003E0, "Member 'AC_AnnouncerListener_C_ExecuteUbergraph_AC_AnnouncerListener::K2Node_CustomEvent_ProxyObject' has a wrong offset!");
static_assert(offsetof(AC_AnnouncerListener_C_ExecuteUbergraph_AC_AnnouncerListener, K2Node_CustomEvent_ActualChannel) == 0x0003E8, "Member 'AC_AnnouncerListener_C_ExecuteUbergraph_AC_AnnouncerListener::K2Node_CustomEvent_ActualChannel' has a wrong offset!");
static_assert(offsetof(AC_AnnouncerListener_C_ExecuteUbergraph_AC_AnnouncerListener, K2Node_CreateDelegate_OutputDelegate) == 0x0003F0, "Member 'AC_AnnouncerListener_C_ExecuteUbergraph_AC_AnnouncerListener::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(AC_AnnouncerListener_C_ExecuteUbergraph_AC_AnnouncerListener, Temp_struct_Variable_1) == 0x000400, "Member 'AC_AnnouncerListener_C_ExecuteUbergraph_AC_AnnouncerListener::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(AC_AnnouncerListener_C_ExecuteUbergraph_AC_AnnouncerListener, Temp_struct_Variable_2) == 0x0007D8, "Member 'AC_AnnouncerListener_C_ExecuteUbergraph_AC_AnnouncerListener::Temp_struct_Variable_2' has a wrong offset!");
static_assert(offsetof(AC_AnnouncerListener_C_ExecuteUbergraph_AC_AnnouncerListener, Temp_object_Variable) == 0x0007E0, "Member 'AC_AnnouncerListener_C_ExecuteUbergraph_AC_AnnouncerListener::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(AC_AnnouncerListener_C_ExecuteUbergraph_AC_AnnouncerListener, CallFunc_GetPayload_ReturnValue) == 0x0007E8, "Member 'AC_AnnouncerListener_C_ExecuteUbergraph_AC_AnnouncerListener::CallFunc_GetPayload_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_AnnouncerListener_C_ExecuteUbergraph_AC_AnnouncerListener, GameplayTagsK2Node_SwitchGameplayTag_CmpSuccess) == 0x0007E9, "Member 'AC_AnnouncerListener_C_ExecuteUbergraph_AC_AnnouncerListener::GameplayTagsK2Node_SwitchGameplayTag_CmpSuccess' has a wrong offset!");
static_assert(offsetof(AC_AnnouncerListener_C_ExecuteUbergraph_AC_AnnouncerListener, CallFunc_ListenForGameplayMessages_ReturnValue) == 0x0007F0, "Member 'AC_AnnouncerListener_C_ExecuteUbergraph_AC_AnnouncerListener::CallFunc_ListenForGameplayMessages_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_AnnouncerListener_C_ExecuteUbergraph_AC_AnnouncerListener, CallFunc_IsValid_ReturnValue) == 0x0007F8, "Member 'AC_AnnouncerListener_C_ExecuteUbergraph_AC_AnnouncerListener::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_AnnouncerListener_C_ExecuteUbergraph_AC_AnnouncerListener, K2Node_CustomEvent_AnnouncementType) == 0x0007F9, "Member 'AC_AnnouncerListener_C_ExecuteUbergraph_AC_AnnouncerListener::K2Node_CustomEvent_AnnouncementType' has a wrong offset!");
static_assert(offsetof(AC_AnnouncerListener_C_ExecuteUbergraph_AC_AnnouncerListener, CallFunc_GetActorOfClass_ReturnValue) == 0x000800, "Member 'AC_AnnouncerListener_C_ExecuteUbergraph_AC_AnnouncerListener::CallFunc_GetActorOfClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_AnnouncerListener_C_ExecuteUbergraph_AC_AnnouncerListener, CallFunc_GetOwner_ReturnValue) == 0x000808, "Member 'AC_AnnouncerListener_C_ExecuteUbergraph_AC_AnnouncerListener::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_AnnouncerListener_C_ExecuteUbergraph_AC_AnnouncerListener, K2Node_DynamicCast_AsPlayer_Controller) == 0x000810, "Member 'AC_AnnouncerListener_C_ExecuteUbergraph_AC_AnnouncerListener::K2Node_DynamicCast_AsPlayer_Controller' has a wrong offset!");
static_assert(offsetof(AC_AnnouncerListener_C_ExecuteUbergraph_AC_AnnouncerListener, K2Node_DynamicCast_bSuccess) == 0x000818, "Member 'AC_AnnouncerListener_C_ExecuteUbergraph_AC_AnnouncerListener::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(AC_AnnouncerListener_C_ExecuteUbergraph_AC_AnnouncerListener, CallFunc_IsLocalController_ReturnValue) == 0x000819, "Member 'AC_AnnouncerListener_C_ExecuteUbergraph_AC_AnnouncerListener::CallFunc_IsLocalController_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_AnnouncerListener_C_ExecuteUbergraph_AC_AnnouncerListener, CallFunc_IsValid_ReturnValue_1) == 0x00081A, "Member 'AC_AnnouncerListener_C_ExecuteUbergraph_AC_AnnouncerListener::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_AnnouncerListener_C_ExecuteUbergraph_AC_AnnouncerListener, K2Node_DynamicCast_AsPlayer_State_JP) == 0x000820, "Member 'AC_AnnouncerListener_C_ExecuteUbergraph_AC_AnnouncerListener::K2Node_DynamicCast_AsPlayer_State_JP' has a wrong offset!");
static_assert(offsetof(AC_AnnouncerListener_C_ExecuteUbergraph_AC_AnnouncerListener, K2Node_DynamicCast_bSuccess_1) == 0x000828, "Member 'AC_AnnouncerListener_C_ExecuteUbergraph_AC_AnnouncerListener::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(AC_AnnouncerListener_C_ExecuteUbergraph_AC_AnnouncerListener, CallFunc_GetPlayerDisplayName_ReturnValue) == 0x000830, "Member 'AC_AnnouncerListener_C_ExecuteUbergraph_AC_AnnouncerListener::CallFunc_GetPlayerDisplayName_ReturnValue' has a wrong offset!");

// Function AC_AnnouncerListener.AC_AnnouncerListener_C.HandlePlayerAnnouncements
// 0x0098 (0x0098 - 0x0000)
struct AC_AnnouncerListener_C_HandlePlayerAnnouncements final
{
public:
	struct FCombatParticipant                     CombatParticipant;                                 // 0x0000(0x0060)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	uint8                                         TeamId;                                            // 0x0060(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x0068(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsEntireTeamDead_Return;                  // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_IsEntireTeamDead_EliminatedTeam;          // 0x0079(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7A[0x2];                                       // 0x007A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_MultiKnockoutCounter_SuccessiveKnockouts; // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchInteger_CmpSuccess;                   // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_81[0x7];                                       // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0088(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_StriStri_ReturnValue;          // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AC_AnnouncerListener_C_HandlePlayerAnnouncements) == 0x000008, "Wrong alignment on AC_AnnouncerListener_C_HandlePlayerAnnouncements");
static_assert(sizeof(AC_AnnouncerListener_C_HandlePlayerAnnouncements) == 0x000098, "Wrong size on AC_AnnouncerListener_C_HandlePlayerAnnouncements");
static_assert(offsetof(AC_AnnouncerListener_C_HandlePlayerAnnouncements, CombatParticipant) == 0x000000, "Member 'AC_AnnouncerListener_C_HandlePlayerAnnouncements::CombatParticipant' has a wrong offset!");
static_assert(offsetof(AC_AnnouncerListener_C_HandlePlayerAnnouncements, TeamId) == 0x000060, "Member 'AC_AnnouncerListener_C_HandlePlayerAnnouncements::TeamId' has a wrong offset!");
static_assert(offsetof(AC_AnnouncerListener_C_HandlePlayerAnnouncements, CallFunc_Conv_TextToString_ReturnValue) == 0x000068, "Member 'AC_AnnouncerListener_C_HandlePlayerAnnouncements::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_AnnouncerListener_C_HandlePlayerAnnouncements, CallFunc_IsEntireTeamDead_Return) == 0x000078, "Member 'AC_AnnouncerListener_C_HandlePlayerAnnouncements::CallFunc_IsEntireTeamDead_Return' has a wrong offset!");
static_assert(offsetof(AC_AnnouncerListener_C_HandlePlayerAnnouncements, CallFunc_IsEntireTeamDead_EliminatedTeam) == 0x000079, "Member 'AC_AnnouncerListener_C_HandlePlayerAnnouncements::CallFunc_IsEntireTeamDead_EliminatedTeam' has a wrong offset!");
static_assert(offsetof(AC_AnnouncerListener_C_HandlePlayerAnnouncements, CallFunc_MultiKnockoutCounter_SuccessiveKnockouts) == 0x00007C, "Member 'AC_AnnouncerListener_C_HandlePlayerAnnouncements::CallFunc_MultiKnockoutCounter_SuccessiveKnockouts' has a wrong offset!");
static_assert(offsetof(AC_AnnouncerListener_C_HandlePlayerAnnouncements, K2Node_SwitchInteger_CmpSuccess) == 0x000080, "Member 'AC_AnnouncerListener_C_HandlePlayerAnnouncements::K2Node_SwitchInteger_CmpSuccess' has a wrong offset!");
static_assert(offsetof(AC_AnnouncerListener_C_HandlePlayerAnnouncements, CallFunc_GetOwner_ReturnValue) == 0x000088, "Member 'AC_AnnouncerListener_C_HandlePlayerAnnouncements::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_AnnouncerListener_C_HandlePlayerAnnouncements, CallFunc_EqualEqual_StriStri_ReturnValue) == 0x000090, "Member 'AC_AnnouncerListener_C_HandlePlayerAnnouncements::CallFunc_EqualEqual_StriStri_ReturnValue' has a wrong offset!");

// Function AC_AnnouncerListener.AC_AnnouncerListener_C.MultiKnockoutCounter
// 0x0040 (0x0040 - 0x0000)
struct AC_AnnouncerListener_C_MultiKnockoutCounter final
{
public:
	double                                        ResetCoolDown;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         SuccessiveKnockouts;                               // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue_1;               // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetServerWorldTimeSeconds_ReturnValue;    // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetServerWorldTimeSeconds_ReturnValue_1;  // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x3];                                       // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AC_AnnouncerListener_C_MultiKnockoutCounter) == 0x000008, "Wrong alignment on AC_AnnouncerListener_C_MultiKnockoutCounter");
static_assert(sizeof(AC_AnnouncerListener_C_MultiKnockoutCounter) == 0x000040, "Wrong size on AC_AnnouncerListener_C_MultiKnockoutCounter");
static_assert(offsetof(AC_AnnouncerListener_C_MultiKnockoutCounter, ResetCoolDown) == 0x000000, "Member 'AC_AnnouncerListener_C_MultiKnockoutCounter::ResetCoolDown' has a wrong offset!");
static_assert(offsetof(AC_AnnouncerListener_C_MultiKnockoutCounter, SuccessiveKnockouts) == 0x000008, "Member 'AC_AnnouncerListener_C_MultiKnockoutCounter::SuccessiveKnockouts' has a wrong offset!");
static_assert(offsetof(AC_AnnouncerListener_C_MultiKnockoutCounter, Temp_int_Variable) == 0x00000C, "Member 'AC_AnnouncerListener_C_MultiKnockoutCounter::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(AC_AnnouncerListener_C_MultiKnockoutCounter, CallFunc_GetGameState_ReturnValue) == 0x000010, "Member 'AC_AnnouncerListener_C_MultiKnockoutCounter::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_AnnouncerListener_C_MultiKnockoutCounter, CallFunc_GetGameState_ReturnValue_1) == 0x000018, "Member 'AC_AnnouncerListener_C_MultiKnockoutCounter::CallFunc_GetGameState_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_AnnouncerListener_C_MultiKnockoutCounter, CallFunc_GetServerWorldTimeSeconds_ReturnValue) == 0x000020, "Member 'AC_AnnouncerListener_C_MultiKnockoutCounter::CallFunc_GetServerWorldTimeSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_AnnouncerListener_C_MultiKnockoutCounter, CallFunc_GetServerWorldTimeSeconds_ReturnValue_1) == 0x000028, "Member 'AC_AnnouncerListener_C_MultiKnockoutCounter::CallFunc_GetServerWorldTimeSeconds_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_AnnouncerListener_C_MultiKnockoutCounter, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000030, "Member 'AC_AnnouncerListener_C_MultiKnockoutCounter::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_AnnouncerListener_C_MultiKnockoutCounter, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000038, "Member 'AC_AnnouncerListener_C_MultiKnockoutCounter::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_AnnouncerListener_C_MultiKnockoutCounter, CallFunc_Add_IntInt_ReturnValue) == 0x00003C, "Member 'AC_AnnouncerListener_C_MultiKnockoutCounter::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function AC_AnnouncerListener.AC_AnnouncerListener_C.OnMessageReceived_0DE170E34496543FE6F91E82ACCF2D46
// 0x0010 (0x0010 - 0x0000)
struct AC_AnnouncerListener_C_OnMessageReceived_0DE170E34496543FE6F91E82ACCF2D46 final
{
public:
	class UAsyncAction_ListenForGameplayMessage*  ProxyObject;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           ActualChannel;                                     // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AC_AnnouncerListener_C_OnMessageReceived_0DE170E34496543FE6F91E82ACCF2D46) == 0x000008, "Wrong alignment on AC_AnnouncerListener_C_OnMessageReceived_0DE170E34496543FE6F91E82ACCF2D46");
static_assert(sizeof(AC_AnnouncerListener_C_OnMessageReceived_0DE170E34496543FE6F91E82ACCF2D46) == 0x000010, "Wrong size on AC_AnnouncerListener_C_OnMessageReceived_0DE170E34496543FE6F91E82ACCF2D46");
static_assert(offsetof(AC_AnnouncerListener_C_OnMessageReceived_0DE170E34496543FE6F91E82ACCF2D46, ProxyObject) == 0x000000, "Member 'AC_AnnouncerListener_C_OnMessageReceived_0DE170E34496543FE6F91E82ACCF2D46::ProxyObject' has a wrong offset!");
static_assert(offsetof(AC_AnnouncerListener_C_OnMessageReceived_0DE170E34496543FE6F91E82ACCF2D46, ActualChannel) == 0x000008, "Member 'AC_AnnouncerListener_C_OnMessageReceived_0DE170E34496543FE6F91E82ACCF2D46::ActualChannel' has a wrong offset!");

// Function AC_AnnouncerListener.AC_AnnouncerListener_C.Server_Play Sound From Announcer
// 0x0001 (0x0001 - 0x0000)
struct AC_AnnouncerListener_C_Server_Play_Sound_From_Announcer final
{
public:
	E_AnnouncementTypes                           AnnouncementType;                                  // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AC_AnnouncerListener_C_Server_Play_Sound_From_Announcer) == 0x000001, "Wrong alignment on AC_AnnouncerListener_C_Server_Play_Sound_From_Announcer");
static_assert(sizeof(AC_AnnouncerListener_C_Server_Play_Sound_From_Announcer) == 0x000001, "Wrong size on AC_AnnouncerListener_C_Server_Play_Sound_From_Announcer");
static_assert(offsetof(AC_AnnouncerListener_C_Server_Play_Sound_From_Announcer, AnnouncementType) == 0x000000, "Member 'AC_AnnouncerListener_C_Server_Play_Sound_From_Announcer::AnnouncementType' has a wrong offset!");

}

