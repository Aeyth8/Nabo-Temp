#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_BaseballPitcher

#include "Basic.hpp"

#include "GameplayTags_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "JP_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BP_BaseballPitcher.BP_BaseballPitcher_C.Audio_TryPlayEnterIdleMode
// 0x0038 (0x0038 - 0x0000)
struct BP_BaseballPitcher_C_Audio_TryPlayEnterIdleMode final
{
public:
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0008(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GetGameTimeInSeconds_ReturnValue;         // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BaseballPitcher_C_Audio_TryPlayEnterIdleMode) == 0x000008, "Wrong alignment on BP_BaseballPitcher_C_Audio_TryPlayEnterIdleMode");
static_assert(sizeof(BP_BaseballPitcher_C_Audio_TryPlayEnterIdleMode) == 0x000038, "Wrong size on BP_BaseballPitcher_C_Audio_TryPlayEnterIdleMode");
static_assert(offsetof(BP_BaseballPitcher_C_Audio_TryPlayEnterIdleMode, CallFunc_GetPlayerController_ReturnValue) == 0x000000, "Member 'BP_BaseballPitcher_C_Audio_TryPlayEnterIdleMode::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BaseballPitcher_C_Audio_TryPlayEnterIdleMode, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000008, "Member 'BP_BaseballPitcher_C_Audio_TryPlayEnterIdleMode::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BaseballPitcher_C_Audio_TryPlayEnterIdleMode, CallFunc_IsValid_ReturnValue) == 0x000020, "Member 'BP_BaseballPitcher_C_Audio_TryPlayEnterIdleMode::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BaseballPitcher_C_Audio_TryPlayEnterIdleMode, CallFunc_GetGameTimeInSeconds_ReturnValue) == 0x000028, "Member 'BP_BaseballPitcher_C_Audio_TryPlayEnterIdleMode::CallFunc_GetGameTimeInSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BaseballPitcher_C_Audio_TryPlayEnterIdleMode, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000030, "Member 'BP_BaseballPitcher_C_Audio_TryPlayEnterIdleMode::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BaseballPitcher_C_Audio_TryPlayEnterIdleMode, CallFunc_BooleanAND_ReturnValue) == 0x000031, "Member 'BP_BaseballPitcher_C_Audio_TryPlayEnterIdleMode::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function BP_BaseballPitcher.BP_BaseballPitcher_C.CanSeeComponent
// 0x0160 (0x0160 - 0x0000)
struct BP_BaseballPitcher_C_CanSeeComponent final
{
public:
	class USceneComponent*                        Target;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         Temp_object_Variable;                              // 0x0010(0x0010)(ConstParm, ReferenceParm)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0020(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<EObjectTypeQuery>                      K2Node_MakeArray_Array;                            // 0x0038(0x0010)(ConstParm, ReferenceParm)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue_1;    // 0x0048(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_LineTraceSingleForObjects_OutHit;         // 0x0060(0x00F8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceSingleForObjects_ReturnValue;    // 0x0158(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0159(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BaseballPitcher_C_CanSeeComponent) == 0x000008, "Wrong alignment on BP_BaseballPitcher_C_CanSeeComponent");
static_assert(sizeof(BP_BaseballPitcher_C_CanSeeComponent) == 0x000160, "Wrong size on BP_BaseballPitcher_C_CanSeeComponent");
static_assert(offsetof(BP_BaseballPitcher_C_CanSeeComponent, Target) == 0x000000, "Member 'BP_BaseballPitcher_C_CanSeeComponent::Target' has a wrong offset!");
static_assert(offsetof(BP_BaseballPitcher_C_CanSeeComponent, ReturnValue) == 0x000008, "Member 'BP_BaseballPitcher_C_CanSeeComponent::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BaseballPitcher_C_CanSeeComponent, Temp_object_Variable) == 0x000010, "Member 'BP_BaseballPitcher_C_CanSeeComponent::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BP_BaseballPitcher_C_CanSeeComponent, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000020, "Member 'BP_BaseballPitcher_C_CanSeeComponent::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BaseballPitcher_C_CanSeeComponent, K2Node_MakeArray_Array) == 0x000038, "Member 'BP_BaseballPitcher_C_CanSeeComponent::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_BaseballPitcher_C_CanSeeComponent, CallFunc_K2_GetComponentLocation_ReturnValue_1) == 0x000048, "Member 'BP_BaseballPitcher_C_CanSeeComponent::CallFunc_K2_GetComponentLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BaseballPitcher_C_CanSeeComponent, CallFunc_LineTraceSingleForObjects_OutHit) == 0x000060, "Member 'BP_BaseballPitcher_C_CanSeeComponent::CallFunc_LineTraceSingleForObjects_OutHit' has a wrong offset!");
static_assert(offsetof(BP_BaseballPitcher_C_CanSeeComponent, CallFunc_LineTraceSingleForObjects_ReturnValue) == 0x000158, "Member 'BP_BaseballPitcher_C_CanSeeComponent::CallFunc_LineTraceSingleForObjects_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BaseballPitcher_C_CanSeeComponent, CallFunc_Not_PreBool_ReturnValue) == 0x000159, "Member 'BP_BaseballPitcher_C_CanSeeComponent::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function BP_BaseballPitcher.BP_BaseballPitcher_C.ExecuteUbergraph_BP_BaseballPitcher
// 0x0290 (0x0290 - 0x0000)
struct BP_BaseballPitcher_C_ExecuteUbergraph_BP_BaseballPitcher final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0008(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x001C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0030(0x0008)(NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeUnclamped_ReturnValue;            // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0040(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_2;            // 0x0058(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue_1;        // 0x0068(0x0008)(NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_Get_Closest_Overlapping_Actor_TargetActor; // 0x0070(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Get_Closest_Overlapping_Actor_HighPriorityFound; // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_79[0x7];                                       // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class II_TurretTarget_C>     K2Node_DynamicCast_AsI_Turret_Target;              // 0x0080(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_91[0x7];                                       // 0x0091(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class II_TurretTarget_C>     K2Node_DynamicCast_AsI_Turret_Target_1;            // 0x0098(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A9[0x7];                                       // 0x00A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USceneComponent*                        CallFunc_GetTurretTargetSceneComponent_Return;     // 0x00B0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidTurretTarget_IsValid;              // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x00B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_BA[0x6];                                       // 0x00BA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x00C0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x00C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x00CA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x00CB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D1[0x7];                                       // 0x00D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_Event_SabotagingActor;                      // 0x00D8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x00E0(0x0060)(ConstParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetGameTimeInSeconds_ReturnValue;         // 0x0140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0148(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_149[0x7];                                      // 0x0149(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0150(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0168(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_169[0x7];                                      // 0x0169(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_K2_SetRelativeLocation_SweepHitResult;    // 0x0170(0x00F8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue_2;        // 0x0268(0x0008)(NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x0270(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_FinishSpawningActor_ReturnValue;          // 0x0278(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeUnclamped_Value_ImplicitCast;     // 0x0280(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BaseballPitcher_C_ExecuteUbergraph_BP_BaseballPitcher) == 0x000010, "Wrong alignment on BP_BaseballPitcher_C_ExecuteUbergraph_BP_BaseballPitcher");
static_assert(sizeof(BP_BaseballPitcher_C_ExecuteUbergraph_BP_BaseballPitcher) == 0x000290, "Wrong size on BP_BaseballPitcher_C_ExecuteUbergraph_BP_BaseballPitcher");
static_assert(offsetof(BP_BaseballPitcher_C_ExecuteUbergraph_BP_BaseballPitcher, EntryPoint) == 0x000000, "Member 'BP_BaseballPitcher_C_ExecuteUbergraph_BP_BaseballPitcher::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_BaseballPitcher_C_ExecuteUbergraph_BP_BaseballPitcher, CallFunc_IsValid_ReturnValue) == 0x000004, "Member 'BP_BaseballPitcher_C_ExecuteUbergraph_BP_BaseballPitcher::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BaseballPitcher_C_ExecuteUbergraph_BP_BaseballPitcher, K2Node_CreateDelegate_OutputDelegate) == 0x000008, "Member 'BP_BaseballPitcher_C_ExecuteUbergraph_BP_BaseballPitcher::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_BaseballPitcher_C_ExecuteUbergraph_BP_BaseballPitcher, CallFunc_IsValid_ReturnValue_1) == 0x000018, "Member 'BP_BaseballPitcher_C_ExecuteUbergraph_BP_BaseballPitcher::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BaseballPitcher_C_ExecuteUbergraph_BP_BaseballPitcher, K2Node_CreateDelegate_OutputDelegate_1) == 0x00001C, "Member 'BP_BaseballPitcher_C_ExecuteUbergraph_BP_BaseballPitcher::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(BP_BaseballPitcher_C_ExecuteUbergraph_BP_BaseballPitcher, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000030, "Member 'BP_BaseballPitcher_C_ExecuteUbergraph_BP_BaseballPitcher::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BaseballPitcher_C_ExecuteUbergraph_BP_BaseballPitcher, CallFunc_MapRangeUnclamped_ReturnValue) == 0x000038, "Member 'BP_BaseballPitcher_C_ExecuteUbergraph_BP_BaseballPitcher::CallFunc_MapRangeUnclamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BaseballPitcher_C_ExecuteUbergraph_BP_BaseballPitcher, CallFunc_MakeVector_ReturnValue) == 0x000040, "Member 'BP_BaseballPitcher_C_ExecuteUbergraph_BP_BaseballPitcher::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BaseballPitcher_C_ExecuteUbergraph_BP_BaseballPitcher, K2Node_CreateDelegate_OutputDelegate_2) == 0x000058, "Member 'BP_BaseballPitcher_C_ExecuteUbergraph_BP_BaseballPitcher::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(BP_BaseballPitcher_C_ExecuteUbergraph_BP_BaseballPitcher, CallFunc_K2_SetTimerDelegate_ReturnValue_1) == 0x000068, "Member 'BP_BaseballPitcher_C_ExecuteUbergraph_BP_BaseballPitcher::CallFunc_K2_SetTimerDelegate_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BaseballPitcher_C_ExecuteUbergraph_BP_BaseballPitcher, CallFunc_Get_Closest_Overlapping_Actor_TargetActor) == 0x000070, "Member 'BP_BaseballPitcher_C_ExecuteUbergraph_BP_BaseballPitcher::CallFunc_Get_Closest_Overlapping_Actor_TargetActor' has a wrong offset!");
static_assert(offsetof(BP_BaseballPitcher_C_ExecuteUbergraph_BP_BaseballPitcher, CallFunc_Get_Closest_Overlapping_Actor_HighPriorityFound) == 0x000078, "Member 'BP_BaseballPitcher_C_ExecuteUbergraph_BP_BaseballPitcher::CallFunc_Get_Closest_Overlapping_Actor_HighPriorityFound' has a wrong offset!");
static_assert(offsetof(BP_BaseballPitcher_C_ExecuteUbergraph_BP_BaseballPitcher, K2Node_DynamicCast_AsI_Turret_Target) == 0x000080, "Member 'BP_BaseballPitcher_C_ExecuteUbergraph_BP_BaseballPitcher::K2Node_DynamicCast_AsI_Turret_Target' has a wrong offset!");
static_assert(offsetof(BP_BaseballPitcher_C_ExecuteUbergraph_BP_BaseballPitcher, K2Node_DynamicCast_bSuccess) == 0x000090, "Member 'BP_BaseballPitcher_C_ExecuteUbergraph_BP_BaseballPitcher::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_BaseballPitcher_C_ExecuteUbergraph_BP_BaseballPitcher, K2Node_DynamicCast_AsI_Turret_Target_1) == 0x000098, "Member 'BP_BaseballPitcher_C_ExecuteUbergraph_BP_BaseballPitcher::K2Node_DynamicCast_AsI_Turret_Target_1' has a wrong offset!");
static_assert(offsetof(BP_BaseballPitcher_C_ExecuteUbergraph_BP_BaseballPitcher, K2Node_DynamicCast_bSuccess_1) == 0x0000A8, "Member 'BP_BaseballPitcher_C_ExecuteUbergraph_BP_BaseballPitcher::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_BaseballPitcher_C_ExecuteUbergraph_BP_BaseballPitcher, CallFunc_GetTurretTargetSceneComponent_Return) == 0x0000B0, "Member 'BP_BaseballPitcher_C_ExecuteUbergraph_BP_BaseballPitcher::CallFunc_GetTurretTargetSceneComponent_Return' has a wrong offset!");
static_assert(offsetof(BP_BaseballPitcher_C_ExecuteUbergraph_BP_BaseballPitcher, CallFunc_IsValidTurretTarget_IsValid) == 0x0000B8, "Member 'BP_BaseballPitcher_C_ExecuteUbergraph_BP_BaseballPitcher::CallFunc_IsValidTurretTarget_IsValid' has a wrong offset!");
static_assert(offsetof(BP_BaseballPitcher_C_ExecuteUbergraph_BP_BaseballPitcher, CallFunc_IsValid_ReturnValue_2) == 0x0000B9, "Member 'BP_BaseballPitcher_C_ExecuteUbergraph_BP_BaseballPitcher::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BaseballPitcher_C_ExecuteUbergraph_BP_BaseballPitcher, CallFunc_GetOwner_ReturnValue) == 0x0000C0, "Member 'BP_BaseballPitcher_C_ExecuteUbergraph_BP_BaseballPitcher::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BaseballPitcher_C_ExecuteUbergraph_BP_BaseballPitcher, K2Node_SwitchEnum_CmpSuccess) == 0x0000C8, "Member 'BP_BaseballPitcher_C_ExecuteUbergraph_BP_BaseballPitcher::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_BaseballPitcher_C_ExecuteUbergraph_BP_BaseballPitcher, CallFunc_Array_Contains_ReturnValue) == 0x0000C9, "Member 'BP_BaseballPitcher_C_ExecuteUbergraph_BP_BaseballPitcher::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BaseballPitcher_C_ExecuteUbergraph_BP_BaseballPitcher, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x0000CA, "Member 'BP_BaseballPitcher_C_ExecuteUbergraph_BP_BaseballPitcher::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BaseballPitcher_C_ExecuteUbergraph_BP_BaseballPitcher, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x0000CB, "Member 'BP_BaseballPitcher_C_ExecuteUbergraph_BP_BaseballPitcher::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BaseballPitcher_C_ExecuteUbergraph_BP_BaseballPitcher, K2Node_Event_DeltaSeconds) == 0x0000CC, "Member 'BP_BaseballPitcher_C_ExecuteUbergraph_BP_BaseballPitcher::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_BaseballPitcher_C_ExecuteUbergraph_BP_BaseballPitcher, CallFunc_Array_IsValidIndex_ReturnValue) == 0x0000D0, "Member 'BP_BaseballPitcher_C_ExecuteUbergraph_BP_BaseballPitcher::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BaseballPitcher_C_ExecuteUbergraph_BP_BaseballPitcher, K2Node_Event_SabotagingActor) == 0x0000D8, "Member 'BP_BaseballPitcher_C_ExecuteUbergraph_BP_BaseballPitcher::K2Node_Event_SabotagingActor' has a wrong offset!");
static_assert(offsetof(BP_BaseballPitcher_C_ExecuteUbergraph_BP_BaseballPitcher, CallFunc_GetTransform_ReturnValue) == 0x0000E0, "Member 'BP_BaseballPitcher_C_ExecuteUbergraph_BP_BaseballPitcher::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BaseballPitcher_C_ExecuteUbergraph_BP_BaseballPitcher, CallFunc_GetGameTimeInSeconds_ReturnValue) == 0x000140, "Member 'BP_BaseballPitcher_C_ExecuteUbergraph_BP_BaseballPitcher::CallFunc_GetGameTimeInSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BaseballPitcher_C_ExecuteUbergraph_BP_BaseballPitcher, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000148, "Member 'BP_BaseballPitcher_C_ExecuteUbergraph_BP_BaseballPitcher::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BaseballPitcher_C_ExecuteUbergraph_BP_BaseballPitcher, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000150, "Member 'BP_BaseballPitcher_C_ExecuteUbergraph_BP_BaseballPitcher::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BaseballPitcher_C_ExecuteUbergraph_BP_BaseballPitcher, CallFunc_HasAuthority_ReturnValue) == 0x000168, "Member 'BP_BaseballPitcher_C_ExecuteUbergraph_BP_BaseballPitcher::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BaseballPitcher_C_ExecuteUbergraph_BP_BaseballPitcher, CallFunc_K2_SetRelativeLocation_SweepHitResult) == 0x000170, "Member 'BP_BaseballPitcher_C_ExecuteUbergraph_BP_BaseballPitcher::CallFunc_K2_SetRelativeLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_BaseballPitcher_C_ExecuteUbergraph_BP_BaseballPitcher, CallFunc_K2_SetTimerDelegate_ReturnValue_2) == 0x000268, "Member 'BP_BaseballPitcher_C_ExecuteUbergraph_BP_BaseballPitcher::CallFunc_K2_SetTimerDelegate_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BaseballPitcher_C_ExecuteUbergraph_BP_BaseballPitcher, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x000270, "Member 'BP_BaseballPitcher_C_ExecuteUbergraph_BP_BaseballPitcher::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BaseballPitcher_C_ExecuteUbergraph_BP_BaseballPitcher, CallFunc_FinishSpawningActor_ReturnValue) == 0x000278, "Member 'BP_BaseballPitcher_C_ExecuteUbergraph_BP_BaseballPitcher::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BaseballPitcher_C_ExecuteUbergraph_BP_BaseballPitcher, CallFunc_MapRangeUnclamped_Value_ImplicitCast) == 0x000280, "Member 'BP_BaseballPitcher_C_ExecuteUbergraph_BP_BaseballPitcher::CallFunc_MapRangeUnclamped_Value_ImplicitCast' has a wrong offset!");

// Function BP_BaseballPitcher.BP_BaseballPitcher_C.Fire Projectile
// 0x0070 (0x0070 - 0x0000)
struct BP_BaseballPitcher_C_Fire_Projectile final
{
public:
	class APawn*                                  CallFunc_GetPawn_ReturnValue;                      // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0008(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue_1;    // 0x0020(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObjectPoolingSubsystem*                CallFunc_GetWorldSubsystem_ReturnValue;            // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_FindLookAtRotation_ReturnValue;           // 0x0040(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class APooledActor*                           CallFunc_GetInactiveObjectOfClass_ReturnValue;     // 0x0058(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_ProjectileBase_C*                   K2Node_DynamicCast_AsBP_Projectile_Base;           // 0x0060(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BaseballPitcher_C_Fire_Projectile) == 0x000008, "Wrong alignment on BP_BaseballPitcher_C_Fire_Projectile");
static_assert(sizeof(BP_BaseballPitcher_C_Fire_Projectile) == 0x000070, "Wrong size on BP_BaseballPitcher_C_Fire_Projectile");
static_assert(offsetof(BP_BaseballPitcher_C_Fire_Projectile, CallFunc_GetPawn_ReturnValue) == 0x000000, "Member 'BP_BaseballPitcher_C_Fire_Projectile::CallFunc_GetPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BaseballPitcher_C_Fire_Projectile, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000008, "Member 'BP_BaseballPitcher_C_Fire_Projectile::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BaseballPitcher_C_Fire_Projectile, CallFunc_K2_GetComponentLocation_ReturnValue_1) == 0x000020, "Member 'BP_BaseballPitcher_C_Fire_Projectile::CallFunc_K2_GetComponentLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BaseballPitcher_C_Fire_Projectile, CallFunc_GetWorldSubsystem_ReturnValue) == 0x000038, "Member 'BP_BaseballPitcher_C_Fire_Projectile::CallFunc_GetWorldSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BaseballPitcher_C_Fire_Projectile, CallFunc_FindLookAtRotation_ReturnValue) == 0x000040, "Member 'BP_BaseballPitcher_C_Fire_Projectile::CallFunc_FindLookAtRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BaseballPitcher_C_Fire_Projectile, CallFunc_GetInactiveObjectOfClass_ReturnValue) == 0x000058, "Member 'BP_BaseballPitcher_C_Fire_Projectile::CallFunc_GetInactiveObjectOfClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BaseballPitcher_C_Fire_Projectile, K2Node_DynamicCast_AsBP_Projectile_Base) == 0x000060, "Member 'BP_BaseballPitcher_C_Fire_Projectile::K2Node_DynamicCast_AsBP_Projectile_Base' has a wrong offset!");
static_assert(offsetof(BP_BaseballPitcher_C_Fire_Projectile, K2Node_DynamicCast_bSuccess) == 0x000068, "Member 'BP_BaseballPitcher_C_Fire_Projectile::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BP_BaseballPitcher.BP_BaseballPitcher_C.Get Closest Overlapping Actor
// 0x00C8 (0x00C8 - 0x0000)
struct BP_BaseballPitcher_C_Get_Closest_Overlapping_Actor final
{
public:
	TArray<class AActor*>                         Actors;                                            // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class AActor*                                 TargetActor;                                       // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          HighPriorityFound;                                 // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        L_CurrentActorDistance;                            // 0x0020(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 L_CurrentActor;                                    // 0x0028(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	double                                        L_ClosestActorDistance;                            // 0x0030(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 L_ClosestActor;                                    // 0x0038(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_Array_Get_Item;                           // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class II_TurretTarget_C>     K2Node_DynamicCast_AsI_Turret_Target;              // 0x0048(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class II_TurretTarget_C>     K2Node_DynamicCast_AsI_Turret_Target_1;            // 0x0060(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_71[0x7];                                       // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USceneComponent*                        CallFunc_GetTurretTargetSceneComponent_Return;     // 0x0078(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        CallFunc_GetTurretTargetSceneComponent_Return_1;   // 0x0080(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetSquaredDistanceToFireLocation_ReturnValue; // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetSquaredDistanceToFireLocation_ReturnValue_1; // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A4[0x4];                                       // 0x00A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetFirstOverlappingActorWithHighPriority_Return; // 0x00A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetFirstOverlappingActorWithHighPriority_HighPriorityFound; // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B1[0x7];                                       // 0x00B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_Array_Get_Item_1;                         // 0x00B8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x00C5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BaseballPitcher_C_Get_Closest_Overlapping_Actor) == 0x000008, "Wrong alignment on BP_BaseballPitcher_C_Get_Closest_Overlapping_Actor");
static_assert(sizeof(BP_BaseballPitcher_C_Get_Closest_Overlapping_Actor) == 0x0000C8, "Wrong size on BP_BaseballPitcher_C_Get_Closest_Overlapping_Actor");
static_assert(offsetof(BP_BaseballPitcher_C_Get_Closest_Overlapping_Actor, Actors) == 0x000000, "Member 'BP_BaseballPitcher_C_Get_Closest_Overlapping_Actor::Actors' has a wrong offset!");
static_assert(offsetof(BP_BaseballPitcher_C_Get_Closest_Overlapping_Actor, TargetActor) == 0x000010, "Member 'BP_BaseballPitcher_C_Get_Closest_Overlapping_Actor::TargetActor' has a wrong offset!");
static_assert(offsetof(BP_BaseballPitcher_C_Get_Closest_Overlapping_Actor, HighPriorityFound) == 0x000018, "Member 'BP_BaseballPitcher_C_Get_Closest_Overlapping_Actor::HighPriorityFound' has a wrong offset!");
static_assert(offsetof(BP_BaseballPitcher_C_Get_Closest_Overlapping_Actor, L_CurrentActorDistance) == 0x000020, "Member 'BP_BaseballPitcher_C_Get_Closest_Overlapping_Actor::L_CurrentActorDistance' has a wrong offset!");
static_assert(offsetof(BP_BaseballPitcher_C_Get_Closest_Overlapping_Actor, L_CurrentActor) == 0x000028, "Member 'BP_BaseballPitcher_C_Get_Closest_Overlapping_Actor::L_CurrentActor' has a wrong offset!");
static_assert(offsetof(BP_BaseballPitcher_C_Get_Closest_Overlapping_Actor, L_ClosestActorDistance) == 0x000030, "Member 'BP_BaseballPitcher_C_Get_Closest_Overlapping_Actor::L_ClosestActorDistance' has a wrong offset!");
static_assert(offsetof(BP_BaseballPitcher_C_Get_Closest_Overlapping_Actor, L_ClosestActor) == 0x000038, "Member 'BP_BaseballPitcher_C_Get_Closest_Overlapping_Actor::L_ClosestActor' has a wrong offset!");
static_assert(offsetof(BP_BaseballPitcher_C_Get_Closest_Overlapping_Actor, CallFunc_Array_Get_Item) == 0x000040, "Member 'BP_BaseballPitcher_C_Get_Closest_Overlapping_Actor::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_BaseballPitcher_C_Get_Closest_Overlapping_Actor, K2Node_DynamicCast_AsI_Turret_Target) == 0x000048, "Member 'BP_BaseballPitcher_C_Get_Closest_Overlapping_Actor::K2Node_DynamicCast_AsI_Turret_Target' has a wrong offset!");
static_assert(offsetof(BP_BaseballPitcher_C_Get_Closest_Overlapping_Actor, K2Node_DynamicCast_bSuccess) == 0x000058, "Member 'BP_BaseballPitcher_C_Get_Closest_Overlapping_Actor::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_BaseballPitcher_C_Get_Closest_Overlapping_Actor, K2Node_DynamicCast_AsI_Turret_Target_1) == 0x000060, "Member 'BP_BaseballPitcher_C_Get_Closest_Overlapping_Actor::K2Node_DynamicCast_AsI_Turret_Target_1' has a wrong offset!");
static_assert(offsetof(BP_BaseballPitcher_C_Get_Closest_Overlapping_Actor, K2Node_DynamicCast_bSuccess_1) == 0x000070, "Member 'BP_BaseballPitcher_C_Get_Closest_Overlapping_Actor::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_BaseballPitcher_C_Get_Closest_Overlapping_Actor, CallFunc_GetTurretTargetSceneComponent_Return) == 0x000078, "Member 'BP_BaseballPitcher_C_Get_Closest_Overlapping_Actor::CallFunc_GetTurretTargetSceneComponent_Return' has a wrong offset!");
static_assert(offsetof(BP_BaseballPitcher_C_Get_Closest_Overlapping_Actor, CallFunc_GetTurretTargetSceneComponent_Return_1) == 0x000080, "Member 'BP_BaseballPitcher_C_Get_Closest_Overlapping_Actor::CallFunc_GetTurretTargetSceneComponent_Return_1' has a wrong offset!");
static_assert(offsetof(BP_BaseballPitcher_C_Get_Closest_Overlapping_Actor, CallFunc_GetSquaredDistanceToFireLocation_ReturnValue) == 0x000088, "Member 'BP_BaseballPitcher_C_Get_Closest_Overlapping_Actor::CallFunc_GetSquaredDistanceToFireLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BaseballPitcher_C_Get_Closest_Overlapping_Actor, CallFunc_GetSquaredDistanceToFireLocation_ReturnValue_1) == 0x000090, "Member 'BP_BaseballPitcher_C_Get_Closest_Overlapping_Actor::CallFunc_GetSquaredDistanceToFireLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BaseballPitcher_C_Get_Closest_Overlapping_Actor, Temp_int_Array_Index_Variable) == 0x000098, "Member 'BP_BaseballPitcher_C_Get_Closest_Overlapping_Actor::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_BaseballPitcher_C_Get_Closest_Overlapping_Actor, Temp_int_Loop_Counter_Variable) == 0x00009C, "Member 'BP_BaseballPitcher_C_Get_Closest_Overlapping_Actor::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_BaseballPitcher_C_Get_Closest_Overlapping_Actor, CallFunc_Add_IntInt_ReturnValue) == 0x0000A0, "Member 'BP_BaseballPitcher_C_Get_Closest_Overlapping_Actor::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BaseballPitcher_C_Get_Closest_Overlapping_Actor, CallFunc_GetFirstOverlappingActorWithHighPriority_Return) == 0x0000A8, "Member 'BP_BaseballPitcher_C_Get_Closest_Overlapping_Actor::CallFunc_GetFirstOverlappingActorWithHighPriority_Return' has a wrong offset!");
static_assert(offsetof(BP_BaseballPitcher_C_Get_Closest_Overlapping_Actor, CallFunc_GetFirstOverlappingActorWithHighPriority_HighPriorityFound) == 0x0000B0, "Member 'BP_BaseballPitcher_C_Get_Closest_Overlapping_Actor::CallFunc_GetFirstOverlappingActorWithHighPriority_HighPriorityFound' has a wrong offset!");
static_assert(offsetof(BP_BaseballPitcher_C_Get_Closest_Overlapping_Actor, CallFunc_Array_Get_Item_1) == 0x0000B8, "Member 'BP_BaseballPitcher_C_Get_Closest_Overlapping_Actor::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_BaseballPitcher_C_Get_Closest_Overlapping_Actor, CallFunc_Array_Length_ReturnValue) == 0x0000C0, "Member 'BP_BaseballPitcher_C_Get_Closest_Overlapping_Actor::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BaseballPitcher_C_Get_Closest_Overlapping_Actor, CallFunc_Less_IntInt_ReturnValue) == 0x0000C4, "Member 'BP_BaseballPitcher_C_Get_Closest_Overlapping_Actor::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BaseballPitcher_C_Get_Closest_Overlapping_Actor, CallFunc_Less_DoubleDouble_ReturnValue) == 0x0000C5, "Member 'BP_BaseballPitcher_C_Get_Closest_Overlapping_Actor::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");

// Function BP_BaseballPitcher.BP_BaseballPitcher_C.GetCenterLocation
// 0x0030 (0x0030 - 0x0000)
struct BP_BaseballPitcher_C_GetCenterLocation final
{
public:
	struct FVector                                Location;                                          // 0x0000(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0018(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BaseballPitcher_C_GetCenterLocation) == 0x000008, "Wrong alignment on BP_BaseballPitcher_C_GetCenterLocation");
static_assert(sizeof(BP_BaseballPitcher_C_GetCenterLocation) == 0x000030, "Wrong size on BP_BaseballPitcher_C_GetCenterLocation");
static_assert(offsetof(BP_BaseballPitcher_C_GetCenterLocation, Location) == 0x000000, "Member 'BP_BaseballPitcher_C_GetCenterLocation::Location' has a wrong offset!");
static_assert(offsetof(BP_BaseballPitcher_C_GetCenterLocation, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000018, "Member 'BP_BaseballPitcher_C_GetCenterLocation::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");

// Function BP_BaseballPitcher.BP_BaseballPitcher_C.GetFirstOverlappingActorWithHighPriority
// 0x0048 (0x0048 - 0x0000)
struct BP_BaseballPitcher_C_GetFirstOverlappingActorWithHighPriority final
{
public:
	class AActor*                                 Return;                                            // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          HighPriorityFound;                                 // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_Array_Get_Item;                           // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class II_TurretTarget_C>     K2Node_DynamicCast_AsI_Turret_Target;              // 0x0030(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetTurretTargetHighPriority_Return;       // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BaseballPitcher_C_GetFirstOverlappingActorWithHighPriority) == 0x000008, "Wrong alignment on BP_BaseballPitcher_C_GetFirstOverlappingActorWithHighPriority");
static_assert(sizeof(BP_BaseballPitcher_C_GetFirstOverlappingActorWithHighPriority) == 0x000048, "Wrong size on BP_BaseballPitcher_C_GetFirstOverlappingActorWithHighPriority");
static_assert(offsetof(BP_BaseballPitcher_C_GetFirstOverlappingActorWithHighPriority, Return) == 0x000000, "Member 'BP_BaseballPitcher_C_GetFirstOverlappingActorWithHighPriority::Return' has a wrong offset!");
static_assert(offsetof(BP_BaseballPitcher_C_GetFirstOverlappingActorWithHighPriority, HighPriorityFound) == 0x000008, "Member 'BP_BaseballPitcher_C_GetFirstOverlappingActorWithHighPriority::HighPriorityFound' has a wrong offset!");
static_assert(offsetof(BP_BaseballPitcher_C_GetFirstOverlappingActorWithHighPriority, Temp_int_Array_Index_Variable) == 0x00000C, "Member 'BP_BaseballPitcher_C_GetFirstOverlappingActorWithHighPriority::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_BaseballPitcher_C_GetFirstOverlappingActorWithHighPriority, Temp_int_Loop_Counter_Variable) == 0x000010, "Member 'BP_BaseballPitcher_C_GetFirstOverlappingActorWithHighPriority::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_BaseballPitcher_C_GetFirstOverlappingActorWithHighPriority, CallFunc_Add_IntInt_ReturnValue) == 0x000014, "Member 'BP_BaseballPitcher_C_GetFirstOverlappingActorWithHighPriority::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BaseballPitcher_C_GetFirstOverlappingActorWithHighPriority, CallFunc_Array_Length_ReturnValue) == 0x000018, "Member 'BP_BaseballPitcher_C_GetFirstOverlappingActorWithHighPriority::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BaseballPitcher_C_GetFirstOverlappingActorWithHighPriority, CallFunc_Array_Get_Item) == 0x000020, "Member 'BP_BaseballPitcher_C_GetFirstOverlappingActorWithHighPriority::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_BaseballPitcher_C_GetFirstOverlappingActorWithHighPriority, CallFunc_Less_IntInt_ReturnValue) == 0x000028, "Member 'BP_BaseballPitcher_C_GetFirstOverlappingActorWithHighPriority::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BaseballPitcher_C_GetFirstOverlappingActorWithHighPriority, K2Node_DynamicCast_AsI_Turret_Target) == 0x000030, "Member 'BP_BaseballPitcher_C_GetFirstOverlappingActorWithHighPriority::K2Node_DynamicCast_AsI_Turret_Target' has a wrong offset!");
static_assert(offsetof(BP_BaseballPitcher_C_GetFirstOverlappingActorWithHighPriority, K2Node_DynamicCast_bSuccess) == 0x000040, "Member 'BP_BaseballPitcher_C_GetFirstOverlappingActorWithHighPriority::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_BaseballPitcher_C_GetFirstOverlappingActorWithHighPriority, CallFunc_GetTurretTargetHighPriority_Return) == 0x000041, "Member 'BP_BaseballPitcher_C_GetFirstOverlappingActorWithHighPriority::CallFunc_GetTurretTargetHighPriority_Return' has a wrong offset!");

// Function BP_BaseballPitcher.BP_BaseballPitcher_C.GetSquaredDistanceToFireLocation
// 0x0048 (0x0048 - 0x0000)
struct BP_BaseballPitcher_C_GetSquaredDistanceToFireLocation final
{
public:
	class USceneComponent*                        Target;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	double                                        ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0010(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue_1;    // 0x0028(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Vector_DistanceSquared_ReturnValue;       // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BaseballPitcher_C_GetSquaredDistanceToFireLocation) == 0x000008, "Wrong alignment on BP_BaseballPitcher_C_GetSquaredDistanceToFireLocation");
static_assert(sizeof(BP_BaseballPitcher_C_GetSquaredDistanceToFireLocation) == 0x000048, "Wrong size on BP_BaseballPitcher_C_GetSquaredDistanceToFireLocation");
static_assert(offsetof(BP_BaseballPitcher_C_GetSquaredDistanceToFireLocation, Target) == 0x000000, "Member 'BP_BaseballPitcher_C_GetSquaredDistanceToFireLocation::Target' has a wrong offset!");
static_assert(offsetof(BP_BaseballPitcher_C_GetSquaredDistanceToFireLocation, ReturnValue) == 0x000008, "Member 'BP_BaseballPitcher_C_GetSquaredDistanceToFireLocation::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BaseballPitcher_C_GetSquaredDistanceToFireLocation, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000010, "Member 'BP_BaseballPitcher_C_GetSquaredDistanceToFireLocation::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BaseballPitcher_C_GetSquaredDistanceToFireLocation, CallFunc_K2_GetComponentLocation_ReturnValue_1) == 0x000028, "Member 'BP_BaseballPitcher_C_GetSquaredDistanceToFireLocation::CallFunc_K2_GetComponentLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BaseballPitcher_C_GetSquaredDistanceToFireLocation, CallFunc_Vector_DistanceSquared_ReturnValue) == 0x000040, "Member 'BP_BaseballPitcher_C_GetSquaredDistanceToFireLocation::CallFunc_Vector_DistanceSquared_ReturnValue' has a wrong offset!");

// Function BP_BaseballPitcher.BP_BaseballPitcher_C.OnRep_OwningTeamID
// 0x0001 (0x0001 - 0x0000)
struct BP_BaseballPitcher_C_OnRep_OwningTeamID final
{
public:
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BaseballPitcher_C_OnRep_OwningTeamID) == 0x000001, "Wrong alignment on BP_BaseballPitcher_C_OnRep_OwningTeamID");
static_assert(sizeof(BP_BaseballPitcher_C_OnRep_OwningTeamID) == 0x000001, "Wrong size on BP_BaseballPitcher_C_OnRep_OwningTeamID");
static_assert(offsetof(BP_BaseballPitcher_C_OnRep_OwningTeamID, CallFunc_IsDedicatedServer_ReturnValue) == 0x000000, "Member 'BP_BaseballPitcher_C_OnRep_OwningTeamID::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");

// Function BP_BaseballPitcher.BP_BaseballPitcher_C.OnRep_TurretState
// 0x0030 (0x0030 - 0x0000)
struct BP_BaseballPitcher_C_OnRep_TurretState final
{
public:
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0000(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_RandomFloatInRange_ReturnValue;           // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Play_StartTime_ImplicitCast;              // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Play_StartTime_ImplicitCast_1;            // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BaseballPitcher_C_OnRep_TurretState) == 0x000008, "Wrong alignment on BP_BaseballPitcher_C_OnRep_TurretState");
static_assert(sizeof(BP_BaseballPitcher_C_OnRep_TurretState) == 0x000030, "Wrong size on BP_BaseballPitcher_C_OnRep_TurretState");
static_assert(offsetof(BP_BaseballPitcher_C_OnRep_TurretState, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000000, "Member 'BP_BaseballPitcher_C_OnRep_TurretState::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BaseballPitcher_C_OnRep_TurretState, CallFunc_RandomFloatInRange_ReturnValue) == 0x000018, "Member 'BP_BaseballPitcher_C_OnRep_TurretState::CallFunc_RandomFloatInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BaseballPitcher_C_OnRep_TurretState, K2Node_SwitchEnum_CmpSuccess) == 0x000020, "Member 'BP_BaseballPitcher_C_OnRep_TurretState::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_BaseballPitcher_C_OnRep_TurretState, CallFunc_Play_StartTime_ImplicitCast) == 0x000024, "Member 'BP_BaseballPitcher_C_OnRep_TurretState::CallFunc_Play_StartTime_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_BaseballPitcher_C_OnRep_TurretState, CallFunc_Play_StartTime_ImplicitCast_1) == 0x000028, "Member 'BP_BaseballPitcher_C_OnRep_TurretState::CallFunc_Play_StartTime_ImplicitCast_1' has a wrong offset!");

// Function BP_BaseballPitcher.BP_BaseballPitcher_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct BP_BaseballPitcher_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BaseballPitcher_C_ReceiveTick) == 0x000004, "Wrong alignment on BP_BaseballPitcher_C_ReceiveTick");
static_assert(sizeof(BP_BaseballPitcher_C_ReceiveTick) == 0x000004, "Wrong size on BP_BaseballPitcher_C_ReceiveTick");
static_assert(offsetof(BP_BaseballPitcher_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'BP_BaseballPitcher_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function BP_BaseballPitcher.BP_BaseballPitcher_C.Sabotage
// 0x0008 (0x0008 - 0x0000)
struct BP_BaseballPitcher_C_Sabotage final
{
public:
	class AActor*                                 SabotagingActor;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BaseballPitcher_C_Sabotage) == 0x000008, "Wrong alignment on BP_BaseballPitcher_C_Sabotage");
static_assert(sizeof(BP_BaseballPitcher_C_Sabotage) == 0x000008, "Wrong size on BP_BaseballPitcher_C_Sabotage");
static_assert(offsetof(BP_BaseballPitcher_C_Sabotage, SabotagingActor) == 0x000000, "Member 'BP_BaseballPitcher_C_Sabotage::SabotagingActor' has a wrong offset!");

// Function BP_BaseballPitcher.BP_BaseballPitcher_C.Set Turret Yaw Idle
// 0x0180 (0x0180 - 0x0000)
struct BP_BaseballPitcher_C_Set_Turret_Yaw_Idle final
{
public:
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0000(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue_1;    // 0x0018(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_K2_GetComponentRotation_ReturnValue;      // 0x0030(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_FindLookAtRotation_ReturnValue;           // 0x0048(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	double                                        CallFunc_GetWorldDeltaSeconds_ReturnValue;         // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_RInterpTo_ReturnValue;                    // 0x0068(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_K2_SetWorldRotation_SweepHitResult;       // 0x0080(0x00F8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	float                                         CallFunc_RInterpTo_DeltaTime_ImplicitCast;         // 0x0178(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BaseballPitcher_C_Set_Turret_Yaw_Idle) == 0x000008, "Wrong alignment on BP_BaseballPitcher_C_Set_Turret_Yaw_Idle");
static_assert(sizeof(BP_BaseballPitcher_C_Set_Turret_Yaw_Idle) == 0x000180, "Wrong size on BP_BaseballPitcher_C_Set_Turret_Yaw_Idle");
static_assert(offsetof(BP_BaseballPitcher_C_Set_Turret_Yaw_Idle, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000000, "Member 'BP_BaseballPitcher_C_Set_Turret_Yaw_Idle::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BaseballPitcher_C_Set_Turret_Yaw_Idle, CallFunc_K2_GetComponentLocation_ReturnValue_1) == 0x000018, "Member 'BP_BaseballPitcher_C_Set_Turret_Yaw_Idle::CallFunc_K2_GetComponentLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BaseballPitcher_C_Set_Turret_Yaw_Idle, CallFunc_K2_GetComponentRotation_ReturnValue) == 0x000030, "Member 'BP_BaseballPitcher_C_Set_Turret_Yaw_Idle::CallFunc_K2_GetComponentRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BaseballPitcher_C_Set_Turret_Yaw_Idle, CallFunc_FindLookAtRotation_ReturnValue) == 0x000048, "Member 'BP_BaseballPitcher_C_Set_Turret_Yaw_Idle::CallFunc_FindLookAtRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BaseballPitcher_C_Set_Turret_Yaw_Idle, CallFunc_GetWorldDeltaSeconds_ReturnValue) == 0x000060, "Member 'BP_BaseballPitcher_C_Set_Turret_Yaw_Idle::CallFunc_GetWorldDeltaSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BaseballPitcher_C_Set_Turret_Yaw_Idle, CallFunc_RInterpTo_ReturnValue) == 0x000068, "Member 'BP_BaseballPitcher_C_Set_Turret_Yaw_Idle::CallFunc_RInterpTo_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BaseballPitcher_C_Set_Turret_Yaw_Idle, CallFunc_K2_SetWorldRotation_SweepHitResult) == 0x000080, "Member 'BP_BaseballPitcher_C_Set_Turret_Yaw_Idle::CallFunc_K2_SetWorldRotation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_BaseballPitcher_C_Set_Turret_Yaw_Idle, CallFunc_RInterpTo_DeltaTime_ImplicitCast) == 0x000178, "Member 'BP_BaseballPitcher_C_Set_Turret_Yaw_Idle::CallFunc_RInterpTo_DeltaTime_ImplicitCast' has a wrong offset!");

// Function BP_BaseballPitcher.BP_BaseballPitcher_C.Set Turret Yaw Towards Target
// 0x0180 (0x0180 - 0x0000)
struct BP_BaseballPitcher_C_Set_Turret_Yaw_Towards_Target final
{
public:
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0000(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_K2_GetComponentRotation_ReturnValue;      // 0x0018(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue_1;    // 0x0030(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetWorldDeltaSeconds_ReturnValue;         // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_FindLookAtRotation_ReturnValue;           // 0x0050(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_RInterpTo_ReturnValue;                    // 0x0068(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_K2_SetWorldRotation_SweepHitResult;       // 0x0080(0x00F8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	float                                         CallFunc_RInterpTo_DeltaTime_ImplicitCast;         // 0x0178(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BaseballPitcher_C_Set_Turret_Yaw_Towards_Target) == 0x000008, "Wrong alignment on BP_BaseballPitcher_C_Set_Turret_Yaw_Towards_Target");
static_assert(sizeof(BP_BaseballPitcher_C_Set_Turret_Yaw_Towards_Target) == 0x000180, "Wrong size on BP_BaseballPitcher_C_Set_Turret_Yaw_Towards_Target");
static_assert(offsetof(BP_BaseballPitcher_C_Set_Turret_Yaw_Towards_Target, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000000, "Member 'BP_BaseballPitcher_C_Set_Turret_Yaw_Towards_Target::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BaseballPitcher_C_Set_Turret_Yaw_Towards_Target, CallFunc_K2_GetComponentRotation_ReturnValue) == 0x000018, "Member 'BP_BaseballPitcher_C_Set_Turret_Yaw_Towards_Target::CallFunc_K2_GetComponentRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BaseballPitcher_C_Set_Turret_Yaw_Towards_Target, CallFunc_K2_GetComponentLocation_ReturnValue_1) == 0x000030, "Member 'BP_BaseballPitcher_C_Set_Turret_Yaw_Towards_Target::CallFunc_K2_GetComponentLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BaseballPitcher_C_Set_Turret_Yaw_Towards_Target, CallFunc_GetWorldDeltaSeconds_ReturnValue) == 0x000048, "Member 'BP_BaseballPitcher_C_Set_Turret_Yaw_Towards_Target::CallFunc_GetWorldDeltaSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BaseballPitcher_C_Set_Turret_Yaw_Towards_Target, CallFunc_FindLookAtRotation_ReturnValue) == 0x000050, "Member 'BP_BaseballPitcher_C_Set_Turret_Yaw_Towards_Target::CallFunc_FindLookAtRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BaseballPitcher_C_Set_Turret_Yaw_Towards_Target, CallFunc_RInterpTo_ReturnValue) == 0x000068, "Member 'BP_BaseballPitcher_C_Set_Turret_Yaw_Towards_Target::CallFunc_RInterpTo_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BaseballPitcher_C_Set_Turret_Yaw_Towards_Target, CallFunc_K2_SetWorldRotation_SweepHitResult) == 0x000080, "Member 'BP_BaseballPitcher_C_Set_Turret_Yaw_Towards_Target::CallFunc_K2_SetWorldRotation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_BaseballPitcher_C_Set_Turret_Yaw_Towards_Target, CallFunc_RInterpTo_DeltaTime_ImplicitCast) == 0x000178, "Member 'BP_BaseballPitcher_C_Set_Turret_Yaw_Towards_Target::CallFunc_RInterpTo_DeltaTime_ImplicitCast' has a wrong offset!");

// Function BP_BaseballPitcher.BP_BaseballPitcher_C.SetCompatibleTargets
// 0x0088 (0x0088 - 0x0000)
struct BP_BaseballPitcher_C_SetCompatibleTargets final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Temp_byte_Variable;                                // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E[0x2];                                        // 0x000E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         CallFunc_GetOverlappingActorsWithInterface_ReturnValue; // 0x0010(0x0010)(ReferenceParm)
	class AActor*                                 CallFunc_Array_Get_Item;                           // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class II_TurretTarget_C>     K2Node_DynamicCast_AsI_Turret_Target;              // 0x0030(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidTurretTarget_IsValid;              // 0x0042(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_43[0x5];                                       // 0x0043(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class ITeamableInterface>    K2Node_DynamicCast_AsTeamable_Interface;           // 0x0048(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class II_TurretTarget_C>     K2Node_DynamicCast_AsI_Turret_Target_1;            // 0x0060(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetTeamID_ReturnValue;                    // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_72[0x6];                                       // 0x0072(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class USceneComponent*                        CallFunc_GetTurretTargetSceneComponent_Return;     // 0x0078(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CanSeeComponent_ReturnValue;              // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_81[0x3];                                       // 0x0081(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BaseballPitcher_C_SetCompatibleTargets) == 0x000008, "Wrong alignment on BP_BaseballPitcher_C_SetCompatibleTargets");
static_assert(sizeof(BP_BaseballPitcher_C_SetCompatibleTargets) == 0x000088, "Wrong size on BP_BaseballPitcher_C_SetCompatibleTargets");
static_assert(offsetof(BP_BaseballPitcher_C_SetCompatibleTargets, Temp_int_Array_Index_Variable) == 0x000000, "Member 'BP_BaseballPitcher_C_SetCompatibleTargets::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_BaseballPitcher_C_SetCompatibleTargets, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'BP_BaseballPitcher_C_SetCompatibleTargets::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_BaseballPitcher_C_SetCompatibleTargets, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'BP_BaseballPitcher_C_SetCompatibleTargets::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BaseballPitcher_C_SetCompatibleTargets, Temp_byte_Variable) == 0x00000C, "Member 'BP_BaseballPitcher_C_SetCompatibleTargets::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_BaseballPitcher_C_SetCompatibleTargets, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x00000D, "Member 'BP_BaseballPitcher_C_SetCompatibleTargets::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BaseballPitcher_C_SetCompatibleTargets, CallFunc_GetOverlappingActorsWithInterface_ReturnValue) == 0x000010, "Member 'BP_BaseballPitcher_C_SetCompatibleTargets::CallFunc_GetOverlappingActorsWithInterface_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BaseballPitcher_C_SetCompatibleTargets, CallFunc_Array_Get_Item) == 0x000020, "Member 'BP_BaseballPitcher_C_SetCompatibleTargets::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_BaseballPitcher_C_SetCompatibleTargets, CallFunc_Array_Length_ReturnValue) == 0x000028, "Member 'BP_BaseballPitcher_C_SetCompatibleTargets::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BaseballPitcher_C_SetCompatibleTargets, K2Node_DynamicCast_AsI_Turret_Target) == 0x000030, "Member 'BP_BaseballPitcher_C_SetCompatibleTargets::K2Node_DynamicCast_AsI_Turret_Target' has a wrong offset!");
static_assert(offsetof(BP_BaseballPitcher_C_SetCompatibleTargets, K2Node_DynamicCast_bSuccess) == 0x000040, "Member 'BP_BaseballPitcher_C_SetCompatibleTargets::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_BaseballPitcher_C_SetCompatibleTargets, CallFunc_Less_IntInt_ReturnValue) == 0x000041, "Member 'BP_BaseballPitcher_C_SetCompatibleTargets::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BaseballPitcher_C_SetCompatibleTargets, CallFunc_IsValidTurretTarget_IsValid) == 0x000042, "Member 'BP_BaseballPitcher_C_SetCompatibleTargets::CallFunc_IsValidTurretTarget_IsValid' has a wrong offset!");
static_assert(offsetof(BP_BaseballPitcher_C_SetCompatibleTargets, K2Node_DynamicCast_AsTeamable_Interface) == 0x000048, "Member 'BP_BaseballPitcher_C_SetCompatibleTargets::K2Node_DynamicCast_AsTeamable_Interface' has a wrong offset!");
static_assert(offsetof(BP_BaseballPitcher_C_SetCompatibleTargets, K2Node_DynamicCast_bSuccess_1) == 0x000058, "Member 'BP_BaseballPitcher_C_SetCompatibleTargets::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_BaseballPitcher_C_SetCompatibleTargets, K2Node_DynamicCast_AsI_Turret_Target_1) == 0x000060, "Member 'BP_BaseballPitcher_C_SetCompatibleTargets::K2Node_DynamicCast_AsI_Turret_Target_1' has a wrong offset!");
static_assert(offsetof(BP_BaseballPitcher_C_SetCompatibleTargets, K2Node_DynamicCast_bSuccess_2) == 0x000070, "Member 'BP_BaseballPitcher_C_SetCompatibleTargets::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_BaseballPitcher_C_SetCompatibleTargets, CallFunc_GetTeamID_ReturnValue) == 0x000071, "Member 'BP_BaseballPitcher_C_SetCompatibleTargets::CallFunc_GetTeamID_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BaseballPitcher_C_SetCompatibleTargets, CallFunc_GetTurretTargetSceneComponent_Return) == 0x000078, "Member 'BP_BaseballPitcher_C_SetCompatibleTargets::CallFunc_GetTurretTargetSceneComponent_Return' has a wrong offset!");
static_assert(offsetof(BP_BaseballPitcher_C_SetCompatibleTargets, CallFunc_CanSeeComponent_ReturnValue) == 0x000080, "Member 'BP_BaseballPitcher_C_SetCompatibleTargets::CallFunc_CanSeeComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BaseballPitcher_C_SetCompatibleTargets, CallFunc_Array_Add_ReturnValue) == 0x000084, "Member 'BP_BaseballPitcher_C_SetCompatibleTargets::CallFunc_Array_Add_ReturnValue' has a wrong offset!");

// Function BP_BaseballPitcher.BP_BaseballPitcher_C.SetupOutline
// 0x002C (0x002C - 0x0000)
struct BP_BaseballPitcher_C_SetupOutline final
{
public:
	ETeamType                                     TeamType;                                          // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETeamType                                     Temp_byte_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x2];                                        // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           CallFunc_MakeLiteralGameplayTag_ReturnValue;       // 0x000C(0x0008)(NoDestructor, HasGetValueTypeHash)
	ETeamType                                     CallFunc_GetTeamTypeFromTeamId_ReturnValue;        // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetStencilValueFromMask_ReturnValue;      // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           CallFunc_MakeLiteralGameplayTag_ReturnValue_1;     // 0x001C(0x0008)(NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetStencilValueFromMask_ReturnValue_1;    // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Select_Default;                             // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BaseballPitcher_C_SetupOutline) == 0x000004, "Wrong alignment on BP_BaseballPitcher_C_SetupOutline");
static_assert(sizeof(BP_BaseballPitcher_C_SetupOutline) == 0x00002C, "Wrong size on BP_BaseballPitcher_C_SetupOutline");
static_assert(offsetof(BP_BaseballPitcher_C_SetupOutline, TeamType) == 0x000000, "Member 'BP_BaseballPitcher_C_SetupOutline::TeamType' has a wrong offset!");
static_assert(offsetof(BP_BaseballPitcher_C_SetupOutline, Temp_byte_Variable) == 0x000001, "Member 'BP_BaseballPitcher_C_SetupOutline::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_BaseballPitcher_C_SetupOutline, Temp_int_Variable) == 0x000004, "Member 'BP_BaseballPitcher_C_SetupOutline::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_BaseballPitcher_C_SetupOutline, Temp_int_Variable_1) == 0x000008, "Member 'BP_BaseballPitcher_C_SetupOutline::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_BaseballPitcher_C_SetupOutline, CallFunc_MakeLiteralGameplayTag_ReturnValue) == 0x00000C, "Member 'BP_BaseballPitcher_C_SetupOutline::CallFunc_MakeLiteralGameplayTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BaseballPitcher_C_SetupOutline, CallFunc_GetTeamTypeFromTeamId_ReturnValue) == 0x000014, "Member 'BP_BaseballPitcher_C_SetupOutline::CallFunc_GetTeamTypeFromTeamId_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BaseballPitcher_C_SetupOutline, CallFunc_GetStencilValueFromMask_ReturnValue) == 0x000018, "Member 'BP_BaseballPitcher_C_SetupOutline::CallFunc_GetStencilValueFromMask_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BaseballPitcher_C_SetupOutline, CallFunc_MakeLiteralGameplayTag_ReturnValue_1) == 0x00001C, "Member 'BP_BaseballPitcher_C_SetupOutline::CallFunc_MakeLiteralGameplayTag_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BaseballPitcher_C_SetupOutline, CallFunc_GetStencilValueFromMask_ReturnValue_1) == 0x000024, "Member 'BP_BaseballPitcher_C_SetupOutline::CallFunc_GetStencilValueFromMask_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BaseballPitcher_C_SetupOutline, K2Node_Select_Default) == 0x000028, "Member 'BP_BaseballPitcher_C_SetupOutline::K2Node_Select_Default' has a wrong offset!");

// Function BP_BaseballPitcher.BP_BaseballPitcher_C.SetupPings
// 0x00D8 (0x00D8 - 0x0000)
struct BP_BaseballPitcher_C_SetupPings final
{
public:
	ETeamType                                     Temp_byte_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftClassPtr<class UClass>                   Temp_softclass_Variable;                           // 0x0008(0x0028)(UObjectWrapper, HasGetValueTypeHash)
	TSoftClassPtr<class UClass>                   Temp_softclass_Variable_1;                         // 0x0030(0x0028)(UObjectWrapper, HasGetValueTypeHash)
	TSoftClassPtr<class UClass>                   Temp_softclass_Variable_2;                         // 0x0058(0x0028)(UObjectWrapper, HasGetValueTypeHash)
	TSoftClassPtr<class UClass>                   Temp_softclass_Variable_3;                         // 0x0080(0x0028)(UObjectWrapper, HasGetValueTypeHash)
	ETeamType                                     CallFunc_GetTeamTypeFromTeamId_ReturnValue;        // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A9[0x7];                                       // 0x00A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftClassPtr<class UClass>                   K2Node_Select_Default;                             // 0x00B0(0x0028)(UObjectWrapper, HasGetValueTypeHash)
};
static_assert(alignof(BP_BaseballPitcher_C_SetupPings) == 0x000008, "Wrong alignment on BP_BaseballPitcher_C_SetupPings");
static_assert(sizeof(BP_BaseballPitcher_C_SetupPings) == 0x0000D8, "Wrong size on BP_BaseballPitcher_C_SetupPings");
static_assert(offsetof(BP_BaseballPitcher_C_SetupPings, Temp_byte_Variable) == 0x000000, "Member 'BP_BaseballPitcher_C_SetupPings::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_BaseballPitcher_C_SetupPings, Temp_softclass_Variable) == 0x000008, "Member 'BP_BaseballPitcher_C_SetupPings::Temp_softclass_Variable' has a wrong offset!");
static_assert(offsetof(BP_BaseballPitcher_C_SetupPings, Temp_softclass_Variable_1) == 0x000030, "Member 'BP_BaseballPitcher_C_SetupPings::Temp_softclass_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_BaseballPitcher_C_SetupPings, Temp_softclass_Variable_2) == 0x000058, "Member 'BP_BaseballPitcher_C_SetupPings::Temp_softclass_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_BaseballPitcher_C_SetupPings, Temp_softclass_Variable_3) == 0x000080, "Member 'BP_BaseballPitcher_C_SetupPings::Temp_softclass_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_BaseballPitcher_C_SetupPings, CallFunc_GetTeamTypeFromTeamId_ReturnValue) == 0x0000A8, "Member 'BP_BaseballPitcher_C_SetupPings::CallFunc_GetTeamTypeFromTeamId_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BaseballPitcher_C_SetupPings, K2Node_Select_Default) == 0x0000B0, "Member 'BP_BaseballPitcher_C_SetupPings::K2Node_Select_Default' has a wrong offset!");

// Function BP_BaseballPitcher.BP_BaseballPitcher_C.UserConstructionScript
// 0x0018 (0x0018 - 0x0000)
struct BP_BaseballPitcher_C_UserConstructionScript final
{
public:
	TArray<class UMeshComponent*>                 K2Node_MakeArray_Array;                            // 0x0000(0x0010)(ReferenceParm, ContainsInstancedReference)
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BaseballPitcher_C_UserConstructionScript) == 0x000008, "Wrong alignment on BP_BaseballPitcher_C_UserConstructionScript");
static_assert(sizeof(BP_BaseballPitcher_C_UserConstructionScript) == 0x000018, "Wrong size on BP_BaseballPitcher_C_UserConstructionScript");
static_assert(offsetof(BP_BaseballPitcher_C_UserConstructionScript, K2Node_MakeArray_Array) == 0x000000, "Member 'BP_BaseballPitcher_C_UserConstructionScript::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_BaseballPitcher_C_UserConstructionScript, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x000010, "Member 'BP_BaseballPitcher_C_UserConstructionScript::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");

// Function BP_BaseballPitcher.BP_BaseballPitcher_C.IsAvailableForInteraction
// 0x0018 (0x0018 - 0x0000)
struct BP_BaseballPitcher_C_IsAvailableForInteraction final
{
public:
	class AActor*                                 InteractingActor;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    InteractionComponent;                              // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BaseballPitcher_C_IsAvailableForInteraction) == 0x000008, "Wrong alignment on BP_BaseballPitcher_C_IsAvailableForInteraction");
static_assert(sizeof(BP_BaseballPitcher_C_IsAvailableForInteraction) == 0x000018, "Wrong size on BP_BaseballPitcher_C_IsAvailableForInteraction");
static_assert(offsetof(BP_BaseballPitcher_C_IsAvailableForInteraction, InteractingActor) == 0x000000, "Member 'BP_BaseballPitcher_C_IsAvailableForInteraction::InteractingActor' has a wrong offset!");
static_assert(offsetof(BP_BaseballPitcher_C_IsAvailableForInteraction, InteractionComponent) == 0x000008, "Member 'BP_BaseballPitcher_C_IsAvailableForInteraction::InteractionComponent' has a wrong offset!");
static_assert(offsetof(BP_BaseballPitcher_C_IsAvailableForInteraction, ReturnValue) == 0x000010, "Member 'BP_BaseballPitcher_C_IsAvailableForInteraction::ReturnValue' has a wrong offset!");

}

