#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: DowntimeManager

#include "Basic.hpp"

#include "DowntimeManager_classes.hpp"
#include "DowntimeManager_parameters.hpp"


namespace SDK
{

// Function DowntimeManager.DowntimeManager_C.BindToSuddenDeathActive
// (Public, BlueprintCallable, BlueprintEvent)

void ADowntimeManager_C::BindToSuddenDeathActive()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DowntimeManager_C", "BindToSuddenDeathActive");

	UObject::ProcessEvent(Func, nullptr);
}


// Function DowntimeManager.DowntimeManager_C.Check Time Remaining
// (BlueprintCallable, BlueprintEvent)

void ADowntimeManager_C::Check_Time_Remaining()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DowntimeManager_C", "Check Time Remaining");

	UObject::ProcessEvent(Func, nullptr);
}


// Function DowntimeManager.DowntimeManager_C.DoesTODWidgetExist
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool ADowntimeManager_C::DoesTODWidgetExist()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DowntimeManager_C", "DoesTODWidgetExist");

	Params::DowntimeManager_C_DoesTODWidgetExist Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function DowntimeManager.DowntimeManager_C.Enable Construction Yard Cosmetics
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Enable                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ADowntimeManager_C::Enable_Construction_Yard_Cosmetics(bool Enable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DowntimeManager_C", "Enable Construction Yard Cosmetics");

	Params::DowntimeManager_C_Enable_Construction_Yard_Cosmetics Parms{};

	Parms.Enable = Enable;

	UObject::ProcessEvent(Func, &Parms);
}


// Function DowntimeManager.DowntimeManager_C.EndlessDay
// (Net, NetServer, BlueprintCallable, BlueprintEvent)

void ADowntimeManager_C::EndlessDay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DowntimeManager_C", "EndlessDay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function DowntimeManager.DowntimeManager_C.ExecuteUbergraph_DowntimeManager
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ADowntimeManager_C::ExecuteUbergraph_DowntimeManager(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DowntimeManager_C", "ExecuteUbergraph_DowntimeManager");

	Params::DowntimeManager_C_ExecuteUbergraph_DowntimeManager Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function DowntimeManager.DowntimeManager_C.GetDayTimeLength
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// double                                  A                                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

double ADowntimeManager_C::GetDayTimeLength(double A)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DowntimeManager_C", "GetDayTimeLength");

	Params::DowntimeManager_C_GetDayTimeLength Parms{};

	Parms.A = A;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function DowntimeManager.DowntimeManager_C.GetTimeOfDayEffect
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UClass*                           EffectType                                             (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ADowntimeManager_C::GetTimeOfDayEffect(class UClass** EffectType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DowntimeManager_C", "GetTimeOfDayEffect");

	Params::DowntimeManager_C_GetTimeOfDayEffect Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (EffectType != nullptr)
		*EffectType = Parms.EffectType;
}


// Function DowntimeManager.DowntimeManager_C.GrantNightMoney
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ADowntimeManager_C::GrantNightMoney()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DowntimeManager_C", "GrantNightMoney");

	UObject::ProcessEvent(Func, nullptr);
}


// Function DowntimeManager.DowntimeManager_C.IsDay
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool ADowntimeManager_C::IsDay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DowntimeManager_C", "IsDay");

	Params::DowntimeManager_C_IsDay Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function DowntimeManager.DowntimeManager_C.IsNight
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool ADowntimeManager_C::IsNight()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DowntimeManager_C", "IsNight");

	Params::DowntimeManager_C_IsNight Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function DowntimeManager.DowntimeManager_C.Multi_Play Lighting Transition
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// E_TimeOfDay                             TOD                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ADowntimeManager_C::Multi_Play_Lighting_Transition(E_TimeOfDay TOD)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DowntimeManager_C", "Multi_Play Lighting Transition");

	Params::DowntimeManager_C_Multi_Play_Lighting_Transition Parms{};

	Parms.TOD = TOD;

	UObject::ProcessEvent(Func, &Parms);
}


// Function DowntimeManager.DowntimeManager_C.On Day Time Timer Elapsed
// (BlueprintCallable, BlueprintEvent)

void ADowntimeManager_C::On_Day_Time_Timer_Elapsed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DowntimeManager_C", "On Day Time Timer Elapsed");

	UObject::ProcessEvent(Func, nullptr);
}


// Function DowntimeManager.DowntimeManager_C.On Match Started
// (BlueprintCallable, BlueprintEvent)

void ADowntimeManager_C::On_Match_Started()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DowntimeManager_C", "On Match Started");

	UObject::ProcessEvent(Func, nullptr);
}


// Function DowntimeManager.DowntimeManager_C.On Night Timer Elapsed
// (BlueprintCallable, BlueprintEvent)

void ADowntimeManager_C::On_Night_Timer_Elapsed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DowntimeManager_C", "On Night Timer Elapsed");

	UObject::ProcessEvent(Func, nullptr);
}


// Function DowntimeManager.DowntimeManager_C.On Sudden Death Active
// (BlueprintCallable, BlueprintEvent)

void ADowntimeManager_C::On_Sudden_Death_Active()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DowntimeManager_C", "On Sudden Death Active");

	UObject::ProcessEvent(Func, nullptr);
}


// Function DowntimeManager.DowntimeManager_C.On_Client_TimeOfDayChange__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    InitialState_0                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// E_TimeOfDay                             TimeOfDay_0                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ADowntimeManager_C::On_Client_TimeOfDayChange__DelegateSignature(bool InitialState_0, E_TimeOfDay TimeOfDay_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DowntimeManager_C", "On_Client_TimeOfDayChange__DelegateSignature");

	Params::DowntimeManager_C_On_Client_TimeOfDayChange__DelegateSignature Parms{};

	Parms.InitialState_0 = InitialState_0;
	Parms.TimeOfDay_0 = TimeOfDay_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function DowntimeManager.DowntimeManager_C.On_TimeOfDayChange__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)
// Parameters:
// E_TimeOfDay                             TimeOfDay_0                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ADowntimeManager_C::On_TimeOfDayChange__DelegateSignature(E_TimeOfDay TimeOfDay_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DowntimeManager_C", "On_TimeOfDayChange__DelegateSignature");

	Params::DowntimeManager_C_On_TimeOfDayChange__DelegateSignature Parms{};

	Parms.TimeOfDay_0 = TimeOfDay_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function DowntimeManager.DowntimeManager_C.OnGameEnded
// (BlueprintCallable, BlueprintEvent)

void ADowntimeManager_C::OnGameEnded()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DowntimeManager_C", "OnGameEnded");

	UObject::ProcessEvent(Func, nullptr);
}


// Function DowntimeManager.DowntimeManager_C.OnRep_SuddenDeathActive
// (BlueprintCallable, BlueprintEvent)

void ADowntimeManager_C::OnRep_SuddenDeathActive()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DowntimeManager_C", "OnRep_SuddenDeathActive");

	UObject::ProcessEvent(Func, nullptr);
}


// Function DowntimeManager.DowntimeManager_C.OnRep_TimeOfDay
// (HasDefaults, BlueprintCallable, BlueprintEvent)

void ADowntimeManager_C::OnRep_TimeOfDay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DowntimeManager_C", "OnRep_TimeOfDay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function DowntimeManager.DowntimeManager_C.OnRep_Transition
// (BlueprintCallable, BlueprintEvent)

void ADowntimeManager_C::OnRep_Transition()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DowntimeManager_C", "OnRep_Transition");

	UObject::ProcessEvent(Func, nullptr);
}


// Function DowntimeManager.DowntimeManager_C.PlayLightingTransitionBasedOnTransition
// (Public, BlueprintCallable, BlueprintEvent)

void ADowntimeManager_C::PlayLightingTransitionBasedOnTransition()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DowntimeManager_C", "PlayLightingTransitionBasedOnTransition");

	UObject::ProcessEvent(Func, nullptr);
}


// Function DowntimeManager.DowntimeManager_C.PlaySoundAtPlayer
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class USoundBase*                       Sound                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ADowntimeManager_C::PlaySoundAtPlayer(class USoundBase* Sound)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DowntimeManager_C", "PlaySoundAtPlayer");

	Params::DowntimeManager_C_PlaySoundAtPlayer Parms{};

	Parms.Sound = Sound;

	UObject::ProcessEvent(Func, &Parms);
}


// Function DowntimeManager.DowntimeManager_C.PlaySoundBasedOnTransition
// (Public, BlueprintCallable, BlueprintEvent)

void ADowntimeManager_C::PlaySoundBasedOnTransition()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DowntimeManager_C", "PlaySoundBasedOnTransition");

	UObject::ProcessEvent(Func, nullptr);
}


// Function DowntimeManager.DowntimeManager_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ADowntimeManager_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DowntimeManager_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function DowntimeManager.DowntimeManager_C.SendNightTimePlayerTip
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ADowntimeManager_C::SendNightTimePlayerTip()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DowntimeManager_C", "SendNightTimePlayerTip");

	UObject::ProcessEvent(Func, nullptr);
}


// Function DowntimeManager.DowntimeManager_C.SetTimeRemainingForTOD
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FTimerHandle                     Handle                                                 (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)

void ADowntimeManager_C::SetTimeRemainingForTOD(const struct FTimerHandle& Handle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DowntimeManager_C", "SetTimeRemainingForTOD");

	Params::DowntimeManager_C_SetTimeRemainingForTOD Parms{};

	Parms.Handle = std::move(Handle);

	UObject::ProcessEvent(Func, &Parms);
}


// Function DowntimeManager.DowntimeManager_C.Start Checking Time Remaining
// (BlueprintCallable, BlueprintEvent)

void ADowntimeManager_C::Start_Checking_Time_Remaining()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DowntimeManager_C", "Start Checking Time Remaining");

	UObject::ProcessEvent(Func, nullptr);
}


// Function DowntimeManager.DowntimeManager_C.Start Day Events
// (BlueprintCallable, BlueprintEvent)

void ADowntimeManager_C::Start_Day_Events()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DowntimeManager_C", "Start Day Events");

	UObject::ProcessEvent(Func, nullptr);
}


// Function DowntimeManager.DowntimeManager_C.Start Day Timer
// (BlueprintCallable, BlueprintEvent)

void ADowntimeManager_C::Start_Day_Timer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DowntimeManager_C", "Start Day Timer");

	UObject::ProcessEvent(Func, nullptr);
}


// Function DowntimeManager.DowntimeManager_C.Start Night Events
// (BlueprintCallable, BlueprintEvent)

void ADowntimeManager_C::Start_Night_Events()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DowntimeManager_C", "Start Night Events");

	UObject::ProcessEvent(Func, nullptr);
}


// Function DowntimeManager.DowntimeManager_C.Start Night Timer
// (BlueprintCallable, BlueprintEvent)

void ADowntimeManager_C::Start_Night_Timer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DowntimeManager_C", "Start Night Timer");

	UObject::ProcessEvent(Func, nullptr);
}


// Function DowntimeManager.DowntimeManager_C.UpdateEffectsOfPlayers
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ADowntimeManager_C::UpdateEffectsOfPlayers()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DowntimeManager_C", "UpdateEffectsOfPlayers");

	UObject::ProcessEvent(Func, nullptr);
}


// Function DowntimeManager.DowntimeManager_C.UpdateObjectsInTimeOfDayWidget
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UWI_TimeOfDay_C*                  WI_TimeOfDay                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void ADowntimeManager_C::UpdateObjectsInTimeOfDayWidget(class UWI_TimeOfDay_C* WI_TimeOfDay)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DowntimeManager_C", "UpdateObjectsInTimeOfDayWidget");

	Params::DowntimeManager_C_UpdateObjectsInTimeOfDayWidget Parms{};

	Parms.WI_TimeOfDay = WI_TimeOfDay;

	UObject::ProcessEvent(Func, &Parms);
}

}

