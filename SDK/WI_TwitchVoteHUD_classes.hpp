#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WI_TwitchVoteHUD

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "UMG_structs.hpp"
#include "UMG_classes.hpp"
#include "JP_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WI_TwitchVoteHUD.WI_TwitchVoteHUD_C
// 0x00A0 (0x0380 - 0x02E0)
class UWI_TwitchVoteHUD_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02E0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       AnimateMainIn;                                     // 0x02E8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       AnimateIntroIn;                                    // 0x02F0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class URichTextBlock*                         RichTextBlock_ChatInfoDescription;                 // 0x02F8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class URichTextBlock*                         RichTextBlock_ChatInfoSubject;                     // 0x0300(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class URichTextBlock*                         RichTextBlock_Intro;                               // 0x0308(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       VoteDescriptionLabel;                              // 0x0310(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       VoteSubjectLabel;                                  // 0x0318(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWI_TwitchVoteHUDTeam_C*                VoteTeamBlue;                                      // 0x0320(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWI_TwitchVoteHUDTeam_C*                VoteTeamRed;                                       // 0x0328(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWI_SlantedLabel_C*                     WI_SlantedLabel;                                   // 0x0330(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWidgetSwitcher*                        WidgetSwitcher;                                    // 0x0338(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class FText                                   VoteDescription;                                   // 0x0340(0x0010)(Edit, BlueprintVisible, ExposeOnSpawn)
	class FText                                   VoteSubject;                                       // 0x0350(0x0010)(Edit, BlueprintVisible, ExposeOnSpawn)
	class FText                                   ChatInfoSubject;                                   // 0x0360(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	class FText                                   ChatInfoDescription;                               // 0x0370(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)

public:
	void Construct();
	void ExecuteUbergraph_WI_TwitchVoteHUD(int32 EntryPoint);
	void GetVoteTeamWidgetForTeamType(ETeamType TeamType, class UWI_TwitchVoteHUDTeam_C** VoteTeamWidget);
	void OverlayIntro_FadeInComplete(class UOverlay* OverlayIntro);
	void PreConstruct(bool IsDesignTime);
	void SequenceEvent__ENTRYPOINTWI_TwitchVoteHUD(class UOverlay* OverlayIntro);
	void SetChatInfo(const class FText& Subject, const class FText& Description);
	void SetTeamVisible(ETeamType TeamType, bool Visible);
	void SetTeamVotes(ETeamType TeamType, int32 Votes);
	void SetVoteDescription(const class FText& VoteDescription_0);
	void SetVoteSubject(const class FText& VoteSubject_0);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WI_TwitchVoteHUD_C">();
	}
	static class UWI_TwitchVoteHUD_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWI_TwitchVoteHUD_C>();
	}
};
static_assert(alignof(UWI_TwitchVoteHUD_C) == 0x000008, "Wrong alignment on UWI_TwitchVoteHUD_C");
static_assert(sizeof(UWI_TwitchVoteHUD_C) == 0x000380, "Wrong size on UWI_TwitchVoteHUD_C");
static_assert(offsetof(UWI_TwitchVoteHUD_C, UberGraphFrame) == 0x0002E0, "Member 'UWI_TwitchVoteHUD_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWI_TwitchVoteHUD_C, AnimateMainIn) == 0x0002E8, "Member 'UWI_TwitchVoteHUD_C::AnimateMainIn' has a wrong offset!");
static_assert(offsetof(UWI_TwitchVoteHUD_C, AnimateIntroIn) == 0x0002F0, "Member 'UWI_TwitchVoteHUD_C::AnimateIntroIn' has a wrong offset!");
static_assert(offsetof(UWI_TwitchVoteHUD_C, RichTextBlock_ChatInfoDescription) == 0x0002F8, "Member 'UWI_TwitchVoteHUD_C::RichTextBlock_ChatInfoDescription' has a wrong offset!");
static_assert(offsetof(UWI_TwitchVoteHUD_C, RichTextBlock_ChatInfoSubject) == 0x000300, "Member 'UWI_TwitchVoteHUD_C::RichTextBlock_ChatInfoSubject' has a wrong offset!");
static_assert(offsetof(UWI_TwitchVoteHUD_C, RichTextBlock_Intro) == 0x000308, "Member 'UWI_TwitchVoteHUD_C::RichTextBlock_Intro' has a wrong offset!");
static_assert(offsetof(UWI_TwitchVoteHUD_C, VoteDescriptionLabel) == 0x000310, "Member 'UWI_TwitchVoteHUD_C::VoteDescriptionLabel' has a wrong offset!");
static_assert(offsetof(UWI_TwitchVoteHUD_C, VoteSubjectLabel) == 0x000318, "Member 'UWI_TwitchVoteHUD_C::VoteSubjectLabel' has a wrong offset!");
static_assert(offsetof(UWI_TwitchVoteHUD_C, VoteTeamBlue) == 0x000320, "Member 'UWI_TwitchVoteHUD_C::VoteTeamBlue' has a wrong offset!");
static_assert(offsetof(UWI_TwitchVoteHUD_C, VoteTeamRed) == 0x000328, "Member 'UWI_TwitchVoteHUD_C::VoteTeamRed' has a wrong offset!");
static_assert(offsetof(UWI_TwitchVoteHUD_C, WI_SlantedLabel) == 0x000330, "Member 'UWI_TwitchVoteHUD_C::WI_SlantedLabel' has a wrong offset!");
static_assert(offsetof(UWI_TwitchVoteHUD_C, WidgetSwitcher) == 0x000338, "Member 'UWI_TwitchVoteHUD_C::WidgetSwitcher' has a wrong offset!");
static_assert(offsetof(UWI_TwitchVoteHUD_C, VoteDescription) == 0x000340, "Member 'UWI_TwitchVoteHUD_C::VoteDescription' has a wrong offset!");
static_assert(offsetof(UWI_TwitchVoteHUD_C, VoteSubject) == 0x000350, "Member 'UWI_TwitchVoteHUD_C::VoteSubject' has a wrong offset!");
static_assert(offsetof(UWI_TwitchVoteHUD_C, ChatInfoSubject) == 0x000360, "Member 'UWI_TwitchVoteHUD_C::ChatInfoSubject' has a wrong offset!");
static_assert(offsetof(UWI_TwitchVoteHUD_C, ChatInfoDescription) == 0x000370, "Member 'UWI_TwitchVoteHUD_C::ChatInfoDescription' has a wrong offset!");

}

