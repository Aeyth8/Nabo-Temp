#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: LevelInstanceManager

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "S_TeamHouse_structs.hpp"
#include "JP_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass LevelInstanceManager.LevelInstanceManager_C
// 0x0080 (0x0310 - 0x0290)
class ALevelInstanceManager_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0290(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UBillboardComponent*                    Billboard;                                         // 0x0298(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x02A0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<class Abp_groundskeeper_C*>            Groundkeepers;                                     // 0x02A8(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, DisableEditOnInstance)
	TArray<class ULevelStreamingDynamic*>         SpawnedLevelInstances;                             // 0x02B8(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	int32                                         CurrentLoadingHouse;                               // 0x02C8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         StartLoadingTimeStamp;                             // 0x02CC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FS_TeamHouse>                   TeamHouses;                                        // 0x02D0(0x0010)(Edit, BlueprintVisible)
	bool                                          DebugCompleteLoadingInstantly;                     // 0x02E0(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2E1[0x7];                                      // 0x02E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	FMulticastInlineDelegateProperty_             On_HousesLoaded;                                   // 0x02E8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	bool                                          HousesLoaded;                                      // 0x02F8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2F9[0x7];                                      // 0x02F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           HouseNames;                                        // 0x0300(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)

public:
	void AllHousesLoaded(bool* Return);
	class FString CalculateLevelsLoadTime();
	void ExecuteUbergraph_LevelInstanceManager(int32 EntryPoint);
	void Fail_Safe();
	void GetGroundskeeperFromTeamID(uint8 TeamIDToLookFor, class Abp_groundskeeper_C** Return);
	void GetHouseName(uint8 HouseIndex, class FName* HouseName);
	void GetStoredHouseDefinitionForTeam(uint8 TeamId, TSoftObjectPtr<class UHouseDefinition>* OutSoftHouseDefinition);
	void Load_Next_House();
	void LoadLevelInstanceToGroundsKeeper(uint8 TeamId, TSoftObjectPtr<class UHouseDefinition> LevelName, class ULevelStreamingDynamic** LevelInstance);
	void On_HousesLoaded__DelegateSignature();
	void OnAllLevelsLoaded();
	void OnEnded_95EFB67846315BD3980A3EADC599285D();
	void OnEnded_BF35C9D44C228AD26543DE9501787E5B();
	void OnLevelLoaded();
	void ReceiveBeginPlay();
	void Reload_Runtime_Reloadable_Actors();
	void ReloadRuntimeReloadableActor(class AActor* Actor);
	void Spawn_Houses();
	void StoreLevelInstanceManagers();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"LevelInstanceManager_C">();
	}
	static class ALevelInstanceManager_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ALevelInstanceManager_C>();
	}
};
static_assert(alignof(ALevelInstanceManager_C) == 0x000008, "Wrong alignment on ALevelInstanceManager_C");
static_assert(sizeof(ALevelInstanceManager_C) == 0x000310, "Wrong size on ALevelInstanceManager_C");
static_assert(offsetof(ALevelInstanceManager_C, UberGraphFrame) == 0x000290, "Member 'ALevelInstanceManager_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ALevelInstanceManager_C, Billboard) == 0x000298, "Member 'ALevelInstanceManager_C::Billboard' has a wrong offset!");
static_assert(offsetof(ALevelInstanceManager_C, DefaultSceneRoot) == 0x0002A0, "Member 'ALevelInstanceManager_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ALevelInstanceManager_C, Groundkeepers) == 0x0002A8, "Member 'ALevelInstanceManager_C::Groundkeepers' has a wrong offset!");
static_assert(offsetof(ALevelInstanceManager_C, SpawnedLevelInstances) == 0x0002B8, "Member 'ALevelInstanceManager_C::SpawnedLevelInstances' has a wrong offset!");
static_assert(offsetof(ALevelInstanceManager_C, CurrentLoadingHouse) == 0x0002C8, "Member 'ALevelInstanceManager_C::CurrentLoadingHouse' has a wrong offset!");
static_assert(offsetof(ALevelInstanceManager_C, StartLoadingTimeStamp) == 0x0002CC, "Member 'ALevelInstanceManager_C::StartLoadingTimeStamp' has a wrong offset!");
static_assert(offsetof(ALevelInstanceManager_C, TeamHouses) == 0x0002D0, "Member 'ALevelInstanceManager_C::TeamHouses' has a wrong offset!");
static_assert(offsetof(ALevelInstanceManager_C, DebugCompleteLoadingInstantly) == 0x0002E0, "Member 'ALevelInstanceManager_C::DebugCompleteLoadingInstantly' has a wrong offset!");
static_assert(offsetof(ALevelInstanceManager_C, On_HousesLoaded) == 0x0002E8, "Member 'ALevelInstanceManager_C::On_HousesLoaded' has a wrong offset!");
static_assert(offsetof(ALevelInstanceManager_C, HousesLoaded) == 0x0002F8, "Member 'ALevelInstanceManager_C::HousesLoaded' has a wrong offset!");
static_assert(offsetof(ALevelInstanceManager_C, HouseNames) == 0x000300, "Member 'ALevelInstanceManager_C::HouseNames' has a wrong offset!");

}

