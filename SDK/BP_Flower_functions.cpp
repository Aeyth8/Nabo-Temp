#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Flower

#include "Basic.hpp"

#include "BP_Flower_classes.hpp"
#include "BP_Flower_parameters.hpp"


namespace SDK
{

// Function BP_Flower.BP_Flower_C.BndEvt__BP_Flower_AbilitySystemComponentIW_K2Node_ComponentBoundEvent_0_OnGameplayEffectAppliedDelegateBP__DelegateSignature
// (HasOutParams, BlueprintEvent)
// Parameters:
// class UAbilitySystemComponent*          AbilitySystemComponent                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// struct FGameplayEffectSpec              Spec                                                   (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// struct FActiveGameplayEffectHandle      Handle                                                 (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)

void ABP_Flower_C::BndEvt__BP_Flower_AbilitySystemComponentIW_K2Node_ComponentBoundEvent_0_OnGameplayEffectAppliedDelegateBP__DelegateSignature(class UAbilitySystemComponent* AbilitySystemComponent, const struct FGameplayEffectSpec& Spec, const struct FActiveGameplayEffectHandle& Handle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Flower_C", "BndEvt__BP_Flower_AbilitySystemComponentIW_K2Node_ComponentBoundEvent_0_OnGameplayEffectAppliedDelegateBP__DelegateSignature");

	Params::BP_Flower_C_BndEvt__BP_Flower_AbilitySystemComponentIW_K2Node_ComponentBoundEvent_0_OnGameplayEffectAppliedDelegateBP__DelegateSignature Parms{};

	Parms.AbilitySystemComponent = AbilitySystemComponent;
	Parms.Spec = std::move(Spec);
	Parms.Handle = std::move(Handle);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Flower.BP_Flower_C.ChangeScore
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Increase                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Flower_C::ChangeScore(bool Increase)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Flower_C", "ChangeScore");

	Params::BP_Flower_C_ChangeScore Parms{};

	Parms.Increase = Increase;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Flower.BP_Flower_C.DestroyPlant
// (BlueprintCallable, BlueprintEvent)

void ABP_Flower_C::DestroyPlant()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Flower_C", "DestroyPlant");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Flower.BP_Flower_C.ExecuteUbergraph_BP_Flower
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Flower_C::ExecuteUbergraph_BP_Flower(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Flower_C", "ExecuteUbergraph_BP_Flower");

	Params::BP_Flower_C_ExecuteUbergraph_BP_Flower Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Flower.BP_Flower_C.FlowerEmissiveTimeline__FinishedFunc
// (BlueprintEvent)

void ABP_Flower_C::FlowerEmissiveTimeline__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Flower_C", "FlowerEmissiveTimeline__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Flower.BP_Flower_C.FlowerEmissiveTimeline__UpdateFunc
// (BlueprintEvent)

void ABP_Flower_C::FlowerEmissiveTimeline__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Flower_C", "FlowerEmissiveTimeline__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Flower.BP_Flower_C.GetDurabilityCostWhenHit
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  Amount                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Flower_C::GetDurabilityCostWhenHit(double* Amount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Flower_C", "GetDurabilityCostWhenHit");

	Params::BP_Flower_C_GetDurabilityCostWhenHit Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Amount != nullptr)
		*Amount = Parms.Amount;
}


// Function BP_Flower.BP_Flower_C.GetMaterialType
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// E_MaterialTypes                         MaterialType                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Flower_C::GetMaterialType(E_MaterialTypes* MaterialType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Flower_C", "GetMaterialType");

	Params::BP_Flower_C_GetMaterialType Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (MaterialType != nullptr)
		*MaterialType = Parms.MaterialType;
}


// Function BP_Flower.BP_Flower_C.GrowTimeline__FinishedFunc
// (BlueprintEvent)

void ABP_Flower_C::GrowTimeline__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Flower_C", "GrowTimeline__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Flower.BP_Flower_C.GrowTimeline__UpdateFunc
// (BlueprintEvent)

void ABP_Flower_C::GrowTimeline__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Flower_C", "GrowTimeline__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Flower.BP_Flower_C.HitInterface
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          Direction                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Flower_C::HitInterface(const struct FVector& Direction)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Flower_C", "HitInterface");

	Params::BP_Flower_C_HitInterface Parms{};

	Parms.Direction = std::move(Direction);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Flower.BP_Flower_C.ImpactCosmetics
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class APawn*                            ImpactCauser                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// struct FVector                          Location                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          HitImpulse                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// E_ImpactEffect                          ImpactEffect                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FName                             BoneName                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ChangedAttributes                                      (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Flower_C::ImpactCosmetics(class APawn* ImpactCauser, const struct FVector& Location, const struct FVector& HitImpulse, E_ImpactEffect ImpactEffect, class FName BoneName, bool* ChangedAttributes)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Flower_C", "ImpactCosmetics");

	Params::BP_Flower_C_ImpactCosmetics Parms{};

	Parms.ImpactCauser = ImpactCauser;
	Parms.Location = std::move(Location);
	Parms.HitImpulse = std::move(HitImpulse);
	Parms.ImpactEffect = ImpactEffect;
	Parms.BoneName = BoneName;

	UObject::ProcessEvent(Func, &Parms);

	if (ChangedAttributes != nullptr)
		*ChangedAttributes = Parms.ChangedAttributes;
}


// Function BP_Flower.BP_Flower_C.MeleeHit
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           AttackingActor                                         (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash)

void ABP_Flower_C::MeleeHit(const class AActor*& AttackingActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Flower_C", "MeleeHit");

	Params::BP_Flower_C_MeleeHit Parms{};

	Parms.AttackingActor = AttackingActor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Flower.BP_Flower_C.MorphTimeLine__FinishedFunc
// (BlueprintEvent)

void ABP_Flower_C::MorphTimeLine__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Flower_C", "MorphTimeLine__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Flower.BP_Flower_C.MorphTimeLine__UpdateFunc
// (BlueprintEvent)

void ABP_Flower_C::MorphTimeLine__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Flower_C", "MorphTimeLine__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Flower.BP_Flower_C.OnDamaged
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   Delta                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           Causer                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// struct FCombatParticipant               CombatParticipant                                      (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm)
// struct FKillMethod                      KillMethod                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm)
// struct FVector_NetQuantize              Location                                               (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)

void ABP_Flower_C::OnDamaged(float Delta, class AActor* Causer, const struct FCombatParticipant& CombatParticipant, const struct FKillMethod& KillMethod, const struct FVector_NetQuantize& Location)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Flower_C", "OnDamaged");

	Params::BP_Flower_C_OnDamaged Parms{};

	Parms.Delta = Delta;
	Parms.Causer = Causer;
	Parms.CombatParticipant = std::move(CombatParticipant);
	Parms.KillMethod = std::move(KillMethod);
	Parms.Location = std::move(Location);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Flower.BP_Flower_C.OnFlowerGrown__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)

void ABP_Flower_C::OnFlowerGrown__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Flower_C", "OnFlowerGrown__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Flower.BP_Flower_C.OnHealthChanged
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   Health                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   MaxHealth_0                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Flower_C::OnHealthChanged(float Health, float MaxHealth_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Flower_C", "OnHealthChanged");

	Params::BP_Flower_C_OnHealthChanged Parms{};

	Parms.Health = Health;
	Parms.MaxHealth_0 = MaxHealth_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Flower.BP_Flower_C.OnRep_Destroyed
// (BlueprintCallable, BlueprintEvent)

void ABP_Flower_C::OnRep_Destroyed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Flower_C", "OnRep_Destroyed");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Flower.BP_Flower_C.OnRep_FinishedGrowing
// (BlueprintCallable, BlueprintEvent)

void ABP_Flower_C::OnRep_FinishedGrowing()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Flower_C", "OnRep_FinishedGrowing");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Flower.BP_Flower_C.OnRep_Growing
// (BlueprintCallable, BlueprintEvent)

void ABP_Flower_C::OnRep_Growing()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Flower_C", "OnRep_Growing");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Flower.BP_Flower_C.PlayMorphEffect
// (BlueprintCallable, BlueprintEvent)

void ABP_Flower_C::PlayMorphEffect()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Flower_C", "PlayMorphEffect");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Flower.BP_Flower_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ABP_Flower_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Flower_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Flower.BP_Flower_C.SetSeethroughParams
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_Flower_C::SetSeethroughParams()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Flower_C", "SetSeethroughParams");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Flower.BP_Flower_C.StartGrow
// (BlueprintCallable, BlueprintEvent)

void ABP_Flower_C::StartGrow()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Flower_C", "StartGrow");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Flower.BP_Flower_C.TakeDamage
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_Flower_C::TakeDamage()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Flower_C", "TakeDamage");

	UObject::ProcessEvent(Func, nullptr);
}

}

