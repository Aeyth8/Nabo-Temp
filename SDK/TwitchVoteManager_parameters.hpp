#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: TwitchVoteManager

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "JP_structs.hpp"
#include "IWTwitch_structs.hpp"
#include "E_TimeOfDay_structs.hpp"


namespace SDK::Params
{

// Function TwitchVoteManager.TwitchVoteManager_C.AddPlayerController
// 0x0008 (0x0008 - 0x0000)
struct TwitchVoteManager_C_AddPlayerController final
{
public:
	class APlayerControllerJP_MatchBP_C*          Controller;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TwitchVoteManager_C_AddPlayerController) == 0x000008, "Wrong alignment on TwitchVoteManager_C_AddPlayerController");
static_assert(sizeof(TwitchVoteManager_C_AddPlayerController) == 0x000008, "Wrong size on TwitchVoteManager_C_AddPlayerController");
static_assert(offsetof(TwitchVoteManager_C_AddPlayerController, Controller) == 0x000000, "Member 'TwitchVoteManager_C_AddPlayerController::Controller' has a wrong offset!");

// Function TwitchVoteManager.TwitchVoteManager_C.CreateWidget
// 0x0010 (0x0010 - 0x0000)
struct TwitchVoteManager_C_CreateWidget final
{
public:
	class FText                                   VoteName;                                          // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(TwitchVoteManager_C_CreateWidget) == 0x000008, "Wrong alignment on TwitchVoteManager_C_CreateWidget");
static_assert(sizeof(TwitchVoteManager_C_CreateWidget) == 0x000010, "Wrong size on TwitchVoteManager_C_CreateWidget");
static_assert(offsetof(TwitchVoteManager_C_CreateWidget, VoteName) == 0x000000, "Member 'TwitchVoteManager_C_CreateWidget::VoteName' has a wrong offset!");

// Function TwitchVoteManager.TwitchVoteManager_C.ExecuteUbergraph_TwitchVoteManager
// 0x04B8 (0x04B8 - 0x0000)
struct TwitchVoteManager_C_ExecuteUbergraph_TwitchVoteManager final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(const struct FTwitchAuthResponse& AuthResponse, const struct FTwitchError& TwitchError)> K2Node_CreateDelegate_OutputDelegate;              // 0x0004(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UInitializationStateEnded*              CallFunc_ListenToInitializationStateEnded_ReturnValue; // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	ETeamType                                     Temp_byte_Variable;                                // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_22[0x2];                                       // 0x0022(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_2;                               // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_3;                               // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UTwitchApi*                             CallFunc_GetGameInstanceSubsystem_ReturnValue;     // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTwitchIRC*                             CallFunc_GetTwitchIrc_ReturnValue;                 // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue_1;          // 0x0055(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0056(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue_2;          // 0x0057(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_64[0x4];                                       // 0x0064(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UTwitchApi*                             CallFunc_GetGameInstanceSubsystem_ReturnValue_1;   // 0x0068(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTwitchIRC*                             CallFunc_GetTwitchIrc_ReturnValue_1;               // 0x0070(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Connect_ErrorOut;                         // 0x0078(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Connect_ReturnValue;                      // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SendIRCMessage_ReturnValue;               // 0x0089(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8A[0x6];                                       // 0x008A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ADowntimeManager_C*                     CallFunc_GetActorOfClass_ReturnValue;              // 0x0090(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(E_TimeOfDay TimeOfDay)>        K2Node_CreateDelegate_OutputDelegate_1;            // 0x0098(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	E_TimeOfDay                                   K2Node_CustomEvent_TimeOfDay;                      // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x00A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_AA[0x6];                                       // 0x00AA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerControllerJP_MatchBP_C*          K2Node_CustomEvent_Controller;                     // 0x00B0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_2;            // 0x00BC(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_CC[0x4];                                       // 0x00CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x00D0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsServer_ReturnValue;                     // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D9[0x7];                                       // 0x00D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerControllerJP_MatchBP_C*          K2Node_DynamicCast_AsPlayer_Controller_JP_Match_BP; // 0x00E0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x00E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_EA[0x6];                                       // 0x00EA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FTeam>                          CallFunc_GetTeams_ReturnValue;                     // 0x00F0(0x0010)(ReferenceParm)
	int32                                         CallFunc_MakeLiteralInt_ReturnValue;               // 0x0100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0104(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x010C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_111[0x7];                                      // 0x0111(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_CustomEvent_VoteName;                       // 0x0118(0x0010)()
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue_1;        // 0x0128(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FString                                 K2Node_CustomEvent_Message;                        // 0x0130(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 K2Node_CustomEvent_Username;                       // 0x0140(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class UWI_TwitchVoteHUD_C*                    CallFunc_Create_ReturnValue;                       // 0x0150(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_3;            // 0x0158(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0168(0x0008)(NoDestructor, HasGetValueTypeHash)
	class UTwitchApi*                             CallFunc_GetGameInstanceSubsystem_ReturnValue_2;   // 0x0170(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_MaxOfIntArray_IndexOfMaxValue;            // 0x0178(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_MaxOfIntArray_MaxValue;                   // 0x017C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTwitchIRC*                             CallFunc_GetTwitchIrc_ReturnValue_2;               // 0x0180(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_1;             // 0x0188(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_189[0x7];                                      // 0x0189(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTeam                                  CallFunc_GetWinningTeam_Team;                      // 0x0190(0x0038)(NoDestructor)
	class FText                                   CallFunc_FormatWinMessage_Message;                 // 0x01C8(0x0010)()
	class UTwitchApi*                             CallFunc_GetGameInstanceSubsystem_ReturnValue_3;   // 0x01D8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTwitchIRC*                             CallFunc_GetTwitchIrc_ReturnValue_3;               // 0x01E0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	ETeamType                                     K2Node_CustomEvent_Team;                           // 0x01E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E9[0x3];                                      // 0x01E9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_CustomEvent_Votes;                          // 0x01EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Select_Default;                             // 0x01F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(const class FString& Message, const class FString& Username)> K2Node_CreateDelegate_OutputDelegate_4;            // 0x01F4(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsNotEmpty_ReturnValue;             // 0x0204(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_205[0x3];                                      // 0x0205(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTwitchApi*                             CallFunc_GetGameInstanceSubsystem_ReturnValue_4;   // 0x0208(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTwitchIRC*                             CallFunc_GetTwitchIrc_ReturnValue_4;               // 0x0210(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SendIRCMessage_ReturnValue_1;             // 0x0218(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_219[0x7];                                      // 0x0219(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable;                                // 0x0220(0x0010)(ConstParm)
	class APlayerControllerJP_MatchBP_C*          CallFunc_Array_Get_Item;                           // 0x0230(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue_2;        // 0x0238(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue_3;        // 0x0240(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APlayerControllerJP_MatchBP_C*          K2Node_DynamicCast_AsPlayer_Controller_JP_Match_BP_1; // 0x0248(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0250(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_251[0x7];                                      // 0x0251(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerControllerJP_MatchBP_C*          K2Node_DynamicCast_AsPlayer_Controller_JP_Match_BP_2; // 0x0258(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0260(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_261[0x7];                                      // 0x0261(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWI_TwitchVoteResultHUD_C*              CallFunc_Create_ReturnValue_1;                     // 0x0268(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0270(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsServer_ReturnValue_1;                   // 0x0271(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_272[0x6];                                      // 0x0272(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerControllerJP_MatchBP_C*          CallFunc_Array_Get_Item_1;                         // 0x0278(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0280(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_281[0x7];                                      // 0x0281(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UWI_TwitchVoteHUD_C*>            CallFunc_GetAllWidgetsOfClass_FoundWidgets;        // 0x0288(0x0010)(ReferenceParm, ContainsInstancedReference)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue_4;        // 0x0298(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UWI_TwitchVoteHUD_C*                    CallFunc_Array_Get_Item_2;                         // 0x02A0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x02A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x02AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2AD[0x3];                                      // 0x02AD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x02B0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_1;    // 0x02B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2B9[0x7];                                      // 0x02B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTwitchAuthValidateAsyncDelegate*       CallFunc_ValidateTwitchAccessToken_ReturnValue;    // 0x02C0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x02C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C9[0x7];                                      // 0x02C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTwitchAuthResponse                    Temp_struct_Variable;                              // 0x02D0(0x0048)()
	struct FTwitchError                           Temp_struct_Variable_1;                            // 0x0318(0x0028)()
	TArray<class UWI_TwitchVoteHUD_C*>            CallFunc_GetAllWidgetsOfClass_FoundWidgets_1;      // 0x0340(0x0010)(ReferenceParm, ContainsInstancedReference)
	class UWI_TwitchVoteHUD_C*                    CallFunc_Array_Get_Item_3;                         // 0x0350(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_3;               // 0x0358(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x035C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_35D[0x3];                                      // 0x035D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue_1;            // 0x0360(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_4;                               // 0x0368(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_36C[0x4];                                      // 0x036C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue_5;        // 0x0370(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_2;    // 0x0378(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0379(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_37A[0x2];                                      // 0x037A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x037C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTwitchAuthResponse                    K2Node_CustomEvent_AuthResponse;                   // 0x0380(0x0048)()
	struct FTwitchError                           K2Node_CustomEvent_TwitchError;                    // 0x03C8(0x0028)()
	class FText                                   Temp_text_Variable_1;                              // 0x03F0(0x0010)(ConstParm)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue_6;        // 0x0400(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APlayerControllerJP_MatchBP_C*          K2Node_DynamicCast_AsPlayer_Controller_JP_Match_BP_3; // 0x0408(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0410(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_411[0x7];                                      // 0x0411(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWI_TwitchVoteResultHUD_C*              CallFunc_Create_ReturnValue_2;                     // 0x0418(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_4;               // 0x0420(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_RandomInteger_ReturnValue;                // 0x0424(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDraw_Draw;                              // 0x0428(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_429[0x3];                                      // 0x0429(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(const struct FTwitchAuthResponse& AuthResponse, const struct FTwitchError& TwitchError)> K2Node_CreateDelegate_OutputDelegate_5;            // 0x042C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x043C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_43D[0x3];                                      // 0x043D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTwitchAuthResponse                    K2Node_CustomEvent_AuthResponse_1;                 // 0x0440(0x0048)()
	struct FTwitchError                           K2Node_CustomEvent_TwitchError_1;                  // 0x0488(0x0028)()
	EEndPlayReason                                K2Node_Event_EndPlayReason;                        // 0x04B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4B1[0x3];                                      // 0x04B1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_K2_SetTimerDelegate_Time_ImplicitCast;    // 0x04B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TwitchVoteManager_C_ExecuteUbergraph_TwitchVoteManager) == 0x000008, "Wrong alignment on TwitchVoteManager_C_ExecuteUbergraph_TwitchVoteManager");
static_assert(sizeof(TwitchVoteManager_C_ExecuteUbergraph_TwitchVoteManager) == 0x0004B8, "Wrong size on TwitchVoteManager_C_ExecuteUbergraph_TwitchVoteManager");
static_assert(offsetof(TwitchVoteManager_C_ExecuteUbergraph_TwitchVoteManager, EntryPoint) == 0x000000, "Member 'TwitchVoteManager_C_ExecuteUbergraph_TwitchVoteManager::EntryPoint' has a wrong offset!");
static_assert(offsetof(TwitchVoteManager_C_ExecuteUbergraph_TwitchVoteManager, K2Node_CreateDelegate_OutputDelegate) == 0x000004, "Member 'TwitchVoteManager_C_ExecuteUbergraph_TwitchVoteManager::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(TwitchVoteManager_C_ExecuteUbergraph_TwitchVoteManager, CallFunc_ListenToInitializationStateEnded_ReturnValue) == 0x000018, "Member 'TwitchVoteManager_C_ExecuteUbergraph_TwitchVoteManager::CallFunc_ListenToInitializationStateEnded_ReturnValue' has a wrong offset!");
static_assert(offsetof(TwitchVoteManager_C_ExecuteUbergraph_TwitchVoteManager, Temp_byte_Variable) == 0x000020, "Member 'TwitchVoteManager_C_ExecuteUbergraph_TwitchVoteManager::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(TwitchVoteManager_C_ExecuteUbergraph_TwitchVoteManager, CallFunc_IsValid_ReturnValue) == 0x000021, "Member 'TwitchVoteManager_C_ExecuteUbergraph_TwitchVoteManager::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(TwitchVoteManager_C_ExecuteUbergraph_TwitchVoteManager, Temp_int_Variable) == 0x000024, "Member 'TwitchVoteManager_C_ExecuteUbergraph_TwitchVoteManager::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(TwitchVoteManager_C_ExecuteUbergraph_TwitchVoteManager, Temp_int_Variable_1) == 0x000028, "Member 'TwitchVoteManager_C_ExecuteUbergraph_TwitchVoteManager::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(TwitchVoteManager_C_ExecuteUbergraph_TwitchVoteManager, Temp_int_Variable_2) == 0x00002C, "Member 'TwitchVoteManager_C_ExecuteUbergraph_TwitchVoteManager::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(TwitchVoteManager_C_ExecuteUbergraph_TwitchVoteManager, Temp_int_Variable_3) == 0x000030, "Member 'TwitchVoteManager_C_ExecuteUbergraph_TwitchVoteManager::Temp_int_Variable_3' has a wrong offset!");
static_assert(offsetof(TwitchVoteManager_C_ExecuteUbergraph_TwitchVoteManager, CallFunc_GetGameInstanceSubsystem_ReturnValue) == 0x000038, "Member 'TwitchVoteManager_C_ExecuteUbergraph_TwitchVoteManager::CallFunc_GetGameInstanceSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(TwitchVoteManager_C_ExecuteUbergraph_TwitchVoteManager, CallFunc_GetTwitchIrc_ReturnValue) == 0x000040, "Member 'TwitchVoteManager_C_ExecuteUbergraph_TwitchVoteManager::CallFunc_GetTwitchIrc_ReturnValue' has a wrong offset!");
static_assert(offsetof(TwitchVoteManager_C_ExecuteUbergraph_TwitchVoteManager, Temp_int_Array_Index_Variable) == 0x000048, "Member 'TwitchVoteManager_C_ExecuteUbergraph_TwitchVoteManager::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(TwitchVoteManager_C_ExecuteUbergraph_TwitchVoteManager, Temp_int_Loop_Counter_Variable) == 0x00004C, "Member 'TwitchVoteManager_C_ExecuteUbergraph_TwitchVoteManager::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(TwitchVoteManager_C_ExecuteUbergraph_TwitchVoteManager, CallFunc_Add_IntInt_ReturnValue) == 0x000050, "Member 'TwitchVoteManager_C_ExecuteUbergraph_TwitchVoteManager::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(TwitchVoteManager_C_ExecuteUbergraph_TwitchVoteManager, CallFunc_IsDedicatedServer_ReturnValue) == 0x000054, "Member 'TwitchVoteManager_C_ExecuteUbergraph_TwitchVoteManager::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(TwitchVoteManager_C_ExecuteUbergraph_TwitchVoteManager, CallFunc_IsDedicatedServer_ReturnValue_1) == 0x000055, "Member 'TwitchVoteManager_C_ExecuteUbergraph_TwitchVoteManager::CallFunc_IsDedicatedServer_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(TwitchVoteManager_C_ExecuteUbergraph_TwitchVoteManager, CallFunc_HasAuthority_ReturnValue) == 0x000056, "Member 'TwitchVoteManager_C_ExecuteUbergraph_TwitchVoteManager::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(TwitchVoteManager_C_ExecuteUbergraph_TwitchVoteManager, CallFunc_IsDedicatedServer_ReturnValue_2) == 0x000057, "Member 'TwitchVoteManager_C_ExecuteUbergraph_TwitchVoteManager::CallFunc_IsDedicatedServer_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(TwitchVoteManager_C_ExecuteUbergraph_TwitchVoteManager, Temp_int_Loop_Counter_Variable_1) == 0x000058, "Member 'TwitchVoteManager_C_ExecuteUbergraph_TwitchVoteManager::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(TwitchVoteManager_C_ExecuteUbergraph_TwitchVoteManager, CallFunc_Add_IntInt_ReturnValue_1) == 0x00005C, "Member 'TwitchVoteManager_C_ExecuteUbergraph_TwitchVoteManager::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(TwitchVoteManager_C_ExecuteUbergraph_TwitchVoteManager, Temp_int_Array_Index_Variable_1) == 0x000060, "Member 'TwitchVoteManager_C_ExecuteUbergraph_TwitchVoteManager::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(TwitchVoteManager_C_ExecuteUbergraph_TwitchVoteManager, CallFunc_GetGameInstanceSubsystem_ReturnValue_1) == 0x000068, "Member 'TwitchVoteManager_C_ExecuteUbergraph_TwitchVoteManager::CallFunc_GetGameInstanceSubsystem_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(TwitchVoteManager_C_ExecuteUbergraph_TwitchVoteManager, CallFunc_GetTwitchIrc_ReturnValue_1) == 0x000070, "Member 'TwitchVoteManager_C_ExecuteUbergraph_TwitchVoteManager::CallFunc_GetTwitchIrc_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(TwitchVoteManager_C_ExecuteUbergraph_TwitchVoteManager, CallFunc_Connect_ErrorOut) == 0x000078, "Member 'TwitchVoteManager_C_ExecuteUbergraph_TwitchVoteManager::CallFunc_Connect_ErrorOut' has a wrong offset!");
static_assert(offsetof(TwitchVoteManager_C_ExecuteUbergraph_TwitchVoteManager, CallFunc_Connect_ReturnValue) == 0x000088, "Member 'TwitchVoteManager_C_ExecuteUbergraph_TwitchVoteManager::CallFunc_Connect_ReturnValue' has a wrong offset!");
static_assert(offsetof(TwitchVoteManager_C_ExecuteUbergraph_TwitchVoteManager, CallFunc_SendIRCMessage_ReturnValue) == 0x000089, "Member 'TwitchVoteManager_C_ExecuteUbergraph_TwitchVoteManager::CallFunc_SendIRCMessage_ReturnValue' has a wrong offset!");
static_assert(offsetof(TwitchVoteManager_C_ExecuteUbergraph_TwitchVoteManager, CallFunc_GetActorOfClass_ReturnValue) == 0x000090, "Member 'TwitchVoteManager_C_ExecuteUbergraph_TwitchVoteManager::CallFunc_GetActorOfClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(TwitchVoteManager_C_ExecuteUbergraph_TwitchVoteManager, K2Node_CreateDelegate_OutputDelegate_1) == 0x000098, "Member 'TwitchVoteManager_C_ExecuteUbergraph_TwitchVoteManager::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(TwitchVoteManager_C_ExecuteUbergraph_TwitchVoteManager, K2Node_CustomEvent_TimeOfDay) == 0x0000A8, "Member 'TwitchVoteManager_C_ExecuteUbergraph_TwitchVoteManager::K2Node_CustomEvent_TimeOfDay' has a wrong offset!");
static_assert(offsetof(TwitchVoteManager_C_ExecuteUbergraph_TwitchVoteManager, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x0000A9, "Member 'TwitchVoteManager_C_ExecuteUbergraph_TwitchVoteManager::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(TwitchVoteManager_C_ExecuteUbergraph_TwitchVoteManager, K2Node_CustomEvent_Controller) == 0x0000B0, "Member 'TwitchVoteManager_C_ExecuteUbergraph_TwitchVoteManager::K2Node_CustomEvent_Controller' has a wrong offset!");
static_assert(offsetof(TwitchVoteManager_C_ExecuteUbergraph_TwitchVoteManager, CallFunc_Array_AddUnique_ReturnValue) == 0x0000B8, "Member 'TwitchVoteManager_C_ExecuteUbergraph_TwitchVoteManager::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");
static_assert(offsetof(TwitchVoteManager_C_ExecuteUbergraph_TwitchVoteManager, K2Node_CreateDelegate_OutputDelegate_2) == 0x0000BC, "Member 'TwitchVoteManager_C_ExecuteUbergraph_TwitchVoteManager::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(TwitchVoteManager_C_ExecuteUbergraph_TwitchVoteManager, CallFunc_GetPlayerController_ReturnValue) == 0x0000D0, "Member 'TwitchVoteManager_C_ExecuteUbergraph_TwitchVoteManager::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(TwitchVoteManager_C_ExecuteUbergraph_TwitchVoteManager, CallFunc_IsServer_ReturnValue) == 0x0000D8, "Member 'TwitchVoteManager_C_ExecuteUbergraph_TwitchVoteManager::CallFunc_IsServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(TwitchVoteManager_C_ExecuteUbergraph_TwitchVoteManager, K2Node_DynamicCast_AsPlayer_Controller_JP_Match_BP) == 0x0000E0, "Member 'TwitchVoteManager_C_ExecuteUbergraph_TwitchVoteManager::K2Node_DynamicCast_AsPlayer_Controller_JP_Match_BP' has a wrong offset!");
static_assert(offsetof(TwitchVoteManager_C_ExecuteUbergraph_TwitchVoteManager, K2Node_DynamicCast_bSuccess) == 0x0000E8, "Member 'TwitchVoteManager_C_ExecuteUbergraph_TwitchVoteManager::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(TwitchVoteManager_C_ExecuteUbergraph_TwitchVoteManager, CallFunc_Not_PreBool_ReturnValue) == 0x0000E9, "Member 'TwitchVoteManager_C_ExecuteUbergraph_TwitchVoteManager::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(TwitchVoteManager_C_ExecuteUbergraph_TwitchVoteManager, CallFunc_GetTeams_ReturnValue) == 0x0000F0, "Member 'TwitchVoteManager_C_ExecuteUbergraph_TwitchVoteManager::CallFunc_GetTeams_ReturnValue' has a wrong offset!");
static_assert(offsetof(TwitchVoteManager_C_ExecuteUbergraph_TwitchVoteManager, CallFunc_MakeLiteralInt_ReturnValue) == 0x000100, "Member 'TwitchVoteManager_C_ExecuteUbergraph_TwitchVoteManager::CallFunc_MakeLiteralInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(TwitchVoteManager_C_ExecuteUbergraph_TwitchVoteManager, CallFunc_Array_Length_ReturnValue) == 0x000104, "Member 'TwitchVoteManager_C_ExecuteUbergraph_TwitchVoteManager::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(TwitchVoteManager_C_ExecuteUbergraph_TwitchVoteManager, CallFunc_Array_Add_ReturnValue) == 0x000108, "Member 'TwitchVoteManager_C_ExecuteUbergraph_TwitchVoteManager::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(TwitchVoteManager_C_ExecuteUbergraph_TwitchVoteManager, CallFunc_Array_Length_ReturnValue_1) == 0x00010C, "Member 'TwitchVoteManager_C_ExecuteUbergraph_TwitchVoteManager::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(TwitchVoteManager_C_ExecuteUbergraph_TwitchVoteManager, CallFunc_Greater_IntInt_ReturnValue) == 0x000110, "Member 'TwitchVoteManager_C_ExecuteUbergraph_TwitchVoteManager::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(TwitchVoteManager_C_ExecuteUbergraph_TwitchVoteManager, K2Node_CustomEvent_VoteName) == 0x000118, "Member 'TwitchVoteManager_C_ExecuteUbergraph_TwitchVoteManager::K2Node_CustomEvent_VoteName' has a wrong offset!");
static_assert(offsetof(TwitchVoteManager_C_ExecuteUbergraph_TwitchVoteManager, CallFunc_GetPlayerController_ReturnValue_1) == 0x000128, "Member 'TwitchVoteManager_C_ExecuteUbergraph_TwitchVoteManager::CallFunc_GetPlayerController_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(TwitchVoteManager_C_ExecuteUbergraph_TwitchVoteManager, K2Node_CustomEvent_Message) == 0x000130, "Member 'TwitchVoteManager_C_ExecuteUbergraph_TwitchVoteManager::K2Node_CustomEvent_Message' has a wrong offset!");
static_assert(offsetof(TwitchVoteManager_C_ExecuteUbergraph_TwitchVoteManager, K2Node_CustomEvent_Username) == 0x000140, "Member 'TwitchVoteManager_C_ExecuteUbergraph_TwitchVoteManager::K2Node_CustomEvent_Username' has a wrong offset!");
static_assert(offsetof(TwitchVoteManager_C_ExecuteUbergraph_TwitchVoteManager, CallFunc_Create_ReturnValue) == 0x000150, "Member 'TwitchVoteManager_C_ExecuteUbergraph_TwitchVoteManager::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(TwitchVoteManager_C_ExecuteUbergraph_TwitchVoteManager, K2Node_CreateDelegate_OutputDelegate_3) == 0x000158, "Member 'TwitchVoteManager_C_ExecuteUbergraph_TwitchVoteManager::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(TwitchVoteManager_C_ExecuteUbergraph_TwitchVoteManager, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000168, "Member 'TwitchVoteManager_C_ExecuteUbergraph_TwitchVoteManager::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(TwitchVoteManager_C_ExecuteUbergraph_TwitchVoteManager, CallFunc_GetGameInstanceSubsystem_ReturnValue_2) == 0x000170, "Member 'TwitchVoteManager_C_ExecuteUbergraph_TwitchVoteManager::CallFunc_GetGameInstanceSubsystem_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(TwitchVoteManager_C_ExecuteUbergraph_TwitchVoteManager, CallFunc_MaxOfIntArray_IndexOfMaxValue) == 0x000178, "Member 'TwitchVoteManager_C_ExecuteUbergraph_TwitchVoteManager::CallFunc_MaxOfIntArray_IndexOfMaxValue' has a wrong offset!");
static_assert(offsetof(TwitchVoteManager_C_ExecuteUbergraph_TwitchVoteManager, CallFunc_MaxOfIntArray_MaxValue) == 0x00017C, "Member 'TwitchVoteManager_C_ExecuteUbergraph_TwitchVoteManager::CallFunc_MaxOfIntArray_MaxValue' has a wrong offset!");
static_assert(offsetof(TwitchVoteManager_C_ExecuteUbergraph_TwitchVoteManager, CallFunc_GetTwitchIrc_ReturnValue_2) == 0x000180, "Member 'TwitchVoteManager_C_ExecuteUbergraph_TwitchVoteManager::CallFunc_GetTwitchIrc_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(TwitchVoteManager_C_ExecuteUbergraph_TwitchVoteManager, CallFunc_Greater_IntInt_ReturnValue_1) == 0x000188, "Member 'TwitchVoteManager_C_ExecuteUbergraph_TwitchVoteManager::CallFunc_Greater_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(TwitchVoteManager_C_ExecuteUbergraph_TwitchVoteManager, CallFunc_GetWinningTeam_Team) == 0x000190, "Member 'TwitchVoteManager_C_ExecuteUbergraph_TwitchVoteManager::CallFunc_GetWinningTeam_Team' has a wrong offset!");
static_assert(offsetof(TwitchVoteManager_C_ExecuteUbergraph_TwitchVoteManager, CallFunc_FormatWinMessage_Message) == 0x0001C8, "Member 'TwitchVoteManager_C_ExecuteUbergraph_TwitchVoteManager::CallFunc_FormatWinMessage_Message' has a wrong offset!");
static_assert(offsetof(TwitchVoteManager_C_ExecuteUbergraph_TwitchVoteManager, CallFunc_GetGameInstanceSubsystem_ReturnValue_3) == 0x0001D8, "Member 'TwitchVoteManager_C_ExecuteUbergraph_TwitchVoteManager::CallFunc_GetGameInstanceSubsystem_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(TwitchVoteManager_C_ExecuteUbergraph_TwitchVoteManager, CallFunc_GetTwitchIrc_ReturnValue_3) == 0x0001E0, "Member 'TwitchVoteManager_C_ExecuteUbergraph_TwitchVoteManager::CallFunc_GetTwitchIrc_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(TwitchVoteManager_C_ExecuteUbergraph_TwitchVoteManager, K2Node_CustomEvent_Team) == 0x0001E8, "Member 'TwitchVoteManager_C_ExecuteUbergraph_TwitchVoteManager::K2Node_CustomEvent_Team' has a wrong offset!");
static_assert(offsetof(TwitchVoteManager_C_ExecuteUbergraph_TwitchVoteManager, K2Node_CustomEvent_Votes) == 0x0001EC, "Member 'TwitchVoteManager_C_ExecuteUbergraph_TwitchVoteManager::K2Node_CustomEvent_Votes' has a wrong offset!");
static_assert(offsetof(TwitchVoteManager_C_ExecuteUbergraph_TwitchVoteManager, K2Node_Select_Default) == 0x0001F0, "Member 'TwitchVoteManager_C_ExecuteUbergraph_TwitchVoteManager::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(TwitchVoteManager_C_ExecuteUbergraph_TwitchVoteManager, K2Node_CreateDelegate_OutputDelegate_4) == 0x0001F4, "Member 'TwitchVoteManager_C_ExecuteUbergraph_TwitchVoteManager::K2Node_CreateDelegate_OutputDelegate_4' has a wrong offset!");
static_assert(offsetof(TwitchVoteManager_C_ExecuteUbergraph_TwitchVoteManager, CallFunc_Array_IsNotEmpty_ReturnValue) == 0x000204, "Member 'TwitchVoteManager_C_ExecuteUbergraph_TwitchVoteManager::CallFunc_Array_IsNotEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(TwitchVoteManager_C_ExecuteUbergraph_TwitchVoteManager, CallFunc_GetGameInstanceSubsystem_ReturnValue_4) == 0x000208, "Member 'TwitchVoteManager_C_ExecuteUbergraph_TwitchVoteManager::CallFunc_GetGameInstanceSubsystem_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(TwitchVoteManager_C_ExecuteUbergraph_TwitchVoteManager, CallFunc_GetTwitchIrc_ReturnValue_4) == 0x000210, "Member 'TwitchVoteManager_C_ExecuteUbergraph_TwitchVoteManager::CallFunc_GetTwitchIrc_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(TwitchVoteManager_C_ExecuteUbergraph_TwitchVoteManager, CallFunc_SendIRCMessage_ReturnValue_1) == 0x000218, "Member 'TwitchVoteManager_C_ExecuteUbergraph_TwitchVoteManager::CallFunc_SendIRCMessage_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(TwitchVoteManager_C_ExecuteUbergraph_TwitchVoteManager, Temp_text_Variable) == 0x000220, "Member 'TwitchVoteManager_C_ExecuteUbergraph_TwitchVoteManager::Temp_text_Variable' has a wrong offset!");
static_assert(offsetof(TwitchVoteManager_C_ExecuteUbergraph_TwitchVoteManager, CallFunc_Array_Get_Item) == 0x000230, "Member 'TwitchVoteManager_C_ExecuteUbergraph_TwitchVoteManager::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(TwitchVoteManager_C_ExecuteUbergraph_TwitchVoteManager, CallFunc_GetPlayerController_ReturnValue_2) == 0x000238, "Member 'TwitchVoteManager_C_ExecuteUbergraph_TwitchVoteManager::CallFunc_GetPlayerController_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(TwitchVoteManager_C_ExecuteUbergraph_TwitchVoteManager, CallFunc_GetPlayerController_ReturnValue_3) == 0x000240, "Member 'TwitchVoteManager_C_ExecuteUbergraph_TwitchVoteManager::CallFunc_GetPlayerController_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(TwitchVoteManager_C_ExecuteUbergraph_TwitchVoteManager, K2Node_DynamicCast_AsPlayer_Controller_JP_Match_BP_1) == 0x000248, "Member 'TwitchVoteManager_C_ExecuteUbergraph_TwitchVoteManager::K2Node_DynamicCast_AsPlayer_Controller_JP_Match_BP_1' has a wrong offset!");
static_assert(offsetof(TwitchVoteManager_C_ExecuteUbergraph_TwitchVoteManager, K2Node_DynamicCast_bSuccess_1) == 0x000250, "Member 'TwitchVoteManager_C_ExecuteUbergraph_TwitchVoteManager::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(TwitchVoteManager_C_ExecuteUbergraph_TwitchVoteManager, K2Node_DynamicCast_AsPlayer_Controller_JP_Match_BP_2) == 0x000258, "Member 'TwitchVoteManager_C_ExecuteUbergraph_TwitchVoteManager::K2Node_DynamicCast_AsPlayer_Controller_JP_Match_BP_2' has a wrong offset!");
static_assert(offsetof(TwitchVoteManager_C_ExecuteUbergraph_TwitchVoteManager, K2Node_DynamicCast_bSuccess_2) == 0x000260, "Member 'TwitchVoteManager_C_ExecuteUbergraph_TwitchVoteManager::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(TwitchVoteManager_C_ExecuteUbergraph_TwitchVoteManager, CallFunc_Create_ReturnValue_1) == 0x000268, "Member 'TwitchVoteManager_C_ExecuteUbergraph_TwitchVoteManager::CallFunc_Create_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(TwitchVoteManager_C_ExecuteUbergraph_TwitchVoteManager, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000270, "Member 'TwitchVoteManager_C_ExecuteUbergraph_TwitchVoteManager::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(TwitchVoteManager_C_ExecuteUbergraph_TwitchVoteManager, CallFunc_IsServer_ReturnValue_1) == 0x000271, "Member 'TwitchVoteManager_C_ExecuteUbergraph_TwitchVoteManager::CallFunc_IsServer_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(TwitchVoteManager_C_ExecuteUbergraph_TwitchVoteManager, CallFunc_Array_Get_Item_1) == 0x000278, "Member 'TwitchVoteManager_C_ExecuteUbergraph_TwitchVoteManager::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(TwitchVoteManager_C_ExecuteUbergraph_TwitchVoteManager, CallFunc_Not_PreBool_ReturnValue_1) == 0x000280, "Member 'TwitchVoteManager_C_ExecuteUbergraph_TwitchVoteManager::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(TwitchVoteManager_C_ExecuteUbergraph_TwitchVoteManager, CallFunc_GetAllWidgetsOfClass_FoundWidgets) == 0x000288, "Member 'TwitchVoteManager_C_ExecuteUbergraph_TwitchVoteManager::CallFunc_GetAllWidgetsOfClass_FoundWidgets' has a wrong offset!");
static_assert(offsetof(TwitchVoteManager_C_ExecuteUbergraph_TwitchVoteManager, CallFunc_GetPlayerController_ReturnValue_4) == 0x000298, "Member 'TwitchVoteManager_C_ExecuteUbergraph_TwitchVoteManager::CallFunc_GetPlayerController_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(TwitchVoteManager_C_ExecuteUbergraph_TwitchVoteManager, CallFunc_Array_Get_Item_2) == 0x0002A0, "Member 'TwitchVoteManager_C_ExecuteUbergraph_TwitchVoteManager::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(TwitchVoteManager_C_ExecuteUbergraph_TwitchVoteManager, CallFunc_Array_Length_ReturnValue_2) == 0x0002A8, "Member 'TwitchVoteManager_C_ExecuteUbergraph_TwitchVoteManager::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(TwitchVoteManager_C_ExecuteUbergraph_TwitchVoteManager, CallFunc_Less_IntInt_ReturnValue) == 0x0002AC, "Member 'TwitchVoteManager_C_ExecuteUbergraph_TwitchVoteManager::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(TwitchVoteManager_C_ExecuteUbergraph_TwitchVoteManager, CallFunc_GetOwningPlayer_ReturnValue) == 0x0002B0, "Member 'TwitchVoteManager_C_ExecuteUbergraph_TwitchVoteManager::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(TwitchVoteManager_C_ExecuteUbergraph_TwitchVoteManager, CallFunc_EqualEqual_ObjectObject_ReturnValue_1) == 0x0002B8, "Member 'TwitchVoteManager_C_ExecuteUbergraph_TwitchVoteManager::CallFunc_EqualEqual_ObjectObject_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(TwitchVoteManager_C_ExecuteUbergraph_TwitchVoteManager, CallFunc_ValidateTwitchAccessToken_ReturnValue) == 0x0002C0, "Member 'TwitchVoteManager_C_ExecuteUbergraph_TwitchVoteManager::CallFunc_ValidateTwitchAccessToken_ReturnValue' has a wrong offset!");
static_assert(offsetof(TwitchVoteManager_C_ExecuteUbergraph_TwitchVoteManager, CallFunc_IsValid_ReturnValue_1) == 0x0002C8, "Member 'TwitchVoteManager_C_ExecuteUbergraph_TwitchVoteManager::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(TwitchVoteManager_C_ExecuteUbergraph_TwitchVoteManager, Temp_struct_Variable) == 0x0002D0, "Member 'TwitchVoteManager_C_ExecuteUbergraph_TwitchVoteManager::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(TwitchVoteManager_C_ExecuteUbergraph_TwitchVoteManager, Temp_struct_Variable_1) == 0x000318, "Member 'TwitchVoteManager_C_ExecuteUbergraph_TwitchVoteManager::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(TwitchVoteManager_C_ExecuteUbergraph_TwitchVoteManager, CallFunc_GetAllWidgetsOfClass_FoundWidgets_1) == 0x000340, "Member 'TwitchVoteManager_C_ExecuteUbergraph_TwitchVoteManager::CallFunc_GetAllWidgetsOfClass_FoundWidgets_1' has a wrong offset!");
static_assert(offsetof(TwitchVoteManager_C_ExecuteUbergraph_TwitchVoteManager, CallFunc_Array_Get_Item_3) == 0x000350, "Member 'TwitchVoteManager_C_ExecuteUbergraph_TwitchVoteManager::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(TwitchVoteManager_C_ExecuteUbergraph_TwitchVoteManager, CallFunc_Array_Length_ReturnValue_3) == 0x000358, "Member 'TwitchVoteManager_C_ExecuteUbergraph_TwitchVoteManager::CallFunc_Array_Length_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(TwitchVoteManager_C_ExecuteUbergraph_TwitchVoteManager, CallFunc_Less_IntInt_ReturnValue_1) == 0x00035C, "Member 'TwitchVoteManager_C_ExecuteUbergraph_TwitchVoteManager::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(TwitchVoteManager_C_ExecuteUbergraph_TwitchVoteManager, CallFunc_GetOwningPlayer_ReturnValue_1) == 0x000360, "Member 'TwitchVoteManager_C_ExecuteUbergraph_TwitchVoteManager::CallFunc_GetOwningPlayer_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(TwitchVoteManager_C_ExecuteUbergraph_TwitchVoteManager, Temp_int_Variable_4) == 0x000368, "Member 'TwitchVoteManager_C_ExecuteUbergraph_TwitchVoteManager::Temp_int_Variable_4' has a wrong offset!");
static_assert(offsetof(TwitchVoteManager_C_ExecuteUbergraph_TwitchVoteManager, CallFunc_GetPlayerController_ReturnValue_5) == 0x000370, "Member 'TwitchVoteManager_C_ExecuteUbergraph_TwitchVoteManager::CallFunc_GetPlayerController_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(TwitchVoteManager_C_ExecuteUbergraph_TwitchVoteManager, CallFunc_EqualEqual_ObjectObject_ReturnValue_2) == 0x000378, "Member 'TwitchVoteManager_C_ExecuteUbergraph_TwitchVoteManager::CallFunc_EqualEqual_ObjectObject_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(TwitchVoteManager_C_ExecuteUbergraph_TwitchVoteManager, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000379, "Member 'TwitchVoteManager_C_ExecuteUbergraph_TwitchVoteManager::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(TwitchVoteManager_C_ExecuteUbergraph_TwitchVoteManager, CallFunc_Add_IntInt_ReturnValue_2) == 0x00037C, "Member 'TwitchVoteManager_C_ExecuteUbergraph_TwitchVoteManager::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(TwitchVoteManager_C_ExecuteUbergraph_TwitchVoteManager, K2Node_CustomEvent_AuthResponse) == 0x000380, "Member 'TwitchVoteManager_C_ExecuteUbergraph_TwitchVoteManager::K2Node_CustomEvent_AuthResponse' has a wrong offset!");
static_assert(offsetof(TwitchVoteManager_C_ExecuteUbergraph_TwitchVoteManager, K2Node_CustomEvent_TwitchError) == 0x0003C8, "Member 'TwitchVoteManager_C_ExecuteUbergraph_TwitchVoteManager::K2Node_CustomEvent_TwitchError' has a wrong offset!");
static_assert(offsetof(TwitchVoteManager_C_ExecuteUbergraph_TwitchVoteManager, Temp_text_Variable_1) == 0x0003F0, "Member 'TwitchVoteManager_C_ExecuteUbergraph_TwitchVoteManager::Temp_text_Variable_1' has a wrong offset!");
static_assert(offsetof(TwitchVoteManager_C_ExecuteUbergraph_TwitchVoteManager, CallFunc_GetPlayerController_ReturnValue_6) == 0x000400, "Member 'TwitchVoteManager_C_ExecuteUbergraph_TwitchVoteManager::CallFunc_GetPlayerController_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(TwitchVoteManager_C_ExecuteUbergraph_TwitchVoteManager, K2Node_DynamicCast_AsPlayer_Controller_JP_Match_BP_3) == 0x000408, "Member 'TwitchVoteManager_C_ExecuteUbergraph_TwitchVoteManager::K2Node_DynamicCast_AsPlayer_Controller_JP_Match_BP_3' has a wrong offset!");
static_assert(offsetof(TwitchVoteManager_C_ExecuteUbergraph_TwitchVoteManager, K2Node_DynamicCast_bSuccess_3) == 0x000410, "Member 'TwitchVoteManager_C_ExecuteUbergraph_TwitchVoteManager::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(TwitchVoteManager_C_ExecuteUbergraph_TwitchVoteManager, CallFunc_Create_ReturnValue_2) == 0x000418, "Member 'TwitchVoteManager_C_ExecuteUbergraph_TwitchVoteManager::CallFunc_Create_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(TwitchVoteManager_C_ExecuteUbergraph_TwitchVoteManager, CallFunc_Array_Length_ReturnValue_4) == 0x000420, "Member 'TwitchVoteManager_C_ExecuteUbergraph_TwitchVoteManager::CallFunc_Array_Length_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(TwitchVoteManager_C_ExecuteUbergraph_TwitchVoteManager, CallFunc_RandomInteger_ReturnValue) == 0x000424, "Member 'TwitchVoteManager_C_ExecuteUbergraph_TwitchVoteManager::CallFunc_RandomInteger_ReturnValue' has a wrong offset!");
static_assert(offsetof(TwitchVoteManager_C_ExecuteUbergraph_TwitchVoteManager, CallFunc_IsDraw_Draw) == 0x000428, "Member 'TwitchVoteManager_C_ExecuteUbergraph_TwitchVoteManager::CallFunc_IsDraw_Draw' has a wrong offset!");
static_assert(offsetof(TwitchVoteManager_C_ExecuteUbergraph_TwitchVoteManager, K2Node_CreateDelegate_OutputDelegate_5) == 0x00042C, "Member 'TwitchVoteManager_C_ExecuteUbergraph_TwitchVoteManager::K2Node_CreateDelegate_OutputDelegate_5' has a wrong offset!");
static_assert(offsetof(TwitchVoteManager_C_ExecuteUbergraph_TwitchVoteManager, CallFunc_Not_PreBool_ReturnValue_2) == 0x00043C, "Member 'TwitchVoteManager_C_ExecuteUbergraph_TwitchVoteManager::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(TwitchVoteManager_C_ExecuteUbergraph_TwitchVoteManager, K2Node_CustomEvent_AuthResponse_1) == 0x000440, "Member 'TwitchVoteManager_C_ExecuteUbergraph_TwitchVoteManager::K2Node_CustomEvent_AuthResponse_1' has a wrong offset!");
static_assert(offsetof(TwitchVoteManager_C_ExecuteUbergraph_TwitchVoteManager, K2Node_CustomEvent_TwitchError_1) == 0x000488, "Member 'TwitchVoteManager_C_ExecuteUbergraph_TwitchVoteManager::K2Node_CustomEvent_TwitchError_1' has a wrong offset!");
static_assert(offsetof(TwitchVoteManager_C_ExecuteUbergraph_TwitchVoteManager, K2Node_Event_EndPlayReason) == 0x0004B0, "Member 'TwitchVoteManager_C_ExecuteUbergraph_TwitchVoteManager::K2Node_Event_EndPlayReason' has a wrong offset!");
static_assert(offsetof(TwitchVoteManager_C_ExecuteUbergraph_TwitchVoteManager, CallFunc_K2_SetTimerDelegate_Time_ImplicitCast) == 0x0004B4, "Member 'TwitchVoteManager_C_ExecuteUbergraph_TwitchVoteManager::CallFunc_K2_SetTimerDelegate_Time_ImplicitCast' has a wrong offset!");

// Function TwitchVoteManager.TwitchVoteManager_C.FormatWinMessage
// 0x0470 (0x0470 - 0x0000)
struct TwitchVoteManager_C_FormatWinMessage final
{
public:
	struct FTeam                                  WinningTeam;                                       // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	class FText                                   Message;                                           // 0x0038(0x0010)(Parm, OutParm)
	class FString                                 LStreamerName;                                     // 0x0048(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5C[0x4];                                       // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable;                                // 0x0060(0x0010)()
	class FText                                   Temp_text_Variable_1;                              // 0x0070(0x0010)()
	class FText                                   Temp_text_Variable_2;                              // 0x0080(0x0010)()
	uint8                                         Temp_byte_Variable;                                // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_91[0x7];                                       // 0x0091(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable_3;                              // 0x0098(0x0010)()
	class FText                                   Temp_text_Variable_4;                              // 0x00A8(0x0010)()
	class FText                                   Temp_text_Variable_5;                              // 0x00B8(0x0010)()
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D4[0x4];                                       // 0x00D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable_6;                              // 0x00D8(0x0010)()
	bool                                          Temp_bool_Variable;                                // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E9[0x7];                                       // 0x00E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_ByteToText_ReturnValue;              // 0x00F0(0x0010)()
	class APlayerControllerJP_MatchBP_C*          CallFunc_Array_Get_Item;                           // 0x0100(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0108(0x0048)(HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0150(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_154[0x4];                                      // 0x0154(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class APlayerStateJP*>                 CallFunc_GetPlayersOfTeam_ReturnValue;             // 0x0158(0x0010)(ReferenceParm)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0168(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x016C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0170(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsEmpty_ReturnValue;                      // 0x0171(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_172[0x6];                                      // 0x0172(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0178(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x0188(0x0048)(HasGetValueTypeHash)
	TArray<class APlayerStateJP*>                 CallFunc_GetPlayersOfTeam_ReturnValue_1;           // 0x01D0(0x0010)(ReferenceParm)
	class APlayerStateJP*                         CallFunc_Array_Get_Item_1;                         // 0x01E0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_GetPawn_ReturnValue;                      // 0x01E8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FText                                   K2Node_Select_Default;                             // 0x01F0(0x0010)()
	class ABP_ResidentCharacter_C*                K2Node_DynamicCast_AsBP_Resident_Character;        // 0x0200(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0208(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_209[0x7];                                      // 0x0209(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_2;            // 0x0210(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0258(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0268(0x0010)()
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0278(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_3;            // 0x0280(0x0048)(HasGetValueTypeHash)
	class APlayerControllerJP_MatchBP_C*          K2Node_DynamicCast_AsPlayer_Controller_JP_Match_BP; // 0x02C8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x02D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2D1[0x3];                                      // 0x02D1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x02D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x02D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2D9[0x3];                                      // 0x02D9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_MaxOfIntArray_IndexOfMaxValue;            // 0x02DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_MaxOfIntArray_MaxValue;                   // 0x02E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x02E4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2E5[0x3];                                      // 0x02E5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select_Default_1;                           // 0x02E8(0x0010)()
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x02F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2FC[0x4];                                      // 0x02FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select_Default_2;                           // 0x0300(0x0010)()
	class APlayerStateJP*                         CallFunc_Array_Get_Item_2;                         // 0x0310(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_4;            // 0x0318(0x0048)(HasGetValueTypeHash)
	class APawn*                                  CallFunc_GetPawn_ReturnValue_1;                    // 0x0360(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_1;                          // 0x0368(0x0010)(ReferenceParm)
	class ABP_ResidentCharacter_C*                K2Node_DynamicCast_AsBP_Resident_Character_1;      // 0x0378(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0380(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_381[0x7];                                      // 0x0381(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Format_ReturnValue_1;                     // 0x0388(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_5;            // 0x0398(0x0048)(HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue_1;        // 0x03E0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APlayerControllerJP_MatchBP_C*          K2Node_DynamicCast_AsPlayer_Controller_JP_Match_BP_1; // 0x03E8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x03F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x03F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3F2[0x6];                                      // 0x03F2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerControllerJP_MatchBP_C*          CallFunc_Array_Get_Item_3;                         // 0x03F8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_1;    // 0x0400(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_401[0x7];                                      // 0x0401(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_6;            // 0x0408(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_2;                          // 0x0450(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue_2;                     // 0x0460(0x0010)()
};
static_assert(alignof(TwitchVoteManager_C_FormatWinMessage) == 0x000008, "Wrong alignment on TwitchVoteManager_C_FormatWinMessage");
static_assert(sizeof(TwitchVoteManager_C_FormatWinMessage) == 0x000470, "Wrong size on TwitchVoteManager_C_FormatWinMessage");
static_assert(offsetof(TwitchVoteManager_C_FormatWinMessage, WinningTeam) == 0x000000, "Member 'TwitchVoteManager_C_FormatWinMessage::WinningTeam' has a wrong offset!");
static_assert(offsetof(TwitchVoteManager_C_FormatWinMessage, Message) == 0x000038, "Member 'TwitchVoteManager_C_FormatWinMessage::Message' has a wrong offset!");
static_assert(offsetof(TwitchVoteManager_C_FormatWinMessage, LStreamerName) == 0x000048, "Member 'TwitchVoteManager_C_FormatWinMessage::LStreamerName' has a wrong offset!");
static_assert(offsetof(TwitchVoteManager_C_FormatWinMessage, Temp_int_Variable) == 0x000058, "Member 'TwitchVoteManager_C_FormatWinMessage::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(TwitchVoteManager_C_FormatWinMessage, Temp_text_Variable) == 0x000060, "Member 'TwitchVoteManager_C_FormatWinMessage::Temp_text_Variable' has a wrong offset!");
static_assert(offsetof(TwitchVoteManager_C_FormatWinMessage, Temp_text_Variable_1) == 0x000070, "Member 'TwitchVoteManager_C_FormatWinMessage::Temp_text_Variable_1' has a wrong offset!");
static_assert(offsetof(TwitchVoteManager_C_FormatWinMessage, Temp_text_Variable_2) == 0x000080, "Member 'TwitchVoteManager_C_FormatWinMessage::Temp_text_Variable_2' has a wrong offset!");
static_assert(offsetof(TwitchVoteManager_C_FormatWinMessage, Temp_byte_Variable) == 0x000090, "Member 'TwitchVoteManager_C_FormatWinMessage::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(TwitchVoteManager_C_FormatWinMessage, Temp_text_Variable_3) == 0x000098, "Member 'TwitchVoteManager_C_FormatWinMessage::Temp_text_Variable_3' has a wrong offset!");
static_assert(offsetof(TwitchVoteManager_C_FormatWinMessage, Temp_text_Variable_4) == 0x0000A8, "Member 'TwitchVoteManager_C_FormatWinMessage::Temp_text_Variable_4' has a wrong offset!");
static_assert(offsetof(TwitchVoteManager_C_FormatWinMessage, Temp_text_Variable_5) == 0x0000B8, "Member 'TwitchVoteManager_C_FormatWinMessage::Temp_text_Variable_5' has a wrong offset!");
static_assert(offsetof(TwitchVoteManager_C_FormatWinMessage, Temp_int_Loop_Counter_Variable) == 0x0000C8, "Member 'TwitchVoteManager_C_FormatWinMessage::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(TwitchVoteManager_C_FormatWinMessage, CallFunc_Add_IntInt_ReturnValue) == 0x0000CC, "Member 'TwitchVoteManager_C_FormatWinMessage::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(TwitchVoteManager_C_FormatWinMessage, Temp_int_Array_Index_Variable) == 0x0000D0, "Member 'TwitchVoteManager_C_FormatWinMessage::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(TwitchVoteManager_C_FormatWinMessage, Temp_text_Variable_6) == 0x0000D8, "Member 'TwitchVoteManager_C_FormatWinMessage::Temp_text_Variable_6' has a wrong offset!");
static_assert(offsetof(TwitchVoteManager_C_FormatWinMessage, Temp_bool_Variable) == 0x0000E8, "Member 'TwitchVoteManager_C_FormatWinMessage::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(TwitchVoteManager_C_FormatWinMessage, CallFunc_Conv_ByteToText_ReturnValue) == 0x0000F0, "Member 'TwitchVoteManager_C_FormatWinMessage::CallFunc_Conv_ByteToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(TwitchVoteManager_C_FormatWinMessage, CallFunc_Array_Get_Item) == 0x000100, "Member 'TwitchVoteManager_C_FormatWinMessage::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(TwitchVoteManager_C_FormatWinMessage, K2Node_MakeStruct_FormatArgumentData) == 0x000108, "Member 'TwitchVoteManager_C_FormatWinMessage::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(TwitchVoteManager_C_FormatWinMessage, Temp_int_Loop_Counter_Variable_1) == 0x000150, "Member 'TwitchVoteManager_C_FormatWinMessage::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(TwitchVoteManager_C_FormatWinMessage, CallFunc_GetPlayersOfTeam_ReturnValue) == 0x000158, "Member 'TwitchVoteManager_C_FormatWinMessage::CallFunc_GetPlayersOfTeam_ReturnValue' has a wrong offset!");
static_assert(offsetof(TwitchVoteManager_C_FormatWinMessage, CallFunc_Add_IntInt_ReturnValue_1) == 0x000168, "Member 'TwitchVoteManager_C_FormatWinMessage::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(TwitchVoteManager_C_FormatWinMessage, CallFunc_Array_Length_ReturnValue) == 0x00016C, "Member 'TwitchVoteManager_C_FormatWinMessage::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(TwitchVoteManager_C_FormatWinMessage, CallFunc_Less_IntInt_ReturnValue) == 0x000170, "Member 'TwitchVoteManager_C_FormatWinMessage::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(TwitchVoteManager_C_FormatWinMessage, CallFunc_IsEmpty_ReturnValue) == 0x000171, "Member 'TwitchVoteManager_C_FormatWinMessage::CallFunc_IsEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(TwitchVoteManager_C_FormatWinMessage, CallFunc_Conv_StringToText_ReturnValue) == 0x000178, "Member 'TwitchVoteManager_C_FormatWinMessage::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(TwitchVoteManager_C_FormatWinMessage, K2Node_MakeStruct_FormatArgumentData_1) == 0x000188, "Member 'TwitchVoteManager_C_FormatWinMessage::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(TwitchVoteManager_C_FormatWinMessage, CallFunc_GetPlayersOfTeam_ReturnValue_1) == 0x0001D0, "Member 'TwitchVoteManager_C_FormatWinMessage::CallFunc_GetPlayersOfTeam_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(TwitchVoteManager_C_FormatWinMessage, CallFunc_Array_Get_Item_1) == 0x0001E0, "Member 'TwitchVoteManager_C_FormatWinMessage::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(TwitchVoteManager_C_FormatWinMessage, CallFunc_GetPawn_ReturnValue) == 0x0001E8, "Member 'TwitchVoteManager_C_FormatWinMessage::CallFunc_GetPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(TwitchVoteManager_C_FormatWinMessage, K2Node_Select_Default) == 0x0001F0, "Member 'TwitchVoteManager_C_FormatWinMessage::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(TwitchVoteManager_C_FormatWinMessage, K2Node_DynamicCast_AsBP_Resident_Character) == 0x000200, "Member 'TwitchVoteManager_C_FormatWinMessage::K2Node_DynamicCast_AsBP_Resident_Character' has a wrong offset!");
static_assert(offsetof(TwitchVoteManager_C_FormatWinMessage, K2Node_DynamicCast_bSuccess) == 0x000208, "Member 'TwitchVoteManager_C_FormatWinMessage::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(TwitchVoteManager_C_FormatWinMessage, K2Node_MakeStruct_FormatArgumentData_2) == 0x000210, "Member 'TwitchVoteManager_C_FormatWinMessage::K2Node_MakeStruct_FormatArgumentData_2' has a wrong offset!");
static_assert(offsetof(TwitchVoteManager_C_FormatWinMessage, K2Node_MakeArray_Array) == 0x000258, "Member 'TwitchVoteManager_C_FormatWinMessage::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(TwitchVoteManager_C_FormatWinMessage, CallFunc_Format_ReturnValue) == 0x000268, "Member 'TwitchVoteManager_C_FormatWinMessage::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(TwitchVoteManager_C_FormatWinMessage, CallFunc_GetPlayerController_ReturnValue) == 0x000278, "Member 'TwitchVoteManager_C_FormatWinMessage::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(TwitchVoteManager_C_FormatWinMessage, K2Node_MakeStruct_FormatArgumentData_3) == 0x000280, "Member 'TwitchVoteManager_C_FormatWinMessage::K2Node_MakeStruct_FormatArgumentData_3' has a wrong offset!");
static_assert(offsetof(TwitchVoteManager_C_FormatWinMessage, K2Node_DynamicCast_AsPlayer_Controller_JP_Match_BP) == 0x0002C8, "Member 'TwitchVoteManager_C_FormatWinMessage::K2Node_DynamicCast_AsPlayer_Controller_JP_Match_BP' has a wrong offset!");
static_assert(offsetof(TwitchVoteManager_C_FormatWinMessage, K2Node_DynamicCast_bSuccess_1) == 0x0002D0, "Member 'TwitchVoteManager_C_FormatWinMessage::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(TwitchVoteManager_C_FormatWinMessage, CallFunc_Array_Length_ReturnValue_1) == 0x0002D4, "Member 'TwitchVoteManager_C_FormatWinMessage::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(TwitchVoteManager_C_FormatWinMessage, CallFunc_Less_IntInt_ReturnValue_1) == 0x0002D8, "Member 'TwitchVoteManager_C_FormatWinMessage::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(TwitchVoteManager_C_FormatWinMessage, CallFunc_MaxOfIntArray_IndexOfMaxValue) == 0x0002DC, "Member 'TwitchVoteManager_C_FormatWinMessage::CallFunc_MaxOfIntArray_IndexOfMaxValue' has a wrong offset!");
static_assert(offsetof(TwitchVoteManager_C_FormatWinMessage, CallFunc_MaxOfIntArray_MaxValue) == 0x0002E0, "Member 'TwitchVoteManager_C_FormatWinMessage::CallFunc_MaxOfIntArray_MaxValue' has a wrong offset!");
static_assert(offsetof(TwitchVoteManager_C_FormatWinMessage, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x0002E4, "Member 'TwitchVoteManager_C_FormatWinMessage::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(TwitchVoteManager_C_FormatWinMessage, K2Node_Select_Default_1) == 0x0002E8, "Member 'TwitchVoteManager_C_FormatWinMessage::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(TwitchVoteManager_C_FormatWinMessage, Temp_int_Array_Index_Variable_1) == 0x0002F8, "Member 'TwitchVoteManager_C_FormatWinMessage::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(TwitchVoteManager_C_FormatWinMessage, K2Node_Select_Default_2) == 0x000300, "Member 'TwitchVoteManager_C_FormatWinMessage::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(TwitchVoteManager_C_FormatWinMessage, CallFunc_Array_Get_Item_2) == 0x000310, "Member 'TwitchVoteManager_C_FormatWinMessage::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(TwitchVoteManager_C_FormatWinMessage, K2Node_MakeStruct_FormatArgumentData_4) == 0x000318, "Member 'TwitchVoteManager_C_FormatWinMessage::K2Node_MakeStruct_FormatArgumentData_4' has a wrong offset!");
static_assert(offsetof(TwitchVoteManager_C_FormatWinMessage, CallFunc_GetPawn_ReturnValue_1) == 0x000360, "Member 'TwitchVoteManager_C_FormatWinMessage::CallFunc_GetPawn_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(TwitchVoteManager_C_FormatWinMessage, K2Node_MakeArray_Array_1) == 0x000368, "Member 'TwitchVoteManager_C_FormatWinMessage::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(TwitchVoteManager_C_FormatWinMessage, K2Node_DynamicCast_AsBP_Resident_Character_1) == 0x000378, "Member 'TwitchVoteManager_C_FormatWinMessage::K2Node_DynamicCast_AsBP_Resident_Character_1' has a wrong offset!");
static_assert(offsetof(TwitchVoteManager_C_FormatWinMessage, K2Node_DynamicCast_bSuccess_2) == 0x000380, "Member 'TwitchVoteManager_C_FormatWinMessage::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(TwitchVoteManager_C_FormatWinMessage, CallFunc_Format_ReturnValue_1) == 0x000388, "Member 'TwitchVoteManager_C_FormatWinMessage::CallFunc_Format_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(TwitchVoteManager_C_FormatWinMessage, K2Node_MakeStruct_FormatArgumentData_5) == 0x000398, "Member 'TwitchVoteManager_C_FormatWinMessage::K2Node_MakeStruct_FormatArgumentData_5' has a wrong offset!");
static_assert(offsetof(TwitchVoteManager_C_FormatWinMessage, CallFunc_GetPlayerController_ReturnValue_1) == 0x0003E0, "Member 'TwitchVoteManager_C_FormatWinMessage::CallFunc_GetPlayerController_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(TwitchVoteManager_C_FormatWinMessage, K2Node_DynamicCast_AsPlayer_Controller_JP_Match_BP_1) == 0x0003E8, "Member 'TwitchVoteManager_C_FormatWinMessage::K2Node_DynamicCast_AsPlayer_Controller_JP_Match_BP_1' has a wrong offset!");
static_assert(offsetof(TwitchVoteManager_C_FormatWinMessage, K2Node_DynamicCast_bSuccess_3) == 0x0003F0, "Member 'TwitchVoteManager_C_FormatWinMessage::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(TwitchVoteManager_C_FormatWinMessage, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x0003F1, "Member 'TwitchVoteManager_C_FormatWinMessage::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(TwitchVoteManager_C_FormatWinMessage, CallFunc_Array_Get_Item_3) == 0x0003F8, "Member 'TwitchVoteManager_C_FormatWinMessage::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(TwitchVoteManager_C_FormatWinMessage, CallFunc_EqualEqual_ObjectObject_ReturnValue_1) == 0x000400, "Member 'TwitchVoteManager_C_FormatWinMessage::CallFunc_EqualEqual_ObjectObject_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(TwitchVoteManager_C_FormatWinMessage, K2Node_MakeStruct_FormatArgumentData_6) == 0x000408, "Member 'TwitchVoteManager_C_FormatWinMessage::K2Node_MakeStruct_FormatArgumentData_6' has a wrong offset!");
static_assert(offsetof(TwitchVoteManager_C_FormatWinMessage, K2Node_MakeArray_Array_2) == 0x000450, "Member 'TwitchVoteManager_C_FormatWinMessage::K2Node_MakeArray_Array_2' has a wrong offset!");
static_assert(offsetof(TwitchVoteManager_C_FormatWinMessage, CallFunc_Format_ReturnValue_2) == 0x000460, "Member 'TwitchVoteManager_C_FormatWinMessage::CallFunc_Format_ReturnValue_2' has a wrong offset!");

// Function TwitchVoteManager.TwitchVoteManager_C.GetWinningTeam
// 0x0080 (0x0080 - 0x0000)
struct TwitchVoteManager_C_GetWinningTeam final
{
public:
	struct FTeam                                  Team;                                              // 0x0000(0x0038)(Parm, OutParm, NoDestructor)
	int32                                         CallFunc_MaxOfIntArray_IndexOfMaxValue;            // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_MaxOfIntArray_MaxValue;                   // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_Conv_IntToByte_ReturnValue;               // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTeam                                  CallFunc_GetTeam_ReturnValue;                      // 0x0048(0x0038)(ConstParm, NoDestructor)
};
static_assert(alignof(TwitchVoteManager_C_GetWinningTeam) == 0x000008, "Wrong alignment on TwitchVoteManager_C_GetWinningTeam");
static_assert(sizeof(TwitchVoteManager_C_GetWinningTeam) == 0x000080, "Wrong size on TwitchVoteManager_C_GetWinningTeam");
static_assert(offsetof(TwitchVoteManager_C_GetWinningTeam, Team) == 0x000000, "Member 'TwitchVoteManager_C_GetWinningTeam::Team' has a wrong offset!");
static_assert(offsetof(TwitchVoteManager_C_GetWinningTeam, CallFunc_MaxOfIntArray_IndexOfMaxValue) == 0x000038, "Member 'TwitchVoteManager_C_GetWinningTeam::CallFunc_MaxOfIntArray_IndexOfMaxValue' has a wrong offset!");
static_assert(offsetof(TwitchVoteManager_C_GetWinningTeam, CallFunc_MaxOfIntArray_MaxValue) == 0x00003C, "Member 'TwitchVoteManager_C_GetWinningTeam::CallFunc_MaxOfIntArray_MaxValue' has a wrong offset!");
static_assert(offsetof(TwitchVoteManager_C_GetWinningTeam, CallFunc_Conv_IntToByte_ReturnValue) == 0x000040, "Member 'TwitchVoteManager_C_GetWinningTeam::CallFunc_Conv_IntToByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(TwitchVoteManager_C_GetWinningTeam, CallFunc_GetTeam_ReturnValue) == 0x000048, "Member 'TwitchVoteManager_C_GetWinningTeam::CallFunc_GetTeam_ReturnValue' has a wrong offset!");

// Function TwitchVoteManager.TwitchVoteManager_C.IsDraw
// 0x000C (0x000C - 0x0000)
struct TwitchVoteManager_C_IsDraw final
{
public:
	bool                                          Draw;                                              // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x2];                                        // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_1;          // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TwitchVoteManager_C_IsDraw) == 0x000004, "Wrong alignment on TwitchVoteManager_C_IsDraw");
static_assert(sizeof(TwitchVoteManager_C_IsDraw) == 0x00000C, "Wrong size on TwitchVoteManager_C_IsDraw");
static_assert(offsetof(TwitchVoteManager_C_IsDraw, Draw) == 0x000000, "Member 'TwitchVoteManager_C_IsDraw::Draw' has a wrong offset!");
static_assert(offsetof(TwitchVoteManager_C_IsDraw, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000001, "Member 'TwitchVoteManager_C_IsDraw::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(TwitchVoteManager_C_IsDraw, CallFunc_Array_Length_ReturnValue) == 0x000004, "Member 'TwitchVoteManager_C_IsDraw::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(TwitchVoteManager_C_IsDraw, CallFunc_EqualEqual_IntInt_ReturnValue_1) == 0x000008, "Member 'TwitchVoteManager_C_IsDraw::CallFunc_EqualEqual_IntInt_ReturnValue_1' has a wrong offset!");

// Function TwitchVoteManager.TwitchVoteManager_C.Multi_UpdateWidget
// 0x0008 (0x0008 - 0x0000)
struct TwitchVoteManager_C_Multi_UpdateWidget final
{
public:
	ETeamType                                     Team;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Votes;                                             // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TwitchVoteManager_C_Multi_UpdateWidget) == 0x000004, "Wrong alignment on TwitchVoteManager_C_Multi_UpdateWidget");
static_assert(sizeof(TwitchVoteManager_C_Multi_UpdateWidget) == 0x000008, "Wrong size on TwitchVoteManager_C_Multi_UpdateWidget");
static_assert(offsetof(TwitchVoteManager_C_Multi_UpdateWidget, Team) == 0x000000, "Member 'TwitchVoteManager_C_Multi_UpdateWidget::Team' has a wrong offset!");
static_assert(offsetof(TwitchVoteManager_C_Multi_UpdateWidget, Votes) == 0x000004, "Member 'TwitchVoteManager_C_Multi_UpdateWidget::Votes' has a wrong offset!");

// Function TwitchVoteManager.TwitchVoteManager_C.OnFailure_D403CAE34F215B98F9EC60B91F41EDD9
// 0x0070 (0x0070 - 0x0000)
struct TwitchVoteManager_C_OnFailure_D403CAE34F215B98F9EC60B91F41EDD9 final
{
public:
	struct FTwitchAuthResponse                    AuthResponse;                                      // 0x0000(0x0048)(BlueprintVisible, BlueprintReadOnly, Parm)
	struct FTwitchError                           TwitchError;                                       // 0x0048(0x0028)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(TwitchVoteManager_C_OnFailure_D403CAE34F215B98F9EC60B91F41EDD9) == 0x000008, "Wrong alignment on TwitchVoteManager_C_OnFailure_D403CAE34F215B98F9EC60B91F41EDD9");
static_assert(sizeof(TwitchVoteManager_C_OnFailure_D403CAE34F215B98F9EC60B91F41EDD9) == 0x000070, "Wrong size on TwitchVoteManager_C_OnFailure_D403CAE34F215B98F9EC60B91F41EDD9");
static_assert(offsetof(TwitchVoteManager_C_OnFailure_D403CAE34F215B98F9EC60B91F41EDD9, AuthResponse) == 0x000000, "Member 'TwitchVoteManager_C_OnFailure_D403CAE34F215B98F9EC60B91F41EDD9::AuthResponse' has a wrong offset!");
static_assert(offsetof(TwitchVoteManager_C_OnFailure_D403CAE34F215B98F9EC60B91F41EDD9, TwitchError) == 0x000048, "Member 'TwitchVoteManager_C_OnFailure_D403CAE34F215B98F9EC60B91F41EDD9::TwitchError' has a wrong offset!");

// Function TwitchVoteManager.TwitchVoteManager_C.OnSuccess_D403CAE34F215B98F9EC60B91F41EDD9
// 0x0070 (0x0070 - 0x0000)
struct TwitchVoteManager_C_OnSuccess_D403CAE34F215B98F9EC60B91F41EDD9 final
{
public:
	struct FTwitchAuthResponse                    AuthResponse;                                      // 0x0000(0x0048)(BlueprintVisible, BlueprintReadOnly, Parm)
	struct FTwitchError                           TwitchError;                                       // 0x0048(0x0028)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(TwitchVoteManager_C_OnSuccess_D403CAE34F215B98F9EC60B91F41EDD9) == 0x000008, "Wrong alignment on TwitchVoteManager_C_OnSuccess_D403CAE34F215B98F9EC60B91F41EDD9");
static_assert(sizeof(TwitchVoteManager_C_OnSuccess_D403CAE34F215B98F9EC60B91F41EDD9) == 0x000070, "Wrong size on TwitchVoteManager_C_OnSuccess_D403CAE34F215B98F9EC60B91F41EDD9");
static_assert(offsetof(TwitchVoteManager_C_OnSuccess_D403CAE34F215B98F9EC60B91F41EDD9, AuthResponse) == 0x000000, "Member 'TwitchVoteManager_C_OnSuccess_D403CAE34F215B98F9EC60B91F41EDD9::AuthResponse' has a wrong offset!");
static_assert(offsetof(TwitchVoteManager_C_OnSuccess_D403CAE34F215B98F9EC60B91F41EDD9, TwitchError) == 0x000048, "Member 'TwitchVoteManager_C_OnSuccess_D403CAE34F215B98F9EC60B91F41EDD9::TwitchError' has a wrong offset!");

// Function TwitchVoteManager.TwitchVoteManager_C.OnTwitchConnected__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct TwitchVoteManager_C_OnTwitchConnected__DelegateSignature final
{
public:
	class APlayerControllerJP_MatchBP_C*          Controller;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TwitchVoteManager_C_OnTwitchConnected__DelegateSignature) == 0x000008, "Wrong alignment on TwitchVoteManager_C_OnTwitchConnected__DelegateSignature");
static_assert(sizeof(TwitchVoteManager_C_OnTwitchConnected__DelegateSignature) == 0x000008, "Wrong size on TwitchVoteManager_C_OnTwitchConnected__DelegateSignature");
static_assert(offsetof(TwitchVoteManager_C_OnTwitchConnected__DelegateSignature, Controller) == 0x000000, "Member 'TwitchVoteManager_C_OnTwitchConnected__DelegateSignature::Controller' has a wrong offset!");

// Function TwitchVoteManager.TwitchVoteManager_C.PrintThePlayerWhoHadAVoteStarted
// 0x0060 (0x0060 - 0x0000)
struct TwitchVoteManager_C_PrintThePlayerWhoHadAVoteStarted final
{
public:
	const class UObject*                          Object;                                            // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         InInt;                                             // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x0010(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetDisplayName_ReturnValue;               // 0x0020(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0030(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0040(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x0050(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(TwitchVoteManager_C_PrintThePlayerWhoHadAVoteStarted) == 0x000008, "Wrong alignment on TwitchVoteManager_C_PrintThePlayerWhoHadAVoteStarted");
static_assert(sizeof(TwitchVoteManager_C_PrintThePlayerWhoHadAVoteStarted) == 0x000060, "Wrong size on TwitchVoteManager_C_PrintThePlayerWhoHadAVoteStarted");
static_assert(offsetof(TwitchVoteManager_C_PrintThePlayerWhoHadAVoteStarted, Object) == 0x000000, "Member 'TwitchVoteManager_C_PrintThePlayerWhoHadAVoteStarted::Object' has a wrong offset!");
static_assert(offsetof(TwitchVoteManager_C_PrintThePlayerWhoHadAVoteStarted, InInt) == 0x000008, "Member 'TwitchVoteManager_C_PrintThePlayerWhoHadAVoteStarted::InInt' has a wrong offset!");
static_assert(offsetof(TwitchVoteManager_C_PrintThePlayerWhoHadAVoteStarted, CallFunc_Conv_IntToString_ReturnValue) == 0x000010, "Member 'TwitchVoteManager_C_PrintThePlayerWhoHadAVoteStarted::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(TwitchVoteManager_C_PrintThePlayerWhoHadAVoteStarted, CallFunc_GetDisplayName_ReturnValue) == 0x000020, "Member 'TwitchVoteManager_C_PrintThePlayerWhoHadAVoteStarted::CallFunc_GetDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(TwitchVoteManager_C_PrintThePlayerWhoHadAVoteStarted, CallFunc_Concat_StrStr_ReturnValue) == 0x000030, "Member 'TwitchVoteManager_C_PrintThePlayerWhoHadAVoteStarted::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(TwitchVoteManager_C_PrintThePlayerWhoHadAVoteStarted, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000040, "Member 'TwitchVoteManager_C_PrintThePlayerWhoHadAVoteStarted::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(TwitchVoteManager_C_PrintThePlayerWhoHadAVoteStarted, CallFunc_Concat_StrStr_ReturnValue_2) == 0x000050, "Member 'TwitchVoteManager_C_PrintThePlayerWhoHadAVoteStarted::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");

// Function TwitchVoteManager.TwitchVoteManager_C.ProcessTwitchVote
// 0x0078 (0x0078 - 0x0000)
struct TwitchVoteManager_C_ProcessTwitchVote final
{
public:
	class FString                                 Message;                                           // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Username;                                          // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 LMessage;                                          // 0x0020(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Conv_StringToInt_ReturnValue;             // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Len_ReturnValue;                          // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_Conv_IntToByte_ReturnValue;               // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetValidValue_ReturnValue;                // 0x003A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3B[0x1];                                       // 0x003B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Conv_StringToInt_ReturnValue_1;           // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsNumeric_ReturnValue;                    // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_1;             // 0x0045(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_46[0x2];                                       // 0x0046(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerControllerJP_MatchBP_C*          CallFunc_Array_Get_Item;                           // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetSubstring_ReturnValue;                 // 0x0058(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_69[0x3];                                       // 0x0069(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Find_ReturnValue;                   // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0072(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x0073(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TwitchVoteManager_C_ProcessTwitchVote) == 0x000008, "Wrong alignment on TwitchVoteManager_C_ProcessTwitchVote");
static_assert(sizeof(TwitchVoteManager_C_ProcessTwitchVote) == 0x000078, "Wrong size on TwitchVoteManager_C_ProcessTwitchVote");
static_assert(offsetof(TwitchVoteManager_C_ProcessTwitchVote, Message) == 0x000000, "Member 'TwitchVoteManager_C_ProcessTwitchVote::Message' has a wrong offset!");
static_assert(offsetof(TwitchVoteManager_C_ProcessTwitchVote, Username) == 0x000010, "Member 'TwitchVoteManager_C_ProcessTwitchVote::Username' has a wrong offset!");
static_assert(offsetof(TwitchVoteManager_C_ProcessTwitchVote, LMessage) == 0x000020, "Member 'TwitchVoteManager_C_ProcessTwitchVote::LMessage' has a wrong offset!");
static_assert(offsetof(TwitchVoteManager_C_ProcessTwitchVote, CallFunc_Conv_StringToInt_ReturnValue) == 0x000030, "Member 'TwitchVoteManager_C_ProcessTwitchVote::CallFunc_Conv_StringToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(TwitchVoteManager_C_ProcessTwitchVote, CallFunc_Len_ReturnValue) == 0x000034, "Member 'TwitchVoteManager_C_ProcessTwitchVote::CallFunc_Len_ReturnValue' has a wrong offset!");
static_assert(offsetof(TwitchVoteManager_C_ProcessTwitchVote, CallFunc_Conv_IntToByte_ReturnValue) == 0x000038, "Member 'TwitchVoteManager_C_ProcessTwitchVote::CallFunc_Conv_IntToByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(TwitchVoteManager_C_ProcessTwitchVote, CallFunc_Greater_IntInt_ReturnValue) == 0x000039, "Member 'TwitchVoteManager_C_ProcessTwitchVote::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(TwitchVoteManager_C_ProcessTwitchVote, CallFunc_GetValidValue_ReturnValue) == 0x00003A, "Member 'TwitchVoteManager_C_ProcessTwitchVote::CallFunc_GetValidValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(TwitchVoteManager_C_ProcessTwitchVote, Temp_int_Variable) == 0x00003C, "Member 'TwitchVoteManager_C_ProcessTwitchVote::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(TwitchVoteManager_C_ProcessTwitchVote, CallFunc_Conv_StringToInt_ReturnValue_1) == 0x000040, "Member 'TwitchVoteManager_C_ProcessTwitchVote::CallFunc_Conv_StringToInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(TwitchVoteManager_C_ProcessTwitchVote, CallFunc_IsNumeric_ReturnValue) == 0x000044, "Member 'TwitchVoteManager_C_ProcessTwitchVote::CallFunc_IsNumeric_ReturnValue' has a wrong offset!");
static_assert(offsetof(TwitchVoteManager_C_ProcessTwitchVote, CallFunc_Greater_IntInt_ReturnValue_1) == 0x000045, "Member 'TwitchVoteManager_C_ProcessTwitchVote::CallFunc_Greater_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(TwitchVoteManager_C_ProcessTwitchVote, CallFunc_Array_Get_Item) == 0x000048, "Member 'TwitchVoteManager_C_ProcessTwitchVote::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(TwitchVoteManager_C_ProcessTwitchVote, CallFunc_Add_IntInt_ReturnValue) == 0x000050, "Member 'TwitchVoteManager_C_ProcessTwitchVote::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(TwitchVoteManager_C_ProcessTwitchVote, CallFunc_Array_Add_ReturnValue) == 0x000054, "Member 'TwitchVoteManager_C_ProcessTwitchVote::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(TwitchVoteManager_C_ProcessTwitchVote, CallFunc_GetSubstring_ReturnValue) == 0x000058, "Member 'TwitchVoteManager_C_ProcessTwitchVote::CallFunc_GetSubstring_ReturnValue' has a wrong offset!");
static_assert(offsetof(TwitchVoteManager_C_ProcessTwitchVote, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000068, "Member 'TwitchVoteManager_C_ProcessTwitchVote::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(TwitchVoteManager_C_ProcessTwitchVote, CallFunc_Array_Find_ReturnValue) == 0x00006C, "Member 'TwitchVoteManager_C_ProcessTwitchVote::CallFunc_Array_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(TwitchVoteManager_C_ProcessTwitchVote, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000070, "Member 'TwitchVoteManager_C_ProcessTwitchVote::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(TwitchVoteManager_C_ProcessTwitchVote, CallFunc_BooleanAND_ReturnValue) == 0x000071, "Member 'TwitchVoteManager_C_ProcessTwitchVote::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(TwitchVoteManager_C_ProcessTwitchVote, CallFunc_BooleanAND_ReturnValue_1) == 0x000072, "Member 'TwitchVoteManager_C_ProcessTwitchVote::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(TwitchVoteManager_C_ProcessTwitchVote, CallFunc_BooleanAND_ReturnValue_2) == 0x000073, "Member 'TwitchVoteManager_C_ProcessTwitchVote::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");

// Function TwitchVoteManager.TwitchVoteManager_C.ReceiveEndPlay
// 0x0001 (0x0001 - 0x0000)
struct TwitchVoteManager_C_ReceiveEndPlay final
{
public:
	EEndPlayReason                                EndPlayReason;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TwitchVoteManager_C_ReceiveEndPlay) == 0x000001, "Wrong alignment on TwitchVoteManager_C_ReceiveEndPlay");
static_assert(sizeof(TwitchVoteManager_C_ReceiveEndPlay) == 0x000001, "Wrong size on TwitchVoteManager_C_ReceiveEndPlay");
static_assert(offsetof(TwitchVoteManager_C_ReceiveEndPlay, EndPlayReason) == 0x000000, "Member 'TwitchVoteManager_C_ReceiveEndPlay::EndPlayReason' has a wrong offset!");

// Function TwitchVoteManager.TwitchVoteManager_C.SetRewardAndMessage
// 0x0030 (0x0030 - 0x0000)
struct TwitchVoteManager_C_SetRewardAndMessage final
{
public:
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x0000(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0010(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0020(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(TwitchVoteManager_C_SetRewardAndMessage) == 0x000008, "Wrong alignment on TwitchVoteManager_C_SetRewardAndMessage");
static_assert(sizeof(TwitchVoteManager_C_SetRewardAndMessage) == 0x000030, "Wrong size on TwitchVoteManager_C_SetRewardAndMessage");
static_assert(offsetof(TwitchVoteManager_C_SetRewardAndMessage, CallFunc_Conv_TextToString_ReturnValue) == 0x000000, "Member 'TwitchVoteManager_C_SetRewardAndMessage::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(TwitchVoteManager_C_SetRewardAndMessage, CallFunc_Concat_StrStr_ReturnValue) == 0x000010, "Member 'TwitchVoteManager_C_SetRewardAndMessage::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(TwitchVoteManager_C_SetRewardAndMessage, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000020, "Member 'TwitchVoteManager_C_SetRewardAndMessage::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");

// Function TwitchVoteManager.TwitchVoteManager_C.StartVoteEvent
// 0x0001 (0x0001 - 0x0000)
struct TwitchVoteManager_C_StartVoteEvent final
{
public:
	E_TimeOfDay                                   TimeOfDay;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TwitchVoteManager_C_StartVoteEvent) == 0x000001, "Wrong alignment on TwitchVoteManager_C_StartVoteEvent");
static_assert(sizeof(TwitchVoteManager_C_StartVoteEvent) == 0x000001, "Wrong size on TwitchVoteManager_C_StartVoteEvent");
static_assert(offsetof(TwitchVoteManager_C_StartVoteEvent, TimeOfDay) == 0x000000, "Member 'TwitchVoteManager_C_StartVoteEvent::TimeOfDay' has a wrong offset!");

// Function TwitchVoteManager.TwitchVoteManager_C.VoteMessageReceived
// 0x0020 (0x0020 - 0x0000)
struct TwitchVoteManager_C_VoteMessageReceived final
{
public:
	class FString                                 Message;                                           // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Username;                                          // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(TwitchVoteManager_C_VoteMessageReceived) == 0x000008, "Wrong alignment on TwitchVoteManager_C_VoteMessageReceived");
static_assert(sizeof(TwitchVoteManager_C_VoteMessageReceived) == 0x000020, "Wrong size on TwitchVoteManager_C_VoteMessageReceived");
static_assert(offsetof(TwitchVoteManager_C_VoteMessageReceived, Message) == 0x000000, "Member 'TwitchVoteManager_C_VoteMessageReceived::Message' has a wrong offset!");
static_assert(offsetof(TwitchVoteManager_C_VoteMessageReceived, Username) == 0x000010, "Member 'TwitchVoteManager_C_VoteMessageReceived::Username' has a wrong offset!");

}

