#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WI_PerkAbilityContainer

#include "Basic.hpp"

#include "WI_PerkAbilityContainer_classes.hpp"
#include "WI_PerkAbilityContainer_parameters.hpp"


namespace SDK
{

// Function WI_PerkAbilityContainer.WI_PerkAbilityContainer_C.AddPerkAbility
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// TSoftClassPtr<class UClass>             WidgetToSpawn                                          (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
// class UGameplayAbilityIW*               GameplayAbility                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// double                                  AbilityAddedTimeStamp                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UClass*                           PerkAbilityClass                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UWI_PerkAbilityContainer_C::AddPerkAbility(TSoftClassPtr<class UClass> WidgetToSpawn, class UGameplayAbilityIW* GameplayAbility, double AbilityAddedTimeStamp, class UClass* PerkAbilityClass)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WI_PerkAbilityContainer_C", "AddPerkAbility");

	Params::WI_PerkAbilityContainer_C_AddPerkAbility Parms{};

	Parms.WidgetToSpawn = WidgetToSpawn;
	Parms.GameplayAbility = GameplayAbility;
	Parms.AbilityAddedTimeStamp = AbilityAddedTimeStamp;
	Parms.PerkAbilityClass = PerkAbilityClass;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WI_PerkAbilityContainer.WI_PerkAbilityContainer_C.Destruct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UWI_PerkAbilityContainer_C::Destruct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WI_PerkAbilityContainer_C", "Destruct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WI_PerkAbilityContainer.WI_PerkAbilityContainer_C.ExecuteUbergraph_WI_PerkAbilityContainer
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWI_PerkAbilityContainer_C::ExecuteUbergraph_WI_PerkAbilityContainer(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WI_PerkAbilityContainer_C", "ExecuteUbergraph_WI_PerkAbilityContainer");

	Params::WI_PerkAbilityContainer_C_ExecuteUbergraph_WI_PerkAbilityContainer Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WI_PerkAbilityContainer.WI_PerkAbilityContainer_C.GetPerkAbilityOfType
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TSoftClassPtr<class UClass>             AbilityPerk                                            (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
// class UWI_PerkAbility_C*                ExistingAbilityPerk                                    (Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UWI_PerkAbilityContainer_C::GetPerkAbilityOfType(TSoftClassPtr<class UClass> AbilityPerk, class UWI_PerkAbility_C** ExistingAbilityPerk)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WI_PerkAbilityContainer_C", "GetPerkAbilityOfType");

	Params::WI_PerkAbilityContainer_C_GetPerkAbilityOfType Parms{};

	Parms.AbilityPerk = AbilityPerk;

	UObject::ProcessEvent(Func, &Parms);

	if (ExistingAbilityPerk != nullptr)
		*ExistingAbilityPerk = Parms.ExistingAbilityPerk;
}


// Function WI_PerkAbilityContainer.WI_PerkAbilityContainer_C.OnLoaded_C207974446864F7F015D359C03B77D29
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// TSubclassOf<class UObject>              Loaded                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)

void UWI_PerkAbilityContainer_C::OnLoaded_C207974446864F7F015D359C03B77D29(TSubclassOf<class UObject> Loaded)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WI_PerkAbilityContainer_C", "OnLoaded_C207974446864F7F015D359C03B77D29");

	Params::WI_PerkAbilityContainer_C_OnLoaded_C207974446864F7F015D359C03B77D29 Parms{};

	Parms.Loaded = Loaded;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WI_PerkAbilityContainer.WI_PerkAbilityContainer_C.RemovePerkAbility
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UClass*                           AbilityToRemove                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UWI_PerkAbilityContainer_C::RemovePerkAbility(class UClass* AbilityToRemove)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WI_PerkAbilityContainer_C", "RemovePerkAbility");

	Params::WI_PerkAbilityContainer_C_RemovePerkAbility Parms{};

	Parms.AbilityToRemove = AbilityToRemove;

	UObject::ProcessEvent(Func, &Parms);
}

}

