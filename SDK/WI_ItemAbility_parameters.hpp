#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WI_ItemAbility

#include "Basic.hpp"

#include "UMG_structs.hpp"


namespace SDK::Params
{

// Function WI_ItemAbility.WI_ItemAbility_C.ExecuteUbergraph_WI_ItemAbility
// 0x0030 (0x0030 - 0x0000)
struct WI_ItemAbility_C_ExecuteUbergraph_WI_ItemAbility final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Get_ClassLog_Name_name;                   // 0x0008(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetDisplayName_ReturnValue;               // 0x0020(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(WI_ItemAbility_C_ExecuteUbergraph_WI_ItemAbility) == 0x000008, "Wrong alignment on WI_ItemAbility_C_ExecuteUbergraph_WI_ItemAbility");
static_assert(sizeof(WI_ItemAbility_C_ExecuteUbergraph_WI_ItemAbility) == 0x000030, "Wrong size on WI_ItemAbility_C_ExecuteUbergraph_WI_ItemAbility");
static_assert(offsetof(WI_ItemAbility_C_ExecuteUbergraph_WI_ItemAbility, EntryPoint) == 0x000000, "Member 'WI_ItemAbility_C_ExecuteUbergraph_WI_ItemAbility::EntryPoint' has a wrong offset!");
static_assert(offsetof(WI_ItemAbility_C_ExecuteUbergraph_WI_ItemAbility, CallFunc_Get_ClassLog_Name_name) == 0x000008, "Member 'WI_ItemAbility_C_ExecuteUbergraph_WI_ItemAbility::CallFunc_Get_ClassLog_Name_name' has a wrong offset!");
static_assert(offsetof(WI_ItemAbility_C_ExecuteUbergraph_WI_ItemAbility, K2Node_Event_IsDesignTime) == 0x000018, "Member 'WI_ItemAbility_C_ExecuteUbergraph_WI_ItemAbility::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(WI_ItemAbility_C_ExecuteUbergraph_WI_ItemAbility, CallFunc_GetDisplayName_ReturnValue) == 0x000020, "Member 'WI_ItemAbility_C_ExecuteUbergraph_WI_ItemAbility::CallFunc_GetDisplayName_ReturnValue' has a wrong offset!");

// Function WI_ItemAbility.WI_ItemAbility_C.GetCooldownText
// 0x0068 (0x0068 - 0x0000)
struct WI_ItemAbility_C_GetCooldownText final
{
public:
	double                                        TimeRemaining;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 ReturnValue;                                       // 0x0008(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Round_ReturnValue;                        // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x0030(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_FCeil_ReturnValue;                        // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0048(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_1;           // 0x0058(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(WI_ItemAbility_C_GetCooldownText) == 0x000008, "Wrong alignment on WI_ItemAbility_C_GetCooldownText");
static_assert(sizeof(WI_ItemAbility_C_GetCooldownText) == 0x000068, "Wrong size on WI_ItemAbility_C_GetCooldownText");
static_assert(offsetof(WI_ItemAbility_C_GetCooldownText, TimeRemaining) == 0x000000, "Member 'WI_ItemAbility_C_GetCooldownText::TimeRemaining' has a wrong offset!");
static_assert(offsetof(WI_ItemAbility_C_GetCooldownText, ReturnValue) == 0x000008, "Member 'WI_ItemAbility_C_GetCooldownText::ReturnValue' has a wrong offset!");
static_assert(offsetof(WI_ItemAbility_C_GetCooldownText, CallFunc_Less_DoubleDouble_ReturnValue) == 0x000018, "Member 'WI_ItemAbility_C_GetCooldownText::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WI_ItemAbility_C_GetCooldownText, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000020, "Member 'WI_ItemAbility_C_GetCooldownText::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WI_ItemAbility_C_GetCooldownText, CallFunc_Round_ReturnValue) == 0x000028, "Member 'WI_ItemAbility_C_GetCooldownText::CallFunc_Round_ReturnValue' has a wrong offset!");
static_assert(offsetof(WI_ItemAbility_C_GetCooldownText, CallFunc_Conv_IntToString_ReturnValue) == 0x000030, "Member 'WI_ItemAbility_C_GetCooldownText::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(WI_ItemAbility_C_GetCooldownText, CallFunc_FCeil_ReturnValue) == 0x000040, "Member 'WI_ItemAbility_C_GetCooldownText::CallFunc_FCeil_ReturnValue' has a wrong offset!");
static_assert(offsetof(WI_ItemAbility_C_GetCooldownText, CallFunc_Concat_StrStr_ReturnValue) == 0x000048, "Member 'WI_ItemAbility_C_GetCooldownText::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(WI_ItemAbility_C_GetCooldownText, CallFunc_Conv_IntToString_ReturnValue_1) == 0x000058, "Member 'WI_ItemAbility_C_GetCooldownText::CallFunc_Conv_IntToString_ReturnValue_1' has a wrong offset!");

// Function WI_ItemAbility.WI_ItemAbility_C.OnAbilityCooldownStarted
// 0x0030 (0x0030 - 0x0000)
struct WI_ItemAbility_C_OnAbilityCooldownStarted final
{
public:
	double                                        TimeRemaining;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CooldownDuration;                                  // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        PercentageDone;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FCeil_ReturnValue;                        // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x0020(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(WI_ItemAbility_C_OnAbilityCooldownStarted) == 0x000008, "Wrong alignment on WI_ItemAbility_C_OnAbilityCooldownStarted");
static_assert(sizeof(WI_ItemAbility_C_OnAbilityCooldownStarted) == 0x000030, "Wrong size on WI_ItemAbility_C_OnAbilityCooldownStarted");
static_assert(offsetof(WI_ItemAbility_C_OnAbilityCooldownStarted, TimeRemaining) == 0x000000, "Member 'WI_ItemAbility_C_OnAbilityCooldownStarted::TimeRemaining' has a wrong offset!");
static_assert(offsetof(WI_ItemAbility_C_OnAbilityCooldownStarted, CooldownDuration) == 0x000008, "Member 'WI_ItemAbility_C_OnAbilityCooldownStarted::CooldownDuration' has a wrong offset!");
static_assert(offsetof(WI_ItemAbility_C_OnAbilityCooldownStarted, PercentageDone) == 0x000010, "Member 'WI_ItemAbility_C_OnAbilityCooldownStarted::PercentageDone' has a wrong offset!");
static_assert(offsetof(WI_ItemAbility_C_OnAbilityCooldownStarted, CallFunc_FCeil_ReturnValue) == 0x000018, "Member 'WI_ItemAbility_C_OnAbilityCooldownStarted::CallFunc_FCeil_ReturnValue' has a wrong offset!");
static_assert(offsetof(WI_ItemAbility_C_OnAbilityCooldownStarted, CallFunc_Conv_IntToString_ReturnValue) == 0x000020, "Member 'WI_ItemAbility_C_OnAbilityCooldownStarted::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");

// Function WI_ItemAbility.WI_ItemAbility_C.OnCooldownTick
// 0x0030 (0x0030 - 0x0000)
struct WI_ItemAbility_C_OnCooldownTick final
{
public:
	double                                        TimeRemaining;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CooldownDuration;                                  // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        PercentageDone;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetCooldownText_ReturnValue;              // 0x0018(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	float                                         CallFunc_SetProgressBarFillFraction_InPercent_ImplicitCast; // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WI_ItemAbility_C_OnCooldownTick) == 0x000008, "Wrong alignment on WI_ItemAbility_C_OnCooldownTick");
static_assert(sizeof(WI_ItemAbility_C_OnCooldownTick) == 0x000030, "Wrong size on WI_ItemAbility_C_OnCooldownTick");
static_assert(offsetof(WI_ItemAbility_C_OnCooldownTick, TimeRemaining) == 0x000000, "Member 'WI_ItemAbility_C_OnCooldownTick::TimeRemaining' has a wrong offset!");
static_assert(offsetof(WI_ItemAbility_C_OnCooldownTick, CooldownDuration) == 0x000008, "Member 'WI_ItemAbility_C_OnCooldownTick::CooldownDuration' has a wrong offset!");
static_assert(offsetof(WI_ItemAbility_C_OnCooldownTick, PercentageDone) == 0x000010, "Member 'WI_ItemAbility_C_OnCooldownTick::PercentageDone' has a wrong offset!");
static_assert(offsetof(WI_ItemAbility_C_OnCooldownTick, CallFunc_GetCooldownText_ReturnValue) == 0x000018, "Member 'WI_ItemAbility_C_OnCooldownTick::CallFunc_GetCooldownText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WI_ItemAbility_C_OnCooldownTick, CallFunc_SetProgressBarFillFraction_InPercent_ImplicitCast) == 0x000028, "Member 'WI_ItemAbility_C_OnCooldownTick::CallFunc_SetProgressBarFillFraction_InPercent_ImplicitCast' has a wrong offset!");

// Function WI_ItemAbility.WI_ItemAbility_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct WI_ItemAbility_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WI_ItemAbility_C_PreConstruct) == 0x000001, "Wrong alignment on WI_ItemAbility_C_PreConstruct");
static_assert(sizeof(WI_ItemAbility_C_PreConstruct) == 0x000001, "Wrong size on WI_ItemAbility_C_PreConstruct");
static_assert(offsetof(WI_ItemAbility_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'WI_ItemAbility_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function WI_ItemAbility.WI_ItemAbility_C.SetCooldownText
// 0x0020 (0x0020 - 0x0000)
struct WI_ItemAbility_C_SetCooldownText final
{
public:
	class FString                                 Cooldown_Text;                                     // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0010(0x0010)()
};
static_assert(alignof(WI_ItemAbility_C_SetCooldownText) == 0x000008, "Wrong alignment on WI_ItemAbility_C_SetCooldownText");
static_assert(sizeof(WI_ItemAbility_C_SetCooldownText) == 0x000020, "Wrong size on WI_ItemAbility_C_SetCooldownText");
static_assert(offsetof(WI_ItemAbility_C_SetCooldownText, Cooldown_Text) == 0x000000, "Member 'WI_ItemAbility_C_SetCooldownText::Cooldown_Text' has a wrong offset!");
static_assert(offsetof(WI_ItemAbility_C_SetCooldownText, CallFunc_Conv_StringToText_ReturnValue) == 0x000010, "Member 'WI_ItemAbility_C_SetCooldownText::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");

// Function WI_ItemAbility.WI_ItemAbility_C.SetIconTexture
// 0x0028 (0x0028 - 0x0000)
struct WI_ItemAbility_C_SetIconTexture final
{
public:
	TSoftObjectPtr<class UTexture2D>              SoftTexture;                                       // 0x0000(0x0028)(BlueprintVisible, BlueprintReadOnly, Parm, UObjectWrapper, HasGetValueTypeHash)
};
static_assert(alignof(WI_ItemAbility_C_SetIconTexture) == 0x000008, "Wrong alignment on WI_ItemAbility_C_SetIconTexture");
static_assert(sizeof(WI_ItemAbility_C_SetIconTexture) == 0x000028, "Wrong size on WI_ItemAbility_C_SetIconTexture");
static_assert(offsetof(WI_ItemAbility_C_SetIconTexture, SoftTexture) == 0x000000, "Member 'WI_ItemAbility_C_SetIconTexture::SoftTexture' has a wrong offset!");

// Function WI_ItemAbility.WI_ItemAbility_C.SetInputAction
// 0x0008 (0x0008 - 0x0000)
struct WI_ItemAbility_C_SetInputAction final
{
public:
	class UInputAction*                           InputAction_0;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WI_ItemAbility_C_SetInputAction) == 0x000008, "Wrong alignment on WI_ItemAbility_C_SetInputAction");
static_assert(sizeof(WI_ItemAbility_C_SetInputAction) == 0x000008, "Wrong size on WI_ItemAbility_C_SetInputAction");
static_assert(offsetof(WI_ItemAbility_C_SetInputAction, InputAction_0) == 0x000000, "Member 'WI_ItemAbility_C_SetInputAction::InputAction_0' has a wrong offset!");

// Function WI_ItemAbility.WI_ItemAbility_C.SetProgressBarFillFraction
// 0x0020 (0x0020 - 0x0000)
struct WI_ItemAbility_C_SetProgressBarFillFraction final
{
public:
	float                                         InPercent;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_B_ImplicitCast;     // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetPercent_InPercent_ImplicitCast;        // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WI_ItemAbility_C_SetProgressBarFillFraction) == 0x000008, "Wrong alignment on WI_ItemAbility_C_SetProgressBarFillFraction");
static_assert(sizeof(WI_ItemAbility_C_SetProgressBarFillFraction) == 0x000020, "Wrong size on WI_ItemAbility_C_SetProgressBarFillFraction");
static_assert(offsetof(WI_ItemAbility_C_SetProgressBarFillFraction, InPercent) == 0x000000, "Member 'WI_ItemAbility_C_SetProgressBarFillFraction::InPercent' has a wrong offset!");
static_assert(offsetof(WI_ItemAbility_C_SetProgressBarFillFraction, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000008, "Member 'WI_ItemAbility_C_SetProgressBarFillFraction::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WI_ItemAbility_C_SetProgressBarFillFraction, CallFunc_Subtract_DoubleDouble_B_ImplicitCast) == 0x000010, "Member 'WI_ItemAbility_C_SetProgressBarFillFraction::CallFunc_Subtract_DoubleDouble_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WI_ItemAbility_C_SetProgressBarFillFraction, CallFunc_SetPercent_InPercent_ImplicitCast) == 0x000018, "Member 'WI_ItemAbility_C_SetProgressBarFillFraction::CallFunc_SetPercent_InPercent_ImplicitCast' has a wrong offset!");

// Function WI_ItemAbility.WI_ItemAbility_C.SetShowBoundAction
// 0x0005 (0x0005 - 0x0000)
struct WI_ItemAbility_C_SetShowBoundAction final
{
public:
	bool                                          Index_0;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WI_ItemAbility_C_SetShowBoundAction) == 0x000001, "Wrong alignment on WI_ItemAbility_C_SetShowBoundAction");
static_assert(sizeof(WI_ItemAbility_C_SetShowBoundAction) == 0x000005, "Wrong size on WI_ItemAbility_C_SetShowBoundAction");
static_assert(offsetof(WI_ItemAbility_C_SetShowBoundAction, Index_0) == 0x000000, "Member 'WI_ItemAbility_C_SetShowBoundAction::Index_0' has a wrong offset!");
static_assert(offsetof(WI_ItemAbility_C_SetShowBoundAction, Temp_bool_Variable) == 0x000001, "Member 'WI_ItemAbility_C_SetShowBoundAction::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WI_ItemAbility_C_SetShowBoundAction, Temp_byte_Variable) == 0x000002, "Member 'WI_ItemAbility_C_SetShowBoundAction::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WI_ItemAbility_C_SetShowBoundAction, Temp_byte_Variable_1) == 0x000003, "Member 'WI_ItemAbility_C_SetShowBoundAction::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WI_ItemAbility_C_SetShowBoundAction, K2Node_Select_Default) == 0x000004, "Member 'WI_ItemAbility_C_SetShowBoundAction::K2Node_Select_Default' has a wrong offset!");

// Function WI_ItemAbility.WI_ItemAbility_C.SetShowCooldownText
// 0x0005 (0x0005 - 0x0000)
struct WI_ItemAbility_C_SetShowCooldownText final
{
public:
	bool                                          Show;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WI_ItemAbility_C_SetShowCooldownText) == 0x000001, "Wrong alignment on WI_ItemAbility_C_SetShowCooldownText");
static_assert(sizeof(WI_ItemAbility_C_SetShowCooldownText) == 0x000005, "Wrong size on WI_ItemAbility_C_SetShowCooldownText");
static_assert(offsetof(WI_ItemAbility_C_SetShowCooldownText, Show) == 0x000000, "Member 'WI_ItemAbility_C_SetShowCooldownText::Show' has a wrong offset!");
static_assert(offsetof(WI_ItemAbility_C_SetShowCooldownText, Temp_bool_Variable) == 0x000001, "Member 'WI_ItemAbility_C_SetShowCooldownText::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WI_ItemAbility_C_SetShowCooldownText, Temp_byte_Variable) == 0x000002, "Member 'WI_ItemAbility_C_SetShowCooldownText::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WI_ItemAbility_C_SetShowCooldownText, Temp_byte_Variable_1) == 0x000003, "Member 'WI_ItemAbility_C_SetShowCooldownText::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WI_ItemAbility_C_SetShowCooldownText, K2Node_Select_Default) == 0x000004, "Member 'WI_ItemAbility_C_SetShowCooldownText::K2Node_Select_Default' has a wrong offset!");

// Function WI_ItemAbility.WI_ItemAbility_C.SetShowOverlay
// 0x0005 (0x0005 - 0x0000)
struct WI_ItemAbility_C_SetShowOverlay final
{
public:
	bool                                          Show;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WI_ItemAbility_C_SetShowOverlay) == 0x000001, "Wrong alignment on WI_ItemAbility_C_SetShowOverlay");
static_assert(sizeof(WI_ItemAbility_C_SetShowOverlay) == 0x000005, "Wrong size on WI_ItemAbility_C_SetShowOverlay");
static_assert(offsetof(WI_ItemAbility_C_SetShowOverlay, Show) == 0x000000, "Member 'WI_ItemAbility_C_SetShowOverlay::Show' has a wrong offset!");
static_assert(offsetof(WI_ItemAbility_C_SetShowOverlay, Temp_bool_Variable) == 0x000001, "Member 'WI_ItemAbility_C_SetShowOverlay::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WI_ItemAbility_C_SetShowOverlay, Temp_byte_Variable) == 0x000002, "Member 'WI_ItemAbility_C_SetShowOverlay::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WI_ItemAbility_C_SetShowOverlay, Temp_byte_Variable_1) == 0x000003, "Member 'WI_ItemAbility_C_SetShowOverlay::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WI_ItemAbility_C_SetShowOverlay, K2Node_Select_Default) == 0x000004, "Member 'WI_ItemAbility_C_SetShowOverlay::K2Node_Select_Default' has a wrong offset!");

}

