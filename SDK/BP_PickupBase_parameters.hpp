#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_PickupBase

#include "Basic.hpp"

#include "GameplayTags_structs.hpp"
#include "PhysicsCore_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "SlateCore_structs.hpp"
#include "GameplayAbilities_structs.hpp"
#include "JP_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BP_PickupBase.BP_PickupBase_C.Add Ammo
// 0x0014 (0x0014 - 0x0000)
struct BP_PickupBase_C_Add_Ammo final
{
public:
	int32                                         AmmoCount;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetTagStackCount_ReturnValue;             // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ContainsTagStack_ReturnValue;             // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PickupBase_C_Add_Ammo) == 0x000004, "Wrong alignment on BP_PickupBase_C_Add_Ammo");
static_assert(sizeof(BP_PickupBase_C_Add_Ammo) == 0x000014, "Wrong size on BP_PickupBase_C_Add_Ammo");
static_assert(offsetof(BP_PickupBase_C_Add_Ammo, AmmoCount) == 0x000000, "Member 'BP_PickupBase_C_Add_Ammo::AmmoCount' has a wrong offset!");
static_assert(offsetof(BP_PickupBase_C_Add_Ammo, CallFunc_Subtract_IntInt_ReturnValue) == 0x000004, "Member 'BP_PickupBase_C_Add_Ammo::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PickupBase_C_Add_Ammo, CallFunc_GetTagStackCount_ReturnValue) == 0x000008, "Member 'BP_PickupBase_C_Add_Ammo::CallFunc_GetTagStackCount_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PickupBase_C_Add_Ammo, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x00000C, "Member 'BP_PickupBase_C_Add_Ammo::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PickupBase_C_Add_Ammo, CallFunc_ContainsTagStack_ReturnValue) == 0x000010, "Member 'BP_PickupBase_C_Add_Ammo::CallFunc_ContainsTagStack_ReturnValue' has a wrong offset!");

// Function BP_PickupBase.BP_PickupBase_C.AddNewItem
// 0x0040 (0x0040 - 0x0000)
struct BP_PickupBase_C_AddNewItem final
{
public:
	class UInventoryComponent*                    Inventory_0;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UItemInstance*                          ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash)
	TSoftObjectPtr<class UItemDefinition>         CallFunc_Conv_ObjectToSoftObjectReference_ReturnValue; // 0x0010(0x0028)(UObjectWrapper, HasGetValueTypeHash)
	class UItemInstance*                          CallFunc_AddItemDefinition_ReturnValue;            // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PickupBase_C_AddNewItem) == 0x000008, "Wrong alignment on BP_PickupBase_C_AddNewItem");
static_assert(sizeof(BP_PickupBase_C_AddNewItem) == 0x000040, "Wrong size on BP_PickupBase_C_AddNewItem");
static_assert(offsetof(BP_PickupBase_C_AddNewItem, Inventory_0) == 0x000000, "Member 'BP_PickupBase_C_AddNewItem::Inventory_0' has a wrong offset!");
static_assert(offsetof(BP_PickupBase_C_AddNewItem, ReturnValue) == 0x000008, "Member 'BP_PickupBase_C_AddNewItem::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PickupBase_C_AddNewItem, CallFunc_Conv_ObjectToSoftObjectReference_ReturnValue) == 0x000010, "Member 'BP_PickupBase_C_AddNewItem::CallFunc_Conv_ObjectToSoftObjectReference_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PickupBase_C_AddNewItem, CallFunc_AddItemDefinition_ReturnValue) == 0x000038, "Member 'BP_PickupBase_C_AddNewItem::CallFunc_AddItemDefinition_ReturnValue' has a wrong offset!");

// Function BP_PickupBase.BP_PickupBase_C.AmmoInPickup
// 0x000C (0x000C - 0x0000)
struct BP_PickupBase_C_AmmoInPickup final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetTagStackCount_ReturnValue;             // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ContainsTagStack_ReturnValue;             // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PickupBase_C_AmmoInPickup) == 0x000004, "Wrong alignment on BP_PickupBase_C_AmmoInPickup");
static_assert(sizeof(BP_PickupBase_C_AmmoInPickup) == 0x00000C, "Wrong size on BP_PickupBase_C_AmmoInPickup");
static_assert(offsetof(BP_PickupBase_C_AmmoInPickup, ReturnValue) == 0x000000, "Member 'BP_PickupBase_C_AmmoInPickup::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PickupBase_C_AmmoInPickup, CallFunc_GetTagStackCount_ReturnValue) == 0x000004, "Member 'BP_PickupBase_C_AmmoInPickup::CallFunc_GetTagStackCount_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PickupBase_C_AmmoInPickup, CallFunc_ContainsTagStack_ReturnValue) == 0x000008, "Member 'BP_PickupBase_C_AmmoInPickup::CallFunc_ContainsTagStack_ReturnValue' has a wrong offset!");

// Function BP_PickupBase.BP_PickupBase_C.AssignCacheToItem
// 0x0040 (0x0040 - 0x0000)
struct BP_PickupBase_C_AssignCacheToItem final
{
public:
	class UItemInstance*                          Item;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FGameplayTag>                   CallFunc_Map_Keys_Keys;                            // 0x0018(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           CallFunc_Array_Get_Item;                           // 0x002C(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_35[0x3];                                       // 0x0035(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Map_Find_Value;                           // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PickupBase_C_AssignCacheToItem) == 0x000008, "Wrong alignment on BP_PickupBase_C_AssignCacheToItem");
static_assert(sizeof(BP_PickupBase_C_AssignCacheToItem) == 0x000040, "Wrong size on BP_PickupBase_C_AssignCacheToItem");
static_assert(offsetof(BP_PickupBase_C_AssignCacheToItem, Item) == 0x000000, "Member 'BP_PickupBase_C_AssignCacheToItem::Item' has a wrong offset!");
static_assert(offsetof(BP_PickupBase_C_AssignCacheToItem, Temp_int_Array_Index_Variable) == 0x000008, "Member 'BP_PickupBase_C_AssignCacheToItem::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_PickupBase_C_AssignCacheToItem, Temp_int_Loop_Counter_Variable) == 0x00000C, "Member 'BP_PickupBase_C_AssignCacheToItem::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_PickupBase_C_AssignCacheToItem, CallFunc_Add_IntInt_ReturnValue) == 0x000010, "Member 'BP_PickupBase_C_AssignCacheToItem::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PickupBase_C_AssignCacheToItem, CallFunc_Map_Keys_Keys) == 0x000018, "Member 'BP_PickupBase_C_AssignCacheToItem::CallFunc_Map_Keys_Keys' has a wrong offset!");
static_assert(offsetof(BP_PickupBase_C_AssignCacheToItem, CallFunc_Array_Length_ReturnValue) == 0x000028, "Member 'BP_PickupBase_C_AssignCacheToItem::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PickupBase_C_AssignCacheToItem, CallFunc_Array_Get_Item) == 0x00002C, "Member 'BP_PickupBase_C_AssignCacheToItem::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_PickupBase_C_AssignCacheToItem, CallFunc_Less_IntInt_ReturnValue) == 0x000034, "Member 'BP_PickupBase_C_AssignCacheToItem::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PickupBase_C_AssignCacheToItem, CallFunc_Map_Find_Value) == 0x000038, "Member 'BP_PickupBase_C_AssignCacheToItem::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BP_PickupBase_C_AssignCacheToItem, CallFunc_Map_Find_ReturnValue) == 0x00003C, "Member 'BP_PickupBase_C_AssignCacheToItem::CallFunc_Map_Find_ReturnValue' has a wrong offset!");

// Function BP_PickupBase.BP_PickupBase_C.BndEvt__BP_PickupBase_StaticMeshComponent_K2Node_ComponentBoundEvent_0_ComponentSleepSignature__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct BP_PickupBase_C_BndEvt__BP_PickupBase_StaticMeshComponent_K2Node_ComponentBoundEvent_0_ComponentSleepSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    SleepingComponent;                                 // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   BoneName;                                          // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PickupBase_C_BndEvt__BP_PickupBase_StaticMeshComponent_K2Node_ComponentBoundEvent_0_ComponentSleepSignature__DelegateSignature) == 0x000008, "Wrong alignment on BP_PickupBase_C_BndEvt__BP_PickupBase_StaticMeshComponent_K2Node_ComponentBoundEvent_0_ComponentSleepSignature__DelegateSignature");
static_assert(sizeof(BP_PickupBase_C_BndEvt__BP_PickupBase_StaticMeshComponent_K2Node_ComponentBoundEvent_0_ComponentSleepSignature__DelegateSignature) == 0x000010, "Wrong size on BP_PickupBase_C_BndEvt__BP_PickupBase_StaticMeshComponent_K2Node_ComponentBoundEvent_0_ComponentSleepSignature__DelegateSignature");
static_assert(offsetof(BP_PickupBase_C_BndEvt__BP_PickupBase_StaticMeshComponent_K2Node_ComponentBoundEvent_0_ComponentSleepSignature__DelegateSignature, SleepingComponent) == 0x000000, "Member 'BP_PickupBase_C_BndEvt__BP_PickupBase_StaticMeshComponent_K2Node_ComponentBoundEvent_0_ComponentSleepSignature__DelegateSignature::SleepingComponent' has a wrong offset!");
static_assert(offsetof(BP_PickupBase_C_BndEvt__BP_PickupBase_StaticMeshComponent_K2Node_ComponentBoundEvent_0_ComponentSleepSignature__DelegateSignature, BoneName) == 0x000008, "Member 'BP_PickupBase_C_BndEvt__BP_PickupBase_StaticMeshComponent_K2Node_ComponentBoundEvent_0_ComponentSleepSignature__DelegateSignature::BoneName' has a wrong offset!");

// Function BP_PickupBase.BP_PickupBase_C.CalculateAmmoToAdd
// 0x0018 (0x0018 - 0x0000)
struct BP_PickupBase_C_CalculateAmmoToAdd final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_AmmoInPickup_ReturnValue;                 // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetTagStackCount_ReturnValue;             // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetTagStackCount_ReturnValue_1;           // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_MathExpression_ReturnValue;                 // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PickupBase_C_CalculateAmmoToAdd) == 0x000004, "Wrong alignment on BP_PickupBase_C_CalculateAmmoToAdd");
static_assert(sizeof(BP_PickupBase_C_CalculateAmmoToAdd) == 0x000018, "Wrong size on BP_PickupBase_C_CalculateAmmoToAdd");
static_assert(offsetof(BP_PickupBase_C_CalculateAmmoToAdd, ReturnValue) == 0x000000, "Member 'BP_PickupBase_C_CalculateAmmoToAdd::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PickupBase_C_CalculateAmmoToAdd, CallFunc_AmmoInPickup_ReturnValue) == 0x000004, "Member 'BP_PickupBase_C_CalculateAmmoToAdd::CallFunc_AmmoInPickup_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PickupBase_C_CalculateAmmoToAdd, CallFunc_GetTagStackCount_ReturnValue) == 0x000008, "Member 'BP_PickupBase_C_CalculateAmmoToAdd::CallFunc_GetTagStackCount_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PickupBase_C_CalculateAmmoToAdd, CallFunc_GetTagStackCount_ReturnValue_1) == 0x00000C, "Member 'BP_PickupBase_C_CalculateAmmoToAdd::CallFunc_GetTagStackCount_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PickupBase_C_CalculateAmmoToAdd, K2Node_MathExpression_ReturnValue) == 0x000010, "Member 'BP_PickupBase_C_CalculateAmmoToAdd::K2Node_MathExpression_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PickupBase_C_CalculateAmmoToAdd, CallFunc_NotEqual_IntInt_ReturnValue) == 0x000014, "Member 'BP_PickupBase_C_CalculateAmmoToAdd::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");

// Function BP_PickupBase.BP_PickupBase_C.CanActivateTrap
// 0x0001 (0x0001 - 0x0000)
struct BP_PickupBase_C_CanActivateTrap final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PickupBase_C_CanActivateTrap) == 0x000001, "Wrong alignment on BP_PickupBase_C_CanActivateTrap");
static_assert(sizeof(BP_PickupBase_C_CanActivateTrap) == 0x000001, "Wrong size on BP_PickupBase_C_CanActivateTrap");
static_assert(offsetof(BP_PickupBase_C_CanActivateTrap, ReturnValue) == 0x000000, "Member 'BP_PickupBase_C_CanActivateTrap::ReturnValue' has a wrong offset!");

// Function BP_PickupBase.BP_PickupBase_C.CancelInteraction
// 0x0008 (0x0008 - 0x0000)
struct BP_PickupBase_C_CancelInteraction final
{
public:
	class UPrimitiveComponent*                    InteractionComponent;                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PickupBase_C_CancelInteraction) == 0x000008, "Wrong alignment on BP_PickupBase_C_CancelInteraction");
static_assert(sizeof(BP_PickupBase_C_CancelInteraction) == 0x000008, "Wrong size on BP_PickupBase_C_CancelInteraction");
static_assert(offsetof(BP_PickupBase_C_CancelInteraction, InteractionComponent) == 0x000000, "Member 'BP_PickupBase_C_CancelInteraction::InteractionComponent' has a wrong offset!");

// Function BP_PickupBase.BP_PickupBase_C.CheckIfItemAlreadyInInventory
// 0x0050 (0x0050 - 0x0000)
struct BP_PickupBase_C_CheckIfItemAlreadyInInventory final
{
public:
	class AActor*                                 InteractingActor_0;                                // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          ItemAlreadyInInventory;                            // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UInventoryComponent*                    CallFunc_GetComponentByClass_ReturnValue;          // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UItemDefinition>         CallFunc_Conv_ObjectToSoftObjectReference_ReturnValue; // 0x0020(0x0028)(UObjectWrapper, HasGetValueTypeHash)
	class UItemInstance*                          CallFunc_GetFirstItemOfType_ReturnValue;           // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PickupBase_C_CheckIfItemAlreadyInInventory) == 0x000008, "Wrong alignment on BP_PickupBase_C_CheckIfItemAlreadyInInventory");
static_assert(sizeof(BP_PickupBase_C_CheckIfItemAlreadyInInventory) == 0x000050, "Wrong size on BP_PickupBase_C_CheckIfItemAlreadyInInventory");
static_assert(offsetof(BP_PickupBase_C_CheckIfItemAlreadyInInventory, InteractingActor_0) == 0x000000, "Member 'BP_PickupBase_C_CheckIfItemAlreadyInInventory::InteractingActor_0' has a wrong offset!");
static_assert(offsetof(BP_PickupBase_C_CheckIfItemAlreadyInInventory, ItemAlreadyInInventory) == 0x000008, "Member 'BP_PickupBase_C_CheckIfItemAlreadyInInventory::ItemAlreadyInInventory' has a wrong offset!");
static_assert(offsetof(BP_PickupBase_C_CheckIfItemAlreadyInInventory, CallFunc_GetComponentByClass_ReturnValue) == 0x000010, "Member 'BP_PickupBase_C_CheckIfItemAlreadyInInventory::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PickupBase_C_CheckIfItemAlreadyInInventory, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'BP_PickupBase_C_CheckIfItemAlreadyInInventory::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PickupBase_C_CheckIfItemAlreadyInInventory, CallFunc_Conv_ObjectToSoftObjectReference_ReturnValue) == 0x000020, "Member 'BP_PickupBase_C_CheckIfItemAlreadyInInventory::CallFunc_Conv_ObjectToSoftObjectReference_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PickupBase_C_CheckIfItemAlreadyInInventory, CallFunc_GetFirstItemOfType_ReturnValue) == 0x000048, "Member 'BP_PickupBase_C_CheckIfItemAlreadyInInventory::CallFunc_GetFirstItemOfType_ReturnValue' has a wrong offset!");

// Function BP_PickupBase.BP_PickupBase_C.DisplayFullAmmoMessage_Auth
// 0x0118 (0x0118 - 0x0000)
struct BP_PickupBase_C_DisplayFullAmmoMessage_Auth final
{
public:
	class ABP_ResidentCharacter_C*                BP_ResidentCharacter;                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AController*                            CallFunc_GetController_ReturnValue;                // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      K2Node_DynamicCast_AsPlayer_Controller;            // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0020(0x0048)(HasGetValueTypeHash)
	TScriptInterface<class II_PlayerControllerMessage_C> K2Node_DynamicCast_AsI_Player_Controller_Message;  // 0x0068(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_79[0x7];                                       // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0080(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0090(0x0010)()
	class FText                                   CallFunc_TextToUpper_ReturnValue;                  // 0x00A0(0x0010)()
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x00B0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FPlayerMessage                         K2Node_MakeStruct_PlayerMessage;                   // 0x00C0(0x0058)()
};
static_assert(alignof(BP_PickupBase_C_DisplayFullAmmoMessage_Auth) == 0x000008, "Wrong alignment on BP_PickupBase_C_DisplayFullAmmoMessage_Auth");
static_assert(sizeof(BP_PickupBase_C_DisplayFullAmmoMessage_Auth) == 0x000118, "Wrong size on BP_PickupBase_C_DisplayFullAmmoMessage_Auth");
static_assert(offsetof(BP_PickupBase_C_DisplayFullAmmoMessage_Auth, BP_ResidentCharacter) == 0x000000, "Member 'BP_PickupBase_C_DisplayFullAmmoMessage_Auth::BP_ResidentCharacter' has a wrong offset!");
static_assert(offsetof(BP_PickupBase_C_DisplayFullAmmoMessage_Auth, CallFunc_GetController_ReturnValue) == 0x000008, "Member 'BP_PickupBase_C_DisplayFullAmmoMessage_Auth::CallFunc_GetController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PickupBase_C_DisplayFullAmmoMessage_Auth, K2Node_DynamicCast_AsPlayer_Controller) == 0x000010, "Member 'BP_PickupBase_C_DisplayFullAmmoMessage_Auth::K2Node_DynamicCast_AsPlayer_Controller' has a wrong offset!");
static_assert(offsetof(BP_PickupBase_C_DisplayFullAmmoMessage_Auth, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_PickupBase_C_DisplayFullAmmoMessage_Auth::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_PickupBase_C_DisplayFullAmmoMessage_Auth, K2Node_MakeStruct_FormatArgumentData) == 0x000020, "Member 'BP_PickupBase_C_DisplayFullAmmoMessage_Auth::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BP_PickupBase_C_DisplayFullAmmoMessage_Auth, K2Node_DynamicCast_AsI_Player_Controller_Message) == 0x000068, "Member 'BP_PickupBase_C_DisplayFullAmmoMessage_Auth::K2Node_DynamicCast_AsI_Player_Controller_Message' has a wrong offset!");
static_assert(offsetof(BP_PickupBase_C_DisplayFullAmmoMessage_Auth, K2Node_DynamicCast_bSuccess_1) == 0x000078, "Member 'BP_PickupBase_C_DisplayFullAmmoMessage_Auth::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_PickupBase_C_DisplayFullAmmoMessage_Auth, K2Node_MakeArray_Array) == 0x000080, "Member 'BP_PickupBase_C_DisplayFullAmmoMessage_Auth::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_PickupBase_C_DisplayFullAmmoMessage_Auth, CallFunc_Format_ReturnValue) == 0x000090, "Member 'BP_PickupBase_C_DisplayFullAmmoMessage_Auth::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PickupBase_C_DisplayFullAmmoMessage_Auth, CallFunc_TextToUpper_ReturnValue) == 0x0000A0, "Member 'BP_PickupBase_C_DisplayFullAmmoMessage_Auth::CallFunc_TextToUpper_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PickupBase_C_DisplayFullAmmoMessage_Auth, CallFunc_Conv_TextToString_ReturnValue) == 0x0000B0, "Member 'BP_PickupBase_C_DisplayFullAmmoMessage_Auth::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PickupBase_C_DisplayFullAmmoMessage_Auth, K2Node_MakeStruct_PlayerMessage) == 0x0000C0, "Member 'BP_PickupBase_C_DisplayFullAmmoMessage_Auth::K2Node_MakeStruct_PlayerMessage' has a wrong offset!");

// Function BP_PickupBase.BP_PickupBase_C.DisplayFullInventoryMessage_Auth
// 0x00C0 (0x00C0 - 0x0000)
struct BP_PickupBase_C_DisplayFullInventoryMessage_Auth final
{
public:
	class ABP_ResidentCharacter_C*                BP_ResidentCharacter;                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AController*                            CallFunc_GetController_ReturnValue;                // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_MakeLiteralText_ReturnValue;              // 0x0010(0x0010)()
	class APlayerController*                      K2Node_DynamicCast_AsPlayer_Controller;            // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_TextToUpper_ReturnValue;                  // 0x0030(0x0010)()
	TScriptInterface<class II_PlayerControllerMessage_C> K2Node_DynamicCast_AsI_Player_Controller_Message;  // 0x0040(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x0058(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FPlayerMessage                         K2Node_MakeStruct_PlayerMessage;                   // 0x0068(0x0058)()
};
static_assert(alignof(BP_PickupBase_C_DisplayFullInventoryMessage_Auth) == 0x000008, "Wrong alignment on BP_PickupBase_C_DisplayFullInventoryMessage_Auth");
static_assert(sizeof(BP_PickupBase_C_DisplayFullInventoryMessage_Auth) == 0x0000C0, "Wrong size on BP_PickupBase_C_DisplayFullInventoryMessage_Auth");
static_assert(offsetof(BP_PickupBase_C_DisplayFullInventoryMessage_Auth, BP_ResidentCharacter) == 0x000000, "Member 'BP_PickupBase_C_DisplayFullInventoryMessage_Auth::BP_ResidentCharacter' has a wrong offset!");
static_assert(offsetof(BP_PickupBase_C_DisplayFullInventoryMessage_Auth, CallFunc_GetController_ReturnValue) == 0x000008, "Member 'BP_PickupBase_C_DisplayFullInventoryMessage_Auth::CallFunc_GetController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PickupBase_C_DisplayFullInventoryMessage_Auth, CallFunc_MakeLiteralText_ReturnValue) == 0x000010, "Member 'BP_PickupBase_C_DisplayFullInventoryMessage_Auth::CallFunc_MakeLiteralText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PickupBase_C_DisplayFullInventoryMessage_Auth, K2Node_DynamicCast_AsPlayer_Controller) == 0x000020, "Member 'BP_PickupBase_C_DisplayFullInventoryMessage_Auth::K2Node_DynamicCast_AsPlayer_Controller' has a wrong offset!");
static_assert(offsetof(BP_PickupBase_C_DisplayFullInventoryMessage_Auth, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'BP_PickupBase_C_DisplayFullInventoryMessage_Auth::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_PickupBase_C_DisplayFullInventoryMessage_Auth, CallFunc_TextToUpper_ReturnValue) == 0x000030, "Member 'BP_PickupBase_C_DisplayFullInventoryMessage_Auth::CallFunc_TextToUpper_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PickupBase_C_DisplayFullInventoryMessage_Auth, K2Node_DynamicCast_AsI_Player_Controller_Message) == 0x000040, "Member 'BP_PickupBase_C_DisplayFullInventoryMessage_Auth::K2Node_DynamicCast_AsI_Player_Controller_Message' has a wrong offset!");
static_assert(offsetof(BP_PickupBase_C_DisplayFullInventoryMessage_Auth, K2Node_DynamicCast_bSuccess_1) == 0x000050, "Member 'BP_PickupBase_C_DisplayFullInventoryMessage_Auth::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_PickupBase_C_DisplayFullInventoryMessage_Auth, CallFunc_Conv_TextToString_ReturnValue) == 0x000058, "Member 'BP_PickupBase_C_DisplayFullInventoryMessage_Auth::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PickupBase_C_DisplayFullInventoryMessage_Auth, K2Node_MakeStruct_PlayerMessage) == 0x000068, "Member 'BP_PickupBase_C_DisplayFullInventoryMessage_Auth::K2Node_MakeStruct_PlayerMessage' has a wrong offset!");

// Function BP_PickupBase.BP_PickupBase_C.Event Interact Cosmetics
// 0x0010 (0x0010 - 0x0000)
struct BP_PickupBase_C_Event_Interact_Cosmetics final
{
public:
	class AActor*                                 InteractingActor_0;                                // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    InteractionComponent;                              // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PickupBase_C_Event_Interact_Cosmetics) == 0x000008, "Wrong alignment on BP_PickupBase_C_Event_Interact_Cosmetics");
static_assert(sizeof(BP_PickupBase_C_Event_Interact_Cosmetics) == 0x000010, "Wrong size on BP_PickupBase_C_Event_Interact_Cosmetics");
static_assert(offsetof(BP_PickupBase_C_Event_Interact_Cosmetics, InteractingActor_0) == 0x000000, "Member 'BP_PickupBase_C_Event_Interact_Cosmetics::InteractingActor_0' has a wrong offset!");
static_assert(offsetof(BP_PickupBase_C_Event_Interact_Cosmetics, InteractionComponent) == 0x000008, "Member 'BP_PickupBase_C_Event_Interact_Cosmetics::InteractionComponent' has a wrong offset!");

// Function BP_PickupBase.BP_PickupBase_C.ExecuteUbergraph_BP_PickupBase
// 0x0590 (0x0590 - 0x0000)
struct BP_PickupBase_C_ExecuteUbergraph_BP_PickupBase final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerStateJP_MatchBP_C*               K2Node_DynamicCast_AsPlayer_State_JP_Match_BP;     // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_CustomEvent_NotifyName_5;                   // 0x0014(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate;              // 0x001C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable;                                // 0x002C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_1;            // 0x0034(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_4;                   // 0x0044(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_3;                   // 0x004C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_2;            // 0x0054(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_2;                   // 0x0064(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_3;            // 0x006C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_1;                   // 0x007C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_4;            // 0x0084(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName;                     // 0x0094(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_5;            // 0x009C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_1;                              // 0x00AC(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_6;            // 0x00B4(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(bool IsEnabled)>               K2Node_CreateDelegate_OutputDelegate_7;            // 0x00C4(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_8;            // 0x00D4(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E4[0x4];                                       // 0x00E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UInitializationStateEnded*              CallFunc_ListenToInitializationStateEnded_ReturnValue; // 0x00E8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable;                 // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F2[0x2];                                       // 0x00F2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_CustomEvent_NotifyName_9;                   // 0x00F4(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x00FC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_FD[0x3];                                       // 0x00FD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_Event_Instigator;                           // 0x0100(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UGameplayAbilityIW*                     K2Node_Event_Ability;                              // 0x0108(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             K2Node_Event_Hit_1;                                // 0x0110(0x00F8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class UPrimitiveComponent*                    K2Node_Event_InteractionComponent_5;               // 0x0208(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_Event_InteractionComponent_4;               // 0x0210(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_Event_InteractingActor_5;                   // 0x0218(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_Event_InteractionComponent_3;               // 0x0220(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_Event_InteractionComponent_2;               // 0x0228(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_Event_InteractingActor_4;                   // 0x0230(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_Event_InteractionComponent_1;               // 0x0238(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_Event_InteractingActor_3;                   // 0x0240(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_Event_InteractingActor_2;                   // 0x0248(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_Event_InteractingActor_1;                   // 0x0250(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable;                       // 0x0258(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ShouldAmmoBeAdded_ReturnValue;            // 0x0259(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsThereAmmoMaximum_Return_Value;          // 0x025A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_25B[0x1];                                      // 0x025B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_CalculateAmmoToAdd_ReturnValue;           // 0x025C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x0260(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue_1;               // 0x0261(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_262[0x6];                                      // 0x0262(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UItemInstance*                          CallFunc_AddNewItem_ReturnValue;                   // 0x0268(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsInventoryNotFull_ReturnValue;           // 0x0270(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_271[0x7];                                      // 0x0271(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0278(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_AmmoInPickup_ReturnValue;                 // 0x0290(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_6;                   // 0x0294(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetTagStackCount_ReturnValue;             // 0x029C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x02A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x02A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x02A2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x02A3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_9;            // 0x02A4(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2B4[0x4];                                      // 0x02B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_MovementCharacter_C*                K2Node_DynamicCast_AsBP_Movement_Character;        // 0x02B8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x02C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C1[0x7];                                      // 0x02C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_MovementCharacter_C*                K2Node_DynamicCast_AsBP_Movement_Character_1;      // 0x02C8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x02D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLocallyControlled_ReturnValue;          // 0x02D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2D2[0x6];                                      // 0x02D2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UPlayMontageCallbackProxy*              CallFunc_CreateProxyObjectForPlayMontage_ReturnValue; // 0x02D8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x02E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x02E1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2E2[0x6];                                      // 0x02E2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GetGameTimeInSeconds_ReturnValue;         // 0x02E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPlayMontageCallbackProxy*              CallFunc_CreateProxyObjectForPlayMontage_ReturnValue_1; // 0x02F0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x02F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x02F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_Interactable;                   // 0x02FA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2FB[0x5];                                      // 0x02FB(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_CustomEvent_InteractingActor_1;             // 0x0300(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue_2;               // 0x0308(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_309[0x7];                                      // 0x0309(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0310(0x0008)(NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_10;           // 0x0318(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_CustomEvent_InteractingActor;               // 0x0328(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_CustomEvent_InteractionComponent;           // 0x0330(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_Event_Focusing_Actor;                       // 0x0338(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_InFocus;                        // 0x0340(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_Interactable;                         // 0x0341(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_342[0x6];                                      // 0x0342(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_Event_InteractingActor;                     // 0x0348(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_Event_InteractionComponent;                 // 0x0350(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class ABP_ResidentCharacter_C*                K2Node_DynamicCast_AsBP_Resident_Character;        // 0x0358(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0360(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_361[0x7];                                      // 0x0361(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_SleepingComponent;      // 0x0368(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_ComponentBoundEvent_BoneName;               // 0x0370(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_Event_MyComp;                               // 0x0378(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_Event_Other;                                // 0x0380(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_Event_OtherComp;                            // 0x0388(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bSelfMoved;                           // 0x0390(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_391[0x7];                                      // 0x0391(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                K2Node_Event_HitLocation;                          // 0x0398(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Event_HitNormal;                            // 0x03B0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Event_NormalImpulse;                        // 0x03C8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             K2Node_Event_Hit;                                  // 0x03E0(0x00F8)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	double                                        CallFunc_VSize_ReturnValue;                        // 0x04D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_7;                   // 0x04E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_11;           // 0x04E8(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetGameTimeInSeconds_ReturnValue_1;       // 0x04F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_1;       // 0x0500(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_501[0x3];                                      // 0x0501(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_CustomEvent_NotifyName_8;                   // 0x0504(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_50C[0x4];                                      // 0x050C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                K2Node_CustomEvent_Velocity;                       // 0x0510(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_2;       // 0x0528(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_529[0x7];                                      // 0x0529(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Get_ClassLog_Name_name;                   // 0x0530(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_12;           // 0x0540(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UGameUserSettings*                      CallFunc_GetGameUserSettings_ReturnValue;          // 0x0550(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_IsEnabled;                      // 0x0558(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_559[0x7];                                      // 0x0559(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ULyraSettingsLocal*                     K2Node_DynamicCast_AsLyra_Settings_Local;          // 0x0560(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x0568(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_569[0x3];                                      // 0x0569(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateColor                            CallFunc_GetItemColor_SlateColor;                  // 0x056C(0x0014)()
	int32                                         CallFunc_GetItemColor_StencilValue;                // 0x0580(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasInitializationStateEnded_ReturnValue;  // 0x0584(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckIfItemAlreadyInInventory_ItemAlreadyInInventory; // 0x0585(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_586[0x2];                                      // 0x0586(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_K2_SetTimerDelegate_Time_ImplicitCast;    // 0x0588(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PickupBase_C_ExecuteUbergraph_BP_PickupBase) == 0x000008, "Wrong alignment on BP_PickupBase_C_ExecuteUbergraph_BP_PickupBase");
static_assert(sizeof(BP_PickupBase_C_ExecuteUbergraph_BP_PickupBase) == 0x000590, "Wrong size on BP_PickupBase_C_ExecuteUbergraph_BP_PickupBase");
static_assert(offsetof(BP_PickupBase_C_ExecuteUbergraph_BP_PickupBase, EntryPoint) == 0x000000, "Member 'BP_PickupBase_C_ExecuteUbergraph_BP_PickupBase::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_PickupBase_C_ExecuteUbergraph_BP_PickupBase, K2Node_DynamicCast_AsPlayer_State_JP_Match_BP) == 0x000008, "Member 'BP_PickupBase_C_ExecuteUbergraph_BP_PickupBase::K2Node_DynamicCast_AsPlayer_State_JP_Match_BP' has a wrong offset!");
static_assert(offsetof(BP_PickupBase_C_ExecuteUbergraph_BP_PickupBase, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'BP_PickupBase_C_ExecuteUbergraph_BP_PickupBase::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_PickupBase_C_ExecuteUbergraph_BP_PickupBase, K2Node_CustomEvent_NotifyName_5) == 0x000014, "Member 'BP_PickupBase_C_ExecuteUbergraph_BP_PickupBase::K2Node_CustomEvent_NotifyName_5' has a wrong offset!");
static_assert(offsetof(BP_PickupBase_C_ExecuteUbergraph_BP_PickupBase, K2Node_CreateDelegate_OutputDelegate) == 0x00001C, "Member 'BP_PickupBase_C_ExecuteUbergraph_BP_PickupBase::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_PickupBase_C_ExecuteUbergraph_BP_PickupBase, Temp_name_Variable) == 0x00002C, "Member 'BP_PickupBase_C_ExecuteUbergraph_BP_PickupBase::Temp_name_Variable' has a wrong offset!");
static_assert(offsetof(BP_PickupBase_C_ExecuteUbergraph_BP_PickupBase, K2Node_CreateDelegate_OutputDelegate_1) == 0x000034, "Member 'BP_PickupBase_C_ExecuteUbergraph_BP_PickupBase::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(BP_PickupBase_C_ExecuteUbergraph_BP_PickupBase, K2Node_CustomEvent_NotifyName_4) == 0x000044, "Member 'BP_PickupBase_C_ExecuteUbergraph_BP_PickupBase::K2Node_CustomEvent_NotifyName_4' has a wrong offset!");
static_assert(offsetof(BP_PickupBase_C_ExecuteUbergraph_BP_PickupBase, K2Node_CustomEvent_NotifyName_3) == 0x00004C, "Member 'BP_PickupBase_C_ExecuteUbergraph_BP_PickupBase::K2Node_CustomEvent_NotifyName_3' has a wrong offset!");
static_assert(offsetof(BP_PickupBase_C_ExecuteUbergraph_BP_PickupBase, K2Node_CreateDelegate_OutputDelegate_2) == 0x000054, "Member 'BP_PickupBase_C_ExecuteUbergraph_BP_PickupBase::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(BP_PickupBase_C_ExecuteUbergraph_BP_PickupBase, K2Node_CustomEvent_NotifyName_2) == 0x000064, "Member 'BP_PickupBase_C_ExecuteUbergraph_BP_PickupBase::K2Node_CustomEvent_NotifyName_2' has a wrong offset!");
static_assert(offsetof(BP_PickupBase_C_ExecuteUbergraph_BP_PickupBase, K2Node_CreateDelegate_OutputDelegate_3) == 0x00006C, "Member 'BP_PickupBase_C_ExecuteUbergraph_BP_PickupBase::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(BP_PickupBase_C_ExecuteUbergraph_BP_PickupBase, K2Node_CustomEvent_NotifyName_1) == 0x00007C, "Member 'BP_PickupBase_C_ExecuteUbergraph_BP_PickupBase::K2Node_CustomEvent_NotifyName_1' has a wrong offset!");
static_assert(offsetof(BP_PickupBase_C_ExecuteUbergraph_BP_PickupBase, K2Node_CreateDelegate_OutputDelegate_4) == 0x000084, "Member 'BP_PickupBase_C_ExecuteUbergraph_BP_PickupBase::K2Node_CreateDelegate_OutputDelegate_4' has a wrong offset!");
static_assert(offsetof(BP_PickupBase_C_ExecuteUbergraph_BP_PickupBase, K2Node_CustomEvent_NotifyName) == 0x000094, "Member 'BP_PickupBase_C_ExecuteUbergraph_BP_PickupBase::K2Node_CustomEvent_NotifyName' has a wrong offset!");
static_assert(offsetof(BP_PickupBase_C_ExecuteUbergraph_BP_PickupBase, K2Node_CreateDelegate_OutputDelegate_5) == 0x00009C, "Member 'BP_PickupBase_C_ExecuteUbergraph_BP_PickupBase::K2Node_CreateDelegate_OutputDelegate_5' has a wrong offset!");
static_assert(offsetof(BP_PickupBase_C_ExecuteUbergraph_BP_PickupBase, Temp_name_Variable_1) == 0x0000AC, "Member 'BP_PickupBase_C_ExecuteUbergraph_BP_PickupBase::Temp_name_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_PickupBase_C_ExecuteUbergraph_BP_PickupBase, K2Node_CreateDelegate_OutputDelegate_6) == 0x0000B4, "Member 'BP_PickupBase_C_ExecuteUbergraph_BP_PickupBase::K2Node_CreateDelegate_OutputDelegate_6' has a wrong offset!");
static_assert(offsetof(BP_PickupBase_C_ExecuteUbergraph_BP_PickupBase, K2Node_CreateDelegate_OutputDelegate_7) == 0x0000C4, "Member 'BP_PickupBase_C_ExecuteUbergraph_BP_PickupBase::K2Node_CreateDelegate_OutputDelegate_7' has a wrong offset!");
static_assert(offsetof(BP_PickupBase_C_ExecuteUbergraph_BP_PickupBase, K2Node_CreateDelegate_OutputDelegate_8) == 0x0000D4, "Member 'BP_PickupBase_C_ExecuteUbergraph_BP_PickupBase::K2Node_CreateDelegate_OutputDelegate_8' has a wrong offset!");
static_assert(offsetof(BP_PickupBase_C_ExecuteUbergraph_BP_PickupBase, CallFunc_ListenToInitializationStateEnded_ReturnValue) == 0x0000E8, "Member 'BP_PickupBase_C_ExecuteUbergraph_BP_PickupBase::CallFunc_ListenToInitializationStateEnded_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PickupBase_C_ExecuteUbergraph_BP_PickupBase, Temp_bool_Has_Been_Initd_Variable) == 0x0000F0, "Member 'BP_PickupBase_C_ExecuteUbergraph_BP_PickupBase::Temp_bool_Has_Been_Initd_Variable' has a wrong offset!");
static_assert(offsetof(BP_PickupBase_C_ExecuteUbergraph_BP_PickupBase, CallFunc_IsValid_ReturnValue) == 0x0000F1, "Member 'BP_PickupBase_C_ExecuteUbergraph_BP_PickupBase::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PickupBase_C_ExecuteUbergraph_BP_PickupBase, K2Node_CustomEvent_NotifyName_9) == 0x0000F4, "Member 'BP_PickupBase_C_ExecuteUbergraph_BP_PickupBase::K2Node_CustomEvent_NotifyName_9' has a wrong offset!");
static_assert(offsetof(BP_PickupBase_C_ExecuteUbergraph_BP_PickupBase, CallFunc_HasAuthority_ReturnValue) == 0x0000FC, "Member 'BP_PickupBase_C_ExecuteUbergraph_BP_PickupBase::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PickupBase_C_ExecuteUbergraph_BP_PickupBase, K2Node_Event_Instigator) == 0x000100, "Member 'BP_PickupBase_C_ExecuteUbergraph_BP_PickupBase::K2Node_Event_Instigator' has a wrong offset!");
static_assert(offsetof(BP_PickupBase_C_ExecuteUbergraph_BP_PickupBase, K2Node_Event_Ability) == 0x000108, "Member 'BP_PickupBase_C_ExecuteUbergraph_BP_PickupBase::K2Node_Event_Ability' has a wrong offset!");
static_assert(offsetof(BP_PickupBase_C_ExecuteUbergraph_BP_PickupBase, K2Node_Event_Hit_1) == 0x000110, "Member 'BP_PickupBase_C_ExecuteUbergraph_BP_PickupBase::K2Node_Event_Hit_1' has a wrong offset!");
static_assert(offsetof(BP_PickupBase_C_ExecuteUbergraph_BP_PickupBase, K2Node_Event_InteractionComponent_5) == 0x000208, "Member 'BP_PickupBase_C_ExecuteUbergraph_BP_PickupBase::K2Node_Event_InteractionComponent_5' has a wrong offset!");
static_assert(offsetof(BP_PickupBase_C_ExecuteUbergraph_BP_PickupBase, K2Node_Event_InteractionComponent_4) == 0x000210, "Member 'BP_PickupBase_C_ExecuteUbergraph_BP_PickupBase::K2Node_Event_InteractionComponent_4' has a wrong offset!");
static_assert(offsetof(BP_PickupBase_C_ExecuteUbergraph_BP_PickupBase, K2Node_Event_InteractingActor_5) == 0x000218, "Member 'BP_PickupBase_C_ExecuteUbergraph_BP_PickupBase::K2Node_Event_InteractingActor_5' has a wrong offset!");
static_assert(offsetof(BP_PickupBase_C_ExecuteUbergraph_BP_PickupBase, K2Node_Event_InteractionComponent_3) == 0x000220, "Member 'BP_PickupBase_C_ExecuteUbergraph_BP_PickupBase::K2Node_Event_InteractionComponent_3' has a wrong offset!");
static_assert(offsetof(BP_PickupBase_C_ExecuteUbergraph_BP_PickupBase, K2Node_Event_InteractionComponent_2) == 0x000228, "Member 'BP_PickupBase_C_ExecuteUbergraph_BP_PickupBase::K2Node_Event_InteractionComponent_2' has a wrong offset!");
static_assert(offsetof(BP_PickupBase_C_ExecuteUbergraph_BP_PickupBase, K2Node_Event_InteractingActor_4) == 0x000230, "Member 'BP_PickupBase_C_ExecuteUbergraph_BP_PickupBase::K2Node_Event_InteractingActor_4' has a wrong offset!");
static_assert(offsetof(BP_PickupBase_C_ExecuteUbergraph_BP_PickupBase, K2Node_Event_InteractionComponent_1) == 0x000238, "Member 'BP_PickupBase_C_ExecuteUbergraph_BP_PickupBase::K2Node_Event_InteractionComponent_1' has a wrong offset!");
static_assert(offsetof(BP_PickupBase_C_ExecuteUbergraph_BP_PickupBase, K2Node_Event_InteractingActor_3) == 0x000240, "Member 'BP_PickupBase_C_ExecuteUbergraph_BP_PickupBase::K2Node_Event_InteractingActor_3' has a wrong offset!");
static_assert(offsetof(BP_PickupBase_C_ExecuteUbergraph_BP_PickupBase, K2Node_Event_InteractingActor_2) == 0x000248, "Member 'BP_PickupBase_C_ExecuteUbergraph_BP_PickupBase::K2Node_Event_InteractingActor_2' has a wrong offset!");
static_assert(offsetof(BP_PickupBase_C_ExecuteUbergraph_BP_PickupBase, K2Node_Event_InteractingActor_1) == 0x000250, "Member 'BP_PickupBase_C_ExecuteUbergraph_BP_PickupBase::K2Node_Event_InteractingActor_1' has a wrong offset!");
static_assert(offsetof(BP_PickupBase_C_ExecuteUbergraph_BP_PickupBase, Temp_bool_IsClosed_Variable) == 0x000258, "Member 'BP_PickupBase_C_ExecuteUbergraph_BP_PickupBase::Temp_bool_IsClosed_Variable' has a wrong offset!");
static_assert(offsetof(BP_PickupBase_C_ExecuteUbergraph_BP_PickupBase, CallFunc_ShouldAmmoBeAdded_ReturnValue) == 0x000259, "Member 'BP_PickupBase_C_ExecuteUbergraph_BP_PickupBase::CallFunc_ShouldAmmoBeAdded_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PickupBase_C_ExecuteUbergraph_BP_PickupBase, CallFunc_IsThereAmmoMaximum_Return_Value) == 0x00025A, "Member 'BP_PickupBase_C_ExecuteUbergraph_BP_PickupBase::CallFunc_IsThereAmmoMaximum_Return_Value' has a wrong offset!");
static_assert(offsetof(BP_PickupBase_C_ExecuteUbergraph_BP_PickupBase, CallFunc_CalculateAmmoToAdd_ReturnValue) == 0x00025C, "Member 'BP_PickupBase_C_ExecuteUbergraph_BP_PickupBase::CallFunc_CalculateAmmoToAdd_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PickupBase_C_ExecuteUbergraph_BP_PickupBase, CallFunc_NotEqual_IntInt_ReturnValue) == 0x000260, "Member 'BP_PickupBase_C_ExecuteUbergraph_BP_PickupBase::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PickupBase_C_ExecuteUbergraph_BP_PickupBase, CallFunc_HasAuthority_ReturnValue_1) == 0x000261, "Member 'BP_PickupBase_C_ExecuteUbergraph_BP_PickupBase::CallFunc_HasAuthority_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PickupBase_C_ExecuteUbergraph_BP_PickupBase, CallFunc_AddNewItem_ReturnValue) == 0x000268, "Member 'BP_PickupBase_C_ExecuteUbergraph_BP_PickupBase::CallFunc_AddNewItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PickupBase_C_ExecuteUbergraph_BP_PickupBase, CallFunc_IsInventoryNotFull_ReturnValue) == 0x000270, "Member 'BP_PickupBase_C_ExecuteUbergraph_BP_PickupBase::CallFunc_IsInventoryNotFull_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PickupBase_C_ExecuteUbergraph_BP_PickupBase, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000278, "Member 'BP_PickupBase_C_ExecuteUbergraph_BP_PickupBase::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PickupBase_C_ExecuteUbergraph_BP_PickupBase, CallFunc_AmmoInPickup_ReturnValue) == 0x000290, "Member 'BP_PickupBase_C_ExecuteUbergraph_BP_PickupBase::CallFunc_AmmoInPickup_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PickupBase_C_ExecuteUbergraph_BP_PickupBase, K2Node_CustomEvent_NotifyName_6) == 0x000294, "Member 'BP_PickupBase_C_ExecuteUbergraph_BP_PickupBase::K2Node_CustomEvent_NotifyName_6' has a wrong offset!");
static_assert(offsetof(BP_PickupBase_C_ExecuteUbergraph_BP_PickupBase, CallFunc_GetTagStackCount_ReturnValue) == 0x00029C, "Member 'BP_PickupBase_C_ExecuteUbergraph_BP_PickupBase::CallFunc_GetTagStackCount_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PickupBase_C_ExecuteUbergraph_BP_PickupBase, CallFunc_LessEqual_IntInt_ReturnValue) == 0x0002A0, "Member 'BP_PickupBase_C_ExecuteUbergraph_BP_PickupBase::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PickupBase_C_ExecuteUbergraph_BP_PickupBase, CallFunc_BooleanAND_ReturnValue) == 0x0002A1, "Member 'BP_PickupBase_C_ExecuteUbergraph_BP_PickupBase::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PickupBase_C_ExecuteUbergraph_BP_PickupBase, CallFunc_BooleanOR_ReturnValue) == 0x0002A2, "Member 'BP_PickupBase_C_ExecuteUbergraph_BP_PickupBase::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PickupBase_C_ExecuteUbergraph_BP_PickupBase, CallFunc_BooleanAND_ReturnValue_1) == 0x0002A3, "Member 'BP_PickupBase_C_ExecuteUbergraph_BP_PickupBase::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PickupBase_C_ExecuteUbergraph_BP_PickupBase, K2Node_CreateDelegate_OutputDelegate_9) == 0x0002A4, "Member 'BP_PickupBase_C_ExecuteUbergraph_BP_PickupBase::K2Node_CreateDelegate_OutputDelegate_9' has a wrong offset!");
static_assert(offsetof(BP_PickupBase_C_ExecuteUbergraph_BP_PickupBase, K2Node_DynamicCast_AsBP_Movement_Character) == 0x0002B8, "Member 'BP_PickupBase_C_ExecuteUbergraph_BP_PickupBase::K2Node_DynamicCast_AsBP_Movement_Character' has a wrong offset!");
static_assert(offsetof(BP_PickupBase_C_ExecuteUbergraph_BP_PickupBase, K2Node_DynamicCast_bSuccess_1) == 0x0002C0, "Member 'BP_PickupBase_C_ExecuteUbergraph_BP_PickupBase::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_PickupBase_C_ExecuteUbergraph_BP_PickupBase, K2Node_DynamicCast_AsBP_Movement_Character_1) == 0x0002C8, "Member 'BP_PickupBase_C_ExecuteUbergraph_BP_PickupBase::K2Node_DynamicCast_AsBP_Movement_Character_1' has a wrong offset!");
static_assert(offsetof(BP_PickupBase_C_ExecuteUbergraph_BP_PickupBase, K2Node_DynamicCast_bSuccess_2) == 0x0002D0, "Member 'BP_PickupBase_C_ExecuteUbergraph_BP_PickupBase::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_PickupBase_C_ExecuteUbergraph_BP_PickupBase, CallFunc_IsLocallyControlled_ReturnValue) == 0x0002D1, "Member 'BP_PickupBase_C_ExecuteUbergraph_BP_PickupBase::CallFunc_IsLocallyControlled_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PickupBase_C_ExecuteUbergraph_BP_PickupBase, CallFunc_CreateProxyObjectForPlayMontage_ReturnValue) == 0x0002D8, "Member 'BP_PickupBase_C_ExecuteUbergraph_BP_PickupBase::CallFunc_CreateProxyObjectForPlayMontage_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PickupBase_C_ExecuteUbergraph_BP_PickupBase, CallFunc_IsValid_ReturnValue_1) == 0x0002E0, "Member 'BP_PickupBase_C_ExecuteUbergraph_BP_PickupBase::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PickupBase_C_ExecuteUbergraph_BP_PickupBase, CallFunc_IsValid_ReturnValue_2) == 0x0002E1, "Member 'BP_PickupBase_C_ExecuteUbergraph_BP_PickupBase::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PickupBase_C_ExecuteUbergraph_BP_PickupBase, CallFunc_GetGameTimeInSeconds_ReturnValue) == 0x0002E8, "Member 'BP_PickupBase_C_ExecuteUbergraph_BP_PickupBase::CallFunc_GetGameTimeInSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PickupBase_C_ExecuteUbergraph_BP_PickupBase, CallFunc_CreateProxyObjectForPlayMontage_ReturnValue_1) == 0x0002F0, "Member 'BP_PickupBase_C_ExecuteUbergraph_BP_PickupBase::CallFunc_CreateProxyObjectForPlayMontage_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PickupBase_C_ExecuteUbergraph_BP_PickupBase, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x0002F8, "Member 'BP_PickupBase_C_ExecuteUbergraph_BP_PickupBase::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PickupBase_C_ExecuteUbergraph_BP_PickupBase, CallFunc_IsValid_ReturnValue_3) == 0x0002F9, "Member 'BP_PickupBase_C_ExecuteUbergraph_BP_PickupBase::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_PickupBase_C_ExecuteUbergraph_BP_PickupBase, K2Node_CustomEvent_Interactable) == 0x0002FA, "Member 'BP_PickupBase_C_ExecuteUbergraph_BP_PickupBase::K2Node_CustomEvent_Interactable' has a wrong offset!");
static_assert(offsetof(BP_PickupBase_C_ExecuteUbergraph_BP_PickupBase, K2Node_CustomEvent_InteractingActor_1) == 0x000300, "Member 'BP_PickupBase_C_ExecuteUbergraph_BP_PickupBase::K2Node_CustomEvent_InteractingActor_1' has a wrong offset!");
static_assert(offsetof(BP_PickupBase_C_ExecuteUbergraph_BP_PickupBase, CallFunc_HasAuthority_ReturnValue_2) == 0x000308, "Member 'BP_PickupBase_C_ExecuteUbergraph_BP_PickupBase::CallFunc_HasAuthority_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PickupBase_C_ExecuteUbergraph_BP_PickupBase, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000310, "Member 'BP_PickupBase_C_ExecuteUbergraph_BP_PickupBase::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PickupBase_C_ExecuteUbergraph_BP_PickupBase, K2Node_CreateDelegate_OutputDelegate_10) == 0x000318, "Member 'BP_PickupBase_C_ExecuteUbergraph_BP_PickupBase::K2Node_CreateDelegate_OutputDelegate_10' has a wrong offset!");
static_assert(offsetof(BP_PickupBase_C_ExecuteUbergraph_BP_PickupBase, K2Node_CustomEvent_InteractingActor) == 0x000328, "Member 'BP_PickupBase_C_ExecuteUbergraph_BP_PickupBase::K2Node_CustomEvent_InteractingActor' has a wrong offset!");
static_assert(offsetof(BP_PickupBase_C_ExecuteUbergraph_BP_PickupBase, K2Node_CustomEvent_InteractionComponent) == 0x000330, "Member 'BP_PickupBase_C_ExecuteUbergraph_BP_PickupBase::K2Node_CustomEvent_InteractionComponent' has a wrong offset!");
static_assert(offsetof(BP_PickupBase_C_ExecuteUbergraph_BP_PickupBase, K2Node_Event_Focusing_Actor) == 0x000338, "Member 'BP_PickupBase_C_ExecuteUbergraph_BP_PickupBase::K2Node_Event_Focusing_Actor' has a wrong offset!");
static_assert(offsetof(BP_PickupBase_C_ExecuteUbergraph_BP_PickupBase, K2Node_CustomEvent_InFocus) == 0x000340, "Member 'BP_PickupBase_C_ExecuteUbergraph_BP_PickupBase::K2Node_CustomEvent_InFocus' has a wrong offset!");
static_assert(offsetof(BP_PickupBase_C_ExecuteUbergraph_BP_PickupBase, K2Node_Event_Interactable) == 0x000341, "Member 'BP_PickupBase_C_ExecuteUbergraph_BP_PickupBase::K2Node_Event_Interactable' has a wrong offset!");
static_assert(offsetof(BP_PickupBase_C_ExecuteUbergraph_BP_PickupBase, K2Node_Event_InteractingActor) == 0x000348, "Member 'BP_PickupBase_C_ExecuteUbergraph_BP_PickupBase::K2Node_Event_InteractingActor' has a wrong offset!");
static_assert(offsetof(BP_PickupBase_C_ExecuteUbergraph_BP_PickupBase, K2Node_Event_InteractionComponent) == 0x000350, "Member 'BP_PickupBase_C_ExecuteUbergraph_BP_PickupBase::K2Node_Event_InteractionComponent' has a wrong offset!");
static_assert(offsetof(BP_PickupBase_C_ExecuteUbergraph_BP_PickupBase, K2Node_DynamicCast_AsBP_Resident_Character) == 0x000358, "Member 'BP_PickupBase_C_ExecuteUbergraph_BP_PickupBase::K2Node_DynamicCast_AsBP_Resident_Character' has a wrong offset!");
static_assert(offsetof(BP_PickupBase_C_ExecuteUbergraph_BP_PickupBase, K2Node_DynamicCast_bSuccess_3) == 0x000360, "Member 'BP_PickupBase_C_ExecuteUbergraph_BP_PickupBase::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(BP_PickupBase_C_ExecuteUbergraph_BP_PickupBase, K2Node_ComponentBoundEvent_SleepingComponent) == 0x000368, "Member 'BP_PickupBase_C_ExecuteUbergraph_BP_PickupBase::K2Node_ComponentBoundEvent_SleepingComponent' has a wrong offset!");
static_assert(offsetof(BP_PickupBase_C_ExecuteUbergraph_BP_PickupBase, K2Node_ComponentBoundEvent_BoneName) == 0x000370, "Member 'BP_PickupBase_C_ExecuteUbergraph_BP_PickupBase::K2Node_ComponentBoundEvent_BoneName' has a wrong offset!");
static_assert(offsetof(BP_PickupBase_C_ExecuteUbergraph_BP_PickupBase, K2Node_Event_MyComp) == 0x000378, "Member 'BP_PickupBase_C_ExecuteUbergraph_BP_PickupBase::K2Node_Event_MyComp' has a wrong offset!");
static_assert(offsetof(BP_PickupBase_C_ExecuteUbergraph_BP_PickupBase, K2Node_Event_Other) == 0x000380, "Member 'BP_PickupBase_C_ExecuteUbergraph_BP_PickupBase::K2Node_Event_Other' has a wrong offset!");
static_assert(offsetof(BP_PickupBase_C_ExecuteUbergraph_BP_PickupBase, K2Node_Event_OtherComp) == 0x000388, "Member 'BP_PickupBase_C_ExecuteUbergraph_BP_PickupBase::K2Node_Event_OtherComp' has a wrong offset!");
static_assert(offsetof(BP_PickupBase_C_ExecuteUbergraph_BP_PickupBase, K2Node_Event_bSelfMoved) == 0x000390, "Member 'BP_PickupBase_C_ExecuteUbergraph_BP_PickupBase::K2Node_Event_bSelfMoved' has a wrong offset!");
static_assert(offsetof(BP_PickupBase_C_ExecuteUbergraph_BP_PickupBase, K2Node_Event_HitLocation) == 0x000398, "Member 'BP_PickupBase_C_ExecuteUbergraph_BP_PickupBase::K2Node_Event_HitLocation' has a wrong offset!");
static_assert(offsetof(BP_PickupBase_C_ExecuteUbergraph_BP_PickupBase, K2Node_Event_HitNormal) == 0x0003B0, "Member 'BP_PickupBase_C_ExecuteUbergraph_BP_PickupBase::K2Node_Event_HitNormal' has a wrong offset!");
static_assert(offsetof(BP_PickupBase_C_ExecuteUbergraph_BP_PickupBase, K2Node_Event_NormalImpulse) == 0x0003C8, "Member 'BP_PickupBase_C_ExecuteUbergraph_BP_PickupBase::K2Node_Event_NormalImpulse' has a wrong offset!");
static_assert(offsetof(BP_PickupBase_C_ExecuteUbergraph_BP_PickupBase, K2Node_Event_Hit) == 0x0003E0, "Member 'BP_PickupBase_C_ExecuteUbergraph_BP_PickupBase::K2Node_Event_Hit' has a wrong offset!");
static_assert(offsetof(BP_PickupBase_C_ExecuteUbergraph_BP_PickupBase, CallFunc_VSize_ReturnValue) == 0x0004D8, "Member 'BP_PickupBase_C_ExecuteUbergraph_BP_PickupBase::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PickupBase_C_ExecuteUbergraph_BP_PickupBase, K2Node_CustomEvent_NotifyName_7) == 0x0004E0, "Member 'BP_PickupBase_C_ExecuteUbergraph_BP_PickupBase::K2Node_CustomEvent_NotifyName_7' has a wrong offset!");
static_assert(offsetof(BP_PickupBase_C_ExecuteUbergraph_BP_PickupBase, K2Node_CreateDelegate_OutputDelegate_11) == 0x0004E8, "Member 'BP_PickupBase_C_ExecuteUbergraph_BP_PickupBase::K2Node_CreateDelegate_OutputDelegate_11' has a wrong offset!");
static_assert(offsetof(BP_PickupBase_C_ExecuteUbergraph_BP_PickupBase, CallFunc_GetGameTimeInSeconds_ReturnValue_1) == 0x0004F8, "Member 'BP_PickupBase_C_ExecuteUbergraph_BP_PickupBase::CallFunc_GetGameTimeInSeconds_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PickupBase_C_ExecuteUbergraph_BP_PickupBase, CallFunc_Greater_DoubleDouble_ReturnValue_1) == 0x000500, "Member 'BP_PickupBase_C_ExecuteUbergraph_BP_PickupBase::CallFunc_Greater_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PickupBase_C_ExecuteUbergraph_BP_PickupBase, K2Node_CustomEvent_NotifyName_8) == 0x000504, "Member 'BP_PickupBase_C_ExecuteUbergraph_BP_PickupBase::K2Node_CustomEvent_NotifyName_8' has a wrong offset!");
static_assert(offsetof(BP_PickupBase_C_ExecuteUbergraph_BP_PickupBase, K2Node_CustomEvent_Velocity) == 0x000510, "Member 'BP_PickupBase_C_ExecuteUbergraph_BP_PickupBase::K2Node_CustomEvent_Velocity' has a wrong offset!");
static_assert(offsetof(BP_PickupBase_C_ExecuteUbergraph_BP_PickupBase, CallFunc_Greater_DoubleDouble_ReturnValue_2) == 0x000528, "Member 'BP_PickupBase_C_ExecuteUbergraph_BP_PickupBase::CallFunc_Greater_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PickupBase_C_ExecuteUbergraph_BP_PickupBase, CallFunc_Get_ClassLog_Name_name) == 0x000530, "Member 'BP_PickupBase_C_ExecuteUbergraph_BP_PickupBase::CallFunc_Get_ClassLog_Name_name' has a wrong offset!");
static_assert(offsetof(BP_PickupBase_C_ExecuteUbergraph_BP_PickupBase, K2Node_CreateDelegate_OutputDelegate_12) == 0x000540, "Member 'BP_PickupBase_C_ExecuteUbergraph_BP_PickupBase::K2Node_CreateDelegate_OutputDelegate_12' has a wrong offset!");
static_assert(offsetof(BP_PickupBase_C_ExecuteUbergraph_BP_PickupBase, CallFunc_GetGameUserSettings_ReturnValue) == 0x000550, "Member 'BP_PickupBase_C_ExecuteUbergraph_BP_PickupBase::CallFunc_GetGameUserSettings_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PickupBase_C_ExecuteUbergraph_BP_PickupBase, K2Node_CustomEvent_IsEnabled) == 0x000558, "Member 'BP_PickupBase_C_ExecuteUbergraph_BP_PickupBase::K2Node_CustomEvent_IsEnabled' has a wrong offset!");
static_assert(offsetof(BP_PickupBase_C_ExecuteUbergraph_BP_PickupBase, K2Node_DynamicCast_AsLyra_Settings_Local) == 0x000560, "Member 'BP_PickupBase_C_ExecuteUbergraph_BP_PickupBase::K2Node_DynamicCast_AsLyra_Settings_Local' has a wrong offset!");
static_assert(offsetof(BP_PickupBase_C_ExecuteUbergraph_BP_PickupBase, K2Node_DynamicCast_bSuccess_4) == 0x000568, "Member 'BP_PickupBase_C_ExecuteUbergraph_BP_PickupBase::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(BP_PickupBase_C_ExecuteUbergraph_BP_PickupBase, CallFunc_GetItemColor_SlateColor) == 0x00056C, "Member 'BP_PickupBase_C_ExecuteUbergraph_BP_PickupBase::CallFunc_GetItemColor_SlateColor' has a wrong offset!");
static_assert(offsetof(BP_PickupBase_C_ExecuteUbergraph_BP_PickupBase, CallFunc_GetItemColor_StencilValue) == 0x000580, "Member 'BP_PickupBase_C_ExecuteUbergraph_BP_PickupBase::CallFunc_GetItemColor_StencilValue' has a wrong offset!");
static_assert(offsetof(BP_PickupBase_C_ExecuteUbergraph_BP_PickupBase, CallFunc_HasInitializationStateEnded_ReturnValue) == 0x000584, "Member 'BP_PickupBase_C_ExecuteUbergraph_BP_PickupBase::CallFunc_HasInitializationStateEnded_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PickupBase_C_ExecuteUbergraph_BP_PickupBase, CallFunc_CheckIfItemAlreadyInInventory_ItemAlreadyInInventory) == 0x000585, "Member 'BP_PickupBase_C_ExecuteUbergraph_BP_PickupBase::CallFunc_CheckIfItemAlreadyInInventory_ItemAlreadyInInventory' has a wrong offset!");
static_assert(offsetof(BP_PickupBase_C_ExecuteUbergraph_BP_PickupBase, CallFunc_K2_SetTimerDelegate_Time_ImplicitCast) == 0x000588, "Member 'BP_PickupBase_C_ExecuteUbergraph_BP_PickupBase::CallFunc_K2_SetTimerDelegate_Time_ImplicitCast' has a wrong offset!");

// Function BP_PickupBase.BP_PickupBase_C.GetDurability
// 0x0008 (0x0008 - 0x0000)
struct BP_PickupBase_C_GetDurability final
{
public:
	double                                        Amount;                                            // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PickupBase_C_GetDurability) == 0x000008, "Wrong alignment on BP_PickupBase_C_GetDurability");
static_assert(sizeof(BP_PickupBase_C_GetDurability) == 0x000008, "Wrong size on BP_PickupBase_C_GetDurability");
static_assert(offsetof(BP_PickupBase_C_GetDurability, Amount) == 0x000000, "Member 'BP_PickupBase_C_GetDurability::Amount' has a wrong offset!");

// Function BP_PickupBase.BP_PickupBase_C.GetItemColor
// 0x00F0 (0x00F0 - 0x0000)
struct BP_PickupBase_C_GetItemColor final
{
public:
	struct FSlateColor                            SlateColor;                                        // 0x0000(0x0014)(Parm, OutParm)
	int32                                         StencilValue;                                      // 0x0014(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EShopItemCategory                             Temp_byte_Variable;                                // 0x0018(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EShopItemCategory                             Temp_byte_Variable_1;                              // 0x0019(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EShopItemCategory                             Temp_byte_Variable_2;                              // 0x001A(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EShopItemCategory                             Temp_byte_Variable_3;                              // 0x001B(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_TweakableData_C*                    CallFunc_Get_BP_Tweakable_Data_AsBP_Tweakable_Data; // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBP_TweakableData_C*                    CallFunc_Get_BP_Tweakable_Data_AsBP_Tweakable_Data_1; // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Map_Find_Value;                           // 0x0030(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x3];                                       // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           CallFunc_Map_Find_Value_1;                         // 0x0044(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue_1;                   // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_55[0x3];                                       // 0x0055(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x0058(0x0014)()
	struct FSlateColor                            K2Node_MakeStruct_SlateColor_1;                    // 0x006C(0x0014)()
	class UBP_TweakableData_C*                    CallFunc_Get_BP_Tweakable_Data_AsBP_Tweakable_Data_2; // 0x0080(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	EShopItemCategory                             CallFunc_GetShopItemCategoryForItemDefinition_ShopItemCategory; // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetShopItemCategoryForItemDefinition_Success; // 0x0089(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8A[0x2];                                       // 0x008A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetShopItemCategoryForItemDefinition_StencilValue; // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Map_Find_Value_2;                         // 0x0090(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue_2;                   // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A1[0x3];                                       // 0x00A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateColor                            K2Node_MakeStruct_SlateColor_2;                    // 0x00A4(0x0014)()
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B9[0x7];                                       // 0x00B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_TweakableData_C*                    CallFunc_Get_BP_Tweakable_Data_AsBP_Tweakable_Data_3; // 0x00C0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Map_Find_Value_3;                         // 0x00C8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue_3;                   // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D9[0x3];                                       // 0x00D9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateColor                            K2Node_MakeStruct_SlateColor_3;                    // 0x00DC(0x0014)()
};
static_assert(alignof(BP_PickupBase_C_GetItemColor) == 0x000008, "Wrong alignment on BP_PickupBase_C_GetItemColor");
static_assert(sizeof(BP_PickupBase_C_GetItemColor) == 0x0000F0, "Wrong size on BP_PickupBase_C_GetItemColor");
static_assert(offsetof(BP_PickupBase_C_GetItemColor, SlateColor) == 0x000000, "Member 'BP_PickupBase_C_GetItemColor::SlateColor' has a wrong offset!");
static_assert(offsetof(BP_PickupBase_C_GetItemColor, StencilValue) == 0x000014, "Member 'BP_PickupBase_C_GetItemColor::StencilValue' has a wrong offset!");
static_assert(offsetof(BP_PickupBase_C_GetItemColor, Temp_byte_Variable) == 0x000018, "Member 'BP_PickupBase_C_GetItemColor::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_PickupBase_C_GetItemColor, Temp_byte_Variable_1) == 0x000019, "Member 'BP_PickupBase_C_GetItemColor::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_PickupBase_C_GetItemColor, Temp_byte_Variable_2) == 0x00001A, "Member 'BP_PickupBase_C_GetItemColor::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_PickupBase_C_GetItemColor, Temp_byte_Variable_3) == 0x00001B, "Member 'BP_PickupBase_C_GetItemColor::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_PickupBase_C_GetItemColor, CallFunc_Get_BP_Tweakable_Data_AsBP_Tweakable_Data) == 0x000020, "Member 'BP_PickupBase_C_GetItemColor::CallFunc_Get_BP_Tweakable_Data_AsBP_Tweakable_Data' has a wrong offset!");
static_assert(offsetof(BP_PickupBase_C_GetItemColor, CallFunc_Get_BP_Tweakable_Data_AsBP_Tweakable_Data_1) == 0x000028, "Member 'BP_PickupBase_C_GetItemColor::CallFunc_Get_BP_Tweakable_Data_AsBP_Tweakable_Data_1' has a wrong offset!");
static_assert(offsetof(BP_PickupBase_C_GetItemColor, CallFunc_Map_Find_Value) == 0x000030, "Member 'BP_PickupBase_C_GetItemColor::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BP_PickupBase_C_GetItemColor, CallFunc_Map_Find_ReturnValue) == 0x000040, "Member 'BP_PickupBase_C_GetItemColor::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PickupBase_C_GetItemColor, CallFunc_Map_Find_Value_1) == 0x000044, "Member 'BP_PickupBase_C_GetItemColor::CallFunc_Map_Find_Value_1' has a wrong offset!");
static_assert(offsetof(BP_PickupBase_C_GetItemColor, CallFunc_Map_Find_ReturnValue_1) == 0x000054, "Member 'BP_PickupBase_C_GetItemColor::CallFunc_Map_Find_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PickupBase_C_GetItemColor, K2Node_MakeStruct_SlateColor) == 0x000058, "Member 'BP_PickupBase_C_GetItemColor::K2Node_MakeStruct_SlateColor' has a wrong offset!");
static_assert(offsetof(BP_PickupBase_C_GetItemColor, K2Node_MakeStruct_SlateColor_1) == 0x00006C, "Member 'BP_PickupBase_C_GetItemColor::K2Node_MakeStruct_SlateColor_1' has a wrong offset!");
static_assert(offsetof(BP_PickupBase_C_GetItemColor, CallFunc_Get_BP_Tweakable_Data_AsBP_Tweakable_Data_2) == 0x000080, "Member 'BP_PickupBase_C_GetItemColor::CallFunc_Get_BP_Tweakable_Data_AsBP_Tweakable_Data_2' has a wrong offset!");
static_assert(offsetof(BP_PickupBase_C_GetItemColor, CallFunc_GetShopItemCategoryForItemDefinition_ShopItemCategory) == 0x000088, "Member 'BP_PickupBase_C_GetItemColor::CallFunc_GetShopItemCategoryForItemDefinition_ShopItemCategory' has a wrong offset!");
static_assert(offsetof(BP_PickupBase_C_GetItemColor, CallFunc_GetShopItemCategoryForItemDefinition_Success) == 0x000089, "Member 'BP_PickupBase_C_GetItemColor::CallFunc_GetShopItemCategoryForItemDefinition_Success' has a wrong offset!");
static_assert(offsetof(BP_PickupBase_C_GetItemColor, CallFunc_GetShopItemCategoryForItemDefinition_StencilValue) == 0x00008C, "Member 'BP_PickupBase_C_GetItemColor::CallFunc_GetShopItemCategoryForItemDefinition_StencilValue' has a wrong offset!");
static_assert(offsetof(BP_PickupBase_C_GetItemColor, CallFunc_Map_Find_Value_2) == 0x000090, "Member 'BP_PickupBase_C_GetItemColor::CallFunc_Map_Find_Value_2' has a wrong offset!");
static_assert(offsetof(BP_PickupBase_C_GetItemColor, CallFunc_Map_Find_ReturnValue_2) == 0x0000A0, "Member 'BP_PickupBase_C_GetItemColor::CallFunc_Map_Find_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PickupBase_C_GetItemColor, K2Node_MakeStruct_SlateColor_2) == 0x0000A4, "Member 'BP_PickupBase_C_GetItemColor::K2Node_MakeStruct_SlateColor_2' has a wrong offset!");
static_assert(offsetof(BP_PickupBase_C_GetItemColor, K2Node_SwitchEnum_CmpSuccess) == 0x0000B8, "Member 'BP_PickupBase_C_GetItemColor::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_PickupBase_C_GetItemColor, CallFunc_Get_BP_Tweakable_Data_AsBP_Tweakable_Data_3) == 0x0000C0, "Member 'BP_PickupBase_C_GetItemColor::CallFunc_Get_BP_Tweakable_Data_AsBP_Tweakable_Data_3' has a wrong offset!");
static_assert(offsetof(BP_PickupBase_C_GetItemColor, CallFunc_Map_Find_Value_3) == 0x0000C8, "Member 'BP_PickupBase_C_GetItemColor::CallFunc_Map_Find_Value_3' has a wrong offset!");
static_assert(offsetof(BP_PickupBase_C_GetItemColor, CallFunc_Map_Find_ReturnValue_3) == 0x0000D8, "Member 'BP_PickupBase_C_GetItemColor::CallFunc_Map_Find_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_PickupBase_C_GetItemColor, K2Node_MakeStruct_SlateColor_3) == 0x0000DC, "Member 'BP_PickupBase_C_GetItemColor::K2Node_MakeStruct_SlateColor_3' has a wrong offset!");

// Function BP_PickupBase.BP_PickupBase_C.GetNewWidgetColor
// 0x0014 (0x0014 - 0x0000)
struct BP_PickupBase_C_GetNewWidgetColor final
{
public:
	struct FSlateColor                            NewColor;                                          // 0x0000(0x0014)(Parm, OutParm)
};
static_assert(alignof(BP_PickupBase_C_GetNewWidgetColor) == 0x000004, "Wrong alignment on BP_PickupBase_C_GetNewWidgetColor");
static_assert(sizeof(BP_PickupBase_C_GetNewWidgetColor) == 0x000014, "Wrong size on BP_PickupBase_C_GetNewWidgetColor");
static_assert(offsetof(BP_PickupBase_C_GetNewWidgetColor, NewColor) == 0x000000, "Member 'BP_PickupBase_C_GetNewWidgetColor::NewColor' has a wrong offset!");

// Function BP_PickupBase.BP_PickupBase_C.GetOptionalText
// 0x0020 (0x0020 - 0x0000)
struct BP_PickupBase_C_GetOptionalText final
{
public:
	class FText                                   Return;                                            // 0x0000(0x0010)(Parm, OutParm)
	class FText                                   Optional_Second_Line;                              // 0x0010(0x0010)(Parm, OutParm)
};
static_assert(alignof(BP_PickupBase_C_GetOptionalText) == 0x000008, "Wrong alignment on BP_PickupBase_C_GetOptionalText");
static_assert(sizeof(BP_PickupBase_C_GetOptionalText) == 0x000020, "Wrong size on BP_PickupBase_C_GetOptionalText");
static_assert(offsetof(BP_PickupBase_C_GetOptionalText, Return) == 0x000000, "Member 'BP_PickupBase_C_GetOptionalText::Return' has a wrong offset!");
static_assert(offsetof(BP_PickupBase_C_GetOptionalText, Optional_Second_Line) == 0x000010, "Member 'BP_PickupBase_C_GetOptionalText::Optional_Second_Line' has a wrong offset!");

// Function BP_PickupBase.BP_PickupBase_C.GetPriority
// 0x0004 (0x0004 - 0x0000)
struct BP_PickupBase_C_GetPriority final
{
public:
	int32                                         Priority_0;                                        // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PickupBase_C_GetPriority) == 0x000004, "Wrong alignment on BP_PickupBase_C_GetPriority");
static_assert(sizeof(BP_PickupBase_C_GetPriority) == 0x000004, "Wrong size on BP_PickupBase_C_GetPriority");
static_assert(offsetof(BP_PickupBase_C_GetPriority, Priority_0) == 0x000000, "Member 'BP_PickupBase_C_GetPriority::Priority_0' has a wrong offset!");

// Function BP_PickupBase.BP_PickupBase_C.GetRenderMeshes
// 0x0020 (0x0020 - 0x0000)
struct BP_PickupBase_C_GetRenderMeshes final
{
public:
	TArray<class UMeshComponent*>                 Meshes;                                            // 0x0000(0x0010)(Parm, OutParm, ContainsInstancedReference)
	TArray<class UMeshComponent*>                 K2Node_MakeArray_Array;                            // 0x0010(0x0010)(ReferenceParm, ContainsInstancedReference)
};
static_assert(alignof(BP_PickupBase_C_GetRenderMeshes) == 0x000008, "Wrong alignment on BP_PickupBase_C_GetRenderMeshes");
static_assert(sizeof(BP_PickupBase_C_GetRenderMeshes) == 0x000020, "Wrong size on BP_PickupBase_C_GetRenderMeshes");
static_assert(offsetof(BP_PickupBase_C_GetRenderMeshes, Meshes) == 0x000000, "Member 'BP_PickupBase_C_GetRenderMeshes::Meshes' has a wrong offset!");
static_assert(offsetof(BP_PickupBase_C_GetRenderMeshes, K2Node_MakeArray_Array) == 0x000010, "Member 'BP_PickupBase_C_GetRenderMeshes::K2Node_MakeArray_Array' has a wrong offset!");

// Function BP_PickupBase.BP_PickupBase_C.GetWidgetLocation
// 0x0030 (0x0030 - 0x0000)
struct BP_PickupBase_C_GetWidgetLocation final
{
public:
	struct FVector                                Location;                                          // 0x0000(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0018(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PickupBase_C_GetWidgetLocation) == 0x000008, "Wrong alignment on BP_PickupBase_C_GetWidgetLocation");
static_assert(sizeof(BP_PickupBase_C_GetWidgetLocation) == 0x000030, "Wrong size on BP_PickupBase_C_GetWidgetLocation");
static_assert(offsetof(BP_PickupBase_C_GetWidgetLocation, Location) == 0x000000, "Member 'BP_PickupBase_C_GetWidgetLocation::Location' has a wrong offset!");
static_assert(offsetof(BP_PickupBase_C_GetWidgetLocation, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000018, "Member 'BP_PickupBase_C_GetWidgetLocation::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");

// Function BP_PickupBase.BP_PickupBase_C.HideInteractionWidget
// 0x0001 (0x0001 - 0x0000)
struct BP_PickupBase_C_HideInteractionWidget final
{
public:
	bool                                          Return;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PickupBase_C_HideInteractionWidget) == 0x000001, "Wrong alignment on BP_PickupBase_C_HideInteractionWidget");
static_assert(sizeof(BP_PickupBase_C_HideInteractionWidget) == 0x000001, "Wrong size on BP_PickupBase_C_HideInteractionWidget");
static_assert(offsetof(BP_PickupBase_C_HideInteractionWidget, Return) == 0x000000, "Member 'BP_PickupBase_C_HideInteractionWidget::Return' has a wrong offset!");

// Function BP_PickupBase.BP_PickupBase_C.HighConstrastModeChanged
// 0x0001 (0x0001 - 0x0000)
struct BP_PickupBase_C_HighConstrastModeChanged final
{
public:
	bool                                          IsEnabled;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PickupBase_C_HighConstrastModeChanged) == 0x000001, "Wrong alignment on BP_PickupBase_C_HighConstrastModeChanged");
static_assert(sizeof(BP_PickupBase_C_HighConstrastModeChanged) == 0x000001, "Wrong size on BP_PickupBase_C_HighConstrastModeChanged");
static_assert(offsetof(BP_PickupBase_C_HighConstrastModeChanged, IsEnabled) == 0x000000, "Member 'BP_PickupBase_C_HighConstrastModeChanged::IsEnabled' has a wrong offset!");

// Function BP_PickupBase.BP_PickupBase_C.Interact Pressed Succes
// 0x0008 (0x0008 - 0x0000)
struct BP_PickupBase_C_Interact_Pressed_Succes final
{
public:
	class AActor*                                 InteractingActor_0;                                // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PickupBase_C_Interact_Pressed_Succes) == 0x000008, "Wrong alignment on BP_PickupBase_C_Interact_Pressed_Succes");
static_assert(sizeof(BP_PickupBase_C_Interact_Pressed_Succes) == 0x000008, "Wrong size on BP_PickupBase_C_Interact_Pressed_Succes");
static_assert(offsetof(BP_PickupBase_C_Interact_Pressed_Succes, InteractingActor_0) == 0x000000, "Member 'BP_PickupBase_C_Interact_Pressed_Succes::InteractingActor_0' has a wrong offset!");

// Function BP_PickupBase.BP_PickupBase_C.Interactable Cosmetics
// 0x0001 (0x0001 - 0x0000)
struct BP_PickupBase_C_Interactable_Cosmetics final
{
public:
	bool                                          Interactable_0;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PickupBase_C_Interactable_Cosmetics) == 0x000001, "Wrong alignment on BP_PickupBase_C_Interactable_Cosmetics");
static_assert(sizeof(BP_PickupBase_C_Interactable_Cosmetics) == 0x000001, "Wrong size on BP_PickupBase_C_Interactable_Cosmetics");
static_assert(offsetof(BP_PickupBase_C_Interactable_Cosmetics, Interactable_0) == 0x000000, "Member 'BP_PickupBase_C_Interactable_Cosmetics::Interactable_0' has a wrong offset!");

// Function BP_PickupBase.BP_PickupBase_C.Interactable In Focus
// 0x0001 (0x0001 - 0x0000)
struct BP_PickupBase_C_Interactable_In_Focus final
{
public:
	bool                                          InFocus;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PickupBase_C_Interactable_In_Focus) == 0x000001, "Wrong alignment on BP_PickupBase_C_Interactable_In_Focus");
static_assert(sizeof(BP_PickupBase_C_Interactable_In_Focus) == 0x000001, "Wrong size on BP_PickupBase_C_Interactable_In_Focus");
static_assert(offsetof(BP_PickupBase_C_Interactable_In_Focus, InFocus) == 0x000000, "Member 'BP_PickupBase_C_Interactable_In_Focus::InFocus' has a wrong offset!");

// Function BP_PickupBase.BP_PickupBase_C.InteractableCancelInteraction
// 0x0008 (0x0008 - 0x0000)
struct BP_PickupBase_C_InteractableCancelInteraction final
{
public:
	class UPrimitiveComponent*                    InteractionComponent;                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PickupBase_C_InteractableCancelInteraction) == 0x000008, "Wrong alignment on BP_PickupBase_C_InteractableCancelInteraction");
static_assert(sizeof(BP_PickupBase_C_InteractableCancelInteraction) == 0x000008, "Wrong size on BP_PickupBase_C_InteractableCancelInteraction");
static_assert(offsetof(BP_PickupBase_C_InteractableCancelInteraction, InteractionComponent) == 0x000000, "Member 'BP_PickupBase_C_InteractableCancelInteraction::InteractionComponent' has a wrong offset!");

// Function BP_PickupBase.BP_PickupBase_C.InteractPressed
// 0x0008 (0x0008 - 0x0000)
struct BP_PickupBase_C_InteractPressed final
{
public:
	class AActor*                                 InteractingActor_0;                                // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PickupBase_C_InteractPressed) == 0x000008, "Wrong alignment on BP_PickupBase_C_InteractPressed");
static_assert(sizeof(BP_PickupBase_C_InteractPressed) == 0x000008, "Wrong size on BP_PickupBase_C_InteractPressed");
static_assert(offsetof(BP_PickupBase_C_InteractPressed, InteractingActor_0) == 0x000000, "Member 'BP_PickupBase_C_InteractPressed::InteractingActor_0' has a wrong offset!");

// Function BP_PickupBase.BP_PickupBase_C.InteractReleased
// 0x0008 (0x0008 - 0x0000)
struct BP_PickupBase_C_InteractReleased final
{
public:
	class AActor*                                 InteractingActor_0;                                // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PickupBase_C_InteractReleased) == 0x000008, "Wrong alignment on BP_PickupBase_C_InteractReleased");
static_assert(sizeof(BP_PickupBase_C_InteractReleased) == 0x000008, "Wrong size on BP_PickupBase_C_InteractReleased");
static_assert(offsetof(BP_PickupBase_C_InteractReleased, InteractingActor_0) == 0x000000, "Member 'BP_PickupBase_C_InteractReleased::InteractingActor_0' has a wrong offset!");

// Function BP_PickupBase.BP_PickupBase_C.IsInFocus
// 0x0008 (0x0008 - 0x0000)
struct BP_PickupBase_C_IsInFocus final
{
public:
	class AActor*                                 Focusing_Actor;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PickupBase_C_IsInFocus) == 0x000008, "Wrong alignment on BP_PickupBase_C_IsInFocus");
static_assert(sizeof(BP_PickupBase_C_IsInFocus) == 0x000008, "Wrong size on BP_PickupBase_C_IsInFocus");
static_assert(offsetof(BP_PickupBase_C_IsInFocus, Focusing_Actor) == 0x000000, "Member 'BP_PickupBase_C_IsInFocus::Focusing_Actor' has a wrong offset!");

// Function BP_PickupBase.BP_PickupBase_C.IsInteractable
// 0x0001 (0x0001 - 0x0000)
struct BP_PickupBase_C_IsInteractable final
{
public:
	bool                                          Interactable_0;                                    // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PickupBase_C_IsInteractable) == 0x000001, "Wrong alignment on BP_PickupBase_C_IsInteractable");
static_assert(sizeof(BP_PickupBase_C_IsInteractable) == 0x000001, "Wrong size on BP_PickupBase_C_IsInteractable");
static_assert(offsetof(BP_PickupBase_C_IsInteractable, Interactable_0) == 0x000000, "Member 'BP_PickupBase_C_IsInteractable::Interactable_0' has a wrong offset!");

// Function BP_PickupBase.BP_PickupBase_C.IsInventoryNotFull
// 0x0048 (0x0048 - 0x0000)
struct BP_PickupBase_C_IsInventoryNotFull final
{
public:
	class UInventoryComponent*                    Inventory_0;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UItemInstance*>                  CallFunc_GetAllItemsWithAction_ReturnValue;        // 0x0010(0x0010)(ReferenceParm)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  K2Node_DynamicCast_AsPawn;                         // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x3];                                       // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetInventorySize_ModifiedSize;            // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PickupBase_C_IsInventoryNotFull) == 0x000008, "Wrong alignment on BP_PickupBase_C_IsInventoryNotFull");
static_assert(sizeof(BP_PickupBase_C_IsInventoryNotFull) == 0x000048, "Wrong size on BP_PickupBase_C_IsInventoryNotFull");
static_assert(offsetof(BP_PickupBase_C_IsInventoryNotFull, Inventory_0) == 0x000000, "Member 'BP_PickupBase_C_IsInventoryNotFull::Inventory_0' has a wrong offset!");
static_assert(offsetof(BP_PickupBase_C_IsInventoryNotFull, ReturnValue) == 0x000008, "Member 'BP_PickupBase_C_IsInventoryNotFull::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PickupBase_C_IsInventoryNotFull, CallFunc_GetAllItemsWithAction_ReturnValue) == 0x000010, "Member 'BP_PickupBase_C_IsInventoryNotFull::CallFunc_GetAllItemsWithAction_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PickupBase_C_IsInventoryNotFull, CallFunc_GetOwner_ReturnValue) == 0x000020, "Member 'BP_PickupBase_C_IsInventoryNotFull::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PickupBase_C_IsInventoryNotFull, CallFunc_Array_Length_ReturnValue) == 0x000028, "Member 'BP_PickupBase_C_IsInventoryNotFull::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PickupBase_C_IsInventoryNotFull, K2Node_DynamicCast_AsPawn) == 0x000030, "Member 'BP_PickupBase_C_IsInventoryNotFull::K2Node_DynamicCast_AsPawn' has a wrong offset!");
static_assert(offsetof(BP_PickupBase_C_IsInventoryNotFull, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'BP_PickupBase_C_IsInventoryNotFull::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_PickupBase_C_IsInventoryNotFull, CallFunc_GetInventorySize_ModifiedSize) == 0x00003C, "Member 'BP_PickupBase_C_IsInventoryNotFull::CallFunc_GetInventorySize_ModifiedSize' has a wrong offset!");
static_assert(offsetof(BP_PickupBase_C_IsInventoryNotFull, CallFunc_Less_IntInt_ReturnValue) == 0x000040, "Member 'BP_PickupBase_C_IsInventoryNotFull::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function BP_PickupBase.BP_PickupBase_C.IsThereAmmoMaximum
// 0x0002 (0x0002 - 0x0000)
struct BP_PickupBase_C_IsThereAmmoMaximum final
{
public:
	bool                                          Return_Value;                                      // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ContainsTag_ReturnValue;                  // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PickupBase_C_IsThereAmmoMaximum) == 0x000001, "Wrong alignment on BP_PickupBase_C_IsThereAmmoMaximum");
static_assert(sizeof(BP_PickupBase_C_IsThereAmmoMaximum) == 0x000002, "Wrong size on BP_PickupBase_C_IsThereAmmoMaximum");
static_assert(offsetof(BP_PickupBase_C_IsThereAmmoMaximum, Return_Value) == 0x000000, "Member 'BP_PickupBase_C_IsThereAmmoMaximum::Return_Value' has a wrong offset!");
static_assert(offsetof(BP_PickupBase_C_IsThereAmmoMaximum, CallFunc_ContainsTag_ReturnValue) == 0x000001, "Member 'BP_PickupBase_C_IsThereAmmoMaximum::CallFunc_ContainsTag_ReturnValue' has a wrong offset!");

// Function BP_PickupBase.BP_PickupBase_C.Knockback
// 0x0030 (0x0030 - 0x0000)
struct BP_PickupBase_C_Knockback final
{
public:
	struct FVector                                Velocity;                                          // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          XYOverride;                                        // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ZOverride;                                         // 0x0019(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A[0x6];                                       // 0x001A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        AirControlMultiplier;                              // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Void;                                              // 0x0028(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PickupBase_C_Knockback) == 0x000008, "Wrong alignment on BP_PickupBase_C_Knockback");
static_assert(sizeof(BP_PickupBase_C_Knockback) == 0x000030, "Wrong size on BP_PickupBase_C_Knockback");
static_assert(offsetof(BP_PickupBase_C_Knockback, Velocity) == 0x000000, "Member 'BP_PickupBase_C_Knockback::Velocity' has a wrong offset!");
static_assert(offsetof(BP_PickupBase_C_Knockback, XYOverride) == 0x000018, "Member 'BP_PickupBase_C_Knockback::XYOverride' has a wrong offset!");
static_assert(offsetof(BP_PickupBase_C_Knockback, ZOverride) == 0x000019, "Member 'BP_PickupBase_C_Knockback::ZOverride' has a wrong offset!");
static_assert(offsetof(BP_PickupBase_C_Knockback, AirControlMultiplier) == 0x000020, "Member 'BP_PickupBase_C_Knockback::AirControlMultiplier' has a wrong offset!");
static_assert(offsetof(BP_PickupBase_C_Knockback, Void) == 0x000028, "Member 'BP_PickupBase_C_Knockback::Void' has a wrong offset!");

// Function BP_PickupBase.BP_PickupBase_C.MaxAmmoUnsetWarning
// 0x0030 (0x0030 - 0x0000)
struct BP_PickupBase_C_MaxAmmoUnsetWarning final
{
public:
	class FString                                 CallFunc_Get_ClassLog_Name_name;                   // 0x0000(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x0010(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0020(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PickupBase_C_MaxAmmoUnsetWarning) == 0x000008, "Wrong alignment on BP_PickupBase_C_MaxAmmoUnsetWarning");
static_assert(sizeof(BP_PickupBase_C_MaxAmmoUnsetWarning) == 0x000030, "Wrong size on BP_PickupBase_C_MaxAmmoUnsetWarning");
static_assert(offsetof(BP_PickupBase_C_MaxAmmoUnsetWarning, CallFunc_Get_ClassLog_Name_name) == 0x000000, "Member 'BP_PickupBase_C_MaxAmmoUnsetWarning::CallFunc_Get_ClassLog_Name_name' has a wrong offset!");
static_assert(offsetof(BP_PickupBase_C_MaxAmmoUnsetWarning, CallFunc_Conv_TextToString_ReturnValue) == 0x000010, "Member 'BP_PickupBase_C_MaxAmmoUnsetWarning::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PickupBase_C_MaxAmmoUnsetWarning, CallFunc_Concat_StrStr_ReturnValue) == 0x000020, "Member 'BP_PickupBase_C_MaxAmmoUnsetWarning::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");

// Function BP_PickupBase.BP_PickupBase_C.Multi_Launch
// 0x0018 (0x0018 - 0x0000)
struct BP_PickupBase_C_Multi_Launch final
{
public:
	struct FVector                                Velocity;                                          // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PickupBase_C_Multi_Launch) == 0x000008, "Wrong alignment on BP_PickupBase_C_Multi_Launch");
static_assert(sizeof(BP_PickupBase_C_Multi_Launch) == 0x000018, "Wrong size on BP_PickupBase_C_Multi_Launch");
static_assert(offsetof(BP_PickupBase_C_Multi_Launch, Velocity) == 0x000000, "Member 'BP_PickupBase_C_Multi_Launch::Velocity' has a wrong offset!");

// Function BP_PickupBase.BP_PickupBase_C.NonASCActorHit
// 0x0108 (0x0108 - 0x0000)
struct BP_PickupBase_C_NonASCActorHit final
{
public:
	class AActor*                                 Instigator_0;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UGameplayAbilityIW*                     Ability;                                           // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             Hit;                                               // 0x0010(0x00F8)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_PickupBase_C_NonASCActorHit) == 0x000008, "Wrong alignment on BP_PickupBase_C_NonASCActorHit");
static_assert(sizeof(BP_PickupBase_C_NonASCActorHit) == 0x000108, "Wrong size on BP_PickupBase_C_NonASCActorHit");
static_assert(offsetof(BP_PickupBase_C_NonASCActorHit, Instigator_0) == 0x000000, "Member 'BP_PickupBase_C_NonASCActorHit::Instigator_0' has a wrong offset!");
static_assert(offsetof(BP_PickupBase_C_NonASCActorHit, Ability) == 0x000008, "Member 'BP_PickupBase_C_NonASCActorHit::Ability' has a wrong offset!");
static_assert(offsetof(BP_PickupBase_C_NonASCActorHit, Hit) == 0x000010, "Member 'BP_PickupBase_C_NonASCActorHit::Hit' has a wrong offset!");

// Function BP_PickupBase.BP_PickupBase_C.On_PickedUp__DelegateSignature
// 0x0001 (0x0001 - 0x0000)
struct BP_PickupBase_C_On_PickedUp__DelegateSignature final
{
public:
	bool                                          Succes;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PickupBase_C_On_PickedUp__DelegateSignature) == 0x000001, "Wrong alignment on BP_PickupBase_C_On_PickedUp__DelegateSignature");
static_assert(sizeof(BP_PickupBase_C_On_PickedUp__DelegateSignature) == 0x000001, "Wrong size on BP_PickupBase_C_On_PickedUp__DelegateSignature");
static_assert(offsetof(BP_PickupBase_C_On_PickedUp__DelegateSignature, Succes) == 0x000000, "Member 'BP_PickupBase_C_On_PickedUp__DelegateSignature::Succes' has a wrong offset!");

// Function BP_PickupBase.BP_PickupBase_C.OnBlendOut_770EEC2341F018E6642145BB4D3B8DCF
// 0x0008 (0x0008 - 0x0000)
struct BP_PickupBase_C_OnBlendOut_770EEC2341F018E6642145BB4D3B8DCF final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PickupBase_C_OnBlendOut_770EEC2341F018E6642145BB4D3B8DCF) == 0x000004, "Wrong alignment on BP_PickupBase_C_OnBlendOut_770EEC2341F018E6642145BB4D3B8DCF");
static_assert(sizeof(BP_PickupBase_C_OnBlendOut_770EEC2341F018E6642145BB4D3B8DCF) == 0x000008, "Wrong size on BP_PickupBase_C_OnBlendOut_770EEC2341F018E6642145BB4D3B8DCF");
static_assert(offsetof(BP_PickupBase_C_OnBlendOut_770EEC2341F018E6642145BB4D3B8DCF, NotifyName) == 0x000000, "Member 'BP_PickupBase_C_OnBlendOut_770EEC2341F018E6642145BB4D3B8DCF::NotifyName' has a wrong offset!");

// Function BP_PickupBase.BP_PickupBase_C.OnBlendOut_C75049FD4FE6C1D28317FF882A5F7D3D
// 0x0008 (0x0008 - 0x0000)
struct BP_PickupBase_C_OnBlendOut_C75049FD4FE6C1D28317FF882A5F7D3D final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PickupBase_C_OnBlendOut_C75049FD4FE6C1D28317FF882A5F7D3D) == 0x000004, "Wrong alignment on BP_PickupBase_C_OnBlendOut_C75049FD4FE6C1D28317FF882A5F7D3D");
static_assert(sizeof(BP_PickupBase_C_OnBlendOut_C75049FD4FE6C1D28317FF882A5F7D3D) == 0x000008, "Wrong size on BP_PickupBase_C_OnBlendOut_C75049FD4FE6C1D28317FF882A5F7D3D");
static_assert(offsetof(BP_PickupBase_C_OnBlendOut_C75049FD4FE6C1D28317FF882A5F7D3D, NotifyName) == 0x000000, "Member 'BP_PickupBase_C_OnBlendOut_C75049FD4FE6C1D28317FF882A5F7D3D::NotifyName' has a wrong offset!");

// Function BP_PickupBase.BP_PickupBase_C.OnCompleted_770EEC2341F018E6642145BB4D3B8DCF
// 0x0008 (0x0008 - 0x0000)
struct BP_PickupBase_C_OnCompleted_770EEC2341F018E6642145BB4D3B8DCF final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PickupBase_C_OnCompleted_770EEC2341F018E6642145BB4D3B8DCF) == 0x000004, "Wrong alignment on BP_PickupBase_C_OnCompleted_770EEC2341F018E6642145BB4D3B8DCF");
static_assert(sizeof(BP_PickupBase_C_OnCompleted_770EEC2341F018E6642145BB4D3B8DCF) == 0x000008, "Wrong size on BP_PickupBase_C_OnCompleted_770EEC2341F018E6642145BB4D3B8DCF");
static_assert(offsetof(BP_PickupBase_C_OnCompleted_770EEC2341F018E6642145BB4D3B8DCF, NotifyName) == 0x000000, "Member 'BP_PickupBase_C_OnCompleted_770EEC2341F018E6642145BB4D3B8DCF::NotifyName' has a wrong offset!");

// Function BP_PickupBase.BP_PickupBase_C.OnCompleted_C75049FD4FE6C1D28317FF882A5F7D3D
// 0x0008 (0x0008 - 0x0000)
struct BP_PickupBase_C_OnCompleted_C75049FD4FE6C1D28317FF882A5F7D3D final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PickupBase_C_OnCompleted_C75049FD4FE6C1D28317FF882A5F7D3D) == 0x000004, "Wrong alignment on BP_PickupBase_C_OnCompleted_C75049FD4FE6C1D28317FF882A5F7D3D");
static_assert(sizeof(BP_PickupBase_C_OnCompleted_C75049FD4FE6C1D28317FF882A5F7D3D) == 0x000008, "Wrong size on BP_PickupBase_C_OnCompleted_C75049FD4FE6C1D28317FF882A5F7D3D");
static_assert(offsetof(BP_PickupBase_C_OnCompleted_C75049FD4FE6C1D28317FF882A5F7D3D, NotifyName) == 0x000000, "Member 'BP_PickupBase_C_OnCompleted_C75049FD4FE6C1D28317FF882A5F7D3D::NotifyName' has a wrong offset!");

// Function BP_PickupBase.BP_PickupBase_C.OnInterrupted_770EEC2341F018E6642145BB4D3B8DCF
// 0x0008 (0x0008 - 0x0000)
struct BP_PickupBase_C_OnInterrupted_770EEC2341F018E6642145BB4D3B8DCF final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PickupBase_C_OnInterrupted_770EEC2341F018E6642145BB4D3B8DCF) == 0x000004, "Wrong alignment on BP_PickupBase_C_OnInterrupted_770EEC2341F018E6642145BB4D3B8DCF");
static_assert(sizeof(BP_PickupBase_C_OnInterrupted_770EEC2341F018E6642145BB4D3B8DCF) == 0x000008, "Wrong size on BP_PickupBase_C_OnInterrupted_770EEC2341F018E6642145BB4D3B8DCF");
static_assert(offsetof(BP_PickupBase_C_OnInterrupted_770EEC2341F018E6642145BB4D3B8DCF, NotifyName) == 0x000000, "Member 'BP_PickupBase_C_OnInterrupted_770EEC2341F018E6642145BB4D3B8DCF::NotifyName' has a wrong offset!");

// Function BP_PickupBase.BP_PickupBase_C.OnInterrupted_C75049FD4FE6C1D28317FF882A5F7D3D
// 0x0008 (0x0008 - 0x0000)
struct BP_PickupBase_C_OnInterrupted_C75049FD4FE6C1D28317FF882A5F7D3D final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PickupBase_C_OnInterrupted_C75049FD4FE6C1D28317FF882A5F7D3D) == 0x000004, "Wrong alignment on BP_PickupBase_C_OnInterrupted_C75049FD4FE6C1D28317FF882A5F7D3D");
static_assert(sizeof(BP_PickupBase_C_OnInterrupted_C75049FD4FE6C1D28317FF882A5F7D3D) == 0x000008, "Wrong size on BP_PickupBase_C_OnInterrupted_C75049FD4FE6C1D28317FF882A5F7D3D");
static_assert(offsetof(BP_PickupBase_C_OnInterrupted_C75049FD4FE6C1D28317FF882A5F7D3D, NotifyName) == 0x000000, "Member 'BP_PickupBase_C_OnInterrupted_C75049FD4FE6C1D28317FF882A5F7D3D::NotifyName' has a wrong offset!");

// Function BP_PickupBase.BP_PickupBase_C.OnNotifyBegin_770EEC2341F018E6642145BB4D3B8DCF
// 0x0008 (0x0008 - 0x0000)
struct BP_PickupBase_C_OnNotifyBegin_770EEC2341F018E6642145BB4D3B8DCF final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PickupBase_C_OnNotifyBegin_770EEC2341F018E6642145BB4D3B8DCF) == 0x000004, "Wrong alignment on BP_PickupBase_C_OnNotifyBegin_770EEC2341F018E6642145BB4D3B8DCF");
static_assert(sizeof(BP_PickupBase_C_OnNotifyBegin_770EEC2341F018E6642145BB4D3B8DCF) == 0x000008, "Wrong size on BP_PickupBase_C_OnNotifyBegin_770EEC2341F018E6642145BB4D3B8DCF");
static_assert(offsetof(BP_PickupBase_C_OnNotifyBegin_770EEC2341F018E6642145BB4D3B8DCF, NotifyName) == 0x000000, "Member 'BP_PickupBase_C_OnNotifyBegin_770EEC2341F018E6642145BB4D3B8DCF::NotifyName' has a wrong offset!");

// Function BP_PickupBase.BP_PickupBase_C.OnNotifyBegin_C75049FD4FE6C1D28317FF882A5F7D3D
// 0x0008 (0x0008 - 0x0000)
struct BP_PickupBase_C_OnNotifyBegin_C75049FD4FE6C1D28317FF882A5F7D3D final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PickupBase_C_OnNotifyBegin_C75049FD4FE6C1D28317FF882A5F7D3D) == 0x000004, "Wrong alignment on BP_PickupBase_C_OnNotifyBegin_C75049FD4FE6C1D28317FF882A5F7D3D");
static_assert(sizeof(BP_PickupBase_C_OnNotifyBegin_C75049FD4FE6C1D28317FF882A5F7D3D) == 0x000008, "Wrong size on BP_PickupBase_C_OnNotifyBegin_C75049FD4FE6C1D28317FF882A5F7D3D");
static_assert(offsetof(BP_PickupBase_C_OnNotifyBegin_C75049FD4FE6C1D28317FF882A5F7D3D, NotifyName) == 0x000000, "Member 'BP_PickupBase_C_OnNotifyBegin_C75049FD4FE6C1D28317FF882A5F7D3D::NotifyName' has a wrong offset!");

// Function BP_PickupBase.BP_PickupBase_C.OnNotifyEnd_770EEC2341F018E6642145BB4D3B8DCF
// 0x0008 (0x0008 - 0x0000)
struct BP_PickupBase_C_OnNotifyEnd_770EEC2341F018E6642145BB4D3B8DCF final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PickupBase_C_OnNotifyEnd_770EEC2341F018E6642145BB4D3B8DCF) == 0x000004, "Wrong alignment on BP_PickupBase_C_OnNotifyEnd_770EEC2341F018E6642145BB4D3B8DCF");
static_assert(sizeof(BP_PickupBase_C_OnNotifyEnd_770EEC2341F018E6642145BB4D3B8DCF) == 0x000008, "Wrong size on BP_PickupBase_C_OnNotifyEnd_770EEC2341F018E6642145BB4D3B8DCF");
static_assert(offsetof(BP_PickupBase_C_OnNotifyEnd_770EEC2341F018E6642145BB4D3B8DCF, NotifyName) == 0x000000, "Member 'BP_PickupBase_C_OnNotifyEnd_770EEC2341F018E6642145BB4D3B8DCF::NotifyName' has a wrong offset!");

// Function BP_PickupBase.BP_PickupBase_C.OnNotifyEnd_C75049FD4FE6C1D28317FF882A5F7D3D
// 0x0008 (0x0008 - 0x0000)
struct BP_PickupBase_C_OnNotifyEnd_C75049FD4FE6C1D28317FF882A5F7D3D final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PickupBase_C_OnNotifyEnd_C75049FD4FE6C1D28317FF882A5F7D3D) == 0x000004, "Wrong alignment on BP_PickupBase_C_OnNotifyEnd_C75049FD4FE6C1D28317FF882A5F7D3D");
static_assert(sizeof(BP_PickupBase_C_OnNotifyEnd_C75049FD4FE6C1D28317FF882A5F7D3D) == 0x000008, "Wrong size on BP_PickupBase_C_OnNotifyEnd_C75049FD4FE6C1D28317FF882A5F7D3D");
static_assert(offsetof(BP_PickupBase_C_OnNotifyEnd_C75049FD4FE6C1D28317FF882A5F7D3D, NotifyName) == 0x000000, "Member 'BP_PickupBase_C_OnNotifyEnd_C75049FD4FE6C1D28317FF882A5F7D3D::NotifyName' has a wrong offset!");

// Function BP_PickupBase.BP_PickupBase_C.PickupMessage
// 0x0058 (0x0058 - 0x0000)
struct BP_PickupBase_C_PickupMessage final
{
public:
	struct FGameplayTag                           CallFunc_GetAssetIdentifier_ReturnValue;           // 0x0000(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           CallFunc_GetAssetIdentifier_ReturnValue_1;         // 0x0008(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_GameplayTag_ReturnValue;       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_ResidentCharacter_C*                K2Node_DynamicCast_AsBP_Resident_Character;        // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            CallFunc_GetController_ReturnValue;                // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      K2Node_DynamicCast_AsPlayer_Controller;            // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class II_PlayerControllerMessage_C> K2Node_DynamicCast_AsI_Player_Controller_Message;  // 0x0040(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PickupBase_C_PickupMessage) == 0x000008, "Wrong alignment on BP_PickupBase_C_PickupMessage");
static_assert(sizeof(BP_PickupBase_C_PickupMessage) == 0x000058, "Wrong size on BP_PickupBase_C_PickupMessage");
static_assert(offsetof(BP_PickupBase_C_PickupMessage, CallFunc_GetAssetIdentifier_ReturnValue) == 0x000000, "Member 'BP_PickupBase_C_PickupMessage::CallFunc_GetAssetIdentifier_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PickupBase_C_PickupMessage, CallFunc_GetAssetIdentifier_ReturnValue_1) == 0x000008, "Member 'BP_PickupBase_C_PickupMessage::CallFunc_GetAssetIdentifier_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PickupBase_C_PickupMessage, CallFunc_EqualEqual_GameplayTag_ReturnValue) == 0x000010, "Member 'BP_PickupBase_C_PickupMessage::CallFunc_EqualEqual_GameplayTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PickupBase_C_PickupMessage, K2Node_DynamicCast_AsBP_Resident_Character) == 0x000018, "Member 'BP_PickupBase_C_PickupMessage::K2Node_DynamicCast_AsBP_Resident_Character' has a wrong offset!");
static_assert(offsetof(BP_PickupBase_C_PickupMessage, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'BP_PickupBase_C_PickupMessage::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_PickupBase_C_PickupMessage, CallFunc_GetController_ReturnValue) == 0x000028, "Member 'BP_PickupBase_C_PickupMessage::CallFunc_GetController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PickupBase_C_PickupMessage, K2Node_DynamicCast_AsPlayer_Controller) == 0x000030, "Member 'BP_PickupBase_C_PickupMessage::K2Node_DynamicCast_AsPlayer_Controller' has a wrong offset!");
static_assert(offsetof(BP_PickupBase_C_PickupMessage, K2Node_DynamicCast_bSuccess_1) == 0x000038, "Member 'BP_PickupBase_C_PickupMessage::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_PickupBase_C_PickupMessage, K2Node_DynamicCast_AsI_Player_Controller_Message) == 0x000040, "Member 'BP_PickupBase_C_PickupMessage::K2Node_DynamicCast_AsI_Player_Controller_Message' has a wrong offset!");
static_assert(offsetof(BP_PickupBase_C_PickupMessage, K2Node_DynamicCast_bSuccess_2) == 0x000050, "Member 'BP_PickupBase_C_PickupMessage::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");

// Function BP_PickupBase.BP_PickupBase_C.PlayDropSound
// 0x0018 (0x0018 - 0x0000)
struct BP_PickupBase_C_PlayDropSound final
{
public:
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0000(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PickupBase_C_PlayDropSound) == 0x000008, "Wrong alignment on BP_PickupBase_C_PlayDropSound");
static_assert(sizeof(BP_PickupBase_C_PlayDropSound) == 0x000018, "Wrong size on BP_PickupBase_C_PlayDropSound");
static_assert(offsetof(BP_PickupBase_C_PlayDropSound, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000000, "Member 'BP_PickupBase_C_PlayDropSound::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");

// Function BP_PickupBase.BP_PickupBase_C.PlayErrorSound
// 0x0020 (0x0020 - 0x0000)
struct BP_PickupBase_C_PlayErrorSound final
{
public:
	class USoundBase*                             Sound;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0008(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PickupBase_C_PlayErrorSound) == 0x000008, "Wrong alignment on BP_PickupBase_C_PlayErrorSound");
static_assert(sizeof(BP_PickupBase_C_PlayErrorSound) == 0x000020, "Wrong size on BP_PickupBase_C_PlayErrorSound");
static_assert(offsetof(BP_PickupBase_C_PlayErrorSound, Sound) == 0x000000, "Member 'BP_PickupBase_C_PlayErrorSound::Sound' has a wrong offset!");
static_assert(offsetof(BP_PickupBase_C_PlayErrorSound, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000008, "Member 'BP_PickupBase_C_PlayErrorSound::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");

// Function BP_PickupBase.BP_PickupBase_C.PlayImpactCosmetics
// 0x01D0 (0x01D0 - 0x0000)
struct BP_PickupBase_C_PlayImpactCosmetics final
{
public:
	struct FVector                                Location;                                          // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             Hit;                                               // 0x0018(0x00F8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class UPrimitiveComponent*                    MyComponent;                                       // 0x0110(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0118(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11C[0x4];                                      // 0x011C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UNiagaraComponent*                      CallFunc_SpawnSystemAtLocation_ReturnValue;        // 0x0120(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0128(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_2;                               // 0x012C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_3;                               // 0x0130(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_4;                               // 0x0134(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_5;                               // 0x0138(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_6;                               // 0x013C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_7;                               // 0x0140(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_8;                               // 0x0144(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_9;                               // 0x0148(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_10;                              // 0x014C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_11;                              // 0x0150(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_12;                              // 0x0154(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_13;                              // 0x0158(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_14;                              // 0x015C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_15;                              // 0x0160(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_16;                              // 0x0164(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_17;                              // 0x0168(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_18;                              // 0x016C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPhysicalSurface                              Temp_byte_Variable;                                // 0x0170(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPhysicalSurface                              CallFunc_GetSurfaceType_ReturnValue;               // 0x0171(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_172[0x6];                                      // 0x0172(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetComponentVelocity_ReturnValue;         // 0x0178(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_VSize_ReturnValue;                        // 0x0190(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Select_Default;                             // 0x0198(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19C[0x4];                                      // 0x019C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_NormalizeToRange_ReturnValue;             // 0x01A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IAudioParameterControllerInterface> CallFunc_SetIntParameter_self_CastInput;           // 0x01A8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_EvaluateRuntimeFloatCurve_ReturnValue;    // 0x01B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x01BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1BD[0x3];                                      // 0x01BD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_EvaluateRuntimeFloatCurve_time_ImplicitCast; // 0x01C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C4[0x4];                                      // 0x01C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Greater_DoubleDouble_A_ImplicitCast;      // 0x01C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PickupBase_C_PlayImpactCosmetics) == 0x000008, "Wrong alignment on BP_PickupBase_C_PlayImpactCosmetics");
static_assert(sizeof(BP_PickupBase_C_PlayImpactCosmetics) == 0x0001D0, "Wrong size on BP_PickupBase_C_PlayImpactCosmetics");
static_assert(offsetof(BP_PickupBase_C_PlayImpactCosmetics, Location) == 0x000000, "Member 'BP_PickupBase_C_PlayImpactCosmetics::Location' has a wrong offset!");
static_assert(offsetof(BP_PickupBase_C_PlayImpactCosmetics, Hit) == 0x000018, "Member 'BP_PickupBase_C_PlayImpactCosmetics::Hit' has a wrong offset!");
static_assert(offsetof(BP_PickupBase_C_PlayImpactCosmetics, MyComponent) == 0x000110, "Member 'BP_PickupBase_C_PlayImpactCosmetics::MyComponent' has a wrong offset!");
static_assert(offsetof(BP_PickupBase_C_PlayImpactCosmetics, Temp_int_Variable) == 0x000118, "Member 'BP_PickupBase_C_PlayImpactCosmetics::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_PickupBase_C_PlayImpactCosmetics, CallFunc_SpawnSystemAtLocation_ReturnValue) == 0x000120, "Member 'BP_PickupBase_C_PlayImpactCosmetics::CallFunc_SpawnSystemAtLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PickupBase_C_PlayImpactCosmetics, Temp_int_Variable_1) == 0x000128, "Member 'BP_PickupBase_C_PlayImpactCosmetics::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_PickupBase_C_PlayImpactCosmetics, Temp_int_Variable_2) == 0x00012C, "Member 'BP_PickupBase_C_PlayImpactCosmetics::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_PickupBase_C_PlayImpactCosmetics, Temp_int_Variable_3) == 0x000130, "Member 'BP_PickupBase_C_PlayImpactCosmetics::Temp_int_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_PickupBase_C_PlayImpactCosmetics, Temp_int_Variable_4) == 0x000134, "Member 'BP_PickupBase_C_PlayImpactCosmetics::Temp_int_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_PickupBase_C_PlayImpactCosmetics, Temp_int_Variable_5) == 0x000138, "Member 'BP_PickupBase_C_PlayImpactCosmetics::Temp_int_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_PickupBase_C_PlayImpactCosmetics, Temp_int_Variable_6) == 0x00013C, "Member 'BP_PickupBase_C_PlayImpactCosmetics::Temp_int_Variable_6' has a wrong offset!");
static_assert(offsetof(BP_PickupBase_C_PlayImpactCosmetics, Temp_int_Variable_7) == 0x000140, "Member 'BP_PickupBase_C_PlayImpactCosmetics::Temp_int_Variable_7' has a wrong offset!");
static_assert(offsetof(BP_PickupBase_C_PlayImpactCosmetics, Temp_int_Variable_8) == 0x000144, "Member 'BP_PickupBase_C_PlayImpactCosmetics::Temp_int_Variable_8' has a wrong offset!");
static_assert(offsetof(BP_PickupBase_C_PlayImpactCosmetics, Temp_int_Variable_9) == 0x000148, "Member 'BP_PickupBase_C_PlayImpactCosmetics::Temp_int_Variable_9' has a wrong offset!");
static_assert(offsetof(BP_PickupBase_C_PlayImpactCosmetics, Temp_int_Variable_10) == 0x00014C, "Member 'BP_PickupBase_C_PlayImpactCosmetics::Temp_int_Variable_10' has a wrong offset!");
static_assert(offsetof(BP_PickupBase_C_PlayImpactCosmetics, Temp_int_Variable_11) == 0x000150, "Member 'BP_PickupBase_C_PlayImpactCosmetics::Temp_int_Variable_11' has a wrong offset!");
static_assert(offsetof(BP_PickupBase_C_PlayImpactCosmetics, Temp_int_Variable_12) == 0x000154, "Member 'BP_PickupBase_C_PlayImpactCosmetics::Temp_int_Variable_12' has a wrong offset!");
static_assert(offsetof(BP_PickupBase_C_PlayImpactCosmetics, Temp_int_Variable_13) == 0x000158, "Member 'BP_PickupBase_C_PlayImpactCosmetics::Temp_int_Variable_13' has a wrong offset!");
static_assert(offsetof(BP_PickupBase_C_PlayImpactCosmetics, Temp_int_Variable_14) == 0x00015C, "Member 'BP_PickupBase_C_PlayImpactCosmetics::Temp_int_Variable_14' has a wrong offset!");
static_assert(offsetof(BP_PickupBase_C_PlayImpactCosmetics, Temp_int_Variable_15) == 0x000160, "Member 'BP_PickupBase_C_PlayImpactCosmetics::Temp_int_Variable_15' has a wrong offset!");
static_assert(offsetof(BP_PickupBase_C_PlayImpactCosmetics, Temp_int_Variable_16) == 0x000164, "Member 'BP_PickupBase_C_PlayImpactCosmetics::Temp_int_Variable_16' has a wrong offset!");
static_assert(offsetof(BP_PickupBase_C_PlayImpactCosmetics, Temp_int_Variable_17) == 0x000168, "Member 'BP_PickupBase_C_PlayImpactCosmetics::Temp_int_Variable_17' has a wrong offset!");
static_assert(offsetof(BP_PickupBase_C_PlayImpactCosmetics, Temp_int_Variable_18) == 0x00016C, "Member 'BP_PickupBase_C_PlayImpactCosmetics::Temp_int_Variable_18' has a wrong offset!");
static_assert(offsetof(BP_PickupBase_C_PlayImpactCosmetics, Temp_byte_Variable) == 0x000170, "Member 'BP_PickupBase_C_PlayImpactCosmetics::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_PickupBase_C_PlayImpactCosmetics, CallFunc_GetSurfaceType_ReturnValue) == 0x000171, "Member 'BP_PickupBase_C_PlayImpactCosmetics::CallFunc_GetSurfaceType_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PickupBase_C_PlayImpactCosmetics, CallFunc_GetComponentVelocity_ReturnValue) == 0x000178, "Member 'BP_PickupBase_C_PlayImpactCosmetics::CallFunc_GetComponentVelocity_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PickupBase_C_PlayImpactCosmetics, CallFunc_VSize_ReturnValue) == 0x000190, "Member 'BP_PickupBase_C_PlayImpactCosmetics::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PickupBase_C_PlayImpactCosmetics, K2Node_Select_Default) == 0x000198, "Member 'BP_PickupBase_C_PlayImpactCosmetics::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_PickupBase_C_PlayImpactCosmetics, CallFunc_NormalizeToRange_ReturnValue) == 0x0001A0, "Member 'BP_PickupBase_C_PlayImpactCosmetics::CallFunc_NormalizeToRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PickupBase_C_PlayImpactCosmetics, CallFunc_SetIntParameter_self_CastInput) == 0x0001A8, "Member 'BP_PickupBase_C_PlayImpactCosmetics::CallFunc_SetIntParameter_self_CastInput' has a wrong offset!");
static_assert(offsetof(BP_PickupBase_C_PlayImpactCosmetics, CallFunc_EvaluateRuntimeFloatCurve_ReturnValue) == 0x0001B8, "Member 'BP_PickupBase_C_PlayImpactCosmetics::CallFunc_EvaluateRuntimeFloatCurve_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PickupBase_C_PlayImpactCosmetics, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x0001BC, "Member 'BP_PickupBase_C_PlayImpactCosmetics::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PickupBase_C_PlayImpactCosmetics, CallFunc_EvaluateRuntimeFloatCurve_time_ImplicitCast) == 0x0001C0, "Member 'BP_PickupBase_C_PlayImpactCosmetics::CallFunc_EvaluateRuntimeFloatCurve_time_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_PickupBase_C_PlayImpactCosmetics, CallFunc_Greater_DoubleDouble_A_ImplicitCast) == 0x0001C8, "Member 'BP_PickupBase_C_PlayImpactCosmetics::CallFunc_Greater_DoubleDouble_A_ImplicitCast' has a wrong offset!");

// Function BP_PickupBase.BP_PickupBase_C.PostInteract
// 0x0010 (0x0010 - 0x0000)
struct BP_PickupBase_C_PostInteract final
{
public:
	class AActor*                                 InteractingActor_0;                                // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    InteractionComponent;                              // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PickupBase_C_PostInteract) == 0x000008, "Wrong alignment on BP_PickupBase_C_PostInteract");
static_assert(sizeof(BP_PickupBase_C_PostInteract) == 0x000010, "Wrong size on BP_PickupBase_C_PostInteract");
static_assert(offsetof(BP_PickupBase_C_PostInteract, InteractingActor_0) == 0x000000, "Member 'BP_PickupBase_C_PostInteract::InteractingActor_0' has a wrong offset!");
static_assert(offsetof(BP_PickupBase_C_PostInteract, InteractionComponent) == 0x000008, "Member 'BP_PickupBase_C_PostInteract::InteractionComponent' has a wrong offset!");

// Function BP_PickupBase.BP_PickupBase_C.PreInteract
// 0x0010 (0x0010 - 0x0000)
struct BP_PickupBase_C_PreInteract final
{
public:
	class AActor*                                 InteractingActor_0;                                // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    InteractionComponent;                              // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PickupBase_C_PreInteract) == 0x000008, "Wrong alignment on BP_PickupBase_C_PreInteract");
static_assert(sizeof(BP_PickupBase_C_PreInteract) == 0x000010, "Wrong size on BP_PickupBase_C_PreInteract");
static_assert(offsetof(BP_PickupBase_C_PreInteract, InteractingActor_0) == 0x000000, "Member 'BP_PickupBase_C_PreInteract::InteractingActor_0' has a wrong offset!");
static_assert(offsetof(BP_PickupBase_C_PreInteract, InteractionComponent) == 0x000008, "Member 'BP_PickupBase_C_PreInteract::InteractionComponent' has a wrong offset!");

// Function BP_PickupBase.BP_PickupBase_C.ReceiveHit
// 0x0160 (0x0160 - 0x0000)
struct BP_PickupBase_C_ReceiveHit final
{
public:
	class UPrimitiveComponent*                    MyComp;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 Other;                                             // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          bSelfMoved;                                        // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                HitLocation;                                       // 0x0020(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                HitNormal;                                         // 0x0038(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                NormalImpulse;                                     // 0x0050(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             Hit;                                               // 0x0068(0x00F8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_PickupBase_C_ReceiveHit) == 0x000008, "Wrong alignment on BP_PickupBase_C_ReceiveHit");
static_assert(sizeof(BP_PickupBase_C_ReceiveHit) == 0x000160, "Wrong size on BP_PickupBase_C_ReceiveHit");
static_assert(offsetof(BP_PickupBase_C_ReceiveHit, MyComp) == 0x000000, "Member 'BP_PickupBase_C_ReceiveHit::MyComp' has a wrong offset!");
static_assert(offsetof(BP_PickupBase_C_ReceiveHit, Other) == 0x000008, "Member 'BP_PickupBase_C_ReceiveHit::Other' has a wrong offset!");
static_assert(offsetof(BP_PickupBase_C_ReceiveHit, OtherComp) == 0x000010, "Member 'BP_PickupBase_C_ReceiveHit::OtherComp' has a wrong offset!");
static_assert(offsetof(BP_PickupBase_C_ReceiveHit, bSelfMoved) == 0x000018, "Member 'BP_PickupBase_C_ReceiveHit::bSelfMoved' has a wrong offset!");
static_assert(offsetof(BP_PickupBase_C_ReceiveHit, HitLocation) == 0x000020, "Member 'BP_PickupBase_C_ReceiveHit::HitLocation' has a wrong offset!");
static_assert(offsetof(BP_PickupBase_C_ReceiveHit, HitNormal) == 0x000038, "Member 'BP_PickupBase_C_ReceiveHit::HitNormal' has a wrong offset!");
static_assert(offsetof(BP_PickupBase_C_ReceiveHit, NormalImpulse) == 0x000050, "Member 'BP_PickupBase_C_ReceiveHit::NormalImpulse' has a wrong offset!");
static_assert(offsetof(BP_PickupBase_C_ReceiveHit, Hit) == 0x000068, "Member 'BP_PickupBase_C_ReceiveHit::Hit' has a wrong offset!");

// Function BP_PickupBase.BP_PickupBase_C.RegisterInteracter
// 0x0010 (0x0010 - 0x0000)
struct BP_PickupBase_C_RegisterInteracter final
{
public:
	class UPrimitiveComponent*                    InteractionComponent;                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 InteractingActor_0;                                // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PickupBase_C_RegisterInteracter) == 0x000008, "Wrong alignment on BP_PickupBase_C_RegisterInteracter");
static_assert(sizeof(BP_PickupBase_C_RegisterInteracter) == 0x000010, "Wrong size on BP_PickupBase_C_RegisterInteracter");
static_assert(offsetof(BP_PickupBase_C_RegisterInteracter, InteractionComponent) == 0x000000, "Member 'BP_PickupBase_C_RegisterInteracter::InteractionComponent' has a wrong offset!");
static_assert(offsetof(BP_PickupBase_C_RegisterInteracter, InteractingActor_0) == 0x000008, "Member 'BP_PickupBase_C_RegisterInteracter::InteractingActor_0' has a wrong offset!");

// Function BP_PickupBase.BP_PickupBase_C.ReloadAfterHousesLoaded
// 0x0001 (0x0001 - 0x0000)
struct BP_PickupBase_C_ReloadAfterHousesLoaded final
{
public:
	bool                                          Return;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PickupBase_C_ReloadAfterHousesLoaded) == 0x000001, "Wrong alignment on BP_PickupBase_C_ReloadAfterHousesLoaded");
static_assert(sizeof(BP_PickupBase_C_ReloadAfterHousesLoaded) == 0x000001, "Wrong size on BP_PickupBase_C_ReloadAfterHousesLoaded");
static_assert(offsetof(BP_PickupBase_C_ReloadAfterHousesLoaded, Return) == 0x000000, "Member 'BP_PickupBase_C_ReloadAfterHousesLoaded::Return' has a wrong offset!");

// Function BP_PickupBase.BP_PickupBase_C.ResetInventoryWidget
// 0x0010 (0x0010 - 0x0000)
struct BP_PickupBase_C_ResetInventoryWidget final
{
public:
	class FText                                   CallFunc_GetEmptyText_ReturnValue;                 // 0x0000(0x0010)()
};
static_assert(alignof(BP_PickupBase_C_ResetInventoryWidget) == 0x000008, "Wrong alignment on BP_PickupBase_C_ResetInventoryWidget");
static_assert(sizeof(BP_PickupBase_C_ResetInventoryWidget) == 0x000010, "Wrong size on BP_PickupBase_C_ResetInventoryWidget");
static_assert(offsetof(BP_PickupBase_C_ResetInventoryWidget, CallFunc_GetEmptyText_ReturnValue) == 0x000000, "Member 'BP_PickupBase_C_ResetInventoryWidget::CallFunc_GetEmptyText_ReturnValue' has a wrong offset!");

// Function BP_PickupBase.BP_PickupBase_C.Set Widget Text and Color
// 0x0030 (0x0030 - 0x0000)
struct BP_PickupBase_C_Set_Widget_Text_and_Color final
{
public:
	class UItemDefinition*                        Definition;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          InventoryFull;                                     // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   OptionalSecondText;                                // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm)
	class FText                                   CallFunc_TextToUpper_ReturnValue;                  // 0x0020(0x0010)()
};
static_assert(alignof(BP_PickupBase_C_Set_Widget_Text_and_Color) == 0x000008, "Wrong alignment on BP_PickupBase_C_Set_Widget_Text_and_Color");
static_assert(sizeof(BP_PickupBase_C_Set_Widget_Text_and_Color) == 0x000030, "Wrong size on BP_PickupBase_C_Set_Widget_Text_and_Color");
static_assert(offsetof(BP_PickupBase_C_Set_Widget_Text_and_Color, Definition) == 0x000000, "Member 'BP_PickupBase_C_Set_Widget_Text_and_Color::Definition' has a wrong offset!");
static_assert(offsetof(BP_PickupBase_C_Set_Widget_Text_and_Color, InventoryFull) == 0x000008, "Member 'BP_PickupBase_C_Set_Widget_Text_and_Color::InventoryFull' has a wrong offset!");
static_assert(offsetof(BP_PickupBase_C_Set_Widget_Text_and_Color, OptionalSecondText) == 0x000010, "Member 'BP_PickupBase_C_Set_Widget_Text_and_Color::OptionalSecondText' has a wrong offset!");
static_assert(offsetof(BP_PickupBase_C_Set_Widget_Text_and_Color, CallFunc_TextToUpper_ReturnValue) == 0x000020, "Member 'BP_PickupBase_C_Set_Widget_Text_and_Color::CallFunc_TextToUpper_ReturnValue' has a wrong offset!");

// Function BP_PickupBase.BP_PickupBase_C.SetDurability
// 0x0010 (0x0010 - 0x0000)
struct BP_PickupBase_C_SetDurability final
{
public:
	double                                        Amount;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Void;                                              // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PickupBase_C_SetDurability) == 0x000008, "Wrong alignment on BP_PickupBase_C_SetDurability");
static_assert(sizeof(BP_PickupBase_C_SetDurability) == 0x000010, "Wrong size on BP_PickupBase_C_SetDurability");
static_assert(offsetof(BP_PickupBase_C_SetDurability, Amount) == 0x000000, "Member 'BP_PickupBase_C_SetDurability::Amount' has a wrong offset!");
static_assert(offsetof(BP_PickupBase_C_SetDurability, Void) == 0x000008, "Member 'BP_PickupBase_C_SetDurability::Void' has a wrong offset!");

// Function BP_PickupBase.BP_PickupBase_C.SetHighContrastMode
// 0x0090 (0x0090 - 0x0000)
struct BP_PickupBase_C_SetHighContrastMode final
{
public:
	bool                                          Enabled;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_BoolToDouble_ReturnValue;            // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_BoolToDouble_ReturnValue_1;          // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UMeshComponent*>                 CallFunc_GetRenderMeshes_Meshes;                   // 0x0030(0x0010)(ReferenceParm, ContainsInstancedReference)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMeshComponent*                         CallFunc_Array_Get_Item;                           // 0x0048(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_52[0x6];                                       // 0x0052(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UMaterialInterface*>             CallFunc_GetMaterials_ReturnValue;                 // 0x0058(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6C[0x4];                                       // 0x006C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInterface*                     CallFunc_Array_Get_Item_1;                         // 0x0070(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0079(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7A[0x6];                                       // 0x007A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x0080(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast; // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_1; // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PickupBase_C_SetHighContrastMode) == 0x000008, "Wrong alignment on BP_PickupBase_C_SetHighContrastMode");
static_assert(sizeof(BP_PickupBase_C_SetHighContrastMode) == 0x000090, "Wrong size on BP_PickupBase_C_SetHighContrastMode");
static_assert(offsetof(BP_PickupBase_C_SetHighContrastMode, Enabled) == 0x000000, "Member 'BP_PickupBase_C_SetHighContrastMode::Enabled' has a wrong offset!");
static_assert(offsetof(BP_PickupBase_C_SetHighContrastMode, Temp_int_Array_Index_Variable) == 0x000004, "Member 'BP_PickupBase_C_SetHighContrastMode::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_PickupBase_C_SetHighContrastMode, CallFunc_Conv_BoolToDouble_ReturnValue) == 0x000008, "Member 'BP_PickupBase_C_SetHighContrastMode::CallFunc_Conv_BoolToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PickupBase_C_SetHighContrastMode, CallFunc_Conv_BoolToDouble_ReturnValue_1) == 0x000010, "Member 'BP_PickupBase_C_SetHighContrastMode::CallFunc_Conv_BoolToDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PickupBase_C_SetHighContrastMode, Temp_int_Loop_Counter_Variable) == 0x000018, "Member 'BP_PickupBase_C_SetHighContrastMode::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_PickupBase_C_SetHighContrastMode, Temp_int_Loop_Counter_Variable_1) == 0x00001C, "Member 'BP_PickupBase_C_SetHighContrastMode::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_PickupBase_C_SetHighContrastMode, CallFunc_Add_IntInt_ReturnValue) == 0x000020, "Member 'BP_PickupBase_C_SetHighContrastMode::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PickupBase_C_SetHighContrastMode, CallFunc_Add_IntInt_ReturnValue_1) == 0x000024, "Member 'BP_PickupBase_C_SetHighContrastMode::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PickupBase_C_SetHighContrastMode, Temp_int_Array_Index_Variable_1) == 0x000028, "Member 'BP_PickupBase_C_SetHighContrastMode::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_PickupBase_C_SetHighContrastMode, CallFunc_GetRenderMeshes_Meshes) == 0x000030, "Member 'BP_PickupBase_C_SetHighContrastMode::CallFunc_GetRenderMeshes_Meshes' has a wrong offset!");
static_assert(offsetof(BP_PickupBase_C_SetHighContrastMode, CallFunc_Array_Length_ReturnValue) == 0x000040, "Member 'BP_PickupBase_C_SetHighContrastMode::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PickupBase_C_SetHighContrastMode, CallFunc_Array_Get_Item) == 0x000048, "Member 'BP_PickupBase_C_SetHighContrastMode::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_PickupBase_C_SetHighContrastMode, CallFunc_Less_IntInt_ReturnValue) == 0x000050, "Member 'BP_PickupBase_C_SetHighContrastMode::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PickupBase_C_SetHighContrastMode, CallFunc_IsValid_ReturnValue) == 0x000051, "Member 'BP_PickupBase_C_SetHighContrastMode::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PickupBase_C_SetHighContrastMode, CallFunc_GetMaterials_ReturnValue) == 0x000058, "Member 'BP_PickupBase_C_SetHighContrastMode::CallFunc_GetMaterials_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PickupBase_C_SetHighContrastMode, CallFunc_Array_Length_ReturnValue_1) == 0x000068, "Member 'BP_PickupBase_C_SetHighContrastMode::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PickupBase_C_SetHighContrastMode, CallFunc_Array_Get_Item_1) == 0x000070, "Member 'BP_PickupBase_C_SetHighContrastMode::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_PickupBase_C_SetHighContrastMode, CallFunc_Less_IntInt_ReturnValue_1) == 0x000078, "Member 'BP_PickupBase_C_SetHighContrastMode::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PickupBase_C_SetHighContrastMode, CallFunc_IsValid_ReturnValue_1) == 0x000079, "Member 'BP_PickupBase_C_SetHighContrastMode::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PickupBase_C_SetHighContrastMode, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x000080, "Member 'BP_PickupBase_C_SetHighContrastMode::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PickupBase_C_SetHighContrastMode, CallFunc_SetScalarParameterValue_Value_ImplicitCast) == 0x000088, "Member 'BP_PickupBase_C_SetHighContrastMode::CallFunc_SetScalarParameterValue_Value_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_PickupBase_C_SetHighContrastMode, CallFunc_SetScalarParameterValue_Value_ImplicitCast_1) == 0x00008C, "Member 'BP_PickupBase_C_SetHighContrastMode::CallFunc_SetScalarParameterValue_Value_ImplicitCast_1' has a wrong offset!");

// Function BP_PickupBase.BP_PickupBase_C.SetHoveredComponent
// 0x0010 (0x0010 - 0x0000)
struct BP_PickupBase_C_SetHoveredComponent final
{
public:
	class UInteractionComponent_C*                HoveredComponent;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          Void;                                              // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PickupBase_C_SetHoveredComponent) == 0x000008, "Wrong alignment on BP_PickupBase_C_SetHoveredComponent");
static_assert(sizeof(BP_PickupBase_C_SetHoveredComponent) == 0x000010, "Wrong size on BP_PickupBase_C_SetHoveredComponent");
static_assert(offsetof(BP_PickupBase_C_SetHoveredComponent, HoveredComponent) == 0x000000, "Member 'BP_PickupBase_C_SetHoveredComponent::HoveredComponent' has a wrong offset!");
static_assert(offsetof(BP_PickupBase_C_SetHoveredComponent, Void) == 0x000008, "Member 'BP_PickupBase_C_SetHoveredComponent::Void' has a wrong offset!");

// Function BP_PickupBase.BP_PickupBase_C.SetInteractable
// 0x0001 (0x0001 - 0x0000)
struct BP_PickupBase_C_SetInteractable final
{
public:
	bool                                          Interactable_0;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PickupBase_C_SetInteractable) == 0x000001, "Wrong alignment on BP_PickupBase_C_SetInteractable");
static_assert(sizeof(BP_PickupBase_C_SetInteractable) == 0x000001, "Wrong size on BP_PickupBase_C_SetInteractable");
static_assert(offsetof(BP_PickupBase_C_SetInteractable, Interactable_0) == 0x000000, "Member 'BP_PickupBase_C_SetInteractable::Interactable_0' has a wrong offset!");

// Function BP_PickupBase.BP_PickupBase_C.SetWidgetForAmmoItems
// 0x0008 (0x0008 - 0x0000)
struct BP_PickupBase_C_SetWidgetForAmmoItems final
{
public:
	int32                                         CallFunc_CalculateAmmoToAdd_ReturnValue;           // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsThereAmmoMaximum_Return_Value;          // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PickupBase_C_SetWidgetForAmmoItems) == 0x000004, "Wrong alignment on BP_PickupBase_C_SetWidgetForAmmoItems");
static_assert(sizeof(BP_PickupBase_C_SetWidgetForAmmoItems) == 0x000008, "Wrong size on BP_PickupBase_C_SetWidgetForAmmoItems");
static_assert(offsetof(BP_PickupBase_C_SetWidgetForAmmoItems, CallFunc_CalculateAmmoToAdd_ReturnValue) == 0x000000, "Member 'BP_PickupBase_C_SetWidgetForAmmoItems::CallFunc_CalculateAmmoToAdd_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PickupBase_C_SetWidgetForAmmoItems, CallFunc_IsThereAmmoMaximum_Return_Value) == 0x000004, "Member 'BP_PickupBase_C_SetWidgetForAmmoItems::CallFunc_IsThereAmmoMaximum_Return_Value' has a wrong offset!");
static_assert(offsetof(BP_PickupBase_C_SetWidgetForAmmoItems, CallFunc_NotEqual_IntInt_ReturnValue) == 0x000005, "Member 'BP_PickupBase_C_SetWidgetForAmmoItems::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");

// Function BP_PickupBase.BP_PickupBase_C.ShouldAmmoBeAdded
// 0x0004 (0x0004 - 0x0000)
struct BP_PickupBase_C_ShouldAmmoBeAdded final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ContainsTag_ReturnValue;                  // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ContainsTag_ReturnValue_1;                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PickupBase_C_ShouldAmmoBeAdded) == 0x000001, "Wrong alignment on BP_PickupBase_C_ShouldAmmoBeAdded");
static_assert(sizeof(BP_PickupBase_C_ShouldAmmoBeAdded) == 0x000004, "Wrong size on BP_PickupBase_C_ShouldAmmoBeAdded");
static_assert(offsetof(BP_PickupBase_C_ShouldAmmoBeAdded, ReturnValue) == 0x000000, "Member 'BP_PickupBase_C_ShouldAmmoBeAdded::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PickupBase_C_ShouldAmmoBeAdded, CallFunc_ContainsTag_ReturnValue) == 0x000001, "Member 'BP_PickupBase_C_ShouldAmmoBeAdded::CallFunc_ContainsTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PickupBase_C_ShouldAmmoBeAdded, CallFunc_ContainsTag_ReturnValue_1) == 0x000002, "Member 'BP_PickupBase_C_ShouldAmmoBeAdded::CallFunc_ContainsTag_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PickupBase_C_ShouldAmmoBeAdded, CallFunc_BooleanOR_ReturnValue) == 0x000003, "Member 'BP_PickupBase_C_ShouldAmmoBeAdded::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

// Function BP_PickupBase.BP_PickupBase_C.UnregisterInteracter
// 0x0010 (0x0010 - 0x0000)
struct BP_PickupBase_C_UnregisterInteracter final
{
public:
	class UPrimitiveComponent*                    InteractionComponent;                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 InteractingActor_0;                                // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PickupBase_C_UnregisterInteracter) == 0x000008, "Wrong alignment on BP_PickupBase_C_UnregisterInteracter");
static_assert(sizeof(BP_PickupBase_C_UnregisterInteracter) == 0x000010, "Wrong size on BP_PickupBase_C_UnregisterInteracter");
static_assert(offsetof(BP_PickupBase_C_UnregisterInteracter, InteractionComponent) == 0x000000, "Member 'BP_PickupBase_C_UnregisterInteracter::InteractionComponent' has a wrong offset!");
static_assert(offsetof(BP_PickupBase_C_UnregisterInteracter, InteractingActor_0) == 0x000008, "Member 'BP_PickupBase_C_UnregisterInteracter::InteractingActor_0' has a wrong offset!");

// Function BP_PickupBase.BP_PickupBase_C.UpdateInventoryWidget
// 0x0010 (0x0010 - 0x0000)
struct BP_PickupBase_C_UpdateInventoryWidget final
{
public:
	class AActor*                                 InteractingActor_0;                                // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ShouldAmmoBeAdded_ReturnValue;            // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_DoesImplementInterface_ReturnValue;       // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckIfItemAlreadyInInventory_ItemAlreadyInInventory; // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsInventoryNotFull_ReturnValue;           // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PickupBase_C_UpdateInventoryWidget) == 0x000008, "Wrong alignment on BP_PickupBase_C_UpdateInventoryWidget");
static_assert(sizeof(BP_PickupBase_C_UpdateInventoryWidget) == 0x000010, "Wrong size on BP_PickupBase_C_UpdateInventoryWidget");
static_assert(offsetof(BP_PickupBase_C_UpdateInventoryWidget, InteractingActor_0) == 0x000000, "Member 'BP_PickupBase_C_UpdateInventoryWidget::InteractingActor_0' has a wrong offset!");
static_assert(offsetof(BP_PickupBase_C_UpdateInventoryWidget, CallFunc_ShouldAmmoBeAdded_ReturnValue) == 0x000008, "Member 'BP_PickupBase_C_UpdateInventoryWidget::CallFunc_ShouldAmmoBeAdded_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PickupBase_C_UpdateInventoryWidget, CallFunc_DoesImplementInterface_ReturnValue) == 0x000009, "Member 'BP_PickupBase_C_UpdateInventoryWidget::CallFunc_DoesImplementInterface_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PickupBase_C_UpdateInventoryWidget, CallFunc_CheckIfItemAlreadyInInventory_ItemAlreadyInInventory) == 0x00000A, "Member 'BP_PickupBase_C_UpdateInventoryWidget::CallFunc_CheckIfItemAlreadyInInventory_ItemAlreadyInInventory' has a wrong offset!");
static_assert(offsetof(BP_PickupBase_C_UpdateInventoryWidget, CallFunc_IsInventoryNotFull_ReturnValue) == 0x00000B, "Member 'BP_PickupBase_C_UpdateInventoryWidget::CallFunc_IsInventoryNotFull_ReturnValue' has a wrong offset!");

// Function BP_PickupBase.BP_PickupBase_C.UserConstructionScript
// 0x0050 (0x0050 - 0x0000)
struct BP_PickupBase_C_UserConstructionScript final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           CallFunc_MakeLiteralGameplayTag_ReturnValue;       // 0x000C(0x0008)(NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UPrimitiveComponent*>            CallFunc_K2_GetComponentsByClass_ReturnValue;      // 0x0018(0x0010)(ReferenceParm, ContainsInstancedReference)
	int32                                         CallFunc_GetStencilValueFromMask_ReturnValue;      // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    CallFunc_Array_Get_Item;                           // 0x0030(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D[0x3];                                       // 0x003D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInterface*                     CallFunc_GetMaterial_ReturnValue;                  // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PickupBase_C_UserConstructionScript) == 0x000008, "Wrong alignment on BP_PickupBase_C_UserConstructionScript");
static_assert(sizeof(BP_PickupBase_C_UserConstructionScript) == 0x000050, "Wrong size on BP_PickupBase_C_UserConstructionScript");
static_assert(offsetof(BP_PickupBase_C_UserConstructionScript, Temp_int_Array_Index_Variable) == 0x000000, "Member 'BP_PickupBase_C_UserConstructionScript::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_PickupBase_C_UserConstructionScript, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'BP_PickupBase_C_UserConstructionScript::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_PickupBase_C_UserConstructionScript, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'BP_PickupBase_C_UserConstructionScript::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PickupBase_C_UserConstructionScript, CallFunc_MakeLiteralGameplayTag_ReturnValue) == 0x00000C, "Member 'BP_PickupBase_C_UserConstructionScript::CallFunc_MakeLiteralGameplayTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PickupBase_C_UserConstructionScript, CallFunc_K2_GetComponentsByClass_ReturnValue) == 0x000018, "Member 'BP_PickupBase_C_UserConstructionScript::CallFunc_K2_GetComponentsByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PickupBase_C_UserConstructionScript, CallFunc_GetStencilValueFromMask_ReturnValue) == 0x000028, "Member 'BP_PickupBase_C_UserConstructionScript::CallFunc_GetStencilValueFromMask_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PickupBase_C_UserConstructionScript, CallFunc_Array_Get_Item) == 0x000030, "Member 'BP_PickupBase_C_UserConstructionScript::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_PickupBase_C_UserConstructionScript, CallFunc_Array_Length_ReturnValue) == 0x000038, "Member 'BP_PickupBase_C_UserConstructionScript::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PickupBase_C_UserConstructionScript, CallFunc_Less_IntInt_ReturnValue) == 0x00003C, "Member 'BP_PickupBase_C_UserConstructionScript::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PickupBase_C_UserConstructionScript, CallFunc_GetMaterial_ReturnValue) == 0x000040, "Member 'BP_PickupBase_C_UserConstructionScript::CallFunc_GetMaterial_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PickupBase_C_UserConstructionScript, CallFunc_IsValid_ReturnValue) == 0x000048, "Member 'BP_PickupBase_C_UserConstructionScript::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_PickupBase.BP_PickupBase_C.GetInteractionDuration
// 0x0010 (0x0010 - 0x0000)
struct BP_PickupBase_C_GetInteractionDuration final
{
public:
	class UPrimitiveComponent*                    InteractionComponent;                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	float                                         ReturnValue;                                       // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PickupBase_C_GetInteractionDuration) == 0x000008, "Wrong alignment on BP_PickupBase_C_GetInteractionDuration");
static_assert(sizeof(BP_PickupBase_C_GetInteractionDuration) == 0x000010, "Wrong size on BP_PickupBase_C_GetInteractionDuration");
static_assert(offsetof(BP_PickupBase_C_GetInteractionDuration, InteractionComponent) == 0x000000, "Member 'BP_PickupBase_C_GetInteractionDuration::InteractionComponent' has a wrong offset!");
static_assert(offsetof(BP_PickupBase_C_GetInteractionDuration, ReturnValue) == 0x000008, "Member 'BP_PickupBase_C_GetInteractionDuration::ReturnValue' has a wrong offset!");

// Function BP_PickupBase.BP_PickupBase_C.GetPostInteractSyncType
// 0x0010 (0x0010 - 0x0000)
struct BP_PickupBase_C_GetPostInteractSyncType final
{
public:
	bool                                          bShouldSync;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EAbilityTaskNetSyncType                       Type;                                              // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    InteractionComponent;                              // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PickupBase_C_GetPostInteractSyncType) == 0x000008, "Wrong alignment on BP_PickupBase_C_GetPostInteractSyncType");
static_assert(sizeof(BP_PickupBase_C_GetPostInteractSyncType) == 0x000010, "Wrong size on BP_PickupBase_C_GetPostInteractSyncType");
static_assert(offsetof(BP_PickupBase_C_GetPostInteractSyncType, bShouldSync) == 0x000000, "Member 'BP_PickupBase_C_GetPostInteractSyncType::bShouldSync' has a wrong offset!");
static_assert(offsetof(BP_PickupBase_C_GetPostInteractSyncType, Type) == 0x000001, "Member 'BP_PickupBase_C_GetPostInteractSyncType::Type' has a wrong offset!");
static_assert(offsetof(BP_PickupBase_C_GetPostInteractSyncType, InteractionComponent) == 0x000008, "Member 'BP_PickupBase_C_GetPostInteractSyncType::InteractionComponent' has a wrong offset!");

// Function BP_PickupBase.BP_PickupBase_C.GetPreInteractSyncType
// 0x0010 (0x0010 - 0x0000)
struct BP_PickupBase_C_GetPreInteractSyncType final
{
public:
	bool                                          bShouldSync;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EAbilityTaskNetSyncType                       Type;                                              // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    InteractionComponent;                              // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PickupBase_C_GetPreInteractSyncType) == 0x000008, "Wrong alignment on BP_PickupBase_C_GetPreInteractSyncType");
static_assert(sizeof(BP_PickupBase_C_GetPreInteractSyncType) == 0x000010, "Wrong size on BP_PickupBase_C_GetPreInteractSyncType");
static_assert(offsetof(BP_PickupBase_C_GetPreInteractSyncType, bShouldSync) == 0x000000, "Member 'BP_PickupBase_C_GetPreInteractSyncType::bShouldSync' has a wrong offset!");
static_assert(offsetof(BP_PickupBase_C_GetPreInteractSyncType, Type) == 0x000001, "Member 'BP_PickupBase_C_GetPreInteractSyncType::Type' has a wrong offset!");
static_assert(offsetof(BP_PickupBase_C_GetPreInteractSyncType, InteractionComponent) == 0x000008, "Member 'BP_PickupBase_C_GetPreInteractSyncType::InteractionComponent' has a wrong offset!");

// Function BP_PickupBase.BP_PickupBase_C.IsAvailableForEnemyTeam
// 0x0010 (0x0010 - 0x0000)
struct BP_PickupBase_C_IsAvailableForEnemyTeam final
{
public:
	class UPrimitiveComponent*                    InteractionComponent;                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PickupBase_C_IsAvailableForEnemyTeam) == 0x000008, "Wrong alignment on BP_PickupBase_C_IsAvailableForEnemyTeam");
static_assert(sizeof(BP_PickupBase_C_IsAvailableForEnemyTeam) == 0x000010, "Wrong size on BP_PickupBase_C_IsAvailableForEnemyTeam");
static_assert(offsetof(BP_PickupBase_C_IsAvailableForEnemyTeam, InteractionComponent) == 0x000000, "Member 'BP_PickupBase_C_IsAvailableForEnemyTeam::InteractionComponent' has a wrong offset!");
static_assert(offsetof(BP_PickupBase_C_IsAvailableForEnemyTeam, ReturnValue) == 0x000008, "Member 'BP_PickupBase_C_IsAvailableForEnemyTeam::ReturnValue' has a wrong offset!");

// Function BP_PickupBase.BP_PickupBase_C.IsAvailableForInteraction
// 0x0018 (0x0018 - 0x0000)
struct BP_PickupBase_C_IsAvailableForInteraction final
{
public:
	class AActor*                                 InteractingActor_0;                                // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    InteractionComponent;                              // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PickupBase_C_IsAvailableForInteraction) == 0x000008, "Wrong alignment on BP_PickupBase_C_IsAvailableForInteraction");
static_assert(sizeof(BP_PickupBase_C_IsAvailableForInteraction) == 0x000018, "Wrong size on BP_PickupBase_C_IsAvailableForInteraction");
static_assert(offsetof(BP_PickupBase_C_IsAvailableForInteraction, InteractingActor_0) == 0x000000, "Member 'BP_PickupBase_C_IsAvailableForInteraction::InteractingActor_0' has a wrong offset!");
static_assert(offsetof(BP_PickupBase_C_IsAvailableForInteraction, InteractionComponent) == 0x000008, "Member 'BP_PickupBase_C_IsAvailableForInteraction::InteractionComponent' has a wrong offset!");
static_assert(offsetof(BP_PickupBase_C_IsAvailableForInteraction, ReturnValue) == 0x000010, "Member 'BP_PickupBase_C_IsAvailableForInteraction::ReturnValue' has a wrong offset!");

}

