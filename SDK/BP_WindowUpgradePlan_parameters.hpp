#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_WindowUpgradePlan

#include "Basic.hpp"

#include "GameplayAbilities_structs.hpp"
#include "S_WindowUpgradePayload_structs.hpp"
#include "GameplayTags_structs.hpp"


namespace SDK::Params
{

// Function BP_WindowUpgradePlan.BP_WindowUpgradePlan_C.ActorToChangeSet
// 0x0008 (0x0008 - 0x0000)
struct BP_WindowUpgradePlan_C_ActorToChangeSet final
{
public:
	class AActor*                                 NewActorToChange;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_WindowUpgradePlan_C_ActorToChangeSet) == 0x000008, "Wrong alignment on BP_WindowUpgradePlan_C_ActorToChangeSet");
static_assert(sizeof(BP_WindowUpgradePlan_C_ActorToChangeSet) == 0x000008, "Wrong size on BP_WindowUpgradePlan_C_ActorToChangeSet");
static_assert(offsetof(BP_WindowUpgradePlan_C_ActorToChangeSet, NewActorToChange) == 0x000000, "Member 'BP_WindowUpgradePlan_C_ActorToChangeSet::NewActorToChange' has a wrong offset!");

// Function BP_WindowUpgradePlan.BP_WindowUpgradePlan_C.ExecuteUbergraph_BP_WindowUpgradePlan
// 0x0328 (0x0328 - 0x0000)
struct BP_WindowUpgradePlan_C_ExecuteUbergraph_BP_WindowUpgradePlan final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_WindowUpgradePayload                K2Node_MakeStruct_S_WindowUpgradePayload;          // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UAbilitySystemComponent* AbilitySystemComponent, struct FGameplayEffectSpec& Spec, const struct FActiveGameplayEffectHandle& Handle)> K2Node_CreateDelegate_OutputDelegate;              // 0x0010(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UGameplayMessageSubsystem*              CallFunc_GetGameInstanceSubsystem_ReturnValue;     // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_Event_NewActorToChange;                     // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAbilitySystemComponent*                K2Node_CustomEvent_AbilitySystemComponent;         // 0x0030(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FGameplayEffectSpec                    K2Node_CustomEvent_Spec;                           // 0x0038(0x0298)(ConstParm)
	struct FActiveGameplayEffectHandle            K2Node_CustomEvent_Handle;                         // 0x02D0(0x0008)(NoDestructor, HasGetValueTypeHash)
	class AHouseActorBase_C*                      K2Node_DynamicCast_AsHouse_Actor_Base;             // 0x02D8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x02E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2E1[0x7];                                      // 0x02E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IGameplayTagAssetInterface> CallFunc_GetOwnedGameplayTags_self_CastInput;      // 0x02E8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTagContainer                  CallFunc_GetOwnedGameplayTags_TagContainer;        // 0x02F8(0x0020)()
	bool                                          CallFunc_HasTag_ReturnValue;                       // 0x0318(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_319[0x7];                                      // 0x0319(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_HighlightManager_C*                 CallFunc_GetActorOfClass_ReturnValue;              // 0x0320(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_WindowUpgradePlan_C_ExecuteUbergraph_BP_WindowUpgradePlan) == 0x000008, "Wrong alignment on BP_WindowUpgradePlan_C_ExecuteUbergraph_BP_WindowUpgradePlan");
static_assert(sizeof(BP_WindowUpgradePlan_C_ExecuteUbergraph_BP_WindowUpgradePlan) == 0x000328, "Wrong size on BP_WindowUpgradePlan_C_ExecuteUbergraph_BP_WindowUpgradePlan");
static_assert(offsetof(BP_WindowUpgradePlan_C_ExecuteUbergraph_BP_WindowUpgradePlan, EntryPoint) == 0x000000, "Member 'BP_WindowUpgradePlan_C_ExecuteUbergraph_BP_WindowUpgradePlan::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_WindowUpgradePlan_C_ExecuteUbergraph_BP_WindowUpgradePlan, K2Node_MakeStruct_S_WindowUpgradePayload) == 0x000008, "Member 'BP_WindowUpgradePlan_C_ExecuteUbergraph_BP_WindowUpgradePlan::K2Node_MakeStruct_S_WindowUpgradePayload' has a wrong offset!");
static_assert(offsetof(BP_WindowUpgradePlan_C_ExecuteUbergraph_BP_WindowUpgradePlan, K2Node_CreateDelegate_OutputDelegate) == 0x000010, "Member 'BP_WindowUpgradePlan_C_ExecuteUbergraph_BP_WindowUpgradePlan::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_WindowUpgradePlan_C_ExecuteUbergraph_BP_WindowUpgradePlan, CallFunc_GetGameInstanceSubsystem_ReturnValue) == 0x000020, "Member 'BP_WindowUpgradePlan_C_ExecuteUbergraph_BP_WindowUpgradePlan::CallFunc_GetGameInstanceSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WindowUpgradePlan_C_ExecuteUbergraph_BP_WindowUpgradePlan, K2Node_Event_NewActorToChange) == 0x000028, "Member 'BP_WindowUpgradePlan_C_ExecuteUbergraph_BP_WindowUpgradePlan::K2Node_Event_NewActorToChange' has a wrong offset!");
static_assert(offsetof(BP_WindowUpgradePlan_C_ExecuteUbergraph_BP_WindowUpgradePlan, K2Node_CustomEvent_AbilitySystemComponent) == 0x000030, "Member 'BP_WindowUpgradePlan_C_ExecuteUbergraph_BP_WindowUpgradePlan::K2Node_CustomEvent_AbilitySystemComponent' has a wrong offset!");
static_assert(offsetof(BP_WindowUpgradePlan_C_ExecuteUbergraph_BP_WindowUpgradePlan, K2Node_CustomEvent_Spec) == 0x000038, "Member 'BP_WindowUpgradePlan_C_ExecuteUbergraph_BP_WindowUpgradePlan::K2Node_CustomEvent_Spec' has a wrong offset!");
static_assert(offsetof(BP_WindowUpgradePlan_C_ExecuteUbergraph_BP_WindowUpgradePlan, K2Node_CustomEvent_Handle) == 0x0002D0, "Member 'BP_WindowUpgradePlan_C_ExecuteUbergraph_BP_WindowUpgradePlan::K2Node_CustomEvent_Handle' has a wrong offset!");
static_assert(offsetof(BP_WindowUpgradePlan_C_ExecuteUbergraph_BP_WindowUpgradePlan, K2Node_DynamicCast_AsHouse_Actor_Base) == 0x0002D8, "Member 'BP_WindowUpgradePlan_C_ExecuteUbergraph_BP_WindowUpgradePlan::K2Node_DynamicCast_AsHouse_Actor_Base' has a wrong offset!");
static_assert(offsetof(BP_WindowUpgradePlan_C_ExecuteUbergraph_BP_WindowUpgradePlan, K2Node_DynamicCast_bSuccess) == 0x0002E0, "Member 'BP_WindowUpgradePlan_C_ExecuteUbergraph_BP_WindowUpgradePlan::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_WindowUpgradePlan_C_ExecuteUbergraph_BP_WindowUpgradePlan, CallFunc_GetOwnedGameplayTags_self_CastInput) == 0x0002E8, "Member 'BP_WindowUpgradePlan_C_ExecuteUbergraph_BP_WindowUpgradePlan::CallFunc_GetOwnedGameplayTags_self_CastInput' has a wrong offset!");
static_assert(offsetof(BP_WindowUpgradePlan_C_ExecuteUbergraph_BP_WindowUpgradePlan, CallFunc_GetOwnedGameplayTags_TagContainer) == 0x0002F8, "Member 'BP_WindowUpgradePlan_C_ExecuteUbergraph_BP_WindowUpgradePlan::CallFunc_GetOwnedGameplayTags_TagContainer' has a wrong offset!");
static_assert(offsetof(BP_WindowUpgradePlan_C_ExecuteUbergraph_BP_WindowUpgradePlan, CallFunc_HasTag_ReturnValue) == 0x000318, "Member 'BP_WindowUpgradePlan_C_ExecuteUbergraph_BP_WindowUpgradePlan::CallFunc_HasTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WindowUpgradePlan_C_ExecuteUbergraph_BP_WindowUpgradePlan, CallFunc_GetActorOfClass_ReturnValue) == 0x000320, "Member 'BP_WindowUpgradePlan_C_ExecuteUbergraph_BP_WindowUpgradePlan::CallFunc_GetActorOfClass_ReturnValue' has a wrong offset!");

// Function BP_WindowUpgradePlan.BP_WindowUpgradePlan_C.OnGameplayEffectApplied
// 0x02A8 (0x02A8 - 0x0000)
struct BP_WindowUpgradePlan_C_OnGameplayEffectApplied final
{
public:
	class UAbilitySystemComponent*                AbilitySystemComponent;                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FGameplayEffectSpec                    Spec;                                              // 0x0008(0x0298)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FActiveGameplayEffectHandle            Handle;                                            // 0x02A0(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_WindowUpgradePlan_C_OnGameplayEffectApplied) == 0x000008, "Wrong alignment on BP_WindowUpgradePlan_C_OnGameplayEffectApplied");
static_assert(sizeof(BP_WindowUpgradePlan_C_OnGameplayEffectApplied) == 0x0002A8, "Wrong size on BP_WindowUpgradePlan_C_OnGameplayEffectApplied");
static_assert(offsetof(BP_WindowUpgradePlan_C_OnGameplayEffectApplied, AbilitySystemComponent) == 0x000000, "Member 'BP_WindowUpgradePlan_C_OnGameplayEffectApplied::AbilitySystemComponent' has a wrong offset!");
static_assert(offsetof(BP_WindowUpgradePlan_C_OnGameplayEffectApplied, Spec) == 0x000008, "Member 'BP_WindowUpgradePlan_C_OnGameplayEffectApplied::Spec' has a wrong offset!");
static_assert(offsetof(BP_WindowUpgradePlan_C_OnGameplayEffectApplied, Handle) == 0x0002A0, "Member 'BP_WindowUpgradePlan_C_OnGameplayEffectApplied::Handle' has a wrong offset!");

}

