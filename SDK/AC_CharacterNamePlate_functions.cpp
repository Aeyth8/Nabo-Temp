#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: AC_CharacterNamePlate

#include "Basic.hpp"

#include "AC_CharacterNamePlate_classes.hpp"
#include "AC_CharacterNamePlate_parameters.hpp"


namespace SDK
{

// Function AC_CharacterNamePlate.AC_CharacterNamePlate_C.BindHealthChangedListeners
// (Private, BlueprintCallable, BlueprintEvent)

void UAC_CharacterNamePlate_C::BindHealthChangedListeners()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AC_CharacterNamePlate_C", "BindHealthChangedListeners");

	UObject::ProcessEvent(Func, nullptr);
}


// Function AC_CharacterNamePlate.AC_CharacterNamePlate_C.BindTeamChangedListeners
// (Private, BlueprintCallable, BlueprintEvent)

void UAC_CharacterNamePlate_C::BindTeamChangedListeners()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AC_CharacterNamePlate_C", "BindTeamChangedListeners");

	UObject::ProcessEvent(Func, nullptr);
}


// Function AC_CharacterNamePlate.AC_CharacterNamePlate_C.DebugPrintHealth
// (Private, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           ContextName                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void UAC_CharacterNamePlate_C::DebugPrintHealth(const class FString& ContextName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AC_CharacterNamePlate_C", "DebugPrintHealth");

	Params::AC_CharacterNamePlate_C_DebugPrintHealth Parms{};

	Parms.ContextName = std::move(ContextName);

	UObject::ProcessEvent(Func, &Parms);
}


// Function AC_CharacterNamePlate.AC_CharacterNamePlate_C.DebugPrintPlayerName
// (Private, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           ContextName                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void UAC_CharacterNamePlate_C::DebugPrintPlayerName(const class FString& ContextName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AC_CharacterNamePlate_C", "DebugPrintPlayerName");

	Params::AC_CharacterNamePlate_C_DebugPrintPlayerName Parms{};

	Parms.ContextName = std::move(ContextName);

	UObject::ProcessEvent(Func, &Parms);
}


// Function AC_CharacterNamePlate.AC_CharacterNamePlate_C.DebugPrintTeam
// (Private, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           ContextName                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void UAC_CharacterNamePlate_C::DebugPrintTeam(const class FString& ContextName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AC_CharacterNamePlate_C", "DebugPrintTeam");

	Params::AC_CharacterNamePlate_C_DebugPrintTeam Parms{};

	Parms.ContextName = std::move(ContextName);

	UObject::ProcessEvent(Func, &Parms);
}


// Function AC_CharacterNamePlate.AC_CharacterNamePlate_C.ExecuteUbergraph_AC_CharacterNamePlate
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UAC_CharacterNamePlate_C::ExecuteUbergraph_AC_CharacterNamePlate(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AC_CharacterNamePlate_C", "ExecuteUbergraph_AC_CharacterNamePlate");

	Params::AC_CharacterNamePlate_C_ExecuteUbergraph_AC_CharacterNamePlate Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function AC_CharacterNamePlate.AC_CharacterNamePlate_C.Get Distance To Camera
// (Private, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class APlayerCameraManager*             Player_Camera_Manager                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// double                                  Distance_To_Camera                                     (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UAC_CharacterNamePlate_C::Get_Distance_To_Camera(class APlayerCameraManager* Player_Camera_Manager, double* Distance_To_Camera)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AC_CharacterNamePlate_C", "Get Distance To Camera");

	Params::AC_CharacterNamePlate_C_Get_Distance_To_Camera Parms{};

	Parms.Player_Camera_Manager = Player_Camera_Manager;

	UObject::ProcessEvent(Func, &Parms);

	if (Distance_To_Camera != nullptr)
		*Distance_To_Camera = Parms.Distance_To_Camera;
}


// Function AC_CharacterNamePlate.AC_CharacterNamePlate_C.GetCharacterLocatorWidget
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UWI_CharacterLocator_C*           WI_CharacterLocator                                    (Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UAC_CharacterNamePlate_C::GetCharacterLocatorWidget(class UWI_CharacterLocator_C** WI_CharacterLocator)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AC_CharacterNamePlate_C", "GetCharacterLocatorWidget");

	Params::AC_CharacterNamePlate_C_GetCharacterLocatorWidget Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (WI_CharacterLocator != nullptr)
		*WI_CharacterLocator = Parms.WI_CharacterLocator;
}


// Function AC_CharacterNamePlate.AC_CharacterNamePlate_C.GetCharacterNamePlateWidget
// (Private, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UWI_CharacterNamePlate_C*         Character_Name_Plate                                   (Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UAC_CharacterNamePlate_C::GetCharacterNamePlateWidget(class UWI_CharacterNamePlate_C** Character_Name_Plate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AC_CharacterNamePlate_C", "GetCharacterNamePlateWidget");

	Params::AC_CharacterNamePlate_C_GetCharacterNamePlateWidget Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Character_Name_Plate != nullptr)
		*Character_Name_Plate = Parms.Character_Name_Plate;
}


// Function AC_CharacterNamePlate.AC_CharacterNamePlate_C.GetHasLineOfSight
// (Private, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class APlayerCameraManager*             Player_Camera_Manager                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    Has_Line_Of_Sight_0                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UAC_CharacterNamePlate_C::GetHasLineOfSight(class APlayerCameraManager* Player_Camera_Manager, bool* Has_Line_Of_Sight_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AC_CharacterNamePlate_C", "GetHasLineOfSight");

	Params::AC_CharacterNamePlate_C_GetHasLineOfSight Parms{};

	Parms.Player_Camera_Manager = Player_Camera_Manager;

	UObject::ProcessEvent(Func, &Parms);

	if (Has_Line_Of_Sight_0 != nullptr)
		*Has_Line_Of_Sight_0 = Parms.Has_Line_Of_Sight_0;
}


// Function AC_CharacterNamePlate.AC_CharacterNamePlate_C.GetStealthActive
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Return                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UAC_CharacterNamePlate_C::GetStealthActive(bool* Return)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AC_CharacterNamePlate_C", "GetStealthActive");

	Params::AC_CharacterNamePlate_C_GetStealthActive Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Return != nullptr)
		*Return = Parms.Return;
}


// Function AC_CharacterNamePlate.AC_CharacterNamePlate_C.HandleHealthChanged
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  CurrentHealth_0                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  MaxHealth_0                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  CurrentHealthFraction                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UAC_CharacterNamePlate_C::HandleHealthChanged(double CurrentHealth_0, double MaxHealth_0, double CurrentHealthFraction)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AC_CharacterNamePlate_C", "HandleHealthChanged");

	Params::AC_CharacterNamePlate_C_HandleHealthChanged Parms{};

	Parms.CurrentHealth_0 = CurrentHealth_0;
	Parms.MaxHealth_0 = MaxHealth_0;
	Parms.CurrentHealthFraction = CurrentHealthFraction;

	UObject::ProcessEvent(Func, &Parms);
}


// Function AC_CharacterNamePlate.AC_CharacterNamePlate_C.HandleTeamChanged
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// uint8                                   Team_ID                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// ETeamType                               Team_Type                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UAC_CharacterNamePlate_C::HandleTeamChanged(uint8 Team_ID, ETeamType Team_Type)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AC_CharacterNamePlate_C", "HandleTeamChanged");

	Params::AC_CharacterNamePlate_C_HandleTeamChanged Parms{};

	Parms.Team_ID = Team_ID;
	Parms.Team_Type = Team_Type;

	UObject::ProcessEvent(Func, &Parms);
}


// Function AC_CharacterNamePlate.AC_CharacterNamePlate_C.HideIfControlledByLocalPlayer
// (Private, BlueprintCallable, BlueprintEvent)

void UAC_CharacterNamePlate_C::HideIfControlledByLocalPlayer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AC_CharacterNamePlate_C", "HideIfControlledByLocalPlayer");

	UObject::ProcessEvent(Func, nullptr);
}


// Function AC_CharacterNamePlate.AC_CharacterNamePlate_C.InitialiseWidgetPlayerName
// (Public, BlueprintCallable, BlueprintEvent)

void UAC_CharacterNamePlate_C::InitialiseWidgetPlayerName()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AC_CharacterNamePlate_C", "InitialiseWidgetPlayerName");

	UObject::ProcessEvent(Func, nullptr);
}


// Function AC_CharacterNamePlate.AC_CharacterNamePlate_C.IsComponentAboveCameraCenter
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class APlayerCameraManager*             PlayerCameraManager                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool UAC_CharacterNamePlate_C::IsComponentAboveCameraCenter(class APlayerCameraManager* PlayerCameraManager)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AC_CharacterNamePlate_C", "IsComponentAboveCameraCenter");

	Params::AC_CharacterNamePlate_C_IsComponentAboveCameraCenter Parms{};

	Parms.PlayerCameraManager = PlayerCameraManager;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function AC_CharacterNamePlate.AC_CharacterNamePlate_C.IsInfrontOfCamera
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class APlayerCameraManager*             PlayerCameraManager                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    InfrontOfCamera                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UAC_CharacterNamePlate_C::IsInfrontOfCamera(class APlayerCameraManager* PlayerCameraManager, bool* InfrontOfCamera)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AC_CharacterNamePlate_C", "IsInfrontOfCamera");

	Params::AC_CharacterNamePlate_C_IsInfrontOfCamera Parms{};

	Parms.PlayerCameraManager = PlayerCameraManager;

	UObject::ProcessEvent(Func, &Parms);

	if (InfrontOfCamera != nullptr)
		*InfrontOfCamera = Parms.InfrontOfCamera;
}


// Function AC_CharacterNamePlate.AC_CharacterNamePlate_C.IsOwnerCharacterLocallyControlled
// (Private, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool UAC_CharacterNamePlate_C::IsOwnerCharacterLocallyControlled()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AC_CharacterNamePlate_C", "IsOwnerCharacterLocallyControlled");

	Params::AC_CharacterNamePlate_C_IsOwnerCharacterLocallyControlled Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function AC_CharacterNamePlate.AC_CharacterNamePlate_C.ModifyVisibilityBasedOnDistanceState
// (Public, BlueprintCallable, BlueprintEvent)

void UAC_CharacterNamePlate_C::ModifyVisibilityBasedOnDistanceState()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AC_CharacterNamePlate_C", "ModifyVisibilityBasedOnDistanceState");

	UObject::ProcessEvent(Func, nullptr);
}


// Function AC_CharacterNamePlate.AC_CharacterNamePlate_C.OnDead
// (Public, BlueprintCallable, BlueprintEvent)

void UAC_CharacterNamePlate_C::OnDead()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AC_CharacterNamePlate_C", "OnDead");

	UObject::ProcessEvent(Func, nullptr);
}


// Function AC_CharacterNamePlate.AC_CharacterNamePlate_C.OnEnded_DA25560D477FD30929755AB6A60D9EBC
// (BlueprintCallable, BlueprintEvent)

void UAC_CharacterNamePlate_C::OnEnded_DA25560D477FD30929755AB6A60D9EBC()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AC_CharacterNamePlate_C", "OnEnded_DA25560D477FD30929755AB6A60D9EBC");

	UObject::ProcessEvent(Func, nullptr);
}


// Function AC_CharacterNamePlate.AC_CharacterNamePlate_C.OnStealthToggle
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    StealthActive                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    IsEnemyToLocalPlayer                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UAC_CharacterNamePlate_C::OnStealthToggle(bool StealthActive, bool IsEnemyToLocalPlayer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AC_CharacterNamePlate_C", "OnStealthToggle");

	Params::AC_CharacterNamePlate_C_OnStealthToggle Parms{};

	Parms.StealthActive = StealthActive;
	Parms.IsEnemyToLocalPlayer = IsEnemyToLocalPlayer;

	UObject::ProcessEvent(Func, &Parms);
}


// Function AC_CharacterNamePlate.AC_CharacterNamePlate_C.ReceiveBeginPlay
// (Event, Public, BlueprintEvent)

void UAC_CharacterNamePlate_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AC_CharacterNamePlate_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function AC_CharacterNamePlate.AC_CharacterNamePlate_C.ReceiveEndPlay
// (Event, Public, BlueprintEvent)
// Parameters:
// EEndPlayReason                          EndPlayReason                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UAC_CharacterNamePlate_C::ReceiveEndPlay(EEndPlayReason EndPlayReason)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AC_CharacterNamePlate_C", "ReceiveEndPlay");

	Params::AC_CharacterNamePlate_C_ReceiveEndPlay Parms{};

	Parms.EndPlayReason = EndPlayReason;

	UObject::ProcessEvent(Func, &Parms);
}


// Function AC_CharacterNamePlate.AC_CharacterNamePlate_C.ReceiveTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UAC_CharacterNamePlate_C::ReceiveTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AC_CharacterNamePlate_C", "ReceiveTick");

	Params::AC_CharacterNamePlate_C_ReceiveTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function AC_CharacterNamePlate.AC_CharacterNamePlate_C.ScaleWidgetAccordingToDistance
// (Private, BlueprintCallable, BlueprintEvent)

void UAC_CharacterNamePlate_C::ScaleWidgetAccordingToDistance()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AC_CharacterNamePlate_C", "ScaleWidgetAccordingToDistance");

	UObject::ProcessEvent(Func, nullptr);
}


// Function AC_CharacterNamePlate.AC_CharacterNamePlate_C.SetCurrentHealth
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  CurrentHealth_0                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UAC_CharacterNamePlate_C::SetCurrentHealth(double CurrentHealth_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AC_CharacterNamePlate_C", "SetCurrentHealth");

	Params::AC_CharacterNamePlate_C_SetCurrentHealth Parms{};

	Parms.CurrentHealth_0 = CurrentHealth_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function AC_CharacterNamePlate.AC_CharacterNamePlate_C.SetDistanceState
// (Public, BlueprintCallable, BlueprintEvent)

void UAC_CharacterNamePlate_C::SetDistanceState()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AC_CharacterNamePlate_C", "SetDistanceState");

	UObject::ProcessEvent(Func, nullptr);
}


// Function AC_CharacterNamePlate.AC_CharacterNamePlate_C.SetForcedStealth
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Enable                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UAC_CharacterNamePlate_C::SetForcedStealth(bool Enable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AC_CharacterNamePlate_C", "SetForcedStealth");

	Params::AC_CharacterNamePlate_C_SetForcedStealth Parms{};

	Parms.Enable = Enable;

	UObject::ProcessEvent(Func, &Parms);
}


// Function AC_CharacterNamePlate.AC_CharacterNamePlate_C.SetFriendlyOwner
// (Public, BlueprintCallable, BlueprintEvent)

void UAC_CharacterNamePlate_C::SetFriendlyOwner()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AC_CharacterNamePlate_C", "SetFriendlyOwner");

	UObject::ProcessEvent(Func, nullptr);
}


// Function AC_CharacterNamePlate.AC_CharacterNamePlate_C.SetIsTalking
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsTalking                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UAC_CharacterNamePlate_C::SetIsTalking(bool IsTalking)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AC_CharacterNamePlate_C", "SetIsTalking");

	Params::AC_CharacterNamePlate_C_SetIsTalking Parms{};

	Parms.IsTalking = IsTalking;

	UObject::ProcessEvent(Func, &Parms);
}


// Function AC_CharacterNamePlate.AC_CharacterNamePlate_C.SetMaxHealth
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  MaxHealth_0                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UAC_CharacterNamePlate_C::SetMaxHealth(double MaxHealth_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AC_CharacterNamePlate_C", "SetMaxHealth");

	Params::AC_CharacterNamePlate_C_SetMaxHealth Parms{};

	Parms.MaxHealth_0 = MaxHealth_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function AC_CharacterNamePlate.AC_CharacterNamePlate_C.SetOwnerInLocator
// (Public, BlueprintCallable, BlueprintEvent)

void UAC_CharacterNamePlate_C::SetOwnerInLocator()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AC_CharacterNamePlate_C", "SetOwnerInLocator");

	UObject::ProcessEvent(Func, nullptr);
}


// Function AC_CharacterNamePlate.AC_CharacterNamePlate_C.SetPlayerName
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           PlayerName_0                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void UAC_CharacterNamePlate_C::SetPlayerName(const class FString& PlayerName_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AC_CharacterNamePlate_C", "SetPlayerName");

	Params::AC_CharacterNamePlate_C_SetPlayerName Parms{};

	Parms.PlayerName_0 = std::move(PlayerName_0);

	UObject::ProcessEvent(Func, &Parms);
}


// Function AC_CharacterNamePlate.AC_CharacterNamePlate_C.StoreVisibilityComponent
// (Public, BlueprintCallable, BlueprintEvent)

void UAC_CharacterNamePlate_C::StoreVisibilityComponent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AC_CharacterNamePlate_C", "StoreVisibilityComponent");

	UObject::ProcessEvent(Func, nullptr);
}


// Function AC_CharacterNamePlate.AC_CharacterNamePlate_C.ToggleInCombatVisuals
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Active                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UAC_CharacterNamePlate_C::ToggleInCombatVisuals(bool Active)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AC_CharacterNamePlate_C", "ToggleInCombatVisuals");

	Params::AC_CharacterNamePlate_C_ToggleInCombatVisuals Parms{};

	Parms.Active = Active;

	UObject::ProcessEvent(Func, &Parms);
}


// Function AC_CharacterNamePlate.AC_CharacterNamePlate_C.Try Repositioning WidgetIfOffScreen
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class APlayerCameraManager*             PlayerCameraManager                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UAC_CharacterNamePlate_C::Try_Repositioning_WidgetIfOffScreen(class APlayerCameraManager* PlayerCameraManager)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AC_CharacterNamePlate_C", "Try Repositioning WidgetIfOffScreen");

	Params::AC_CharacterNamePlate_C_Try_Repositioning_WidgetIfOffScreen Parms{};

	Parms.PlayerCameraManager = PlayerCameraManager;

	UObject::ProcessEvent(Func, &Parms);
}


// Function AC_CharacterNamePlate.AC_CharacterNamePlate_C.TryReadHealthStateVariablesFromCharacter
// (Private, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Success                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UAC_CharacterNamePlate_C::TryReadHealthStateVariablesFromCharacter(bool* Success)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AC_CharacterNamePlate_C", "TryReadHealthStateVariablesFromCharacter");

	Params::AC_CharacterNamePlate_C_TryReadHealthStateVariablesFromCharacter Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Success != nullptr)
		*Success = Parms.Success;
}


// Function AC_CharacterNamePlate.AC_CharacterNamePlate_C.TryReadNameStateVariablesFromCharacter
// (Private, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Success                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UAC_CharacterNamePlate_C::TryReadNameStateVariablesFromCharacter(bool* Success)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AC_CharacterNamePlate_C", "TryReadNameStateVariablesFromCharacter");

	Params::AC_CharacterNamePlate_C_TryReadNameStateVariablesFromCharacter Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Success != nullptr)
		*Success = Parms.Success;
}


// Function AC_CharacterNamePlate.AC_CharacterNamePlate_C.TryReadTeamStateVariablesFromCharacter
// (Protected, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Success                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UAC_CharacterNamePlate_C::TryReadTeamStateVariablesFromCharacter(bool* Success)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AC_CharacterNamePlate_C", "TryReadTeamStateVariablesFromCharacter");

	Params::AC_CharacterNamePlate_C_TryReadTeamStateVariablesFromCharacter Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Success != nullptr)
		*Success = Parms.Success;
}


// Function AC_CharacterNamePlate.AC_CharacterNamePlate_C.UnbindHealthChangedListeners
// (Private, BlueprintCallable, BlueprintEvent)

void UAC_CharacterNamePlate_C::UnbindHealthChangedListeners()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AC_CharacterNamePlate_C", "UnbindHealthChangedListeners");

	UObject::ProcessEvent(Func, nullptr);
}


// Function AC_CharacterNamePlate.AC_CharacterNamePlate_C.UnbindTeamChangedListeners
// (Private, BlueprintCallable, BlueprintEvent)

void UAC_CharacterNamePlate_C::UnbindTeamChangedListeners()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AC_CharacterNamePlate_C", "UnbindTeamChangedListeners");

	UObject::ProcessEvent(Func, nullptr);
}


// Function AC_CharacterNamePlate.AC_CharacterNamePlate_C.Update Widget Player Name
// (Private, BlueprintCallable, BlueprintEvent)

void UAC_CharacterNamePlate_C::Update_Widget_Player_Name()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AC_CharacterNamePlate_C", "Update Widget Player Name");

	UObject::ProcessEvent(Func, nullptr);
}


// Function AC_CharacterNamePlate.AC_CharacterNamePlate_C.UpdateLocatorScale
// (Public, BlueprintCallable, BlueprintEvent)

void UAC_CharacterNamePlate_C::UpdateLocatorScale()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AC_CharacterNamePlate_C", "UpdateLocatorScale");

	UObject::ProcessEvent(Func, nullptr);
}


// Function AC_CharacterNamePlate.AC_CharacterNamePlate_C.UpdateStateVariables
// (Private, BlueprintCallable, BlueprintEvent)
// Parameters:
// class APlayerCameraManager*             Player_Camera_Manager                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UAC_CharacterNamePlate_C::UpdateStateVariables(class APlayerCameraManager* Player_Camera_Manager)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AC_CharacterNamePlate_C", "UpdateStateVariables");

	Params::AC_CharacterNamePlate_C_UpdateStateVariables Parms{};

	Parms.Player_Camera_Manager = Player_Camera_Manager;

	UObject::ProcessEvent(Func, &Parms);
}


// Function AC_CharacterNamePlate.AC_CharacterNamePlate_C.UpdateTeam
// (Public, BlueprintCallable, BlueprintEvent)

void UAC_CharacterNamePlate_C::UpdateTeam()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AC_CharacterNamePlate_C", "UpdateTeam");

	UObject::ProcessEvent(Func, nullptr);
}


// Function AC_CharacterNamePlate.AC_CharacterNamePlate_C.UpdateWidgetActivationState
// (Private, BlueprintCallable, BlueprintEvent)

void UAC_CharacterNamePlate_C::UpdateWidgetActivationState()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AC_CharacterNamePlate_C", "UpdateWidgetActivationState");

	UObject::ProcessEvent(Func, nullptr);
}


// Function AC_CharacterNamePlate.AC_CharacterNamePlate_C.UpdateWidgetHealthBar
// (Private, BlueprintCallable, BlueprintEvent)

void UAC_CharacterNamePlate_C::UpdateWidgetHealthBar()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AC_CharacterNamePlate_C", "UpdateWidgetHealthBar");

	UObject::ProcessEvent(Func, nullptr);
}


// Function AC_CharacterNamePlate.AC_CharacterNamePlate_C.UpdateWidgetTeam
// (Private, BlueprintCallable, BlueprintEvent)

void UAC_CharacterNamePlate_C::UpdateWidgetTeam()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AC_CharacterNamePlate_C", "UpdateWidgetTeam");

	UObject::ProcessEvent(Func, nullptr);
}

}

