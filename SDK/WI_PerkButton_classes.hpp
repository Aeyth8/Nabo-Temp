#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WI_PerkButton

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "SlateCore_structs.hpp"
#include "JP_structs.hpp"
#include "CommonUI_classes.hpp"
#include "UMG_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WI_PerkButton.WI_PerkButton_C
// 0x0140 (0x16E0 - 0x15A0)
class UWI_PerkButton_C final : public UCommonButtonBase
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x15A0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       EquipAnimation;                                    // 0x15A8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       HoverAnimation;                                    // 0x15B0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UImage*                                 ActiveIcon;                                        // 0x15B8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Backdrop;                                          // 0x15C0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWI_CircleButtonHoverEffectMinus512x512_C* ButtonHoverEffect;                                 // 0x15C8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                               ButtonSizeBox;                                     // 0x15D0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 EquippedIcon;                                      // 0x15D8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Icon;                                              // 0x15E0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                               IconSizeBox;                                       // 0x15E8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_54;                                          // 0x15F0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	bool                                          DesignerPreviewShowHoverEffect;                    // 0x15F8(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_15F9[0x7];                                     // 0x15F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        ButtonDiameter;                                    // 0x1600(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        IconDiameter;                                      // 0x1608(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           DefaultPerkBackgroundColor;                        // 0x1610(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           OffensePerkBackgroundColor;                        // 0x1620(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           DefensePerkBackgroundColor;                        // 0x1630(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           MaintenancePerkBackgroundColor;                    // 0x1640(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           LockBackgroundTint;                                // 0x1650(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           DefaultBackgroundTint;                             // 0x1660(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsLocked;                                          // 0x1670(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1671[0x7];                                     // 0x1671(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UTexture2D>              NoIcon;                                            // 0x1678(0x0028)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, HasGetValueTypeHash)
	TSoftObjectPtr<class UTexture2D>              LockedIcon;                                        // 0x16A0(0x0028)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, HasGetValueTypeHash)
	bool                                          IsActive;                                          // 0x16C8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsEquipped;                                        // 0x16C9(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_16CA[0x2];                                     // 0x16CA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMargin                                Padding_0;                                         // 0x16CC(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void BP_OnHovered();
	void BP_OnPressed();
	void BP_OnUnhovered();
	void Construct();
	void ExecuteUbergraph_WI_PerkButton(int32 EntryPoint);
	void GetIsActive(bool* IsActive_0);
	void GetIsEquipped(bool* IsEquipped_0);
	void LockPerkButton();
	void OnLoaded_6E0DF22B4C0294CC70389FBF5B7ADD0F(class UObject* Loaded);
	void PreConstruct(bool IsDesignTime);
	void SetBackdrop(const struct FLinearColor& InColorAndOpacity);
	void SetButtonDiameter(double Diameter);
	void SetIcon(TSoftObjectPtr<class UTexture2D> SoftTexture);
	void SetIconDiameter(double IconDiameter_0);
	void SetIsActive(bool IsActive_0);
	void SetIsEquipped(bool IsEquipped_0);
	void SetPerk(const struct FGameplayTag& PerkID);
	void UnlockPerkButton();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WI_PerkButton_C">();
	}
	static class UWI_PerkButton_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWI_PerkButton_C>();
	}
};
static_assert(alignof(UWI_PerkButton_C) == 0x000010, "Wrong alignment on UWI_PerkButton_C");
static_assert(sizeof(UWI_PerkButton_C) == 0x0016E0, "Wrong size on UWI_PerkButton_C");
static_assert(offsetof(UWI_PerkButton_C, UberGraphFrame) == 0x0015A0, "Member 'UWI_PerkButton_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWI_PerkButton_C, EquipAnimation) == 0x0015A8, "Member 'UWI_PerkButton_C::EquipAnimation' has a wrong offset!");
static_assert(offsetof(UWI_PerkButton_C, HoverAnimation) == 0x0015B0, "Member 'UWI_PerkButton_C::HoverAnimation' has a wrong offset!");
static_assert(offsetof(UWI_PerkButton_C, ActiveIcon) == 0x0015B8, "Member 'UWI_PerkButton_C::ActiveIcon' has a wrong offset!");
static_assert(offsetof(UWI_PerkButton_C, Backdrop) == 0x0015C0, "Member 'UWI_PerkButton_C::Backdrop' has a wrong offset!");
static_assert(offsetof(UWI_PerkButton_C, ButtonHoverEffect) == 0x0015C8, "Member 'UWI_PerkButton_C::ButtonHoverEffect' has a wrong offset!");
static_assert(offsetof(UWI_PerkButton_C, ButtonSizeBox) == 0x0015D0, "Member 'UWI_PerkButton_C::ButtonSizeBox' has a wrong offset!");
static_assert(offsetof(UWI_PerkButton_C, EquippedIcon) == 0x0015D8, "Member 'UWI_PerkButton_C::EquippedIcon' has a wrong offset!");
static_assert(offsetof(UWI_PerkButton_C, Icon) == 0x0015E0, "Member 'UWI_PerkButton_C::Icon' has a wrong offset!");
static_assert(offsetof(UWI_PerkButton_C, IconSizeBox) == 0x0015E8, "Member 'UWI_PerkButton_C::IconSizeBox' has a wrong offset!");
static_assert(offsetof(UWI_PerkButton_C, Image_54) == 0x0015F0, "Member 'UWI_PerkButton_C::Image_54' has a wrong offset!");
static_assert(offsetof(UWI_PerkButton_C, DesignerPreviewShowHoverEffect) == 0x0015F8, "Member 'UWI_PerkButton_C::DesignerPreviewShowHoverEffect' has a wrong offset!");
static_assert(offsetof(UWI_PerkButton_C, ButtonDiameter) == 0x001600, "Member 'UWI_PerkButton_C::ButtonDiameter' has a wrong offset!");
static_assert(offsetof(UWI_PerkButton_C, IconDiameter) == 0x001608, "Member 'UWI_PerkButton_C::IconDiameter' has a wrong offset!");
static_assert(offsetof(UWI_PerkButton_C, DefaultPerkBackgroundColor) == 0x001610, "Member 'UWI_PerkButton_C::DefaultPerkBackgroundColor' has a wrong offset!");
static_assert(offsetof(UWI_PerkButton_C, OffensePerkBackgroundColor) == 0x001620, "Member 'UWI_PerkButton_C::OffensePerkBackgroundColor' has a wrong offset!");
static_assert(offsetof(UWI_PerkButton_C, DefensePerkBackgroundColor) == 0x001630, "Member 'UWI_PerkButton_C::DefensePerkBackgroundColor' has a wrong offset!");
static_assert(offsetof(UWI_PerkButton_C, MaintenancePerkBackgroundColor) == 0x001640, "Member 'UWI_PerkButton_C::MaintenancePerkBackgroundColor' has a wrong offset!");
static_assert(offsetof(UWI_PerkButton_C, LockBackgroundTint) == 0x001650, "Member 'UWI_PerkButton_C::LockBackgroundTint' has a wrong offset!");
static_assert(offsetof(UWI_PerkButton_C, DefaultBackgroundTint) == 0x001660, "Member 'UWI_PerkButton_C::DefaultBackgroundTint' has a wrong offset!");
static_assert(offsetof(UWI_PerkButton_C, IsLocked) == 0x001670, "Member 'UWI_PerkButton_C::IsLocked' has a wrong offset!");
static_assert(offsetof(UWI_PerkButton_C, NoIcon) == 0x001678, "Member 'UWI_PerkButton_C::NoIcon' has a wrong offset!");
static_assert(offsetof(UWI_PerkButton_C, LockedIcon) == 0x0016A0, "Member 'UWI_PerkButton_C::LockedIcon' has a wrong offset!");
static_assert(offsetof(UWI_PerkButton_C, IsActive) == 0x0016C8, "Member 'UWI_PerkButton_C::IsActive' has a wrong offset!");
static_assert(offsetof(UWI_PerkButton_C, IsEquipped) == 0x0016C9, "Member 'UWI_PerkButton_C::IsEquipped' has a wrong offset!");
static_assert(offsetof(UWI_PerkButton_C, Padding_0) == 0x0016CC, "Member 'UWI_PerkButton_C::Padding_0' has a wrong offset!");

}

