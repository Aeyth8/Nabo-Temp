#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GA_MontageEmote

#include "Basic.hpp"

#include "JP_structs.hpp"
#include "Engine_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "GameplayAbilities_structs.hpp"


namespace SDK::Params
{

// Function GA_MontageEmote.GA_MontageEmote_C.EventReceived_59DEE0204B754F6D2A3E7E9C2C8C8968
// 0x00B8 (0x00B8 - 0x0000)
struct GA_MontageEmote_C_EventReceived_59DEE0204B754F6D2A3E7E9C2C8C8968 final
{
public:
	struct FGameplayTag                           EventTag;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	struct FGameplayEventData                     EventData;                                         // 0x0008(0x00B0)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(GA_MontageEmote_C_EventReceived_59DEE0204B754F6D2A3E7E9C2C8C8968) == 0x000008, "Wrong alignment on GA_MontageEmote_C_EventReceived_59DEE0204B754F6D2A3E7E9C2C8C8968");
static_assert(sizeof(GA_MontageEmote_C_EventReceived_59DEE0204B754F6D2A3E7E9C2C8C8968) == 0x0000B8, "Wrong size on GA_MontageEmote_C_EventReceived_59DEE0204B754F6D2A3E7E9C2C8C8968");
static_assert(offsetof(GA_MontageEmote_C_EventReceived_59DEE0204B754F6D2A3E7E9C2C8C8968, EventTag) == 0x000000, "Member 'GA_MontageEmote_C_EventReceived_59DEE0204B754F6D2A3E7E9C2C8C8968::EventTag' has a wrong offset!");
static_assert(offsetof(GA_MontageEmote_C_EventReceived_59DEE0204B754F6D2A3E7E9C2C8C8968, EventData) == 0x000008, "Member 'GA_MontageEmote_C_EventReceived_59DEE0204B754F6D2A3E7E9C2C8C8968::EventData' has a wrong offset!");

// Function GA_MontageEmote.GA_MontageEmote_C.EventReceived_F22B7CC8484BC23E2BEE24A1235DA5DE
// 0x00B8 (0x00B8 - 0x0000)
struct GA_MontageEmote_C_EventReceived_F22B7CC8484BC23E2BEE24A1235DA5DE final
{
public:
	struct FGameplayTag                           EventTag;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	struct FGameplayEventData                     EventData;                                         // 0x0008(0x00B0)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(GA_MontageEmote_C_EventReceived_F22B7CC8484BC23E2BEE24A1235DA5DE) == 0x000008, "Wrong alignment on GA_MontageEmote_C_EventReceived_F22B7CC8484BC23E2BEE24A1235DA5DE");
static_assert(sizeof(GA_MontageEmote_C_EventReceived_F22B7CC8484BC23E2BEE24A1235DA5DE) == 0x0000B8, "Wrong size on GA_MontageEmote_C_EventReceived_F22B7CC8484BC23E2BEE24A1235DA5DE");
static_assert(offsetof(GA_MontageEmote_C_EventReceived_F22B7CC8484BC23E2BEE24A1235DA5DE, EventTag) == 0x000000, "Member 'GA_MontageEmote_C_EventReceived_F22B7CC8484BC23E2BEE24A1235DA5DE::EventTag' has a wrong offset!");
static_assert(offsetof(GA_MontageEmote_C_EventReceived_F22B7CC8484BC23E2BEE24A1235DA5DE, EventData) == 0x000008, "Member 'GA_MontageEmote_C_EventReceived_F22B7CC8484BC23E2BEE24A1235DA5DE::EventData' has a wrong offset!");

// Function GA_MontageEmote.GA_MontageEmote_C.ExecuteUbergraph_GA_MontageEmote
// 0x0A48 (0x0A48 - 0x0000)
struct GA_MontageEmote_C_ExecuteUbergraph_GA_MontageEmote final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateJP*                           CallFunc_GetGameStateJP_ReturnValue;               // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasMatchEnded_ReturnValue;                // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(const struct FGameplayTag& EventTag, const struct FGameplayEventData& EventData)> K2Node_CreateDelegate_OutputDelegate;              // 0x0014(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           K2Node_CustomEvent_EventTag_9;                     // 0x0024(0x0008)(NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayEventData                     K2Node_CustomEvent_EventData_9;                    // 0x0030(0x00B0)()
	struct FGameplayTag                           K2Node_CustomEvent_EventTag_8;                     // 0x00E0(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FGameplayEventData                     K2Node_CustomEvent_EventData_8;                    // 0x00E8(0x00B0)()
	TDelegate<void(const struct FGameplayTag& EventTag, const struct FGameplayEventData& EventData)> K2Node_CreateDelegate_OutputDelegate_1;            // 0x0198(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           K2Node_CustomEvent_EventTag_7;                     // 0x01A8(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FGameplayEventData                     K2Node_CustomEvent_EventData_7;                    // 0x01B0(0x00B0)()
	TDelegate<void(const struct FGameplayTag& EventTag, const struct FGameplayEventData& EventData)> K2Node_CreateDelegate_OutputDelegate_2;            // 0x0260(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           K2Node_CustomEvent_EventTag_6;                     // 0x0270(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FGameplayEventData                     K2Node_CustomEvent_EventData_6;                    // 0x0278(0x00B0)()
	TDelegate<void(const struct FGameplayTag& EventTag, const struct FGameplayEventData& EventData)> K2Node_CreateDelegate_OutputDelegate_3;            // 0x0328(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           K2Node_CustomEvent_EventTag_5;                     // 0x0338(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FGameplayEventData                     K2Node_CustomEvent_EventData_5;                    // 0x0340(0x00B0)()
	TDelegate<void(const struct FGameplayTag& EventTag, const struct FGameplayEventData& EventData)> K2Node_CreateDelegate_OutputDelegate_4;            // 0x03F0(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayEventData                     Temp_struct_Variable;                              // 0x0400(0x00B0)()
	struct FGameplayTag                           Temp_struct_Variable_1;                            // 0x04B0(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           K2Node_CustomEvent_EventTag_4;                     // 0x04B8(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FGameplayEventData                     K2Node_CustomEvent_EventData_4;                    // 0x04C0(0x00B0)()
	TDelegate<void(const struct FGameplayTag& EventTag, const struct FGameplayEventData& EventData)> K2Node_CreateDelegate_OutputDelegate_5;            // 0x0570(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           K2Node_CustomEvent_EventTag_3;                     // 0x0580(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FGameplayEventData                     K2Node_CustomEvent_EventData_3;                    // 0x0588(0x00B0)()
	TDelegate<void(const struct FGameplayTag& EventTag, const struct FGameplayEventData& EventData)> K2Node_CreateDelegate_OutputDelegate_6;            // 0x0638(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           K2Node_CustomEvent_EventTag_2;                     // 0x0648(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FGameplayEventData                     K2Node_CustomEvent_EventData_2;                    // 0x0650(0x00B0)()
	TDelegate<void(const struct FGameplayTag& EventTag, const struct FGameplayEventData& EventData)> K2Node_CreateDelegate_OutputDelegate_7;            // 0x0700(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           K2Node_CustomEvent_EventTag_1;                     // 0x0710(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FGameplayEventData                     K2Node_CustomEvent_EventData_1;                    // 0x0718(0x00B0)()
	TDelegate<void(const struct FGameplayTag& EventTag, const struct FGameplayEventData& EventData)> K2Node_CreateDelegate_OutputDelegate_8;            // 0x07C8(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           K2Node_CustomEvent_EventTag;                       // 0x07D8(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FGameplayEventData                     K2Node_CustomEvent_EventData;                      // 0x07E0(0x00B0)()
	TDelegate<void(const struct FGameplayTag& EventTag, const struct FGameplayEventData& EventData)> K2Node_CreateDelegate_OutputDelegate_9;            // 0x0890(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayEventData                     Temp_struct_Variable_2;                            // 0x08A0(0x00B0)()
	struct FGameplayTag                           Temp_struct_Variable_3;                            // 0x0950(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bWasCancelled;                        // 0x0958(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_959[0x7];                                      // 0x0959(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimMontage*                           CallFunc_SetMontage_Montage;                       // 0x0960(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_10;           // 0x0968(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0978(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAbilityTask_WaitDelay*                 CallFunc_WaitDelay_ReturnValue;                    // 0x0980(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0988(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_989[0x7];                                      // 0x0989(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwningActorFromActorInfo_ReturnValue;  // 0x0990(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0998(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_999[0x7];                                      // 0x0999(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_MovementCharacter_C*                K2Node_DynamicCast_AsBP_Movement_Character;        // 0x09A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x09A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9A9[0x7];                                      // 0x09A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwningActorFromActorInfo_ReturnValue_1; // 0x09B0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_MovementCharacter_C*                K2Node_DynamicCast_AsBP_Movement_Character_1;      // 0x09B8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x09C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9C1[0x7];                                      // 0x09C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPlayMontageForMeshAndWaitForEvent*     CallFunc_PlayMontageForMeshAndWaitForEvent_ReturnValue; // 0x09C8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x09D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9D1[0x7];                                      // 0x09D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwningActorFromActorInfo_ReturnValue_2; // 0x09D8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class II_ItemWheel_C>        K2Node_DynamicCast_AsI_Item_Wheel;                 // 0x09E0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x09F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9F1[0x7];                                      // 0x09F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UInventoryComponent*                    CallFunc_GetComponentByClass_ReturnValue;          // 0x09F8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UCharacterItemWheelComponent_C*         CallFunc_GetItemWheelComponent_Return;             // 0x0A00(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UItemInstance*                          CallFunc_GetFirstItemOfType_ReturnValue;           // 0x0A08(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPlayMontageForMeshAndWaitForEvent*     CallFunc_PlayMontageForMeshAndWaitForEvent_ReturnValue_1; // 0x0A10(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0A18(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A19[0x7];                                      // 0x0A19(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwningActorFromActorInfo_ReturnValue_3; // 0x0A20(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_ResidentCharacter_C*                K2Node_DynamicCast_AsBP_Resident_Character;        // 0x0A28(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0A30(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_HasAuthority_ReturnValue;              // 0x0A31(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_HasAuthority_ReturnValue_1;            // 0x0A32(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A33[0x5];                                      // 0x0A33(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_A_ImplicitCast;          // 0x0A38(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_WaitDelay_Time_ImplicitCast;              // 0x0A40(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_MontageEmote_C_ExecuteUbergraph_GA_MontageEmote) == 0x000008, "Wrong alignment on GA_MontageEmote_C_ExecuteUbergraph_GA_MontageEmote");
static_assert(sizeof(GA_MontageEmote_C_ExecuteUbergraph_GA_MontageEmote) == 0x000A48, "Wrong size on GA_MontageEmote_C_ExecuteUbergraph_GA_MontageEmote");
static_assert(offsetof(GA_MontageEmote_C_ExecuteUbergraph_GA_MontageEmote, EntryPoint) == 0x000000, "Member 'GA_MontageEmote_C_ExecuteUbergraph_GA_MontageEmote::EntryPoint' has a wrong offset!");
static_assert(offsetof(GA_MontageEmote_C_ExecuteUbergraph_GA_MontageEmote, CallFunc_GetGameStateJP_ReturnValue) == 0x000008, "Member 'GA_MontageEmote_C_ExecuteUbergraph_GA_MontageEmote::CallFunc_GetGameStateJP_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_MontageEmote_C_ExecuteUbergraph_GA_MontageEmote, CallFunc_HasMatchEnded_ReturnValue) == 0x000010, "Member 'GA_MontageEmote_C_ExecuteUbergraph_GA_MontageEmote::CallFunc_HasMatchEnded_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_MontageEmote_C_ExecuteUbergraph_GA_MontageEmote, K2Node_CreateDelegate_OutputDelegate) == 0x000014, "Member 'GA_MontageEmote_C_ExecuteUbergraph_GA_MontageEmote::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(GA_MontageEmote_C_ExecuteUbergraph_GA_MontageEmote, K2Node_CustomEvent_EventTag_9) == 0x000024, "Member 'GA_MontageEmote_C_ExecuteUbergraph_GA_MontageEmote::K2Node_CustomEvent_EventTag_9' has a wrong offset!");
static_assert(offsetof(GA_MontageEmote_C_ExecuteUbergraph_GA_MontageEmote, K2Node_CustomEvent_EventData_9) == 0x000030, "Member 'GA_MontageEmote_C_ExecuteUbergraph_GA_MontageEmote::K2Node_CustomEvent_EventData_9' has a wrong offset!");
static_assert(offsetof(GA_MontageEmote_C_ExecuteUbergraph_GA_MontageEmote, K2Node_CustomEvent_EventTag_8) == 0x0000E0, "Member 'GA_MontageEmote_C_ExecuteUbergraph_GA_MontageEmote::K2Node_CustomEvent_EventTag_8' has a wrong offset!");
static_assert(offsetof(GA_MontageEmote_C_ExecuteUbergraph_GA_MontageEmote, K2Node_CustomEvent_EventData_8) == 0x0000E8, "Member 'GA_MontageEmote_C_ExecuteUbergraph_GA_MontageEmote::K2Node_CustomEvent_EventData_8' has a wrong offset!");
static_assert(offsetof(GA_MontageEmote_C_ExecuteUbergraph_GA_MontageEmote, K2Node_CreateDelegate_OutputDelegate_1) == 0x000198, "Member 'GA_MontageEmote_C_ExecuteUbergraph_GA_MontageEmote::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(GA_MontageEmote_C_ExecuteUbergraph_GA_MontageEmote, K2Node_CustomEvent_EventTag_7) == 0x0001A8, "Member 'GA_MontageEmote_C_ExecuteUbergraph_GA_MontageEmote::K2Node_CustomEvent_EventTag_7' has a wrong offset!");
static_assert(offsetof(GA_MontageEmote_C_ExecuteUbergraph_GA_MontageEmote, K2Node_CustomEvent_EventData_7) == 0x0001B0, "Member 'GA_MontageEmote_C_ExecuteUbergraph_GA_MontageEmote::K2Node_CustomEvent_EventData_7' has a wrong offset!");
static_assert(offsetof(GA_MontageEmote_C_ExecuteUbergraph_GA_MontageEmote, K2Node_CreateDelegate_OutputDelegate_2) == 0x000260, "Member 'GA_MontageEmote_C_ExecuteUbergraph_GA_MontageEmote::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(GA_MontageEmote_C_ExecuteUbergraph_GA_MontageEmote, K2Node_CustomEvent_EventTag_6) == 0x000270, "Member 'GA_MontageEmote_C_ExecuteUbergraph_GA_MontageEmote::K2Node_CustomEvent_EventTag_6' has a wrong offset!");
static_assert(offsetof(GA_MontageEmote_C_ExecuteUbergraph_GA_MontageEmote, K2Node_CustomEvent_EventData_6) == 0x000278, "Member 'GA_MontageEmote_C_ExecuteUbergraph_GA_MontageEmote::K2Node_CustomEvent_EventData_6' has a wrong offset!");
static_assert(offsetof(GA_MontageEmote_C_ExecuteUbergraph_GA_MontageEmote, K2Node_CreateDelegate_OutputDelegate_3) == 0x000328, "Member 'GA_MontageEmote_C_ExecuteUbergraph_GA_MontageEmote::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(GA_MontageEmote_C_ExecuteUbergraph_GA_MontageEmote, K2Node_CustomEvent_EventTag_5) == 0x000338, "Member 'GA_MontageEmote_C_ExecuteUbergraph_GA_MontageEmote::K2Node_CustomEvent_EventTag_5' has a wrong offset!");
static_assert(offsetof(GA_MontageEmote_C_ExecuteUbergraph_GA_MontageEmote, K2Node_CustomEvent_EventData_5) == 0x000340, "Member 'GA_MontageEmote_C_ExecuteUbergraph_GA_MontageEmote::K2Node_CustomEvent_EventData_5' has a wrong offset!");
static_assert(offsetof(GA_MontageEmote_C_ExecuteUbergraph_GA_MontageEmote, K2Node_CreateDelegate_OutputDelegate_4) == 0x0003F0, "Member 'GA_MontageEmote_C_ExecuteUbergraph_GA_MontageEmote::K2Node_CreateDelegate_OutputDelegate_4' has a wrong offset!");
static_assert(offsetof(GA_MontageEmote_C_ExecuteUbergraph_GA_MontageEmote, Temp_struct_Variable) == 0x000400, "Member 'GA_MontageEmote_C_ExecuteUbergraph_GA_MontageEmote::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(GA_MontageEmote_C_ExecuteUbergraph_GA_MontageEmote, Temp_struct_Variable_1) == 0x0004B0, "Member 'GA_MontageEmote_C_ExecuteUbergraph_GA_MontageEmote::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(GA_MontageEmote_C_ExecuteUbergraph_GA_MontageEmote, K2Node_CustomEvent_EventTag_4) == 0x0004B8, "Member 'GA_MontageEmote_C_ExecuteUbergraph_GA_MontageEmote::K2Node_CustomEvent_EventTag_4' has a wrong offset!");
static_assert(offsetof(GA_MontageEmote_C_ExecuteUbergraph_GA_MontageEmote, K2Node_CustomEvent_EventData_4) == 0x0004C0, "Member 'GA_MontageEmote_C_ExecuteUbergraph_GA_MontageEmote::K2Node_CustomEvent_EventData_4' has a wrong offset!");
static_assert(offsetof(GA_MontageEmote_C_ExecuteUbergraph_GA_MontageEmote, K2Node_CreateDelegate_OutputDelegate_5) == 0x000570, "Member 'GA_MontageEmote_C_ExecuteUbergraph_GA_MontageEmote::K2Node_CreateDelegate_OutputDelegate_5' has a wrong offset!");
static_assert(offsetof(GA_MontageEmote_C_ExecuteUbergraph_GA_MontageEmote, K2Node_CustomEvent_EventTag_3) == 0x000580, "Member 'GA_MontageEmote_C_ExecuteUbergraph_GA_MontageEmote::K2Node_CustomEvent_EventTag_3' has a wrong offset!");
static_assert(offsetof(GA_MontageEmote_C_ExecuteUbergraph_GA_MontageEmote, K2Node_CustomEvent_EventData_3) == 0x000588, "Member 'GA_MontageEmote_C_ExecuteUbergraph_GA_MontageEmote::K2Node_CustomEvent_EventData_3' has a wrong offset!");
static_assert(offsetof(GA_MontageEmote_C_ExecuteUbergraph_GA_MontageEmote, K2Node_CreateDelegate_OutputDelegate_6) == 0x000638, "Member 'GA_MontageEmote_C_ExecuteUbergraph_GA_MontageEmote::K2Node_CreateDelegate_OutputDelegate_6' has a wrong offset!");
static_assert(offsetof(GA_MontageEmote_C_ExecuteUbergraph_GA_MontageEmote, K2Node_CustomEvent_EventTag_2) == 0x000648, "Member 'GA_MontageEmote_C_ExecuteUbergraph_GA_MontageEmote::K2Node_CustomEvent_EventTag_2' has a wrong offset!");
static_assert(offsetof(GA_MontageEmote_C_ExecuteUbergraph_GA_MontageEmote, K2Node_CustomEvent_EventData_2) == 0x000650, "Member 'GA_MontageEmote_C_ExecuteUbergraph_GA_MontageEmote::K2Node_CustomEvent_EventData_2' has a wrong offset!");
static_assert(offsetof(GA_MontageEmote_C_ExecuteUbergraph_GA_MontageEmote, K2Node_CreateDelegate_OutputDelegate_7) == 0x000700, "Member 'GA_MontageEmote_C_ExecuteUbergraph_GA_MontageEmote::K2Node_CreateDelegate_OutputDelegate_7' has a wrong offset!");
static_assert(offsetof(GA_MontageEmote_C_ExecuteUbergraph_GA_MontageEmote, K2Node_CustomEvent_EventTag_1) == 0x000710, "Member 'GA_MontageEmote_C_ExecuteUbergraph_GA_MontageEmote::K2Node_CustomEvent_EventTag_1' has a wrong offset!");
static_assert(offsetof(GA_MontageEmote_C_ExecuteUbergraph_GA_MontageEmote, K2Node_CustomEvent_EventData_1) == 0x000718, "Member 'GA_MontageEmote_C_ExecuteUbergraph_GA_MontageEmote::K2Node_CustomEvent_EventData_1' has a wrong offset!");
static_assert(offsetof(GA_MontageEmote_C_ExecuteUbergraph_GA_MontageEmote, K2Node_CreateDelegate_OutputDelegate_8) == 0x0007C8, "Member 'GA_MontageEmote_C_ExecuteUbergraph_GA_MontageEmote::K2Node_CreateDelegate_OutputDelegate_8' has a wrong offset!");
static_assert(offsetof(GA_MontageEmote_C_ExecuteUbergraph_GA_MontageEmote, K2Node_CustomEvent_EventTag) == 0x0007D8, "Member 'GA_MontageEmote_C_ExecuteUbergraph_GA_MontageEmote::K2Node_CustomEvent_EventTag' has a wrong offset!");
static_assert(offsetof(GA_MontageEmote_C_ExecuteUbergraph_GA_MontageEmote, K2Node_CustomEvent_EventData) == 0x0007E0, "Member 'GA_MontageEmote_C_ExecuteUbergraph_GA_MontageEmote::K2Node_CustomEvent_EventData' has a wrong offset!");
static_assert(offsetof(GA_MontageEmote_C_ExecuteUbergraph_GA_MontageEmote, K2Node_CreateDelegate_OutputDelegate_9) == 0x000890, "Member 'GA_MontageEmote_C_ExecuteUbergraph_GA_MontageEmote::K2Node_CreateDelegate_OutputDelegate_9' has a wrong offset!");
static_assert(offsetof(GA_MontageEmote_C_ExecuteUbergraph_GA_MontageEmote, Temp_struct_Variable_2) == 0x0008A0, "Member 'GA_MontageEmote_C_ExecuteUbergraph_GA_MontageEmote::Temp_struct_Variable_2' has a wrong offset!");
static_assert(offsetof(GA_MontageEmote_C_ExecuteUbergraph_GA_MontageEmote, Temp_struct_Variable_3) == 0x000950, "Member 'GA_MontageEmote_C_ExecuteUbergraph_GA_MontageEmote::Temp_struct_Variable_3' has a wrong offset!");
static_assert(offsetof(GA_MontageEmote_C_ExecuteUbergraph_GA_MontageEmote, K2Node_Event_bWasCancelled) == 0x000958, "Member 'GA_MontageEmote_C_ExecuteUbergraph_GA_MontageEmote::K2Node_Event_bWasCancelled' has a wrong offset!");
static_assert(offsetof(GA_MontageEmote_C_ExecuteUbergraph_GA_MontageEmote, CallFunc_SetMontage_Montage) == 0x000960, "Member 'GA_MontageEmote_C_ExecuteUbergraph_GA_MontageEmote::CallFunc_SetMontage_Montage' has a wrong offset!");
static_assert(offsetof(GA_MontageEmote_C_ExecuteUbergraph_GA_MontageEmote, K2Node_CreateDelegate_OutputDelegate_10) == 0x000968, "Member 'GA_MontageEmote_C_ExecuteUbergraph_GA_MontageEmote::K2Node_CreateDelegate_OutputDelegate_10' has a wrong offset!");
static_assert(offsetof(GA_MontageEmote_C_ExecuteUbergraph_GA_MontageEmote, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000978, "Member 'GA_MontageEmote_C_ExecuteUbergraph_GA_MontageEmote::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_MontageEmote_C_ExecuteUbergraph_GA_MontageEmote, CallFunc_WaitDelay_ReturnValue) == 0x000980, "Member 'GA_MontageEmote_C_ExecuteUbergraph_GA_MontageEmote::CallFunc_WaitDelay_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_MontageEmote_C_ExecuteUbergraph_GA_MontageEmote, CallFunc_IsValid_ReturnValue) == 0x000988, "Member 'GA_MontageEmote_C_ExecuteUbergraph_GA_MontageEmote::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_MontageEmote_C_ExecuteUbergraph_GA_MontageEmote, CallFunc_GetOwningActorFromActorInfo_ReturnValue) == 0x000990, "Member 'GA_MontageEmote_C_ExecuteUbergraph_GA_MontageEmote::CallFunc_GetOwningActorFromActorInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_MontageEmote_C_ExecuteUbergraph_GA_MontageEmote, CallFunc_Not_PreBool_ReturnValue) == 0x000998, "Member 'GA_MontageEmote_C_ExecuteUbergraph_GA_MontageEmote::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_MontageEmote_C_ExecuteUbergraph_GA_MontageEmote, K2Node_DynamicCast_AsBP_Movement_Character) == 0x0009A0, "Member 'GA_MontageEmote_C_ExecuteUbergraph_GA_MontageEmote::K2Node_DynamicCast_AsBP_Movement_Character' has a wrong offset!");
static_assert(offsetof(GA_MontageEmote_C_ExecuteUbergraph_GA_MontageEmote, K2Node_DynamicCast_bSuccess) == 0x0009A8, "Member 'GA_MontageEmote_C_ExecuteUbergraph_GA_MontageEmote::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(GA_MontageEmote_C_ExecuteUbergraph_GA_MontageEmote, CallFunc_GetOwningActorFromActorInfo_ReturnValue_1) == 0x0009B0, "Member 'GA_MontageEmote_C_ExecuteUbergraph_GA_MontageEmote::CallFunc_GetOwningActorFromActorInfo_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_MontageEmote_C_ExecuteUbergraph_GA_MontageEmote, K2Node_DynamicCast_AsBP_Movement_Character_1) == 0x0009B8, "Member 'GA_MontageEmote_C_ExecuteUbergraph_GA_MontageEmote::K2Node_DynamicCast_AsBP_Movement_Character_1' has a wrong offset!");
static_assert(offsetof(GA_MontageEmote_C_ExecuteUbergraph_GA_MontageEmote, K2Node_DynamicCast_bSuccess_1) == 0x0009C0, "Member 'GA_MontageEmote_C_ExecuteUbergraph_GA_MontageEmote::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(GA_MontageEmote_C_ExecuteUbergraph_GA_MontageEmote, CallFunc_PlayMontageForMeshAndWaitForEvent_ReturnValue) == 0x0009C8, "Member 'GA_MontageEmote_C_ExecuteUbergraph_GA_MontageEmote::CallFunc_PlayMontageForMeshAndWaitForEvent_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_MontageEmote_C_ExecuteUbergraph_GA_MontageEmote, CallFunc_IsValid_ReturnValue_1) == 0x0009D0, "Member 'GA_MontageEmote_C_ExecuteUbergraph_GA_MontageEmote::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_MontageEmote_C_ExecuteUbergraph_GA_MontageEmote, CallFunc_GetOwningActorFromActorInfo_ReturnValue_2) == 0x0009D8, "Member 'GA_MontageEmote_C_ExecuteUbergraph_GA_MontageEmote::CallFunc_GetOwningActorFromActorInfo_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GA_MontageEmote_C_ExecuteUbergraph_GA_MontageEmote, K2Node_DynamicCast_AsI_Item_Wheel) == 0x0009E0, "Member 'GA_MontageEmote_C_ExecuteUbergraph_GA_MontageEmote::K2Node_DynamicCast_AsI_Item_Wheel' has a wrong offset!");
static_assert(offsetof(GA_MontageEmote_C_ExecuteUbergraph_GA_MontageEmote, K2Node_DynamicCast_bSuccess_2) == 0x0009F0, "Member 'GA_MontageEmote_C_ExecuteUbergraph_GA_MontageEmote::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(GA_MontageEmote_C_ExecuteUbergraph_GA_MontageEmote, CallFunc_GetComponentByClass_ReturnValue) == 0x0009F8, "Member 'GA_MontageEmote_C_ExecuteUbergraph_GA_MontageEmote::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_MontageEmote_C_ExecuteUbergraph_GA_MontageEmote, CallFunc_GetItemWheelComponent_Return) == 0x000A00, "Member 'GA_MontageEmote_C_ExecuteUbergraph_GA_MontageEmote::CallFunc_GetItemWheelComponent_Return' has a wrong offset!");
static_assert(offsetof(GA_MontageEmote_C_ExecuteUbergraph_GA_MontageEmote, CallFunc_GetFirstItemOfType_ReturnValue) == 0x000A08, "Member 'GA_MontageEmote_C_ExecuteUbergraph_GA_MontageEmote::CallFunc_GetFirstItemOfType_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_MontageEmote_C_ExecuteUbergraph_GA_MontageEmote, CallFunc_PlayMontageForMeshAndWaitForEvent_ReturnValue_1) == 0x000A10, "Member 'GA_MontageEmote_C_ExecuteUbergraph_GA_MontageEmote::CallFunc_PlayMontageForMeshAndWaitForEvent_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_MontageEmote_C_ExecuteUbergraph_GA_MontageEmote, CallFunc_IsValid_ReturnValue_2) == 0x000A18, "Member 'GA_MontageEmote_C_ExecuteUbergraph_GA_MontageEmote::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GA_MontageEmote_C_ExecuteUbergraph_GA_MontageEmote, CallFunc_GetOwningActorFromActorInfo_ReturnValue_3) == 0x000A20, "Member 'GA_MontageEmote_C_ExecuteUbergraph_GA_MontageEmote::CallFunc_GetOwningActorFromActorInfo_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(GA_MontageEmote_C_ExecuteUbergraph_GA_MontageEmote, K2Node_DynamicCast_AsBP_Resident_Character) == 0x000A28, "Member 'GA_MontageEmote_C_ExecuteUbergraph_GA_MontageEmote::K2Node_DynamicCast_AsBP_Resident_Character' has a wrong offset!");
static_assert(offsetof(GA_MontageEmote_C_ExecuteUbergraph_GA_MontageEmote, K2Node_DynamicCast_bSuccess_3) == 0x000A30, "Member 'GA_MontageEmote_C_ExecuteUbergraph_GA_MontageEmote::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(GA_MontageEmote_C_ExecuteUbergraph_GA_MontageEmote, CallFunc_K2_HasAuthority_ReturnValue) == 0x000A31, "Member 'GA_MontageEmote_C_ExecuteUbergraph_GA_MontageEmote::CallFunc_K2_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_MontageEmote_C_ExecuteUbergraph_GA_MontageEmote, CallFunc_K2_HasAuthority_ReturnValue_1) == 0x000A32, "Member 'GA_MontageEmote_C_ExecuteUbergraph_GA_MontageEmote::CallFunc_K2_HasAuthority_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_MontageEmote_C_ExecuteUbergraph_GA_MontageEmote, CallFunc_Add_DoubleDouble_A_ImplicitCast) == 0x000A38, "Member 'GA_MontageEmote_C_ExecuteUbergraph_GA_MontageEmote::CallFunc_Add_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(GA_MontageEmote_C_ExecuteUbergraph_GA_MontageEmote, CallFunc_WaitDelay_Time_ImplicitCast) == 0x000A40, "Member 'GA_MontageEmote_C_ExecuteUbergraph_GA_MontageEmote::CallFunc_WaitDelay_Time_ImplicitCast' has a wrong offset!");

// Function GA_MontageEmote.GA_MontageEmote_C.GetCharacterName
// 0x0028 (0x0028 - 0x0000)
struct GA_MontageEmote_C_GetCharacterName final
{
public:
	ECharacterName                                CharacterName;                                     // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwningActorFromActorInfo_ReturnValue;  // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class II_Character_C>        K2Node_DynamicCast_AsI_Character;                  // 0x0010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECharacterName                                CallFunc_GetCharacterName_CharacterName;           // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_MontageEmote_C_GetCharacterName) == 0x000008, "Wrong alignment on GA_MontageEmote_C_GetCharacterName");
static_assert(sizeof(GA_MontageEmote_C_GetCharacterName) == 0x000028, "Wrong size on GA_MontageEmote_C_GetCharacterName");
static_assert(offsetof(GA_MontageEmote_C_GetCharacterName, CharacterName) == 0x000000, "Member 'GA_MontageEmote_C_GetCharacterName::CharacterName' has a wrong offset!");
static_assert(offsetof(GA_MontageEmote_C_GetCharacterName, CallFunc_GetOwningActorFromActorInfo_ReturnValue) == 0x000008, "Member 'GA_MontageEmote_C_GetCharacterName::CallFunc_GetOwningActorFromActorInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_MontageEmote_C_GetCharacterName, K2Node_DynamicCast_AsI_Character) == 0x000010, "Member 'GA_MontageEmote_C_GetCharacterName::K2Node_DynamicCast_AsI_Character' has a wrong offset!");
static_assert(offsetof(GA_MontageEmote_C_GetCharacterName, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'GA_MontageEmote_C_GetCharacterName::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(GA_MontageEmote_C_GetCharacterName, CallFunc_GetCharacterName_CharacterName) == 0x000021, "Member 'GA_MontageEmote_C_GetCharacterName::CallFunc_GetCharacterName_CharacterName' has a wrong offset!");

// Function GA_MontageEmote.GA_MontageEmote_C.GetCharacterSize
// 0x0028 (0x0028 - 0x0000)
struct GA_MontageEmote_C_GetCharacterSize final
{
public:
	ECharacterSize                                CharacterSize;                                     // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwningActorFromActorInfo_ReturnValue;  // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class II_Character_C>        K2Node_DynamicCast_AsI_Character;                  // 0x0010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECharacterSize                                CallFunc_GetCharacterSize_CharacterSize;           // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_MontageEmote_C_GetCharacterSize) == 0x000008, "Wrong alignment on GA_MontageEmote_C_GetCharacterSize");
static_assert(sizeof(GA_MontageEmote_C_GetCharacterSize) == 0x000028, "Wrong size on GA_MontageEmote_C_GetCharacterSize");
static_assert(offsetof(GA_MontageEmote_C_GetCharacterSize, CharacterSize) == 0x000000, "Member 'GA_MontageEmote_C_GetCharacterSize::CharacterSize' has a wrong offset!");
static_assert(offsetof(GA_MontageEmote_C_GetCharacterSize, CallFunc_GetOwningActorFromActorInfo_ReturnValue) == 0x000008, "Member 'GA_MontageEmote_C_GetCharacterSize::CallFunc_GetOwningActorFromActorInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_MontageEmote_C_GetCharacterSize, K2Node_DynamicCast_AsI_Character) == 0x000010, "Member 'GA_MontageEmote_C_GetCharacterSize::K2Node_DynamicCast_AsI_Character' has a wrong offset!");
static_assert(offsetof(GA_MontageEmote_C_GetCharacterSize, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'GA_MontageEmote_C_GetCharacterSize::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(GA_MontageEmote_C_GetCharacterSize, CallFunc_GetCharacterSize_CharacterSize) == 0x000021, "Member 'GA_MontageEmote_C_GetCharacterSize::CallFunc_GetCharacterSize_CharacterSize' has a wrong offset!");

// Function GA_MontageEmote.GA_MontageEmote_C.GetEmoteCamera
// 0x0250 (0x0250 - 0x0000)
struct GA_MontageEmote_C_GetEmoteCamera final
{
public:
	class ABP_3rdPersonCamera_C*                  EmoteCamera;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwningActorFromActorInfo_ReturnValue;  // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_3rdPersonCamera_C*                  CallFunc_GetActorOfClass_ReturnValue;              // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_AttachToActor_ReturnValue;             // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_22[0x6];                                       // 0x0022(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwningActorFromActorInfo_ReturnValue_1; // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x0030(0x0060)(ConstParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0090(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x00A8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x00C0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetActorLocation_SweepHitResult;       // 0x00D8(0x00F8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_SetActorLocation_ReturnValue;          // 0x01D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D1[0xF];                                      // 0x01D1(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x01E0(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x0240(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_3rdPersonCamera_C*                  CallFunc_FinishSpawningActor_ReturnValue;          // 0x0248(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_MontageEmote_C_GetEmoteCamera) == 0x000010, "Wrong alignment on GA_MontageEmote_C_GetEmoteCamera");
static_assert(sizeof(GA_MontageEmote_C_GetEmoteCamera) == 0x000250, "Wrong size on GA_MontageEmote_C_GetEmoteCamera");
static_assert(offsetof(GA_MontageEmote_C_GetEmoteCamera, EmoteCamera) == 0x000000, "Member 'GA_MontageEmote_C_GetEmoteCamera::EmoteCamera' has a wrong offset!");
static_assert(offsetof(GA_MontageEmote_C_GetEmoteCamera, CallFunc_GetOwningActorFromActorInfo_ReturnValue) == 0x000008, "Member 'GA_MontageEmote_C_GetEmoteCamera::CallFunc_GetOwningActorFromActorInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_MontageEmote_C_GetEmoteCamera, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'GA_MontageEmote_C_GetEmoteCamera::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_MontageEmote_C_GetEmoteCamera, CallFunc_GetActorOfClass_ReturnValue) == 0x000018, "Member 'GA_MontageEmote_C_GetEmoteCamera::CallFunc_GetActorOfClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_MontageEmote_C_GetEmoteCamera, CallFunc_K2_AttachToActor_ReturnValue) == 0x000020, "Member 'GA_MontageEmote_C_GetEmoteCamera::CallFunc_K2_AttachToActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_MontageEmote_C_GetEmoteCamera, CallFunc_IsValid_ReturnValue_1) == 0x000021, "Member 'GA_MontageEmote_C_GetEmoteCamera::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_MontageEmote_C_GetEmoteCamera, CallFunc_GetOwningActorFromActorInfo_ReturnValue_1) == 0x000028, "Member 'GA_MontageEmote_C_GetEmoteCamera::CallFunc_GetOwningActorFromActorInfo_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_MontageEmote_C_GetEmoteCamera, CallFunc_GetTransform_ReturnValue) == 0x000030, "Member 'GA_MontageEmote_C_GetEmoteCamera::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_MontageEmote_C_GetEmoteCamera, CallFunc_BreakTransform_Location) == 0x000090, "Member 'GA_MontageEmote_C_GetEmoteCamera::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(GA_MontageEmote_C_GetEmoteCamera, CallFunc_BreakTransform_Rotation) == 0x0000A8, "Member 'GA_MontageEmote_C_GetEmoteCamera::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(GA_MontageEmote_C_GetEmoteCamera, CallFunc_BreakTransform_Scale) == 0x0000C0, "Member 'GA_MontageEmote_C_GetEmoteCamera::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(GA_MontageEmote_C_GetEmoteCamera, CallFunc_K2_SetActorLocation_SweepHitResult) == 0x0000D8, "Member 'GA_MontageEmote_C_GetEmoteCamera::CallFunc_K2_SetActorLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(GA_MontageEmote_C_GetEmoteCamera, CallFunc_K2_SetActorLocation_ReturnValue) == 0x0001D0, "Member 'GA_MontageEmote_C_GetEmoteCamera::CallFunc_K2_SetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_MontageEmote_C_GetEmoteCamera, CallFunc_MakeTransform_ReturnValue) == 0x0001E0, "Member 'GA_MontageEmote_C_GetEmoteCamera::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_MontageEmote_C_GetEmoteCamera, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x000240, "Member 'GA_MontageEmote_C_GetEmoteCamera::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_MontageEmote_C_GetEmoteCamera, CallFunc_FinishSpawningActor_ReturnValue) == 0x000248, "Member 'GA_MontageEmote_C_GetEmoteCamera::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");

// Function GA_MontageEmote.GA_MontageEmote_C.K2_OnEndAbility
// 0x0001 (0x0001 - 0x0000)
struct GA_MontageEmote_C_K2_OnEndAbility final
{
public:
	bool                                          bWasCancelled;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_MontageEmote_C_K2_OnEndAbility) == 0x000001, "Wrong alignment on GA_MontageEmote_C_K2_OnEndAbility");
static_assert(sizeof(GA_MontageEmote_C_K2_OnEndAbility) == 0x000001, "Wrong size on GA_MontageEmote_C_K2_OnEndAbility");
static_assert(offsetof(GA_MontageEmote_C_K2_OnEndAbility, bWasCancelled) == 0x000000, "Member 'GA_MontageEmote_C_K2_OnEndAbility::bWasCancelled' has a wrong offset!");

// Function GA_MontageEmote.GA_MontageEmote_C.OnBlendOut_59DEE0204B754F6D2A3E7E9C2C8C8968
// 0x00B8 (0x00B8 - 0x0000)
struct GA_MontageEmote_C_OnBlendOut_59DEE0204B754F6D2A3E7E9C2C8C8968 final
{
public:
	struct FGameplayTag                           EventTag;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	struct FGameplayEventData                     EventData;                                         // 0x0008(0x00B0)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(GA_MontageEmote_C_OnBlendOut_59DEE0204B754F6D2A3E7E9C2C8C8968) == 0x000008, "Wrong alignment on GA_MontageEmote_C_OnBlendOut_59DEE0204B754F6D2A3E7E9C2C8C8968");
static_assert(sizeof(GA_MontageEmote_C_OnBlendOut_59DEE0204B754F6D2A3E7E9C2C8C8968) == 0x0000B8, "Wrong size on GA_MontageEmote_C_OnBlendOut_59DEE0204B754F6D2A3E7E9C2C8C8968");
static_assert(offsetof(GA_MontageEmote_C_OnBlendOut_59DEE0204B754F6D2A3E7E9C2C8C8968, EventTag) == 0x000000, "Member 'GA_MontageEmote_C_OnBlendOut_59DEE0204B754F6D2A3E7E9C2C8C8968::EventTag' has a wrong offset!");
static_assert(offsetof(GA_MontageEmote_C_OnBlendOut_59DEE0204B754F6D2A3E7E9C2C8C8968, EventData) == 0x000008, "Member 'GA_MontageEmote_C_OnBlendOut_59DEE0204B754F6D2A3E7E9C2C8C8968::EventData' has a wrong offset!");

// Function GA_MontageEmote.GA_MontageEmote_C.OnBlendOut_F22B7CC8484BC23E2BEE24A1235DA5DE
// 0x00B8 (0x00B8 - 0x0000)
struct GA_MontageEmote_C_OnBlendOut_F22B7CC8484BC23E2BEE24A1235DA5DE final
{
public:
	struct FGameplayTag                           EventTag;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	struct FGameplayEventData                     EventData;                                         // 0x0008(0x00B0)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(GA_MontageEmote_C_OnBlendOut_F22B7CC8484BC23E2BEE24A1235DA5DE) == 0x000008, "Wrong alignment on GA_MontageEmote_C_OnBlendOut_F22B7CC8484BC23E2BEE24A1235DA5DE");
static_assert(sizeof(GA_MontageEmote_C_OnBlendOut_F22B7CC8484BC23E2BEE24A1235DA5DE) == 0x0000B8, "Wrong size on GA_MontageEmote_C_OnBlendOut_F22B7CC8484BC23E2BEE24A1235DA5DE");
static_assert(offsetof(GA_MontageEmote_C_OnBlendOut_F22B7CC8484BC23E2BEE24A1235DA5DE, EventTag) == 0x000000, "Member 'GA_MontageEmote_C_OnBlendOut_F22B7CC8484BC23E2BEE24A1235DA5DE::EventTag' has a wrong offset!");
static_assert(offsetof(GA_MontageEmote_C_OnBlendOut_F22B7CC8484BC23E2BEE24A1235DA5DE, EventData) == 0x000008, "Member 'GA_MontageEmote_C_OnBlendOut_F22B7CC8484BC23E2BEE24A1235DA5DE::EventData' has a wrong offset!");

// Function GA_MontageEmote.GA_MontageEmote_C.OnCancelled_59DEE0204B754F6D2A3E7E9C2C8C8968
// 0x00B8 (0x00B8 - 0x0000)
struct GA_MontageEmote_C_OnCancelled_59DEE0204B754F6D2A3E7E9C2C8C8968 final
{
public:
	struct FGameplayTag                           EventTag;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	struct FGameplayEventData                     EventData;                                         // 0x0008(0x00B0)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(GA_MontageEmote_C_OnCancelled_59DEE0204B754F6D2A3E7E9C2C8C8968) == 0x000008, "Wrong alignment on GA_MontageEmote_C_OnCancelled_59DEE0204B754F6D2A3E7E9C2C8C8968");
static_assert(sizeof(GA_MontageEmote_C_OnCancelled_59DEE0204B754F6D2A3E7E9C2C8C8968) == 0x0000B8, "Wrong size on GA_MontageEmote_C_OnCancelled_59DEE0204B754F6D2A3E7E9C2C8C8968");
static_assert(offsetof(GA_MontageEmote_C_OnCancelled_59DEE0204B754F6D2A3E7E9C2C8C8968, EventTag) == 0x000000, "Member 'GA_MontageEmote_C_OnCancelled_59DEE0204B754F6D2A3E7E9C2C8C8968::EventTag' has a wrong offset!");
static_assert(offsetof(GA_MontageEmote_C_OnCancelled_59DEE0204B754F6D2A3E7E9C2C8C8968, EventData) == 0x000008, "Member 'GA_MontageEmote_C_OnCancelled_59DEE0204B754F6D2A3E7E9C2C8C8968::EventData' has a wrong offset!");

// Function GA_MontageEmote.GA_MontageEmote_C.OnCancelled_F22B7CC8484BC23E2BEE24A1235DA5DE
// 0x00B8 (0x00B8 - 0x0000)
struct GA_MontageEmote_C_OnCancelled_F22B7CC8484BC23E2BEE24A1235DA5DE final
{
public:
	struct FGameplayTag                           EventTag;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	struct FGameplayEventData                     EventData;                                         // 0x0008(0x00B0)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(GA_MontageEmote_C_OnCancelled_F22B7CC8484BC23E2BEE24A1235DA5DE) == 0x000008, "Wrong alignment on GA_MontageEmote_C_OnCancelled_F22B7CC8484BC23E2BEE24A1235DA5DE");
static_assert(sizeof(GA_MontageEmote_C_OnCancelled_F22B7CC8484BC23E2BEE24A1235DA5DE) == 0x0000B8, "Wrong size on GA_MontageEmote_C_OnCancelled_F22B7CC8484BC23E2BEE24A1235DA5DE");
static_assert(offsetof(GA_MontageEmote_C_OnCancelled_F22B7CC8484BC23E2BEE24A1235DA5DE, EventTag) == 0x000000, "Member 'GA_MontageEmote_C_OnCancelled_F22B7CC8484BC23E2BEE24A1235DA5DE::EventTag' has a wrong offset!");
static_assert(offsetof(GA_MontageEmote_C_OnCancelled_F22B7CC8484BC23E2BEE24A1235DA5DE, EventData) == 0x000008, "Member 'GA_MontageEmote_C_OnCancelled_F22B7CC8484BC23E2BEE24A1235DA5DE::EventData' has a wrong offset!");

// Function GA_MontageEmote.GA_MontageEmote_C.OnCompleted_59DEE0204B754F6D2A3E7E9C2C8C8968
// 0x00B8 (0x00B8 - 0x0000)
struct GA_MontageEmote_C_OnCompleted_59DEE0204B754F6D2A3E7E9C2C8C8968 final
{
public:
	struct FGameplayTag                           EventTag;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	struct FGameplayEventData                     EventData;                                         // 0x0008(0x00B0)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(GA_MontageEmote_C_OnCompleted_59DEE0204B754F6D2A3E7E9C2C8C8968) == 0x000008, "Wrong alignment on GA_MontageEmote_C_OnCompleted_59DEE0204B754F6D2A3E7E9C2C8C8968");
static_assert(sizeof(GA_MontageEmote_C_OnCompleted_59DEE0204B754F6D2A3E7E9C2C8C8968) == 0x0000B8, "Wrong size on GA_MontageEmote_C_OnCompleted_59DEE0204B754F6D2A3E7E9C2C8C8968");
static_assert(offsetof(GA_MontageEmote_C_OnCompleted_59DEE0204B754F6D2A3E7E9C2C8C8968, EventTag) == 0x000000, "Member 'GA_MontageEmote_C_OnCompleted_59DEE0204B754F6D2A3E7E9C2C8C8968::EventTag' has a wrong offset!");
static_assert(offsetof(GA_MontageEmote_C_OnCompleted_59DEE0204B754F6D2A3E7E9C2C8C8968, EventData) == 0x000008, "Member 'GA_MontageEmote_C_OnCompleted_59DEE0204B754F6D2A3E7E9C2C8C8968::EventData' has a wrong offset!");

// Function GA_MontageEmote.GA_MontageEmote_C.OnCompleted_F22B7CC8484BC23E2BEE24A1235DA5DE
// 0x00B8 (0x00B8 - 0x0000)
struct GA_MontageEmote_C_OnCompleted_F22B7CC8484BC23E2BEE24A1235DA5DE final
{
public:
	struct FGameplayTag                           EventTag;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	struct FGameplayEventData                     EventData;                                         // 0x0008(0x00B0)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(GA_MontageEmote_C_OnCompleted_F22B7CC8484BC23E2BEE24A1235DA5DE) == 0x000008, "Wrong alignment on GA_MontageEmote_C_OnCompleted_F22B7CC8484BC23E2BEE24A1235DA5DE");
static_assert(sizeof(GA_MontageEmote_C_OnCompleted_F22B7CC8484BC23E2BEE24A1235DA5DE) == 0x0000B8, "Wrong size on GA_MontageEmote_C_OnCompleted_F22B7CC8484BC23E2BEE24A1235DA5DE");
static_assert(offsetof(GA_MontageEmote_C_OnCompleted_F22B7CC8484BC23E2BEE24A1235DA5DE, EventTag) == 0x000000, "Member 'GA_MontageEmote_C_OnCompleted_F22B7CC8484BC23E2BEE24A1235DA5DE::EventTag' has a wrong offset!");
static_assert(offsetof(GA_MontageEmote_C_OnCompleted_F22B7CC8484BC23E2BEE24A1235DA5DE, EventData) == 0x000008, "Member 'GA_MontageEmote_C_OnCompleted_F22B7CC8484BC23E2BEE24A1235DA5DE::EventData' has a wrong offset!");

// Function GA_MontageEmote.GA_MontageEmote_C.OnInterrupted_59DEE0204B754F6D2A3E7E9C2C8C8968
// 0x00B8 (0x00B8 - 0x0000)
struct GA_MontageEmote_C_OnInterrupted_59DEE0204B754F6D2A3E7E9C2C8C8968 final
{
public:
	struct FGameplayTag                           EventTag;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	struct FGameplayEventData                     EventData;                                         // 0x0008(0x00B0)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(GA_MontageEmote_C_OnInterrupted_59DEE0204B754F6D2A3E7E9C2C8C8968) == 0x000008, "Wrong alignment on GA_MontageEmote_C_OnInterrupted_59DEE0204B754F6D2A3E7E9C2C8C8968");
static_assert(sizeof(GA_MontageEmote_C_OnInterrupted_59DEE0204B754F6D2A3E7E9C2C8C8968) == 0x0000B8, "Wrong size on GA_MontageEmote_C_OnInterrupted_59DEE0204B754F6D2A3E7E9C2C8C8968");
static_assert(offsetof(GA_MontageEmote_C_OnInterrupted_59DEE0204B754F6D2A3E7E9C2C8C8968, EventTag) == 0x000000, "Member 'GA_MontageEmote_C_OnInterrupted_59DEE0204B754F6D2A3E7E9C2C8C8968::EventTag' has a wrong offset!");
static_assert(offsetof(GA_MontageEmote_C_OnInterrupted_59DEE0204B754F6D2A3E7E9C2C8C8968, EventData) == 0x000008, "Member 'GA_MontageEmote_C_OnInterrupted_59DEE0204B754F6D2A3E7E9C2C8C8968::EventData' has a wrong offset!");

// Function GA_MontageEmote.GA_MontageEmote_C.OnInterrupted_F22B7CC8484BC23E2BEE24A1235DA5DE
// 0x00B8 (0x00B8 - 0x0000)
struct GA_MontageEmote_C_OnInterrupted_F22B7CC8484BC23E2BEE24A1235DA5DE final
{
public:
	struct FGameplayTag                           EventTag;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	struct FGameplayEventData                     EventData;                                         // 0x0008(0x00B0)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(GA_MontageEmote_C_OnInterrupted_F22B7CC8484BC23E2BEE24A1235DA5DE) == 0x000008, "Wrong alignment on GA_MontageEmote_C_OnInterrupted_F22B7CC8484BC23E2BEE24A1235DA5DE");
static_assert(sizeof(GA_MontageEmote_C_OnInterrupted_F22B7CC8484BC23E2BEE24A1235DA5DE) == 0x0000B8, "Wrong size on GA_MontageEmote_C_OnInterrupted_F22B7CC8484BC23E2BEE24A1235DA5DE");
static_assert(offsetof(GA_MontageEmote_C_OnInterrupted_F22B7CC8484BC23E2BEE24A1235DA5DE, EventTag) == 0x000000, "Member 'GA_MontageEmote_C_OnInterrupted_F22B7CC8484BC23E2BEE24A1235DA5DE::EventTag' has a wrong offset!");
static_assert(offsetof(GA_MontageEmote_C_OnInterrupted_F22B7CC8484BC23E2BEE24A1235DA5DE, EventData) == 0x000008, "Member 'GA_MontageEmote_C_OnInterrupted_F22B7CC8484BC23E2BEE24A1235DA5DE::EventData' has a wrong offset!");

// Function GA_MontageEmote.GA_MontageEmote_C.SetMontage
// 0x0060 (0x0060 - 0x0000)
struct GA_MontageEmote_C_SetMontage final
{
public:
	class UAnimMontage*                           Montage_0;                                         // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           MontageL;                                          // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	ECharacterName                                CallFunc_GetCharacterName_CharacterName;           // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UAnimMontage>            CallFunc_Map_Find_Value;                           // 0x0018(0x0028)(HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_LoadAsset_Blocking_ReturnValue;           // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           K2Node_DynamicCast_AsAnim_Montage;                 // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_MontageEmote_C_SetMontage) == 0x000008, "Wrong alignment on GA_MontageEmote_C_SetMontage");
static_assert(sizeof(GA_MontageEmote_C_SetMontage) == 0x000060, "Wrong size on GA_MontageEmote_C_SetMontage");
static_assert(offsetof(GA_MontageEmote_C_SetMontage, Montage_0) == 0x000000, "Member 'GA_MontageEmote_C_SetMontage::Montage_0' has a wrong offset!");
static_assert(offsetof(GA_MontageEmote_C_SetMontage, MontageL) == 0x000008, "Member 'GA_MontageEmote_C_SetMontage::MontageL' has a wrong offset!");
static_assert(offsetof(GA_MontageEmote_C_SetMontage, CallFunc_GetCharacterName_CharacterName) == 0x000010, "Member 'GA_MontageEmote_C_SetMontage::CallFunc_GetCharacterName_CharacterName' has a wrong offset!");
static_assert(offsetof(GA_MontageEmote_C_SetMontage, CallFunc_Map_Find_Value) == 0x000018, "Member 'GA_MontageEmote_C_SetMontage::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(GA_MontageEmote_C_SetMontage, CallFunc_Map_Find_ReturnValue) == 0x000040, "Member 'GA_MontageEmote_C_SetMontage::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_MontageEmote_C_SetMontage, CallFunc_LoadAsset_Blocking_ReturnValue) == 0x000048, "Member 'GA_MontageEmote_C_SetMontage::CallFunc_LoadAsset_Blocking_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_MontageEmote_C_SetMontage, K2Node_DynamicCast_AsAnim_Montage) == 0x000050, "Member 'GA_MontageEmote_C_SetMontage::K2Node_DynamicCast_AsAnim_Montage' has a wrong offset!");
static_assert(offsetof(GA_MontageEmote_C_SetMontage, K2Node_DynamicCast_bSuccess) == 0x000058, "Member 'GA_MontageEmote_C_SetMontage::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function GA_MontageEmote.GA_MontageEmote_C.SetViewToEmoteCamera
// 0x00B0 (0x00B0 - 0x0000)
struct GA_MontageEmote_C_SetViewToEmoteCamera final
{
public:
	bool                                          Enabled;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_GetControlRotation_ReturnValue;           // 0x0010(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0038(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class AActor*                                 CallFunc_GetOwningActorFromActorInfo_ReturnValue;  // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_ResidentCharacter_C*                K2Node_DynamicCast_AsBP_Resident_Character;        // 0x0058(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwningActorFromActorInfo_ReturnValue_1; // 0x0068(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_ResidentCharacter_C*                K2Node_DynamicCast_AsBP_Resident_Character_1;      // 0x0070(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_79[0x7];                                       // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue_1;        // 0x0080(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue_2;        // 0x0088(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue_3;        // 0x0090(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwningActorFromActorInfo_ReturnValue_2; // 0x0098(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLocallyControlled_ReturnValue;          // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A1[0x7];                                       // 0x00A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_3rdPersonCamera_C*                  CallFunc_GetEmoteCamera_EmoteCamera;               // 0x00A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_MontageEmote_C_SetViewToEmoteCamera) == 0x000008, "Wrong alignment on GA_MontageEmote_C_SetViewToEmoteCamera");
static_assert(sizeof(GA_MontageEmote_C_SetViewToEmoteCamera) == 0x0000B0, "Wrong size on GA_MontageEmote_C_SetViewToEmoteCamera");
static_assert(offsetof(GA_MontageEmote_C_SetViewToEmoteCamera, Enabled) == 0x000000, "Member 'GA_MontageEmote_C_SetViewToEmoteCamera::Enabled' has a wrong offset!");
static_assert(offsetof(GA_MontageEmote_C_SetViewToEmoteCamera, CallFunc_GetPlayerController_ReturnValue) == 0x000008, "Member 'GA_MontageEmote_C_SetViewToEmoteCamera::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_MontageEmote_C_SetViewToEmoteCamera, CallFunc_GetControlRotation_ReturnValue) == 0x000010, "Member 'GA_MontageEmote_C_SetViewToEmoteCamera::CallFunc_GetControlRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_MontageEmote_C_SetViewToEmoteCamera, CallFunc_BreakRotator_Roll) == 0x000028, "Member 'GA_MontageEmote_C_SetViewToEmoteCamera::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(GA_MontageEmote_C_SetViewToEmoteCamera, CallFunc_BreakRotator_Pitch) == 0x00002C, "Member 'GA_MontageEmote_C_SetViewToEmoteCamera::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(GA_MontageEmote_C_SetViewToEmoteCamera, CallFunc_BreakRotator_Yaw) == 0x000030, "Member 'GA_MontageEmote_C_SetViewToEmoteCamera::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(GA_MontageEmote_C_SetViewToEmoteCamera, CallFunc_MakeRotator_ReturnValue) == 0x000038, "Member 'GA_MontageEmote_C_SetViewToEmoteCamera::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_MontageEmote_C_SetViewToEmoteCamera, CallFunc_GetOwningActorFromActorInfo_ReturnValue) == 0x000050, "Member 'GA_MontageEmote_C_SetViewToEmoteCamera::CallFunc_GetOwningActorFromActorInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_MontageEmote_C_SetViewToEmoteCamera, K2Node_DynamicCast_AsBP_Resident_Character) == 0x000058, "Member 'GA_MontageEmote_C_SetViewToEmoteCamera::K2Node_DynamicCast_AsBP_Resident_Character' has a wrong offset!");
static_assert(offsetof(GA_MontageEmote_C_SetViewToEmoteCamera, K2Node_DynamicCast_bSuccess) == 0x000060, "Member 'GA_MontageEmote_C_SetViewToEmoteCamera::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(GA_MontageEmote_C_SetViewToEmoteCamera, CallFunc_GetOwningActorFromActorInfo_ReturnValue_1) == 0x000068, "Member 'GA_MontageEmote_C_SetViewToEmoteCamera::CallFunc_GetOwningActorFromActorInfo_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_MontageEmote_C_SetViewToEmoteCamera, K2Node_DynamicCast_AsBP_Resident_Character_1) == 0x000070, "Member 'GA_MontageEmote_C_SetViewToEmoteCamera::K2Node_DynamicCast_AsBP_Resident_Character_1' has a wrong offset!");
static_assert(offsetof(GA_MontageEmote_C_SetViewToEmoteCamera, K2Node_DynamicCast_bSuccess_1) == 0x000078, "Member 'GA_MontageEmote_C_SetViewToEmoteCamera::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(GA_MontageEmote_C_SetViewToEmoteCamera, CallFunc_GetPlayerController_ReturnValue_1) == 0x000080, "Member 'GA_MontageEmote_C_SetViewToEmoteCamera::CallFunc_GetPlayerController_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_MontageEmote_C_SetViewToEmoteCamera, CallFunc_GetPlayerController_ReturnValue_2) == 0x000088, "Member 'GA_MontageEmote_C_SetViewToEmoteCamera::CallFunc_GetPlayerController_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GA_MontageEmote_C_SetViewToEmoteCamera, CallFunc_GetPlayerController_ReturnValue_3) == 0x000090, "Member 'GA_MontageEmote_C_SetViewToEmoteCamera::CallFunc_GetPlayerController_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(GA_MontageEmote_C_SetViewToEmoteCamera, CallFunc_GetOwningActorFromActorInfo_ReturnValue_2) == 0x000098, "Member 'GA_MontageEmote_C_SetViewToEmoteCamera::CallFunc_GetOwningActorFromActorInfo_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GA_MontageEmote_C_SetViewToEmoteCamera, CallFunc_IsLocallyControlled_ReturnValue) == 0x0000A0, "Member 'GA_MontageEmote_C_SetViewToEmoteCamera::CallFunc_IsLocallyControlled_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_MontageEmote_C_SetViewToEmoteCamera, CallFunc_GetEmoteCamera_EmoteCamera) == 0x0000A8, "Member 'GA_MontageEmote_C_SetViewToEmoteCamera::CallFunc_GetEmoteCamera_EmoteCamera' has a wrong offset!");

// Function GA_MontageEmote.GA_MontageEmote_C.Transition
// 0x0108 (0x0108 - 0x0000)
struct GA_MontageEmote_C_Transition final
{
public:
	class ABP_3rdPersonCamera_C*                  EmoteCamera;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      PlayerController;                                  // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetRelativeRotation_SweepHitResult;    // 0x0010(0x00F8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(GA_MontageEmote_C_Transition) == 0x000008, "Wrong alignment on GA_MontageEmote_C_Transition");
static_assert(sizeof(GA_MontageEmote_C_Transition) == 0x000108, "Wrong size on GA_MontageEmote_C_Transition");
static_assert(offsetof(GA_MontageEmote_C_Transition, EmoteCamera) == 0x000000, "Member 'GA_MontageEmote_C_Transition::EmoteCamera' has a wrong offset!");
static_assert(offsetof(GA_MontageEmote_C_Transition, PlayerController) == 0x000008, "Member 'GA_MontageEmote_C_Transition::PlayerController' has a wrong offset!");
static_assert(offsetof(GA_MontageEmote_C_Transition, CallFunc_K2_SetRelativeRotation_SweepHitResult) == 0x000010, "Member 'GA_MontageEmote_C_Transition::CallFunc_K2_SetRelativeRotation_SweepHitResult' has a wrong offset!");

}

