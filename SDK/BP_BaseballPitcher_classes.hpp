#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_BaseballPitcher

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "E_TurretState_structs.hpp"
#include "JP_structs.hpp"
#include "BP_HouseAdditionBase_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_BaseballPitcher.BP_BaseballPitcher_C
// 0x01F0 (0x0628 - 0x0438)
class ABP_BaseballPitcher_C final : public ABP_HouseAdditionBase_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_BP_BaseballPitcher_C;               // 0x0438(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UStaticMeshComponent*                   SM_PitcherTurret_Top;                              // 0x0440(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UArrowComponent*                        Arrow_TurretRotation;                              // 0x0448(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        Scene_RotationRoot;                                // 0x0450(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBP_PingableComponent_C*                BP_PingableComponent;                              // 0x0458(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SphereShadow;                                      // 0x0460(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          BoxTurretCollision;                                // 0x0468(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        SceneIdleAimDirection;                             // 0x0470(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        FireLocation;                                      // 0x0478(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UNiagaraComponent*                      Niagara_MuzzleFlash;                               // 0x0480(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Ball;                                              // 0x0488(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   ChargeLight;                                       // 0x0490(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Ball1;                                             // 0x0498(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Ball5;                                             // 0x04A0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Ball4;                                             // 0x04A8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Ball3;                                             // 0x04B0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Ball2;                                             // 0x04B8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_PitcherTurret_Table;                            // 0x04C0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        Audio_Charge;                                      // 0x04C8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        Audio_Fire;                                        // 0x04D0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        Audio_State;                                       // 0x04D8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UNiagaraComponent*                      Niagara_FiringState;                               // 0x04E0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          BoxTargetCollision;                                // 0x04E8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         Timeline_Alpha_9912D2114500DF6DC9653CA2BC9832B7;   // 0x04F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            Timeline__Direction_9912D2114500DF6DC9653CA2BC9832B7; // 0x04F4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4F5[0x3];                                      // 0x04F5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     Timeline;                                          // 0x04F8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	float                                         TL_Firing_EmissionStrength_4E400E74425E2F889D404AB4FF586A5D; // 0x0500(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            TL_Firing__Direction_4E400E74425E2F889D404AB4FF586A5D; // 0x0504(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_505[0x3];                                      // 0x0505(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     TL_Firing;                                         // 0x0508(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	float                                         TL_Warmup_EmissionStrength_6636871744E721C45E26CB89027FB9E2; // 0x0510(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            TL_Warmup__Direction_6636871744E721C45E26CB89027FB9E2; // 0x0514(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_515[0x3];                                      // 0x0515(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     TL_Warmup;                                         // 0x0518(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	E_TurretState                                 TurretState;                                       // 0x0520(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_521[0x7];                                      // 0x0521(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               DynamicChargeLightMaterial;                        // 0x0528(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         OverlappingActors;                                 // 0x0530(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, DisableEditOnInstance)
	class USceneComponent*                        TargetSceneComponent;                              // 0x0540(0x0008)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TArray<EObjectTypeQuery>                      ObjectTypesToTrace;                                // 0x0548(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FTimerHandle                           FireProjectileTimer;                               // 0x0558(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	uint8                                         OwningTeamID;                                      // 0x0560(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, Config, IsPlainOldData, RepNotify, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	uint8                                         Pad_561[0x7];                                      // 0x0561(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        DamageMax;                                         // 0x0568(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FCombatParticipant                     Killer;                                            // 0x0570(0x0060)(Edit, BlueprintVisible, ExposeOnSpawn)
	struct FTimerHandle                           DelayedDisableTickTimer;                           // 0x05D0(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             EnterIdleModeSound;                                // 0x05D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             EnterTrackingModeSound;                            // 0x05E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             EnterFireModeSound;                                // 0x05E8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             IdleModeLoopSound;                                 // 0x05F0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             FireModeLoopSound;                                 // 0x05F8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             FireSound;                                         // 0x0600(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             ChargeSound;                                       // 0x0608(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	float                                         DelayBetweenShots;                                 // 0x0610(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_614[0x4];                                      // 0x0614(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 DestroyedClass;                                    // 0x0618(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	double                                        DamageMin;                                         // 0x0620(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void Audio_TryPlayEnterIdleMode();
	bool CanSeeComponent(class USceneComponent* Target);
	void Delayed_Disable_Tick();
	void Delayed_Disable_Tick_Timer_Elapsed();
	void ExecuteUbergraph_BP_BaseballPitcher(int32 EntryPoint);
	void Fire_Projectile();
	void Firing();
	void Get_Closest_Overlapping_Actor(TArray<class AActor*>& Actors, class AActor** TargetActor, bool* HighPriorityFound);
	void GetCenterLocation(struct FVector* Location);
	void GetFirstOverlappingActorWithHighPriority(class AActor** Return, bool* HighPriorityFound);
	double GetSquaredDistanceToFireLocation(class USceneComponent* Target);
	void Idle();
	void On_Check_For_Targets_Timer_Elapsed();
	void On_FireProjectileTimer_Elapsed();
	void OnRep_OwningTeamID();
	void OnRep_TurretState();
	void ReceiveBeginPlay();
	void ReceiveDestroyed();
	void ReceiveTick(float DeltaSeconds);
	void Sabotage(class AActor* SabotagingActor);
	void Set_Turret_Yaw_Idle();
	void Set_Turret_Yaw_Towards_Target();
	void SetCompatibleTargets();
	void SetupOutline();
	void SetupPings();
	void Start_Check_For_Targets_Timer();
	void Timeline__FinishedFunc();
	void Timeline__UpdateFunc();
	void TL_Firing__FinishedFunc();
	void TL_Firing__UpdateFunc();
	void TL_Warmup__FinishedFunc();
	void TL_Warmup__UpdateFunc();
	void UserConstructionScript();

	bool IsAvailableForInteraction(class AActor* InteractingActor, class UPrimitiveComponent* InteractionComponent) const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_BaseballPitcher_C">();
	}
	static class ABP_BaseballPitcher_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_BaseballPitcher_C>();
	}
};
static_assert(alignof(ABP_BaseballPitcher_C) == 0x000008, "Wrong alignment on ABP_BaseballPitcher_C");
static_assert(sizeof(ABP_BaseballPitcher_C) == 0x000628, "Wrong size on ABP_BaseballPitcher_C");
static_assert(offsetof(ABP_BaseballPitcher_C, UberGraphFrame_BP_BaseballPitcher_C) == 0x000438, "Member 'ABP_BaseballPitcher_C::UberGraphFrame_BP_BaseballPitcher_C' has a wrong offset!");
static_assert(offsetof(ABP_BaseballPitcher_C, SM_PitcherTurret_Top) == 0x000440, "Member 'ABP_BaseballPitcher_C::SM_PitcherTurret_Top' has a wrong offset!");
static_assert(offsetof(ABP_BaseballPitcher_C, Arrow_TurretRotation) == 0x000448, "Member 'ABP_BaseballPitcher_C::Arrow_TurretRotation' has a wrong offset!");
static_assert(offsetof(ABP_BaseballPitcher_C, Scene_RotationRoot) == 0x000450, "Member 'ABP_BaseballPitcher_C::Scene_RotationRoot' has a wrong offset!");
static_assert(offsetof(ABP_BaseballPitcher_C, BP_PingableComponent) == 0x000458, "Member 'ABP_BaseballPitcher_C::BP_PingableComponent' has a wrong offset!");
static_assert(offsetof(ABP_BaseballPitcher_C, SphereShadow) == 0x000460, "Member 'ABP_BaseballPitcher_C::SphereShadow' has a wrong offset!");
static_assert(offsetof(ABP_BaseballPitcher_C, BoxTurretCollision) == 0x000468, "Member 'ABP_BaseballPitcher_C::BoxTurretCollision' has a wrong offset!");
static_assert(offsetof(ABP_BaseballPitcher_C, SceneIdleAimDirection) == 0x000470, "Member 'ABP_BaseballPitcher_C::SceneIdleAimDirection' has a wrong offset!");
static_assert(offsetof(ABP_BaseballPitcher_C, FireLocation) == 0x000478, "Member 'ABP_BaseballPitcher_C::FireLocation' has a wrong offset!");
static_assert(offsetof(ABP_BaseballPitcher_C, Niagara_MuzzleFlash) == 0x000480, "Member 'ABP_BaseballPitcher_C::Niagara_MuzzleFlash' has a wrong offset!");
static_assert(offsetof(ABP_BaseballPitcher_C, Ball) == 0x000488, "Member 'ABP_BaseballPitcher_C::Ball' has a wrong offset!");
static_assert(offsetof(ABP_BaseballPitcher_C, ChargeLight) == 0x000490, "Member 'ABP_BaseballPitcher_C::ChargeLight' has a wrong offset!");
static_assert(offsetof(ABP_BaseballPitcher_C, Ball1) == 0x000498, "Member 'ABP_BaseballPitcher_C::Ball1' has a wrong offset!");
static_assert(offsetof(ABP_BaseballPitcher_C, Ball5) == 0x0004A0, "Member 'ABP_BaseballPitcher_C::Ball5' has a wrong offset!");
static_assert(offsetof(ABP_BaseballPitcher_C, Ball4) == 0x0004A8, "Member 'ABP_BaseballPitcher_C::Ball4' has a wrong offset!");
static_assert(offsetof(ABP_BaseballPitcher_C, Ball3) == 0x0004B0, "Member 'ABP_BaseballPitcher_C::Ball3' has a wrong offset!");
static_assert(offsetof(ABP_BaseballPitcher_C, Ball2) == 0x0004B8, "Member 'ABP_BaseballPitcher_C::Ball2' has a wrong offset!");
static_assert(offsetof(ABP_BaseballPitcher_C, SM_PitcherTurret_Table) == 0x0004C0, "Member 'ABP_BaseballPitcher_C::SM_PitcherTurret_Table' has a wrong offset!");
static_assert(offsetof(ABP_BaseballPitcher_C, Audio_Charge) == 0x0004C8, "Member 'ABP_BaseballPitcher_C::Audio_Charge' has a wrong offset!");
static_assert(offsetof(ABP_BaseballPitcher_C, Audio_Fire) == 0x0004D0, "Member 'ABP_BaseballPitcher_C::Audio_Fire' has a wrong offset!");
static_assert(offsetof(ABP_BaseballPitcher_C, Audio_State) == 0x0004D8, "Member 'ABP_BaseballPitcher_C::Audio_State' has a wrong offset!");
static_assert(offsetof(ABP_BaseballPitcher_C, Niagara_FiringState) == 0x0004E0, "Member 'ABP_BaseballPitcher_C::Niagara_FiringState' has a wrong offset!");
static_assert(offsetof(ABP_BaseballPitcher_C, BoxTargetCollision) == 0x0004E8, "Member 'ABP_BaseballPitcher_C::BoxTargetCollision' has a wrong offset!");
static_assert(offsetof(ABP_BaseballPitcher_C, Timeline_Alpha_9912D2114500DF6DC9653CA2BC9832B7) == 0x0004F0, "Member 'ABP_BaseballPitcher_C::Timeline_Alpha_9912D2114500DF6DC9653CA2BC9832B7' has a wrong offset!");
static_assert(offsetof(ABP_BaseballPitcher_C, Timeline__Direction_9912D2114500DF6DC9653CA2BC9832B7) == 0x0004F4, "Member 'ABP_BaseballPitcher_C::Timeline__Direction_9912D2114500DF6DC9653CA2BC9832B7' has a wrong offset!");
static_assert(offsetof(ABP_BaseballPitcher_C, Timeline) == 0x0004F8, "Member 'ABP_BaseballPitcher_C::Timeline' has a wrong offset!");
static_assert(offsetof(ABP_BaseballPitcher_C, TL_Firing_EmissionStrength_4E400E74425E2F889D404AB4FF586A5D) == 0x000500, "Member 'ABP_BaseballPitcher_C::TL_Firing_EmissionStrength_4E400E74425E2F889D404AB4FF586A5D' has a wrong offset!");
static_assert(offsetof(ABP_BaseballPitcher_C, TL_Firing__Direction_4E400E74425E2F889D404AB4FF586A5D) == 0x000504, "Member 'ABP_BaseballPitcher_C::TL_Firing__Direction_4E400E74425E2F889D404AB4FF586A5D' has a wrong offset!");
static_assert(offsetof(ABP_BaseballPitcher_C, TL_Firing) == 0x000508, "Member 'ABP_BaseballPitcher_C::TL_Firing' has a wrong offset!");
static_assert(offsetof(ABP_BaseballPitcher_C, TL_Warmup_EmissionStrength_6636871744E721C45E26CB89027FB9E2) == 0x000510, "Member 'ABP_BaseballPitcher_C::TL_Warmup_EmissionStrength_6636871744E721C45E26CB89027FB9E2' has a wrong offset!");
static_assert(offsetof(ABP_BaseballPitcher_C, TL_Warmup__Direction_6636871744E721C45E26CB89027FB9E2) == 0x000514, "Member 'ABP_BaseballPitcher_C::TL_Warmup__Direction_6636871744E721C45E26CB89027FB9E2' has a wrong offset!");
static_assert(offsetof(ABP_BaseballPitcher_C, TL_Warmup) == 0x000518, "Member 'ABP_BaseballPitcher_C::TL_Warmup' has a wrong offset!");
static_assert(offsetof(ABP_BaseballPitcher_C, TurretState) == 0x000520, "Member 'ABP_BaseballPitcher_C::TurretState' has a wrong offset!");
static_assert(offsetof(ABP_BaseballPitcher_C, DynamicChargeLightMaterial) == 0x000528, "Member 'ABP_BaseballPitcher_C::DynamicChargeLightMaterial' has a wrong offset!");
static_assert(offsetof(ABP_BaseballPitcher_C, OverlappingActors) == 0x000530, "Member 'ABP_BaseballPitcher_C::OverlappingActors' has a wrong offset!");
static_assert(offsetof(ABP_BaseballPitcher_C, TargetSceneComponent) == 0x000540, "Member 'ABP_BaseballPitcher_C::TargetSceneComponent' has a wrong offset!");
static_assert(offsetof(ABP_BaseballPitcher_C, ObjectTypesToTrace) == 0x000548, "Member 'ABP_BaseballPitcher_C::ObjectTypesToTrace' has a wrong offset!");
static_assert(offsetof(ABP_BaseballPitcher_C, FireProjectileTimer) == 0x000558, "Member 'ABP_BaseballPitcher_C::FireProjectileTimer' has a wrong offset!");
static_assert(offsetof(ABP_BaseballPitcher_C, OwningTeamID) == 0x000560, "Member 'ABP_BaseballPitcher_C::OwningTeamID' has a wrong offset!");
static_assert(offsetof(ABP_BaseballPitcher_C, DamageMax) == 0x000568, "Member 'ABP_BaseballPitcher_C::DamageMax' has a wrong offset!");
static_assert(offsetof(ABP_BaseballPitcher_C, Killer) == 0x000570, "Member 'ABP_BaseballPitcher_C::Killer' has a wrong offset!");
static_assert(offsetof(ABP_BaseballPitcher_C, DelayedDisableTickTimer) == 0x0005D0, "Member 'ABP_BaseballPitcher_C::DelayedDisableTickTimer' has a wrong offset!");
static_assert(offsetof(ABP_BaseballPitcher_C, EnterIdleModeSound) == 0x0005D8, "Member 'ABP_BaseballPitcher_C::EnterIdleModeSound' has a wrong offset!");
static_assert(offsetof(ABP_BaseballPitcher_C, EnterTrackingModeSound) == 0x0005E0, "Member 'ABP_BaseballPitcher_C::EnterTrackingModeSound' has a wrong offset!");
static_assert(offsetof(ABP_BaseballPitcher_C, EnterFireModeSound) == 0x0005E8, "Member 'ABP_BaseballPitcher_C::EnterFireModeSound' has a wrong offset!");
static_assert(offsetof(ABP_BaseballPitcher_C, IdleModeLoopSound) == 0x0005F0, "Member 'ABP_BaseballPitcher_C::IdleModeLoopSound' has a wrong offset!");
static_assert(offsetof(ABP_BaseballPitcher_C, FireModeLoopSound) == 0x0005F8, "Member 'ABP_BaseballPitcher_C::FireModeLoopSound' has a wrong offset!");
static_assert(offsetof(ABP_BaseballPitcher_C, FireSound) == 0x000600, "Member 'ABP_BaseballPitcher_C::FireSound' has a wrong offset!");
static_assert(offsetof(ABP_BaseballPitcher_C, ChargeSound) == 0x000608, "Member 'ABP_BaseballPitcher_C::ChargeSound' has a wrong offset!");
static_assert(offsetof(ABP_BaseballPitcher_C, DelayBetweenShots) == 0x000610, "Member 'ABP_BaseballPitcher_C::DelayBetweenShots' has a wrong offset!");
static_assert(offsetof(ABP_BaseballPitcher_C, DestroyedClass) == 0x000618, "Member 'ABP_BaseballPitcher_C::DestroyedClass' has a wrong offset!");
static_assert(offsetof(ABP_BaseballPitcher_C, DamageMin) == 0x000620, "Member 'ABP_BaseballPitcher_C::DamageMin' has a wrong offset!");

}

