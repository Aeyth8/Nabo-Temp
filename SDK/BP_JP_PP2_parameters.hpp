#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_JP_PP2

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "S_Lighting_Preset_structs.hpp"


namespace SDK::Params
{

// Function BP_JP_PP2.BP_JP_PP2_C.ExecuteUbergraph_BP_JP_PP2
// 0x11F0 (0x11F0 - 0x0000)
struct BP_JP_PP2_C_ExecuteUbergraph_BP_JP_PP2 final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, struct FHitResult& SweepResult)> K2Node_CreateDelegate_OutputDelegate;              // 0x0004(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex)> K2Node_CreateDelegate_OutputDelegate_1;            // 0x0014(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             Temp_struct_Variable;                              // 0x0028(0x00F8)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	TDelegate<void(class APawn* OldPawn, class APawn* NewPawn)> K2Node_CreateDelegate_OutputDelegate_2;            // 0x0120(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable;                 // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x0131(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_132[0x6];                                      // 0x0132(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue; // 0x0138(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue;            // 0x0148(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FS_Lighting_Preset                     CallFunc_GetDataTableRowFromName_OutRow;           // 0x0150(0x0760)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x08B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8B1[0x7];                                      // 0x08B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    K2Node_CustomEvent_OverlappedComponent_1;          // 0x08B8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_CustomEvent_OtherActor_1;                   // 0x08C0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_CustomEvent_OtherComp_1;                    // 0x08C8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_OtherBodyIndex_1;               // 0x08D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bFromSweep;                     // 0x08D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8D5[0x3];                                      // 0x08D5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_CustomEvent_SweepResult;                    // 0x08D8(0x00F8)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class UPrimitiveComponent*                    K2Node_CustomEvent_OverlappedComponent;            // 0x09D0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_CustomEvent_OtherActor;                     // 0x09D8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_CustomEvent_OtherComp;                      // 0x09E0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_OtherBodyIndex;                 // 0x09E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9EC[0x4];                                      // 0x09EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_1; // 0x09F0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue_1;          // 0x0A00(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A08[0x8];                                      // 0x0A08(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_Lighting_Preset                     CallFunc_GetDataTableRowFromName_OutRow_1;         // 0x0A10(0x0760)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue_1;    // 0x1170(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1171[0x7];                                     // 0x1171(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x1178(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  K2Node_CustomEvent_OldPawn;                        // 0x1180(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  K2Node_CustomEvent_NewPawn;                        // 0x1188(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue_1;        // 0x1190(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue;                   // 0x1198(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsOverlappingActor_ReturnValue;           // 0x11A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11A1[0x7];                                     // 0x11A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue_2;        // 0x11A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x11B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x11B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11B2[0x6];                                     // 0x11B2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue_1;                 // 0x11B8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x11C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_1;    // 0x11C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11C2[0x6];                                     // 0x11C2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ABP_LightingAndPostProcessController_C*> CallFunc_GetAllActorsOfClass_OutActors;            // 0x11C8(0x0010)(ReferenceParm)
	class ABP_LightingAndPostProcessController_C* CallFunc_Array_Get_Item;                           // 0x11D8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x11E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable;                       // 0x11E1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_JP_PP2_C_ExecuteUbergraph_BP_JP_PP2) == 0x000010, "Wrong alignment on BP_JP_PP2_C_ExecuteUbergraph_BP_JP_PP2");
static_assert(sizeof(BP_JP_PP2_C_ExecuteUbergraph_BP_JP_PP2) == 0x0011F0, "Wrong size on BP_JP_PP2_C_ExecuteUbergraph_BP_JP_PP2");
static_assert(offsetof(BP_JP_PP2_C_ExecuteUbergraph_BP_JP_PP2, EntryPoint) == 0x000000, "Member 'BP_JP_PP2_C_ExecuteUbergraph_BP_JP_PP2::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_JP_PP2_C_ExecuteUbergraph_BP_JP_PP2, K2Node_CreateDelegate_OutputDelegate) == 0x000004, "Member 'BP_JP_PP2_C_ExecuteUbergraph_BP_JP_PP2::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_JP_PP2_C_ExecuteUbergraph_BP_JP_PP2, K2Node_CreateDelegate_OutputDelegate_1) == 0x000014, "Member 'BP_JP_PP2_C_ExecuteUbergraph_BP_JP_PP2::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(BP_JP_PP2_C_ExecuteUbergraph_BP_JP_PP2, Temp_struct_Variable) == 0x000028, "Member 'BP_JP_PP2_C_ExecuteUbergraph_BP_JP_PP2::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(BP_JP_PP2_C_ExecuteUbergraph_BP_JP_PP2, K2Node_CreateDelegate_OutputDelegate_2) == 0x000120, "Member 'BP_JP_PP2_C_ExecuteUbergraph_BP_JP_PP2::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(BP_JP_PP2_C_ExecuteUbergraph_BP_JP_PP2, Temp_bool_Has_Been_Initd_Variable) == 0x000130, "Member 'BP_JP_PP2_C_ExecuteUbergraph_BP_JP_PP2::Temp_bool_Has_Been_Initd_Variable' has a wrong offset!");
static_assert(offsetof(BP_JP_PP2_C_ExecuteUbergraph_BP_JP_PP2, CallFunc_IsDedicatedServer_ReturnValue) == 0x000131, "Member 'BP_JP_PP2_C_ExecuteUbergraph_BP_JP_PP2::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JP_PP2_C_ExecuteUbergraph_BP_JP_PP2, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue) == 0x000138, "Member 'BP_JP_PP2_C_ExecuteUbergraph_BP_JP_PP2::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JP_PP2_C_ExecuteUbergraph_BP_JP_PP2, CallFunc_Conv_StringToName_ReturnValue) == 0x000148, "Member 'BP_JP_PP2_C_ExecuteUbergraph_BP_JP_PP2::CallFunc_Conv_StringToName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JP_PP2_C_ExecuteUbergraph_BP_JP_PP2, CallFunc_GetDataTableRowFromName_OutRow) == 0x000150, "Member 'BP_JP_PP2_C_ExecuteUbergraph_BP_JP_PP2::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(BP_JP_PP2_C_ExecuteUbergraph_BP_JP_PP2, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x0008B0, "Member 'BP_JP_PP2_C_ExecuteUbergraph_BP_JP_PP2::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JP_PP2_C_ExecuteUbergraph_BP_JP_PP2, K2Node_CustomEvent_OverlappedComponent_1) == 0x0008B8, "Member 'BP_JP_PP2_C_ExecuteUbergraph_BP_JP_PP2::K2Node_CustomEvent_OverlappedComponent_1' has a wrong offset!");
static_assert(offsetof(BP_JP_PP2_C_ExecuteUbergraph_BP_JP_PP2, K2Node_CustomEvent_OtherActor_1) == 0x0008C0, "Member 'BP_JP_PP2_C_ExecuteUbergraph_BP_JP_PP2::K2Node_CustomEvent_OtherActor_1' has a wrong offset!");
static_assert(offsetof(BP_JP_PP2_C_ExecuteUbergraph_BP_JP_PP2, K2Node_CustomEvent_OtherComp_1) == 0x0008C8, "Member 'BP_JP_PP2_C_ExecuteUbergraph_BP_JP_PP2::K2Node_CustomEvent_OtherComp_1' has a wrong offset!");
static_assert(offsetof(BP_JP_PP2_C_ExecuteUbergraph_BP_JP_PP2, K2Node_CustomEvent_OtherBodyIndex_1) == 0x0008D0, "Member 'BP_JP_PP2_C_ExecuteUbergraph_BP_JP_PP2::K2Node_CustomEvent_OtherBodyIndex_1' has a wrong offset!");
static_assert(offsetof(BP_JP_PP2_C_ExecuteUbergraph_BP_JP_PP2, K2Node_CustomEvent_bFromSweep) == 0x0008D4, "Member 'BP_JP_PP2_C_ExecuteUbergraph_BP_JP_PP2::K2Node_CustomEvent_bFromSweep' has a wrong offset!");
static_assert(offsetof(BP_JP_PP2_C_ExecuteUbergraph_BP_JP_PP2, K2Node_CustomEvent_SweepResult) == 0x0008D8, "Member 'BP_JP_PP2_C_ExecuteUbergraph_BP_JP_PP2::K2Node_CustomEvent_SweepResult' has a wrong offset!");
static_assert(offsetof(BP_JP_PP2_C_ExecuteUbergraph_BP_JP_PP2, K2Node_CustomEvent_OverlappedComponent) == 0x0009D0, "Member 'BP_JP_PP2_C_ExecuteUbergraph_BP_JP_PP2::K2Node_CustomEvent_OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BP_JP_PP2_C_ExecuteUbergraph_BP_JP_PP2, K2Node_CustomEvent_OtherActor) == 0x0009D8, "Member 'BP_JP_PP2_C_ExecuteUbergraph_BP_JP_PP2::K2Node_CustomEvent_OtherActor' has a wrong offset!");
static_assert(offsetof(BP_JP_PP2_C_ExecuteUbergraph_BP_JP_PP2, K2Node_CustomEvent_OtherComp) == 0x0009E0, "Member 'BP_JP_PP2_C_ExecuteUbergraph_BP_JP_PP2::K2Node_CustomEvent_OtherComp' has a wrong offset!");
static_assert(offsetof(BP_JP_PP2_C_ExecuteUbergraph_BP_JP_PP2, K2Node_CustomEvent_OtherBodyIndex) == 0x0009E8, "Member 'BP_JP_PP2_C_ExecuteUbergraph_BP_JP_PP2::K2Node_CustomEvent_OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(BP_JP_PP2_C_ExecuteUbergraph_BP_JP_PP2, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_1) == 0x0009F0, "Member 'BP_JP_PP2_C_ExecuteUbergraph_BP_JP_PP2::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JP_PP2_C_ExecuteUbergraph_BP_JP_PP2, CallFunc_Conv_StringToName_ReturnValue_1) == 0x000A00, "Member 'BP_JP_PP2_C_ExecuteUbergraph_BP_JP_PP2::CallFunc_Conv_StringToName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JP_PP2_C_ExecuteUbergraph_BP_JP_PP2, CallFunc_GetDataTableRowFromName_OutRow_1) == 0x000A10, "Member 'BP_JP_PP2_C_ExecuteUbergraph_BP_JP_PP2::CallFunc_GetDataTableRowFromName_OutRow_1' has a wrong offset!");
static_assert(offsetof(BP_JP_PP2_C_ExecuteUbergraph_BP_JP_PP2, CallFunc_GetDataTableRowFromName_ReturnValue_1) == 0x001170, "Member 'BP_JP_PP2_C_ExecuteUbergraph_BP_JP_PP2::CallFunc_GetDataTableRowFromName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JP_PP2_C_ExecuteUbergraph_BP_JP_PP2, CallFunc_GetPlayerController_ReturnValue) == 0x001178, "Member 'BP_JP_PP2_C_ExecuteUbergraph_BP_JP_PP2::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JP_PP2_C_ExecuteUbergraph_BP_JP_PP2, K2Node_CustomEvent_OldPawn) == 0x001180, "Member 'BP_JP_PP2_C_ExecuteUbergraph_BP_JP_PP2::K2Node_CustomEvent_OldPawn' has a wrong offset!");
static_assert(offsetof(BP_JP_PP2_C_ExecuteUbergraph_BP_JP_PP2, K2Node_CustomEvent_NewPawn) == 0x001188, "Member 'BP_JP_PP2_C_ExecuteUbergraph_BP_JP_PP2::K2Node_CustomEvent_NewPawn' has a wrong offset!");
static_assert(offsetof(BP_JP_PP2_C_ExecuteUbergraph_BP_JP_PP2, CallFunc_GetPlayerController_ReturnValue_1) == 0x001190, "Member 'BP_JP_PP2_C_ExecuteUbergraph_BP_JP_PP2::CallFunc_GetPlayerController_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JP_PP2_C_ExecuteUbergraph_BP_JP_PP2, CallFunc_K2_GetPawn_ReturnValue) == 0x001198, "Member 'BP_JP_PP2_C_ExecuteUbergraph_BP_JP_PP2::CallFunc_K2_GetPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JP_PP2_C_ExecuteUbergraph_BP_JP_PP2, CallFunc_IsOverlappingActor_ReturnValue) == 0x0011A0, "Member 'BP_JP_PP2_C_ExecuteUbergraph_BP_JP_PP2::CallFunc_IsOverlappingActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JP_PP2_C_ExecuteUbergraph_BP_JP_PP2, CallFunc_GetPlayerController_ReturnValue_2) == 0x0011A8, "Member 'BP_JP_PP2_C_ExecuteUbergraph_BP_JP_PP2::CallFunc_GetPlayerController_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_JP_PP2_C_ExecuteUbergraph_BP_JP_PP2, CallFunc_IsValid_ReturnValue) == 0x0011B0, "Member 'BP_JP_PP2_C_ExecuteUbergraph_BP_JP_PP2::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JP_PP2_C_ExecuteUbergraph_BP_JP_PP2, CallFunc_IsValid_ReturnValue_1) == 0x0011B1, "Member 'BP_JP_PP2_C_ExecuteUbergraph_BP_JP_PP2::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JP_PP2_C_ExecuteUbergraph_BP_JP_PP2, CallFunc_K2_GetPawn_ReturnValue_1) == 0x0011B8, "Member 'BP_JP_PP2_C_ExecuteUbergraph_BP_JP_PP2::CallFunc_K2_GetPawn_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JP_PP2_C_ExecuteUbergraph_BP_JP_PP2, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x0011C0, "Member 'BP_JP_PP2_C_ExecuteUbergraph_BP_JP_PP2::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JP_PP2_C_ExecuteUbergraph_BP_JP_PP2, CallFunc_EqualEqual_ObjectObject_ReturnValue_1) == 0x0011C1, "Member 'BP_JP_PP2_C_ExecuteUbergraph_BP_JP_PP2::CallFunc_EqualEqual_ObjectObject_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JP_PP2_C_ExecuteUbergraph_BP_JP_PP2, CallFunc_GetAllActorsOfClass_OutActors) == 0x0011C8, "Member 'BP_JP_PP2_C_ExecuteUbergraph_BP_JP_PP2::CallFunc_GetAllActorsOfClass_OutActors' has a wrong offset!");
static_assert(offsetof(BP_JP_PP2_C_ExecuteUbergraph_BP_JP_PP2, CallFunc_Array_Get_Item) == 0x0011D8, "Member 'BP_JP_PP2_C_ExecuteUbergraph_BP_JP_PP2::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_JP_PP2_C_ExecuteUbergraph_BP_JP_PP2, CallFunc_IsValid_ReturnValue_2) == 0x0011E0, "Member 'BP_JP_PP2_C_ExecuteUbergraph_BP_JP_PP2::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_JP_PP2_C_ExecuteUbergraph_BP_JP_PP2, Temp_bool_IsClosed_Variable) == 0x0011E1, "Member 'BP_JP_PP2_C_ExecuteUbergraph_BP_JP_PP2::Temp_bool_IsClosed_Variable' has a wrong offset!");

// Function BP_JP_PP2.BP_JP_PP2_C.OnComponentBeginOverlap_Event
// 0x0118 (0x0118 - 0x0000)
struct BP_JP_PP2_C_OnComponentBeginOverlap_Event final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bFromSweep;                                        // 0x001C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             SweepResult;                                       // 0x0020(0x00F8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_JP_PP2_C_OnComponentBeginOverlap_Event) == 0x000008, "Wrong alignment on BP_JP_PP2_C_OnComponentBeginOverlap_Event");
static_assert(sizeof(BP_JP_PP2_C_OnComponentBeginOverlap_Event) == 0x000118, "Wrong size on BP_JP_PP2_C_OnComponentBeginOverlap_Event");
static_assert(offsetof(BP_JP_PP2_C_OnComponentBeginOverlap_Event, OverlappedComponent) == 0x000000, "Member 'BP_JP_PP2_C_OnComponentBeginOverlap_Event::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BP_JP_PP2_C_OnComponentBeginOverlap_Event, OtherActor) == 0x000008, "Member 'BP_JP_PP2_C_OnComponentBeginOverlap_Event::OtherActor' has a wrong offset!");
static_assert(offsetof(BP_JP_PP2_C_OnComponentBeginOverlap_Event, OtherComp) == 0x000010, "Member 'BP_JP_PP2_C_OnComponentBeginOverlap_Event::OtherComp' has a wrong offset!");
static_assert(offsetof(BP_JP_PP2_C_OnComponentBeginOverlap_Event, OtherBodyIndex) == 0x000018, "Member 'BP_JP_PP2_C_OnComponentBeginOverlap_Event::OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(BP_JP_PP2_C_OnComponentBeginOverlap_Event, bFromSweep) == 0x00001C, "Member 'BP_JP_PP2_C_OnComponentBeginOverlap_Event::bFromSweep' has a wrong offset!");
static_assert(offsetof(BP_JP_PP2_C_OnComponentBeginOverlap_Event, SweepResult) == 0x000020, "Member 'BP_JP_PP2_C_OnComponentBeginOverlap_Event::SweepResult' has a wrong offset!");

// Function BP_JP_PP2.BP_JP_PP2_C.OnComponentEndOverlap_Event
// 0x0020 (0x0020 - 0x0000)
struct BP_JP_PP2_C_OnComponentEndOverlap_Event final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_JP_PP2_C_OnComponentEndOverlap_Event) == 0x000008, "Wrong alignment on BP_JP_PP2_C_OnComponentEndOverlap_Event");
static_assert(sizeof(BP_JP_PP2_C_OnComponentEndOverlap_Event) == 0x000020, "Wrong size on BP_JP_PP2_C_OnComponentEndOverlap_Event");
static_assert(offsetof(BP_JP_PP2_C_OnComponentEndOverlap_Event, OverlappedComponent) == 0x000000, "Member 'BP_JP_PP2_C_OnComponentEndOverlap_Event::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BP_JP_PP2_C_OnComponentEndOverlap_Event, OtherActor) == 0x000008, "Member 'BP_JP_PP2_C_OnComponentEndOverlap_Event::OtherActor' has a wrong offset!");
static_assert(offsetof(BP_JP_PP2_C_OnComponentEndOverlap_Event, OtherComp) == 0x000010, "Member 'BP_JP_PP2_C_OnComponentEndOverlap_Event::OtherComp' has a wrong offset!");
static_assert(offsetof(BP_JP_PP2_C_OnComponentEndOverlap_Event, OtherBodyIndex) == 0x000018, "Member 'BP_JP_PP2_C_OnComponentEndOverlap_Event::OtherBodyIndex' has a wrong offset!");

// Function BP_JP_PP2.BP_JP_PP2_C.SetPostProcessAtSpawn
// 0x0010 (0x0010 - 0x0000)
struct BP_JP_PP2_C_SetPostProcessAtSpawn final
{
public:
	class APawn*                                  OldPawn;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  NewPawn;                                           // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_JP_PP2_C_SetPostProcessAtSpawn) == 0x000008, "Wrong alignment on BP_JP_PP2_C_SetPostProcessAtSpawn");
static_assert(sizeof(BP_JP_PP2_C_SetPostProcessAtSpawn) == 0x000010, "Wrong size on BP_JP_PP2_C_SetPostProcessAtSpawn");
static_assert(offsetof(BP_JP_PP2_C_SetPostProcessAtSpawn, OldPawn) == 0x000000, "Member 'BP_JP_PP2_C_SetPostProcessAtSpawn::OldPawn' has a wrong offset!");
static_assert(offsetof(BP_JP_PP2_C_SetPostProcessAtSpawn, NewPawn) == 0x000008, "Member 'BP_JP_PP2_C_SetPostProcessAtSpawn::NewPawn' has a wrong offset!");

}

