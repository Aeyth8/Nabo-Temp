#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GameStateJP_MatchBP

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "JP_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass GameStateJP_MatchBP.GameStateJP_MatchBP_C
// 0x00A0 (0x0538 - 0x0498)
class AGameStateJP_MatchBP_C final : public AGameStateJP_Match
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0498(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UBP_WarmupComponent_C*                  BP_WarmupComponent;                                // 0x04A0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x04A8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UWI_MessageLayout_C*                    MessageLayout;                                     // 0x04B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TMap<uint8, class AEndCondition*>             TeamEndConditions;                                 // 0x04B8(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	bool                                          InitializeExperiences;                             // 0x0508(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_509[0x7];                                      // 0x0509(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FString>                         Player_Ids_Team_1_Match_Start;                     // 0x0510(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<class FString>                         Player_Ids_Team_2_Match_Start;                     // 0x0520(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	bool                                          IntroFinished;                                     // 0x0530(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void Auth_Notify_Players_About_Travel(const class FString& Message);
	void DisplayMessageToLocalPlayer(class FName Message);
	void EndMatchBP(uint8 WinningTeam, class AEndCondition* EndCodition);
	void Enqueue_Telemetry_Summary();
	void ExecuteUbergraph_GameStateJP_MatchBP(int32 EntryPoint);
	void GameEnded();
	void GameStarted();
	void GetFirstEndCamera(class ABP_EndOfGameCamera_C** Output);
	void OnReady_FF32A1254AD19EF5F02589B4DFE68CDC();
	void PlaceAllPlayerControllersAtEndCamera();
	void ReceiveBeginPlay();
	void ReceiveEndPlay(EEndPlayReason EndPlayReason);
	void RPCDestroyNameplateForAll(class ABP_ResidentCharacter_C* Target);
	void SetVoiceActorLocation(const struct FVector& NewLocation);
	void SetWinScreenAudio(class ABP_WinScreenStage_C* WinScreenStage);
	void ShouldMatchEnd(bool* OneTeamAlive, uint8* WinningTeam);

	class FString TryGetFinalEndConditionName() const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"GameStateJP_MatchBP_C">();
	}
	static class AGameStateJP_MatchBP_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AGameStateJP_MatchBP_C>();
	}
};
static_assert(alignof(AGameStateJP_MatchBP_C) == 0x000008, "Wrong alignment on AGameStateJP_MatchBP_C");
static_assert(sizeof(AGameStateJP_MatchBP_C) == 0x000538, "Wrong size on AGameStateJP_MatchBP_C");
static_assert(offsetof(AGameStateJP_MatchBP_C, UberGraphFrame) == 0x000498, "Member 'AGameStateJP_MatchBP_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(AGameStateJP_MatchBP_C, BP_WarmupComponent) == 0x0004A0, "Member 'AGameStateJP_MatchBP_C::BP_WarmupComponent' has a wrong offset!");
static_assert(offsetof(AGameStateJP_MatchBP_C, DefaultSceneRoot) == 0x0004A8, "Member 'AGameStateJP_MatchBP_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(AGameStateJP_MatchBP_C, MessageLayout) == 0x0004B0, "Member 'AGameStateJP_MatchBP_C::MessageLayout' has a wrong offset!");
static_assert(offsetof(AGameStateJP_MatchBP_C, TeamEndConditions) == 0x0004B8, "Member 'AGameStateJP_MatchBP_C::TeamEndConditions' has a wrong offset!");
static_assert(offsetof(AGameStateJP_MatchBP_C, InitializeExperiences) == 0x000508, "Member 'AGameStateJP_MatchBP_C::InitializeExperiences' has a wrong offset!");
static_assert(offsetof(AGameStateJP_MatchBP_C, Player_Ids_Team_1_Match_Start) == 0x000510, "Member 'AGameStateJP_MatchBP_C::Player_Ids_Team_1_Match_Start' has a wrong offset!");
static_assert(offsetof(AGameStateJP_MatchBP_C, Player_Ids_Team_2_Match_Start) == 0x000520, "Member 'AGameStateJP_MatchBP_C::Player_Ids_Team_2_Match_Start' has a wrong offset!");
static_assert(offsetof(AGameStateJP_MatchBP_C, IntroFinished) == 0x000530, "Member 'AGameStateJP_MatchBP_C::IntroFinished' has a wrong offset!");

}

