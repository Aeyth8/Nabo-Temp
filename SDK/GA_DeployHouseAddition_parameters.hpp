#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GA_DeployHouseAddition

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function GA_DeployHouseAddition.GA_DeployHouseAddition_C.FindCurrentDesiredRotation
// 0x0100 (0x0100 - 0x0000)
struct GA_DeployHouseAddition_C_FindCurrentDesiredRotation final
{
public:
	struct FVector                                Direction;                                         // 0x0000(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorRightVector_ReturnValue;          // 0x0018(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorForwardVector_ReturnValue;        // 0x0030(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorForwardVector_ReturnValue_1;      // 0x0048(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_DoubleToVector_ReturnValue;          // 0x0060(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue;        // 0x0078(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorRightVector_ReturnValue_1;        // 0x0090(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_DoubleToVector_ReturnValue_1;        // 0x00A8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorForwardVector_ReturnValue_2;      // 0x00C0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue_1;      // 0x00D8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UItemInstance*                          CallFunc_GetAssociatedItem_ReturnValue;            // 0x00F0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetTagStackCount_ReturnValue;             // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x00FC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_1;          // 0x00FD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_2;          // 0x00FE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_3;          // 0x00FF(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_DeployHouseAddition_C_FindCurrentDesiredRotation) == 0x000008, "Wrong alignment on GA_DeployHouseAddition_C_FindCurrentDesiredRotation");
static_assert(sizeof(GA_DeployHouseAddition_C_FindCurrentDesiredRotation) == 0x000100, "Wrong size on GA_DeployHouseAddition_C_FindCurrentDesiredRotation");
static_assert(offsetof(GA_DeployHouseAddition_C_FindCurrentDesiredRotation, Direction) == 0x000000, "Member 'GA_DeployHouseAddition_C_FindCurrentDesiredRotation::Direction' has a wrong offset!");
static_assert(offsetof(GA_DeployHouseAddition_C_FindCurrentDesiredRotation, CallFunc_GetActorRightVector_ReturnValue) == 0x000018, "Member 'GA_DeployHouseAddition_C_FindCurrentDesiredRotation::CallFunc_GetActorRightVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_DeployHouseAddition_C_FindCurrentDesiredRotation, CallFunc_GetActorForwardVector_ReturnValue) == 0x000030, "Member 'GA_DeployHouseAddition_C_FindCurrentDesiredRotation::CallFunc_GetActorForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_DeployHouseAddition_C_FindCurrentDesiredRotation, CallFunc_GetActorForwardVector_ReturnValue_1) == 0x000048, "Member 'GA_DeployHouseAddition_C_FindCurrentDesiredRotation::CallFunc_GetActorForwardVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_DeployHouseAddition_C_FindCurrentDesiredRotation, CallFunc_Conv_DoubleToVector_ReturnValue) == 0x000060, "Member 'GA_DeployHouseAddition_C_FindCurrentDesiredRotation::CallFunc_Conv_DoubleToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_DeployHouseAddition_C_FindCurrentDesiredRotation, CallFunc_Multiply_VectorVector_ReturnValue) == 0x000078, "Member 'GA_DeployHouseAddition_C_FindCurrentDesiredRotation::CallFunc_Multiply_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_DeployHouseAddition_C_FindCurrentDesiredRotation, CallFunc_GetActorRightVector_ReturnValue_1) == 0x000090, "Member 'GA_DeployHouseAddition_C_FindCurrentDesiredRotation::CallFunc_GetActorRightVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_DeployHouseAddition_C_FindCurrentDesiredRotation, CallFunc_Conv_DoubleToVector_ReturnValue_1) == 0x0000A8, "Member 'GA_DeployHouseAddition_C_FindCurrentDesiredRotation::CallFunc_Conv_DoubleToVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_DeployHouseAddition_C_FindCurrentDesiredRotation, CallFunc_GetActorForwardVector_ReturnValue_2) == 0x0000C0, "Member 'GA_DeployHouseAddition_C_FindCurrentDesiredRotation::CallFunc_GetActorForwardVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GA_DeployHouseAddition_C_FindCurrentDesiredRotation, CallFunc_Multiply_VectorVector_ReturnValue_1) == 0x0000D8, "Member 'GA_DeployHouseAddition_C_FindCurrentDesiredRotation::CallFunc_Multiply_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_DeployHouseAddition_C_FindCurrentDesiredRotation, CallFunc_GetAssociatedItem_ReturnValue) == 0x0000F0, "Member 'GA_DeployHouseAddition_C_FindCurrentDesiredRotation::CallFunc_GetAssociatedItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_DeployHouseAddition_C_FindCurrentDesiredRotation, CallFunc_GetTagStackCount_ReturnValue) == 0x0000F8, "Member 'GA_DeployHouseAddition_C_FindCurrentDesiredRotation::CallFunc_GetTagStackCount_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_DeployHouseAddition_C_FindCurrentDesiredRotation, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x0000FC, "Member 'GA_DeployHouseAddition_C_FindCurrentDesiredRotation::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_DeployHouseAddition_C_FindCurrentDesiredRotation, CallFunc_EqualEqual_IntInt_ReturnValue_1) == 0x0000FD, "Member 'GA_DeployHouseAddition_C_FindCurrentDesiredRotation::CallFunc_EqualEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_DeployHouseAddition_C_FindCurrentDesiredRotation, CallFunc_EqualEqual_IntInt_ReturnValue_2) == 0x0000FE, "Member 'GA_DeployHouseAddition_C_FindCurrentDesiredRotation::CallFunc_EqualEqual_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GA_DeployHouseAddition_C_FindCurrentDesiredRotation, CallFunc_EqualEqual_IntInt_ReturnValue_3) == 0x0000FF, "Member 'GA_DeployHouseAddition_C_FindCurrentDesiredRotation::CallFunc_EqualEqual_IntInt_ReturnValue_3' has a wrong offset!");

// Function GA_DeployHouseAddition.GA_DeployHouseAddition_C.GetPreviewMeshRotation
// 0x0120 (0x0120 - 0x0000)
struct GA_DeployHouseAddition_C_GetPreviewMeshRotation final
{
public:
	struct FRotator                               ReturnValue;                                       // 0x0000(0x0018)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_FindCurrentDesiredRotation_Direction;     // 0x0018(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_32[0x2];                                       // 0x0032(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x0040(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x0058(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x0070(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x0088(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x00A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x00A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x00B0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_BoneName;                  // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D4[0x4];                                       // 0x00D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x00D8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x00F0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotFromZY_ReturnValue;                // 0x0108(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(GA_DeployHouseAddition_C_GetPreviewMeshRotation) == 0x000008, "Wrong alignment on GA_DeployHouseAddition_C_GetPreviewMeshRotation");
static_assert(sizeof(GA_DeployHouseAddition_C_GetPreviewMeshRotation) == 0x000120, "Wrong size on GA_DeployHouseAddition_C_GetPreviewMeshRotation");
static_assert(offsetof(GA_DeployHouseAddition_C_GetPreviewMeshRotation, ReturnValue) == 0x000000, "Member 'GA_DeployHouseAddition_C_GetPreviewMeshRotation::ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_DeployHouseAddition_C_GetPreviewMeshRotation, CallFunc_FindCurrentDesiredRotation_Direction) == 0x000018, "Member 'GA_DeployHouseAddition_C_GetPreviewMeshRotation::CallFunc_FindCurrentDesiredRotation_Direction' has a wrong offset!");
static_assert(offsetof(GA_DeployHouseAddition_C_GetPreviewMeshRotation, CallFunc_BreakHitResult_bBlockingHit) == 0x000030, "Member 'GA_DeployHouseAddition_C_GetPreviewMeshRotation::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(GA_DeployHouseAddition_C_GetPreviewMeshRotation, CallFunc_BreakHitResult_bInitialOverlap) == 0x000031, "Member 'GA_DeployHouseAddition_C_GetPreviewMeshRotation::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(GA_DeployHouseAddition_C_GetPreviewMeshRotation, CallFunc_BreakHitResult_Time) == 0x000034, "Member 'GA_DeployHouseAddition_C_GetPreviewMeshRotation::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(GA_DeployHouseAddition_C_GetPreviewMeshRotation, CallFunc_BreakHitResult_Distance) == 0x000038, "Member 'GA_DeployHouseAddition_C_GetPreviewMeshRotation::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(GA_DeployHouseAddition_C_GetPreviewMeshRotation, CallFunc_BreakHitResult_Location) == 0x000040, "Member 'GA_DeployHouseAddition_C_GetPreviewMeshRotation::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(GA_DeployHouseAddition_C_GetPreviewMeshRotation, CallFunc_BreakHitResult_ImpactPoint) == 0x000058, "Member 'GA_DeployHouseAddition_C_GetPreviewMeshRotation::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(GA_DeployHouseAddition_C_GetPreviewMeshRotation, CallFunc_BreakHitResult_Normal) == 0x000070, "Member 'GA_DeployHouseAddition_C_GetPreviewMeshRotation::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(GA_DeployHouseAddition_C_GetPreviewMeshRotation, CallFunc_BreakHitResult_ImpactNormal) == 0x000088, "Member 'GA_DeployHouseAddition_C_GetPreviewMeshRotation::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(GA_DeployHouseAddition_C_GetPreviewMeshRotation, CallFunc_BreakHitResult_PhysMat) == 0x0000A0, "Member 'GA_DeployHouseAddition_C_GetPreviewMeshRotation::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(GA_DeployHouseAddition_C_GetPreviewMeshRotation, CallFunc_BreakHitResult_HitActor) == 0x0000A8, "Member 'GA_DeployHouseAddition_C_GetPreviewMeshRotation::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(GA_DeployHouseAddition_C_GetPreviewMeshRotation, CallFunc_BreakHitResult_HitComponent) == 0x0000B0, "Member 'GA_DeployHouseAddition_C_GetPreviewMeshRotation::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(GA_DeployHouseAddition_C_GetPreviewMeshRotation, CallFunc_BreakHitResult_HitBoneName) == 0x0000B8, "Member 'GA_DeployHouseAddition_C_GetPreviewMeshRotation::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(GA_DeployHouseAddition_C_GetPreviewMeshRotation, CallFunc_BreakHitResult_BoneName) == 0x0000C0, "Member 'GA_DeployHouseAddition_C_GetPreviewMeshRotation::CallFunc_BreakHitResult_BoneName' has a wrong offset!");
static_assert(offsetof(GA_DeployHouseAddition_C_GetPreviewMeshRotation, CallFunc_BreakHitResult_HitItem) == 0x0000C8, "Member 'GA_DeployHouseAddition_C_GetPreviewMeshRotation::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(GA_DeployHouseAddition_C_GetPreviewMeshRotation, CallFunc_BreakHitResult_ElementIndex) == 0x0000CC, "Member 'GA_DeployHouseAddition_C_GetPreviewMeshRotation::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(GA_DeployHouseAddition_C_GetPreviewMeshRotation, CallFunc_BreakHitResult_FaceIndex) == 0x0000D0, "Member 'GA_DeployHouseAddition_C_GetPreviewMeshRotation::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(GA_DeployHouseAddition_C_GetPreviewMeshRotation, CallFunc_BreakHitResult_TraceStart) == 0x0000D8, "Member 'GA_DeployHouseAddition_C_GetPreviewMeshRotation::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(GA_DeployHouseAddition_C_GetPreviewMeshRotation, CallFunc_BreakHitResult_TraceEnd) == 0x0000F0, "Member 'GA_DeployHouseAddition_C_GetPreviewMeshRotation::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(GA_DeployHouseAddition_C_GetPreviewMeshRotation, CallFunc_MakeRotFromZY_ReturnValue) == 0x000108, "Member 'GA_DeployHouseAddition_C_GetPreviewMeshRotation::CallFunc_MakeRotFromZY_ReturnValue' has a wrong offset!");

// Function GA_DeployHouseAddition.GA_DeployHouseAddition_C.SpawnDeployable
// 0x0138 (0x0138 - 0x0000)
struct GA_DeployHouseAddition_C_SpawnDeployable final
{
public:
	TArray<struct FHitResult>                     HitResults;                                        // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
	struct FRotator                               PreviewRotation;                                   // 0x0010(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	double                                        OptionalAngle_0;                                   // 0x0028(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                OptionalVector_0;                                  // 0x0030(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwningActorFromActorInfo_ReturnValue;  // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_52[0x2];                                       // 0x0052(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5C[0x4];                                       // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x0060(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x0078(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x0090(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x00A8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x00C0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x00C8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x00D0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_BoneName;                  // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x00EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F4[0x4];                                       // 0x00F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x00F8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x0110(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  K2Node_DynamicCast_AsPawn;                         // 0x0128(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_DeployHouseAddition_C_SpawnDeployable) == 0x000008, "Wrong alignment on GA_DeployHouseAddition_C_SpawnDeployable");
static_assert(sizeof(GA_DeployHouseAddition_C_SpawnDeployable) == 0x000138, "Wrong size on GA_DeployHouseAddition_C_SpawnDeployable");
static_assert(offsetof(GA_DeployHouseAddition_C_SpawnDeployable, HitResults) == 0x000000, "Member 'GA_DeployHouseAddition_C_SpawnDeployable::HitResults' has a wrong offset!");
static_assert(offsetof(GA_DeployHouseAddition_C_SpawnDeployable, PreviewRotation) == 0x000010, "Member 'GA_DeployHouseAddition_C_SpawnDeployable::PreviewRotation' has a wrong offset!");
static_assert(offsetof(GA_DeployHouseAddition_C_SpawnDeployable, OptionalAngle_0) == 0x000028, "Member 'GA_DeployHouseAddition_C_SpawnDeployable::OptionalAngle_0' has a wrong offset!");
static_assert(offsetof(GA_DeployHouseAddition_C_SpawnDeployable, OptionalVector_0) == 0x000030, "Member 'GA_DeployHouseAddition_C_SpawnDeployable::OptionalVector_0' has a wrong offset!");
static_assert(offsetof(GA_DeployHouseAddition_C_SpawnDeployable, CallFunc_GetOwningActorFromActorInfo_ReturnValue) == 0x000048, "Member 'GA_DeployHouseAddition_C_SpawnDeployable::CallFunc_GetOwningActorFromActorInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_DeployHouseAddition_C_SpawnDeployable, CallFunc_BreakHitResult_bBlockingHit) == 0x000050, "Member 'GA_DeployHouseAddition_C_SpawnDeployable::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(GA_DeployHouseAddition_C_SpawnDeployable, CallFunc_BreakHitResult_bInitialOverlap) == 0x000051, "Member 'GA_DeployHouseAddition_C_SpawnDeployable::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(GA_DeployHouseAddition_C_SpawnDeployable, CallFunc_BreakHitResult_Time) == 0x000054, "Member 'GA_DeployHouseAddition_C_SpawnDeployable::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(GA_DeployHouseAddition_C_SpawnDeployable, CallFunc_BreakHitResult_Distance) == 0x000058, "Member 'GA_DeployHouseAddition_C_SpawnDeployable::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(GA_DeployHouseAddition_C_SpawnDeployable, CallFunc_BreakHitResult_Location) == 0x000060, "Member 'GA_DeployHouseAddition_C_SpawnDeployable::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(GA_DeployHouseAddition_C_SpawnDeployable, CallFunc_BreakHitResult_ImpactPoint) == 0x000078, "Member 'GA_DeployHouseAddition_C_SpawnDeployable::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(GA_DeployHouseAddition_C_SpawnDeployable, CallFunc_BreakHitResult_Normal) == 0x000090, "Member 'GA_DeployHouseAddition_C_SpawnDeployable::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(GA_DeployHouseAddition_C_SpawnDeployable, CallFunc_BreakHitResult_ImpactNormal) == 0x0000A8, "Member 'GA_DeployHouseAddition_C_SpawnDeployable::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(GA_DeployHouseAddition_C_SpawnDeployable, CallFunc_BreakHitResult_PhysMat) == 0x0000C0, "Member 'GA_DeployHouseAddition_C_SpawnDeployable::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(GA_DeployHouseAddition_C_SpawnDeployable, CallFunc_BreakHitResult_HitActor) == 0x0000C8, "Member 'GA_DeployHouseAddition_C_SpawnDeployable::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(GA_DeployHouseAddition_C_SpawnDeployable, CallFunc_BreakHitResult_HitComponent) == 0x0000D0, "Member 'GA_DeployHouseAddition_C_SpawnDeployable::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(GA_DeployHouseAddition_C_SpawnDeployable, CallFunc_BreakHitResult_HitBoneName) == 0x0000D8, "Member 'GA_DeployHouseAddition_C_SpawnDeployable::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(GA_DeployHouseAddition_C_SpawnDeployable, CallFunc_BreakHitResult_BoneName) == 0x0000E0, "Member 'GA_DeployHouseAddition_C_SpawnDeployable::CallFunc_BreakHitResult_BoneName' has a wrong offset!");
static_assert(offsetof(GA_DeployHouseAddition_C_SpawnDeployable, CallFunc_BreakHitResult_HitItem) == 0x0000E8, "Member 'GA_DeployHouseAddition_C_SpawnDeployable::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(GA_DeployHouseAddition_C_SpawnDeployable, CallFunc_BreakHitResult_ElementIndex) == 0x0000EC, "Member 'GA_DeployHouseAddition_C_SpawnDeployable::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(GA_DeployHouseAddition_C_SpawnDeployable, CallFunc_BreakHitResult_FaceIndex) == 0x0000F0, "Member 'GA_DeployHouseAddition_C_SpawnDeployable::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(GA_DeployHouseAddition_C_SpawnDeployable, CallFunc_BreakHitResult_TraceStart) == 0x0000F8, "Member 'GA_DeployHouseAddition_C_SpawnDeployable::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(GA_DeployHouseAddition_C_SpawnDeployable, CallFunc_BreakHitResult_TraceEnd) == 0x000110, "Member 'GA_DeployHouseAddition_C_SpawnDeployable::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(GA_DeployHouseAddition_C_SpawnDeployable, K2Node_DynamicCast_AsPawn) == 0x000128, "Member 'GA_DeployHouseAddition_C_SpawnDeployable::K2Node_DynamicCast_AsPawn' has a wrong offset!");
static_assert(offsetof(GA_DeployHouseAddition_C_SpawnDeployable, K2Node_DynamicCast_bSuccess) == 0x000130, "Member 'GA_DeployHouseAddition_C_SpawnDeployable::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function GA_DeployHouseAddition.GA_DeployHouseAddition_C.SpawnDeployableActor
// 0x00B0 (0x00B0 - 0x0000)
struct GA_DeployHouseAddition_C_SpawnDeployableActor final
{
public:
	class UClass*                                 Class_0;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               SpawnTransform_Rotation;                           // 0x0008(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                SpawnTransform_Location;                           // 0x0020(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  Instigator;                                        // 0x0038(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0040(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x00A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_FinishSpawningActor_ReturnValue;          // 0x00A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_DeployHouseAddition_C_SpawnDeployableActor) == 0x000010, "Wrong alignment on GA_DeployHouseAddition_C_SpawnDeployableActor");
static_assert(sizeof(GA_DeployHouseAddition_C_SpawnDeployableActor) == 0x0000B0, "Wrong size on GA_DeployHouseAddition_C_SpawnDeployableActor");
static_assert(offsetof(GA_DeployHouseAddition_C_SpawnDeployableActor, Class_0) == 0x000000, "Member 'GA_DeployHouseAddition_C_SpawnDeployableActor::Class_0' has a wrong offset!");
static_assert(offsetof(GA_DeployHouseAddition_C_SpawnDeployableActor, SpawnTransform_Rotation) == 0x000008, "Member 'GA_DeployHouseAddition_C_SpawnDeployableActor::SpawnTransform_Rotation' has a wrong offset!");
static_assert(offsetof(GA_DeployHouseAddition_C_SpawnDeployableActor, SpawnTransform_Location) == 0x000020, "Member 'GA_DeployHouseAddition_C_SpawnDeployableActor::SpawnTransform_Location' has a wrong offset!");
static_assert(offsetof(GA_DeployHouseAddition_C_SpawnDeployableActor, Instigator) == 0x000038, "Member 'GA_DeployHouseAddition_C_SpawnDeployableActor::Instigator' has a wrong offset!");
static_assert(offsetof(GA_DeployHouseAddition_C_SpawnDeployableActor, CallFunc_MakeTransform_ReturnValue) == 0x000040, "Member 'GA_DeployHouseAddition_C_SpawnDeployableActor::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_DeployHouseAddition_C_SpawnDeployableActor, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x0000A0, "Member 'GA_DeployHouseAddition_C_SpawnDeployableActor::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_DeployHouseAddition_C_SpawnDeployableActor, CallFunc_FinishSpawningActor_ReturnValue) == 0x0000A8, "Member 'GA_DeployHouseAddition_C_SpawnDeployableActor::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");

}

