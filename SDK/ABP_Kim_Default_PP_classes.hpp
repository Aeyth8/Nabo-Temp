#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ABP_Kim_Default_PP

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "ControlRig_structs.hpp"
#include "AnimGraphRuntime_structs.hpp"


namespace SDK
{

// AnimBlueprintGeneratedClass ABP_Kim_Default_PP.ABP_Kim_Default_PP_C
// 0x1670 (0x19E0 - 0x0370)
class UABP_Kim_Default_PP_C final : public UAnimInstance
{
public:
	uint8                                         Pad_368[0x8];                                      // 0x0368(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0370(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct FAnimSubsystemInstance                 AnimBlueprintExtension_PropertyAccess;             // 0x0378(0x0008)()
	struct FAnimSubsystemInstance                 AnimBlueprintExtension_Base;                       // 0x0380(0x0008)()
	struct FAnimNode_Root                         AnimGraphNode_Root;                                // 0x0388(0x0020)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose;                      // 0x03A8(0x0080)()
	struct FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace;               // 0x0428(0x0020)()
	struct FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace;               // 0x0448(0x0020)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose;                       // 0x0468(0x0028)()
	struct FAnimNode_LinkedInputPose              AnimGraphNode_LinkedInputPose;                     // 0x0490(0x00B8)()
	struct FAnimNode_ControlRig                   AnimGraphNode_ControlRig;                          // 0x0548(0x04D0)(ContainsInstancedReference)
	uint8                                         Pad_A18[0x8];                                      // 0x0A18(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAnimNode_RigidBody                    AnimGraphNode_RigidBody;                           // 0x0A20(0x0970)()
	struct FAnimNode_AnimDynamics                 AnimGraphNode_AnimDynamics;                        // 0x1390(0x0520)()
	struct FAnimNode_ModifyCurve                  AnimGraphNode_ModifyCurve;                         // 0x18B0(0x0120)()
	float                                         RigidbodyAlpha;                                    // 0x19D0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void AnimGraph(const struct FPoseLink& InPose, struct FPoseLink* AnimGraph_0);
	void BlueprintInitializeAnimation();
	void ExecuteUbergraph_ABP_Kim_Default_PP(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"ABP_Kim_Default_PP_C">();
	}
	static class UABP_Kim_Default_PP_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UABP_Kim_Default_PP_C>();
	}
};
static_assert(alignof(UABP_Kim_Default_PP_C) == 0x000010, "Wrong alignment on UABP_Kim_Default_PP_C");
static_assert(sizeof(UABP_Kim_Default_PP_C) == 0x0019E0, "Wrong size on UABP_Kim_Default_PP_C");
static_assert(offsetof(UABP_Kim_Default_PP_C, UberGraphFrame) == 0x000370, "Member 'UABP_Kim_Default_PP_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UABP_Kim_Default_PP_C, AnimBlueprintExtension_PropertyAccess) == 0x000378, "Member 'UABP_Kim_Default_PP_C::AnimBlueprintExtension_PropertyAccess' has a wrong offset!");
static_assert(offsetof(UABP_Kim_Default_PP_C, AnimBlueprintExtension_Base) == 0x000380, "Member 'UABP_Kim_Default_PP_C::AnimBlueprintExtension_Base' has a wrong offset!");
static_assert(offsetof(UABP_Kim_Default_PP_C, AnimGraphNode_Root) == 0x000388, "Member 'UABP_Kim_Default_PP_C::AnimGraphNode_Root' has a wrong offset!");
static_assert(offsetof(UABP_Kim_Default_PP_C, AnimGraphNode_SaveCachedPose) == 0x0003A8, "Member 'UABP_Kim_Default_PP_C::AnimGraphNode_SaveCachedPose' has a wrong offset!");
static_assert(offsetof(UABP_Kim_Default_PP_C, AnimGraphNode_ComponentToLocalSpace) == 0x000428, "Member 'UABP_Kim_Default_PP_C::AnimGraphNode_ComponentToLocalSpace' has a wrong offset!");
static_assert(offsetof(UABP_Kim_Default_PP_C, AnimGraphNode_LocalToComponentSpace) == 0x000448, "Member 'UABP_Kim_Default_PP_C::AnimGraphNode_LocalToComponentSpace' has a wrong offset!");
static_assert(offsetof(UABP_Kim_Default_PP_C, AnimGraphNode_UseCachedPose) == 0x000468, "Member 'UABP_Kim_Default_PP_C::AnimGraphNode_UseCachedPose' has a wrong offset!");
static_assert(offsetof(UABP_Kim_Default_PP_C, AnimGraphNode_LinkedInputPose) == 0x000490, "Member 'UABP_Kim_Default_PP_C::AnimGraphNode_LinkedInputPose' has a wrong offset!");
static_assert(offsetof(UABP_Kim_Default_PP_C, AnimGraphNode_ControlRig) == 0x000548, "Member 'UABP_Kim_Default_PP_C::AnimGraphNode_ControlRig' has a wrong offset!");
static_assert(offsetof(UABP_Kim_Default_PP_C, AnimGraphNode_RigidBody) == 0x000A20, "Member 'UABP_Kim_Default_PP_C::AnimGraphNode_RigidBody' has a wrong offset!");
static_assert(offsetof(UABP_Kim_Default_PP_C, AnimGraphNode_AnimDynamics) == 0x001390, "Member 'UABP_Kim_Default_PP_C::AnimGraphNode_AnimDynamics' has a wrong offset!");
static_assert(offsetof(UABP_Kim_Default_PP_C, AnimGraphNode_ModifyCurve) == 0x0018B0, "Member 'UABP_Kim_Default_PP_C::AnimGraphNode_ModifyCurve' has a wrong offset!");
static_assert(offsetof(UABP_Kim_Default_PP_C, RigidbodyAlpha) == 0x0019D0, "Member 'UABP_Kim_Default_PP_C::RigidbodyAlpha' has a wrong offset!");

}

