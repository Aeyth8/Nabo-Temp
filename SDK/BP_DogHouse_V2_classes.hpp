#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_DogHouse_V2

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_DogHouse_V2.BP_DogHouse_V2_C
// 0x0048 (0x02D8 - 0x0290)
class ABP_DogHouse_V2_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0290(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UBoxComponent*                          BoxBlockDeployables;                               // 0x0298(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UGroundskeeperReference*                GroundskeeperReference;                            // 0x02A0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        SleepLocation;                                     // 0x02A8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        SpawnLocationScene;                                // 0x02B0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   StaticMesh;                                        // 0x02B8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x02C0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	bool                                          SpawnDog;                                          // 0x02C8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C9[0x7];                                      // 0x02C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 PetToSpawn;                                        // 0x02D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_DogHouse_V2(int32 EntryPoint);
	void FindClosestTeamVolume(class ABP_TeamVolume_C** Return);
	void OnEnded_6472E2EA48FFB112525B2CB6B6526895();
	void ReceiveBeginPlay();
	void Spawn_Dog();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_DogHouse_V2_C">();
	}
	static class ABP_DogHouse_V2_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_DogHouse_V2_C>();
	}
};
static_assert(alignof(ABP_DogHouse_V2_C) == 0x000008, "Wrong alignment on ABP_DogHouse_V2_C");
static_assert(sizeof(ABP_DogHouse_V2_C) == 0x0002D8, "Wrong size on ABP_DogHouse_V2_C");
static_assert(offsetof(ABP_DogHouse_V2_C, UberGraphFrame) == 0x000290, "Member 'ABP_DogHouse_V2_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_DogHouse_V2_C, BoxBlockDeployables) == 0x000298, "Member 'ABP_DogHouse_V2_C::BoxBlockDeployables' has a wrong offset!");
static_assert(offsetof(ABP_DogHouse_V2_C, GroundskeeperReference) == 0x0002A0, "Member 'ABP_DogHouse_V2_C::GroundskeeperReference' has a wrong offset!");
static_assert(offsetof(ABP_DogHouse_V2_C, SleepLocation) == 0x0002A8, "Member 'ABP_DogHouse_V2_C::SleepLocation' has a wrong offset!");
static_assert(offsetof(ABP_DogHouse_V2_C, SpawnLocationScene) == 0x0002B0, "Member 'ABP_DogHouse_V2_C::SpawnLocationScene' has a wrong offset!");
static_assert(offsetof(ABP_DogHouse_V2_C, StaticMesh) == 0x0002B8, "Member 'ABP_DogHouse_V2_C::StaticMesh' has a wrong offset!");
static_assert(offsetof(ABP_DogHouse_V2_C, DefaultSceneRoot) == 0x0002C0, "Member 'ABP_DogHouse_V2_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ABP_DogHouse_V2_C, SpawnDog) == 0x0002C8, "Member 'ABP_DogHouse_V2_C::SpawnDog' has a wrong offset!");
static_assert(offsetof(ABP_DogHouse_V2_C, PetToSpawn) == 0x0002D0, "Member 'ABP_DogHouse_V2_C::PetToSpawn' has a wrong offset!");

}

