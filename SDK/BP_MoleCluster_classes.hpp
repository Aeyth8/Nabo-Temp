#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_MoleCluster

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_MoleCluster.BP_MoleCluster_C
// 0x0040 (0x02D0 - 0x0290)
class ABP_MoleCluster_C : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0290(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UBoxComponent*                          BoxPlaceholderClass;                               // 0x0298(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x02A0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	FMulticastInlineDelegateProperty_             On_MoleDestroyed;                                  // 0x02A8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	int32                                         AmountOfMolesToSpawn;                              // 0x02B8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2BC[0x4];                                      // 0x02BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UBoxComponent*>                  SpawnScenes;                                       // 0x02C0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)

public:
	void ExecuteUbergraph_BP_MoleCluster(int32 EntryPoint);
	void On_Mole_Destroyed(class AActor* DestroyedActor);
	void On_MoleDestroyed__DelegateSignature(class AActor* Mole);
	void ReceiveBeginPlay();
	void UserConstructionScript();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_MoleCluster_C">();
	}
	static class ABP_MoleCluster_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_MoleCluster_C>();
	}
};
static_assert(alignof(ABP_MoleCluster_C) == 0x000008, "Wrong alignment on ABP_MoleCluster_C");
static_assert(sizeof(ABP_MoleCluster_C) == 0x0002D0, "Wrong size on ABP_MoleCluster_C");
static_assert(offsetof(ABP_MoleCluster_C, UberGraphFrame) == 0x000290, "Member 'ABP_MoleCluster_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_MoleCluster_C, BoxPlaceholderClass) == 0x000298, "Member 'ABP_MoleCluster_C::BoxPlaceholderClass' has a wrong offset!");
static_assert(offsetof(ABP_MoleCluster_C, DefaultSceneRoot) == 0x0002A0, "Member 'ABP_MoleCluster_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ABP_MoleCluster_C, On_MoleDestroyed) == 0x0002A8, "Member 'ABP_MoleCluster_C::On_MoleDestroyed' has a wrong offset!");
static_assert(offsetof(ABP_MoleCluster_C, AmountOfMolesToSpawn) == 0x0002B8, "Member 'ABP_MoleCluster_C::AmountOfMolesToSpawn' has a wrong offset!");
static_assert(offsetof(ABP_MoleCluster_C, SpawnScenes) == 0x0002C0, "Member 'ABP_MoleCluster_C::SpawnScenes' has a wrong offset!");

}

