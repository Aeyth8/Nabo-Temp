#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: HouseActorBase

#include "Basic.hpp"

#include "HouseActorBase_classes.hpp"
#include "HouseActorBase_parameters.hpp"


namespace SDK
{

// Function HouseActorBase.HouseActorBase_C.AddRepairness
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Magnitude                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AHouseActorBase_C::AddRepairness(float Magnitude)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HouseActorBase_C", "AddRepairness");

	Params::HouseActorBase_C_AddRepairness Parms{};

	Parms.Magnitude = Magnitude;

	UObject::ProcessEvent(Func, &Parms);
}


// Function HouseActorBase.HouseActorBase_C.Audio Damage Impact
// (BlueprintCallable, BlueprintEvent)

void AHouseActorBase_C::Audio_Damage_Impact()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HouseActorBase_C", "Audio Damage Impact");

	UObject::ProcessEvent(Func, nullptr);
}


// Function HouseActorBase.HouseActorBase_C.Audio Repair Impact
// (BlueprintCallable, BlueprintEvent)

void AHouseActorBase_C::Audio_Repair_Impact()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HouseActorBase_C", "Audio Repair Impact");

	UObject::ProcessEvent(Func, nullptr);
}


// Function HouseActorBase.HouseActorBase_C.BndEvt__HouseActorBase_Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature
// (HasOutParams, BlueprintEvent)
// Parameters:
// class UPrimitiveComponent*              OverlappedComponent                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class AActor*                           OtherActor                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*              OtherComp                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// int32                                   OtherBodyIndex                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bFromSweep                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FHitResult                       SweepResult                                            (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)

void AHouseActorBase_C::BndEvt__HouseActorBase_Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HouseActorBase_C", "BndEvt__HouseActorBase_Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature");

	Params::HouseActorBase_C_BndEvt__HouseActorBase_Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature Parms{};

	Parms.OverlappedComponent = OverlappedComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.OtherBodyIndex = OtherBodyIndex;
	Parms.bFromSweep = bFromSweep;
	Parms.SweepResult = std::move(SweepResult);

	UObject::ProcessEvent(Func, &Parms);
}


// Function HouseActorBase.HouseActorBase_C.BndEvt__HouseActorBase_Sphere_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature
// (BlueprintEvent)
// Parameters:
// class UPrimitiveComponent*              OverlappedComponent                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class AActor*                           OtherActor                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*              OtherComp                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// int32                                   OtherBodyIndex                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AHouseActorBase_C::BndEvt__HouseActorBase_Sphere_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HouseActorBase_C", "BndEvt__HouseActorBase_Sphere_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature");

	Params::HouseActorBase_C_BndEvt__HouseActorBase_Sphere_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature Parms{};

	Parms.OverlappedComponent = OverlappedComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.OtherBodyIndex = OtherBodyIndex;

	UObject::ProcessEvent(Func, &Parms);
}


// Function HouseActorBase.HouseActorBase_C.CancelInteraction
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UPrimitiveComponent*              InteractionComponent                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void AHouseActorBase_C::CancelInteraction(class UPrimitiveComponent* InteractionComponent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HouseActorBase_C", "CancelInteraction");

	Params::HouseActorBase_C_CancelInteraction Parms{};

	Parms.InteractionComponent = InteractionComponent;

	UObject::ProcessEvent(Func, &Parms);
}


// Function HouseActorBase.HouseActorBase_C.Cosmetics State Repaired
// (BlueprintCallable, BlueprintEvent)

void AHouseActorBase_C::Cosmetics_State_Repaired()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HouseActorBase_C", "Cosmetics State Repaired");

	UObject::ProcessEvent(Func, nullptr);
}


// Function HouseActorBase.HouseActorBase_C.Cosmetics State Sabotaged
// (BlueprintCallable, BlueprintEvent)

void AHouseActorBase_C::Cosmetics_State_Sabotaged()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HouseActorBase_C", "Cosmetics State Sabotaged");

	UObject::ProcessEvent(Func, nullptr);
}


// Function HouseActorBase.HouseActorBase_C.CreateKillInfo
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FCombatParticipant               Killer                                                 (BlueprintVisible, BlueprintReadOnly, Parm)
// struct FKillMethod                      Method                                                 (BlueprintVisible, BlueprintReadOnly, Parm)
// struct FKillGameplayMessage             KillGameplayMessage                                    (Parm, OutParm)

void AHouseActorBase_C::CreateKillInfo(const struct FCombatParticipant& Killer, const struct FKillMethod& Method, struct FKillGameplayMessage* KillGameplayMessage)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HouseActorBase_C", "CreateKillInfo");

	Params::HouseActorBase_C_CreateKillInfo Parms{};

	Parms.Killer = std::move(Killer);
	Parms.Method = std::move(Method);

	UObject::ProcessEvent(Func, &Parms);

	if (KillGameplayMessage != nullptr)
		*KillGameplayMessage = std::move(Parms.KillGameplayMessage);
}


// Function HouseActorBase.HouseActorBase_C.DebugPrintHealth
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  MinHealth                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  MaxHealth                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  Normalized                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AHouseActorBase_C::DebugPrintHealth(double MinHealth, double MaxHealth, double Normalized)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HouseActorBase_C", "DebugPrintHealth");

	Params::HouseActorBase_C_DebugPrintHealth Parms{};

	Parms.MinHealth = MinHealth;
	Parms.MaxHealth = MaxHealth;
	Parms.Normalized = Normalized;

	UObject::ProcessEvent(Func, &Parms);
}


// Function HouseActorBase.HouseActorBase_C.Event On Team Replicated Cosmetic
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FTeam                            New_Team                                               (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)

void AHouseActorBase_C::Event_On_Team_Replicated_Cosmetic(const struct FTeam& New_Team)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HouseActorBase_C", "Event On Team Replicated Cosmetic");

	Params::HouseActorBase_C_Event_On_Team_Replicated_Cosmetic Parms{};

	Parms.New_Team = std::move(New_Team);

	UObject::ProcessEvent(Func, &Parms);
}


// Function HouseActorBase.HouseActorBase_C.ExecuteUbergraph_HouseActorBase
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AHouseActorBase_C::ExecuteUbergraph_HouseActorBase(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HouseActorBase_C", "ExecuteUbergraph_HouseActorBase");

	Params::HouseActorBase_C_ExecuteUbergraph_HouseActorBase Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function HouseActorBase.HouseActorBase_C.GetDurabilityCostWhenHit
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  Amount                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AHouseActorBase_C::GetDurabilityCostWhenHit(double* Amount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HouseActorBase_C", "GetDurabilityCostWhenHit");

	Params::HouseActorBase_C_GetDurabilityCostWhenHit Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Amount != nullptr)
		*Amount = Parms.Amount;
}


// Function HouseActorBase.HouseActorBase_C.GetInteractSound
// (Public, BlueprintCallable, BlueprintEvent)

void AHouseActorBase_C::GetInteractSound()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HouseActorBase_C", "GetInteractSound");

	UObject::ProcessEvent(Func, nullptr);
}


// Function HouseActorBase.HouseActorBase_C.GetMaterialType
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// E_MaterialTypes                         MaterialType                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AHouseActorBase_C::GetMaterialType(E_MaterialTypes* MaterialType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HouseActorBase_C", "GetMaterialType");

	Params::HouseActorBase_C_GetMaterialType Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (MaterialType != nullptr)
		*MaterialType = Parms.MaterialType;
}


// Function HouseActorBase.HouseActorBase_C.GetNewWidgetColor
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FSlateColor                      NewColor                                               (Parm, OutParm)

void AHouseActorBase_C::GetNewWidgetColor(struct FSlateColor* NewColor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HouseActorBase_C", "GetNewWidgetColor");

	Params::HouseActorBase_C_GetNewWidgetColor Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (NewColor != nullptr)
		*NewColor = std::move(Parms.NewColor);
}


// Function HouseActorBase.HouseActorBase_C.GetOptionalText
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FText                             Return                                                 (Parm, OutParm)
// class FText                             Optional_Second_Line                                   (Parm, OutParm)

void AHouseActorBase_C::GetOptionalText(class FText* Return, class FText* Optional_Second_Line)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HouseActorBase_C", "GetOptionalText");

	Params::HouseActorBase_C_GetOptionalText Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Return != nullptr)
		*Return = std::move(Parms.Return);

	if (Optional_Second_Line != nullptr)
		*Optional_Second_Line = std::move(Parms.Optional_Second_Line);
}


// Function HouseActorBase.HouseActorBase_C.GetPriority
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Priority                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AHouseActorBase_C::GetPriority(int32* Priority)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HouseActorBase_C", "GetPriority");

	Params::HouseActorBase_C_GetPriority Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Priority != nullptr)
		*Priority = Parms.Priority;
}


// Function HouseActorBase.HouseActorBase_C.GetWidgetLocation
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          Location                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AHouseActorBase_C::GetWidgetLocation(struct FVector* Location)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HouseActorBase_C", "GetWidgetLocation");

	Params::HouseActorBase_C_GetWidgetLocation Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Location != nullptr)
		*Location = std::move(Parms.Location);
}


// Function HouseActorBase.HouseActorBase_C.HideInteractionWidget
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Return                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AHouseActorBase_C::HideInteractionWidget(bool* Return)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HouseActorBase_C", "HideInteractionWidget");

	Params::HouseActorBase_C_HideInteractionWidget Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Return != nullptr)
		*Return = Parms.Return;
}


// Function HouseActorBase.HouseActorBase_C.HitInterface
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          Direction                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AHouseActorBase_C::HitInterface(const struct FVector& Direction)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HouseActorBase_C", "HitInterface");

	Params::HouseActorBase_C_HitInterface Parms{};

	Parms.Direction = std::move(Direction);

	UObject::ProcessEvent(Func, &Parms);
}


// Function HouseActorBase.HouseActorBase_C.House Actor Impact Cosmetics
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          Location                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          HitImpulse                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// E_ImpactEffect                          ImpactEffect                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AHouseActorBase_C::House_Actor_Impact_Cosmetics(const struct FVector& Location, const struct FVector& HitImpulse, E_ImpactEffect ImpactEffect)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HouseActorBase_C", "House Actor Impact Cosmetics");

	Params::HouseActorBase_C_House_Actor_Impact_Cosmetics Parms{};

	Parms.Location = std::move(Location);
	Parms.HitImpulse = std::move(HitImpulse);
	Parms.ImpactEffect = ImpactEffect;

	UObject::ProcessEvent(Func, &Parms);
}


// Function HouseActorBase.HouseActorBase_C.ImpactCosmetics
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class APawn*                            ImpactCauser                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// struct FVector                          Location                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          HitImpulse                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// E_ImpactEffect                          ImpactEffect                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FName                             BoneName                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ChangedAttributes                                      (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AHouseActorBase_C::ImpactCosmetics(class APawn* ImpactCauser, const struct FVector& Location, const struct FVector& HitImpulse, E_ImpactEffect ImpactEffect, class FName BoneName, bool* ChangedAttributes)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HouseActorBase_C", "ImpactCosmetics");

	Params::HouseActorBase_C_ImpactCosmetics Parms{};

	Parms.ImpactCauser = ImpactCauser;
	Parms.Location = std::move(Location);
	Parms.HitImpulse = std::move(HitImpulse);
	Parms.ImpactEffect = ImpactEffect;
	Parms.BoneName = BoneName;

	UObject::ProcessEvent(Func, &Parms);

	if (ChangedAttributes != nullptr)
		*ChangedAttributes = Parms.ChangedAttributes;
}


// Function HouseActorBase.HouseActorBase_C.InteractableCancelInteraction
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UPrimitiveComponent*              InteractionComponent                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void AHouseActorBase_C::InteractableCancelInteraction(class UPrimitiveComponent* InteractionComponent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HouseActorBase_C", "InteractableCancelInteraction");

	Params::HouseActorBase_C_InteractableCancelInteraction Parms{};

	Parms.InteractionComponent = InteractionComponent;

	UObject::ProcessEvent(Func, &Parms);
}


// Function HouseActorBase.HouseActorBase_C.InteractPressed
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           InteractingActor                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void AHouseActorBase_C::InteractPressed(class AActor* InteractingActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HouseActorBase_C", "InteractPressed");

	Params::HouseActorBase_C_InteractPressed Parms{};

	Parms.InteractingActor = InteractingActor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function HouseActorBase.HouseActorBase_C.InteractReleased
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           InteractingActor                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void AHouseActorBase_C::InteractReleased(class AActor* InteractingActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HouseActorBase_C", "InteractReleased");

	Params::HouseActorBase_C_InteractReleased Parms{};

	Parms.InteractingActor = InteractingActor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function HouseActorBase.HouseActorBase_C.IsInFocus
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Focusing_Actor                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void AHouseActorBase_C::IsInFocus(class AActor* Focusing_Actor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HouseActorBase_C", "IsInFocus");

	Params::HouseActorBase_C_IsInFocus Parms{};

	Parms.Focusing_Actor = Focusing_Actor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function HouseActorBase.HouseActorBase_C.IsInteractable
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Interactable                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AHouseActorBase_C::IsInteractable(bool* Interactable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HouseActorBase_C", "IsInteractable");

	Params::HouseActorBase_C_IsInteractable Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Interactable != nullptr)
		*Interactable = Parms.Interactable;
}


// Function HouseActorBase.HouseActorBase_C.IsSabotaged
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Return                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           SabotagingActor                                        (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// E_Tools                                 RequiredTool_0                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  DurabilityCost                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AHouseActorBase_C::IsSabotaged(bool* Return, class AActor** SabotagingActor, E_Tools* RequiredTool_0, double* DurabilityCost)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HouseActorBase_C", "IsSabotaged");

	Params::HouseActorBase_C_IsSabotaged Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Return != nullptr)
		*Return = Parms.Return;

	if (SabotagingActor != nullptr)
		*SabotagingActor = Parms.SabotagingActor;

	if (RequiredTool_0 != nullptr)
		*RequiredTool_0 = Parms.RequiredTool_0;

	if (DurabilityCost != nullptr)
		*DurabilityCost = Parms.DurabilityCost;
}


// Function HouseActorBase.HouseActorBase_C.ItemHighlight
// (Public, BlueprintCallable, BlueprintEvent)

void AHouseActorBase_C::ItemHighlight()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HouseActorBase_C", "ItemHighlight");

	UObject::ProcessEvent(Func, nullptr);
}


// Function HouseActorBase.HouseActorBase_C.LocalSetTeamColor
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsEnemyTeam                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AHouseActorBase_C::LocalSetTeamColor(bool IsEnemyTeam)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HouseActorBase_C", "LocalSetTeamColor");

	Params::HouseActorBase_C_LocalSetTeamColor Parms{};

	Parms.IsEnemyTeam = IsEnemyTeam;

	UObject::ProcessEvent(Func, &Parms);
}


// Function HouseActorBase.HouseActorBase_C.MeleeHit
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           AttackingActor                                         (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash)

void AHouseActorBase_C::MeleeHit(const class AActor*& AttackingActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HouseActorBase_C", "MeleeHit");

	Params::HouseActorBase_C_MeleeHit Parms{};

	Parms.AttackingActor = AttackingActor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function HouseActorBase.HouseActorBase_C.Morph Target
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  Amount                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class USkeletalMeshComponent*           Target                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void AHouseActorBase_C::Morph_Target(double Amount, class USkeletalMeshComponent* Target)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HouseActorBase_C", "Morph Target");

	Params::HouseActorBase_C_Morph_Target Parms{};

	Parms.Amount = Amount;
	Parms.Target = Target;

	UObject::ProcessEvent(Func, &Parms);
}


// Function HouseActorBase.HouseActorBase_C.Multi_Cosmetic Break
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)

void AHouseActorBase_C::Multi_Cosmetic_Break()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HouseActorBase_C", "Multi_Cosmetic Break");

	UObject::ProcessEvent(Func, nullptr);
}


// Function HouseActorBase.HouseActorBase_C.Multi_Cosmetics Repair
// (Net, NetMulticast, BlueprintCallable, BlueprintEvent)

void AHouseActorBase_C::Multi_Cosmetics_Repair()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HouseActorBase_C", "Multi_Cosmetics Repair");

	UObject::ProcessEvent(Func, nullptr);
}


// Function HouseActorBase.HouseActorBase_C.Multicast_BroadcastKill
// (Net, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FKillGameplayMessage             Message                                                (BlueprintVisible, BlueprintReadOnly, Parm)

void AHouseActorBase_C::Multicast_BroadcastKill(const struct FKillGameplayMessage& Message)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HouseActorBase_C", "Multicast_BroadcastKill");

	Params::HouseActorBase_C_Multicast_BroadcastKill Parms{};

	Parms.Message = std::move(Message);

	UObject::ProcessEvent(Func, &Parms);
}


// Function HouseActorBase.HouseActorBase_C.OnDamaged
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   Delta                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           Causer                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// struct FCombatParticipant               CombatParticipant                                      (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm)
// struct FKillMethod                      KillMethod                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm)
// struct FVector_NetQuantize              Location                                               (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)

void AHouseActorBase_C::OnDamaged(float Delta, class AActor* Causer, const struct FCombatParticipant& CombatParticipant, const struct FKillMethod& KillMethod, const struct FVector_NetQuantize& Location)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HouseActorBase_C", "OnDamaged");

	Params::HouseActorBase_C_OnDamaged Parms{};

	Parms.Delta = Delta;
	Parms.Causer = Causer;
	Parms.CombatParticipant = std::move(CombatParticipant);
	Parms.KillMethod = std::move(KillMethod);
	Parms.Location = std::move(Location);

	UObject::ProcessEvent(Func, &Parms);
}


// Function HouseActorBase.HouseActorBase_C.OnEnded_23C032E44EBD8AE657F639BBDCE00F59
// (BlueprintCallable, BlueprintEvent)

void AHouseActorBase_C::OnEnded_23C032E44EBD8AE657F639BBDCE00F59()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HouseActorBase_C", "OnEnded_23C032E44EBD8AE657F639BBDCE00F59");

	UObject::ProcessEvent(Func, nullptr);
}


// Function HouseActorBase.HouseActorBase_C.OnEnded_249C5323452A6DFA7426E483A8F850BB
// (BlueprintCallable, BlueprintEvent)

void AHouseActorBase_C::OnEnded_249C5323452A6DFA7426E483A8F850BB()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HouseActorBase_C", "OnEnded_249C5323452A6DFA7426E483A8F850BB");

	UObject::ProcessEvent(Func, nullptr);
}


// Function HouseActorBase.HouseActorBase_C.OnEnded_3D4C06E64CEAE3AFDB663BB915BE23B7
// (BlueprintCallable, BlueprintEvent)

void AHouseActorBase_C::OnEnded_3D4C06E64CEAE3AFDB663BB915BE23B7()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HouseActorBase_C", "OnEnded_3D4C06E64CEAE3AFDB663BB915BE23B7");

	UObject::ProcessEvent(Func, nullptr);
}


// Function HouseActorBase.HouseActorBase_C.OnHealthChanged
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   Health                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   MaxHealth                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AHouseActorBase_C::OnHealthChanged(float Health, float MaxHealth)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HouseActorBase_C", "OnHealthChanged");

	Params::HouseActorBase_C_OnHealthChanged Parms{};

	Parms.Health = Health;
	Parms.MaxHealth = MaxHealth;

	UObject::ProcessEvent(Func, &Parms);
}


// Function HouseActorBase.HouseActorBase_C.OnRep_Broken
// (BlueprintCallable, BlueprintEvent)

void AHouseActorBase_C::OnRep_Broken()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HouseActorBase_C", "OnRep_Broken");

	UObject::ProcessEvent(Func, nullptr);
}


// Function HouseActorBase.HouseActorBase_C.OnRep_NewTeamID
// (BlueprintCallable, BlueprintEvent)

void AHouseActorBase_C::OnRep_NewTeamID()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HouseActorBase_C", "OnRep_NewTeamID");

	UObject::ProcessEvent(Func, nullptr);
}


// Function HouseActorBase.HouseActorBase_C.OnRep_Team
// (BlueprintCallable, BlueprintEvent)

void AHouseActorBase_C::OnRep_Team()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HouseActorBase_C", "OnRep_Team");

	UObject::ProcessEvent(Func, nullptr);
}


// Function HouseActorBase.HouseActorBase_C.PostInteract
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           InteractingActor                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*              InteractionComponent                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void AHouseActorBase_C::PostInteract(class AActor* InteractingActor, class UPrimitiveComponent* InteractionComponent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HouseActorBase_C", "PostInteract");

	Params::HouseActorBase_C_PostInteract Parms{};

	Parms.InteractingActor = InteractingActor;
	Parms.InteractionComponent = InteractionComponent;

	UObject::ProcessEvent(Func, &Parms);
}


// Function HouseActorBase.HouseActorBase_C.PreInteract
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           InteractingActor                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*              InteractionComponent                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void AHouseActorBase_C::PreInteract(class AActor* InteractingActor, class UPrimitiveComponent* InteractionComponent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HouseActorBase_C", "PreInteract");

	Params::HouseActorBase_C_PreInteract Parms{};

	Parms.InteractingActor = InteractingActor;
	Parms.InteractionComponent = InteractionComponent;

	UObject::ProcessEvent(Func, &Parms);
}


// Function HouseActorBase.HouseActorBase_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void AHouseActorBase_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HouseActorBase_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function HouseActorBase.HouseActorBase_C.RegisterInteracter
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UPrimitiveComponent*              InteractionComponent                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class AActor*                           InteractingActor                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void AHouseActorBase_C::RegisterInteracter(class UPrimitiveComponent* InteractionComponent, class AActor* InteractingActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HouseActorBase_C", "RegisterInteracter");

	Params::HouseActorBase_C_RegisterInteracter Parms{};

	Parms.InteractionComponent = InteractionComponent;
	Parms.InteractingActor = InteractingActor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function HouseActorBase.HouseActorBase_C.ReloadAfterHousesLoaded
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Return                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AHouseActorBase_C::ReloadAfterHousesLoaded(bool* Return)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HouseActorBase_C", "ReloadAfterHousesLoaded");

	Params::HouseActorBase_C_ReloadAfterHousesLoaded Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Return != nullptr)
		*Return = Parms.Return;
}


// Function HouseActorBase.HouseActorBase_C.Repair
// (Public, BlueprintCallable, BlueprintEvent)

void AHouseActorBase_C::Repair()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HouseActorBase_C", "Repair");

	UObject::ProcessEvent(Func, nullptr);
}


// Function HouseActorBase.HouseActorBase_C.Sabotage
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           SabotagingActor                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void AHouseActorBase_C::Sabotage(class AActor* SabotagingActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HouseActorBase_C", "Sabotage");

	Params::HouseActorBase_C_Sabotage Parms{};

	Parms.SabotagingActor = SabotagingActor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function HouseActorBase.HouseActorBase_C.SetActorReferenceInHealthbar
// (Public, BlueprintCallable, BlueprintEvent)

void AHouseActorBase_C::SetActorReferenceInHealthbar()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HouseActorBase_C", "SetActorReferenceInHealthbar");

	UObject::ProcessEvent(Func, nullptr);
}


// Function HouseActorBase.HouseActorBase_C.SetHoveredComponent
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UInteractionComponent_C*          HoveredComponent                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// bool                                    Void                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AHouseActorBase_C::SetHoveredComponent(class UInteractionComponent_C* HoveredComponent, bool* Void)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HouseActorBase_C", "SetHoveredComponent");

	Params::HouseActorBase_C_SetHoveredComponent Parms{};

	Parms.HoveredComponent = HoveredComponent;

	UObject::ProcessEvent(Func, &Parms);

	if (Void != nullptr)
		*Void = Parms.Void;
}


// Function HouseActorBase.HouseActorBase_C.SetInteractable
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Interactable                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AHouseActorBase_C::SetInteractable(bool Interactable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HouseActorBase_C", "SetInteractable");

	Params::HouseActorBase_C_SetInteractable Parms{};

	Parms.Interactable = Interactable;

	UObject::ProcessEvent(Func, &Parms);
}


// Function HouseActorBase.HouseActorBase_C.SetOutlineVisibility
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    InVisible                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AHouseActorBase_C::SetOutlineVisibility(bool InVisible)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HouseActorBase_C", "SetOutlineVisibility");

	Params::HouseActorBase_C_SetOutlineVisibility Parms{};

	Parms.InVisible = InVisible;

	UObject::ProcessEvent(Func, &Parms);
}


// Function HouseActorBase.HouseActorBase_C.SetRepairWidgetVisibility
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Visible                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AHouseActorBase_C::SetRepairWidgetVisibility(bool Visible)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HouseActorBase_C", "SetRepairWidgetVisibility");

	Params::HouseActorBase_C_SetRepairWidgetVisibility Parms{};

	Parms.Visible = Visible;

	UObject::ProcessEvent(Func, &Parms);
}


// Function HouseActorBase.HouseActorBase_C.TakeDamage
// (Public, BlueprintCallable, BlueprintEvent)

void AHouseActorBase_C::TakeDamage()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HouseActorBase_C", "TakeDamage");

	UObject::ProcessEvent(Func, nullptr);
}


// Function HouseActorBase.HouseActorBase_C.Toggle Focus Highlight
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Show                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AHouseActorBase_C::Toggle_Focus_Highlight(bool Show)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HouseActorBase_C", "Toggle Focus Highlight");

	Params::HouseActorBase_C_Toggle_Focus_Highlight Parms{};

	Parms.Show = Show;

	UObject::ProcessEvent(Func, &Parms);
}


// Function HouseActorBase.HouseActorBase_C.Toggle Item Highlight
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Show                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AHouseActorBase_C::Toggle_Item_Highlight(bool Show)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HouseActorBase_C", "Toggle Item Highlight");

	Params::HouseActorBase_C_Toggle_Item_Highlight Parms{};

	Parms.Show = Show;

	UObject::ProcessEvent(Func, &Parms);
}


// Function HouseActorBase.HouseActorBase_C.TryGrantSabotageReward
// (Protected, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           RecipientActor                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void AHouseActorBase_C::TryGrantSabotageReward(class AActor* RecipientActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HouseActorBase_C", "TryGrantSabotageReward");

	Params::HouseActorBase_C_TryGrantSabotageReward Parms{};

	Parms.RecipientActor = RecipientActor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function HouseActorBase.HouseActorBase_C.UnregisterInteracter
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UPrimitiveComponent*              InteractionComponent                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class AActor*                           InteractingActor                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void AHouseActorBase_C::UnregisterInteracter(class UPrimitiveComponent* InteractionComponent, class AActor* InteractingActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HouseActorBase_C", "UnregisterInteracter");

	Params::HouseActorBase_C_UnregisterInteracter Parms{};

	Parms.InteractionComponent = InteractionComponent;
	Parms.InteractingActor = InteractingActor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function HouseActorBase.HouseActorBase_C.UpdateProgressbar
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  Value                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  Max                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AHouseActorBase_C::UpdateProgressbar(double Value, double Max)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HouseActorBase_C", "UpdateProgressbar");

	Params::HouseActorBase_C_UpdateProgressbar Parms{};

	Parms.Value = Value;
	Parms.Max = Max;

	UObject::ProcessEvent(Func, &Parms);
}


// Function HouseActorBase.HouseActorBase_C.UpdateTeamAndID
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void AHouseActorBase_C::UpdateTeamAndID()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HouseActorBase_C", "UpdateTeamAndID");

	UObject::ProcessEvent(Func, nullptr);
}


// Function HouseActorBase.HouseActorBase_C.GetInteractionDuration
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// class UPrimitiveComponent*              InteractionComponent                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

float AHouseActorBase_C::GetInteractionDuration(class UPrimitiveComponent* InteractionComponent) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HouseActorBase_C", "GetInteractionDuration");

	Params::HouseActorBase_C_GetInteractionDuration Parms{};

	Parms.InteractionComponent = InteractionComponent;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function HouseActorBase.HouseActorBase_C.GetPostInteractSyncType
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// bool                                    bShouldSync                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EAbilityTaskNetSyncType                 Type                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*              InteractionComponent                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void AHouseActorBase_C::GetPostInteractSyncType(bool* bShouldSync, EAbilityTaskNetSyncType* Type, class UPrimitiveComponent* InteractionComponent) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HouseActorBase_C", "GetPostInteractSyncType");

	Params::HouseActorBase_C_GetPostInteractSyncType Parms{};

	Parms.InteractionComponent = InteractionComponent;

	UObject::ProcessEvent(Func, &Parms);

	if (bShouldSync != nullptr)
		*bShouldSync = Parms.bShouldSync;

	if (Type != nullptr)
		*Type = Parms.Type;
}


// Function HouseActorBase.HouseActorBase_C.GetPreInteractSyncType
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// bool                                    bShouldSync                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EAbilityTaskNetSyncType                 Type                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*              InteractionComponent                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void AHouseActorBase_C::GetPreInteractSyncType(bool* bShouldSync, EAbilityTaskNetSyncType* Type, class UPrimitiveComponent* InteractionComponent) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HouseActorBase_C", "GetPreInteractSyncType");

	Params::HouseActorBase_C_GetPreInteractSyncType Parms{};

	Parms.InteractionComponent = InteractionComponent;

	UObject::ProcessEvent(Func, &Parms);

	if (bShouldSync != nullptr)
		*bShouldSync = Parms.bShouldSync;

	if (Type != nullptr)
		*Type = Parms.Type;
}


// Function HouseActorBase.HouseActorBase_C.GetTeam
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// struct FTeam                            ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor)

struct FTeam AHouseActorBase_C::GetTeam() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HouseActorBase_C", "GetTeam");

	Params::HouseActorBase_C_GetTeam Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function HouseActorBase.HouseActorBase_C.GetTeamID
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// uint8                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

uint8 AHouseActorBase_C::GetTeamID() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HouseActorBase_C", "GetTeamID");

	Params::HouseActorBase_C_GetTeamID Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function HouseActorBase.HouseActorBase_C.HasTeam
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool AHouseActorBase_C::HasTeam() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HouseActorBase_C", "HasTeam");

	Params::HouseActorBase_C_HasTeam Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function HouseActorBase.HouseActorBase_C.IsAvailableForEnemyTeam
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// class UPrimitiveComponent*              InteractionComponent                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool AHouseActorBase_C::IsAvailableForEnemyTeam(class UPrimitiveComponent* InteractionComponent) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HouseActorBase_C", "IsAvailableForEnemyTeam");

	Params::HouseActorBase_C_IsAvailableForEnemyTeam Parms{};

	Parms.InteractionComponent = InteractionComponent;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function HouseActorBase.HouseActorBase_C.IsAvailableForInteraction
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// class AActor*                           InteractingActor                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*              InteractionComponent                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool AHouseActorBase_C::IsAvailableForInteraction(class AActor* InteractingActor, class UPrimitiveComponent* InteractionComponent) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HouseActorBase_C", "IsAvailableForInteraction");

	Params::HouseActorBase_C_IsAvailableForInteraction Parms{};

	Parms.InteractingActor = InteractingActor;
	Parms.InteractionComponent = InteractionComponent;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function HouseActorBase.HouseActorBase_C.IsLocalTeam
// (Protected, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool AHouseActorBase_C::IsLocalTeam() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HouseActorBase_C", "IsLocalTeam");

	Params::HouseActorBase_C_IsLocalTeam Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function HouseActorBase.HouseActorBase_C.IsNotLocalTeam
// (Protected, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool AHouseActorBase_C::IsNotLocalTeam() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HouseActorBase_C", "IsNotLocalTeam");

	Params::HouseActorBase_C_IsNotLocalTeam Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function HouseActorBase.HouseActorBase_C.TakeDamageFromAllTeams
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool AHouseActorBase_C::TakeDamageFromAllTeams() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HouseActorBase_C", "TakeDamageFromAllTeams");

	Params::HouseActorBase_C_TakeDamageFromAllTeams Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}

}

