#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GCN_PlayerInFire

#include "Basic.hpp"

#include "GameplayAbilities_structs.hpp"


namespace SDK::Params
{

// Function GCN_PlayerInFire.GCN_PlayerInFire_C.ExecuteUbergraph_GCN_PlayerInFire
// 0x05D0 (0x05D0 - 0x0000)
struct GCN_PlayerInFire_C_ExecuteUbergraph_GCN_PlayerInFire final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_Event_Target_3;                             // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayCueParameters                 K2Node_Event_Parameters_4;                         // 0x0010(0x00D8)(ConstParm, ContainsInstancedReference)
	struct FGameplayCueNotify_SpawnResult         K2Node_Event_SpawnResults_3;                       // 0x00E8(0x0058)(ConstParm, ContainsInstancedReference)
	class AActor*                                 K2Node_Event_Target_2;                             // 0x0140(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayCueParameters                 K2Node_Event_Parameters_3;                         // 0x0148(0x00D8)(ConstParm, ContainsInstancedReference)
	struct FGameplayCueNotify_SpawnResult         K2Node_Event_SpawnResults_2;                       // 0x0220(0x0058)(ConstParm, ContainsInstancedReference)
	class AActor*                                 K2Node_Event_Target_1;                             // 0x0278(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayCueParameters                 K2Node_Event_Parameters_2;                         // 0x0280(0x00D8)(ConstParm, ContainsInstancedReference)
	struct FGameplayCueNotify_SpawnResult         K2Node_Event_SpawnResults_1;                       // 0x0358(0x0058)(ConstParm, ContainsInstancedReference)
	class AActor*                                 K2Node_Event_Target;                               // 0x03B0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayCueParameters                 K2Node_Event_Parameters_1;                         // 0x03B8(0x00D8)(ConstParm, ContainsInstancedReference)
	struct FGameplayCueNotify_SpawnResult         K2Node_Event_SpawnResults;                         // 0x0490(0x0058)(ConstParm, ContainsInstancedReference)
	class AActor*                                 K2Node_Event_MyTarget;                             // 0x04E8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	EGameplayCueEvent                             K2Node_Event_EventType;                            // 0x04F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4F1[0x7];                                      // 0x04F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayCueParameters                 K2Node_Event_Parameters;                           // 0x04F8(0x00D8)(ConstParm, ContainsInstancedReference)
};
static_assert(alignof(GCN_PlayerInFire_C_ExecuteUbergraph_GCN_PlayerInFire) == 0x000008, "Wrong alignment on GCN_PlayerInFire_C_ExecuteUbergraph_GCN_PlayerInFire");
static_assert(sizeof(GCN_PlayerInFire_C_ExecuteUbergraph_GCN_PlayerInFire) == 0x0005D0, "Wrong size on GCN_PlayerInFire_C_ExecuteUbergraph_GCN_PlayerInFire");
static_assert(offsetof(GCN_PlayerInFire_C_ExecuteUbergraph_GCN_PlayerInFire, EntryPoint) == 0x000000, "Member 'GCN_PlayerInFire_C_ExecuteUbergraph_GCN_PlayerInFire::EntryPoint' has a wrong offset!");
static_assert(offsetof(GCN_PlayerInFire_C_ExecuteUbergraph_GCN_PlayerInFire, K2Node_Event_Target_3) == 0x000008, "Member 'GCN_PlayerInFire_C_ExecuteUbergraph_GCN_PlayerInFire::K2Node_Event_Target_3' has a wrong offset!");
static_assert(offsetof(GCN_PlayerInFire_C_ExecuteUbergraph_GCN_PlayerInFire, K2Node_Event_Parameters_4) == 0x000010, "Member 'GCN_PlayerInFire_C_ExecuteUbergraph_GCN_PlayerInFire::K2Node_Event_Parameters_4' has a wrong offset!");
static_assert(offsetof(GCN_PlayerInFire_C_ExecuteUbergraph_GCN_PlayerInFire, K2Node_Event_SpawnResults_3) == 0x0000E8, "Member 'GCN_PlayerInFire_C_ExecuteUbergraph_GCN_PlayerInFire::K2Node_Event_SpawnResults_3' has a wrong offset!");
static_assert(offsetof(GCN_PlayerInFire_C_ExecuteUbergraph_GCN_PlayerInFire, K2Node_Event_Target_2) == 0x000140, "Member 'GCN_PlayerInFire_C_ExecuteUbergraph_GCN_PlayerInFire::K2Node_Event_Target_2' has a wrong offset!");
static_assert(offsetof(GCN_PlayerInFire_C_ExecuteUbergraph_GCN_PlayerInFire, K2Node_Event_Parameters_3) == 0x000148, "Member 'GCN_PlayerInFire_C_ExecuteUbergraph_GCN_PlayerInFire::K2Node_Event_Parameters_3' has a wrong offset!");
static_assert(offsetof(GCN_PlayerInFire_C_ExecuteUbergraph_GCN_PlayerInFire, K2Node_Event_SpawnResults_2) == 0x000220, "Member 'GCN_PlayerInFire_C_ExecuteUbergraph_GCN_PlayerInFire::K2Node_Event_SpawnResults_2' has a wrong offset!");
static_assert(offsetof(GCN_PlayerInFire_C_ExecuteUbergraph_GCN_PlayerInFire, K2Node_Event_Target_1) == 0x000278, "Member 'GCN_PlayerInFire_C_ExecuteUbergraph_GCN_PlayerInFire::K2Node_Event_Target_1' has a wrong offset!");
static_assert(offsetof(GCN_PlayerInFire_C_ExecuteUbergraph_GCN_PlayerInFire, K2Node_Event_Parameters_2) == 0x000280, "Member 'GCN_PlayerInFire_C_ExecuteUbergraph_GCN_PlayerInFire::K2Node_Event_Parameters_2' has a wrong offset!");
static_assert(offsetof(GCN_PlayerInFire_C_ExecuteUbergraph_GCN_PlayerInFire, K2Node_Event_SpawnResults_1) == 0x000358, "Member 'GCN_PlayerInFire_C_ExecuteUbergraph_GCN_PlayerInFire::K2Node_Event_SpawnResults_1' has a wrong offset!");
static_assert(offsetof(GCN_PlayerInFire_C_ExecuteUbergraph_GCN_PlayerInFire, K2Node_Event_Target) == 0x0003B0, "Member 'GCN_PlayerInFire_C_ExecuteUbergraph_GCN_PlayerInFire::K2Node_Event_Target' has a wrong offset!");
static_assert(offsetof(GCN_PlayerInFire_C_ExecuteUbergraph_GCN_PlayerInFire, K2Node_Event_Parameters_1) == 0x0003B8, "Member 'GCN_PlayerInFire_C_ExecuteUbergraph_GCN_PlayerInFire::K2Node_Event_Parameters_1' has a wrong offset!");
static_assert(offsetof(GCN_PlayerInFire_C_ExecuteUbergraph_GCN_PlayerInFire, K2Node_Event_SpawnResults) == 0x000490, "Member 'GCN_PlayerInFire_C_ExecuteUbergraph_GCN_PlayerInFire::K2Node_Event_SpawnResults' has a wrong offset!");
static_assert(offsetof(GCN_PlayerInFire_C_ExecuteUbergraph_GCN_PlayerInFire, K2Node_Event_MyTarget) == 0x0004E8, "Member 'GCN_PlayerInFire_C_ExecuteUbergraph_GCN_PlayerInFire::K2Node_Event_MyTarget' has a wrong offset!");
static_assert(offsetof(GCN_PlayerInFire_C_ExecuteUbergraph_GCN_PlayerInFire, K2Node_Event_EventType) == 0x0004F0, "Member 'GCN_PlayerInFire_C_ExecuteUbergraph_GCN_PlayerInFire::K2Node_Event_EventType' has a wrong offset!");
static_assert(offsetof(GCN_PlayerInFire_C_ExecuteUbergraph_GCN_PlayerInFire, K2Node_Event_Parameters) == 0x0004F8, "Member 'GCN_PlayerInFire_C_ExecuteUbergraph_GCN_PlayerInFire::K2Node_Event_Parameters' has a wrong offset!");

// Function GCN_PlayerInFire.GCN_PlayerInFire_C.K2_HandleGameplayCue
// 0x00E8 (0x00E8 - 0x0000)
struct GCN_PlayerInFire_C_K2_HandleGameplayCue final
{
public:
	class AActor*                                 MyTarget;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	EGameplayCueEvent                             EventType;                                         // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayCueParameters                 Parameters;                                        // 0x0010(0x00D8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
};
static_assert(alignof(GCN_PlayerInFire_C_K2_HandleGameplayCue) == 0x000008, "Wrong alignment on GCN_PlayerInFire_C_K2_HandleGameplayCue");
static_assert(sizeof(GCN_PlayerInFire_C_K2_HandleGameplayCue) == 0x0000E8, "Wrong size on GCN_PlayerInFire_C_K2_HandleGameplayCue");
static_assert(offsetof(GCN_PlayerInFire_C_K2_HandleGameplayCue, MyTarget) == 0x000000, "Member 'GCN_PlayerInFire_C_K2_HandleGameplayCue::MyTarget' has a wrong offset!");
static_assert(offsetof(GCN_PlayerInFire_C_K2_HandleGameplayCue, EventType) == 0x000008, "Member 'GCN_PlayerInFire_C_K2_HandleGameplayCue::EventType' has a wrong offset!");
static_assert(offsetof(GCN_PlayerInFire_C_K2_HandleGameplayCue, Parameters) == 0x000010, "Member 'GCN_PlayerInFire_C_K2_HandleGameplayCue::Parameters' has a wrong offset!");

// Function GCN_PlayerInFire.GCN_PlayerInFire_C.OnApplication
// 0x0138 (0x0138 - 0x0000)
struct GCN_PlayerInFire_C_OnApplication final
{
public:
	class AActor*                                 Target;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayCueParameters                 Parameters;                                        // 0x0008(0x00D8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
	struct FGameplayCueNotify_SpawnResult         SpawnResults;                                      // 0x00E0(0x0058)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
};
static_assert(alignof(GCN_PlayerInFire_C_OnApplication) == 0x000008, "Wrong alignment on GCN_PlayerInFire_C_OnApplication");
static_assert(sizeof(GCN_PlayerInFire_C_OnApplication) == 0x000138, "Wrong size on GCN_PlayerInFire_C_OnApplication");
static_assert(offsetof(GCN_PlayerInFire_C_OnApplication, Target) == 0x000000, "Member 'GCN_PlayerInFire_C_OnApplication::Target' has a wrong offset!");
static_assert(offsetof(GCN_PlayerInFire_C_OnApplication, Parameters) == 0x000008, "Member 'GCN_PlayerInFire_C_OnApplication::Parameters' has a wrong offset!");
static_assert(offsetof(GCN_PlayerInFire_C_OnApplication, SpawnResults) == 0x0000E0, "Member 'GCN_PlayerInFire_C_OnApplication::SpawnResults' has a wrong offset!");

// Function GCN_PlayerInFire.GCN_PlayerInFire_C.OnLoopingStart
// 0x0138 (0x0138 - 0x0000)
struct GCN_PlayerInFire_C_OnLoopingStart final
{
public:
	class AActor*                                 Target;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayCueParameters                 Parameters;                                        // 0x0008(0x00D8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
	struct FGameplayCueNotify_SpawnResult         SpawnResults;                                      // 0x00E0(0x0058)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
};
static_assert(alignof(GCN_PlayerInFire_C_OnLoopingStart) == 0x000008, "Wrong alignment on GCN_PlayerInFire_C_OnLoopingStart");
static_assert(sizeof(GCN_PlayerInFire_C_OnLoopingStart) == 0x000138, "Wrong size on GCN_PlayerInFire_C_OnLoopingStart");
static_assert(offsetof(GCN_PlayerInFire_C_OnLoopingStart, Target) == 0x000000, "Member 'GCN_PlayerInFire_C_OnLoopingStart::Target' has a wrong offset!");
static_assert(offsetof(GCN_PlayerInFire_C_OnLoopingStart, Parameters) == 0x000008, "Member 'GCN_PlayerInFire_C_OnLoopingStart::Parameters' has a wrong offset!");
static_assert(offsetof(GCN_PlayerInFire_C_OnLoopingStart, SpawnResults) == 0x0000E0, "Member 'GCN_PlayerInFire_C_OnLoopingStart::SpawnResults' has a wrong offset!");

// Function GCN_PlayerInFire.GCN_PlayerInFire_C.OnRecurring
// 0x0138 (0x0138 - 0x0000)
struct GCN_PlayerInFire_C_OnRecurring final
{
public:
	class AActor*                                 Target;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayCueParameters                 Parameters;                                        // 0x0008(0x00D8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
	struct FGameplayCueNotify_SpawnResult         SpawnResults;                                      // 0x00E0(0x0058)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
};
static_assert(alignof(GCN_PlayerInFire_C_OnRecurring) == 0x000008, "Wrong alignment on GCN_PlayerInFire_C_OnRecurring");
static_assert(sizeof(GCN_PlayerInFire_C_OnRecurring) == 0x000138, "Wrong size on GCN_PlayerInFire_C_OnRecurring");
static_assert(offsetof(GCN_PlayerInFire_C_OnRecurring, Target) == 0x000000, "Member 'GCN_PlayerInFire_C_OnRecurring::Target' has a wrong offset!");
static_assert(offsetof(GCN_PlayerInFire_C_OnRecurring, Parameters) == 0x000008, "Member 'GCN_PlayerInFire_C_OnRecurring::Parameters' has a wrong offset!");
static_assert(offsetof(GCN_PlayerInFire_C_OnRecurring, SpawnResults) == 0x0000E0, "Member 'GCN_PlayerInFire_C_OnRecurring::SpawnResults' has a wrong offset!");

// Function GCN_PlayerInFire.GCN_PlayerInFire_C.OnRemoval
// 0x0138 (0x0138 - 0x0000)
struct GCN_PlayerInFire_C_OnRemoval final
{
public:
	class AActor*                                 Target;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayCueParameters                 Parameters;                                        // 0x0008(0x00D8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
	struct FGameplayCueNotify_SpawnResult         SpawnResults;                                      // 0x00E0(0x0058)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
};
static_assert(alignof(GCN_PlayerInFire_C_OnRemoval) == 0x000008, "Wrong alignment on GCN_PlayerInFire_C_OnRemoval");
static_assert(sizeof(GCN_PlayerInFire_C_OnRemoval) == 0x000138, "Wrong size on GCN_PlayerInFire_C_OnRemoval");
static_assert(offsetof(GCN_PlayerInFire_C_OnRemoval, Target) == 0x000000, "Member 'GCN_PlayerInFire_C_OnRemoval::Target' has a wrong offset!");
static_assert(offsetof(GCN_PlayerInFire_C_OnRemoval, Parameters) == 0x000008, "Member 'GCN_PlayerInFire_C_OnRemoval::Parameters' has a wrong offset!");
static_assert(offsetof(GCN_PlayerInFire_C_OnRemoval, SpawnResults) == 0x0000E0, "Member 'GCN_PlayerInFire_C_OnRemoval::SpawnResults' has a wrong offset!");

}

