#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_DestructableFence

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "S_IndicatorData_structs.hpp"
#include "HouseActorBase_classes.hpp"
#include "E_ImpactEffect_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_DestructableFence.BP_DestructableFence_C
// 0x0198 (0x0588 - 0x03F0)
class ABP_DestructableFence_C final : public AHouseActorBase_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_BP_DestructableFence_C;             // 0x03F0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UAC_Indicator_C*                        AC_IndicatorEnemyTeam;                             // 0x03F8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBP_PingableComponent_C*                BP_PingableComponent;                              // 0x0400(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UNavModifierComponent*                  NavModifier;                                       // 0x0408(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 BreakableFence;                                    // 0x0410(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UArrowComponent*                        Arrow;                                             // 0x0418(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          BoxImpact;                                         // 0x0420(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UGroundskeeperReference*                GroundskeeperReference1;                           // 0x0428(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   FanceBroken;                                       // 0x0430(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        SceneBroken;                                       // 0x0438(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        SceneOK;                                           // 0x0440(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	double                                        TargetRotation;                                    // 0x0448(0x0008)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CharacterIsInFront;                                // 0x0450(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_451[0x7];                                      // 0x0451(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UMaterialInstance*>              GlassHitMaterials;                                 // 0x0458(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<class UStaticMeshComponent*>           GlassHits;                                         // 0x0468(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	TArray<class UGeometryCollectionComponent*>   ShatteredGeometry;                                 // 0x0478(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	struct FVector                                LastImpulse;                                       // 0x0488(0x0018)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          NeutralFence;                                      // 0x04A0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A1[0x7];                                      // 0x04A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 LastDamageCauser;                                  // 0x04A8(0x0008)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FS_IndicatorData                       IndicatorDataBackup;                               // 0x04B0(0x00D8)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference, HasGetValueTypeHash)

public:
	void CallOnClients(class ASubObjective* SubObjective);
	void Cosmetics_State_Repaired();
	void Cosmetics_State_Sabotaged();
	void Event_On_Team_Replicated_Cosmetic(const struct FTeam& New_Team);
	void ExecuteUbergraph_BP_DestructableFence(int32 EntryPoint);
	void FenceIndicators_(class APlayerState* PlayerState);
	void FenceSabotaged(bool TURR);
	void GetWidgetLocation(struct FVector* Location);
	void House_Actor_Impact_Cosmetics(const struct FVector& Location, const struct FVector& HitImpulse, E_ImpactEffect ImpactEffect);
	void IsInteractable(bool* Interactable);
	void IsInteractingActorATeamMember(class AActor* Actor, bool* Return);
	void OnDamaged(float Delta, class AActor* Causer, const struct FCombatParticipant& CombatParticipant, const struct FKillMethod& KillMethod, const struct FVector_NetQuantize& Location);
	void OnEnded_1E99BA5241210B54BC0CC6B889655A02();
	void OnMessageReceived_9377B0E041382A2E0D15619C22ADBB38(class UAsyncAction_ListenForGameplayMessage* ProxyObject, const struct FGameplayTag& ActualChannel);
	void OnRep_Opened();
	void OnStarted_DA4C26394FD10412A087C2A75AF96178();
	void ReceiveBeginPlay();
	void SetInitialFenceHealth();
	void SpawnDestroyedMesh();
	void UpdateTeamAndID();
	void UserConstructionScript();

	bool IsAvailableForInteraction(class AActor* InteractingActor, class UPrimitiveComponent* InteractionComponent) const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_DestructableFence_C">();
	}
	static class ABP_DestructableFence_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_DestructableFence_C>();
	}
};
static_assert(alignof(ABP_DestructableFence_C) == 0x000008, "Wrong alignment on ABP_DestructableFence_C");
static_assert(sizeof(ABP_DestructableFence_C) == 0x000588, "Wrong size on ABP_DestructableFence_C");
static_assert(offsetof(ABP_DestructableFence_C, UberGraphFrame_BP_DestructableFence_C) == 0x0003F0, "Member 'ABP_DestructableFence_C::UberGraphFrame_BP_DestructableFence_C' has a wrong offset!");
static_assert(offsetof(ABP_DestructableFence_C, AC_IndicatorEnemyTeam) == 0x0003F8, "Member 'ABP_DestructableFence_C::AC_IndicatorEnemyTeam' has a wrong offset!");
static_assert(offsetof(ABP_DestructableFence_C, BP_PingableComponent) == 0x000400, "Member 'ABP_DestructableFence_C::BP_PingableComponent' has a wrong offset!");
static_assert(offsetof(ABP_DestructableFence_C, NavModifier) == 0x000408, "Member 'ABP_DestructableFence_C::NavModifier' has a wrong offset!");
static_assert(offsetof(ABP_DestructableFence_C, BreakableFence) == 0x000410, "Member 'ABP_DestructableFence_C::BreakableFence' has a wrong offset!");
static_assert(offsetof(ABP_DestructableFence_C, Arrow) == 0x000418, "Member 'ABP_DestructableFence_C::Arrow' has a wrong offset!");
static_assert(offsetof(ABP_DestructableFence_C, BoxImpact) == 0x000420, "Member 'ABP_DestructableFence_C::BoxImpact' has a wrong offset!");
static_assert(offsetof(ABP_DestructableFence_C, GroundskeeperReference1) == 0x000428, "Member 'ABP_DestructableFence_C::GroundskeeperReference1' has a wrong offset!");
static_assert(offsetof(ABP_DestructableFence_C, FanceBroken) == 0x000430, "Member 'ABP_DestructableFence_C::FanceBroken' has a wrong offset!");
static_assert(offsetof(ABP_DestructableFence_C, SceneBroken) == 0x000438, "Member 'ABP_DestructableFence_C::SceneBroken' has a wrong offset!");
static_assert(offsetof(ABP_DestructableFence_C, SceneOK) == 0x000440, "Member 'ABP_DestructableFence_C::SceneOK' has a wrong offset!");
static_assert(offsetof(ABP_DestructableFence_C, TargetRotation) == 0x000448, "Member 'ABP_DestructableFence_C::TargetRotation' has a wrong offset!");
static_assert(offsetof(ABP_DestructableFence_C, CharacterIsInFront) == 0x000450, "Member 'ABP_DestructableFence_C::CharacterIsInFront' has a wrong offset!");
static_assert(offsetof(ABP_DestructableFence_C, GlassHitMaterials) == 0x000458, "Member 'ABP_DestructableFence_C::GlassHitMaterials' has a wrong offset!");
static_assert(offsetof(ABP_DestructableFence_C, GlassHits) == 0x000468, "Member 'ABP_DestructableFence_C::GlassHits' has a wrong offset!");
static_assert(offsetof(ABP_DestructableFence_C, ShatteredGeometry) == 0x000478, "Member 'ABP_DestructableFence_C::ShatteredGeometry' has a wrong offset!");
static_assert(offsetof(ABP_DestructableFence_C, LastImpulse) == 0x000488, "Member 'ABP_DestructableFence_C::LastImpulse' has a wrong offset!");
static_assert(offsetof(ABP_DestructableFence_C, NeutralFence) == 0x0004A0, "Member 'ABP_DestructableFence_C::NeutralFence' has a wrong offset!");
static_assert(offsetof(ABP_DestructableFence_C, LastDamageCauser) == 0x0004A8, "Member 'ABP_DestructableFence_C::LastDamageCauser' has a wrong offset!");
static_assert(offsetof(ABP_DestructableFence_C, IndicatorDataBackup) == 0x0004B0, "Member 'ABP_DestructableFence_C::IndicatorDataBackup' has a wrong offset!");

}

