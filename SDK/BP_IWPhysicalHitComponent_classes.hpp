#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_IWPhysicalHitComponent

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "JP_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_IWPhysicalHitComponent.BP_IWPhysicalHitComponent_C
// 0x00A0 (0x0140 - 0x00A0)
class UBP_IWPhysicalHitComponent_C final : public UActorComponent
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x00A0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class FName                                   HitBoneName;                                       // 0x00A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 SkeletalMesh;                                      // 0x00B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UPhysicalAnimationComponent*            PhysicalAnimationComponent;                        // 0x00B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	double                                        HitTimeRemaining;                                  // 0x00C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsHit;                                            // 0x00C8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bOnlyAllowSingleHit;                               // 0x00C9(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_CA[0x6];                                       // 0x00CA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Interp_Speed;                                      // 0x00D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        ResetTime;                                         // 0x00D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_MovementCharacter_C*                OwnerCharacter;                                    // 0x00E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UPhysicsControlComponent*               Physics_Control;                                   // 0x00E8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	double                                        HitStrength;                                       // 0x00F0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class FName>                           UpperbodyBoneNames;                                // 0x00F8(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<class FName>                           LowerbodyBoneNames_l;                              // 0x0108(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<class FName>                           LowerbodyBoneNames_r;                              // 0x0118(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	class FName                                   bone;                                              // 0x0128(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_MovementCharacter_C*                As_BP_Movement_Character;                          // 0x0130(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	EVerbosity                                    Verbosity;                                         // 0x0138(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void CheckIfCharacterIsDead(bool* Dead);
	void ExecuteUbergraph_BP_IWPhysicalHitComponent(int32 EntryPoint);
	void HitReaction(const struct FHitResult& Hit, class FName bone_0, const struct FVector& HitLocation);
	void OnBlendOut_198DBF694DD37CB7161C70A966AA9D49(class FName NotifyName);
	void OnBlendOut_1ED3BE07422F964A71FAD1B7692CB91E(class FName NotifyName);
	void OnBlendOut_9ADA364E4DCF5865D1AD72AFD6F6616F(class FName NotifyName);
	void OnBlendOut_FB076E644545CCC0733C448FC0FE309C(class FName NotifyName);
	void OnCompleted_198DBF694DD37CB7161C70A966AA9D49(class FName NotifyName);
	void OnCompleted_1ED3BE07422F964A71FAD1B7692CB91E(class FName NotifyName);
	void OnCompleted_9ADA364E4DCF5865D1AD72AFD6F6616F(class FName NotifyName);
	void OnCompleted_FB076E644545CCC0733C448FC0FE309C(class FName NotifyName);
	void OnInterrupted_198DBF694DD37CB7161C70A966AA9D49(class FName NotifyName);
	void OnInterrupted_1ED3BE07422F964A71FAD1B7692CB91E(class FName NotifyName);
	void OnInterrupted_9ADA364E4DCF5865D1AD72AFD6F6616F(class FName NotifyName);
	void OnInterrupted_FB076E644545CCC0733C448FC0FE309C(class FName NotifyName);
	void OnNotifyBegin_198DBF694DD37CB7161C70A966AA9D49(class FName NotifyName);
	void OnNotifyBegin_1ED3BE07422F964A71FAD1B7692CB91E(class FName NotifyName);
	void OnNotifyBegin_9ADA364E4DCF5865D1AD72AFD6F6616F(class FName NotifyName);
	void OnNotifyBegin_FB076E644545CCC0733C448FC0FE309C(class FName NotifyName);
	void OnNotifyEnd_198DBF694DD37CB7161C70A966AA9D49(class FName NotifyName);
	void OnNotifyEnd_1ED3BE07422F964A71FAD1B7692CB91E(class FName NotifyName);
	void OnNotifyEnd_9ADA364E4DCF5865D1AD72AFD6F6616F(class FName NotifyName);
	void OnNotifyEnd_FB076E644545CCC0733C448FC0FE309C(class FName NotifyName);
	void ReceiveBeginPlay();
	void ReceiveTick(float DeltaSeconds);
	void SelectHitBoneName(class FName* BoneName);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_IWPhysicalHitComponent_C">();
	}
	static class UBP_IWPhysicalHitComponent_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_IWPhysicalHitComponent_C>();
	}
};
static_assert(alignof(UBP_IWPhysicalHitComponent_C) == 0x000008, "Wrong alignment on UBP_IWPhysicalHitComponent_C");
static_assert(sizeof(UBP_IWPhysicalHitComponent_C) == 0x000140, "Wrong size on UBP_IWPhysicalHitComponent_C");
static_assert(offsetof(UBP_IWPhysicalHitComponent_C, UberGraphFrame) == 0x0000A0, "Member 'UBP_IWPhysicalHitComponent_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UBP_IWPhysicalHitComponent_C, HitBoneName) == 0x0000A8, "Member 'UBP_IWPhysicalHitComponent_C::HitBoneName' has a wrong offset!");
static_assert(offsetof(UBP_IWPhysicalHitComponent_C, SkeletalMesh) == 0x0000B0, "Member 'UBP_IWPhysicalHitComponent_C::SkeletalMesh' has a wrong offset!");
static_assert(offsetof(UBP_IWPhysicalHitComponent_C, PhysicalAnimationComponent) == 0x0000B8, "Member 'UBP_IWPhysicalHitComponent_C::PhysicalAnimationComponent' has a wrong offset!");
static_assert(offsetof(UBP_IWPhysicalHitComponent_C, HitTimeRemaining) == 0x0000C0, "Member 'UBP_IWPhysicalHitComponent_C::HitTimeRemaining' has a wrong offset!");
static_assert(offsetof(UBP_IWPhysicalHitComponent_C, bIsHit) == 0x0000C8, "Member 'UBP_IWPhysicalHitComponent_C::bIsHit' has a wrong offset!");
static_assert(offsetof(UBP_IWPhysicalHitComponent_C, bOnlyAllowSingleHit) == 0x0000C9, "Member 'UBP_IWPhysicalHitComponent_C::bOnlyAllowSingleHit' has a wrong offset!");
static_assert(offsetof(UBP_IWPhysicalHitComponent_C, Interp_Speed) == 0x0000D0, "Member 'UBP_IWPhysicalHitComponent_C::Interp_Speed' has a wrong offset!");
static_assert(offsetof(UBP_IWPhysicalHitComponent_C, ResetTime) == 0x0000D8, "Member 'UBP_IWPhysicalHitComponent_C::ResetTime' has a wrong offset!");
static_assert(offsetof(UBP_IWPhysicalHitComponent_C, OwnerCharacter) == 0x0000E0, "Member 'UBP_IWPhysicalHitComponent_C::OwnerCharacter' has a wrong offset!");
static_assert(offsetof(UBP_IWPhysicalHitComponent_C, Physics_Control) == 0x0000E8, "Member 'UBP_IWPhysicalHitComponent_C::Physics_Control' has a wrong offset!");
static_assert(offsetof(UBP_IWPhysicalHitComponent_C, HitStrength) == 0x0000F0, "Member 'UBP_IWPhysicalHitComponent_C::HitStrength' has a wrong offset!");
static_assert(offsetof(UBP_IWPhysicalHitComponent_C, UpperbodyBoneNames) == 0x0000F8, "Member 'UBP_IWPhysicalHitComponent_C::UpperbodyBoneNames' has a wrong offset!");
static_assert(offsetof(UBP_IWPhysicalHitComponent_C, LowerbodyBoneNames_l) == 0x000108, "Member 'UBP_IWPhysicalHitComponent_C::LowerbodyBoneNames_l' has a wrong offset!");
static_assert(offsetof(UBP_IWPhysicalHitComponent_C, LowerbodyBoneNames_r) == 0x000118, "Member 'UBP_IWPhysicalHitComponent_C::LowerbodyBoneNames_r' has a wrong offset!");
static_assert(offsetof(UBP_IWPhysicalHitComponent_C, bone) == 0x000128, "Member 'UBP_IWPhysicalHitComponent_C::bone' has a wrong offset!");
static_assert(offsetof(UBP_IWPhysicalHitComponent_C, As_BP_Movement_Character) == 0x000130, "Member 'UBP_IWPhysicalHitComponent_C::As_BP_Movement_Character' has a wrong offset!");
static_assert(offsetof(UBP_IWPhysicalHitComponent_C, Verbosity) == 0x000138, "Member 'UBP_IWPhysicalHitComponent_C::Verbosity' has a wrong offset!");

}

