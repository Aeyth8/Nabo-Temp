#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WI_ObjectiveList

#include "Basic.hpp"

#include "WI_ObjectiveList_classes.hpp"
#include "WI_ObjectiveList_parameters.hpp"


namespace SDK
{

// Function WI_ObjectiveList.WI_ObjectiveList_C.AddObjectiveToList
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UWI_Objective_C*                  InObjective                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UWI_ObjectiveList_C::AddObjectiveToList(class UWI_Objective_C* InObjective)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WI_ObjectiveList_C", "AddObjectiveToList");

	Params::WI_ObjectiveList_C_AddObjectiveToList Parms{};

	Parms.InObjective = InObjective;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WI_ObjectiveList.WI_ObjectiveList_C.AddObjectiveWidget
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObjectiveDefinition*             ObjectiveDefinition                                    (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, InstancedReference, ReferenceParm, NoDestructor, HasGetValueTypeHash)
// class UWI_Objective_C*                  NewObjectiveWidget                                     (Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UWI_ObjectiveList_C::AddObjectiveWidget(const class UObjectiveDefinition*& ObjectiveDefinition, class UWI_Objective_C** NewObjectiveWidget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WI_ObjectiveList_C", "AddObjectiveWidget");

	Params::WI_ObjectiveList_C_AddObjectiveWidget Parms{};

	Parms.ObjectiveDefinition = ObjectiveDefinition;

	UObject::ProcessEvent(Func, &Parms);

	if (NewObjectiveWidget != nullptr)
		*NewObjectiveWidget = Parms.NewObjectiveWidget;
}


// Function WI_ObjectiveList.WI_ObjectiveList_C.ClearObjectiveWidgets
// (Public, BlueprintCallable, BlueprintEvent)

void UWI_ObjectiveList_C::ClearObjectiveWidgets()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WI_ObjectiveList_C", "ClearObjectiveWidgets");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WI_ObjectiveList.WI_ObjectiveList_C.Construct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UWI_ObjectiveList_C::Construct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WI_ObjectiveList_C", "Construct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WI_ObjectiveList.WI_ObjectiveList_C.CreateObjectiveWidget
// (Event, Public, BlueprintEvent)
// Parameters:
// struct FObjectiveAndOwningPlayer        Objective                                              (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, ContainsInstancedReference)

void UWI_ObjectiveList_C::CreateObjectiveWidget(const struct FObjectiveAndOwningPlayer& Objective)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WI_ObjectiveList_C", "CreateObjectiveWidget");

	Params::WI_ObjectiveList_C_CreateObjectiveWidget Parms{};

	Parms.Objective = std::move(Objective);

	UObject::ProcessEvent(Func, &Parms);
}


// Function WI_ObjectiveList.WI_ObjectiveList_C.CreateSubObjectiveWidget
// (Event, Public, BlueprintEvent)
// Parameters:
// class ASubObjective*                    SubObjective                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UWI_ObjectiveList_C::CreateSubObjectiveWidget(class ASubObjective* SubObjective)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WI_ObjectiveList_C", "CreateSubObjectiveWidget");

	Params::WI_ObjectiveList_C_CreateSubObjectiveWidget Parms{};

	Parms.SubObjective = SubObjective;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WI_ObjectiveList.WI_ObjectiveList_C.DoesObjectiveBelongToThisPlayer
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FObjectiveAndOwningPlayer        ObjectiveAndOwningPlayer                               (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor, ContainsInstancedReference)
// class UObjectiveDefinition*             ObjectiveDefinition                                    (Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool UWI_ObjectiveList_C::DoesObjectiveBelongToThisPlayer(const struct FObjectiveAndOwningPlayer& ObjectiveAndOwningPlayer, class UObjectiveDefinition** ObjectiveDefinition)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WI_ObjectiveList_C", "DoesObjectiveBelongToThisPlayer");

	Params::WI_ObjectiveList_C_DoesObjectiveBelongToThisPlayer Parms{};

	Parms.ObjectiveAndOwningPlayer = std::move(ObjectiveAndOwningPlayer);

	UObject::ProcessEvent(Func, &Parms);

	if (ObjectiveDefinition != nullptr)
		*ObjectiveDefinition = Parms.ObjectiveDefinition;

	return Parms.ReturnValue;
}


// Function WI_ObjectiveList.WI_ObjectiveList_C.DoesSubObjectiveBelongToThisPlayer
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class ASubObjective*                    SubObjective                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool UWI_ObjectiveList_C::DoesSubObjectiveBelongToThisPlayer(class ASubObjective* SubObjective)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WI_ObjectiveList_C", "DoesSubObjectiveBelongToThisPlayer");

	Params::WI_ObjectiveList_C_DoesSubObjectiveBelongToThisPlayer Parms{};

	Parms.SubObjective = SubObjective;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function WI_ObjectiveList.WI_ObjectiveList_C.ExecuteUbergraph_WI_ObjectiveList
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWI_ObjectiveList_C::ExecuteUbergraph_WI_ObjectiveList(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WI_ObjectiveList_C", "ExecuteUbergraph_WI_ObjectiveList");

	Params::WI_ObjectiveList_C_ExecuteUbergraph_WI_ObjectiveList Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WI_ObjectiveList.WI_ObjectiveList_C.FallbackRemoveObjectiveWidget
// (BlueprintCallable, BlueprintEvent)

void UWI_ObjectiveList_C::FallbackRemoveObjectiveWidget()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WI_ObjectiveList_C", "FallbackRemoveObjectiveWidget");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WI_ObjectiveList.WI_ObjectiveList_C.FindMatchingSubObjectiveWidgetIndex
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObjectiveDefinition*             Objective                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class UObject*                          SubObjective                                           (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// int32                                   Array_Index                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWI_ObjectiveList_C::FindMatchingSubObjectiveWidgetIndex(class UObjectiveDefinition* Objective, const class UObject* SubObjective, int32* Array_Index)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WI_ObjectiveList_C", "FindMatchingSubObjectiveWidgetIndex");

	Params::WI_ObjectiveList_C_FindMatchingSubObjectiveWidgetIndex Parms{};

	Parms.Objective = Objective;
	Parms.SubObjective = SubObjective;

	UObject::ProcessEvent(Func, &Parms);

	if (Array_Index != nullptr)
		*Array_Index = Parms.Array_Index;
}


// Function WI_ObjectiveList.WI_ObjectiveList_C.GameStateChange
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Actor                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// EEndPlayReason                          EndPlayReason                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWI_ObjectiveList_C::GameStateChange(class AActor* Actor, EEndPlayReason EndPlayReason)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WI_ObjectiveList_C", "GameStateChange");

	Params::WI_ObjectiveList_C_GameStateChange Parms{};

	Parms.Actor = Actor;
	Parms.EndPlayReason = EndPlayReason;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WI_ObjectiveList.WI_ObjectiveList_C.ObjectiveFinished
// (Event, Public, BlueprintEvent)
// Parameters:
// struct FObjectiveAndOwningPlayer        Objective                                              (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, ContainsInstancedReference)

void UWI_ObjectiveList_C::ObjectiveFinished(const struct FObjectiveAndOwningPlayer& Objective)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WI_ObjectiveList_C", "ObjectiveFinished");

	Params::WI_ObjectiveList_C_ObjectiveFinished Parms{};

	Parms.Objective = std::move(Objective);

	UObject::ProcessEvent(Func, &Parms);
}


// Function WI_ObjectiveList.WI_ObjectiveList_C.PreConstruct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// bool                                    IsDesignTime                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWI_ObjectiveList_C::PreConstruct(bool IsDesignTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WI_ObjectiveList_C", "PreConstruct");

	Params::WI_ObjectiveList_C_PreConstruct Parms{};

	Parms.IsDesignTime = IsDesignTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WI_ObjectiveList.WI_ObjectiveList_C.RegenerateObjectiveTrackerWidgets
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// TArray<struct FObjectiveTracker>        ObjectiveTrackers                                      (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)

void UWI_ObjectiveList_C::RegenerateObjectiveTrackerWidgets(const TArray<struct FObjectiveTracker>& ObjectiveTrackers)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WI_ObjectiveList_C", "RegenerateObjectiveTrackerWidgets");

	Params::WI_ObjectiveList_C_RegenerateObjectiveTrackerWidgets Parms{};

	Parms.ObjectiveTrackers = std::move(ObjectiveTrackers);

	UObject::ProcessEvent(Func, &Parms);
}


// Function WI_ObjectiveList.WI_ObjectiveList_C.RemoveFromList
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UWI_Objective_C*                  InObjective                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UWI_ObjectiveList_C::RemoveFromList(class UWI_Objective_C* InObjective)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WI_ObjectiveList_C", "RemoveFromList");

	Params::WI_ObjectiveList_C_RemoveFromList Parms{};

	Parms.InObjective = InObjective;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WI_ObjectiveList.WI_ObjectiveList_C.RemoveFromMapAndParent
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FObjectiveAndOwningPlayer        Objective                                              (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, ContainsInstancedReference)

void UWI_ObjectiveList_C::RemoveFromMapAndParent(const struct FObjectiveAndOwningPlayer& Objective)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WI_ObjectiveList_C", "RemoveFromMapAndParent");

	Params::WI_ObjectiveList_C_RemoveFromMapAndParent Parms{};

	Parms.Objective = std::move(Objective);

	UObject::ProcessEvent(Func, &Parms);
}


// Function WI_ObjectiveList.WI_ObjectiveList_C.RemoveObjectiveTrackerWidgets
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UWI_ObjectiveList_C::RemoveObjectiveTrackerWidgets()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WI_ObjectiveList_C", "RemoveObjectiveTrackerWidgets");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WI_ObjectiveList.WI_ObjectiveList_C.RemoveObjectiveWidget
// (Event, Public, BlueprintEvent)
// Parameters:
// struct FObjectiveAndOwningPlayer        Objective                                              (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, ContainsInstancedReference)

void UWI_ObjectiveList_C::RemoveObjectiveWidget(const struct FObjectiveAndOwningPlayer& Objective)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WI_ObjectiveList_C", "RemoveObjectiveWidget");

	Params::WI_ObjectiveList_C_RemoveObjectiveWidget Parms{};

	Parms.Objective = std::move(Objective);

	UObject::ProcessEvent(Func, &Parms);
}


// Function WI_ObjectiveList.WI_ObjectiveList_C.RemoveSubObjectiveWidget
// (Event, Public, BlueprintEvent)
// Parameters:
// class ASubObjective*                    SubObjective                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UWI_ObjectiveList_C::RemoveSubObjectiveWidget(class ASubObjective* SubObjective)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WI_ObjectiveList_C", "RemoveSubObjectiveWidget");

	Params::WI_ObjectiveList_C_RemoveSubObjectiveWidget Parms{};

	Parms.SubObjective = SubObjective;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WI_ObjectiveList.WI_ObjectiveList_C.RemoveWidgetsWithMissingSubobjectives
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UWI_ObjectiveList_C::RemoveWidgetsWithMissingSubobjectives()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WI_ObjectiveList_C", "RemoveWidgetsWithMissingSubobjectives");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WI_ObjectiveList.WI_ObjectiveList_C.UpdateSubObjectiveWidget
// (Event, Public, BlueprintEvent)
// Parameters:
// class ASubObjective*                    SubObjective                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UWI_ObjectiveList_C::UpdateSubObjectiveWidget(class ASubObjective* SubObjective)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WI_ObjectiveList_C", "UpdateSubObjectiveWidget");

	Params::WI_ObjectiveList_C_UpdateSubObjectiveWidget Parms{};

	Parms.SubObjective = SubObjective;

	UObject::ProcessEvent(Func, &Parms);
}

}

