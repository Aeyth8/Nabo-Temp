#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WB_Lobby_PlayerList_Entry

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "UMG_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WB_Lobby_PlayerList_Entry.WB_Lobby_PlayerList_Entry_C
// 0x0048 (0x0328 - 0x02E0)
class UWB_Lobby_PlayerList_Entry_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02E0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UBorder*                                Border_1;                                          // 0x02E8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCanvasPanel*                           CanvasPanel_1;                                     // 0x02F0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             TextBlock_Class;                                   // 0x02F8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             TextBlock_Ping;                                    // 0x0300(0x0008)(ExportObject, ZeroConstructor, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             TextBlock_PlayerName;                              // 0x0308(0x0008)(ExportObject, ZeroConstructor, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             TextBlock_Ready;                                   // 0x0310(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class APlayerStateJP*                         PlayerState;                                       // 0x0318(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	bool                                          ReadyAndWaiting;                                   // 0x0320(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_321[0x3];                                      // 0x0321(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         WidgetTeamID;                                      // 0x0324(0x0004)(Edit, BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)

public:
	void Construct();
	void ExecuteUbergraph_WB_Lobby_PlayerList_Entry(int32 EntryPoint);
	class FText Get_TextBlock_Class_Text_0();
	struct FLinearColor GetOuterBrushColor();
	ESlateVisibility GetVisibility_0();
	void HandleReadyAndWaiting(class APlayerStateJP_Lobby* PlayerState_0, const bool ReadyAndWaiting_0);
	void PreConstruct(bool IsDesignTime);
	class FText SetPingText();
	class FText SetPlayerNameText();
	void SetReadyText(bool Ready);

	void Get_Player_State_Lobby(class APlayerStateJP_Lobby** AsPlayer_State_JP_Lobby) const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WB_Lobby_PlayerList_Entry_C">();
	}
	static class UWB_Lobby_PlayerList_Entry_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWB_Lobby_PlayerList_Entry_C>();
	}
};
static_assert(alignof(UWB_Lobby_PlayerList_Entry_C) == 0x000008, "Wrong alignment on UWB_Lobby_PlayerList_Entry_C");
static_assert(sizeof(UWB_Lobby_PlayerList_Entry_C) == 0x000328, "Wrong size on UWB_Lobby_PlayerList_Entry_C");
static_assert(offsetof(UWB_Lobby_PlayerList_Entry_C, UberGraphFrame) == 0x0002E0, "Member 'UWB_Lobby_PlayerList_Entry_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWB_Lobby_PlayerList_Entry_C, Border_1) == 0x0002E8, "Member 'UWB_Lobby_PlayerList_Entry_C::Border_1' has a wrong offset!");
static_assert(offsetof(UWB_Lobby_PlayerList_Entry_C, CanvasPanel_1) == 0x0002F0, "Member 'UWB_Lobby_PlayerList_Entry_C::CanvasPanel_1' has a wrong offset!");
static_assert(offsetof(UWB_Lobby_PlayerList_Entry_C, TextBlock_Class) == 0x0002F8, "Member 'UWB_Lobby_PlayerList_Entry_C::TextBlock_Class' has a wrong offset!");
static_assert(offsetof(UWB_Lobby_PlayerList_Entry_C, TextBlock_Ping) == 0x000300, "Member 'UWB_Lobby_PlayerList_Entry_C::TextBlock_Ping' has a wrong offset!");
static_assert(offsetof(UWB_Lobby_PlayerList_Entry_C, TextBlock_PlayerName) == 0x000308, "Member 'UWB_Lobby_PlayerList_Entry_C::TextBlock_PlayerName' has a wrong offset!");
static_assert(offsetof(UWB_Lobby_PlayerList_Entry_C, TextBlock_Ready) == 0x000310, "Member 'UWB_Lobby_PlayerList_Entry_C::TextBlock_Ready' has a wrong offset!");
static_assert(offsetof(UWB_Lobby_PlayerList_Entry_C, PlayerState) == 0x000318, "Member 'UWB_Lobby_PlayerList_Entry_C::PlayerState' has a wrong offset!");
static_assert(offsetof(UWB_Lobby_PlayerList_Entry_C, ReadyAndWaiting) == 0x000320, "Member 'UWB_Lobby_PlayerList_Entry_C::ReadyAndWaiting' has a wrong offset!");
static_assert(offsetof(UWB_Lobby_PlayerList_Entry_C, WidgetTeamID) == 0x000324, "Member 'UWB_Lobby_PlayerList_Entry_C::WidgetTeamID' has a wrong offset!");

}

