#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_TeamVolume

#include "Basic.hpp"

#include "GameplayAbilities_structs.hpp"
#include "E_TimeOfDay_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BP_TeamVolume.BP_TeamVolume_C.AddCharacterToTresspassingList
// 0x0010 (0x0010 - 0x0000)
struct BP_TeamVolume_C_AddCharacterToTresspassingList final
{
public:
	const class ABP_ResidentCharacter_C*          NewItem;                                           // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_TeamVolume_C_AddCharacterToTresspassingList) == 0x000008, "Wrong alignment on BP_TeamVolume_C_AddCharacterToTresspassingList");
static_assert(sizeof(BP_TeamVolume_C_AddCharacterToTresspassingList) == 0x000010, "Wrong size on BP_TeamVolume_C_AddCharacterToTresspassingList");
static_assert(offsetof(BP_TeamVolume_C_AddCharacterToTresspassingList, NewItem) == 0x000000, "Member 'BP_TeamVolume_C_AddCharacterToTresspassingList::NewItem' has a wrong offset!");
static_assert(offsetof(BP_TeamVolume_C_AddCharacterToTresspassingList, CallFunc_Array_Add_ReturnValue) == 0x000008, "Member 'BP_TeamVolume_C_AddCharacterToTresspassingList::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TeamVolume_C_AddCharacterToTresspassingList, CallFunc_Array_Contains_ReturnValue) == 0x00000C, "Member 'BP_TeamVolume_C_AddCharacterToTresspassingList::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");

// Function BP_TeamVolume.BP_TeamVolume_C.ApplyMarkOfDeathToTrespassers
// 0x0028 (0x0028 - 0x0000)
struct BP_TeamVolume_C_ApplyMarkOfDeathToTrespassers final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_ResidentCharacter_C*                CallFunc_Array_Get_Item;                           // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FActiveGameplayEffectHandle            CallFunc_BP_ApplyGameplayEffectToTarget_ReturnValue; // 0x001C(0x0008)(NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_TeamVolume_C_ApplyMarkOfDeathToTrespassers) == 0x000008, "Wrong alignment on BP_TeamVolume_C_ApplyMarkOfDeathToTrespassers");
static_assert(sizeof(BP_TeamVolume_C_ApplyMarkOfDeathToTrespassers) == 0x000028, "Wrong size on BP_TeamVolume_C_ApplyMarkOfDeathToTrespassers");
static_assert(offsetof(BP_TeamVolume_C_ApplyMarkOfDeathToTrespassers, Temp_int_Array_Index_Variable) == 0x000000, "Member 'BP_TeamVolume_C_ApplyMarkOfDeathToTrespassers::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_TeamVolume_C_ApplyMarkOfDeathToTrespassers, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'BP_TeamVolume_C_ApplyMarkOfDeathToTrespassers::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_TeamVolume_C_ApplyMarkOfDeathToTrespassers, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'BP_TeamVolume_C_ApplyMarkOfDeathToTrespassers::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TeamVolume_C_ApplyMarkOfDeathToTrespassers, CallFunc_Array_Length_ReturnValue) == 0x00000C, "Member 'BP_TeamVolume_C_ApplyMarkOfDeathToTrespassers::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TeamVolume_C_ApplyMarkOfDeathToTrespassers, CallFunc_Array_Get_Item) == 0x000010, "Member 'BP_TeamVolume_C_ApplyMarkOfDeathToTrespassers::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_TeamVolume_C_ApplyMarkOfDeathToTrespassers, CallFunc_Less_IntInt_ReturnValue) == 0x000018, "Member 'BP_TeamVolume_C_ApplyMarkOfDeathToTrespassers::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TeamVolume_C_ApplyMarkOfDeathToTrespassers, CallFunc_BP_ApplyGameplayEffectToTarget_ReturnValue) == 0x00001C, "Member 'BP_TeamVolume_C_ApplyMarkOfDeathToTrespassers::CallFunc_BP_ApplyGameplayEffectToTarget_ReturnValue' has a wrong offset!");

// Function BP_TeamVolume.BP_TeamVolume_C.DebugPrint
// 0x0078 (0x0078 - 0x0000)
struct BP_TeamVolume_C_DebugPrint final
{
public:
	uint8                                         CharacterId;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         TeamVolumeID;                                      // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_ByteToString_ReturnValue;            // 0x0008(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Get_ClassLog_Name_name;                   // 0x0018(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_ByteToString_ReturnValue_1;          // 0x0028(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0038(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0048(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x0058(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_3;              // 0x0068(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_TeamVolume_C_DebugPrint) == 0x000008, "Wrong alignment on BP_TeamVolume_C_DebugPrint");
static_assert(sizeof(BP_TeamVolume_C_DebugPrint) == 0x000078, "Wrong size on BP_TeamVolume_C_DebugPrint");
static_assert(offsetof(BP_TeamVolume_C_DebugPrint, CharacterId) == 0x000000, "Member 'BP_TeamVolume_C_DebugPrint::CharacterId' has a wrong offset!");
static_assert(offsetof(BP_TeamVolume_C_DebugPrint, TeamVolumeID) == 0x000001, "Member 'BP_TeamVolume_C_DebugPrint::TeamVolumeID' has a wrong offset!");
static_assert(offsetof(BP_TeamVolume_C_DebugPrint, CallFunc_Conv_ByteToString_ReturnValue) == 0x000008, "Member 'BP_TeamVolume_C_DebugPrint::CallFunc_Conv_ByteToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TeamVolume_C_DebugPrint, CallFunc_Get_ClassLog_Name_name) == 0x000018, "Member 'BP_TeamVolume_C_DebugPrint::CallFunc_Get_ClassLog_Name_name' has a wrong offset!");
static_assert(offsetof(BP_TeamVolume_C_DebugPrint, CallFunc_Conv_ByteToString_ReturnValue_1) == 0x000028, "Member 'BP_TeamVolume_C_DebugPrint::CallFunc_Conv_ByteToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_TeamVolume_C_DebugPrint, CallFunc_Concat_StrStr_ReturnValue) == 0x000038, "Member 'BP_TeamVolume_C_DebugPrint::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TeamVolume_C_DebugPrint, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000048, "Member 'BP_TeamVolume_C_DebugPrint::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_TeamVolume_C_DebugPrint, CallFunc_Concat_StrStr_ReturnValue_2) == 0x000058, "Member 'BP_TeamVolume_C_DebugPrint::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_TeamVolume_C_DebugPrint, CallFunc_Concat_StrStr_ReturnValue_3) == 0x000068, "Member 'BP_TeamVolume_C_DebugPrint::CallFunc_Concat_StrStr_ReturnValue_3' has a wrong offset!");

// Function BP_TeamVolume.BP_TeamVolume_C.ExecuteUbergraph_BP_TeamVolume
// 0x00E0 (0x00E0 - 0x0000)
struct BP_TeamVolume_C_ExecuteUbergraph_BP_TeamVolume final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0004(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(E_TimeOfDay TimeOfDay)>        K2Node_CreateDelegate_OutputDelegate_1;            // 0x0014(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_Event_OtherActor_1;                         // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_Event_OtherActor;                           // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A[0x6];                                       // 0x003A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_ResidentCharacter_C*                K2Node_DynamicCast_AsBP_Resident_Character;        // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_ResidentCharacter_C*                K2Node_DynamicCast_AsBP_Resident_Character_1;      // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetTeamIDFromPawn_ReturnValue;            // 0x005A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5B[0x1];                                       // 0x005B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FActiveGameplayEffectHandle            CallFunc_BP_ApplyGameplayEffectToSelf_ReturnValue; // 0x005C(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FActiveGameplayEffectHandle            CallFunc_BP_ApplyGameplayEffectToSelf_ReturnValue_1; // 0x0064(0x0008)(NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetTeamIDFromPawn_ReturnValue_1;          // 0x006C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6D[0x3];                                       // 0x006D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AGroundsKeeper*                         CallFunc_GetGroundsKeeper_ReturnValue;             // 0x0070(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetTeamID_ReturnValue;                    // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0079(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7A[0x6];                                       // 0x007A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AGroundsKeeper*                         CallFunc_GetGroundsKeeper_ReturnValue_1;           // 0x0080(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetTeamID_ReturnValue_1;                  // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_89[0x7];                                       // 0x0089(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UInitializationStateEnded*              CallFunc_ListenToInitializationStateEnded_ReturnValue; // 0x0090(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0099(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue;             // 0x009A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9B[0x5];                                       // 0x009B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharacter*                             K2Node_CustomEvent_Character;                      // 0x00A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_ResidentCharacter_C*                K2Node_DynamicCast_AsBP_Resident_Character_2;      // 0x00A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue_1;           // 0x00B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B2[0x6];                                       // 0x00B2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimer_ReturnValue;                  // 0x00B8(0x0008)(NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class ACharacter* Character)>  K2Node_CreateDelegate_OutputDelegate_2;            // 0x00C0(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ADowntimeManager_C*                     CallFunc_GetActorOfClass_ReturnValue;              // 0x00D0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	E_TimeOfDay                                   K2Node_CustomEvent_TimeOfDay;                      // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x00D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_IsValidTimerHandle_ReturnValue;        // 0x00DA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_TeamVolume_C_ExecuteUbergraph_BP_TeamVolume) == 0x000008, "Wrong alignment on BP_TeamVolume_C_ExecuteUbergraph_BP_TeamVolume");
static_assert(sizeof(BP_TeamVolume_C_ExecuteUbergraph_BP_TeamVolume) == 0x0000E0, "Wrong size on BP_TeamVolume_C_ExecuteUbergraph_BP_TeamVolume");
static_assert(offsetof(BP_TeamVolume_C_ExecuteUbergraph_BP_TeamVolume, EntryPoint) == 0x000000, "Member 'BP_TeamVolume_C_ExecuteUbergraph_BP_TeamVolume::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_TeamVolume_C_ExecuteUbergraph_BP_TeamVolume, K2Node_CreateDelegate_OutputDelegate) == 0x000004, "Member 'BP_TeamVolume_C_ExecuteUbergraph_BP_TeamVolume::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_TeamVolume_C_ExecuteUbergraph_BP_TeamVolume, K2Node_CreateDelegate_OutputDelegate_1) == 0x000014, "Member 'BP_TeamVolume_C_ExecuteUbergraph_BP_TeamVolume::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(BP_TeamVolume_C_ExecuteUbergraph_BP_TeamVolume, K2Node_Event_OtherActor_1) == 0x000028, "Member 'BP_TeamVolume_C_ExecuteUbergraph_BP_TeamVolume::K2Node_Event_OtherActor_1' has a wrong offset!");
static_assert(offsetof(BP_TeamVolume_C_ExecuteUbergraph_BP_TeamVolume, K2Node_Event_OtherActor) == 0x000030, "Member 'BP_TeamVolume_C_ExecuteUbergraph_BP_TeamVolume::K2Node_Event_OtherActor' has a wrong offset!");
static_assert(offsetof(BP_TeamVolume_C_ExecuteUbergraph_BP_TeamVolume, CallFunc_IsValid_ReturnValue) == 0x000038, "Member 'BP_TeamVolume_C_ExecuteUbergraph_BP_TeamVolume::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TeamVolume_C_ExecuteUbergraph_BP_TeamVolume, CallFunc_IsValid_ReturnValue_1) == 0x000039, "Member 'BP_TeamVolume_C_ExecuteUbergraph_BP_TeamVolume::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_TeamVolume_C_ExecuteUbergraph_BP_TeamVolume, K2Node_DynamicCast_AsBP_Resident_Character) == 0x000040, "Member 'BP_TeamVolume_C_ExecuteUbergraph_BP_TeamVolume::K2Node_DynamicCast_AsBP_Resident_Character' has a wrong offset!");
static_assert(offsetof(BP_TeamVolume_C_ExecuteUbergraph_BP_TeamVolume, K2Node_DynamicCast_bSuccess) == 0x000048, "Member 'BP_TeamVolume_C_ExecuteUbergraph_BP_TeamVolume::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_TeamVolume_C_ExecuteUbergraph_BP_TeamVolume, K2Node_DynamicCast_AsBP_Resident_Character_1) == 0x000050, "Member 'BP_TeamVolume_C_ExecuteUbergraph_BP_TeamVolume::K2Node_DynamicCast_AsBP_Resident_Character_1' has a wrong offset!");
static_assert(offsetof(BP_TeamVolume_C_ExecuteUbergraph_BP_TeamVolume, K2Node_DynamicCast_bSuccess_1) == 0x000058, "Member 'BP_TeamVolume_C_ExecuteUbergraph_BP_TeamVolume::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_TeamVolume_C_ExecuteUbergraph_BP_TeamVolume, CallFunc_IsValid_ReturnValue_2) == 0x000059, "Member 'BP_TeamVolume_C_ExecuteUbergraph_BP_TeamVolume::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_TeamVolume_C_ExecuteUbergraph_BP_TeamVolume, CallFunc_GetTeamIDFromPawn_ReturnValue) == 0x00005A, "Member 'BP_TeamVolume_C_ExecuteUbergraph_BP_TeamVolume::CallFunc_GetTeamIDFromPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TeamVolume_C_ExecuteUbergraph_BP_TeamVolume, CallFunc_BP_ApplyGameplayEffectToSelf_ReturnValue) == 0x00005C, "Member 'BP_TeamVolume_C_ExecuteUbergraph_BP_TeamVolume::CallFunc_BP_ApplyGameplayEffectToSelf_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TeamVolume_C_ExecuteUbergraph_BP_TeamVolume, CallFunc_BP_ApplyGameplayEffectToSelf_ReturnValue_1) == 0x000064, "Member 'BP_TeamVolume_C_ExecuteUbergraph_BP_TeamVolume::CallFunc_BP_ApplyGameplayEffectToSelf_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_TeamVolume_C_ExecuteUbergraph_BP_TeamVolume, CallFunc_GetTeamIDFromPawn_ReturnValue_1) == 0x00006C, "Member 'BP_TeamVolume_C_ExecuteUbergraph_BP_TeamVolume::CallFunc_GetTeamIDFromPawn_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_TeamVolume_C_ExecuteUbergraph_BP_TeamVolume, CallFunc_GetGroundsKeeper_ReturnValue) == 0x000070, "Member 'BP_TeamVolume_C_ExecuteUbergraph_BP_TeamVolume::CallFunc_GetGroundsKeeper_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TeamVolume_C_ExecuteUbergraph_BP_TeamVolume, CallFunc_GetTeamID_ReturnValue) == 0x000078, "Member 'BP_TeamVolume_C_ExecuteUbergraph_BP_TeamVolume::CallFunc_GetTeamID_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TeamVolume_C_ExecuteUbergraph_BP_TeamVolume, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000079, "Member 'BP_TeamVolume_C_ExecuteUbergraph_BP_TeamVolume::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TeamVolume_C_ExecuteUbergraph_BP_TeamVolume, CallFunc_GetGroundsKeeper_ReturnValue_1) == 0x000080, "Member 'BP_TeamVolume_C_ExecuteUbergraph_BP_TeamVolume::CallFunc_GetGroundsKeeper_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_TeamVolume_C_ExecuteUbergraph_BP_TeamVolume, CallFunc_GetTeamID_ReturnValue_1) == 0x000088, "Member 'BP_TeamVolume_C_ExecuteUbergraph_BP_TeamVolume::CallFunc_GetTeamID_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_TeamVolume_C_ExecuteUbergraph_BP_TeamVolume, CallFunc_ListenToInitializationStateEnded_ReturnValue) == 0x000090, "Member 'BP_TeamVolume_C_ExecuteUbergraph_BP_TeamVolume::CallFunc_ListenToInitializationStateEnded_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TeamVolume_C_ExecuteUbergraph_BP_TeamVolume, CallFunc_IsValid_ReturnValue_3) == 0x000098, "Member 'BP_TeamVolume_C_ExecuteUbergraph_BP_TeamVolume::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_TeamVolume_C_ExecuteUbergraph_BP_TeamVolume, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000099, "Member 'BP_TeamVolume_C_ExecuteUbergraph_BP_TeamVolume::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_TeamVolume_C_ExecuteUbergraph_BP_TeamVolume, CallFunc_Array_RemoveItem_ReturnValue) == 0x00009A, "Member 'BP_TeamVolume_C_ExecuteUbergraph_BP_TeamVolume::CallFunc_Array_RemoveItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TeamVolume_C_ExecuteUbergraph_BP_TeamVolume, K2Node_CustomEvent_Character) == 0x0000A0, "Member 'BP_TeamVolume_C_ExecuteUbergraph_BP_TeamVolume::K2Node_CustomEvent_Character' has a wrong offset!");
static_assert(offsetof(BP_TeamVolume_C_ExecuteUbergraph_BP_TeamVolume, K2Node_DynamicCast_AsBP_Resident_Character_2) == 0x0000A8, "Member 'BP_TeamVolume_C_ExecuteUbergraph_BP_TeamVolume::K2Node_DynamicCast_AsBP_Resident_Character_2' has a wrong offset!");
static_assert(offsetof(BP_TeamVolume_C_ExecuteUbergraph_BP_TeamVolume, K2Node_DynamicCast_bSuccess_2) == 0x0000B0, "Member 'BP_TeamVolume_C_ExecuteUbergraph_BP_TeamVolume::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_TeamVolume_C_ExecuteUbergraph_BP_TeamVolume, CallFunc_Array_RemoveItem_ReturnValue_1) == 0x0000B1, "Member 'BP_TeamVolume_C_ExecuteUbergraph_BP_TeamVolume::CallFunc_Array_RemoveItem_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_TeamVolume_C_ExecuteUbergraph_BP_TeamVolume, CallFunc_K2_SetTimer_ReturnValue) == 0x0000B8, "Member 'BP_TeamVolume_C_ExecuteUbergraph_BP_TeamVolume::CallFunc_K2_SetTimer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TeamVolume_C_ExecuteUbergraph_BP_TeamVolume, K2Node_CreateDelegate_OutputDelegate_2) == 0x0000C0, "Member 'BP_TeamVolume_C_ExecuteUbergraph_BP_TeamVolume::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(BP_TeamVolume_C_ExecuteUbergraph_BP_TeamVolume, CallFunc_GetActorOfClass_ReturnValue) == 0x0000D0, "Member 'BP_TeamVolume_C_ExecuteUbergraph_BP_TeamVolume::CallFunc_GetActorOfClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TeamVolume_C_ExecuteUbergraph_BP_TeamVolume, K2Node_CustomEvent_TimeOfDay) == 0x0000D8, "Member 'BP_TeamVolume_C_ExecuteUbergraph_BP_TeamVolume::K2Node_CustomEvent_TimeOfDay' has a wrong offset!");
static_assert(offsetof(BP_TeamVolume_C_ExecuteUbergraph_BP_TeamVolume, K2Node_SwitchEnum_CmpSuccess) == 0x0000D9, "Member 'BP_TeamVolume_C_ExecuteUbergraph_BP_TeamVolume::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_TeamVolume_C_ExecuteUbergraph_BP_TeamVolume, CallFunc_K2_IsValidTimerHandle_ReturnValue) == 0x0000DA, "Member 'BP_TeamVolume_C_ExecuteUbergraph_BP_TeamVolume::CallFunc_K2_IsValidTimerHandle_ReturnValue' has a wrong offset!");

// Function BP_TeamVolume.BP_TeamVolume_C.GetTeamID
// 0x0018 (0x0018 - 0x0000)
struct BP_TeamVolume_C_GetTeamID final
{
public:
	uint8                                         Return;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AGroundsKeeper*                         CallFunc_GetGroundsKeeper_ReturnValue;             // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetTeamID_ReturnValue;                    // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_TeamVolume_C_GetTeamID) == 0x000008, "Wrong alignment on BP_TeamVolume_C_GetTeamID");
static_assert(sizeof(BP_TeamVolume_C_GetTeamID) == 0x000018, "Wrong size on BP_TeamVolume_C_GetTeamID");
static_assert(offsetof(BP_TeamVolume_C_GetTeamID, Return) == 0x000000, "Member 'BP_TeamVolume_C_GetTeamID::Return' has a wrong offset!");
static_assert(offsetof(BP_TeamVolume_C_GetTeamID, CallFunc_GetGroundsKeeper_ReturnValue) == 0x000008, "Member 'BP_TeamVolume_C_GetTeamID::CallFunc_GetGroundsKeeper_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TeamVolume_C_GetTeamID, CallFunc_GetTeamID_ReturnValue) == 0x000010, "Member 'BP_TeamVolume_C_GetTeamID::CallFunc_GetTeamID_ReturnValue' has a wrong offset!");

// Function BP_TeamVolume.BP_TeamVolume_C.IsNight
// 0x0018 (0x0018 - 0x0000)
struct BP_TeamVolume_C_IsNight final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ADowntimeManager_C*                     CallFunc_GetActorOfClass_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_TeamVolume_C_IsNight) == 0x000008, "Wrong alignment on BP_TeamVolume_C_IsNight");
static_assert(sizeof(BP_TeamVolume_C_IsNight) == 0x000018, "Wrong size on BP_TeamVolume_C_IsNight");
static_assert(offsetof(BP_TeamVolume_C_IsNight, ReturnValue) == 0x000000, "Member 'BP_TeamVolume_C_IsNight::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TeamVolume_C_IsNight, CallFunc_GetActorOfClass_ReturnValue) == 0x000008, "Member 'BP_TeamVolume_C_IsNight::CallFunc_GetActorOfClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TeamVolume_C_IsNight, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000010, "Member 'BP_TeamVolume_C_IsNight::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function BP_TeamVolume.BP_TeamVolume_C.On_CharacterEntered__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct BP_TeamVolume_C_On_CharacterEntered__DelegateSignature final
{
public:
	class ABP_ResidentCharacter_C*                Character;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_TeamVolume_C_On_CharacterEntered__DelegateSignature) == 0x000008, "Wrong alignment on BP_TeamVolume_C_On_CharacterEntered__DelegateSignature");
static_assert(sizeof(BP_TeamVolume_C_On_CharacterEntered__DelegateSignature) == 0x000008, "Wrong size on BP_TeamVolume_C_On_CharacterEntered__DelegateSignature");
static_assert(offsetof(BP_TeamVolume_C_On_CharacterEntered__DelegateSignature, Character) == 0x000000, "Member 'BP_TeamVolume_C_On_CharacterEntered__DelegateSignature::Character' has a wrong offset!");

// Function BP_TeamVolume.BP_TeamVolume_C.On_CharacterLeft__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct BP_TeamVolume_C_On_CharacterLeft__DelegateSignature final
{
public:
	class ABP_ResidentCharacter_C*                Character;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_TeamVolume_C_On_CharacterLeft__DelegateSignature) == 0x000008, "Wrong alignment on BP_TeamVolume_C_On_CharacterLeft__DelegateSignature");
static_assert(sizeof(BP_TeamVolume_C_On_CharacterLeft__DelegateSignature) == 0x000008, "Wrong size on BP_TeamVolume_C_On_CharacterLeft__DelegateSignature");
static_assert(offsetof(BP_TeamVolume_C_On_CharacterLeft__DelegateSignature, Character) == 0x000000, "Member 'BP_TeamVolume_C_On_CharacterLeft__DelegateSignature::Character' has a wrong offset!");

// Function BP_TeamVolume.BP_TeamVolume_C.On_Dead_Event
// 0x0008 (0x0008 - 0x0000)
struct BP_TeamVolume_C_On_Dead_Event final
{
public:
	class ACharacter*                             Character;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_TeamVolume_C_On_Dead_Event) == 0x000008, "Wrong alignment on BP_TeamVolume_C_On_Dead_Event");
static_assert(sizeof(BP_TeamVolume_C_On_Dead_Event) == 0x000008, "Wrong size on BP_TeamVolume_C_On_Dead_Event");
static_assert(offsetof(BP_TeamVolume_C_On_Dead_Event, Character) == 0x000000, "Member 'BP_TeamVolume_C_On_Dead_Event::Character' has a wrong offset!");

// Function BP_TeamVolume.BP_TeamVolume_C.On_TimeOfDayChange_Event
// 0x0001 (0x0001 - 0x0000)
struct BP_TeamVolume_C_On_TimeOfDayChange_Event final
{
public:
	E_TimeOfDay                                   TimeOfDay;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_TeamVolume_C_On_TimeOfDayChange_Event) == 0x000001, "Wrong alignment on BP_TeamVolume_C_On_TimeOfDayChange_Event");
static_assert(sizeof(BP_TeamVolume_C_On_TimeOfDayChange_Event) == 0x000001, "Wrong size on BP_TeamVolume_C_On_TimeOfDayChange_Event");
static_assert(offsetof(BP_TeamVolume_C_On_TimeOfDayChange_Event, TimeOfDay) == 0x000000, "Member 'BP_TeamVolume_C_On_TimeOfDayChange_Event::TimeOfDay' has a wrong offset!");

// Function BP_TeamVolume.BP_TeamVolume_C.ReceiveActorBeginOverlap
// 0x0008 (0x0008 - 0x0000)
struct BP_TeamVolume_C_ReceiveActorBeginOverlap final
{
public:
	class AActor*                                 OtherActor;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_TeamVolume_C_ReceiveActorBeginOverlap) == 0x000008, "Wrong alignment on BP_TeamVolume_C_ReceiveActorBeginOverlap");
static_assert(sizeof(BP_TeamVolume_C_ReceiveActorBeginOverlap) == 0x000008, "Wrong size on BP_TeamVolume_C_ReceiveActorBeginOverlap");
static_assert(offsetof(BP_TeamVolume_C_ReceiveActorBeginOverlap, OtherActor) == 0x000000, "Member 'BP_TeamVolume_C_ReceiveActorBeginOverlap::OtherActor' has a wrong offset!");

// Function BP_TeamVolume.BP_TeamVolume_C.ReceiveActorEndOverlap
// 0x0008 (0x0008 - 0x0000)
struct BP_TeamVolume_C_ReceiveActorEndOverlap final
{
public:
	class AActor*                                 OtherActor;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_TeamVolume_C_ReceiveActorEndOverlap) == 0x000008, "Wrong alignment on BP_TeamVolume_C_ReceiveActorEndOverlap");
static_assert(sizeof(BP_TeamVolume_C_ReceiveActorEndOverlap) == 0x000008, "Wrong size on BP_TeamVolume_C_ReceiveActorEndOverlap");
static_assert(offsetof(BP_TeamVolume_C_ReceiveActorEndOverlap, OtherActor) == 0x000000, "Member 'BP_TeamVolume_C_ReceiveActorEndOverlap::OtherActor' has a wrong offset!");

}

