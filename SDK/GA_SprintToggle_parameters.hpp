#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GA_SprintToggle

#include "Basic.hpp"

#include "GameplayAbilities_structs.hpp"


namespace SDK::Params
{

// Function GA_SprintToggle.GA_SprintToggle_C.ExecuteUbergraph_GA_SprintToggle
// 0x0050 (0x0050 - 0x0000)
struct GA_SprintToggle_C_ExecuteUbergraph_GA_SprintToggle final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FActiveGameplayEffectHandle            CallFunc_BP_ApplyGameplayEffectToOwner_ReturnValue; // 0x0010(0x0008)(NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwningActorFromActorInfo_ReturnValue;  // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAbilitySystemComponent*                CallFunc_GetAbilitySystemComponent_ReturnValue;    // 0x0020(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TArray<struct FActiveGameplayEffectHandle>    CallFunc_GetActiveEffectsWithAllTags_ReturnValue;  // 0x0028(0x0010)(ReferenceParm)
	bool                                          CallFunc_Array_IsNotEmpty_ReturnValue;             // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x3];                                       // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FActiveGameplayEffectHandle            CallFunc_Array_Get_Item;                           // 0x003C(0x0008)(NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_SprintToggle_C_ExecuteUbergraph_GA_SprintToggle) == 0x000008, "Wrong alignment on GA_SprintToggle_C_ExecuteUbergraph_GA_SprintToggle");
static_assert(sizeof(GA_SprintToggle_C_ExecuteUbergraph_GA_SprintToggle) == 0x000050, "Wrong size on GA_SprintToggle_C_ExecuteUbergraph_GA_SprintToggle");
static_assert(offsetof(GA_SprintToggle_C_ExecuteUbergraph_GA_SprintToggle, EntryPoint) == 0x000000, "Member 'GA_SprintToggle_C_ExecuteUbergraph_GA_SprintToggle::EntryPoint' has a wrong offset!");
static_assert(offsetof(GA_SprintToggle_C_ExecuteUbergraph_GA_SprintToggle, Temp_int_Array_Index_Variable) == 0x000004, "Member 'GA_SprintToggle_C_ExecuteUbergraph_GA_SprintToggle::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(GA_SprintToggle_C_ExecuteUbergraph_GA_SprintToggle, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'GA_SprintToggle_C_ExecuteUbergraph_GA_SprintToggle::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(GA_SprintToggle_C_ExecuteUbergraph_GA_SprintToggle, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'GA_SprintToggle_C_ExecuteUbergraph_GA_SprintToggle::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_SprintToggle_C_ExecuteUbergraph_GA_SprintToggle, CallFunc_BP_ApplyGameplayEffectToOwner_ReturnValue) == 0x000010, "Member 'GA_SprintToggle_C_ExecuteUbergraph_GA_SprintToggle::CallFunc_BP_ApplyGameplayEffectToOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_SprintToggle_C_ExecuteUbergraph_GA_SprintToggle, CallFunc_GetOwningActorFromActorInfo_ReturnValue) == 0x000018, "Member 'GA_SprintToggle_C_ExecuteUbergraph_GA_SprintToggle::CallFunc_GetOwningActorFromActorInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_SprintToggle_C_ExecuteUbergraph_GA_SprintToggle, CallFunc_GetAbilitySystemComponent_ReturnValue) == 0x000020, "Member 'GA_SprintToggle_C_ExecuteUbergraph_GA_SprintToggle::CallFunc_GetAbilitySystemComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_SprintToggle_C_ExecuteUbergraph_GA_SprintToggle, CallFunc_GetActiveEffectsWithAllTags_ReturnValue) == 0x000028, "Member 'GA_SprintToggle_C_ExecuteUbergraph_GA_SprintToggle::CallFunc_GetActiveEffectsWithAllTags_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_SprintToggle_C_ExecuteUbergraph_GA_SprintToggle, CallFunc_Array_IsNotEmpty_ReturnValue) == 0x000038, "Member 'GA_SprintToggle_C_ExecuteUbergraph_GA_SprintToggle::CallFunc_Array_IsNotEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_SprintToggle_C_ExecuteUbergraph_GA_SprintToggle, CallFunc_Array_Get_Item) == 0x00003C, "Member 'GA_SprintToggle_C_ExecuteUbergraph_GA_SprintToggle::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(GA_SprintToggle_C_ExecuteUbergraph_GA_SprintToggle, CallFunc_Array_Length_ReturnValue) == 0x000044, "Member 'GA_SprintToggle_C_ExecuteUbergraph_GA_SprintToggle::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_SprintToggle_C_ExecuteUbergraph_GA_SprintToggle, CallFunc_Less_IntInt_ReturnValue) == 0x000048, "Member 'GA_SprintToggle_C_ExecuteUbergraph_GA_SprintToggle::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function GA_SprintToggle.GA_SprintToggle_C.ToggleHeadbob
// 0x0020 (0x0020 - 0x0000)
struct GA_SprintToggle_C_ToggleHeadbob final
{
public:
	bool                                          Enabled;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetAvatarActorFromActorInfo_ReturnValue;  // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_MovementCharacter_C*                K2Node_DynamicCast_AsBP_Movement_Character;        // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_SprintToggle_C_ToggleHeadbob) == 0x000008, "Wrong alignment on GA_SprintToggle_C_ToggleHeadbob");
static_assert(sizeof(GA_SprintToggle_C_ToggleHeadbob) == 0x000020, "Wrong size on GA_SprintToggle_C_ToggleHeadbob");
static_assert(offsetof(GA_SprintToggle_C_ToggleHeadbob, Enabled) == 0x000000, "Member 'GA_SprintToggle_C_ToggleHeadbob::Enabled' has a wrong offset!");
static_assert(offsetof(GA_SprintToggle_C_ToggleHeadbob, CallFunc_GetAvatarActorFromActorInfo_ReturnValue) == 0x000008, "Member 'GA_SprintToggle_C_ToggleHeadbob::CallFunc_GetAvatarActorFromActorInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_SprintToggle_C_ToggleHeadbob, K2Node_DynamicCast_AsBP_Movement_Character) == 0x000010, "Member 'GA_SprintToggle_C_ToggleHeadbob::K2Node_DynamicCast_AsBP_Movement_Character' has a wrong offset!");
static_assert(offsetof(GA_SprintToggle_C_ToggleHeadbob, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'GA_SprintToggle_C_ToggleHeadbob::K2Node_DynamicCast_bSuccess' has a wrong offset!");

}

