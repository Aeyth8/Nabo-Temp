#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WI_BaseKillFeedEntry

#include "Basic.hpp"

#include "JP_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "Engine_structs.hpp"
#include "UMG_structs.hpp"


namespace SDK::Params
{

// Function WI_BaseKillFeedEntry.WI_BaseKillFeedEntry_C.SetVisibilityFromBool
// 0x0010 (0x0010 - 0x0000)
struct WI_BaseKillFeedEntry_C_SetVisibilityFromBool final
{
public:
	class UWidget*                                Widget;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          Visible;                                           // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WI_BaseKillFeedEntry_C_SetVisibilityFromBool) == 0x000008, "Wrong alignment on WI_BaseKillFeedEntry_C_SetVisibilityFromBool");
static_assert(sizeof(WI_BaseKillFeedEntry_C_SetVisibilityFromBool) == 0x000010, "Wrong size on WI_BaseKillFeedEntry_C_SetVisibilityFromBool");
static_assert(offsetof(WI_BaseKillFeedEntry_C_SetVisibilityFromBool, Widget) == 0x000000, "Member 'WI_BaseKillFeedEntry_C_SetVisibilityFromBool::Widget' has a wrong offset!");
static_assert(offsetof(WI_BaseKillFeedEntry_C_SetVisibilityFromBool, Visible) == 0x000008, "Member 'WI_BaseKillFeedEntry_C_SetVisibilityFromBool::Visible' has a wrong offset!");
static_assert(offsetof(WI_BaseKillFeedEntry_C_SetVisibilityFromBool, Temp_bool_Variable) == 0x000009, "Member 'WI_BaseKillFeedEntry_C_SetVisibilityFromBool::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WI_BaseKillFeedEntry_C_SetVisibilityFromBool, Temp_byte_Variable) == 0x00000A, "Member 'WI_BaseKillFeedEntry_C_SetVisibilityFromBool::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WI_BaseKillFeedEntry_C_SetVisibilityFromBool, Temp_byte_Variable_1) == 0x00000B, "Member 'WI_BaseKillFeedEntry_C_SetVisibilityFromBool::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WI_BaseKillFeedEntry_C_SetVisibilityFromBool, K2Node_Select_Default) == 0x00000C, "Member 'WI_BaseKillFeedEntry_C_SetVisibilityFromBool::K2Node_Select_Default' has a wrong offset!");

// Function WI_BaseKillFeedEntry.WI_BaseKillFeedEntry_C.UpdateText
// 0x0438 (0x0438 - 0x0000)
struct WI_BaseKillFeedEntry_C_UpdateText final
{
public:
	struct FGameplayTag                           AttackerType_0;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	ETeamType                                     AttackerTeam_0;                                    // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   AttackerName_0;                                    // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm)
	struct FGameplayTag                           ReceiverType_0;                                    // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	ETeamType                                     ReceiverTeam_0;                                    // 0x0028(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   ReceiverName_0;                                    // 0x0030(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm)
	class FText                                   CombatParticipantFormat;                           // 0x0040(0x0010)(Edit, BlueprintVisible)
	class FString                                 ReceiverStyle;                                     // 0x0050(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 AttackerStyle;                                     // 0x0060(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	ETeamType                                     Temp_byte_Variable;                                // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETeamType                                     Temp_byte_Variable_1;                              // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_72[0x6];                                       // 0x0072(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0078(0x0048)(HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x00C0(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x00D0(0x0048)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_2;            // 0x0118(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0160(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0170(0x0010)()
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_1;          // 0x0180(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_3;            // 0x0190(0x0048)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_4;            // 0x01D8(0x0048)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_5;            // 0x0220(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_1;                          // 0x0268(0x0010)(ReferenceParm)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_6;            // 0x0278(0x0048)(HasGetValueTypeHash)
	class FText                                   CallFunc_Format_ReturnValue_1;                     // 0x02C0(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_7;            // 0x02D0(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_2;                          // 0x0318(0x0010)(ReferenceParm)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_8;            // 0x0328(0x0048)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_9;            // 0x0370(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_3;                          // 0x03B8(0x0010)(ReferenceParm)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_4;                          // 0x03C8(0x0010)(ReferenceParm)
	class FString                                 K2Node_Select_Default;                             // 0x03D8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Format_ReturnValue_2;                     // 0x03E8(0x0010)()
	class FText                                   CallFunc_Format_ReturnValue_3;                     // 0x03F8(0x0010)()
	class FText                                   CallFunc_Format_ReturnValue_4;                     // 0x0408(0x0010)()
	bool                                          CallFunc_MatchesTag_ReturnValue;                   // 0x0418(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_MatchesTag_ReturnValue_1;                 // 0x0419(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x041A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41B[0x5];                                      // 0x041B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 K2Node_Select_Default_1;                           // 0x0420(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_MatchesTag_ReturnValue_2;                 // 0x0430(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WI_BaseKillFeedEntry_C_UpdateText) == 0x000008, "Wrong alignment on WI_BaseKillFeedEntry_C_UpdateText");
static_assert(sizeof(WI_BaseKillFeedEntry_C_UpdateText) == 0x000438, "Wrong size on WI_BaseKillFeedEntry_C_UpdateText");
static_assert(offsetof(WI_BaseKillFeedEntry_C_UpdateText, AttackerType_0) == 0x000000, "Member 'WI_BaseKillFeedEntry_C_UpdateText::AttackerType_0' has a wrong offset!");
static_assert(offsetof(WI_BaseKillFeedEntry_C_UpdateText, AttackerTeam_0) == 0x000008, "Member 'WI_BaseKillFeedEntry_C_UpdateText::AttackerTeam_0' has a wrong offset!");
static_assert(offsetof(WI_BaseKillFeedEntry_C_UpdateText, AttackerName_0) == 0x000010, "Member 'WI_BaseKillFeedEntry_C_UpdateText::AttackerName_0' has a wrong offset!");
static_assert(offsetof(WI_BaseKillFeedEntry_C_UpdateText, ReceiverType_0) == 0x000020, "Member 'WI_BaseKillFeedEntry_C_UpdateText::ReceiverType_0' has a wrong offset!");
static_assert(offsetof(WI_BaseKillFeedEntry_C_UpdateText, ReceiverTeam_0) == 0x000028, "Member 'WI_BaseKillFeedEntry_C_UpdateText::ReceiverTeam_0' has a wrong offset!");
static_assert(offsetof(WI_BaseKillFeedEntry_C_UpdateText, ReceiverName_0) == 0x000030, "Member 'WI_BaseKillFeedEntry_C_UpdateText::ReceiverName_0' has a wrong offset!");
static_assert(offsetof(WI_BaseKillFeedEntry_C_UpdateText, CombatParticipantFormat) == 0x000040, "Member 'WI_BaseKillFeedEntry_C_UpdateText::CombatParticipantFormat' has a wrong offset!");
static_assert(offsetof(WI_BaseKillFeedEntry_C_UpdateText, ReceiverStyle) == 0x000050, "Member 'WI_BaseKillFeedEntry_C_UpdateText::ReceiverStyle' has a wrong offset!");
static_assert(offsetof(WI_BaseKillFeedEntry_C_UpdateText, AttackerStyle) == 0x000060, "Member 'WI_BaseKillFeedEntry_C_UpdateText::AttackerStyle' has a wrong offset!");
static_assert(offsetof(WI_BaseKillFeedEntry_C_UpdateText, Temp_byte_Variable) == 0x000070, "Member 'WI_BaseKillFeedEntry_C_UpdateText::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WI_BaseKillFeedEntry_C_UpdateText, Temp_byte_Variable_1) == 0x000071, "Member 'WI_BaseKillFeedEntry_C_UpdateText::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WI_BaseKillFeedEntry_C_UpdateText, K2Node_MakeStruct_FormatArgumentData) == 0x000078, "Member 'WI_BaseKillFeedEntry_C_UpdateText::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(WI_BaseKillFeedEntry_C_UpdateText, CallFunc_Conv_StringToText_ReturnValue) == 0x0000C0, "Member 'WI_BaseKillFeedEntry_C_UpdateText::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WI_BaseKillFeedEntry_C_UpdateText, K2Node_MakeStruct_FormatArgumentData_1) == 0x0000D0, "Member 'WI_BaseKillFeedEntry_C_UpdateText::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(WI_BaseKillFeedEntry_C_UpdateText, K2Node_MakeStruct_FormatArgumentData_2) == 0x000118, "Member 'WI_BaseKillFeedEntry_C_UpdateText::K2Node_MakeStruct_FormatArgumentData_2' has a wrong offset!");
static_assert(offsetof(WI_BaseKillFeedEntry_C_UpdateText, K2Node_MakeArray_Array) == 0x000160, "Member 'WI_BaseKillFeedEntry_C_UpdateText::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(WI_BaseKillFeedEntry_C_UpdateText, CallFunc_Format_ReturnValue) == 0x000170, "Member 'WI_BaseKillFeedEntry_C_UpdateText::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(WI_BaseKillFeedEntry_C_UpdateText, CallFunc_Conv_StringToText_ReturnValue_1) == 0x000180, "Member 'WI_BaseKillFeedEntry_C_UpdateText::CallFunc_Conv_StringToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WI_BaseKillFeedEntry_C_UpdateText, K2Node_MakeStruct_FormatArgumentData_3) == 0x000190, "Member 'WI_BaseKillFeedEntry_C_UpdateText::K2Node_MakeStruct_FormatArgumentData_3' has a wrong offset!");
static_assert(offsetof(WI_BaseKillFeedEntry_C_UpdateText, K2Node_MakeStruct_FormatArgumentData_4) == 0x0001D8, "Member 'WI_BaseKillFeedEntry_C_UpdateText::K2Node_MakeStruct_FormatArgumentData_4' has a wrong offset!");
static_assert(offsetof(WI_BaseKillFeedEntry_C_UpdateText, K2Node_MakeStruct_FormatArgumentData_5) == 0x000220, "Member 'WI_BaseKillFeedEntry_C_UpdateText::K2Node_MakeStruct_FormatArgumentData_5' has a wrong offset!");
static_assert(offsetof(WI_BaseKillFeedEntry_C_UpdateText, K2Node_MakeArray_Array_1) == 0x000268, "Member 'WI_BaseKillFeedEntry_C_UpdateText::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(WI_BaseKillFeedEntry_C_UpdateText, K2Node_MakeStruct_FormatArgumentData_6) == 0x000278, "Member 'WI_BaseKillFeedEntry_C_UpdateText::K2Node_MakeStruct_FormatArgumentData_6' has a wrong offset!");
static_assert(offsetof(WI_BaseKillFeedEntry_C_UpdateText, CallFunc_Format_ReturnValue_1) == 0x0002C0, "Member 'WI_BaseKillFeedEntry_C_UpdateText::CallFunc_Format_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WI_BaseKillFeedEntry_C_UpdateText, K2Node_MakeStruct_FormatArgumentData_7) == 0x0002D0, "Member 'WI_BaseKillFeedEntry_C_UpdateText::K2Node_MakeStruct_FormatArgumentData_7' has a wrong offset!");
static_assert(offsetof(WI_BaseKillFeedEntry_C_UpdateText, K2Node_MakeArray_Array_2) == 0x000318, "Member 'WI_BaseKillFeedEntry_C_UpdateText::K2Node_MakeArray_Array_2' has a wrong offset!");
static_assert(offsetof(WI_BaseKillFeedEntry_C_UpdateText, K2Node_MakeStruct_FormatArgumentData_8) == 0x000328, "Member 'WI_BaseKillFeedEntry_C_UpdateText::K2Node_MakeStruct_FormatArgumentData_8' has a wrong offset!");
static_assert(offsetof(WI_BaseKillFeedEntry_C_UpdateText, K2Node_MakeStruct_FormatArgumentData_9) == 0x000370, "Member 'WI_BaseKillFeedEntry_C_UpdateText::K2Node_MakeStruct_FormatArgumentData_9' has a wrong offset!");
static_assert(offsetof(WI_BaseKillFeedEntry_C_UpdateText, K2Node_MakeArray_Array_3) == 0x0003B8, "Member 'WI_BaseKillFeedEntry_C_UpdateText::K2Node_MakeArray_Array_3' has a wrong offset!");
static_assert(offsetof(WI_BaseKillFeedEntry_C_UpdateText, K2Node_MakeArray_Array_4) == 0x0003C8, "Member 'WI_BaseKillFeedEntry_C_UpdateText::K2Node_MakeArray_Array_4' has a wrong offset!");
static_assert(offsetof(WI_BaseKillFeedEntry_C_UpdateText, K2Node_Select_Default) == 0x0003D8, "Member 'WI_BaseKillFeedEntry_C_UpdateText::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WI_BaseKillFeedEntry_C_UpdateText, CallFunc_Format_ReturnValue_2) == 0x0003E8, "Member 'WI_BaseKillFeedEntry_C_UpdateText::CallFunc_Format_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WI_BaseKillFeedEntry_C_UpdateText, CallFunc_Format_ReturnValue_3) == 0x0003F8, "Member 'WI_BaseKillFeedEntry_C_UpdateText::CallFunc_Format_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WI_BaseKillFeedEntry_C_UpdateText, CallFunc_Format_ReturnValue_4) == 0x000408, "Member 'WI_BaseKillFeedEntry_C_UpdateText::CallFunc_Format_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(WI_BaseKillFeedEntry_C_UpdateText, CallFunc_MatchesTag_ReturnValue) == 0x000418, "Member 'WI_BaseKillFeedEntry_C_UpdateText::CallFunc_MatchesTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(WI_BaseKillFeedEntry_C_UpdateText, CallFunc_MatchesTag_ReturnValue_1) == 0x000419, "Member 'WI_BaseKillFeedEntry_C_UpdateText::CallFunc_MatchesTag_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WI_BaseKillFeedEntry_C_UpdateText, CallFunc_BooleanOR_ReturnValue) == 0x00041A, "Member 'WI_BaseKillFeedEntry_C_UpdateText::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(WI_BaseKillFeedEntry_C_UpdateText, K2Node_Select_Default_1) == 0x000420, "Member 'WI_BaseKillFeedEntry_C_UpdateText::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(WI_BaseKillFeedEntry_C_UpdateText, CallFunc_MatchesTag_ReturnValue_2) == 0x000430, "Member 'WI_BaseKillFeedEntry_C_UpdateText::CallFunc_MatchesTag_ReturnValue_2' has a wrong offset!");

}

