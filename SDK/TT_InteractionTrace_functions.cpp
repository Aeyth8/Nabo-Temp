#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: TT_InteractionTrace

#include "Basic.hpp"

#include "TT_InteractionTrace_classes.hpp"
#include "TT_InteractionTrace_parameters.hpp"


namespace SDK
{

// Function TT_InteractionTrace.TT_InteractionTrace_C.GetSourceOffset
// (Event, Protected, HasOutParams, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// struct FTargetingRequestHandle          TargetingHandle                                        (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)
// struct FVector                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

struct FVector UTT_InteractionTrace_C::GetSourceOffset(const struct FTargetingRequestHandle& TargetingHandle) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TT_InteractionTrace_C", "GetSourceOffset");

	Params::TT_InteractionTrace_C_GetSourceOffset Parms{};

	Parms.TargetingHandle = std::move(TargetingHandle);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function TT_InteractionTrace.TT_InteractionTrace_C.GetTraceLength
// (Event, Protected, HasOutParams, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// struct FTargetingRequestHandle          TargetingHandle                                        (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

float UTT_InteractionTrace_C::GetTraceLength(const struct FTargetingRequestHandle& TargetingHandle) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TT_InteractionTrace_C", "GetTraceLength");

	Params::TT_InteractionTrace_C_GetTraceLength Parms{};

	Parms.TargetingHandle = std::move(TargetingHandle);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}

}

