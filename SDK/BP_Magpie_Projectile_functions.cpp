#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Magpie_Projectile

#include "Basic.hpp"

#include "BP_Magpie_Projectile_classes.hpp"
#include "BP_Magpie_Projectile_parameters.hpp"


namespace SDK
{

// Function BP_Magpie_Projectile.BP_Magpie_Projectile_C.ApplyKillAssistedEffect
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UAbilitySystemComponent*          TargetASC                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void ABP_Magpie_Projectile_C::ApplyKillAssistedEffect(class UAbilitySystemComponent* TargetASC)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Magpie_Projectile_C", "ApplyKillAssistedEffect");

	Params::BP_Magpie_Projectile_C_ApplyKillAssistedEffect Parms{};

	Parms.TargetASC = TargetASC;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Magpie_Projectile.BP_Magpie_Projectile_C.CheckImpactAbilitySystemComponents
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FHitResult                       Hit                                                    (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
// class FString                           Reason                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// bool                                    Is_Valid                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UAbilitySystemComponent*          Instigator_ASC                                         (Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class UAbilitySystemComponent*          Target_ASC                                             (Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void ABP_Magpie_Projectile_C::CheckImpactAbilitySystemComponents(const struct FHitResult& Hit, const class FString& Reason, bool* Is_Valid, class UAbilitySystemComponent** Instigator_ASC, class UAbilitySystemComponent** Target_ASC)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Magpie_Projectile_C", "CheckImpactAbilitySystemComponents");

	Params::BP_Magpie_Projectile_C_CheckImpactAbilitySystemComponents Parms{};

	Parms.Hit = std::move(Hit);
	Parms.Reason = std::move(Reason);

	UObject::ProcessEvent(Func, &Parms);

	if (Is_Valid != nullptr)
		*Is_Valid = Parms.Is_Valid;

	if (Instigator_ASC != nullptr)
		*Instigator_ASC = Parms.Instigator_ASC;

	if (Target_ASC != nullptr)
		*Target_ASC = Parms.Target_ASC;
}


// Function BP_Magpie_Projectile.BP_Magpie_Projectile_C.DamageAppliedCue
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_Magpie_Projectile_C::DamageAppliedCue()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Magpie_Projectile_C", "DamageAppliedCue");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Magpie_Projectile.BP_Magpie_Projectile_C.DamageTarget
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FHitResult                       Hit                                                    (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
// class UAbilitySystemComponent*          Instigator_Ability_System_Component                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class UAbilitySystemComponent*          Hit_Actor_Ability_System_Component                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void ABP_Magpie_Projectile_C::DamageTarget(const struct FHitResult& Hit, class UAbilitySystemComponent* Instigator_Ability_System_Component, class UAbilitySystemComponent* Hit_Actor_Ability_System_Component)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Magpie_Projectile_C", "DamageTarget");

	Params::BP_Magpie_Projectile_C_DamageTarget Parms{};

	Parms.Hit = std::move(Hit);
	Parms.Instigator_Ability_System_Component = Instigator_Ability_System_Component;
	Parms.Hit_Actor_Ability_System_Component = Hit_Actor_Ability_System_Component;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Magpie_Projectile.BP_Magpie_Projectile_C.DealDamageToTarget
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UAbilitySystemComponent*          InstigatorASC                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class UAbilitySystemComponent*          TargetASC                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void ABP_Magpie_Projectile_C::DealDamageToTarget(class UAbilitySystemComponent* InstigatorASC, class UAbilitySystemComponent* TargetASC)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Magpie_Projectile_C", "DealDamageToTarget");

	Params::BP_Magpie_Projectile_C_DealDamageToTarget Parms{};

	Parms.InstigatorASC = InstigatorASC;
	Parms.TargetASC = TargetASC;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Magpie_Projectile.BP_Magpie_Projectile_C.ExecuteUbergraph_BP_Magpie_Projectile
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Magpie_Projectile_C::ExecuteUbergraph_BP_Magpie_Projectile(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Magpie_Projectile_C", "ExecuteUbergraph_BP_Magpie_Projectile");

	Params::BP_Magpie_Projectile_C_ExecuteUbergraph_BP_Magpie_Projectile Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Magpie_Projectile.BP_Magpie_Projectile_C.FlyBackToNest
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class USceneComponent*                  StartPosition_0                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void ABP_Magpie_Projectile_C::FlyBackToNest(class USceneComponent* StartPosition_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Magpie_Projectile_C", "FlyBackToNest");

	Params::BP_Magpie_Projectile_C_FlyBackToNest Parms{};

	Parms.StartPosition_0 = StartPosition_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Magpie_Projectile.BP_Magpie_Projectile_C.FlyBackUp
// (BlueprintCallable, BlueprintEvent)

void ABP_Magpie_Projectile_C::FlyBackUp()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Magpie_Projectile_C", "FlyBackUp");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Magpie_Projectile.BP_Magpie_Projectile_C.Get Distance To Homing Target Bellow
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// double                                  Threshold                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  Distance                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    IsBellowThreshold                                      (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Magpie_Projectile_C::Get_Distance_To_Homing_Target_Bellow(double Threshold, double* Distance, bool* IsBellowThreshold)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Magpie_Projectile_C", "Get Distance To Homing Target Bellow");

	Params::BP_Magpie_Projectile_C_Get_Distance_To_Homing_Target_Bellow Parms{};

	Parms.Threshold = Threshold;

	UObject::ProcessEvent(Func, &Parms);

	if (Distance != nullptr)
		*Distance = Parms.Distance;

	if (IsBellowThreshold != nullptr)
		*IsBellowThreshold = Parms.IsBellowThreshold;
}


// Function BP_Magpie_Projectile.BP_Magpie_Projectile_C.GetDamage
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// double                                  ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

double ABP_Magpie_Projectile_C::GetDamage()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Magpie_Projectile_C", "GetDamage");

	Params::BP_Magpie_Projectile_C_GetDamage Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_Magpie_Projectile.BP_Magpie_Projectile_C.HasValidAbilitySystemComponent
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Validation_Target                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    LogReason                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FString                           Reason                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class FString                           Target_ASC                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// bool                                    Is_Valid                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UAbilitySystemComponent*          Target_Ability_System_Component                        (Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void ABP_Magpie_Projectile_C::HasValidAbilitySystemComponent(class AActor* Validation_Target, bool LogReason, const class FString& Reason, const class FString& Target_ASC, bool* Is_Valid, class UAbilitySystemComponent** Target_Ability_System_Component)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Magpie_Projectile_C", "HasValidAbilitySystemComponent");

	Params::BP_Magpie_Projectile_C_HasValidAbilitySystemComponent Parms{};

	Parms.Validation_Target = Validation_Target;
	Parms.LogReason = LogReason;
	Parms.Reason = std::move(Reason);
	Parms.Target_ASC = std::move(Target_ASC);

	UObject::ProcessEvent(Func, &Parms);

	if (Is_Valid != nullptr)
		*Is_Valid = Parms.Is_Valid;

	if (Target_Ability_System_Component != nullptr)
		*Target_Ability_System_Component = Parms.Target_Ability_System_Component;
}


// Function BP_Magpie_Projectile.BP_Magpie_Projectile_C.IsSameTeam
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          HitActor                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    Return                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Magpie_Projectile_C::IsSameTeam(class UObject* HitActor, bool* Return)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Magpie_Projectile_C", "IsSameTeam");

	Params::BP_Magpie_Projectile_C_IsSameTeam Parms{};

	Parms.HitActor = HitActor;

	UObject::ProcessEvent(Func, &Parms);

	if (Return != nullptr)
		*Return = Parms.Return;
}


// Function BP_Magpie_Projectile.BP_Magpie_Projectile_C.LogMessage
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FText                             Text                                                   (BlueprintVisible, BlueprintReadOnly, Parm)

void ABP_Magpie_Projectile_C::LogMessage(const class FText& Text)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Magpie_Projectile_C", "LogMessage");

	Params::BP_Magpie_Projectile_C_LogMessage Parms{};

	Parms.Text = std::move(Text);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Magpie_Projectile.BP_Magpie_Projectile_C.OnRep_AttackingState
// (HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_Magpie_Projectile_C::OnRep_AttackingState()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Magpie_Projectile_C", "OnRep_AttackingState");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Magpie_Projectile.BP_Magpie_Projectile_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ABP_Magpie_Projectile_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Magpie_Projectile_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Magpie_Projectile.BP_Magpie_Projectile_C.ReceiveDestroyed
// (Event, Public, BlueprintEvent)

void ABP_Magpie_Projectile_C::ReceiveDestroyed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Magpie_Projectile_C", "ReceiveDestroyed");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Magpie_Projectile.BP_Magpie_Projectile_C.RunBehaviour
// (BlueprintCallable, BlueprintEvent)

void ABP_Magpie_Projectile_C::RunBehaviour()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Magpie_Projectile_C", "RunBehaviour");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Magpie_Projectile.BP_Magpie_Projectile_C.SetNewFollowingTarget
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class USceneComponent*                  Target_Scene_Component                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void ABP_Magpie_Projectile_C::SetNewFollowingTarget(class USceneComponent* Target_Scene_Component)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Magpie_Projectile_C", "SetNewFollowingTarget");

	Params::BP_Magpie_Projectile_C_SetNewFollowingTarget Parms{};

	Parms.Target_Scene_Component = Target_Scene_Component;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Magpie_Projectile.BP_Magpie_Projectile_C.SpawnWingParticles
// (BlueprintCallable, BlueprintEvent)

void ABP_Magpie_Projectile_C::SpawnWingParticles()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Magpie_Projectile_C", "SpawnWingParticles");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Magpie_Projectile.BP_Magpie_Projectile_C.StartAttackPattern
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UAbilitySystemComponent*          InstigatorASC                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class UAbilitySystemComponent*          TargetASC                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void ABP_Magpie_Projectile_C::StartAttackPattern(class UAbilitySystemComponent* InstigatorASC, class UAbilitySystemComponent* TargetASC)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Magpie_Projectile_C", "StartAttackPattern");

	Params::BP_Magpie_Projectile_C_StartAttackPattern Parms{};

	Parms.InstigatorASC = InstigatorASC;
	Parms.TargetASC = TargetASC;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Magpie_Projectile.BP_Magpie_Projectile_C.StartFollowing
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class USceneComponent*                  AttackTarget_0                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void ABP_Magpie_Projectile_C::StartFollowing(class USceneComponent* AttackTarget_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Magpie_Projectile_C", "StartFollowing");

	Params::BP_Magpie_Projectile_C_StartFollowing Parms{};

	Parms.AttackTarget_0 = AttackTarget_0;

	UObject::ProcessEvent(Func, &Parms);
}

}

