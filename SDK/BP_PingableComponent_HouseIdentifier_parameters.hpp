#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_PingableComponent_HouseIdentifier

#include "Basic.hpp"

#include "JP_structs.hpp"


namespace SDK::Params
{

// Function BP_PingableComponent_HouseIdentifier.BP_PingableComponent_HouseIdentifier_C.GetPingDataBP
// 0x02A8 (0x02A8 - 0x0000)
struct BP_PingableComponent_HouseIdentifier_C_GetPingDataBP final
{
public:
	class APlayerControllerJP_Match*              InPC;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FPingData                              ReturnValue;                                       // 0x0008(0x0090)(Parm, OutParm, ReturnParm)
	struct FPingData                              TempData;                                          // 0x0098(0x0090)(Edit, BlueprintVisible)
	TSoftClassPtr<class UClass>                   Temp_softclass_Variable;                           // 0x0128(0x0028)(UObjectWrapper, HasGetValueTypeHash)
	struct FPingData                              CallFunc_GetPingDataBP_ReturnValue;                // 0x0150(0x0090)()
	TSoftClassPtr<class UClass>                   Temp_softclass_Variable_1;                         // 0x01E0(0x0028)(UObjectWrapper, HasGetValueTypeHash)
	class APlayerStateJP_Match*                   K2Node_DynamicCast_AsPlayer_State_JP_Match;        // 0x0208(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0210(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetTeamID_ReturnValue;                    // 0x0211(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETeamType                                     CallFunc_GetTeamTypeFromTeamId_ReturnValue;        // 0x0212(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0213(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_214[0x4];                                      // 0x0214(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0218(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_HouseIdentifier_C*                  K2Node_DynamicCast_AsBP_House_Identifier;          // 0x0220(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0228(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_229[0x7];                                      // 0x0229(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTeam                                  CallFunc_GetTeam_ReturnValue;                      // 0x0230(0x0038)(ConstParm, NoDestructor)
	ETeamType                                     CallFunc_GetTeamTypeFromTeamId_ReturnValue_1;      // 0x0268(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0269(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_26A[0x6];                                      // 0x026A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_SelectText_ReturnValue;                   // 0x0270(0x0010)()
	TSoftClassPtr<class UClass>                   K2Node_Select_Default;                             // 0x0280(0x0028)(UObjectWrapper, HasGetValueTypeHash)
};
static_assert(alignof(BP_PingableComponent_HouseIdentifier_C_GetPingDataBP) == 0x000008, "Wrong alignment on BP_PingableComponent_HouseIdentifier_C_GetPingDataBP");
static_assert(sizeof(BP_PingableComponent_HouseIdentifier_C_GetPingDataBP) == 0x0002A8, "Wrong size on BP_PingableComponent_HouseIdentifier_C_GetPingDataBP");
static_assert(offsetof(BP_PingableComponent_HouseIdentifier_C_GetPingDataBP, InPC) == 0x000000, "Member 'BP_PingableComponent_HouseIdentifier_C_GetPingDataBP::InPC' has a wrong offset!");
static_assert(offsetof(BP_PingableComponent_HouseIdentifier_C_GetPingDataBP, ReturnValue) == 0x000008, "Member 'BP_PingableComponent_HouseIdentifier_C_GetPingDataBP::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PingableComponent_HouseIdentifier_C_GetPingDataBP, TempData) == 0x000098, "Member 'BP_PingableComponent_HouseIdentifier_C_GetPingDataBP::TempData' has a wrong offset!");
static_assert(offsetof(BP_PingableComponent_HouseIdentifier_C_GetPingDataBP, Temp_softclass_Variable) == 0x000128, "Member 'BP_PingableComponent_HouseIdentifier_C_GetPingDataBP::Temp_softclass_Variable' has a wrong offset!");
static_assert(offsetof(BP_PingableComponent_HouseIdentifier_C_GetPingDataBP, CallFunc_GetPingDataBP_ReturnValue) == 0x000150, "Member 'BP_PingableComponent_HouseIdentifier_C_GetPingDataBP::CallFunc_GetPingDataBP_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PingableComponent_HouseIdentifier_C_GetPingDataBP, Temp_softclass_Variable_1) == 0x0001E0, "Member 'BP_PingableComponent_HouseIdentifier_C_GetPingDataBP::Temp_softclass_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_PingableComponent_HouseIdentifier_C_GetPingDataBP, K2Node_DynamicCast_AsPlayer_State_JP_Match) == 0x000208, "Member 'BP_PingableComponent_HouseIdentifier_C_GetPingDataBP::K2Node_DynamicCast_AsPlayer_State_JP_Match' has a wrong offset!");
static_assert(offsetof(BP_PingableComponent_HouseIdentifier_C_GetPingDataBP, K2Node_DynamicCast_bSuccess) == 0x000210, "Member 'BP_PingableComponent_HouseIdentifier_C_GetPingDataBP::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_PingableComponent_HouseIdentifier_C_GetPingDataBP, CallFunc_GetTeamID_ReturnValue) == 0x000211, "Member 'BP_PingableComponent_HouseIdentifier_C_GetPingDataBP::CallFunc_GetTeamID_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PingableComponent_HouseIdentifier_C_GetPingDataBP, CallFunc_GetTeamTypeFromTeamId_ReturnValue) == 0x000212, "Member 'BP_PingableComponent_HouseIdentifier_C_GetPingDataBP::CallFunc_GetTeamTypeFromTeamId_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PingableComponent_HouseIdentifier_C_GetPingDataBP, Temp_bool_Variable) == 0x000213, "Member 'BP_PingableComponent_HouseIdentifier_C_GetPingDataBP::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_PingableComponent_HouseIdentifier_C_GetPingDataBP, CallFunc_GetOwner_ReturnValue) == 0x000218, "Member 'BP_PingableComponent_HouseIdentifier_C_GetPingDataBP::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PingableComponent_HouseIdentifier_C_GetPingDataBP, K2Node_DynamicCast_AsBP_House_Identifier) == 0x000220, "Member 'BP_PingableComponent_HouseIdentifier_C_GetPingDataBP::K2Node_DynamicCast_AsBP_House_Identifier' has a wrong offset!");
static_assert(offsetof(BP_PingableComponent_HouseIdentifier_C_GetPingDataBP, K2Node_DynamicCast_bSuccess_1) == 0x000228, "Member 'BP_PingableComponent_HouseIdentifier_C_GetPingDataBP::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_PingableComponent_HouseIdentifier_C_GetPingDataBP, CallFunc_GetTeam_ReturnValue) == 0x000230, "Member 'BP_PingableComponent_HouseIdentifier_C_GetPingDataBP::CallFunc_GetTeam_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PingableComponent_HouseIdentifier_C_GetPingDataBP, CallFunc_GetTeamTypeFromTeamId_ReturnValue_1) == 0x000268, "Member 'BP_PingableComponent_HouseIdentifier_C_GetPingDataBP::CallFunc_GetTeamTypeFromTeamId_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PingableComponent_HouseIdentifier_C_GetPingDataBP, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000269, "Member 'BP_PingableComponent_HouseIdentifier_C_GetPingDataBP::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PingableComponent_HouseIdentifier_C_GetPingDataBP, CallFunc_SelectText_ReturnValue) == 0x000270, "Member 'BP_PingableComponent_HouseIdentifier_C_GetPingDataBP::CallFunc_SelectText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PingableComponent_HouseIdentifier_C_GetPingDataBP, K2Node_Select_Default) == 0x000280, "Member 'BP_PingableComponent_HouseIdentifier_C_GetPingDataBP::K2Node_Select_Default' has a wrong offset!");

}

