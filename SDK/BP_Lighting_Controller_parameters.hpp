#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Lighting_Controller

#include "Basic.hpp"

#include "E_Lighting_Presets_structs.hpp"
#include "S_Lighting_Preset_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BP_Lighting_Controller.BP_Lighting_Controller_C.Blend to One
// 0x1020 (0x1020 - 0x0000)
struct BP_Lighting_Controller_C_Blend_to_One final
{
public:
	class FName                                   Temp_name_Variable;                                // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_1;                              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_2;                              // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_3;                              // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_4;                              // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_5;                              // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_Lighting_Presets                            Temp_byte_Variable;                                // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   Temp_name_Variable_6;                              // 0x0034(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_7;                              // 0x003C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_8;                              // 0x0044(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_9;                              // 0x004C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_10;                             // 0x0054(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_11;                             // 0x005C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_12;                             // 0x0064(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_Lighting_Presets                            Temp_byte_Variable_1;                              // 0x006C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6D[0x3];                                       // 0x006D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   Temp_name_Variable_13;                             // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_14;                             // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_15;                             // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_16;                             // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_17;                             // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_18;                             // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_19;                             // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_Lighting_Presets                            Temp_byte_Variable_2;                              // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A9[0x3];                                       // 0x00A9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   Temp_name_Variable_20;                             // 0x00AC(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_21;                             // 0x00B4(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_22;                             // 0x00BC(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_23;                             // 0x00C4(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_24;                             // 0x00CC(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_25;                             // 0x00D4(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_26;                             // 0x00DC(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x00E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_Lighting_Presets                            Temp_byte_Variable_3;                              // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F1[0xF];                                       // 0x00F1(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_Lighting_Preset                     CallFunc_GetDataTableRowFromName_OutRow;           // 0x0100(0x0760)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0860(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_861[0xF];                                      // 0x0861(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_Lighting_Preset                     CallFunc_GetDataTableRowFromName_OutRow_1;         // 0x0870(0x0760)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue_1;    // 0x0FD0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_FD1[0x3];                                      // 0x0FD1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_Select_Default;                             // 0x0FD4(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_Select_Default_1;                           // 0x0FDC(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_27;                             // 0x0FE4(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_FEC[0x4];                                      // 0x0FEC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Array_Get_Item;                           // 0x0FF0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0FF8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0FFC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0FFD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_FFE[0x2];                                      // 0x0FFE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_JP_PP_C*                            CallFunc_Array_Get_Item_1;                         // 0x1000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_Select_Default_2;                           // 0x1008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_Select_Default_3;                           // 0x1010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Lighting_Controller_C_Blend_to_One) == 0x000010, "Wrong alignment on BP_Lighting_Controller_C_Blend_to_One");
static_assert(sizeof(BP_Lighting_Controller_C_Blend_to_One) == 0x001020, "Wrong size on BP_Lighting_Controller_C_Blend_to_One");
static_assert(offsetof(BP_Lighting_Controller_C_Blend_to_One, Temp_name_Variable) == 0x000000, "Member 'BP_Lighting_Controller_C_Blend_to_One::Temp_name_Variable' has a wrong offset!");
static_assert(offsetof(BP_Lighting_Controller_C_Blend_to_One, Temp_name_Variable_1) == 0x000008, "Member 'BP_Lighting_Controller_C_Blend_to_One::Temp_name_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_Lighting_Controller_C_Blend_to_One, Temp_name_Variable_2) == 0x000010, "Member 'BP_Lighting_Controller_C_Blend_to_One::Temp_name_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_Lighting_Controller_C_Blend_to_One, Temp_name_Variable_3) == 0x000018, "Member 'BP_Lighting_Controller_C_Blend_to_One::Temp_name_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_Lighting_Controller_C_Blend_to_One, Temp_name_Variable_4) == 0x000020, "Member 'BP_Lighting_Controller_C_Blend_to_One::Temp_name_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_Lighting_Controller_C_Blend_to_One, Temp_name_Variable_5) == 0x000028, "Member 'BP_Lighting_Controller_C_Blend_to_One::Temp_name_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_Lighting_Controller_C_Blend_to_One, Temp_byte_Variable) == 0x000030, "Member 'BP_Lighting_Controller_C_Blend_to_One::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_Lighting_Controller_C_Blend_to_One, Temp_name_Variable_6) == 0x000034, "Member 'BP_Lighting_Controller_C_Blend_to_One::Temp_name_Variable_6' has a wrong offset!");
static_assert(offsetof(BP_Lighting_Controller_C_Blend_to_One, Temp_name_Variable_7) == 0x00003C, "Member 'BP_Lighting_Controller_C_Blend_to_One::Temp_name_Variable_7' has a wrong offset!");
static_assert(offsetof(BP_Lighting_Controller_C_Blend_to_One, Temp_name_Variable_8) == 0x000044, "Member 'BP_Lighting_Controller_C_Blend_to_One::Temp_name_Variable_8' has a wrong offset!");
static_assert(offsetof(BP_Lighting_Controller_C_Blend_to_One, Temp_name_Variable_9) == 0x00004C, "Member 'BP_Lighting_Controller_C_Blend_to_One::Temp_name_Variable_9' has a wrong offset!");
static_assert(offsetof(BP_Lighting_Controller_C_Blend_to_One, Temp_name_Variable_10) == 0x000054, "Member 'BP_Lighting_Controller_C_Blend_to_One::Temp_name_Variable_10' has a wrong offset!");
static_assert(offsetof(BP_Lighting_Controller_C_Blend_to_One, Temp_name_Variable_11) == 0x00005C, "Member 'BP_Lighting_Controller_C_Blend_to_One::Temp_name_Variable_11' has a wrong offset!");
static_assert(offsetof(BP_Lighting_Controller_C_Blend_to_One, Temp_name_Variable_12) == 0x000064, "Member 'BP_Lighting_Controller_C_Blend_to_One::Temp_name_Variable_12' has a wrong offset!");
static_assert(offsetof(BP_Lighting_Controller_C_Blend_to_One, Temp_byte_Variable_1) == 0x00006C, "Member 'BP_Lighting_Controller_C_Blend_to_One::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_Lighting_Controller_C_Blend_to_One, Temp_name_Variable_13) == 0x000070, "Member 'BP_Lighting_Controller_C_Blend_to_One::Temp_name_Variable_13' has a wrong offset!");
static_assert(offsetof(BP_Lighting_Controller_C_Blend_to_One, Temp_name_Variable_14) == 0x000078, "Member 'BP_Lighting_Controller_C_Blend_to_One::Temp_name_Variable_14' has a wrong offset!");
static_assert(offsetof(BP_Lighting_Controller_C_Blend_to_One, Temp_name_Variable_15) == 0x000080, "Member 'BP_Lighting_Controller_C_Blend_to_One::Temp_name_Variable_15' has a wrong offset!");
static_assert(offsetof(BP_Lighting_Controller_C_Blend_to_One, Temp_name_Variable_16) == 0x000088, "Member 'BP_Lighting_Controller_C_Blend_to_One::Temp_name_Variable_16' has a wrong offset!");
static_assert(offsetof(BP_Lighting_Controller_C_Blend_to_One, Temp_name_Variable_17) == 0x000090, "Member 'BP_Lighting_Controller_C_Blend_to_One::Temp_name_Variable_17' has a wrong offset!");
static_assert(offsetof(BP_Lighting_Controller_C_Blend_to_One, Temp_name_Variable_18) == 0x000098, "Member 'BP_Lighting_Controller_C_Blend_to_One::Temp_name_Variable_18' has a wrong offset!");
static_assert(offsetof(BP_Lighting_Controller_C_Blend_to_One, Temp_name_Variable_19) == 0x0000A0, "Member 'BP_Lighting_Controller_C_Blend_to_One::Temp_name_Variable_19' has a wrong offset!");
static_assert(offsetof(BP_Lighting_Controller_C_Blend_to_One, Temp_byte_Variable_2) == 0x0000A8, "Member 'BP_Lighting_Controller_C_Blend_to_One::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_Lighting_Controller_C_Blend_to_One, Temp_name_Variable_20) == 0x0000AC, "Member 'BP_Lighting_Controller_C_Blend_to_One::Temp_name_Variable_20' has a wrong offset!");
static_assert(offsetof(BP_Lighting_Controller_C_Blend_to_One, Temp_name_Variable_21) == 0x0000B4, "Member 'BP_Lighting_Controller_C_Blend_to_One::Temp_name_Variable_21' has a wrong offset!");
static_assert(offsetof(BP_Lighting_Controller_C_Blend_to_One, Temp_name_Variable_22) == 0x0000BC, "Member 'BP_Lighting_Controller_C_Blend_to_One::Temp_name_Variable_22' has a wrong offset!");
static_assert(offsetof(BP_Lighting_Controller_C_Blend_to_One, Temp_name_Variable_23) == 0x0000C4, "Member 'BP_Lighting_Controller_C_Blend_to_One::Temp_name_Variable_23' has a wrong offset!");
static_assert(offsetof(BP_Lighting_Controller_C_Blend_to_One, Temp_name_Variable_24) == 0x0000CC, "Member 'BP_Lighting_Controller_C_Blend_to_One::Temp_name_Variable_24' has a wrong offset!");
static_assert(offsetof(BP_Lighting_Controller_C_Blend_to_One, Temp_name_Variable_25) == 0x0000D4, "Member 'BP_Lighting_Controller_C_Blend_to_One::Temp_name_Variable_25' has a wrong offset!");
static_assert(offsetof(BP_Lighting_Controller_C_Blend_to_One, Temp_name_Variable_26) == 0x0000DC, "Member 'BP_Lighting_Controller_C_Blend_to_One::Temp_name_Variable_26' has a wrong offset!");
static_assert(offsetof(BP_Lighting_Controller_C_Blend_to_One, Temp_int_Array_Index_Variable) == 0x0000E4, "Member 'BP_Lighting_Controller_C_Blend_to_One::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_Lighting_Controller_C_Blend_to_One, Temp_int_Loop_Counter_Variable) == 0x0000E8, "Member 'BP_Lighting_Controller_C_Blend_to_One::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_Lighting_Controller_C_Blend_to_One, CallFunc_Add_IntInt_ReturnValue) == 0x0000EC, "Member 'BP_Lighting_Controller_C_Blend_to_One::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Lighting_Controller_C_Blend_to_One, Temp_byte_Variable_3) == 0x0000F0, "Member 'BP_Lighting_Controller_C_Blend_to_One::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_Lighting_Controller_C_Blend_to_One, CallFunc_GetDataTableRowFromName_OutRow) == 0x000100, "Member 'BP_Lighting_Controller_C_Blend_to_One::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(BP_Lighting_Controller_C_Blend_to_One, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000860, "Member 'BP_Lighting_Controller_C_Blend_to_One::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Lighting_Controller_C_Blend_to_One, CallFunc_GetDataTableRowFromName_OutRow_1) == 0x000870, "Member 'BP_Lighting_Controller_C_Blend_to_One::CallFunc_GetDataTableRowFromName_OutRow_1' has a wrong offset!");
static_assert(offsetof(BP_Lighting_Controller_C_Blend_to_One, CallFunc_GetDataTableRowFromName_ReturnValue_1) == 0x000FD0, "Member 'BP_Lighting_Controller_C_Blend_to_One::CallFunc_GetDataTableRowFromName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Lighting_Controller_C_Blend_to_One, K2Node_Select_Default) == 0x000FD4, "Member 'BP_Lighting_Controller_C_Blend_to_One::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_Lighting_Controller_C_Blend_to_One, K2Node_Select_Default_1) == 0x000FDC, "Member 'BP_Lighting_Controller_C_Blend_to_One::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BP_Lighting_Controller_C_Blend_to_One, Temp_name_Variable_27) == 0x000FE4, "Member 'BP_Lighting_Controller_C_Blend_to_One::Temp_name_Variable_27' has a wrong offset!");
static_assert(offsetof(BP_Lighting_Controller_C_Blend_to_One, CallFunc_Array_Get_Item) == 0x000FF0, "Member 'BP_Lighting_Controller_C_Blend_to_One::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_Lighting_Controller_C_Blend_to_One, CallFunc_Array_Length_ReturnValue) == 0x000FF8, "Member 'BP_Lighting_Controller_C_Blend_to_One::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Lighting_Controller_C_Blend_to_One, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000FFC, "Member 'BP_Lighting_Controller_C_Blend_to_One::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Lighting_Controller_C_Blend_to_One, CallFunc_Less_IntInt_ReturnValue) == 0x000FFD, "Member 'BP_Lighting_Controller_C_Blend_to_One::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Lighting_Controller_C_Blend_to_One, CallFunc_Array_Get_Item_1) == 0x001000, "Member 'BP_Lighting_Controller_C_Blend_to_One::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_Lighting_Controller_C_Blend_to_One, K2Node_Select_Default_2) == 0x001008, "Member 'BP_Lighting_Controller_C_Blend_to_One::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(BP_Lighting_Controller_C_Blend_to_One, K2Node_Select_Default_3) == 0x001010, "Member 'BP_Lighting_Controller_C_Blend_to_One::K2Node_Select_Default_3' has a wrong offset!");

// Function BP_Lighting_Controller.BP_Lighting_Controller_C.BlendBetweenTwo
// 0x1030 (0x1030 - 0x0000)
struct BP_Lighting_Controller_C_BlendBetweenTwo final
{
public:
	class FName                                   Temp_name_Variable;                                // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_1;                              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_2;                              // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_3;                              // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_4;                              // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_Lighting_Presets                            Temp_byte_Variable;                                // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   Temp_name_Variable_5;                              // 0x002C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_6;                              // 0x0034(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_7;                              // 0x003C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_8;                              // 0x0044(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_9;                              // 0x004C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_10;                             // 0x0054(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_11;                             // 0x005C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_Lighting_Presets                            Temp_byte_Variable_1;                              // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_65[0x3];                                       // 0x0065(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   Temp_name_Variable_12;                             // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_13;                             // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_14;                             // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_15;                             // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_16;                             // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_17;                             // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_18;                             // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_Lighting_Presets                            Temp_byte_Variable_2;                              // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A1[0x3];                                       // 0x00A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   Temp_name_Variable_19;                             // 0x00A4(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_20;                             // 0x00AC(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_21;                             // 0x00B4(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_22;                             // 0x00BC(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_23;                             // 0x00C4(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_24;                             // 0x00CC(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_25;                             // 0x00D4(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_Lighting_Presets                            Temp_byte_Variable_3;                              // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E1[0xF];                                       // 0x00E1(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_Lighting_Preset                     CallFunc_GetDataTableRowFromName_OutRow;           // 0x00F0(0x0760)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0850(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_851[0xF];                                      // 0x0851(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_Lighting_Preset                     CallFunc_GetDataTableRowFromName_OutRow_1;         // 0x0860(0x0760)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue_1;    // 0x0FC0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_FC1[0x3];                                      // 0x0FC1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   Temp_name_Variable_26;                             // 0x0FC4(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0FCC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0FD0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_27;                             // 0x0FD4(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_FDC[0x4];                                      // 0x0FDC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_JP_PP_C*                            CallFunc_Array_Get_Item;                           // 0x0FE0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Array_Get_Item_1;                         // 0x0FE8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_Select_Default;                             // 0x0FF0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_DoubleDouble_ReturnValue;    // 0x0FF8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_InRange_FloatFloat_ReturnValue;           // 0x0FF9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_FFA[0x2];                                      // 0x0FFA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0FFC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x1000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1001[0x3];                                     // 0x1001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_Select_Default_1;                           // 0x1004(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_100C[0x4];                                     // 0x100C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_JP_PP_C*                            CallFunc_Array_Get_Item_2;                         // 0x1010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_Select_Default_2;                           // 0x1018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_Select_Default_3;                           // 0x1020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Lighting_Controller_C_BlendBetweenTwo) == 0x000010, "Wrong alignment on BP_Lighting_Controller_C_BlendBetweenTwo");
static_assert(sizeof(BP_Lighting_Controller_C_BlendBetweenTwo) == 0x001030, "Wrong size on BP_Lighting_Controller_C_BlendBetweenTwo");
static_assert(offsetof(BP_Lighting_Controller_C_BlendBetweenTwo, Temp_name_Variable) == 0x000000, "Member 'BP_Lighting_Controller_C_BlendBetweenTwo::Temp_name_Variable' has a wrong offset!");
static_assert(offsetof(BP_Lighting_Controller_C_BlendBetweenTwo, Temp_name_Variable_1) == 0x000008, "Member 'BP_Lighting_Controller_C_BlendBetweenTwo::Temp_name_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_Lighting_Controller_C_BlendBetweenTwo, Temp_name_Variable_2) == 0x000010, "Member 'BP_Lighting_Controller_C_BlendBetweenTwo::Temp_name_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_Lighting_Controller_C_BlendBetweenTwo, Temp_name_Variable_3) == 0x000018, "Member 'BP_Lighting_Controller_C_BlendBetweenTwo::Temp_name_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_Lighting_Controller_C_BlendBetweenTwo, Temp_name_Variable_4) == 0x000020, "Member 'BP_Lighting_Controller_C_BlendBetweenTwo::Temp_name_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_Lighting_Controller_C_BlendBetweenTwo, Temp_byte_Variable) == 0x000028, "Member 'BP_Lighting_Controller_C_BlendBetweenTwo::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_Lighting_Controller_C_BlendBetweenTwo, Temp_name_Variable_5) == 0x00002C, "Member 'BP_Lighting_Controller_C_BlendBetweenTwo::Temp_name_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_Lighting_Controller_C_BlendBetweenTwo, Temp_name_Variable_6) == 0x000034, "Member 'BP_Lighting_Controller_C_BlendBetweenTwo::Temp_name_Variable_6' has a wrong offset!");
static_assert(offsetof(BP_Lighting_Controller_C_BlendBetweenTwo, Temp_name_Variable_7) == 0x00003C, "Member 'BP_Lighting_Controller_C_BlendBetweenTwo::Temp_name_Variable_7' has a wrong offset!");
static_assert(offsetof(BP_Lighting_Controller_C_BlendBetweenTwo, Temp_name_Variable_8) == 0x000044, "Member 'BP_Lighting_Controller_C_BlendBetweenTwo::Temp_name_Variable_8' has a wrong offset!");
static_assert(offsetof(BP_Lighting_Controller_C_BlendBetweenTwo, Temp_name_Variable_9) == 0x00004C, "Member 'BP_Lighting_Controller_C_BlendBetweenTwo::Temp_name_Variable_9' has a wrong offset!");
static_assert(offsetof(BP_Lighting_Controller_C_BlendBetweenTwo, Temp_name_Variable_10) == 0x000054, "Member 'BP_Lighting_Controller_C_BlendBetweenTwo::Temp_name_Variable_10' has a wrong offset!");
static_assert(offsetof(BP_Lighting_Controller_C_BlendBetweenTwo, Temp_name_Variable_11) == 0x00005C, "Member 'BP_Lighting_Controller_C_BlendBetweenTwo::Temp_name_Variable_11' has a wrong offset!");
static_assert(offsetof(BP_Lighting_Controller_C_BlendBetweenTwo, Temp_byte_Variable_1) == 0x000064, "Member 'BP_Lighting_Controller_C_BlendBetweenTwo::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_Lighting_Controller_C_BlendBetweenTwo, Temp_name_Variable_12) == 0x000068, "Member 'BP_Lighting_Controller_C_BlendBetweenTwo::Temp_name_Variable_12' has a wrong offset!");
static_assert(offsetof(BP_Lighting_Controller_C_BlendBetweenTwo, Temp_name_Variable_13) == 0x000070, "Member 'BP_Lighting_Controller_C_BlendBetweenTwo::Temp_name_Variable_13' has a wrong offset!");
static_assert(offsetof(BP_Lighting_Controller_C_BlendBetweenTwo, Temp_name_Variable_14) == 0x000078, "Member 'BP_Lighting_Controller_C_BlendBetweenTwo::Temp_name_Variable_14' has a wrong offset!");
static_assert(offsetof(BP_Lighting_Controller_C_BlendBetweenTwo, Temp_name_Variable_15) == 0x000080, "Member 'BP_Lighting_Controller_C_BlendBetweenTwo::Temp_name_Variable_15' has a wrong offset!");
static_assert(offsetof(BP_Lighting_Controller_C_BlendBetweenTwo, Temp_name_Variable_16) == 0x000088, "Member 'BP_Lighting_Controller_C_BlendBetweenTwo::Temp_name_Variable_16' has a wrong offset!");
static_assert(offsetof(BP_Lighting_Controller_C_BlendBetweenTwo, Temp_name_Variable_17) == 0x000090, "Member 'BP_Lighting_Controller_C_BlendBetweenTwo::Temp_name_Variable_17' has a wrong offset!");
static_assert(offsetof(BP_Lighting_Controller_C_BlendBetweenTwo, Temp_name_Variable_18) == 0x000098, "Member 'BP_Lighting_Controller_C_BlendBetweenTwo::Temp_name_Variable_18' has a wrong offset!");
static_assert(offsetof(BP_Lighting_Controller_C_BlendBetweenTwo, Temp_byte_Variable_2) == 0x0000A0, "Member 'BP_Lighting_Controller_C_BlendBetweenTwo::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_Lighting_Controller_C_BlendBetweenTwo, Temp_name_Variable_19) == 0x0000A4, "Member 'BP_Lighting_Controller_C_BlendBetweenTwo::Temp_name_Variable_19' has a wrong offset!");
static_assert(offsetof(BP_Lighting_Controller_C_BlendBetweenTwo, Temp_name_Variable_20) == 0x0000AC, "Member 'BP_Lighting_Controller_C_BlendBetweenTwo::Temp_name_Variable_20' has a wrong offset!");
static_assert(offsetof(BP_Lighting_Controller_C_BlendBetweenTwo, Temp_name_Variable_21) == 0x0000B4, "Member 'BP_Lighting_Controller_C_BlendBetweenTwo::Temp_name_Variable_21' has a wrong offset!");
static_assert(offsetof(BP_Lighting_Controller_C_BlendBetweenTwo, Temp_name_Variable_22) == 0x0000BC, "Member 'BP_Lighting_Controller_C_BlendBetweenTwo::Temp_name_Variable_22' has a wrong offset!");
static_assert(offsetof(BP_Lighting_Controller_C_BlendBetweenTwo, Temp_name_Variable_23) == 0x0000C4, "Member 'BP_Lighting_Controller_C_BlendBetweenTwo::Temp_name_Variable_23' has a wrong offset!");
static_assert(offsetof(BP_Lighting_Controller_C_BlendBetweenTwo, Temp_name_Variable_24) == 0x0000CC, "Member 'BP_Lighting_Controller_C_BlendBetweenTwo::Temp_name_Variable_24' has a wrong offset!");
static_assert(offsetof(BP_Lighting_Controller_C_BlendBetweenTwo, Temp_name_Variable_25) == 0x0000D4, "Member 'BP_Lighting_Controller_C_BlendBetweenTwo::Temp_name_Variable_25' has a wrong offset!");
static_assert(offsetof(BP_Lighting_Controller_C_BlendBetweenTwo, Temp_int_Array_Index_Variable) == 0x0000DC, "Member 'BP_Lighting_Controller_C_BlendBetweenTwo::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_Lighting_Controller_C_BlendBetweenTwo, Temp_byte_Variable_3) == 0x0000E0, "Member 'BP_Lighting_Controller_C_BlendBetweenTwo::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_Lighting_Controller_C_BlendBetweenTwo, CallFunc_GetDataTableRowFromName_OutRow) == 0x0000F0, "Member 'BP_Lighting_Controller_C_BlendBetweenTwo::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(BP_Lighting_Controller_C_BlendBetweenTwo, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000850, "Member 'BP_Lighting_Controller_C_BlendBetweenTwo::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Lighting_Controller_C_BlendBetweenTwo, CallFunc_GetDataTableRowFromName_OutRow_1) == 0x000860, "Member 'BP_Lighting_Controller_C_BlendBetweenTwo::CallFunc_GetDataTableRowFromName_OutRow_1' has a wrong offset!");
static_assert(offsetof(BP_Lighting_Controller_C_BlendBetweenTwo, CallFunc_GetDataTableRowFromName_ReturnValue_1) == 0x000FC0, "Member 'BP_Lighting_Controller_C_BlendBetweenTwo::CallFunc_GetDataTableRowFromName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Lighting_Controller_C_BlendBetweenTwo, Temp_name_Variable_26) == 0x000FC4, "Member 'BP_Lighting_Controller_C_BlendBetweenTwo::Temp_name_Variable_26' has a wrong offset!");
static_assert(offsetof(BP_Lighting_Controller_C_BlendBetweenTwo, Temp_int_Loop_Counter_Variable) == 0x000FCC, "Member 'BP_Lighting_Controller_C_BlendBetweenTwo::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_Lighting_Controller_C_BlendBetweenTwo, CallFunc_Add_IntInt_ReturnValue) == 0x000FD0, "Member 'BP_Lighting_Controller_C_BlendBetweenTwo::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Lighting_Controller_C_BlendBetweenTwo, Temp_name_Variable_27) == 0x000FD4, "Member 'BP_Lighting_Controller_C_BlendBetweenTwo::Temp_name_Variable_27' has a wrong offset!");
static_assert(offsetof(BP_Lighting_Controller_C_BlendBetweenTwo, CallFunc_Array_Get_Item) == 0x000FE0, "Member 'BP_Lighting_Controller_C_BlendBetweenTwo::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_Lighting_Controller_C_BlendBetweenTwo, CallFunc_Array_Get_Item_1) == 0x000FE8, "Member 'BP_Lighting_Controller_C_BlendBetweenTwo::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_Lighting_Controller_C_BlendBetweenTwo, K2Node_Select_Default) == 0x000FF0, "Member 'BP_Lighting_Controller_C_BlendBetweenTwo::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_Lighting_Controller_C_BlendBetweenTwo, CallFunc_GreaterEqual_DoubleDouble_ReturnValue) == 0x000FF8, "Member 'BP_Lighting_Controller_C_BlendBetweenTwo::CallFunc_GreaterEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Lighting_Controller_C_BlendBetweenTwo, CallFunc_InRange_FloatFloat_ReturnValue) == 0x000FF9, "Member 'BP_Lighting_Controller_C_BlendBetweenTwo::CallFunc_InRange_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Lighting_Controller_C_BlendBetweenTwo, CallFunc_Array_Length_ReturnValue) == 0x000FFC, "Member 'BP_Lighting_Controller_C_BlendBetweenTwo::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Lighting_Controller_C_BlendBetweenTwo, CallFunc_Less_IntInt_ReturnValue) == 0x001000, "Member 'BP_Lighting_Controller_C_BlendBetweenTwo::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Lighting_Controller_C_BlendBetweenTwo, K2Node_Select_Default_1) == 0x001004, "Member 'BP_Lighting_Controller_C_BlendBetweenTwo::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BP_Lighting_Controller_C_BlendBetweenTwo, CallFunc_Array_Get_Item_2) == 0x001010, "Member 'BP_Lighting_Controller_C_BlendBetweenTwo::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(BP_Lighting_Controller_C_BlendBetweenTwo, K2Node_Select_Default_2) == 0x001018, "Member 'BP_Lighting_Controller_C_BlendBetweenTwo::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(BP_Lighting_Controller_C_BlendBetweenTwo, K2Node_Select_Default_3) == 0x001020, "Member 'BP_Lighting_Controller_C_BlendBetweenTwo::K2Node_Select_Default_3' has a wrong offset!");

// Function BP_Lighting_Controller.BP_Lighting_Controller_C.BlendToDefault
// 0x0810 (0x0810 - 0x0000)
struct BP_Lighting_Controller_C_BlendToDefault final
{
public:
	E_Lighting_Presets                            Temp_byte_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   Temp_name_Variable;                                // 0x0004(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_1;                              // 0x000C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_2;                              // 0x0014(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_3;                              // 0x001C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_4;                              // 0x0024(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_5;                              // 0x002C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_6;                              // 0x0034(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_Lighting_Presets                            Temp_byte_Variable_1;                              // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D[0x3];                                       // 0x003D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   Temp_name_Variable_7;                              // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_8;                              // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_9;                              // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_10;                             // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_11;                             // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_12;                             // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_13;                             // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_78[0x8];                                       // 0x0078(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_Lighting_Preset                     CallFunc_GetDataTableRowFromName_OutRow;           // 0x0080(0x0760)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x07E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7E1[0x3];                                      // 0x07E1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_Select_Default;                             // 0x07E4(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_Select_Default_1;                           // 0x07EC(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetLightColor_ReturnValue;                // 0x07F4(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_804[0x4];                                      // 0x0804(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_VariableSet_Source_Skylight_Intensity_ImplicitCast; // 0x0808(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Lighting_Controller_C_BlendToDefault) == 0x000010, "Wrong alignment on BP_Lighting_Controller_C_BlendToDefault");
static_assert(sizeof(BP_Lighting_Controller_C_BlendToDefault) == 0x000810, "Wrong size on BP_Lighting_Controller_C_BlendToDefault");
static_assert(offsetof(BP_Lighting_Controller_C_BlendToDefault, Temp_byte_Variable) == 0x000000, "Member 'BP_Lighting_Controller_C_BlendToDefault::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_Lighting_Controller_C_BlendToDefault, Temp_name_Variable) == 0x000004, "Member 'BP_Lighting_Controller_C_BlendToDefault::Temp_name_Variable' has a wrong offset!");
static_assert(offsetof(BP_Lighting_Controller_C_BlendToDefault, Temp_name_Variable_1) == 0x00000C, "Member 'BP_Lighting_Controller_C_BlendToDefault::Temp_name_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_Lighting_Controller_C_BlendToDefault, Temp_name_Variable_2) == 0x000014, "Member 'BP_Lighting_Controller_C_BlendToDefault::Temp_name_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_Lighting_Controller_C_BlendToDefault, Temp_name_Variable_3) == 0x00001C, "Member 'BP_Lighting_Controller_C_BlendToDefault::Temp_name_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_Lighting_Controller_C_BlendToDefault, Temp_name_Variable_4) == 0x000024, "Member 'BP_Lighting_Controller_C_BlendToDefault::Temp_name_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_Lighting_Controller_C_BlendToDefault, Temp_name_Variable_5) == 0x00002C, "Member 'BP_Lighting_Controller_C_BlendToDefault::Temp_name_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_Lighting_Controller_C_BlendToDefault, Temp_name_Variable_6) == 0x000034, "Member 'BP_Lighting_Controller_C_BlendToDefault::Temp_name_Variable_6' has a wrong offset!");
static_assert(offsetof(BP_Lighting_Controller_C_BlendToDefault, Temp_byte_Variable_1) == 0x00003C, "Member 'BP_Lighting_Controller_C_BlendToDefault::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_Lighting_Controller_C_BlendToDefault, Temp_name_Variable_7) == 0x000040, "Member 'BP_Lighting_Controller_C_BlendToDefault::Temp_name_Variable_7' has a wrong offset!");
static_assert(offsetof(BP_Lighting_Controller_C_BlendToDefault, Temp_name_Variable_8) == 0x000048, "Member 'BP_Lighting_Controller_C_BlendToDefault::Temp_name_Variable_8' has a wrong offset!");
static_assert(offsetof(BP_Lighting_Controller_C_BlendToDefault, Temp_name_Variable_9) == 0x000050, "Member 'BP_Lighting_Controller_C_BlendToDefault::Temp_name_Variable_9' has a wrong offset!");
static_assert(offsetof(BP_Lighting_Controller_C_BlendToDefault, Temp_name_Variable_10) == 0x000058, "Member 'BP_Lighting_Controller_C_BlendToDefault::Temp_name_Variable_10' has a wrong offset!");
static_assert(offsetof(BP_Lighting_Controller_C_BlendToDefault, Temp_name_Variable_11) == 0x000060, "Member 'BP_Lighting_Controller_C_BlendToDefault::Temp_name_Variable_11' has a wrong offset!");
static_assert(offsetof(BP_Lighting_Controller_C_BlendToDefault, Temp_name_Variable_12) == 0x000068, "Member 'BP_Lighting_Controller_C_BlendToDefault::Temp_name_Variable_12' has a wrong offset!");
static_assert(offsetof(BP_Lighting_Controller_C_BlendToDefault, Temp_name_Variable_13) == 0x000070, "Member 'BP_Lighting_Controller_C_BlendToDefault::Temp_name_Variable_13' has a wrong offset!");
static_assert(offsetof(BP_Lighting_Controller_C_BlendToDefault, CallFunc_GetDataTableRowFromName_OutRow) == 0x000080, "Member 'BP_Lighting_Controller_C_BlendToDefault::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(BP_Lighting_Controller_C_BlendToDefault, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x0007E0, "Member 'BP_Lighting_Controller_C_BlendToDefault::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Lighting_Controller_C_BlendToDefault, K2Node_Select_Default) == 0x0007E4, "Member 'BP_Lighting_Controller_C_BlendToDefault::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_Lighting_Controller_C_BlendToDefault, K2Node_Select_Default_1) == 0x0007EC, "Member 'BP_Lighting_Controller_C_BlendToDefault::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BP_Lighting_Controller_C_BlendToDefault, CallFunc_GetLightColor_ReturnValue) == 0x0007F4, "Member 'BP_Lighting_Controller_C_BlendToDefault::CallFunc_GetLightColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Lighting_Controller_C_BlendToDefault, K2Node_VariableSet_Source_Skylight_Intensity_ImplicitCast) == 0x000808, "Member 'BP_Lighting_Controller_C_BlendToDefault::K2Node_VariableSet_Source_Skylight_Intensity_ImplicitCast' has a wrong offset!");

// Function BP_Lighting_Controller.BP_Lighting_Controller_C.CalculateDistanceSingle
// 0x01C8 (0x01C8 - 0x0000)
struct BP_Lighting_Controller_C_CalculateDistanceSingle final
{
public:
	class ABP_JP_PP_C*                            Target;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        Blend;                                             // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0020(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetPlayerViewPoint_Location;              // 0x0038(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_GetPlayerViewPoint_Rotation;              // 0x0050(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_K2_LineTraceComponent_HitLocation;        // 0x0068(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_LineTraceComponent_HitNormal;          // 0x0080(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_K2_LineTraceComponent_BoneName;           // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_LineTraceComponent_OutHit;             // 0x00A0(0x00F8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_LineTraceComponent_ReturnValue;        // 0x0198(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_199[0x7];                                      // 0x0199(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Vector_Distance_ReturnValue;              // 0x01A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x01A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x01B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue;                       // 0x01B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_B_ImplicitCast;       // 0x01C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Lighting_Controller_C_CalculateDistanceSingle) == 0x000008, "Wrong alignment on BP_Lighting_Controller_C_CalculateDistanceSingle");
static_assert(sizeof(BP_Lighting_Controller_C_CalculateDistanceSingle) == 0x0001C8, "Wrong size on BP_Lighting_Controller_C_CalculateDistanceSingle");
static_assert(offsetof(BP_Lighting_Controller_C_CalculateDistanceSingle, Target) == 0x000000, "Member 'BP_Lighting_Controller_C_CalculateDistanceSingle::Target' has a wrong offset!");
static_assert(offsetof(BP_Lighting_Controller_C_CalculateDistanceSingle, Blend) == 0x000008, "Member 'BP_Lighting_Controller_C_CalculateDistanceSingle::Blend' has a wrong offset!");
static_assert(offsetof(BP_Lighting_Controller_C_CalculateDistanceSingle, CallFunc_GetPlayerController_ReturnValue) == 0x000010, "Member 'BP_Lighting_Controller_C_CalculateDistanceSingle::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Lighting_Controller_C_CalculateDistanceSingle, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'BP_Lighting_Controller_C_CalculateDistanceSingle::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Lighting_Controller_C_CalculateDistanceSingle, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000020, "Member 'BP_Lighting_Controller_C_CalculateDistanceSingle::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Lighting_Controller_C_CalculateDistanceSingle, CallFunc_GetPlayerViewPoint_Location) == 0x000038, "Member 'BP_Lighting_Controller_C_CalculateDistanceSingle::CallFunc_GetPlayerViewPoint_Location' has a wrong offset!");
static_assert(offsetof(BP_Lighting_Controller_C_CalculateDistanceSingle, CallFunc_GetPlayerViewPoint_Rotation) == 0x000050, "Member 'BP_Lighting_Controller_C_CalculateDistanceSingle::CallFunc_GetPlayerViewPoint_Rotation' has a wrong offset!");
static_assert(offsetof(BP_Lighting_Controller_C_CalculateDistanceSingle, CallFunc_K2_LineTraceComponent_HitLocation) == 0x000068, "Member 'BP_Lighting_Controller_C_CalculateDistanceSingle::CallFunc_K2_LineTraceComponent_HitLocation' has a wrong offset!");
static_assert(offsetof(BP_Lighting_Controller_C_CalculateDistanceSingle, CallFunc_K2_LineTraceComponent_HitNormal) == 0x000080, "Member 'BP_Lighting_Controller_C_CalculateDistanceSingle::CallFunc_K2_LineTraceComponent_HitNormal' has a wrong offset!");
static_assert(offsetof(BP_Lighting_Controller_C_CalculateDistanceSingle, CallFunc_K2_LineTraceComponent_BoneName) == 0x000098, "Member 'BP_Lighting_Controller_C_CalculateDistanceSingle::CallFunc_K2_LineTraceComponent_BoneName' has a wrong offset!");
static_assert(offsetof(BP_Lighting_Controller_C_CalculateDistanceSingle, CallFunc_K2_LineTraceComponent_OutHit) == 0x0000A0, "Member 'BP_Lighting_Controller_C_CalculateDistanceSingle::CallFunc_K2_LineTraceComponent_OutHit' has a wrong offset!");
static_assert(offsetof(BP_Lighting_Controller_C_CalculateDistanceSingle, CallFunc_K2_LineTraceComponent_ReturnValue) == 0x000198, "Member 'BP_Lighting_Controller_C_CalculateDistanceSingle::CallFunc_K2_LineTraceComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Lighting_Controller_C_CalculateDistanceSingle, CallFunc_Vector_Distance_ReturnValue) == 0x0001A0, "Member 'BP_Lighting_Controller_C_CalculateDistanceSingle::CallFunc_Vector_Distance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Lighting_Controller_C_CalculateDistanceSingle, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x0001A8, "Member 'BP_Lighting_Controller_C_CalculateDistanceSingle::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Lighting_Controller_C_CalculateDistanceSingle, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x0001B0, "Member 'BP_Lighting_Controller_C_CalculateDistanceSingle::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Lighting_Controller_C_CalculateDistanceSingle, CallFunc_FClamp_ReturnValue) == 0x0001B8, "Member 'BP_Lighting_Controller_C_CalculateDistanceSingle::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Lighting_Controller_C_CalculateDistanceSingle, CallFunc_Divide_DoubleDouble_B_ImplicitCast) == 0x0001C0, "Member 'BP_Lighting_Controller_C_CalculateDistanceSingle::CallFunc_Divide_DoubleDouble_B_ImplicitCast' has a wrong offset!");

// Function BP_Lighting_Controller.BP_Lighting_Controller_C.CalculateDistanceToPPs
// 0x01B0 (0x01B0 - 0x0000)
struct BP_Lighting_Controller_C_CalculateDistanceToPPs final
{
public:
	class ABP_JP_PP_C*                            Target;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        Distance;                                          // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0010(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_GetPlayerPawn_ReturnValue;                // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue;                       // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49[0x3];                                       // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0050(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_LineTraceComponent_HitLocation;        // 0x0068(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_LineTraceComponent_HitNormal;          // 0x0080(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_K2_LineTraceComponent_BoneName;           // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_LineTraceComponent_OutHit;             // 0x00A0(0x00F8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_LineTraceComponent_ReturnValue;        // 0x0198(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_199[0x7];                                      // 0x0199(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Vector_Distance_ReturnValue;              // 0x01A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_B_ImplicitCast;       // 0x01A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Lighting_Controller_C_CalculateDistanceToPPs) == 0x000008, "Wrong alignment on BP_Lighting_Controller_C_CalculateDistanceToPPs");
static_assert(sizeof(BP_Lighting_Controller_C_CalculateDistanceToPPs) == 0x0001B0, "Wrong size on BP_Lighting_Controller_C_CalculateDistanceToPPs");
static_assert(offsetof(BP_Lighting_Controller_C_CalculateDistanceToPPs, Target) == 0x000000, "Member 'BP_Lighting_Controller_C_CalculateDistanceToPPs::Target' has a wrong offset!");
static_assert(offsetof(BP_Lighting_Controller_C_CalculateDistanceToPPs, Distance) == 0x000008, "Member 'BP_Lighting_Controller_C_CalculateDistanceToPPs::Distance' has a wrong offset!");
static_assert(offsetof(BP_Lighting_Controller_C_CalculateDistanceToPPs, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000010, "Member 'BP_Lighting_Controller_C_CalculateDistanceToPPs::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Lighting_Controller_C_CalculateDistanceToPPs, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000028, "Member 'BP_Lighting_Controller_C_CalculateDistanceToPPs::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Lighting_Controller_C_CalculateDistanceToPPs, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000030, "Member 'BP_Lighting_Controller_C_CalculateDistanceToPPs::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Lighting_Controller_C_CalculateDistanceToPPs, CallFunc_GetPlayerPawn_ReturnValue) == 0x000038, "Member 'BP_Lighting_Controller_C_CalculateDistanceToPPs::CallFunc_GetPlayerPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Lighting_Controller_C_CalculateDistanceToPPs, CallFunc_FClamp_ReturnValue) == 0x000040, "Member 'BP_Lighting_Controller_C_CalculateDistanceToPPs::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Lighting_Controller_C_CalculateDistanceToPPs, CallFunc_IsValid_ReturnValue) == 0x000048, "Member 'BP_Lighting_Controller_C_CalculateDistanceToPPs::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Lighting_Controller_C_CalculateDistanceToPPs, CallFunc_Array_Add_ReturnValue) == 0x00004C, "Member 'BP_Lighting_Controller_C_CalculateDistanceToPPs::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Lighting_Controller_C_CalculateDistanceToPPs, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000050, "Member 'BP_Lighting_Controller_C_CalculateDistanceToPPs::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Lighting_Controller_C_CalculateDistanceToPPs, CallFunc_K2_LineTraceComponent_HitLocation) == 0x000068, "Member 'BP_Lighting_Controller_C_CalculateDistanceToPPs::CallFunc_K2_LineTraceComponent_HitLocation' has a wrong offset!");
static_assert(offsetof(BP_Lighting_Controller_C_CalculateDistanceToPPs, CallFunc_K2_LineTraceComponent_HitNormal) == 0x000080, "Member 'BP_Lighting_Controller_C_CalculateDistanceToPPs::CallFunc_K2_LineTraceComponent_HitNormal' has a wrong offset!");
static_assert(offsetof(BP_Lighting_Controller_C_CalculateDistanceToPPs, CallFunc_K2_LineTraceComponent_BoneName) == 0x000098, "Member 'BP_Lighting_Controller_C_CalculateDistanceToPPs::CallFunc_K2_LineTraceComponent_BoneName' has a wrong offset!");
static_assert(offsetof(BP_Lighting_Controller_C_CalculateDistanceToPPs, CallFunc_K2_LineTraceComponent_OutHit) == 0x0000A0, "Member 'BP_Lighting_Controller_C_CalculateDistanceToPPs::CallFunc_K2_LineTraceComponent_OutHit' has a wrong offset!");
static_assert(offsetof(BP_Lighting_Controller_C_CalculateDistanceToPPs, CallFunc_K2_LineTraceComponent_ReturnValue) == 0x000198, "Member 'BP_Lighting_Controller_C_CalculateDistanceToPPs::CallFunc_K2_LineTraceComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Lighting_Controller_C_CalculateDistanceToPPs, CallFunc_Vector_Distance_ReturnValue) == 0x0001A0, "Member 'BP_Lighting_Controller_C_CalculateDistanceToPPs::CallFunc_Vector_Distance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Lighting_Controller_C_CalculateDistanceToPPs, CallFunc_Divide_DoubleDouble_B_ImplicitCast) == 0x0001A8, "Member 'BP_Lighting_Controller_C_CalculateDistanceToPPs::CallFunc_Divide_DoubleDouble_B_ImplicitCast' has a wrong offset!");

// Function BP_Lighting_Controller.BP_Lighting_Controller_C.ExecuteUbergraph_BP_Lighting_Controller
// 0x0168 (0x0168 - 0x0000)
struct BP_Lighting_Controller_C_ExecuteUbergraph_BP_Lighting_Controller final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameModeBase*                          CallFunc_GetGameMode_ReturnValue;                  // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_ObjectToString_ReturnValue;          // 0x0010(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Contains_ReturnValue;                     // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable;                       // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable;                 // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x0023(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue_1;          // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_25[0x3];                                       // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ABP_JP_PP_C*>                    CallFunc_GetAllActorsOfClass_OutActors;            // 0x0030(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49[0x3];                                       // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchInteger_CmpSuccess;                   // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59[0x3];                                       // 0x0059(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Array_Get_Item;                           // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_69[0x3];                                       // 0x0069(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_JP_PP_C*                            CallFunc_Array_Get_Item_1;                         // 0x0070(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_JP_PP_C*                            CallFunc_Array_Get_Item_2;                         // 0x0078(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_CalculateDistanceToPPs_Distance;          // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_CalculateDistanceSingle_Blend;            // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_99[0x7];                                       // 0x0099(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_JP_PP_C*                            CallFunc_Array_Get_Item_3;                         // 0x00A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchInteger_CmpSuccess_1;                 // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A9[0x7];                                       // 0x00A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_CalculateDistanceSingle_Blend_1;          // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_JP_PP_C*                            CallFunc_Array_Get_Item_4;                         // 0x00C0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_LinearColorLerp_ReturnValue;              // 0x00C8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_CalculateDistanceSingle_Blend_2;          // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue;                         // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x00F8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLocalPlayerController_ReturnValue;      // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_101[0x3];                                      // 0x0101(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0104(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class ABP_StorePhone_C*>               CallFunc_GetAllActorsOfClass_OutActors_1;          // 0x0108(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x0118(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x011C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11D[0x3];                                      // 0x011D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0120(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0124(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_134[0x4];                                      // 0x0134(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	const class UTweakableData*                   CallFunc_GetTweakableData_ReturnValue;             // 0x0138(0x0008)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0140(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0148(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_149[0x7];                                      // 0x0149(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_A_ImplicitCast;     // 0x0150(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetCubemapBlend_InBlendFraction_ImplicitCast; // 0x0158(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_LinearColorLerp_Alpha_ImplicitCast;       // 0x015C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetIntensity_NewIntensity_ImplicitCast;   // 0x0160(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Lighting_Controller_C_ExecuteUbergraph_BP_Lighting_Controller) == 0x000008, "Wrong alignment on BP_Lighting_Controller_C_ExecuteUbergraph_BP_Lighting_Controller");
static_assert(sizeof(BP_Lighting_Controller_C_ExecuteUbergraph_BP_Lighting_Controller) == 0x000168, "Wrong size on BP_Lighting_Controller_C_ExecuteUbergraph_BP_Lighting_Controller");
static_assert(offsetof(BP_Lighting_Controller_C_ExecuteUbergraph_BP_Lighting_Controller, EntryPoint) == 0x000000, "Member 'BP_Lighting_Controller_C_ExecuteUbergraph_BP_Lighting_Controller::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_Lighting_Controller_C_ExecuteUbergraph_BP_Lighting_Controller, CallFunc_GetGameMode_ReturnValue) == 0x000008, "Member 'BP_Lighting_Controller_C_ExecuteUbergraph_BP_Lighting_Controller::CallFunc_GetGameMode_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Lighting_Controller_C_ExecuteUbergraph_BP_Lighting_Controller, CallFunc_Conv_ObjectToString_ReturnValue) == 0x000010, "Member 'BP_Lighting_Controller_C_ExecuteUbergraph_BP_Lighting_Controller::CallFunc_Conv_ObjectToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Lighting_Controller_C_ExecuteUbergraph_BP_Lighting_Controller, CallFunc_Contains_ReturnValue) == 0x000020, "Member 'BP_Lighting_Controller_C_ExecuteUbergraph_BP_Lighting_Controller::CallFunc_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Lighting_Controller_C_ExecuteUbergraph_BP_Lighting_Controller, Temp_bool_IsClosed_Variable) == 0x000021, "Member 'BP_Lighting_Controller_C_ExecuteUbergraph_BP_Lighting_Controller::Temp_bool_IsClosed_Variable' has a wrong offset!");
static_assert(offsetof(BP_Lighting_Controller_C_ExecuteUbergraph_BP_Lighting_Controller, Temp_bool_Has_Been_Initd_Variable) == 0x000022, "Member 'BP_Lighting_Controller_C_ExecuteUbergraph_BP_Lighting_Controller::Temp_bool_Has_Been_Initd_Variable' has a wrong offset!");
static_assert(offsetof(BP_Lighting_Controller_C_ExecuteUbergraph_BP_Lighting_Controller, CallFunc_IsDedicatedServer_ReturnValue) == 0x000023, "Member 'BP_Lighting_Controller_C_ExecuteUbergraph_BP_Lighting_Controller::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Lighting_Controller_C_ExecuteUbergraph_BP_Lighting_Controller, CallFunc_IsDedicatedServer_ReturnValue_1) == 0x000024, "Member 'BP_Lighting_Controller_C_ExecuteUbergraph_BP_Lighting_Controller::CallFunc_IsDedicatedServer_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Lighting_Controller_C_ExecuteUbergraph_BP_Lighting_Controller, K2Node_Event_DeltaSeconds) == 0x000028, "Member 'BP_Lighting_Controller_C_ExecuteUbergraph_BP_Lighting_Controller::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_Lighting_Controller_C_ExecuteUbergraph_BP_Lighting_Controller, CallFunc_GetAllActorsOfClass_OutActors) == 0x000030, "Member 'BP_Lighting_Controller_C_ExecuteUbergraph_BP_Lighting_Controller::CallFunc_GetAllActorsOfClass_OutActors' has a wrong offset!");
static_assert(offsetof(BP_Lighting_Controller_C_ExecuteUbergraph_BP_Lighting_Controller, CallFunc_Array_Length_ReturnValue) == 0x000040, "Member 'BP_Lighting_Controller_C_ExecuteUbergraph_BP_Lighting_Controller::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Lighting_Controller_C_ExecuteUbergraph_BP_Lighting_Controller, Temp_int_Loop_Counter_Variable) == 0x000044, "Member 'BP_Lighting_Controller_C_ExecuteUbergraph_BP_Lighting_Controller::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_Lighting_Controller_C_ExecuteUbergraph_BP_Lighting_Controller, CallFunc_Less_IntInt_ReturnValue) == 0x000048, "Member 'BP_Lighting_Controller_C_ExecuteUbergraph_BP_Lighting_Controller::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Lighting_Controller_C_ExecuteUbergraph_BP_Lighting_Controller, CallFunc_Array_Length_ReturnValue_1) == 0x00004C, "Member 'BP_Lighting_Controller_C_ExecuteUbergraph_BP_Lighting_Controller::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Lighting_Controller_C_ExecuteUbergraph_BP_Lighting_Controller, CallFunc_Add_IntInt_ReturnValue) == 0x000050, "Member 'BP_Lighting_Controller_C_ExecuteUbergraph_BP_Lighting_Controller::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Lighting_Controller_C_ExecuteUbergraph_BP_Lighting_Controller, CallFunc_Add_IntInt_ReturnValue_1) == 0x000054, "Member 'BP_Lighting_Controller_C_ExecuteUbergraph_BP_Lighting_Controller::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Lighting_Controller_C_ExecuteUbergraph_BP_Lighting_Controller, K2Node_SwitchInteger_CmpSuccess) == 0x000058, "Member 'BP_Lighting_Controller_C_ExecuteUbergraph_BP_Lighting_Controller::K2Node_SwitchInteger_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_Lighting_Controller_C_ExecuteUbergraph_BP_Lighting_Controller, Temp_int_Array_Index_Variable) == 0x00005C, "Member 'BP_Lighting_Controller_C_ExecuteUbergraph_BP_Lighting_Controller::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_Lighting_Controller_C_ExecuteUbergraph_BP_Lighting_Controller, CallFunc_Array_Get_Item) == 0x000060, "Member 'BP_Lighting_Controller_C_ExecuteUbergraph_BP_Lighting_Controller::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_Lighting_Controller_C_ExecuteUbergraph_BP_Lighting_Controller, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000068, "Member 'BP_Lighting_Controller_C_ExecuteUbergraph_BP_Lighting_Controller::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Lighting_Controller_C_ExecuteUbergraph_BP_Lighting_Controller, Temp_int_Array_Index_Variable_1) == 0x00006C, "Member 'BP_Lighting_Controller_C_ExecuteUbergraph_BP_Lighting_Controller::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_Lighting_Controller_C_ExecuteUbergraph_BP_Lighting_Controller, CallFunc_Array_Get_Item_1) == 0x000070, "Member 'BP_Lighting_Controller_C_ExecuteUbergraph_BP_Lighting_Controller::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_Lighting_Controller_C_ExecuteUbergraph_BP_Lighting_Controller, CallFunc_Array_Get_Item_2) == 0x000078, "Member 'BP_Lighting_Controller_C_ExecuteUbergraph_BP_Lighting_Controller::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(BP_Lighting_Controller_C_ExecuteUbergraph_BP_Lighting_Controller, CallFunc_CalculateDistanceToPPs_Distance) == 0x000080, "Member 'BP_Lighting_Controller_C_ExecuteUbergraph_BP_Lighting_Controller::CallFunc_CalculateDistanceToPPs_Distance' has a wrong offset!");
static_assert(offsetof(BP_Lighting_Controller_C_ExecuteUbergraph_BP_Lighting_Controller, CallFunc_CalculateDistanceSingle_Blend) == 0x000088, "Member 'BP_Lighting_Controller_C_ExecuteUbergraph_BP_Lighting_Controller::CallFunc_CalculateDistanceSingle_Blend' has a wrong offset!");
static_assert(offsetof(BP_Lighting_Controller_C_ExecuteUbergraph_BP_Lighting_Controller, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000090, "Member 'BP_Lighting_Controller_C_ExecuteUbergraph_BP_Lighting_Controller::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Lighting_Controller_C_ExecuteUbergraph_BP_Lighting_Controller, CallFunc_Less_DoubleDouble_ReturnValue) == 0x000098, "Member 'BP_Lighting_Controller_C_ExecuteUbergraph_BP_Lighting_Controller::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Lighting_Controller_C_ExecuteUbergraph_BP_Lighting_Controller, CallFunc_Array_Get_Item_3) == 0x0000A0, "Member 'BP_Lighting_Controller_C_ExecuteUbergraph_BP_Lighting_Controller::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(BP_Lighting_Controller_C_ExecuteUbergraph_BP_Lighting_Controller, K2Node_SwitchInteger_CmpSuccess_1) == 0x0000A8, "Member 'BP_Lighting_Controller_C_ExecuteUbergraph_BP_Lighting_Controller::K2Node_SwitchInteger_CmpSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_Lighting_Controller_C_ExecuteUbergraph_BP_Lighting_Controller, CallFunc_CalculateDistanceSingle_Blend_1) == 0x0000B0, "Member 'BP_Lighting_Controller_C_ExecuteUbergraph_BP_Lighting_Controller::CallFunc_CalculateDistanceSingle_Blend_1' has a wrong offset!");
static_assert(offsetof(BP_Lighting_Controller_C_ExecuteUbergraph_BP_Lighting_Controller, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x0000B8, "Member 'BP_Lighting_Controller_C_ExecuteUbergraph_BP_Lighting_Controller::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Lighting_Controller_C_ExecuteUbergraph_BP_Lighting_Controller, CallFunc_Array_Get_Item_4) == 0x0000C0, "Member 'BP_Lighting_Controller_C_ExecuteUbergraph_BP_Lighting_Controller::CallFunc_Array_Get_Item_4' has a wrong offset!");
static_assert(offsetof(BP_Lighting_Controller_C_ExecuteUbergraph_BP_Lighting_Controller, CallFunc_LinearColorLerp_ReturnValue) == 0x0000C8, "Member 'BP_Lighting_Controller_C_ExecuteUbergraph_BP_Lighting_Controller::CallFunc_LinearColorLerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Lighting_Controller_C_ExecuteUbergraph_BP_Lighting_Controller, CallFunc_CalculateDistanceSingle_Blend_2) == 0x0000D8, "Member 'BP_Lighting_Controller_C_ExecuteUbergraph_BP_Lighting_Controller::CallFunc_CalculateDistanceSingle_Blend_2' has a wrong offset!");
static_assert(offsetof(BP_Lighting_Controller_C_ExecuteUbergraph_BP_Lighting_Controller, CallFunc_Add_DoubleDouble_ReturnValue) == 0x0000E0, "Member 'BP_Lighting_Controller_C_ExecuteUbergraph_BP_Lighting_Controller::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Lighting_Controller_C_ExecuteUbergraph_BP_Lighting_Controller, CallFunc_Lerp_ReturnValue) == 0x0000E8, "Member 'BP_Lighting_Controller_C_ExecuteUbergraph_BP_Lighting_Controller::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Lighting_Controller_C_ExecuteUbergraph_BP_Lighting_Controller, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x0000F0, "Member 'BP_Lighting_Controller_C_ExecuteUbergraph_BP_Lighting_Controller::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Lighting_Controller_C_ExecuteUbergraph_BP_Lighting_Controller, CallFunc_GetPlayerController_ReturnValue) == 0x0000F8, "Member 'BP_Lighting_Controller_C_ExecuteUbergraph_BP_Lighting_Controller::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Lighting_Controller_C_ExecuteUbergraph_BP_Lighting_Controller, CallFunc_IsLocalPlayerController_ReturnValue) == 0x000100, "Member 'BP_Lighting_Controller_C_ExecuteUbergraph_BP_Lighting_Controller::CallFunc_IsLocalPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Lighting_Controller_C_ExecuteUbergraph_BP_Lighting_Controller, Temp_int_Loop_Counter_Variable_1) == 0x000104, "Member 'BP_Lighting_Controller_C_ExecuteUbergraph_BP_Lighting_Controller::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_Lighting_Controller_C_ExecuteUbergraph_BP_Lighting_Controller, CallFunc_GetAllActorsOfClass_OutActors_1) == 0x000108, "Member 'BP_Lighting_Controller_C_ExecuteUbergraph_BP_Lighting_Controller::CallFunc_GetAllActorsOfClass_OutActors_1' has a wrong offset!");
static_assert(offsetof(BP_Lighting_Controller_C_ExecuteUbergraph_BP_Lighting_Controller, CallFunc_Array_Length_ReturnValue_2) == 0x000118, "Member 'BP_Lighting_Controller_C_ExecuteUbergraph_BP_Lighting_Controller::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Lighting_Controller_C_ExecuteUbergraph_BP_Lighting_Controller, CallFunc_Less_IntInt_ReturnValue_1) == 0x00011C, "Member 'BP_Lighting_Controller_C_ExecuteUbergraph_BP_Lighting_Controller::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Lighting_Controller_C_ExecuteUbergraph_BP_Lighting_Controller, CallFunc_Add_IntInt_ReturnValue_2) == 0x000120, "Member 'BP_Lighting_Controller_C_ExecuteUbergraph_BP_Lighting_Controller::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Lighting_Controller_C_ExecuteUbergraph_BP_Lighting_Controller, K2Node_CreateDelegate_OutputDelegate) == 0x000124, "Member 'BP_Lighting_Controller_C_ExecuteUbergraph_BP_Lighting_Controller::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_Lighting_Controller_C_ExecuteUbergraph_BP_Lighting_Controller, CallFunc_GetTweakableData_ReturnValue) == 0x000138, "Member 'BP_Lighting_Controller_C_ExecuteUbergraph_BP_Lighting_Controller::CallFunc_GetTweakableData_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Lighting_Controller_C_ExecuteUbergraph_BP_Lighting_Controller, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000140, "Member 'BP_Lighting_Controller_C_ExecuteUbergraph_BP_Lighting_Controller::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Lighting_Controller_C_ExecuteUbergraph_BP_Lighting_Controller, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000148, "Member 'BP_Lighting_Controller_C_ExecuteUbergraph_BP_Lighting_Controller::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Lighting_Controller_C_ExecuteUbergraph_BP_Lighting_Controller, CallFunc_Multiply_DoubleDouble_A_ImplicitCast) == 0x000150, "Member 'BP_Lighting_Controller_C_ExecuteUbergraph_BP_Lighting_Controller::CallFunc_Multiply_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_Lighting_Controller_C_ExecuteUbergraph_BP_Lighting_Controller, CallFunc_SetCubemapBlend_InBlendFraction_ImplicitCast) == 0x000158, "Member 'BP_Lighting_Controller_C_ExecuteUbergraph_BP_Lighting_Controller::CallFunc_SetCubemapBlend_InBlendFraction_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_Lighting_Controller_C_ExecuteUbergraph_BP_Lighting_Controller, CallFunc_LinearColorLerp_Alpha_ImplicitCast) == 0x00015C, "Member 'BP_Lighting_Controller_C_ExecuteUbergraph_BP_Lighting_Controller::CallFunc_LinearColorLerp_Alpha_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_Lighting_Controller_C_ExecuteUbergraph_BP_Lighting_Controller, CallFunc_SetIntensity_NewIntensity_ImplicitCast) == 0x000160, "Member 'BP_Lighting_Controller_C_ExecuteUbergraph_BP_Lighting_Controller::CallFunc_SetIntensity_NewIntensity_ImplicitCast' has a wrong offset!");

// Function BP_Lighting_Controller.BP_Lighting_Controller_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct BP_Lighting_Controller_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Lighting_Controller_C_ReceiveTick) == 0x000004, "Wrong alignment on BP_Lighting_Controller_C_ReceiveTick");
static_assert(sizeof(BP_Lighting_Controller_C_ReceiveTick) == 0x000004, "Wrong size on BP_Lighting_Controller_C_ReceiveTick");
static_assert(offsetof(BP_Lighting_Controller_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'BP_Lighting_Controller_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function BP_Lighting_Controller.BP_Lighting_Controller_C.ReplaceBackgroundBuildingMaterials
// 0x00A0 (0x00A0 - 0x0000)
struct BP_Lighting_Controller_C_ReplaceBackgroundBuildingMaterials final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_Array_Get_Item;                           // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstance*                      CallFunc_Array_Get_Item_1;                         // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51[0x3];                                       // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         CallFunc_GetAllActorsWithTag_OutActors;            // 0x0058(0x0010)(ReferenceParm)
	class UMaterialInstance*                      CallFunc_Array_Get_Item_2;                         // 0x0068(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_Array_Get_Item_3;                         // 0x0070(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7C[0x4];                                       // 0x007C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UStaticMeshComponent*                   CallFunc_GetComponentByClass_ReturnValue;          // 0x0080(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_89[0x7];                                       // 0x0089(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInterface*                     CallFunc_GetMaterial_ReturnValue;                  // 0x0090(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x009C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x009D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Lighting_Controller_C_ReplaceBackgroundBuildingMaterials) == 0x000008, "Wrong alignment on BP_Lighting_Controller_C_ReplaceBackgroundBuildingMaterials");
static_assert(sizeof(BP_Lighting_Controller_C_ReplaceBackgroundBuildingMaterials) == 0x0000A0, "Wrong size on BP_Lighting_Controller_C_ReplaceBackgroundBuildingMaterials");
static_assert(offsetof(BP_Lighting_Controller_C_ReplaceBackgroundBuildingMaterials, Temp_int_Array_Index_Variable) == 0x000000, "Member 'BP_Lighting_Controller_C_ReplaceBackgroundBuildingMaterials::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_Lighting_Controller_C_ReplaceBackgroundBuildingMaterials, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'BP_Lighting_Controller_C_ReplaceBackgroundBuildingMaterials::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_Lighting_Controller_C_ReplaceBackgroundBuildingMaterials, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'BP_Lighting_Controller_C_ReplaceBackgroundBuildingMaterials::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Lighting_Controller_C_ReplaceBackgroundBuildingMaterials, Temp_int_Loop_Counter_Variable_1) == 0x00000C, "Member 'BP_Lighting_Controller_C_ReplaceBackgroundBuildingMaterials::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_Lighting_Controller_C_ReplaceBackgroundBuildingMaterials, CallFunc_Add_IntInt_ReturnValue_1) == 0x000010, "Member 'BP_Lighting_Controller_C_ReplaceBackgroundBuildingMaterials::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Lighting_Controller_C_ReplaceBackgroundBuildingMaterials, Temp_int_Array_Index_Variable_1) == 0x000014, "Member 'BP_Lighting_Controller_C_ReplaceBackgroundBuildingMaterials::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_Lighting_Controller_C_ReplaceBackgroundBuildingMaterials, Temp_int_Loop_Counter_Variable_2) == 0x000018, "Member 'BP_Lighting_Controller_C_ReplaceBackgroundBuildingMaterials::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_Lighting_Controller_C_ReplaceBackgroundBuildingMaterials, CallFunc_Add_IntInt_ReturnValue_2) == 0x00001C, "Member 'BP_Lighting_Controller_C_ReplaceBackgroundBuildingMaterials::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Lighting_Controller_C_ReplaceBackgroundBuildingMaterials, Temp_int_Array_Index_Variable_2) == 0x000020, "Member 'BP_Lighting_Controller_C_ReplaceBackgroundBuildingMaterials::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_Lighting_Controller_C_ReplaceBackgroundBuildingMaterials, CallFunc_Array_Get_Item) == 0x000028, "Member 'BP_Lighting_Controller_C_ReplaceBackgroundBuildingMaterials::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_Lighting_Controller_C_ReplaceBackgroundBuildingMaterials, CallFunc_IsDedicatedServer_ReturnValue) == 0x000030, "Member 'BP_Lighting_Controller_C_ReplaceBackgroundBuildingMaterials::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Lighting_Controller_C_ReplaceBackgroundBuildingMaterials, CallFunc_Array_Get_Item_1) == 0x000038, "Member 'BP_Lighting_Controller_C_ReplaceBackgroundBuildingMaterials::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_Lighting_Controller_C_ReplaceBackgroundBuildingMaterials, CallFunc_Array_Length_ReturnValue) == 0x000040, "Member 'BP_Lighting_Controller_C_ReplaceBackgroundBuildingMaterials::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Lighting_Controller_C_ReplaceBackgroundBuildingMaterials, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x000048, "Member 'BP_Lighting_Controller_C_ReplaceBackgroundBuildingMaterials::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Lighting_Controller_C_ReplaceBackgroundBuildingMaterials, CallFunc_Less_IntInt_ReturnValue) == 0x000050, "Member 'BP_Lighting_Controller_C_ReplaceBackgroundBuildingMaterials::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Lighting_Controller_C_ReplaceBackgroundBuildingMaterials, CallFunc_Array_Add_ReturnValue) == 0x000054, "Member 'BP_Lighting_Controller_C_ReplaceBackgroundBuildingMaterials::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Lighting_Controller_C_ReplaceBackgroundBuildingMaterials, CallFunc_GetAllActorsWithTag_OutActors) == 0x000058, "Member 'BP_Lighting_Controller_C_ReplaceBackgroundBuildingMaterials::CallFunc_GetAllActorsWithTag_OutActors' has a wrong offset!");
static_assert(offsetof(BP_Lighting_Controller_C_ReplaceBackgroundBuildingMaterials, CallFunc_Array_Get_Item_2) == 0x000068, "Member 'BP_Lighting_Controller_C_ReplaceBackgroundBuildingMaterials::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(BP_Lighting_Controller_C_ReplaceBackgroundBuildingMaterials, CallFunc_Array_Get_Item_3) == 0x000070, "Member 'BP_Lighting_Controller_C_ReplaceBackgroundBuildingMaterials::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(BP_Lighting_Controller_C_ReplaceBackgroundBuildingMaterials, CallFunc_Array_Length_ReturnValue_1) == 0x000078, "Member 'BP_Lighting_Controller_C_ReplaceBackgroundBuildingMaterials::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Lighting_Controller_C_ReplaceBackgroundBuildingMaterials, CallFunc_GetComponentByClass_ReturnValue) == 0x000080, "Member 'BP_Lighting_Controller_C_ReplaceBackgroundBuildingMaterials::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Lighting_Controller_C_ReplaceBackgroundBuildingMaterials, CallFunc_Less_IntInt_ReturnValue_1) == 0x000088, "Member 'BP_Lighting_Controller_C_ReplaceBackgroundBuildingMaterials::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Lighting_Controller_C_ReplaceBackgroundBuildingMaterials, CallFunc_GetMaterial_ReturnValue) == 0x000090, "Member 'BP_Lighting_Controller_C_ReplaceBackgroundBuildingMaterials::CallFunc_GetMaterial_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Lighting_Controller_C_ReplaceBackgroundBuildingMaterials, CallFunc_Array_Length_ReturnValue_2) == 0x000098, "Member 'BP_Lighting_Controller_C_ReplaceBackgroundBuildingMaterials::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Lighting_Controller_C_ReplaceBackgroundBuildingMaterials, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x00009C, "Member 'BP_Lighting_Controller_C_ReplaceBackgroundBuildingMaterials::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Lighting_Controller_C_ReplaceBackgroundBuildingMaterials, CallFunc_Less_IntInt_ReturnValue_2) == 0x00009D, "Member 'BP_Lighting_Controller_C_ReplaceBackgroundBuildingMaterials::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");

// Function BP_Lighting_Controller.BP_Lighting_Controller_C.SetLightingSettingsPreview
// 0x07B0 (0x07B0 - 0x0000)
struct BP_Lighting_Controller_C_SetLightingSettingsPreview final
{
public:
	E_Lighting_Presets                            Enumerator;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue; // 0x0008(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue;            // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USceneComponent*                        CallFunc_K2_GetRootComponent_ReturnValue;          // 0x0028(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FS_Lighting_Preset                     CallFunc_GetDataTableRowFromName_OutRow;           // 0x0030(0x0760)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0790(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_791[0x3];                                      // 0x0791(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SetIntensity_NewIntensity_ImplicitCast;   // 0x0794(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetIntensity_NewIntensity_ImplicitCast_1; // 0x0798(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetTemperature_NewTemperature_ImplicitCast; // 0x079C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetIntensity_NewIntensity_ImplicitCast_2; // 0x07A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetTemperature_NewTemperature_ImplicitCast_1; // 0x07A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Lighting_Controller_C_SetLightingSettingsPreview) == 0x000010, "Wrong alignment on BP_Lighting_Controller_C_SetLightingSettingsPreview");
static_assert(sizeof(BP_Lighting_Controller_C_SetLightingSettingsPreview) == 0x0007B0, "Wrong size on BP_Lighting_Controller_C_SetLightingSettingsPreview");
static_assert(offsetof(BP_Lighting_Controller_C_SetLightingSettingsPreview, Enumerator) == 0x000000, "Member 'BP_Lighting_Controller_C_SetLightingSettingsPreview::Enumerator' has a wrong offset!");
static_assert(offsetof(BP_Lighting_Controller_C_SetLightingSettingsPreview, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue) == 0x000008, "Member 'BP_Lighting_Controller_C_SetLightingSettingsPreview::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Lighting_Controller_C_SetLightingSettingsPreview, CallFunc_Conv_StringToName_ReturnValue) == 0x000018, "Member 'BP_Lighting_Controller_C_SetLightingSettingsPreview::CallFunc_Conv_StringToName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Lighting_Controller_C_SetLightingSettingsPreview, CallFunc_Not_PreBool_ReturnValue) == 0x000020, "Member 'BP_Lighting_Controller_C_SetLightingSettingsPreview::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Lighting_Controller_C_SetLightingSettingsPreview, CallFunc_K2_GetRootComponent_ReturnValue) == 0x000028, "Member 'BP_Lighting_Controller_C_SetLightingSettingsPreview::CallFunc_K2_GetRootComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Lighting_Controller_C_SetLightingSettingsPreview, CallFunc_GetDataTableRowFromName_OutRow) == 0x000030, "Member 'BP_Lighting_Controller_C_SetLightingSettingsPreview::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(BP_Lighting_Controller_C_SetLightingSettingsPreview, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000790, "Member 'BP_Lighting_Controller_C_SetLightingSettingsPreview::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Lighting_Controller_C_SetLightingSettingsPreview, CallFunc_SetIntensity_NewIntensity_ImplicitCast) == 0x000794, "Member 'BP_Lighting_Controller_C_SetLightingSettingsPreview::CallFunc_SetIntensity_NewIntensity_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_Lighting_Controller_C_SetLightingSettingsPreview, CallFunc_SetIntensity_NewIntensity_ImplicitCast_1) == 0x000798, "Member 'BP_Lighting_Controller_C_SetLightingSettingsPreview::CallFunc_SetIntensity_NewIntensity_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(BP_Lighting_Controller_C_SetLightingSettingsPreview, CallFunc_SetTemperature_NewTemperature_ImplicitCast) == 0x00079C, "Member 'BP_Lighting_Controller_C_SetLightingSettingsPreview::CallFunc_SetTemperature_NewTemperature_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_Lighting_Controller_C_SetLightingSettingsPreview, CallFunc_SetIntensity_NewIntensity_ImplicitCast_2) == 0x0007A0, "Member 'BP_Lighting_Controller_C_SetLightingSettingsPreview::CallFunc_SetIntensity_NewIntensity_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(BP_Lighting_Controller_C_SetLightingSettingsPreview, CallFunc_SetTemperature_NewTemperature_ImplicitCast_1) == 0x0007A4, "Member 'BP_Lighting_Controller_C_SetLightingSettingsPreview::CallFunc_SetTemperature_NewTemperature_ImplicitCast_1' has a wrong offset!");

// Function BP_Lighting_Controller.BP_Lighting_Controller_C.UpdateAllLightSettings
// 0x16C0 (0x16C0 - 0x0000)
struct BP_Lighting_Controller_C_UpdateAllLightSettings final
{
public:
	bool                                          Day_0;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_Lighting_Presets                            InsideNight;                                       // 0x0001(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_Lighting_Presets                            InsideDay;                                         // 0x0002(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3[0x1];                                        // 0x0003(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue; // 0x0008(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue;            // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_1; // 0x0028(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue_1;          // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44[0xC];                                       // 0x0044(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_Lighting_Preset                     CallFunc_GetDataTableRowFromName_OutRow;           // 0x0050(0x0760)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x07B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7B1[0xF];                                      // 0x07B1(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_Lighting_Preset                     CallFunc_GetDataTableRowFromName_OutRow_1;         // 0x07C0(0x0760)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue_1;    // 0x0F20(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F21[0x7];                                      // 0x0F21(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_JP_PP_C*                            CallFunc_Array_Get_Item;                           // 0x0F28(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0F30(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0F34(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchName_CmpSuccess;                      // 0x0F35(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchName_CmpSuccess_1;                    // 0x0F36(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0F37(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        CallFunc_K2_GetRootComponent_ReturnValue;          // 0x0F38(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FS_Lighting_Preset                     CallFunc_GetDataTableRowFromName_OutRow_2;         // 0x0F40(0x0760)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue_2;    // 0x16A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_16A1[0x3];                                     // 0x16A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SetIntensity_NewIntensity_ImplicitCast;   // 0x16A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetIntensity_NewIntensity_ImplicitCast_1; // 0x16A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetTemperature_NewTemperature_ImplicitCast; // 0x16AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetIntensity_NewIntensity_ImplicitCast_2; // 0x16B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetTemperature_NewTemperature_ImplicitCast_1; // 0x16B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Lighting_Controller_C_UpdateAllLightSettings) == 0x000010, "Wrong alignment on BP_Lighting_Controller_C_UpdateAllLightSettings");
static_assert(sizeof(BP_Lighting_Controller_C_UpdateAllLightSettings) == 0x0016C0, "Wrong size on BP_Lighting_Controller_C_UpdateAllLightSettings");
static_assert(offsetof(BP_Lighting_Controller_C_UpdateAllLightSettings, Day_0) == 0x000000, "Member 'BP_Lighting_Controller_C_UpdateAllLightSettings::Day_0' has a wrong offset!");
static_assert(offsetof(BP_Lighting_Controller_C_UpdateAllLightSettings, InsideNight) == 0x000001, "Member 'BP_Lighting_Controller_C_UpdateAllLightSettings::InsideNight' has a wrong offset!");
static_assert(offsetof(BP_Lighting_Controller_C_UpdateAllLightSettings, InsideDay) == 0x000002, "Member 'BP_Lighting_Controller_C_UpdateAllLightSettings::InsideDay' has a wrong offset!");
static_assert(offsetof(BP_Lighting_Controller_C_UpdateAllLightSettings, Temp_int_Array_Index_Variable) == 0x000004, "Member 'BP_Lighting_Controller_C_UpdateAllLightSettings::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_Lighting_Controller_C_UpdateAllLightSettings, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue) == 0x000008, "Member 'BP_Lighting_Controller_C_UpdateAllLightSettings::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Lighting_Controller_C_UpdateAllLightSettings, CallFunc_Conv_StringToName_ReturnValue) == 0x000018, "Member 'BP_Lighting_Controller_C_UpdateAllLightSettings::CallFunc_Conv_StringToName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Lighting_Controller_C_UpdateAllLightSettings, Temp_int_Loop_Counter_Variable) == 0x000020, "Member 'BP_Lighting_Controller_C_UpdateAllLightSettings::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_Lighting_Controller_C_UpdateAllLightSettings, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_1) == 0x000028, "Member 'BP_Lighting_Controller_C_UpdateAllLightSettings::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Lighting_Controller_C_UpdateAllLightSettings, CallFunc_Conv_StringToName_ReturnValue_1) == 0x000038, "Member 'BP_Lighting_Controller_C_UpdateAllLightSettings::CallFunc_Conv_StringToName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Lighting_Controller_C_UpdateAllLightSettings, CallFunc_Add_IntInt_ReturnValue) == 0x000040, "Member 'BP_Lighting_Controller_C_UpdateAllLightSettings::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Lighting_Controller_C_UpdateAllLightSettings, CallFunc_GetDataTableRowFromName_OutRow) == 0x000050, "Member 'BP_Lighting_Controller_C_UpdateAllLightSettings::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(BP_Lighting_Controller_C_UpdateAllLightSettings, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x0007B0, "Member 'BP_Lighting_Controller_C_UpdateAllLightSettings::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Lighting_Controller_C_UpdateAllLightSettings, CallFunc_GetDataTableRowFromName_OutRow_1) == 0x0007C0, "Member 'BP_Lighting_Controller_C_UpdateAllLightSettings::CallFunc_GetDataTableRowFromName_OutRow_1' has a wrong offset!");
static_assert(offsetof(BP_Lighting_Controller_C_UpdateAllLightSettings, CallFunc_GetDataTableRowFromName_ReturnValue_1) == 0x000F20, "Member 'BP_Lighting_Controller_C_UpdateAllLightSettings::CallFunc_GetDataTableRowFromName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Lighting_Controller_C_UpdateAllLightSettings, CallFunc_Array_Get_Item) == 0x000F28, "Member 'BP_Lighting_Controller_C_UpdateAllLightSettings::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_Lighting_Controller_C_UpdateAllLightSettings, CallFunc_Array_Length_ReturnValue) == 0x000F30, "Member 'BP_Lighting_Controller_C_UpdateAllLightSettings::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Lighting_Controller_C_UpdateAllLightSettings, CallFunc_Less_IntInt_ReturnValue) == 0x000F34, "Member 'BP_Lighting_Controller_C_UpdateAllLightSettings::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Lighting_Controller_C_UpdateAllLightSettings, K2Node_SwitchName_CmpSuccess) == 0x000F35, "Member 'BP_Lighting_Controller_C_UpdateAllLightSettings::K2Node_SwitchName_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_Lighting_Controller_C_UpdateAllLightSettings, K2Node_SwitchName_CmpSuccess_1) == 0x000F36, "Member 'BP_Lighting_Controller_C_UpdateAllLightSettings::K2Node_SwitchName_CmpSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_Lighting_Controller_C_UpdateAllLightSettings, CallFunc_Not_PreBool_ReturnValue) == 0x000F37, "Member 'BP_Lighting_Controller_C_UpdateAllLightSettings::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Lighting_Controller_C_UpdateAllLightSettings, CallFunc_K2_GetRootComponent_ReturnValue) == 0x000F38, "Member 'BP_Lighting_Controller_C_UpdateAllLightSettings::CallFunc_K2_GetRootComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Lighting_Controller_C_UpdateAllLightSettings, CallFunc_GetDataTableRowFromName_OutRow_2) == 0x000F40, "Member 'BP_Lighting_Controller_C_UpdateAllLightSettings::CallFunc_GetDataTableRowFromName_OutRow_2' has a wrong offset!");
static_assert(offsetof(BP_Lighting_Controller_C_UpdateAllLightSettings, CallFunc_GetDataTableRowFromName_ReturnValue_2) == 0x0016A0, "Member 'BP_Lighting_Controller_C_UpdateAllLightSettings::CallFunc_GetDataTableRowFromName_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Lighting_Controller_C_UpdateAllLightSettings, CallFunc_SetIntensity_NewIntensity_ImplicitCast) == 0x0016A4, "Member 'BP_Lighting_Controller_C_UpdateAllLightSettings::CallFunc_SetIntensity_NewIntensity_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_Lighting_Controller_C_UpdateAllLightSettings, CallFunc_SetIntensity_NewIntensity_ImplicitCast_1) == 0x0016A8, "Member 'BP_Lighting_Controller_C_UpdateAllLightSettings::CallFunc_SetIntensity_NewIntensity_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(BP_Lighting_Controller_C_UpdateAllLightSettings, CallFunc_SetTemperature_NewTemperature_ImplicitCast) == 0x0016AC, "Member 'BP_Lighting_Controller_C_UpdateAllLightSettings::CallFunc_SetTemperature_NewTemperature_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_Lighting_Controller_C_UpdateAllLightSettings, CallFunc_SetIntensity_NewIntensity_ImplicitCast_2) == 0x0016B0, "Member 'BP_Lighting_Controller_C_UpdateAllLightSettings::CallFunc_SetIntensity_NewIntensity_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(BP_Lighting_Controller_C_UpdateAllLightSettings, CallFunc_SetTemperature_NewTemperature_ImplicitCast_1) == 0x0016B4, "Member 'BP_Lighting_Controller_C_UpdateAllLightSettings::CallFunc_SetTemperature_NewTemperature_ImplicitCast_1' has a wrong offset!");

// Function BP_Lighting_Controller.BP_Lighting_Controller_C.UpdateCityBuildingLights
// 0x0028 (0x0028 - 0x0000)
struct BP_Lighting_Controller_C_UpdateCityBuildingLights final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_Array_Get_Item;                           // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Lighting_Controller_C_UpdateCityBuildingLights) == 0x000008, "Wrong alignment on BP_Lighting_Controller_C_UpdateCityBuildingLights");
static_assert(sizeof(BP_Lighting_Controller_C_UpdateCityBuildingLights) == 0x000028, "Wrong size on BP_Lighting_Controller_C_UpdateCityBuildingLights");
static_assert(offsetof(BP_Lighting_Controller_C_UpdateCityBuildingLights, Temp_int_Array_Index_Variable) == 0x000000, "Member 'BP_Lighting_Controller_C_UpdateCityBuildingLights::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_Lighting_Controller_C_UpdateCityBuildingLights, CallFunc_IsDedicatedServer_ReturnValue) == 0x000004, "Member 'BP_Lighting_Controller_C_UpdateCityBuildingLights::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Lighting_Controller_C_UpdateCityBuildingLights, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'BP_Lighting_Controller_C_UpdateCityBuildingLights::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_Lighting_Controller_C_UpdateCityBuildingLights, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'BP_Lighting_Controller_C_UpdateCityBuildingLights::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Lighting_Controller_C_UpdateCityBuildingLights, CallFunc_Array_Length_ReturnValue) == 0x000010, "Member 'BP_Lighting_Controller_C_UpdateCityBuildingLights::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Lighting_Controller_C_UpdateCityBuildingLights, CallFunc_Array_Get_Item) == 0x000018, "Member 'BP_Lighting_Controller_C_UpdateCityBuildingLights::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_Lighting_Controller_C_UpdateCityBuildingLights, CallFunc_Less_IntInt_ReturnValue) == 0x000020, "Member 'BP_Lighting_Controller_C_UpdateCityBuildingLights::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

}

