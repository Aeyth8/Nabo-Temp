#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_ReviveStatue

#include "Basic.hpp"

#include "GameplayTags_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "GameplayAbilities_structs.hpp"


namespace SDK::Params
{

// Function BP_ReviveStatue.BP_ReviveStatue_C.AddInitialImpulse
// 0x0030 (0x0030 - 0x0000)
struct BP_ReviveStatue_C_AddInitialImpulse final
{
public:
	struct FVector                                CallFunc_GetActorUpVector_ReturnValue;             // 0x0000(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0018(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ReviveStatue_C_AddInitialImpulse) == 0x000008, "Wrong alignment on BP_ReviveStatue_C_AddInitialImpulse");
static_assert(sizeof(BP_ReviveStatue_C_AddInitialImpulse) == 0x000030, "Wrong size on BP_ReviveStatue_C_AddInitialImpulse");
static_assert(offsetof(BP_ReviveStatue_C_AddInitialImpulse, CallFunc_GetActorUpVector_ReturnValue) == 0x000000, "Member 'BP_ReviveStatue_C_AddInitialImpulse::CallFunc_GetActorUpVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ReviveStatue_C_AddInitialImpulse, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000018, "Member 'BP_ReviveStatue_C_AddInitialImpulse::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");

// Function BP_ReviveStatue.BP_ReviveStatue_C.Auth_SetTeamIDForAssociatedActor
// 0x0040 (0x0040 - 0x0000)
struct BP_ReviveStatue_C_Auth_SetTeamIDForAssociatedActor final
{
public:
	uint8                                         Temp_byte_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class II_CharacterTag_C>     K2Node_DynamicCast_AsI_Character_Tag;              // 0x0008(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           CallFunc_GetCharacterTag_Return;                   // 0x001C(0x0008)(NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class ITeamableInterface>    K2Node_DynamicCast_AsTeamable_Interface;           // 0x0028(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetTeamID_ReturnValue;                    // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ReviveStatue_C_Auth_SetTeamIDForAssociatedActor) == 0x000008, "Wrong alignment on BP_ReviveStatue_C_Auth_SetTeamIDForAssociatedActor");
static_assert(sizeof(BP_ReviveStatue_C_Auth_SetTeamIDForAssociatedActor) == 0x000040, "Wrong size on BP_ReviveStatue_C_Auth_SetTeamIDForAssociatedActor");
static_assert(offsetof(BP_ReviveStatue_C_Auth_SetTeamIDForAssociatedActor, Temp_byte_Variable) == 0x000000, "Member 'BP_ReviveStatue_C_Auth_SetTeamIDForAssociatedActor::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_ReviveStatue_C_Auth_SetTeamIDForAssociatedActor, K2Node_DynamicCast_AsI_Character_Tag) == 0x000008, "Member 'BP_ReviveStatue_C_Auth_SetTeamIDForAssociatedActor::K2Node_DynamicCast_AsI_Character_Tag' has a wrong offset!");
static_assert(offsetof(BP_ReviveStatue_C_Auth_SetTeamIDForAssociatedActor, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_ReviveStatue_C_Auth_SetTeamIDForAssociatedActor::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_ReviveStatue_C_Auth_SetTeamIDForAssociatedActor, CallFunc_GetCharacterTag_Return) == 0x00001C, "Member 'BP_ReviveStatue_C_Auth_SetTeamIDForAssociatedActor::CallFunc_GetCharacterTag_Return' has a wrong offset!");
static_assert(offsetof(BP_ReviveStatue_C_Auth_SetTeamIDForAssociatedActor, K2Node_DynamicCast_AsTeamable_Interface) == 0x000028, "Member 'BP_ReviveStatue_C_Auth_SetTeamIDForAssociatedActor::K2Node_DynamicCast_AsTeamable_Interface' has a wrong offset!");
static_assert(offsetof(BP_ReviveStatue_C_Auth_SetTeamIDForAssociatedActor, K2Node_DynamicCast_bSuccess_1) == 0x000038, "Member 'BP_ReviveStatue_C_Auth_SetTeamIDForAssociatedActor::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_ReviveStatue_C_Auth_SetTeamIDForAssociatedActor, CallFunc_GetTeamID_ReturnValue) == 0x000039, "Member 'BP_ReviveStatue_C_Auth_SetTeamIDForAssociatedActor::CallFunc_GetTeamID_ReturnValue' has a wrong offset!");

// Function BP_ReviveStatue.BP_ReviveStatue_C.DoesLocalPlayerCharacterHaveReviveAbility
// 0x0038 (0x0038 - 0x0000)
struct BP_ReviveStatue_C_DoesLocalPlayerCharacterHaveReviveAbility final
{
public:
	bool                                          Has_Revive_Ability;                                // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_GetPlayerPawn_ReturnValue;                // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_ResidentCharacter_C*                K2Node_DynamicCast_AsBP_Resident_Character;        // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAbilitySystemComponent*                CallFunc_GetAbilitySystemComponent_ReturnValue;    // 0x0020(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UAbilitySystemComponentJP*              K2Node_DynamicCast_AsAbility_System_Component_JP;  // 0x0028(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAnyAbilityWithTag_ReturnValue;         // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ReviveStatue_C_DoesLocalPlayerCharacterHaveReviveAbility) == 0x000008, "Wrong alignment on BP_ReviveStatue_C_DoesLocalPlayerCharacterHaveReviveAbility");
static_assert(sizeof(BP_ReviveStatue_C_DoesLocalPlayerCharacterHaveReviveAbility) == 0x000038, "Wrong size on BP_ReviveStatue_C_DoesLocalPlayerCharacterHaveReviveAbility");
static_assert(offsetof(BP_ReviveStatue_C_DoesLocalPlayerCharacterHaveReviveAbility, Has_Revive_Ability) == 0x000000, "Member 'BP_ReviveStatue_C_DoesLocalPlayerCharacterHaveReviveAbility::Has_Revive_Ability' has a wrong offset!");
static_assert(offsetof(BP_ReviveStatue_C_DoesLocalPlayerCharacterHaveReviveAbility, CallFunc_GetPlayerPawn_ReturnValue) == 0x000008, "Member 'BP_ReviveStatue_C_DoesLocalPlayerCharacterHaveReviveAbility::CallFunc_GetPlayerPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ReviveStatue_C_DoesLocalPlayerCharacterHaveReviveAbility, K2Node_DynamicCast_AsBP_Resident_Character) == 0x000010, "Member 'BP_ReviveStatue_C_DoesLocalPlayerCharacterHaveReviveAbility::K2Node_DynamicCast_AsBP_Resident_Character' has a wrong offset!");
static_assert(offsetof(BP_ReviveStatue_C_DoesLocalPlayerCharacterHaveReviveAbility, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_ReviveStatue_C_DoesLocalPlayerCharacterHaveReviveAbility::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_ReviveStatue_C_DoesLocalPlayerCharacterHaveReviveAbility, CallFunc_GetAbilitySystemComponent_ReturnValue) == 0x000020, "Member 'BP_ReviveStatue_C_DoesLocalPlayerCharacterHaveReviveAbility::CallFunc_GetAbilitySystemComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ReviveStatue_C_DoesLocalPlayerCharacterHaveReviveAbility, K2Node_DynamicCast_AsAbility_System_Component_JP) == 0x000028, "Member 'BP_ReviveStatue_C_DoesLocalPlayerCharacterHaveReviveAbility::K2Node_DynamicCast_AsAbility_System_Component_JP' has a wrong offset!");
static_assert(offsetof(BP_ReviveStatue_C_DoesLocalPlayerCharacterHaveReviveAbility, K2Node_DynamicCast_bSuccess_1) == 0x000030, "Member 'BP_ReviveStatue_C_DoesLocalPlayerCharacterHaveReviveAbility::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_ReviveStatue_C_DoesLocalPlayerCharacterHaveReviveAbility, CallFunc_HasAnyAbilityWithTag_ReturnValue) == 0x000031, "Member 'BP_ReviveStatue_C_DoesLocalPlayerCharacterHaveReviveAbility::CallFunc_HasAnyAbilityWithTag_ReturnValue' has a wrong offset!");

// Function BP_ReviveStatue.BP_ReviveStatue_C.ExecuteUbergraph_BP_ReviveStatue
// 0x00E0 (0x00E0 - 0x0000)
struct BP_ReviveStatue_C_ExecuteUbergraph_BP_ReviveStatue final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_DoesLocalPlayerCharacterHaveReviveAbility_Has_Revive_Ability; // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6[0x2];                                        // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_CustomEvent_DestroyedActor;                 // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue_1;               // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12[0xE];                                       // 0x0012(0x000E)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x0020(0x0060)(ConstParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetGameTimeInSeconds_ReturnValue;         // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x0088(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_91[0x7];                                       // 0x0091(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_ReviveStatue_Explosion_C*           CallFunc_FinishSpawningActor_ReturnValue;          // 0x0098(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ACharacter*                             K2Node_Event_GrippingCharacter;                    // 0x00A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class AActor* DestroyedActor)> K2Node_CreateDelegate_OutputDelegate;              // 0x00A8(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ACharacter*                             K2Node_Event_ReleasingCharacter;                   // 0x00B8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FActiveGameplayEffectHandle            CallFunc_BP_ApplyGameplayEffectToSelf_ReturnValue; // 0x00C0(0x0008)(NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_RemoveActiveEffectsWithTags_ReturnValue;  // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           K2Node_CustomEvent_Selection;                      // 0x00CC(0x0008)(NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ReviveStatue_C_ExecuteUbergraph_BP_ReviveStatue) == 0x000010, "Wrong alignment on BP_ReviveStatue_C_ExecuteUbergraph_BP_ReviveStatue");
static_assert(sizeof(BP_ReviveStatue_C_ExecuteUbergraph_BP_ReviveStatue) == 0x0000E0, "Wrong size on BP_ReviveStatue_C_ExecuteUbergraph_BP_ReviveStatue");
static_assert(offsetof(BP_ReviveStatue_C_ExecuteUbergraph_BP_ReviveStatue, EntryPoint) == 0x000000, "Member 'BP_ReviveStatue_C_ExecuteUbergraph_BP_ReviveStatue::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_ReviveStatue_C_ExecuteUbergraph_BP_ReviveStatue, CallFunc_DoesLocalPlayerCharacterHaveReviveAbility_Has_Revive_Ability) == 0x000004, "Member 'BP_ReviveStatue_C_ExecuteUbergraph_BP_ReviveStatue::CallFunc_DoesLocalPlayerCharacterHaveReviveAbility_Has_Revive_Ability' has a wrong offset!");
static_assert(offsetof(BP_ReviveStatue_C_ExecuteUbergraph_BP_ReviveStatue, CallFunc_HasAuthority_ReturnValue) == 0x000005, "Member 'BP_ReviveStatue_C_ExecuteUbergraph_BP_ReviveStatue::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ReviveStatue_C_ExecuteUbergraph_BP_ReviveStatue, K2Node_CustomEvent_DestroyedActor) == 0x000008, "Member 'BP_ReviveStatue_C_ExecuteUbergraph_BP_ReviveStatue::K2Node_CustomEvent_DestroyedActor' has a wrong offset!");
static_assert(offsetof(BP_ReviveStatue_C_ExecuteUbergraph_BP_ReviveStatue, CallFunc_HasAuthority_ReturnValue_1) == 0x000010, "Member 'BP_ReviveStatue_C_ExecuteUbergraph_BP_ReviveStatue::CallFunc_HasAuthority_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ReviveStatue_C_ExecuteUbergraph_BP_ReviveStatue, CallFunc_IsValid_ReturnValue) == 0x000011, "Member 'BP_ReviveStatue_C_ExecuteUbergraph_BP_ReviveStatue::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ReviveStatue_C_ExecuteUbergraph_BP_ReviveStatue, CallFunc_GetTransform_ReturnValue) == 0x000020, "Member 'BP_ReviveStatue_C_ExecuteUbergraph_BP_ReviveStatue::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ReviveStatue_C_ExecuteUbergraph_BP_ReviveStatue, CallFunc_GetGameTimeInSeconds_ReturnValue) == 0x000080, "Member 'BP_ReviveStatue_C_ExecuteUbergraph_BP_ReviveStatue::CallFunc_GetGameTimeInSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ReviveStatue_C_ExecuteUbergraph_BP_ReviveStatue, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x000088, "Member 'BP_ReviveStatue_C_ExecuteUbergraph_BP_ReviveStatue::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ReviveStatue_C_ExecuteUbergraph_BP_ReviveStatue, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000090, "Member 'BP_ReviveStatue_C_ExecuteUbergraph_BP_ReviveStatue::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ReviveStatue_C_ExecuteUbergraph_BP_ReviveStatue, CallFunc_FinishSpawningActor_ReturnValue) == 0x000098, "Member 'BP_ReviveStatue_C_ExecuteUbergraph_BP_ReviveStatue::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ReviveStatue_C_ExecuteUbergraph_BP_ReviveStatue, K2Node_Event_GrippingCharacter) == 0x0000A0, "Member 'BP_ReviveStatue_C_ExecuteUbergraph_BP_ReviveStatue::K2Node_Event_GrippingCharacter' has a wrong offset!");
static_assert(offsetof(BP_ReviveStatue_C_ExecuteUbergraph_BP_ReviveStatue, K2Node_CreateDelegate_OutputDelegate) == 0x0000A8, "Member 'BP_ReviveStatue_C_ExecuteUbergraph_BP_ReviveStatue::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_ReviveStatue_C_ExecuteUbergraph_BP_ReviveStatue, K2Node_Event_ReleasingCharacter) == 0x0000B8, "Member 'BP_ReviveStatue_C_ExecuteUbergraph_BP_ReviveStatue::K2Node_Event_ReleasingCharacter' has a wrong offset!");
static_assert(offsetof(BP_ReviveStatue_C_ExecuteUbergraph_BP_ReviveStatue, CallFunc_BP_ApplyGameplayEffectToSelf_ReturnValue) == 0x0000C0, "Member 'BP_ReviveStatue_C_ExecuteUbergraph_BP_ReviveStatue::CallFunc_BP_ApplyGameplayEffectToSelf_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ReviveStatue_C_ExecuteUbergraph_BP_ReviveStatue, CallFunc_RemoveActiveEffectsWithTags_ReturnValue) == 0x0000C8, "Member 'BP_ReviveStatue_C_ExecuteUbergraph_BP_ReviveStatue::CallFunc_RemoveActiveEffectsWithTags_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ReviveStatue_C_ExecuteUbergraph_BP_ReviveStatue, K2Node_CustomEvent_Selection) == 0x0000CC, "Member 'BP_ReviveStatue_C_ExecuteUbergraph_BP_ReviveStatue::K2Node_CustomEvent_Selection' has a wrong offset!");

// Function BP_ReviveStatue.BP_ReviveStatue_C.GetTeamID
// 0x0001 (0x0001 - 0x0000)
struct BP_ReviveStatue_C_GetTeamID final
{
public:
	uint8                                         Return;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ReviveStatue_C_GetTeamID) == 0x000001, "Wrong alignment on BP_ReviveStatue_C_GetTeamID");
static_assert(sizeof(BP_ReviveStatue_C_GetTeamID) == 0x000001, "Wrong size on BP_ReviveStatue_C_GetTeamID");
static_assert(offsetof(BP_ReviveStatue_C_GetTeamID, Return) == 0x000000, "Member 'BP_ReviveStatue_C_GetTeamID::Return' has a wrong offset!");

// Function BP_ReviveStatue.BP_ReviveStatue_C.GrippedServer
// 0x0008 (0x0008 - 0x0000)
struct BP_ReviveStatue_C_GrippedServer final
{
public:
	class ACharacter*                             GrippingCharacter;                                 // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ReviveStatue_C_GrippedServer) == 0x000008, "Wrong alignment on BP_ReviveStatue_C_GrippedServer");
static_assert(sizeof(BP_ReviveStatue_C_GrippedServer) == 0x000008, "Wrong size on BP_ReviveStatue_C_GrippedServer");
static_assert(offsetof(BP_ReviveStatue_C_GrippedServer, GrippingCharacter) == 0x000000, "Member 'BP_ReviveStatue_C_GrippedServer::GrippingCharacter' has a wrong offset!");

// Function BP_ReviveStatue.BP_ReviveStatue_C.On_Associated Actor Destroyed
// 0x0008 (0x0008 - 0x0000)
struct BP_ReviveStatue_C_On_Associated_Actor_Destroyed final
{
public:
	class AActor*                                 DestroyedActor;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ReviveStatue_C_On_Associated_Actor_Destroyed) == 0x000008, "Wrong alignment on BP_ReviveStatue_C_On_Associated_Actor_Destroyed");
static_assert(sizeof(BP_ReviveStatue_C_On_Associated_Actor_Destroyed) == 0x000008, "Wrong size on BP_ReviveStatue_C_On_Associated_Actor_Destroyed");
static_assert(offsetof(BP_ReviveStatue_C_On_Associated_Actor_Destroyed, DestroyedActor) == 0x000000, "Member 'BP_ReviveStatue_C_On_Associated_Actor_Destroyed::DestroyedActor' has a wrong offset!");

// Function BP_ReviveStatue.BP_ReviveStatue_C.OnRep_AssociatedActorTeamID
// 0x0030 (0x0030 - 0x0000)
struct BP_ReviveStatue_C_OnRep_AssociatedActorTeamID final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_GetPlayerPawn_ReturnValue;                // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Temp_byte_Variable;                                // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class ITeamableInterface>    K2Node_DynamicCast_AsTeamable_Interface;           // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetTeamID_ReturnValue;                    // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ReviveStatue_C_OnRep_AssociatedActorTeamID) == 0x000008, "Wrong alignment on BP_ReviveStatue_C_OnRep_AssociatedActorTeamID");
static_assert(sizeof(BP_ReviveStatue_C_OnRep_AssociatedActorTeamID) == 0x000030, "Wrong size on BP_ReviveStatue_C_OnRep_AssociatedActorTeamID");
static_assert(offsetof(BP_ReviveStatue_C_OnRep_AssociatedActorTeamID, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'BP_ReviveStatue_C_OnRep_AssociatedActorTeamID::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ReviveStatue_C_OnRep_AssociatedActorTeamID, CallFunc_GetPlayerPawn_ReturnValue) == 0x000008, "Member 'BP_ReviveStatue_C_OnRep_AssociatedActorTeamID::CallFunc_GetPlayerPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ReviveStatue_C_OnRep_AssociatedActorTeamID, Temp_byte_Variable) == 0x000010, "Member 'BP_ReviveStatue_C_OnRep_AssociatedActorTeamID::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_ReviveStatue_C_OnRep_AssociatedActorTeamID, K2Node_DynamicCast_AsTeamable_Interface) == 0x000018, "Member 'BP_ReviveStatue_C_OnRep_AssociatedActorTeamID::K2Node_DynamicCast_AsTeamable_Interface' has a wrong offset!");
static_assert(offsetof(BP_ReviveStatue_C_OnRep_AssociatedActorTeamID, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'BP_ReviveStatue_C_OnRep_AssociatedActorTeamID::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_ReviveStatue_C_OnRep_AssociatedActorTeamID, CallFunc_GetTeamID_ReturnValue) == 0x000029, "Member 'BP_ReviveStatue_C_OnRep_AssociatedActorTeamID::CallFunc_GetTeamID_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ReviveStatue_C_OnRep_AssociatedActorTeamID, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x00002A, "Member 'BP_ReviveStatue_C_OnRep_AssociatedActorTeamID::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function BP_ReviveStatue.BP_ReviveStatue_C.ReleasedServer
// 0x0008 (0x0008 - 0x0000)
struct BP_ReviveStatue_C_ReleasedServer final
{
public:
	class ACharacter*                             ReleasingCharacter;                                // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ReviveStatue_C_ReleasedServer) == 0x000008, "Wrong alignment on BP_ReviveStatue_C_ReleasedServer");
static_assert(sizeof(BP_ReviveStatue_C_ReleasedServer) == 0x000008, "Wrong size on BP_ReviveStatue_C_ReleasedServer");
static_assert(offsetof(BP_ReviveStatue_C_ReleasedServer, ReleasingCharacter) == 0x000000, "Member 'BP_ReviveStatue_C_ReleasedServer::ReleasingCharacter' has a wrong offset!");

// Function BP_ReviveStatue.BP_ReviveStatue_C.ReviveActor
// 0x0038 (0x0038 - 0x0000)
struct BP_ReviveStatue_C_ReviveActor final
{
public:
	struct FVector                                Location;                                          // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Void;                                              // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class II_Revivable_C>        K2Node_DynamicCast_AsI_Revivable;                  // 0x0020(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ReviveActor_Void;                         // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ReviveStatue_C_ReviveActor) == 0x000008, "Wrong alignment on BP_ReviveStatue_C_ReviveActor");
static_assert(sizeof(BP_ReviveStatue_C_ReviveActor) == 0x000038, "Wrong size on BP_ReviveStatue_C_ReviveActor");
static_assert(offsetof(BP_ReviveStatue_C_ReviveActor, Location) == 0x000000, "Member 'BP_ReviveStatue_C_ReviveActor::Location' has a wrong offset!");
static_assert(offsetof(BP_ReviveStatue_C_ReviveActor, Void) == 0x000018, "Member 'BP_ReviveStatue_C_ReviveActor::Void' has a wrong offset!");
static_assert(offsetof(BP_ReviveStatue_C_ReviveActor, K2Node_DynamicCast_AsI_Revivable) == 0x000020, "Member 'BP_ReviveStatue_C_ReviveActor::K2Node_DynamicCast_AsI_Revivable' has a wrong offset!");
static_assert(offsetof(BP_ReviveStatue_C_ReviveActor, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'BP_ReviveStatue_C_ReviveActor::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_ReviveStatue_C_ReviveActor, CallFunc_ReviveActor_Void) == 0x000031, "Member 'BP_ReviveStatue_C_ReviveActor::CallFunc_ReviveActor_Void' has a wrong offset!");

// Function BP_ReviveStatue.BP_ReviveStatue_C.SpecialAbilityStartInteraction
// 0x0001 (0x0001 - 0x0000)
struct BP_ReviveStatue_C_SpecialAbilityStartInteraction final
{
public:
	bool                                          CouldInteract;                                     // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ReviveStatue_C_SpecialAbilityStartInteraction) == 0x000001, "Wrong alignment on BP_ReviveStatue_C_SpecialAbilityStartInteraction");
static_assert(sizeof(BP_ReviveStatue_C_SpecialAbilityStartInteraction) == 0x000001, "Wrong size on BP_ReviveStatue_C_SpecialAbilityStartInteraction");
static_assert(offsetof(BP_ReviveStatue_C_SpecialAbilityStartInteraction, CouldInteract) == 0x000000, "Member 'BP_ReviveStatue_C_SpecialAbilityStartInteraction::CouldInteract' has a wrong offset!");

// Function BP_ReviveStatue.BP_ReviveStatue_C.SpecialAbilityStopInteraction
// 0x0002 (0x0002 - 0x0000)
struct BP_ReviveStatue_C_SpecialAbilityStopInteraction final
{
public:
	bool                                          StoppedInteract;                                   // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_DoesLocalPlayerCharacterHaveReviveAbility_Has_Revive_Ability; // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ReviveStatue_C_SpecialAbilityStopInteraction) == 0x000001, "Wrong alignment on BP_ReviveStatue_C_SpecialAbilityStopInteraction");
static_assert(sizeof(BP_ReviveStatue_C_SpecialAbilityStopInteraction) == 0x000002, "Wrong size on BP_ReviveStatue_C_SpecialAbilityStopInteraction");
static_assert(offsetof(BP_ReviveStatue_C_SpecialAbilityStopInteraction, StoppedInteract) == 0x000000, "Member 'BP_ReviveStatue_C_SpecialAbilityStopInteraction::StoppedInteract' has a wrong offset!");
static_assert(offsetof(BP_ReviveStatue_C_SpecialAbilityStopInteraction, CallFunc_DoesLocalPlayerCharacterHaveReviveAbility_Has_Revive_Ability) == 0x000001, "Member 'BP_ReviveStatue_C_SpecialAbilityStopInteraction::CallFunc_DoesLocalPlayerCharacterHaveReviveAbility_Has_Revive_Ability' has a wrong offset!");

// Function BP_ReviveStatue.BP_ReviveStatue_C.Update Image
// 0x0008 (0x0008 - 0x0000)
struct BP_ReviveStatue_C_Update_Image final
{
public:
	struct FGameplayTag                           Selection;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ReviveStatue_C_Update_Image) == 0x000004, "Wrong alignment on BP_ReviveStatue_C_Update_Image");
static_assert(sizeof(BP_ReviveStatue_C_Update_Image) == 0x000008, "Wrong size on BP_ReviveStatue_C_Update_Image");
static_assert(offsetof(BP_ReviveStatue_C_Update_Image, Selection) == 0x000000, "Member 'BP_ReviveStatue_C_Update_Image::Selection' has a wrong offset!");

}

