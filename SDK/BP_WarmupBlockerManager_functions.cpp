#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_WarmupBlockerManager

#include "Basic.hpp"

#include "BP_WarmupBlockerManager_classes.hpp"
#include "BP_WarmupBlockerManager_parameters.hpp"


namespace SDK
{

// Function BP_WarmupBlockerManager.BP_WarmupBlockerManager_C.CreateWidget
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_WarmupBlockerManager_C::CreateWidget()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_WarmupBlockerManager_C", "CreateWidget");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_WarmupBlockerManager.BP_WarmupBlockerManager_C.DisableWarmup
// (Event, Public, BlueprintEvent)

void ABP_WarmupBlockerManager_C::DisableWarmup()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_WarmupBlockerManager_C", "DisableWarmup");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_WarmupBlockerManager.BP_WarmupBlockerManager_C.ExecuteUbergraph_BP_WarmupBlockerManager
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_WarmupBlockerManager_C::ExecuteUbergraph_BP_WarmupBlockerManager(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_WarmupBlockerManager_C", "ExecuteUbergraph_BP_WarmupBlockerManager");

	Params::BP_WarmupBlockerManager_C_ExecuteUbergraph_BP_WarmupBlockerManager Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_WarmupBlockerManager.BP_WarmupBlockerManager_C.IntroFinished
// (BlueprintCallable, BlueprintEvent)

void ABP_WarmupBlockerManager_C::IntroFinished()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_WarmupBlockerManager_C", "IntroFinished");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_WarmupBlockerManager.BP_WarmupBlockerManager_C.On_WarmupBlockerRemoved__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)

void ABP_WarmupBlockerManager_C::On_WarmupBlockerRemoved__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_WarmupBlockerManager_C", "On_WarmupBlockerRemoved__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_WarmupBlockerManager.BP_WarmupBlockerManager_C.OnRep_IsEnabled
// (HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_WarmupBlockerManager_C::OnRep_IsEnabled()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_WarmupBlockerManager_C", "OnRep_IsEnabled");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_WarmupBlockerManager.BP_WarmupBlockerManager_C.PlayWarmupBlockersAboutToBeRemovedSound
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_WarmupBlockerManager_C::PlayWarmupBlockersAboutToBeRemovedSound()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_WarmupBlockerManager_C", "PlayWarmupBlockersAboutToBeRemovedSound");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_WarmupBlockerManager.BP_WarmupBlockerManager_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ABP_WarmupBlockerManager_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_WarmupBlockerManager_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_WarmupBlockerManager.BP_WarmupBlockerManager_C.ToggleBlocker
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Enabled                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_WarmupBlockerManager_C::ToggleBlocker(int32 Enabled)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_WarmupBlockerManager_C", "ToggleBlocker");

	Params::BP_WarmupBlockerManager_C_ToggleBlocker Parms{};

	Parms.Enabled = Enabled;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_WarmupBlockerManager.BP_WarmupBlockerManager_C.UpdateCollisionAndVisibility
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_WarmupBlockerManager_C::UpdateCollisionAndVisibility()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_WarmupBlockerManager_C", "UpdateCollisionAndVisibility");

	UObject::ProcessEvent(Func, nullptr);
}

}

