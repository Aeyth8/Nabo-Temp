#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WI_Avatar

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "UMG_structs.hpp"
#include "S_AvatarInfo_structs.hpp"


namespace SDK::Params
{

// Function WI_Avatar.WI_Avatar_C.ExecuteUbergraph_WI_Avatar
// 0x0008 (0x0008 - 0x0000)
struct WI_Avatar_C_ExecuteUbergraph_WI_Avatar final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WI_Avatar_C_ExecuteUbergraph_WI_Avatar) == 0x000004, "Wrong alignment on WI_Avatar_C_ExecuteUbergraph_WI_Avatar");
static_assert(sizeof(WI_Avatar_C_ExecuteUbergraph_WI_Avatar) == 0x000008, "Wrong size on WI_Avatar_C_ExecuteUbergraph_WI_Avatar");
static_assert(offsetof(WI_Avatar_C_ExecuteUbergraph_WI_Avatar, EntryPoint) == 0x000000, "Member 'WI_Avatar_C_ExecuteUbergraph_WI_Avatar::EntryPoint' has a wrong offset!");
static_assert(offsetof(WI_Avatar_C_ExecuteUbergraph_WI_Avatar, K2Node_Event_IsDesignTime) == 0x000004, "Member 'WI_Avatar_C_ExecuteUbergraph_WI_Avatar::K2Node_Event_IsDesignTime' has a wrong offset!");

// Function WI_Avatar.WI_Avatar_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct WI_Avatar_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WI_Avatar_C_PreConstruct) == 0x000001, "Wrong alignment on WI_Avatar_C_PreConstruct");
static_assert(sizeof(WI_Avatar_C_PreConstruct) == 0x000001, "Wrong size on WI_Avatar_C_PreConstruct");
static_assert(offsetof(WI_Avatar_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'WI_Avatar_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function WI_Avatar.WI_Avatar_C.SetAvatarInfo
// 0x0068 (0x0068 - 0x0000)
struct WI_Avatar_C_SetAvatarInfo final
{
public:
	struct FS_AvatarInfo                          AvatarInfo;                                        // 0x0000(0x0040)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0040(0x0010)()
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0058(0x0010)()
};
static_assert(alignof(WI_Avatar_C_SetAvatarInfo) == 0x000008, "Wrong alignment on WI_Avatar_C_SetAvatarInfo");
static_assert(sizeof(WI_Avatar_C_SetAvatarInfo) == 0x000068, "Wrong size on WI_Avatar_C_SetAvatarInfo");
static_assert(offsetof(WI_Avatar_C_SetAvatarInfo, AvatarInfo) == 0x000000, "Member 'WI_Avatar_C_SetAvatarInfo::AvatarInfo' has a wrong offset!");
static_assert(offsetof(WI_Avatar_C_SetAvatarInfo, CallFunc_Conv_StringToText_ReturnValue) == 0x000040, "Member 'WI_Avatar_C_SetAvatarInfo::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WI_Avatar_C_SetAvatarInfo, CallFunc_Greater_IntInt_ReturnValue) == 0x000050, "Member 'WI_Avatar_C_SetAvatarInfo::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WI_Avatar_C_SetAvatarInfo, CallFunc_Conv_IntToText_ReturnValue) == 0x000058, "Member 'WI_Avatar_C_SetAvatarInfo::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");

// Function WI_Avatar.WI_Avatar_C.SetBaseColor
// 0x0018 (0x0018 - 0x0000)
struct WI_Avatar_C_SetBaseColor final
{
public:
	struct FSlateColor                            Base_Color_0;                                      // 0x0000(0x0014)(BlueprintVisible, BlueprintReadOnly, Parm)
	bool                                          CallFunc_SetPropertyValueAndBroadcast_ReturnValue; // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WI_Avatar_C_SetBaseColor) == 0x000004, "Wrong alignment on WI_Avatar_C_SetBaseColor");
static_assert(sizeof(WI_Avatar_C_SetBaseColor) == 0x000018, "Wrong size on WI_Avatar_C_SetBaseColor");
static_assert(offsetof(WI_Avatar_C_SetBaseColor, Base_Color_0) == 0x000000, "Member 'WI_Avatar_C_SetBaseColor::Base_Color_0' has a wrong offset!");
static_assert(offsetof(WI_Avatar_C_SetBaseColor, CallFunc_SetPropertyValueAndBroadcast_ReturnValue) == 0x000014, "Member 'WI_Avatar_C_SetBaseColor::CallFunc_SetPropertyValueAndBroadcast_ReturnValue' has a wrong offset!");

// Function WI_Avatar.WI_Avatar_C.SetLevelText
// 0x0010 (0x0010 - 0x0000)
struct WI_Avatar_C_SetLevelText final
{
public:
	class FText                                   LevelText_0;                                       // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(WI_Avatar_C_SetLevelText) == 0x000008, "Wrong alignment on WI_Avatar_C_SetLevelText");
static_assert(sizeof(WI_Avatar_C_SetLevelText) == 0x000010, "Wrong size on WI_Avatar_C_SetLevelText");
static_assert(offsetof(WI_Avatar_C_SetLevelText, LevelText_0) == 0x000000, "Member 'WI_Avatar_C_SetLevelText::LevelText_0' has a wrong offset!");

// Function WI_Avatar.WI_Avatar_C.SetOutlineColor
// 0x0014 (0x0014 - 0x0000)
struct WI_Avatar_C_SetOutlineColor final
{
public:
	struct FSlateColor                            Outline_Color_0;                                   // 0x0000(0x0014)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(WI_Avatar_C_SetOutlineColor) == 0x000004, "Wrong alignment on WI_Avatar_C_SetOutlineColor");
static_assert(sizeof(WI_Avatar_C_SetOutlineColor) == 0x000014, "Wrong size on WI_Avatar_C_SetOutlineColor");
static_assert(offsetof(WI_Avatar_C_SetOutlineColor, Outline_Color_0) == 0x000000, "Member 'WI_Avatar_C_SetOutlineColor::Outline_Color_0' has a wrong offset!");

// Function WI_Avatar.WI_Avatar_C.SetPlayerNameText
// 0x0010 (0x0010 - 0x0000)
struct WI_Avatar_C_SetPlayerNameText final
{
public:
	class FText                                   PlayerNameText_0;                                  // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(WI_Avatar_C_SetPlayerNameText) == 0x000008, "Wrong alignment on WI_Avatar_C_SetPlayerNameText");
static_assert(sizeof(WI_Avatar_C_SetPlayerNameText) == 0x000010, "Wrong size on WI_Avatar_C_SetPlayerNameText");
static_assert(offsetof(WI_Avatar_C_SetPlayerNameText, PlayerNameText_0) == 0x000000, "Member 'WI_Avatar_C_SetPlayerNameText::PlayerNameText_0' has a wrong offset!");

// Function WI_Avatar.WI_Avatar_C.SetPortraitSoftTexture
// 0x0040 (0x0040 - 0x0000)
struct WI_Avatar_C_SetPortraitSoftTexture final
{
public:
	TSoftObjectPtr<class UTexture2D>              Portrait_Soft_Texture_0;                           // 0x0000(0x0028)(BlueprintVisible, BlueprintReadOnly, Parm, UObjectWrapper, HasGetValueTypeHash)
	class UGameUserSettings*                      CallFunc_GetGameUserSettings_ReturnValue;          // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ULyraSettingsLocal*                     K2Node_DynamicCast_AsLyra_Settings_Local;          // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetHidePlayerNames_ReturnValue;           // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WI_Avatar_C_SetPortraitSoftTexture) == 0x000008, "Wrong alignment on WI_Avatar_C_SetPortraitSoftTexture");
static_assert(sizeof(WI_Avatar_C_SetPortraitSoftTexture) == 0x000040, "Wrong size on WI_Avatar_C_SetPortraitSoftTexture");
static_assert(offsetof(WI_Avatar_C_SetPortraitSoftTexture, Portrait_Soft_Texture_0) == 0x000000, "Member 'WI_Avatar_C_SetPortraitSoftTexture::Portrait_Soft_Texture_0' has a wrong offset!");
static_assert(offsetof(WI_Avatar_C_SetPortraitSoftTexture, CallFunc_GetGameUserSettings_ReturnValue) == 0x000028, "Member 'WI_Avatar_C_SetPortraitSoftTexture::CallFunc_GetGameUserSettings_ReturnValue' has a wrong offset!");
static_assert(offsetof(WI_Avatar_C_SetPortraitSoftTexture, K2Node_DynamicCast_AsLyra_Settings_Local) == 0x000030, "Member 'WI_Avatar_C_SetPortraitSoftTexture::K2Node_DynamicCast_AsLyra_Settings_Local' has a wrong offset!");
static_assert(offsetof(WI_Avatar_C_SetPortraitSoftTexture, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'WI_Avatar_C_SetPortraitSoftTexture::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WI_Avatar_C_SetPortraitSoftTexture, CallFunc_GetHidePlayerNames_ReturnValue) == 0x000039, "Member 'WI_Avatar_C_SetPortraitSoftTexture::CallFunc_GetHidePlayerNames_ReturnValue' has a wrong offset!");

// Function WI_Avatar.WI_Avatar_C.SetShowPlayerLevel
// 0x0005 (0x0005 - 0x0000)
struct WI_Avatar_C_SetShowPlayerLevel final
{
public:
	bool                                          ShowPlayerLevel_0;                                 // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WI_Avatar_C_SetShowPlayerLevel) == 0x000001, "Wrong alignment on WI_Avatar_C_SetShowPlayerLevel");
static_assert(sizeof(WI_Avatar_C_SetShowPlayerLevel) == 0x000005, "Wrong size on WI_Avatar_C_SetShowPlayerLevel");
static_assert(offsetof(WI_Avatar_C_SetShowPlayerLevel, ShowPlayerLevel_0) == 0x000000, "Member 'WI_Avatar_C_SetShowPlayerLevel::ShowPlayerLevel_0' has a wrong offset!");
static_assert(offsetof(WI_Avatar_C_SetShowPlayerLevel, Temp_bool_Variable) == 0x000001, "Member 'WI_Avatar_C_SetShowPlayerLevel::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WI_Avatar_C_SetShowPlayerLevel, Temp_byte_Variable) == 0x000002, "Member 'WI_Avatar_C_SetShowPlayerLevel::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WI_Avatar_C_SetShowPlayerLevel, Temp_byte_Variable_1) == 0x000003, "Member 'WI_Avatar_C_SetShowPlayerLevel::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WI_Avatar_C_SetShowPlayerLevel, K2Node_Select_Default) == 0x000004, "Member 'WI_Avatar_C_SetShowPlayerLevel::K2Node_Select_Default' has a wrong offset!");

// Function WI_Avatar.WI_Avatar_C.SetShowPlayerName
// 0x0005 (0x0005 - 0x0000)
struct WI_Avatar_C_SetShowPlayerName final
{
public:
	bool                                          ShowPlayerName_0;                                  // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WI_Avatar_C_SetShowPlayerName) == 0x000001, "Wrong alignment on WI_Avatar_C_SetShowPlayerName");
static_assert(sizeof(WI_Avatar_C_SetShowPlayerName) == 0x000005, "Wrong size on WI_Avatar_C_SetShowPlayerName");
static_assert(offsetof(WI_Avatar_C_SetShowPlayerName, ShowPlayerName_0) == 0x000000, "Member 'WI_Avatar_C_SetShowPlayerName::ShowPlayerName_0' has a wrong offset!");
static_assert(offsetof(WI_Avatar_C_SetShowPlayerName, Temp_bool_Variable) == 0x000001, "Member 'WI_Avatar_C_SetShowPlayerName::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WI_Avatar_C_SetShowPlayerName, Temp_byte_Variable) == 0x000002, "Member 'WI_Avatar_C_SetShowPlayerName::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WI_Avatar_C_SetShowPlayerName, Temp_byte_Variable_1) == 0x000003, "Member 'WI_Avatar_C_SetShowPlayerName::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WI_Avatar_C_SetShowPlayerName, K2Node_Select_Default) == 0x000004, "Member 'WI_Avatar_C_SetShowPlayerName::K2Node_Select_Default' has a wrong offset!");

// Function WI_Avatar.WI_Avatar_C.SetUserAvatarTexture
// 0x0020 (0x0020 - 0x0000)
struct WI_Avatar_C_SetUserAvatarTexture final
{
public:
	class UTexture2D*                             AvatarTexture;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UGameUserSettings*                      CallFunc_GetGameUserSettings_ReturnValue;          // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ULyraSettingsLocal*                     K2Node_DynamicCast_AsLyra_Settings_Local;          // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetHidePlayerNames_ReturnValue;           // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WI_Avatar_C_SetUserAvatarTexture) == 0x000008, "Wrong alignment on WI_Avatar_C_SetUserAvatarTexture");
static_assert(sizeof(WI_Avatar_C_SetUserAvatarTexture) == 0x000020, "Wrong size on WI_Avatar_C_SetUserAvatarTexture");
static_assert(offsetof(WI_Avatar_C_SetUserAvatarTexture, AvatarTexture) == 0x000000, "Member 'WI_Avatar_C_SetUserAvatarTexture::AvatarTexture' has a wrong offset!");
static_assert(offsetof(WI_Avatar_C_SetUserAvatarTexture, CallFunc_GetGameUserSettings_ReturnValue) == 0x000008, "Member 'WI_Avatar_C_SetUserAvatarTexture::CallFunc_GetGameUserSettings_ReturnValue' has a wrong offset!");
static_assert(offsetof(WI_Avatar_C_SetUserAvatarTexture, K2Node_DynamicCast_AsLyra_Settings_Local) == 0x000010, "Member 'WI_Avatar_C_SetUserAvatarTexture::K2Node_DynamicCast_AsLyra_Settings_Local' has a wrong offset!");
static_assert(offsetof(WI_Avatar_C_SetUserAvatarTexture, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'WI_Avatar_C_SetUserAvatarTexture::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WI_Avatar_C_SetUserAvatarTexture, CallFunc_GetHidePlayerNames_ReturnValue) == 0x000019, "Member 'WI_Avatar_C_SetUserAvatarTexture::CallFunc_GetHidePlayerNames_ReturnValue' has a wrong offset!");

}

