#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GCN_Concussed

#include "Basic.hpp"

#include "GameplayAbilities_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function GCN_Concussed.GCN_Concussed_C.EnablePostProcessEffects
// 0x0001 (0x0001 - 0x0000)
struct GCN_Concussed_C_EnablePostProcessEffects final
{
public:
	bool                                          Enable;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GCN_Concussed_C_EnablePostProcessEffects) == 0x000001, "Wrong alignment on GCN_Concussed_C_EnablePostProcessEffects");
static_assert(sizeof(GCN_Concussed_C_EnablePostProcessEffects) == 0x000001, "Wrong size on GCN_Concussed_C_EnablePostProcessEffects");
static_assert(offsetof(GCN_Concussed_C_EnablePostProcessEffects, Enable) == 0x000000, "Member 'GCN_Concussed_C_EnablePostProcessEffects::Enable' has a wrong offset!");

// Function GCN_Concussed.GCN_Concussed_C.ExecuteUbergraph_GCN_Concussed
// 0x0328 (0x0328 - 0x0000)
struct GCN_Concussed_C_ExecuteUbergraph_GCN_Concussed final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Lerp_ReturnValue;                         // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AChameleon_C*                           CallFunc_GetActorOfClass_ReturnValue;              // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_Event_Target;                               // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayCueParameters                 K2Node_Event_Parameters;                           // 0x0020(0x00D8)(ConstParm, ContainsInstancedReference)
	struct FGameplayCueNotify_SpawnResult         K2Node_Event_SpawnResults;                         // 0x00F8(0x0058)(ConstParm, ContainsInstancedReference)
	float                                         CallFunc_BreakGameplayCueParameters_NormalizedMagnitude; // 0x0150(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakGameplayCueParameters_RawMagnitude;  // 0x0154(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayEffectContextHandle           CallFunc_BreakGameplayCueParameters_EffectContext; // 0x0158(0x0018)()
	struct FGameplayTag                           CallFunc_BreakGameplayCueParameters_MatchedTagName; // 0x0170(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           CallFunc_BreakGameplayCueParameters_OriginalTag;   // 0x0178(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FGameplayTagContainer                  CallFunc_BreakGameplayCueParameters_AggregatedSourceTags; // 0x0180(0x0020)()
	struct FGameplayTagContainer                  CallFunc_BreakGameplayCueParameters_AggregatedTargetTags; // 0x01A0(0x0020)()
	struct FVector                                CallFunc_BreakGameplayCueParameters_Location;      // 0x01C0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakGameplayCueParameters_Normal;        // 0x01D8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakGameplayCueParameters_Instigator;    // 0x01F0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakGameplayCueParameters_EffectCauser;  // 0x01F8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_BreakGameplayCueParameters_SourceObject;  // 0x0200(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakGameplayCueParameters_PhysicalMaterial; // 0x0208(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakGameplayCueParameters_GameplayEffectLevel; // 0x0210(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakGameplayCueParameters_AbilityLevel;  // 0x0214(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        CallFunc_BreakGameplayCueParameters_TargetAttachComponent; // 0x0218(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakGameplayCueParameters_bReplicateLocationWhenUsingMinimalRepProxy; // 0x0220(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_221[0x7];                                      // 0x0221(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayCueParameters                 CallFunc_MakeGameplayCueParameters_ReturnValue;    // 0x0228(0x00D8)(ContainsInstancedReference)
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x0300(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_Alpha_ImplicitCast;                  // 0x0308(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_SetFieldsInStruct_VignetteIntensity_ImplicitCast; // 0x0310(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_314[0x4];                                      // 0x0314(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_MapRangeClamped_Value_ImplicitCast;       // 0x0318(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetNewTime_NewTime_ImplicitCast;          // 0x0320(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GCN_Concussed_C_ExecuteUbergraph_GCN_Concussed) == 0x000008, "Wrong alignment on GCN_Concussed_C_ExecuteUbergraph_GCN_Concussed");
static_assert(sizeof(GCN_Concussed_C_ExecuteUbergraph_GCN_Concussed) == 0x000328, "Wrong size on GCN_Concussed_C_ExecuteUbergraph_GCN_Concussed");
static_assert(offsetof(GCN_Concussed_C_ExecuteUbergraph_GCN_Concussed, EntryPoint) == 0x000000, "Member 'GCN_Concussed_C_ExecuteUbergraph_GCN_Concussed::EntryPoint' has a wrong offset!");
static_assert(offsetof(GCN_Concussed_C_ExecuteUbergraph_GCN_Concussed, CallFunc_Lerp_ReturnValue) == 0x000008, "Member 'GCN_Concussed_C_ExecuteUbergraph_GCN_Concussed::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(GCN_Concussed_C_ExecuteUbergraph_GCN_Concussed, CallFunc_GetActorOfClass_ReturnValue) == 0x000010, "Member 'GCN_Concussed_C_ExecuteUbergraph_GCN_Concussed::CallFunc_GetActorOfClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(GCN_Concussed_C_ExecuteUbergraph_GCN_Concussed, K2Node_Event_Target) == 0x000018, "Member 'GCN_Concussed_C_ExecuteUbergraph_GCN_Concussed::K2Node_Event_Target' has a wrong offset!");
static_assert(offsetof(GCN_Concussed_C_ExecuteUbergraph_GCN_Concussed, K2Node_Event_Parameters) == 0x000020, "Member 'GCN_Concussed_C_ExecuteUbergraph_GCN_Concussed::K2Node_Event_Parameters' has a wrong offset!");
static_assert(offsetof(GCN_Concussed_C_ExecuteUbergraph_GCN_Concussed, K2Node_Event_SpawnResults) == 0x0000F8, "Member 'GCN_Concussed_C_ExecuteUbergraph_GCN_Concussed::K2Node_Event_SpawnResults' has a wrong offset!");
static_assert(offsetof(GCN_Concussed_C_ExecuteUbergraph_GCN_Concussed, CallFunc_BreakGameplayCueParameters_NormalizedMagnitude) == 0x000150, "Member 'GCN_Concussed_C_ExecuteUbergraph_GCN_Concussed::CallFunc_BreakGameplayCueParameters_NormalizedMagnitude' has a wrong offset!");
static_assert(offsetof(GCN_Concussed_C_ExecuteUbergraph_GCN_Concussed, CallFunc_BreakGameplayCueParameters_RawMagnitude) == 0x000154, "Member 'GCN_Concussed_C_ExecuteUbergraph_GCN_Concussed::CallFunc_BreakGameplayCueParameters_RawMagnitude' has a wrong offset!");
static_assert(offsetof(GCN_Concussed_C_ExecuteUbergraph_GCN_Concussed, CallFunc_BreakGameplayCueParameters_EffectContext) == 0x000158, "Member 'GCN_Concussed_C_ExecuteUbergraph_GCN_Concussed::CallFunc_BreakGameplayCueParameters_EffectContext' has a wrong offset!");
static_assert(offsetof(GCN_Concussed_C_ExecuteUbergraph_GCN_Concussed, CallFunc_BreakGameplayCueParameters_MatchedTagName) == 0x000170, "Member 'GCN_Concussed_C_ExecuteUbergraph_GCN_Concussed::CallFunc_BreakGameplayCueParameters_MatchedTagName' has a wrong offset!");
static_assert(offsetof(GCN_Concussed_C_ExecuteUbergraph_GCN_Concussed, CallFunc_BreakGameplayCueParameters_OriginalTag) == 0x000178, "Member 'GCN_Concussed_C_ExecuteUbergraph_GCN_Concussed::CallFunc_BreakGameplayCueParameters_OriginalTag' has a wrong offset!");
static_assert(offsetof(GCN_Concussed_C_ExecuteUbergraph_GCN_Concussed, CallFunc_BreakGameplayCueParameters_AggregatedSourceTags) == 0x000180, "Member 'GCN_Concussed_C_ExecuteUbergraph_GCN_Concussed::CallFunc_BreakGameplayCueParameters_AggregatedSourceTags' has a wrong offset!");
static_assert(offsetof(GCN_Concussed_C_ExecuteUbergraph_GCN_Concussed, CallFunc_BreakGameplayCueParameters_AggregatedTargetTags) == 0x0001A0, "Member 'GCN_Concussed_C_ExecuteUbergraph_GCN_Concussed::CallFunc_BreakGameplayCueParameters_AggregatedTargetTags' has a wrong offset!");
static_assert(offsetof(GCN_Concussed_C_ExecuteUbergraph_GCN_Concussed, CallFunc_BreakGameplayCueParameters_Location) == 0x0001C0, "Member 'GCN_Concussed_C_ExecuteUbergraph_GCN_Concussed::CallFunc_BreakGameplayCueParameters_Location' has a wrong offset!");
static_assert(offsetof(GCN_Concussed_C_ExecuteUbergraph_GCN_Concussed, CallFunc_BreakGameplayCueParameters_Normal) == 0x0001D8, "Member 'GCN_Concussed_C_ExecuteUbergraph_GCN_Concussed::CallFunc_BreakGameplayCueParameters_Normal' has a wrong offset!");
static_assert(offsetof(GCN_Concussed_C_ExecuteUbergraph_GCN_Concussed, CallFunc_BreakGameplayCueParameters_Instigator) == 0x0001F0, "Member 'GCN_Concussed_C_ExecuteUbergraph_GCN_Concussed::CallFunc_BreakGameplayCueParameters_Instigator' has a wrong offset!");
static_assert(offsetof(GCN_Concussed_C_ExecuteUbergraph_GCN_Concussed, CallFunc_BreakGameplayCueParameters_EffectCauser) == 0x0001F8, "Member 'GCN_Concussed_C_ExecuteUbergraph_GCN_Concussed::CallFunc_BreakGameplayCueParameters_EffectCauser' has a wrong offset!");
static_assert(offsetof(GCN_Concussed_C_ExecuteUbergraph_GCN_Concussed, CallFunc_BreakGameplayCueParameters_SourceObject) == 0x000200, "Member 'GCN_Concussed_C_ExecuteUbergraph_GCN_Concussed::CallFunc_BreakGameplayCueParameters_SourceObject' has a wrong offset!");
static_assert(offsetof(GCN_Concussed_C_ExecuteUbergraph_GCN_Concussed, CallFunc_BreakGameplayCueParameters_PhysicalMaterial) == 0x000208, "Member 'GCN_Concussed_C_ExecuteUbergraph_GCN_Concussed::CallFunc_BreakGameplayCueParameters_PhysicalMaterial' has a wrong offset!");
static_assert(offsetof(GCN_Concussed_C_ExecuteUbergraph_GCN_Concussed, CallFunc_BreakGameplayCueParameters_GameplayEffectLevel) == 0x000210, "Member 'GCN_Concussed_C_ExecuteUbergraph_GCN_Concussed::CallFunc_BreakGameplayCueParameters_GameplayEffectLevel' has a wrong offset!");
static_assert(offsetof(GCN_Concussed_C_ExecuteUbergraph_GCN_Concussed, CallFunc_BreakGameplayCueParameters_AbilityLevel) == 0x000214, "Member 'GCN_Concussed_C_ExecuteUbergraph_GCN_Concussed::CallFunc_BreakGameplayCueParameters_AbilityLevel' has a wrong offset!");
static_assert(offsetof(GCN_Concussed_C_ExecuteUbergraph_GCN_Concussed, CallFunc_BreakGameplayCueParameters_TargetAttachComponent) == 0x000218, "Member 'GCN_Concussed_C_ExecuteUbergraph_GCN_Concussed::CallFunc_BreakGameplayCueParameters_TargetAttachComponent' has a wrong offset!");
static_assert(offsetof(GCN_Concussed_C_ExecuteUbergraph_GCN_Concussed, CallFunc_BreakGameplayCueParameters_bReplicateLocationWhenUsingMinimalRepProxy) == 0x000220, "Member 'GCN_Concussed_C_ExecuteUbergraph_GCN_Concussed::CallFunc_BreakGameplayCueParameters_bReplicateLocationWhenUsingMinimalRepProxy' has a wrong offset!");
static_assert(offsetof(GCN_Concussed_C_ExecuteUbergraph_GCN_Concussed, CallFunc_MakeGameplayCueParameters_ReturnValue) == 0x000228, "Member 'GCN_Concussed_C_ExecuteUbergraph_GCN_Concussed::CallFunc_MakeGameplayCueParameters_ReturnValue' has a wrong offset!");
static_assert(offsetof(GCN_Concussed_C_ExecuteUbergraph_GCN_Concussed, CallFunc_MapRangeClamped_ReturnValue) == 0x000300, "Member 'GCN_Concussed_C_ExecuteUbergraph_GCN_Concussed::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(GCN_Concussed_C_ExecuteUbergraph_GCN_Concussed, CallFunc_Lerp_Alpha_ImplicitCast) == 0x000308, "Member 'GCN_Concussed_C_ExecuteUbergraph_GCN_Concussed::CallFunc_Lerp_Alpha_ImplicitCast' has a wrong offset!");
static_assert(offsetof(GCN_Concussed_C_ExecuteUbergraph_GCN_Concussed, K2Node_SetFieldsInStruct_VignetteIntensity_ImplicitCast) == 0x000310, "Member 'GCN_Concussed_C_ExecuteUbergraph_GCN_Concussed::K2Node_SetFieldsInStruct_VignetteIntensity_ImplicitCast' has a wrong offset!");
static_assert(offsetof(GCN_Concussed_C_ExecuteUbergraph_GCN_Concussed, CallFunc_MapRangeClamped_Value_ImplicitCast) == 0x000318, "Member 'GCN_Concussed_C_ExecuteUbergraph_GCN_Concussed::CallFunc_MapRangeClamped_Value_ImplicitCast' has a wrong offset!");
static_assert(offsetof(GCN_Concussed_C_ExecuteUbergraph_GCN_Concussed, CallFunc_SetNewTime_NewTime_ImplicitCast) == 0x000320, "Member 'GCN_Concussed_C_ExecuteUbergraph_GCN_Concussed::CallFunc_SetNewTime_NewTime_ImplicitCast' has a wrong offset!");

// Function GCN_Concussed.GCN_Concussed_C.OnApplication
// 0x0138 (0x0138 - 0x0000)
struct GCN_Concussed_C_OnApplication final
{
public:
	class AActor*                                 Target;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayCueParameters                 Parameters;                                        // 0x0008(0x00D8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
	struct FGameplayCueNotify_SpawnResult         SpawnResults;                                      // 0x00E0(0x0058)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
};
static_assert(alignof(GCN_Concussed_C_OnApplication) == 0x000008, "Wrong alignment on GCN_Concussed_C_OnApplication");
static_assert(sizeof(GCN_Concussed_C_OnApplication) == 0x000138, "Wrong size on GCN_Concussed_C_OnApplication");
static_assert(offsetof(GCN_Concussed_C_OnApplication, Target) == 0x000000, "Member 'GCN_Concussed_C_OnApplication::Target' has a wrong offset!");
static_assert(offsetof(GCN_Concussed_C_OnApplication, Parameters) == 0x000008, "Member 'GCN_Concussed_C_OnApplication::Parameters' has a wrong offset!");
static_assert(offsetof(GCN_Concussed_C_OnApplication, SpawnResults) == 0x0000E0, "Member 'GCN_Concussed_C_OnApplication::SpawnResults' has a wrong offset!");

// Function GCN_Concussed.GCN_Concussed_C.SetBlendOnPostProcess
// 0x0004 (0x0004 - 0x0000)
struct GCN_Concussed_C_SetBlendOnPostProcess final
{
public:
	float                                         Blending_Opacity;                                  // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GCN_Concussed_C_SetBlendOnPostProcess) == 0x000004, "Wrong alignment on GCN_Concussed_C_SetBlendOnPostProcess");
static_assert(sizeof(GCN_Concussed_C_SetBlendOnPostProcess) == 0x000004, "Wrong size on GCN_Concussed_C_SetBlendOnPostProcess");
static_assert(offsetof(GCN_Concussed_C_SetBlendOnPostProcess, Blending_Opacity) == 0x000000, "Member 'GCN_Concussed_C_SetBlendOnPostProcess::Blending_Opacity' has a wrong offset!");

}

