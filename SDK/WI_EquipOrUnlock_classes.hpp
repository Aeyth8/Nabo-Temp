#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WI_EquipOrUnlock

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "UMG_structs.hpp"
#include "UMG_classes.hpp"
#include "JP_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WI_EquipOrUnlock.WI_EquipOrUnlock_C
// 0x00D8 (0x03B8 - 0x02E0)
class UWI_EquipOrUnlock_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02E0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UImage*                                 BattlePassIcon;                                    // 0x02E8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       BattlePassInfoText;                                // 0x02F0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHorizontalBox*                         BattlePassInfoWidget;                              // 0x02F8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       DescriptionText;                                   // 0x0300(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWI_JPButton_C*                         EquipButton;                                       // 0x0308(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       NameText;                                          // 0x0310(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWI_JPArrowButton_C*                    NextSelector;                                      // 0x0318(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWI_JPArrowButton_C*                    PrevSelector;                                      // 0x0320(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWI_SinglePrice_C*                      PriceWidget;                                       // 0x0328(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWI_RarityButton_C*                     RarityButton;                                      // 0x0330(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonBorder*                          RarityPanel;                                       // 0x0338(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       RarityText;                                        // 0x0340(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWI_JPButton_C*                         UnlockButton;                                      // 0x0348(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWI_HorizontalDivider_Dashed_C*         WI_HorizontalDivider_Dashed;                       // 0x0350(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	FMulticastInlineDelegateProperty_             OnEquip;                                           // 0x0358(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	bool                                          IsNavigationArrowsVisible;                         // 0x0368(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	uint8                                         Pad_369[0x7];                                      // 0x0369(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	FMulticastInlineDelegateProperty_             OnUnlock;                                          // 0x0370(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	struct FGameplayTag                           PreviewAssetID;                                    // 0x0380(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash)
	bool                                          IsPurchasable;                                     // 0x0388(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_389[0x3];                                      // 0x0389(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         PriceAmount;                                       // 0x038C(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           PriceType;                                         // 0x0390(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash)
	FMulticastInlineDelegateProperty_             PrevButtonClick;                                   // 0x0398(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_             NextButtonClick;                                   // 0x03A8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)

public:
	void BndEvt__WI_EquipOrUnlock_EquipButton_K2Node_ComponentBoundEvent_2_CommonButtonBaseClicked__DelegateSignature(class UCommonButtonBase* Button);
	void BndEvt__WI_EquipOrUnlock_NextSelector_K2Node_ComponentBoundEvent_1_CommonButtonBaseClicked__DelegateSignature(class UCommonButtonBase* Button);
	void BndEvt__WI_EquipOrUnlock_PrevSelector_K2Node_ComponentBoundEvent_0_CommonButtonBaseClicked__DelegateSignature(class UCommonButtonBase* Button);
	void BndEvt__WI_EquipOrUnlock_UnlockButton_K2Node_ComponentBoundEvent_3_CommonButtonBaseClicked__DelegateSignature(class UCommonButtonBase* Button);
	void ExecuteUbergraph_WI_EquipOrUnlock(int32 EntryPoint);
	void NextButtonClick__DelegateSignature();
	void OnEquip__DelegateSignature();
	void OnLoaded_BEAE240C4885243D6D1DD28F1B361747(class UObject* Loaded);
	void OnUnlock__DelegateSignature();
	void PreConstruct(bool IsDesignTime);
	void PrevButtonClick__DelegateSignature();
	void SetBattlePassInfo(const struct FOnlineStoreItemBattlePassRequirement& BattlePassRequirement, bool IsOwned);
	void SetButtonVisibilities(EOnlineItemUnlockRequirement ItemUnlockRequirement, bool Index_0);
	void SetDescription(const class FText& Description);
	void SetIcon(class UPlayerRewardDataAsset* PlayerRewardDataAsset);
	void SetIsEquipped(bool IsEquipped);
	void SetName(const class FText& Name_0);
	void SetRarity(class URarity* Rarity);
	void SetStoreItemData(const struct FOnlineStoreItemData& StoreItemData);
	void SetUnlockInfo(EOnlineItemUnlockRequirement ItemUnlockRequirement, bool IsOwned);
	void SetUnlockRequirements(const struct FOnlineStoreItemData& StoreItemData);
	void ShowNavigationArrows(bool ShowNavigationArrows_0);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WI_EquipOrUnlock_C">();
	}
	static class UWI_EquipOrUnlock_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWI_EquipOrUnlock_C>();
	}
};
static_assert(alignof(UWI_EquipOrUnlock_C) == 0x000008, "Wrong alignment on UWI_EquipOrUnlock_C");
static_assert(sizeof(UWI_EquipOrUnlock_C) == 0x0003B8, "Wrong size on UWI_EquipOrUnlock_C");
static_assert(offsetof(UWI_EquipOrUnlock_C, UberGraphFrame) == 0x0002E0, "Member 'UWI_EquipOrUnlock_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWI_EquipOrUnlock_C, BattlePassIcon) == 0x0002E8, "Member 'UWI_EquipOrUnlock_C::BattlePassIcon' has a wrong offset!");
static_assert(offsetof(UWI_EquipOrUnlock_C, BattlePassInfoText) == 0x0002F0, "Member 'UWI_EquipOrUnlock_C::BattlePassInfoText' has a wrong offset!");
static_assert(offsetof(UWI_EquipOrUnlock_C, BattlePassInfoWidget) == 0x0002F8, "Member 'UWI_EquipOrUnlock_C::BattlePassInfoWidget' has a wrong offset!");
static_assert(offsetof(UWI_EquipOrUnlock_C, DescriptionText) == 0x000300, "Member 'UWI_EquipOrUnlock_C::DescriptionText' has a wrong offset!");
static_assert(offsetof(UWI_EquipOrUnlock_C, EquipButton) == 0x000308, "Member 'UWI_EquipOrUnlock_C::EquipButton' has a wrong offset!");
static_assert(offsetof(UWI_EquipOrUnlock_C, NameText) == 0x000310, "Member 'UWI_EquipOrUnlock_C::NameText' has a wrong offset!");
static_assert(offsetof(UWI_EquipOrUnlock_C, NextSelector) == 0x000318, "Member 'UWI_EquipOrUnlock_C::NextSelector' has a wrong offset!");
static_assert(offsetof(UWI_EquipOrUnlock_C, PrevSelector) == 0x000320, "Member 'UWI_EquipOrUnlock_C::PrevSelector' has a wrong offset!");
static_assert(offsetof(UWI_EquipOrUnlock_C, PriceWidget) == 0x000328, "Member 'UWI_EquipOrUnlock_C::PriceWidget' has a wrong offset!");
static_assert(offsetof(UWI_EquipOrUnlock_C, RarityButton) == 0x000330, "Member 'UWI_EquipOrUnlock_C::RarityButton' has a wrong offset!");
static_assert(offsetof(UWI_EquipOrUnlock_C, RarityPanel) == 0x000338, "Member 'UWI_EquipOrUnlock_C::RarityPanel' has a wrong offset!");
static_assert(offsetof(UWI_EquipOrUnlock_C, RarityText) == 0x000340, "Member 'UWI_EquipOrUnlock_C::RarityText' has a wrong offset!");
static_assert(offsetof(UWI_EquipOrUnlock_C, UnlockButton) == 0x000348, "Member 'UWI_EquipOrUnlock_C::UnlockButton' has a wrong offset!");
static_assert(offsetof(UWI_EquipOrUnlock_C, WI_HorizontalDivider_Dashed) == 0x000350, "Member 'UWI_EquipOrUnlock_C::WI_HorizontalDivider_Dashed' has a wrong offset!");
static_assert(offsetof(UWI_EquipOrUnlock_C, OnEquip) == 0x000358, "Member 'UWI_EquipOrUnlock_C::OnEquip' has a wrong offset!");
static_assert(offsetof(UWI_EquipOrUnlock_C, IsNavigationArrowsVisible) == 0x000368, "Member 'UWI_EquipOrUnlock_C::IsNavigationArrowsVisible' has a wrong offset!");
static_assert(offsetof(UWI_EquipOrUnlock_C, OnUnlock) == 0x000370, "Member 'UWI_EquipOrUnlock_C::OnUnlock' has a wrong offset!");
static_assert(offsetof(UWI_EquipOrUnlock_C, PreviewAssetID) == 0x000380, "Member 'UWI_EquipOrUnlock_C::PreviewAssetID' has a wrong offset!");
static_assert(offsetof(UWI_EquipOrUnlock_C, IsPurchasable) == 0x000388, "Member 'UWI_EquipOrUnlock_C::IsPurchasable' has a wrong offset!");
static_assert(offsetof(UWI_EquipOrUnlock_C, PriceAmount) == 0x00038C, "Member 'UWI_EquipOrUnlock_C::PriceAmount' has a wrong offset!");
static_assert(offsetof(UWI_EquipOrUnlock_C, PriceType) == 0x000390, "Member 'UWI_EquipOrUnlock_C::PriceType' has a wrong offset!");
static_assert(offsetof(UWI_EquipOrUnlock_C, PrevButtonClick) == 0x000398, "Member 'UWI_EquipOrUnlock_C::PrevButtonClick' has a wrong offset!");
static_assert(offsetof(UWI_EquipOrUnlock_C, NextButtonClick) == 0x0003A8, "Member 'UWI_EquipOrUnlock_C::NextButtonClick' has a wrong offset!");

}

