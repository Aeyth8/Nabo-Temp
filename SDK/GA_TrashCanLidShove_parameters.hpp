#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GA_TrashCanLidShove

#include "Basic.hpp"

#include "GameplayTags_structs.hpp"


namespace SDK::Params
{

// Function GA_TrashCanLidShove.GA_TrashCanLidShove_C.ExecuteUbergraph_GA_TrashCanLidShove
// 0x0028 (0x0028 - 0x0000)
struct GA_TrashCanLidShove_C_ExecuteUbergraph_GA_TrashCanLidShove final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagContainer                  K2Node_Event_FailureReason;                        // 0x0008(0x0020)(ConstParm)
};
static_assert(alignof(GA_TrashCanLidShove_C_ExecuteUbergraph_GA_TrashCanLidShove) == 0x000008, "Wrong alignment on GA_TrashCanLidShove_C_ExecuteUbergraph_GA_TrashCanLidShove");
static_assert(sizeof(GA_TrashCanLidShove_C_ExecuteUbergraph_GA_TrashCanLidShove) == 0x000028, "Wrong size on GA_TrashCanLidShove_C_ExecuteUbergraph_GA_TrashCanLidShove");
static_assert(offsetof(GA_TrashCanLidShove_C_ExecuteUbergraph_GA_TrashCanLidShove, EntryPoint) == 0x000000, "Member 'GA_TrashCanLidShove_C_ExecuteUbergraph_GA_TrashCanLidShove::EntryPoint' has a wrong offset!");
static_assert(offsetof(GA_TrashCanLidShove_C_ExecuteUbergraph_GA_TrashCanLidShove, K2Node_Event_FailureReason) == 0x000008, "Member 'GA_TrashCanLidShove_C_ExecuteUbergraph_GA_TrashCanLidShove::K2Node_Event_FailureReason' has a wrong offset!");

// Function GA_TrashCanLidShove.GA_TrashCanLidShove_C.GetPercentageCharged
// 0x0008 (0x0008 - 0x0000)
struct GA_TrashCanLidShove_C_GetPercentageCharged final
{
public:
	double                                        Percentage;                                        // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_TrashCanLidShove_C_GetPercentageCharged) == 0x000008, "Wrong alignment on GA_TrashCanLidShove_C_GetPercentageCharged");
static_assert(sizeof(GA_TrashCanLidShove_C_GetPercentageCharged) == 0x000008, "Wrong size on GA_TrashCanLidShove_C_GetPercentageCharged");
static_assert(offsetof(GA_TrashCanLidShove_C_GetPercentageCharged, Percentage) == 0x000000, "Member 'GA_TrashCanLidShove_C_GetPercentageCharged::Percentage' has a wrong offset!");

// Function GA_TrashCanLidShove.GA_TrashCanLidShove_C.K2_OnAbilityFailed
// 0x0020 (0x0020 - 0x0000)
struct GA_TrashCanLidShove_C_K2_OnAbilityFailed final
{
public:
	struct FGameplayTagContainer                  FailureReason;                                     // 0x0000(0x0020)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(GA_TrashCanLidShove_C_K2_OnAbilityFailed) == 0x000008, "Wrong alignment on GA_TrashCanLidShove_C_K2_OnAbilityFailed");
static_assert(sizeof(GA_TrashCanLidShove_C_K2_OnAbilityFailed) == 0x000020, "Wrong size on GA_TrashCanLidShove_C_K2_OnAbilityFailed");
static_assert(offsetof(GA_TrashCanLidShove_C_K2_OnAbilityFailed, FailureReason) == 0x000000, "Member 'GA_TrashCanLidShove_C_K2_OnAbilityFailed::FailureReason' has a wrong offset!");

}

