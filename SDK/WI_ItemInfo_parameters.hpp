#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WI_ItemInfo

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "UMG_structs.hpp"
#include "SlateCore_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function WI_ItemInfo.WI_ItemInfo_C.Bind Delegates
// 0x0010 (0x0010 - 0x0000)
struct WI_ItemInfo_C_Bind_Delegates final
{
public:
	class APawn*                                  OldPawn;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  NewPawn;                                           // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WI_ItemInfo_C_Bind_Delegates) == 0x000008, "Wrong alignment on WI_ItemInfo_C_Bind_Delegates");
static_assert(sizeof(WI_ItemInfo_C_Bind_Delegates) == 0x000010, "Wrong size on WI_ItemInfo_C_Bind_Delegates");
static_assert(offsetof(WI_ItemInfo_C_Bind_Delegates, OldPawn) == 0x000000, "Member 'WI_ItemInfo_C_Bind_Delegates::OldPawn' has a wrong offset!");
static_assert(offsetof(WI_ItemInfo_C_Bind_Delegates, NewPawn) == 0x000008, "Member 'WI_ItemInfo_C_Bind_Delegates::NewPawn' has a wrong offset!");

// Function WI_ItemInfo.WI_ItemInfo_C.Change Text
// 0x0008 (0x0008 - 0x0000)
struct WI_ItemInfo_C_Change_Text final
{
public:
	class UEquipmentInstance*                     Instance;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WI_ItemInfo_C_Change_Text) == 0x000008, "Wrong alignment on WI_ItemInfo_C_Change_Text");
static_assert(sizeof(WI_ItemInfo_C_Change_Text) == 0x000008, "Wrong size on WI_ItemInfo_C_Change_Text");
static_assert(offsetof(WI_ItemInfo_C_Change_Text, Instance) == 0x000000, "Member 'WI_ItemInfo_C_Change_Text::Instance' has a wrong offset!");

// Function WI_ItemInfo.WI_ItemInfo_C.ExecuteUbergraph_WI_ItemInfo
// 0x0180 (0x0180 - 0x0000)
struct WI_ItemInfo_C_ExecuteUbergraph_WI_ItemInfo final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable;                                // 0x0008(0x0010)()
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0018(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0028(0x0008)(NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x0030(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UInitializationStateEnded*              CallFunc_ListenToInitializationStateEnded_ReturnValue; // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A[0x6];                                       // 0x004A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UEquipmentInstance*                     K2Node_CustomEvent_Instance_1;                     // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  K2Node_CustomEvent_OldPawn;                        // 0x0060(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  K2Node_CustomEvent_NewPawn;                        // 0x0068(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_ResidentCharacter_C*                K2Node_DynamicCast_AsBP_Resident_Character;        // 0x0070(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_79[0x7];                                       // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_ResidentCharacter_C*                K2Node_DynamicCast_AsBP_Resident_Character_1;      // 0x0080(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_89[0x7];                                       // 0x0089(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAbilitySystemComponent*                CallFunc_GetAbilitySystemComponent_ReturnValue;    // 0x0090(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UAbilitySystemComponentIW*              K2Node_DynamicCast_AsAbility_System_Component_IW;  // 0x0098(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetInstanceFromSlot_IsInstanceValid;      // 0x00A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A2[0x6];                                       // 0x00A2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UEquipmentInstance*                     CallFunc_GetInstanceFromSlot_ReturnValue;          // 0x00A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FText                                   Temp_text_Variable_1;                              // 0x00B0(0x0010)()
	class UEquipmentInstance*                     K2Node_CustomEvent_Instance;                       // 0x00C0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C9[0x7];                                       // 0x00C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select_Default;                             // 0x00D0(0x0010)()
	class UCanvasPanelSlot*                       CallFunc_SlotAsCanvasSlot_ReturnValue;             // 0x00E0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UCanvasPanelSlot*                       CallFunc_SlotAsCanvasSlot_ReturnValue_1;           // 0x00E8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetPosition_ReturnValue;                  // 0x00F0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetPosition_ReturnValue_1;                // 0x0100(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   Temp_text_Variable_2;                              // 0x0110(0x0010)()
	class FText                                   Temp_text_Variable_3;                              // 0x0120(0x0010)()
	bool                                          Temp_bool_Variable_1;                              // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_131[0x3];                                      // 0x0131(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class APawn* OldPawn, class APawn* NewPawn)> K2Node_CreateDelegate_OutputDelegate_2;            // 0x0134(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_144[0x4];                                      // 0x0144(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select_Default_1;                           // 0x0148(0x0010)()
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0158(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue;                   // 0x0160(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UEquipmentInstance* Instance)> K2Node_CreateDelegate_OutputDelegate_3;            // 0x0168(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0178(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WI_ItemInfo_C_ExecuteUbergraph_WI_ItemInfo) == 0x000008, "Wrong alignment on WI_ItemInfo_C_ExecuteUbergraph_WI_ItemInfo");
static_assert(sizeof(WI_ItemInfo_C_ExecuteUbergraph_WI_ItemInfo) == 0x000180, "Wrong size on WI_ItemInfo_C_ExecuteUbergraph_WI_ItemInfo");
static_assert(offsetof(WI_ItemInfo_C_ExecuteUbergraph_WI_ItemInfo, EntryPoint) == 0x000000, "Member 'WI_ItemInfo_C_ExecuteUbergraph_WI_ItemInfo::EntryPoint' has a wrong offset!");
static_assert(offsetof(WI_ItemInfo_C_ExecuteUbergraph_WI_ItemInfo, Temp_text_Variable) == 0x000008, "Member 'WI_ItemInfo_C_ExecuteUbergraph_WI_ItemInfo::Temp_text_Variable' has a wrong offset!");
static_assert(offsetof(WI_ItemInfo_C_ExecuteUbergraph_WI_ItemInfo, K2Node_CreateDelegate_OutputDelegate) == 0x000018, "Member 'WI_ItemInfo_C_ExecuteUbergraph_WI_ItemInfo::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WI_ItemInfo_C_ExecuteUbergraph_WI_ItemInfo, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000028, "Member 'WI_ItemInfo_C_ExecuteUbergraph_WI_ItemInfo::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(WI_ItemInfo_C_ExecuteUbergraph_WI_ItemInfo, K2Node_CreateDelegate_OutputDelegate_1) == 0x000030, "Member 'WI_ItemInfo_C_ExecuteUbergraph_WI_ItemInfo::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(WI_ItemInfo_C_ExecuteUbergraph_WI_ItemInfo, CallFunc_ListenToInitializationStateEnded_ReturnValue) == 0x000040, "Member 'WI_ItemInfo_C_ExecuteUbergraph_WI_ItemInfo::CallFunc_ListenToInitializationStateEnded_ReturnValue' has a wrong offset!");
static_assert(offsetof(WI_ItemInfo_C_ExecuteUbergraph_WI_ItemInfo, CallFunc_IsValid_ReturnValue) == 0x000048, "Member 'WI_ItemInfo_C_ExecuteUbergraph_WI_ItemInfo::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WI_ItemInfo_C_ExecuteUbergraph_WI_ItemInfo, K2Node_Event_IsDesignTime) == 0x000049, "Member 'WI_ItemInfo_C_ExecuteUbergraph_WI_ItemInfo::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(WI_ItemInfo_C_ExecuteUbergraph_WI_ItemInfo, K2Node_CustomEvent_Instance_1) == 0x000050, "Member 'WI_ItemInfo_C_ExecuteUbergraph_WI_ItemInfo::K2Node_CustomEvent_Instance_1' has a wrong offset!");
static_assert(offsetof(WI_ItemInfo_C_ExecuteUbergraph_WI_ItemInfo, CallFunc_IsValid_ReturnValue_1) == 0x000058, "Member 'WI_ItemInfo_C_ExecuteUbergraph_WI_ItemInfo::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WI_ItemInfo_C_ExecuteUbergraph_WI_ItemInfo, K2Node_CustomEvent_OldPawn) == 0x000060, "Member 'WI_ItemInfo_C_ExecuteUbergraph_WI_ItemInfo::K2Node_CustomEvent_OldPawn' has a wrong offset!");
static_assert(offsetof(WI_ItemInfo_C_ExecuteUbergraph_WI_ItemInfo, K2Node_CustomEvent_NewPawn) == 0x000068, "Member 'WI_ItemInfo_C_ExecuteUbergraph_WI_ItemInfo::K2Node_CustomEvent_NewPawn' has a wrong offset!");
static_assert(offsetof(WI_ItemInfo_C_ExecuteUbergraph_WI_ItemInfo, K2Node_DynamicCast_AsBP_Resident_Character) == 0x000070, "Member 'WI_ItemInfo_C_ExecuteUbergraph_WI_ItemInfo::K2Node_DynamicCast_AsBP_Resident_Character' has a wrong offset!");
static_assert(offsetof(WI_ItemInfo_C_ExecuteUbergraph_WI_ItemInfo, K2Node_DynamicCast_bSuccess) == 0x000078, "Member 'WI_ItemInfo_C_ExecuteUbergraph_WI_ItemInfo::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WI_ItemInfo_C_ExecuteUbergraph_WI_ItemInfo, K2Node_DynamicCast_AsBP_Resident_Character_1) == 0x000080, "Member 'WI_ItemInfo_C_ExecuteUbergraph_WI_ItemInfo::K2Node_DynamicCast_AsBP_Resident_Character_1' has a wrong offset!");
static_assert(offsetof(WI_ItemInfo_C_ExecuteUbergraph_WI_ItemInfo, K2Node_DynamicCast_bSuccess_1) == 0x000088, "Member 'WI_ItemInfo_C_ExecuteUbergraph_WI_ItemInfo::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(WI_ItemInfo_C_ExecuteUbergraph_WI_ItemInfo, CallFunc_GetAbilitySystemComponent_ReturnValue) == 0x000090, "Member 'WI_ItemInfo_C_ExecuteUbergraph_WI_ItemInfo::CallFunc_GetAbilitySystemComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(WI_ItemInfo_C_ExecuteUbergraph_WI_ItemInfo, K2Node_DynamicCast_AsAbility_System_Component_IW) == 0x000098, "Member 'WI_ItemInfo_C_ExecuteUbergraph_WI_ItemInfo::K2Node_DynamicCast_AsAbility_System_Component_IW' has a wrong offset!");
static_assert(offsetof(WI_ItemInfo_C_ExecuteUbergraph_WI_ItemInfo, K2Node_DynamicCast_bSuccess_2) == 0x0000A0, "Member 'WI_ItemInfo_C_ExecuteUbergraph_WI_ItemInfo::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(WI_ItemInfo_C_ExecuteUbergraph_WI_ItemInfo, CallFunc_GetInstanceFromSlot_IsInstanceValid) == 0x0000A1, "Member 'WI_ItemInfo_C_ExecuteUbergraph_WI_ItemInfo::CallFunc_GetInstanceFromSlot_IsInstanceValid' has a wrong offset!");
static_assert(offsetof(WI_ItemInfo_C_ExecuteUbergraph_WI_ItemInfo, CallFunc_GetInstanceFromSlot_ReturnValue) == 0x0000A8, "Member 'WI_ItemInfo_C_ExecuteUbergraph_WI_ItemInfo::CallFunc_GetInstanceFromSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(WI_ItemInfo_C_ExecuteUbergraph_WI_ItemInfo, Temp_text_Variable_1) == 0x0000B0, "Member 'WI_ItemInfo_C_ExecuteUbergraph_WI_ItemInfo::Temp_text_Variable_1' has a wrong offset!");
static_assert(offsetof(WI_ItemInfo_C_ExecuteUbergraph_WI_ItemInfo, K2Node_CustomEvent_Instance) == 0x0000C0, "Member 'WI_ItemInfo_C_ExecuteUbergraph_WI_ItemInfo::K2Node_CustomEvent_Instance' has a wrong offset!");
static_assert(offsetof(WI_ItemInfo_C_ExecuteUbergraph_WI_ItemInfo, Temp_bool_Variable) == 0x0000C8, "Member 'WI_ItemInfo_C_ExecuteUbergraph_WI_ItemInfo::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WI_ItemInfo_C_ExecuteUbergraph_WI_ItemInfo, K2Node_Select_Default) == 0x0000D0, "Member 'WI_ItemInfo_C_ExecuteUbergraph_WI_ItemInfo::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WI_ItemInfo_C_ExecuteUbergraph_WI_ItemInfo, CallFunc_SlotAsCanvasSlot_ReturnValue) == 0x0000E0, "Member 'WI_ItemInfo_C_ExecuteUbergraph_WI_ItemInfo::CallFunc_SlotAsCanvasSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(WI_ItemInfo_C_ExecuteUbergraph_WI_ItemInfo, CallFunc_SlotAsCanvasSlot_ReturnValue_1) == 0x0000E8, "Member 'WI_ItemInfo_C_ExecuteUbergraph_WI_ItemInfo::CallFunc_SlotAsCanvasSlot_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WI_ItemInfo_C_ExecuteUbergraph_WI_ItemInfo, CallFunc_GetPosition_ReturnValue) == 0x0000F0, "Member 'WI_ItemInfo_C_ExecuteUbergraph_WI_ItemInfo::CallFunc_GetPosition_ReturnValue' has a wrong offset!");
static_assert(offsetof(WI_ItemInfo_C_ExecuteUbergraph_WI_ItemInfo, CallFunc_GetPosition_ReturnValue_1) == 0x000100, "Member 'WI_ItemInfo_C_ExecuteUbergraph_WI_ItemInfo::CallFunc_GetPosition_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WI_ItemInfo_C_ExecuteUbergraph_WI_ItemInfo, Temp_text_Variable_2) == 0x000110, "Member 'WI_ItemInfo_C_ExecuteUbergraph_WI_ItemInfo::Temp_text_Variable_2' has a wrong offset!");
static_assert(offsetof(WI_ItemInfo_C_ExecuteUbergraph_WI_ItemInfo, Temp_text_Variable_3) == 0x000120, "Member 'WI_ItemInfo_C_ExecuteUbergraph_WI_ItemInfo::Temp_text_Variable_3' has a wrong offset!");
static_assert(offsetof(WI_ItemInfo_C_ExecuteUbergraph_WI_ItemInfo, Temp_bool_Variable_1) == 0x000130, "Member 'WI_ItemInfo_C_ExecuteUbergraph_WI_ItemInfo::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(WI_ItemInfo_C_ExecuteUbergraph_WI_ItemInfo, K2Node_CreateDelegate_OutputDelegate_2) == 0x000134, "Member 'WI_ItemInfo_C_ExecuteUbergraph_WI_ItemInfo::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(WI_ItemInfo_C_ExecuteUbergraph_WI_ItemInfo, K2Node_Select_Default_1) == 0x000148, "Member 'WI_ItemInfo_C_ExecuteUbergraph_WI_ItemInfo::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(WI_ItemInfo_C_ExecuteUbergraph_WI_ItemInfo, CallFunc_GetOwningPlayer_ReturnValue) == 0x000158, "Member 'WI_ItemInfo_C_ExecuteUbergraph_WI_ItemInfo::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(WI_ItemInfo_C_ExecuteUbergraph_WI_ItemInfo, CallFunc_K2_GetPawn_ReturnValue) == 0x000160, "Member 'WI_ItemInfo_C_ExecuteUbergraph_WI_ItemInfo::CallFunc_K2_GetPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(WI_ItemInfo_C_ExecuteUbergraph_WI_ItemInfo, K2Node_CreateDelegate_OutputDelegate_3) == 0x000168, "Member 'WI_ItemInfo_C_ExecuteUbergraph_WI_ItemInfo::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(WI_ItemInfo_C_ExecuteUbergraph_WI_ItemInfo, CallFunc_IsValid_ReturnValue_2) == 0x000178, "Member 'WI_ItemInfo_C_ExecuteUbergraph_WI_ItemInfo::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");

// Function WI_ItemInfo.WI_ItemInfo_C.GetDamageToStructuresMultiplier
// 0x0060 (0x0060 - 0x0000)
struct WI_ItemInfo_C_GetDamageToStructuresMultiplier final
{
public:
	class UEquipmentInstance*                     EquipmentInstance;                                 // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         Damage_Multiplier;                                 // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          MultiplierFound;                                   // 0x000C(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_GetInstigator_ReturnValue;                // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue;                   // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UItemInstance*                          K2Node_DynamicCast_AsItem_Instance;                // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	const class UItemAction_DamageMultiplierStructures* CallFunc_FindActionByType_ReturnValue;             // 0x0038(0x0008)(ConstParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_ModifyStructureDamageByPerk_ModifiedMultiplier; // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_FunctionResult_Damage_Multiplier_ImplicitCast; // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_54[0x4];                                       // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_ModifyStructureDamageByPerk_OriginalMultiplier_ImplicitCast; // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WI_ItemInfo_C_GetDamageToStructuresMultiplier) == 0x000008, "Wrong alignment on WI_ItemInfo_C_GetDamageToStructuresMultiplier");
static_assert(sizeof(WI_ItemInfo_C_GetDamageToStructuresMultiplier) == 0x000060, "Wrong size on WI_ItemInfo_C_GetDamageToStructuresMultiplier");
static_assert(offsetof(WI_ItemInfo_C_GetDamageToStructuresMultiplier, EquipmentInstance) == 0x000000, "Member 'WI_ItemInfo_C_GetDamageToStructuresMultiplier::EquipmentInstance' has a wrong offset!");
static_assert(offsetof(WI_ItemInfo_C_GetDamageToStructuresMultiplier, Damage_Multiplier) == 0x000008, "Member 'WI_ItemInfo_C_GetDamageToStructuresMultiplier::Damage_Multiplier' has a wrong offset!");
static_assert(offsetof(WI_ItemInfo_C_GetDamageToStructuresMultiplier, MultiplierFound) == 0x00000C, "Member 'WI_ItemInfo_C_GetDamageToStructuresMultiplier::MultiplierFound' has a wrong offset!");
static_assert(offsetof(WI_ItemInfo_C_GetDamageToStructuresMultiplier, CallFunc_GetOwningPlayer_ReturnValue) == 0x000010, "Member 'WI_ItemInfo_C_GetDamageToStructuresMultiplier::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(WI_ItemInfo_C_GetDamageToStructuresMultiplier, CallFunc_GetInstigator_ReturnValue) == 0x000018, "Member 'WI_ItemInfo_C_GetDamageToStructuresMultiplier::CallFunc_GetInstigator_ReturnValue' has a wrong offset!");
static_assert(offsetof(WI_ItemInfo_C_GetDamageToStructuresMultiplier, CallFunc_K2_GetPawn_ReturnValue) == 0x000020, "Member 'WI_ItemInfo_C_GetDamageToStructuresMultiplier::CallFunc_K2_GetPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(WI_ItemInfo_C_GetDamageToStructuresMultiplier, K2Node_DynamicCast_AsItem_Instance) == 0x000028, "Member 'WI_ItemInfo_C_GetDamageToStructuresMultiplier::K2Node_DynamicCast_AsItem_Instance' has a wrong offset!");
static_assert(offsetof(WI_ItemInfo_C_GetDamageToStructuresMultiplier, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'WI_ItemInfo_C_GetDamageToStructuresMultiplier::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WI_ItemInfo_C_GetDamageToStructuresMultiplier, CallFunc_FindActionByType_ReturnValue) == 0x000038, "Member 'WI_ItemInfo_C_GetDamageToStructuresMultiplier::CallFunc_FindActionByType_ReturnValue' has a wrong offset!");
static_assert(offsetof(WI_ItemInfo_C_GetDamageToStructuresMultiplier, CallFunc_IsValid_ReturnValue) == 0x000040, "Member 'WI_ItemInfo_C_GetDamageToStructuresMultiplier::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WI_ItemInfo_C_GetDamageToStructuresMultiplier, CallFunc_ModifyStructureDamageByPerk_ModifiedMultiplier) == 0x000048, "Member 'WI_ItemInfo_C_GetDamageToStructuresMultiplier::CallFunc_ModifyStructureDamageByPerk_ModifiedMultiplier' has a wrong offset!");
static_assert(offsetof(WI_ItemInfo_C_GetDamageToStructuresMultiplier, K2Node_FunctionResult_Damage_Multiplier_ImplicitCast) == 0x000050, "Member 'WI_ItemInfo_C_GetDamageToStructuresMultiplier::K2Node_FunctionResult_Damage_Multiplier_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WI_ItemInfo_C_GetDamageToStructuresMultiplier, CallFunc_ModifyStructureDamageByPerk_OriginalMultiplier_ImplicitCast) == 0x000058, "Member 'WI_ItemInfo_C_GetDamageToStructuresMultiplier::CallFunc_ModifyStructureDamageByPerk_OriginalMultiplier_ImplicitCast' has a wrong offset!");

// Function WI_ItemInfo.WI_ItemInfo_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct WI_ItemInfo_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WI_ItemInfo_C_PreConstruct) == 0x000001, "Wrong alignment on WI_ItemInfo_C_PreConstruct");
static_assert(sizeof(WI_ItemInfo_C_PreConstruct) == 0x000001, "Wrong size on WI_ItemInfo_C_PreConstruct");
static_assert(offsetof(WI_ItemInfo_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'WI_ItemInfo_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function WI_ItemInfo.WI_ItemInfo_C.SwitchWidgetLocationIfGamepad
// 0x0040 (0x0040 - 0x0000)
struct WI_ItemInfo_C_SwitchWidgetLocationIfGamepad final
{
public:
	bool                                          Temp_bool_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UCanvasPanelSlot*                       CallFunc_SlotAsCanvasSlot_ReturnValue;             // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UCanvasPanelSlot*                       CallFunc_SlotAsCanvasSlot_ReturnValue_1;           // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsOwningPlayerUsingGamepad_ReturnValue;   // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              K2Node_Select_Default;                             // 0x0020(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              K2Node_Select_Default_1;                           // 0x0030(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WI_ItemInfo_C_SwitchWidgetLocationIfGamepad) == 0x000008, "Wrong alignment on WI_ItemInfo_C_SwitchWidgetLocationIfGamepad");
static_assert(sizeof(WI_ItemInfo_C_SwitchWidgetLocationIfGamepad) == 0x000040, "Wrong size on WI_ItemInfo_C_SwitchWidgetLocationIfGamepad");
static_assert(offsetof(WI_ItemInfo_C_SwitchWidgetLocationIfGamepad, Temp_bool_Variable) == 0x000000, "Member 'WI_ItemInfo_C_SwitchWidgetLocationIfGamepad::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WI_ItemInfo_C_SwitchWidgetLocationIfGamepad, Temp_bool_Variable_1) == 0x000001, "Member 'WI_ItemInfo_C_SwitchWidgetLocationIfGamepad::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(WI_ItemInfo_C_SwitchWidgetLocationIfGamepad, CallFunc_SlotAsCanvasSlot_ReturnValue) == 0x000008, "Member 'WI_ItemInfo_C_SwitchWidgetLocationIfGamepad::CallFunc_SlotAsCanvasSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(WI_ItemInfo_C_SwitchWidgetLocationIfGamepad, CallFunc_SlotAsCanvasSlot_ReturnValue_1) == 0x000010, "Member 'WI_ItemInfo_C_SwitchWidgetLocationIfGamepad::CallFunc_SlotAsCanvasSlot_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WI_ItemInfo_C_SwitchWidgetLocationIfGamepad, CallFunc_IsOwningPlayerUsingGamepad_ReturnValue) == 0x000018, "Member 'WI_ItemInfo_C_SwitchWidgetLocationIfGamepad::CallFunc_IsOwningPlayerUsingGamepad_ReturnValue' has a wrong offset!");
static_assert(offsetof(WI_ItemInfo_C_SwitchWidgetLocationIfGamepad, K2Node_Select_Default) == 0x000020, "Member 'WI_ItemInfo_C_SwitchWidgetLocationIfGamepad::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WI_ItemInfo_C_SwitchWidgetLocationIfGamepad, K2Node_Select_Default_1) == 0x000030, "Member 'WI_ItemInfo_C_SwitchWidgetLocationIfGamepad::K2Node_Select_Default_1' has a wrong offset!");

// Function WI_ItemInfo.WI_ItemInfo_C.ToggleM1GreyOut
// 0x0018 (0x0018 - 0x0000)
struct WI_ItemInfo_C_ToggleM1GreyOut final
{
public:
	bool                                          GreyedOut;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x0004(0x0014)()
};
static_assert(alignof(WI_ItemInfo_C_ToggleM1GreyOut) == 0x000004, "Wrong alignment on WI_ItemInfo_C_ToggleM1GreyOut");
static_assert(sizeof(WI_ItemInfo_C_ToggleM1GreyOut) == 0x000018, "Wrong size on WI_ItemInfo_C_ToggleM1GreyOut");
static_assert(offsetof(WI_ItemInfo_C_ToggleM1GreyOut, GreyedOut) == 0x000000, "Member 'WI_ItemInfo_C_ToggleM1GreyOut::GreyedOut' has a wrong offset!");
static_assert(offsetof(WI_ItemInfo_C_ToggleM1GreyOut, K2Node_MakeStruct_SlateColor) == 0x000004, "Member 'WI_ItemInfo_C_ToggleM1GreyOut::K2Node_MakeStruct_SlateColor' has a wrong offset!");

// Function WI_ItemInfo.WI_ItemInfo_C.ToggleM2GreyOut
// 0x0018 (0x0018 - 0x0000)
struct WI_ItemInfo_C_ToggleM2GreyOut final
{
public:
	bool                                          GreyedOut;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x0004(0x0014)()
};
static_assert(alignof(WI_ItemInfo_C_ToggleM2GreyOut) == 0x000004, "Wrong alignment on WI_ItemInfo_C_ToggleM2GreyOut");
static_assert(sizeof(WI_ItemInfo_C_ToggleM2GreyOut) == 0x000018, "Wrong size on WI_ItemInfo_C_ToggleM2GreyOut");
static_assert(offsetof(WI_ItemInfo_C_ToggleM2GreyOut, GreyedOut) == 0x000000, "Member 'WI_ItemInfo_C_ToggleM2GreyOut::GreyedOut' has a wrong offset!");
static_assert(offsetof(WI_ItemInfo_C_ToggleM2GreyOut, K2Node_MakeStruct_SlateColor) == 0x000004, "Member 'WI_ItemInfo_C_ToggleM2GreyOut::K2Node_MakeStruct_SlateColor' has a wrong offset!");

// Function WI_ItemInfo.WI_ItemInfo_C.TryChangeDescriptionWithPerk
// 0x0058 (0x0058 - 0x0000)
struct WI_ItemInfo_C_TryChangeDescriptionWithPerk final
{
public:
	class UEquipmentInstance*                     Instance;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPerkManagerComponent*                  CallFunc_GetPerkManagerComponentFromController_ReturnValue; // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_25[0x3];                                       // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UPerkAction*>                    CallFunc_K2_GetAllActionsOfType_ReturnValue;       // 0x0028(0x0010)(ReferenceParm, ContainsInstancedReference)
	class UPerkAction*                            CallFunc_Array_Get_Item;                           // 0x0038(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPA_ReplaceItemDescriptionOnEquip_C*    K2Node_DynamicCast_AsPA_Replace_Item_Description_on_Equip; // 0x0048(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsNotEmpty_ReturnValue;             // 0x0052(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WI_ItemInfo_C_TryChangeDescriptionWithPerk) == 0x000008, "Wrong alignment on WI_ItemInfo_C_TryChangeDescriptionWithPerk");
static_assert(sizeof(WI_ItemInfo_C_TryChangeDescriptionWithPerk) == 0x000058, "Wrong size on WI_ItemInfo_C_TryChangeDescriptionWithPerk");
static_assert(offsetof(WI_ItemInfo_C_TryChangeDescriptionWithPerk, Instance) == 0x000000, "Member 'WI_ItemInfo_C_TryChangeDescriptionWithPerk::Instance' has a wrong offset!");
static_assert(offsetof(WI_ItemInfo_C_TryChangeDescriptionWithPerk, Temp_int_Array_Index_Variable) == 0x000008, "Member 'WI_ItemInfo_C_TryChangeDescriptionWithPerk::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WI_ItemInfo_C_TryChangeDescriptionWithPerk, Temp_int_Loop_Counter_Variable) == 0x00000C, "Member 'WI_ItemInfo_C_TryChangeDescriptionWithPerk::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WI_ItemInfo_C_TryChangeDescriptionWithPerk, CallFunc_GetOwningPlayer_ReturnValue) == 0x000010, "Member 'WI_ItemInfo_C_TryChangeDescriptionWithPerk::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(WI_ItemInfo_C_TryChangeDescriptionWithPerk, CallFunc_GetPerkManagerComponentFromController_ReturnValue) == 0x000018, "Member 'WI_ItemInfo_C_TryChangeDescriptionWithPerk::CallFunc_GetPerkManagerComponentFromController_ReturnValue' has a wrong offset!");
static_assert(offsetof(WI_ItemInfo_C_TryChangeDescriptionWithPerk, CallFunc_Add_IntInt_ReturnValue) == 0x000020, "Member 'WI_ItemInfo_C_TryChangeDescriptionWithPerk::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WI_ItemInfo_C_TryChangeDescriptionWithPerk, CallFunc_IsValid_ReturnValue) == 0x000024, "Member 'WI_ItemInfo_C_TryChangeDescriptionWithPerk::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WI_ItemInfo_C_TryChangeDescriptionWithPerk, CallFunc_K2_GetAllActionsOfType_ReturnValue) == 0x000028, "Member 'WI_ItemInfo_C_TryChangeDescriptionWithPerk::CallFunc_K2_GetAllActionsOfType_ReturnValue' has a wrong offset!");
static_assert(offsetof(WI_ItemInfo_C_TryChangeDescriptionWithPerk, CallFunc_Array_Get_Item) == 0x000038, "Member 'WI_ItemInfo_C_TryChangeDescriptionWithPerk::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WI_ItemInfo_C_TryChangeDescriptionWithPerk, CallFunc_Array_Length_ReturnValue) == 0x000040, "Member 'WI_ItemInfo_C_TryChangeDescriptionWithPerk::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WI_ItemInfo_C_TryChangeDescriptionWithPerk, K2Node_DynamicCast_AsPA_Replace_Item_Description_on_Equip) == 0x000048, "Member 'WI_ItemInfo_C_TryChangeDescriptionWithPerk::K2Node_DynamicCast_AsPA_Replace_Item_Description_on_Equip' has a wrong offset!");
static_assert(offsetof(WI_ItemInfo_C_TryChangeDescriptionWithPerk, K2Node_DynamicCast_bSuccess) == 0x000050, "Member 'WI_ItemInfo_C_TryChangeDescriptionWithPerk::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WI_ItemInfo_C_TryChangeDescriptionWithPerk, CallFunc_Less_IntInt_ReturnValue) == 0x000051, "Member 'WI_ItemInfo_C_TryChangeDescriptionWithPerk::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WI_ItemInfo_C_TryChangeDescriptionWithPerk, CallFunc_Array_IsNotEmpty_ReturnValue) == 0x000052, "Member 'WI_ItemInfo_C_TryChangeDescriptionWithPerk::CallFunc_Array_IsNotEmpty_ReturnValue' has a wrong offset!");

// Function WI_ItemInfo.WI_ItemInfo_C.TryChangeIconWithPerk
// 0x00A8 (0x00A8 - 0x0000)
struct WI_ItemInfo_C_TryChangeIconWithPerk final
{
public:
	class UEquipmentInstance*                     Instance;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           InputTag;                                          // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	class UWI_ItemAbility_C*                      Image;                                             // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPerkManagerComponent*                  CallFunc_GetPerkManagerComponentFromController_ReturnValue; // 0x0030(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TArray<class UPerkAction*>                    CallFunc_K2_GetAllActionsOfType_ReturnValue;       // 0x0038(0x0010)(ReferenceParm, ContainsInstancedReference)
	bool                                          CallFunc_Array_IsNotEmpty_ReturnValue;             // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPerkAction*                            CallFunc_Array_Get_Item;                           // 0x0050(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UPA_ChangeItemIconsOnEquip_C*           K2Node_DynamicCast_AsPA_Change_Item_Icons_on_Equip; // 0x0058(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_61[0x3];                                       // 0x0061(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_FindCorrectIcon_IconFound;                // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_69[0x7];                                       // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             CallFunc_FindCorrectIcon_NewIcon;                  // 0x0070(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_79[0x7];                                       // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UTexture2D>              CallFunc_Conv_ObjectToSoftObjectReference_ReturnValue; // 0x0080(0x0028)(UObjectWrapper, HasGetValueTypeHash)
};
static_assert(alignof(WI_ItemInfo_C_TryChangeIconWithPerk) == 0x000008, "Wrong alignment on WI_ItemInfo_C_TryChangeIconWithPerk");
static_assert(sizeof(WI_ItemInfo_C_TryChangeIconWithPerk) == 0x0000A8, "Wrong size on WI_ItemInfo_C_TryChangeIconWithPerk");
static_assert(offsetof(WI_ItemInfo_C_TryChangeIconWithPerk, Instance) == 0x000000, "Member 'WI_ItemInfo_C_TryChangeIconWithPerk::Instance' has a wrong offset!");
static_assert(offsetof(WI_ItemInfo_C_TryChangeIconWithPerk, InputTag) == 0x000008, "Member 'WI_ItemInfo_C_TryChangeIconWithPerk::InputTag' has a wrong offset!");
static_assert(offsetof(WI_ItemInfo_C_TryChangeIconWithPerk, Image) == 0x000010, "Member 'WI_ItemInfo_C_TryChangeIconWithPerk::Image' has a wrong offset!");
static_assert(offsetof(WI_ItemInfo_C_TryChangeIconWithPerk, Temp_int_Array_Index_Variable) == 0x000018, "Member 'WI_ItemInfo_C_TryChangeIconWithPerk::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WI_ItemInfo_C_TryChangeIconWithPerk, Temp_int_Loop_Counter_Variable) == 0x00001C, "Member 'WI_ItemInfo_C_TryChangeIconWithPerk::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WI_ItemInfo_C_TryChangeIconWithPerk, CallFunc_Add_IntInt_ReturnValue) == 0x000020, "Member 'WI_ItemInfo_C_TryChangeIconWithPerk::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WI_ItemInfo_C_TryChangeIconWithPerk, CallFunc_GetOwningPlayer_ReturnValue) == 0x000028, "Member 'WI_ItemInfo_C_TryChangeIconWithPerk::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(WI_ItemInfo_C_TryChangeIconWithPerk, CallFunc_GetPerkManagerComponentFromController_ReturnValue) == 0x000030, "Member 'WI_ItemInfo_C_TryChangeIconWithPerk::CallFunc_GetPerkManagerComponentFromController_ReturnValue' has a wrong offset!");
static_assert(offsetof(WI_ItemInfo_C_TryChangeIconWithPerk, CallFunc_K2_GetAllActionsOfType_ReturnValue) == 0x000038, "Member 'WI_ItemInfo_C_TryChangeIconWithPerk::CallFunc_K2_GetAllActionsOfType_ReturnValue' has a wrong offset!");
static_assert(offsetof(WI_ItemInfo_C_TryChangeIconWithPerk, CallFunc_Array_IsNotEmpty_ReturnValue) == 0x000048, "Member 'WI_ItemInfo_C_TryChangeIconWithPerk::CallFunc_Array_IsNotEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(WI_ItemInfo_C_TryChangeIconWithPerk, CallFunc_Array_Get_Item) == 0x000050, "Member 'WI_ItemInfo_C_TryChangeIconWithPerk::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WI_ItemInfo_C_TryChangeIconWithPerk, K2Node_DynamicCast_AsPA_Change_Item_Icons_on_Equip) == 0x000058, "Member 'WI_ItemInfo_C_TryChangeIconWithPerk::K2Node_DynamicCast_AsPA_Change_Item_Icons_on_Equip' has a wrong offset!");
static_assert(offsetof(WI_ItemInfo_C_TryChangeIconWithPerk, K2Node_DynamicCast_bSuccess) == 0x000060, "Member 'WI_ItemInfo_C_TryChangeIconWithPerk::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WI_ItemInfo_C_TryChangeIconWithPerk, CallFunc_Array_Length_ReturnValue) == 0x000064, "Member 'WI_ItemInfo_C_TryChangeIconWithPerk::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WI_ItemInfo_C_TryChangeIconWithPerk, CallFunc_FindCorrectIcon_IconFound) == 0x000068, "Member 'WI_ItemInfo_C_TryChangeIconWithPerk::CallFunc_FindCorrectIcon_IconFound' has a wrong offset!");
static_assert(offsetof(WI_ItemInfo_C_TryChangeIconWithPerk, CallFunc_FindCorrectIcon_NewIcon) == 0x000070, "Member 'WI_ItemInfo_C_TryChangeIconWithPerk::CallFunc_FindCorrectIcon_NewIcon' has a wrong offset!");
static_assert(offsetof(WI_ItemInfo_C_TryChangeIconWithPerk, CallFunc_Less_IntInt_ReturnValue) == 0x000078, "Member 'WI_ItemInfo_C_TryChangeIconWithPerk::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WI_ItemInfo_C_TryChangeIconWithPerk, CallFunc_Conv_ObjectToSoftObjectReference_ReturnValue) == 0x000080, "Member 'WI_ItemInfo_C_TryChangeIconWithPerk::CallFunc_Conv_ObjectToSoftObjectReference_ReturnValue' has a wrong offset!");

// Function WI_ItemInfo.WI_ItemInfo_C.UpdateAbilityIcon
// 0x00A8 (0x00A8 - 0x0000)
struct WI_ItemInfo_C_UpdateAbilityIcon final
{
public:
	class UEquipmentInstance*                     EquipmentInstance;                                 // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           InputTag;                                          // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           AlternativeInputTag;                               // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	class UWI_ItemAbility_C*                      Image;                                             // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_GameplayTag_ReturnValue;         // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSubclassOf<class UGameplayAbility>           CallFunc_GetGameplayAbilityForInputTag_ReturnValue; // 0x0028(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	TSubclassOf<class UGameplayAbility>           CallFunc_GetGameplayAbilityForInputTag_ReturnValue_1; // 0x0030(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class UClass*                                 K2Node_ClassDynamicCast_AsGA_Equipment;            // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ClassDynamicCast_bSuccess;                  // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidClass_ReturnValue;                 // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_42[0x6];                                       // 0x0042(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UTexture2D>              CallFunc_Conv_ObjectToSoftObjectReference_ReturnValue; // 0x0048(0x0028)(UObjectWrapper, HasGetValueTypeHash)
	class UClass*                                 K2Node_ClassDynamicCast_AsGA_Equipment_1;          // 0x0070(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ClassDynamicCast_bSuccess_1;                // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidClass_ReturnValue_1;               // 0x0079(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7A[0x6];                                       // 0x007A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UTexture2D>              CallFunc_Conv_ObjectToSoftObjectReference_ReturnValue_1; // 0x0080(0x0028)(UObjectWrapper, HasGetValueTypeHash)
};
static_assert(alignof(WI_ItemInfo_C_UpdateAbilityIcon) == 0x000008, "Wrong alignment on WI_ItemInfo_C_UpdateAbilityIcon");
static_assert(sizeof(WI_ItemInfo_C_UpdateAbilityIcon) == 0x0000A8, "Wrong size on WI_ItemInfo_C_UpdateAbilityIcon");
static_assert(offsetof(WI_ItemInfo_C_UpdateAbilityIcon, EquipmentInstance) == 0x000000, "Member 'WI_ItemInfo_C_UpdateAbilityIcon::EquipmentInstance' has a wrong offset!");
static_assert(offsetof(WI_ItemInfo_C_UpdateAbilityIcon, InputTag) == 0x000008, "Member 'WI_ItemInfo_C_UpdateAbilityIcon::InputTag' has a wrong offset!");
static_assert(offsetof(WI_ItemInfo_C_UpdateAbilityIcon, AlternativeInputTag) == 0x000010, "Member 'WI_ItemInfo_C_UpdateAbilityIcon::AlternativeInputTag' has a wrong offset!");
static_assert(offsetof(WI_ItemInfo_C_UpdateAbilityIcon, Image) == 0x000018, "Member 'WI_ItemInfo_C_UpdateAbilityIcon::Image' has a wrong offset!");
static_assert(offsetof(WI_ItemInfo_C_UpdateAbilityIcon, CallFunc_NotEqual_GameplayTag_ReturnValue) == 0x000020, "Member 'WI_ItemInfo_C_UpdateAbilityIcon::CallFunc_NotEqual_GameplayTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(WI_ItemInfo_C_UpdateAbilityIcon, CallFunc_GetGameplayAbilityForInputTag_ReturnValue) == 0x000028, "Member 'WI_ItemInfo_C_UpdateAbilityIcon::CallFunc_GetGameplayAbilityForInputTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(WI_ItemInfo_C_UpdateAbilityIcon, CallFunc_GetGameplayAbilityForInputTag_ReturnValue_1) == 0x000030, "Member 'WI_ItemInfo_C_UpdateAbilityIcon::CallFunc_GetGameplayAbilityForInputTag_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WI_ItemInfo_C_UpdateAbilityIcon, K2Node_ClassDynamicCast_AsGA_Equipment) == 0x000038, "Member 'WI_ItemInfo_C_UpdateAbilityIcon::K2Node_ClassDynamicCast_AsGA_Equipment' has a wrong offset!");
static_assert(offsetof(WI_ItemInfo_C_UpdateAbilityIcon, K2Node_ClassDynamicCast_bSuccess) == 0x000040, "Member 'WI_ItemInfo_C_UpdateAbilityIcon::K2Node_ClassDynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WI_ItemInfo_C_UpdateAbilityIcon, CallFunc_IsValidClass_ReturnValue) == 0x000041, "Member 'WI_ItemInfo_C_UpdateAbilityIcon::CallFunc_IsValidClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(WI_ItemInfo_C_UpdateAbilityIcon, CallFunc_Conv_ObjectToSoftObjectReference_ReturnValue) == 0x000048, "Member 'WI_ItemInfo_C_UpdateAbilityIcon::CallFunc_Conv_ObjectToSoftObjectReference_ReturnValue' has a wrong offset!");
static_assert(offsetof(WI_ItemInfo_C_UpdateAbilityIcon, K2Node_ClassDynamicCast_AsGA_Equipment_1) == 0x000070, "Member 'WI_ItemInfo_C_UpdateAbilityIcon::K2Node_ClassDynamicCast_AsGA_Equipment_1' has a wrong offset!");
static_assert(offsetof(WI_ItemInfo_C_UpdateAbilityIcon, K2Node_ClassDynamicCast_bSuccess_1) == 0x000078, "Member 'WI_ItemInfo_C_UpdateAbilityIcon::K2Node_ClassDynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(WI_ItemInfo_C_UpdateAbilityIcon, CallFunc_IsValidClass_ReturnValue_1) == 0x000079, "Member 'WI_ItemInfo_C_UpdateAbilityIcon::CallFunc_IsValidClass_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WI_ItemInfo_C_UpdateAbilityIcon, CallFunc_Conv_ObjectToSoftObjectReference_ReturnValue_1) == 0x000080, "Member 'WI_ItemInfo_C_UpdateAbilityIcon::CallFunc_Conv_ObjectToSoftObjectReference_ReturnValue_1' has a wrong offset!");

// Function WI_ItemInfo.WI_ItemInfo_C.UpdateCooldown
// 0x0088 (0x0088 - 0x0000)
struct WI_ItemInfo_C_UpdateCooldown final
{
public:
	class UAbilitySystemComponentIW*              ASCIW;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWI_ItemAbility_C*                      AbilityWidget;                                     // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           GameplayTag;                                       // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTagContainer                  CallFunc_MakeGameplayTagContainerFromTag_ReturnValue; // 0x0018(0x0020)()
	float                                         CallFunc_GetCooldownRemainingForTag_TimeRemaining; // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetCooldownRemainingForTag_CooldownDuration; // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetCooldownRemainingForTag_ReturnValue;   // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetCooldownText_ReturnValue;              // 0x0048(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	double                                        CallFunc_SafeDivide_ReturnValue;                   // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SafeDivide_A_ImplicitCast;                // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetCooldownText_TimeRemaining_ImplicitCast; // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SafeDivide_B_ImplicitCast;                // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetProgressBarFillFraction_InPercent_ImplicitCast; // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WI_ItemInfo_C_UpdateCooldown) == 0x000008, "Wrong alignment on WI_ItemInfo_C_UpdateCooldown");
static_assert(sizeof(WI_ItemInfo_C_UpdateCooldown) == 0x000088, "Wrong size on WI_ItemInfo_C_UpdateCooldown");
static_assert(offsetof(WI_ItemInfo_C_UpdateCooldown, ASCIW) == 0x000000, "Member 'WI_ItemInfo_C_UpdateCooldown::ASCIW' has a wrong offset!");
static_assert(offsetof(WI_ItemInfo_C_UpdateCooldown, AbilityWidget) == 0x000008, "Member 'WI_ItemInfo_C_UpdateCooldown::AbilityWidget' has a wrong offset!");
static_assert(offsetof(WI_ItemInfo_C_UpdateCooldown, GameplayTag) == 0x000010, "Member 'WI_ItemInfo_C_UpdateCooldown::GameplayTag' has a wrong offset!");
static_assert(offsetof(WI_ItemInfo_C_UpdateCooldown, CallFunc_MakeGameplayTagContainerFromTag_ReturnValue) == 0x000018, "Member 'WI_ItemInfo_C_UpdateCooldown::CallFunc_MakeGameplayTagContainerFromTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(WI_ItemInfo_C_UpdateCooldown, CallFunc_GetCooldownRemainingForTag_TimeRemaining) == 0x000038, "Member 'WI_ItemInfo_C_UpdateCooldown::CallFunc_GetCooldownRemainingForTag_TimeRemaining' has a wrong offset!");
static_assert(offsetof(WI_ItemInfo_C_UpdateCooldown, CallFunc_GetCooldownRemainingForTag_CooldownDuration) == 0x00003C, "Member 'WI_ItemInfo_C_UpdateCooldown::CallFunc_GetCooldownRemainingForTag_CooldownDuration' has a wrong offset!");
static_assert(offsetof(WI_ItemInfo_C_UpdateCooldown, CallFunc_GetCooldownRemainingForTag_ReturnValue) == 0x000040, "Member 'WI_ItemInfo_C_UpdateCooldown::CallFunc_GetCooldownRemainingForTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(WI_ItemInfo_C_UpdateCooldown, CallFunc_GetCooldownText_ReturnValue) == 0x000048, "Member 'WI_ItemInfo_C_UpdateCooldown::CallFunc_GetCooldownText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WI_ItemInfo_C_UpdateCooldown, CallFunc_SafeDivide_ReturnValue) == 0x000058, "Member 'WI_ItemInfo_C_UpdateCooldown::CallFunc_SafeDivide_ReturnValue' has a wrong offset!");
static_assert(offsetof(WI_ItemInfo_C_UpdateCooldown, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000060, "Member 'WI_ItemInfo_C_UpdateCooldown::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WI_ItemInfo_C_UpdateCooldown, CallFunc_SafeDivide_A_ImplicitCast) == 0x000068, "Member 'WI_ItemInfo_C_UpdateCooldown::CallFunc_SafeDivide_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WI_ItemInfo_C_UpdateCooldown, CallFunc_GetCooldownText_TimeRemaining_ImplicitCast) == 0x000070, "Member 'WI_ItemInfo_C_UpdateCooldown::CallFunc_GetCooldownText_TimeRemaining_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WI_ItemInfo_C_UpdateCooldown, CallFunc_SafeDivide_B_ImplicitCast) == 0x000078, "Member 'WI_ItemInfo_C_UpdateCooldown::CallFunc_SafeDivide_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WI_ItemInfo_C_UpdateCooldown, CallFunc_SetProgressBarFillFraction_InPercent_ImplicitCast) == 0x000080, "Member 'WI_ItemInfo_C_UpdateCooldown::CallFunc_SetProgressBarFillFraction_InPercent_ImplicitCast' has a wrong offset!");

// Function WI_ItemInfo.WI_ItemInfo_C.UpdateDamageMultiplier
// 0x0020 (0x0020 - 0x0000)
struct WI_ItemInfo_C_UpdateDamageMultiplier final
{
public:
	class UEquipmentInstance*                     EquipmentInstance;                                 // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetDamageToStructuresMultiplier_Damage_Multiplier; // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetDamageToStructuresMultiplier_MultiplierFound; // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0013(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SetDamageMultiplierText_Multiplier_ImplicitCast; // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WI_ItemInfo_C_UpdateDamageMultiplier) == 0x000008, "Wrong alignment on WI_ItemInfo_C_UpdateDamageMultiplier");
static_assert(sizeof(WI_ItemInfo_C_UpdateDamageMultiplier) == 0x000020, "Wrong size on WI_ItemInfo_C_UpdateDamageMultiplier");
static_assert(offsetof(WI_ItemInfo_C_UpdateDamageMultiplier, EquipmentInstance) == 0x000000, "Member 'WI_ItemInfo_C_UpdateDamageMultiplier::EquipmentInstance' has a wrong offset!");
static_assert(offsetof(WI_ItemInfo_C_UpdateDamageMultiplier, Temp_bool_Variable) == 0x000008, "Member 'WI_ItemInfo_C_UpdateDamageMultiplier::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WI_ItemInfo_C_UpdateDamageMultiplier, CallFunc_GetDamageToStructuresMultiplier_Damage_Multiplier) == 0x00000C, "Member 'WI_ItemInfo_C_UpdateDamageMultiplier::CallFunc_GetDamageToStructuresMultiplier_Damage_Multiplier' has a wrong offset!");
static_assert(offsetof(WI_ItemInfo_C_UpdateDamageMultiplier, CallFunc_GetDamageToStructuresMultiplier_MultiplierFound) == 0x000010, "Member 'WI_ItemInfo_C_UpdateDamageMultiplier::CallFunc_GetDamageToStructuresMultiplier_MultiplierFound' has a wrong offset!");
static_assert(offsetof(WI_ItemInfo_C_UpdateDamageMultiplier, Temp_byte_Variable) == 0x000011, "Member 'WI_ItemInfo_C_UpdateDamageMultiplier::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WI_ItemInfo_C_UpdateDamageMultiplier, Temp_byte_Variable_1) == 0x000012, "Member 'WI_ItemInfo_C_UpdateDamageMultiplier::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WI_ItemInfo_C_UpdateDamageMultiplier, K2Node_Select_Default) == 0x000013, "Member 'WI_ItemInfo_C_UpdateDamageMultiplier::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WI_ItemInfo_C_UpdateDamageMultiplier, CallFunc_SetDamageMultiplierText_Multiplier_ImplicitCast) == 0x000018, "Member 'WI_ItemInfo_C_UpdateDamageMultiplier::CallFunc_SetDamageMultiplierText_Multiplier_ImplicitCast' has a wrong offset!");

// Function WI_ItemInfo.WI_ItemInfo_C.UpdateText
// 0x0008 (0x0008 - 0x0000)
struct WI_ItemInfo_C_UpdateText final
{
public:
	class UEquipmentInstance*                     Instance;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WI_ItemInfo_C_UpdateText) == 0x000008, "Wrong alignment on WI_ItemInfo_C_UpdateText");
static_assert(sizeof(WI_ItemInfo_C_UpdateText) == 0x000008, "Wrong size on WI_ItemInfo_C_UpdateText");
static_assert(offsetof(WI_ItemInfo_C_UpdateText, Instance) == 0x000000, "Member 'WI_ItemInfo_C_UpdateText::Instance' has a wrong offset!");

}

