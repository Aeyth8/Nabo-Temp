#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_LightingAndPostProcessController

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "S_Lighting_Preset_structs.hpp"
#include "E_Lighting_Presets_structs.hpp"


namespace SDK::Params
{

// Function BP_LightingAndPostProcessController.BP_LightingAndPostProcessController_C.BlendDefaultSkylightValues
// 0x0F30 (0x0F30 - 0x0000)
struct BP_LightingAndPostProcessController_C_BlendDefaultSkylightValues final
{
public:
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue; // 0x0000(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_1; // 0x0010(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue;            // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue_1;          // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FS_Lighting_Preset                     CallFunc_GetDataTableRowFromName_OutRow;           // 0x0030(0x0760)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0790(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_791[0xF];                                      // 0x0791(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_Lighting_Preset                     CallFunc_GetDataTableRowFromName_OutRow_1;         // 0x07A0(0x0760)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue_1;    // 0x0F00(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F01[0x7];                                      // 0x0F01(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Lerp_ReturnValue;                         // 0x0F08(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_LinearColorLerp_ReturnValue;              // 0x0F10(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_Alpha_ImplicitCast;                  // 0x0F20(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_LightingAndPostProcessController_C_BlendDefaultSkylightValues) == 0x000010, "Wrong alignment on BP_LightingAndPostProcessController_C_BlendDefaultSkylightValues");
static_assert(sizeof(BP_LightingAndPostProcessController_C_BlendDefaultSkylightValues) == 0x000F30, "Wrong size on BP_LightingAndPostProcessController_C_BlendDefaultSkylightValues");
static_assert(offsetof(BP_LightingAndPostProcessController_C_BlendDefaultSkylightValues, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue) == 0x000000, "Member 'BP_LightingAndPostProcessController_C_BlendDefaultSkylightValues::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LightingAndPostProcessController_C_BlendDefaultSkylightValues, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_1) == 0x000010, "Member 'BP_LightingAndPostProcessController_C_BlendDefaultSkylightValues::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_LightingAndPostProcessController_C_BlendDefaultSkylightValues, CallFunc_Conv_StringToName_ReturnValue) == 0x000020, "Member 'BP_LightingAndPostProcessController_C_BlendDefaultSkylightValues::CallFunc_Conv_StringToName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LightingAndPostProcessController_C_BlendDefaultSkylightValues, CallFunc_Conv_StringToName_ReturnValue_1) == 0x000028, "Member 'BP_LightingAndPostProcessController_C_BlendDefaultSkylightValues::CallFunc_Conv_StringToName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_LightingAndPostProcessController_C_BlendDefaultSkylightValues, CallFunc_GetDataTableRowFromName_OutRow) == 0x000030, "Member 'BP_LightingAndPostProcessController_C_BlendDefaultSkylightValues::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(BP_LightingAndPostProcessController_C_BlendDefaultSkylightValues, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000790, "Member 'BP_LightingAndPostProcessController_C_BlendDefaultSkylightValues::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LightingAndPostProcessController_C_BlendDefaultSkylightValues, CallFunc_GetDataTableRowFromName_OutRow_1) == 0x0007A0, "Member 'BP_LightingAndPostProcessController_C_BlendDefaultSkylightValues::CallFunc_GetDataTableRowFromName_OutRow_1' has a wrong offset!");
static_assert(offsetof(BP_LightingAndPostProcessController_C_BlendDefaultSkylightValues, CallFunc_GetDataTableRowFromName_ReturnValue_1) == 0x000F00, "Member 'BP_LightingAndPostProcessController_C_BlendDefaultSkylightValues::CallFunc_GetDataTableRowFromName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_LightingAndPostProcessController_C_BlendDefaultSkylightValues, CallFunc_Lerp_ReturnValue) == 0x000F08, "Member 'BP_LightingAndPostProcessController_C_BlendDefaultSkylightValues::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LightingAndPostProcessController_C_BlendDefaultSkylightValues, CallFunc_LinearColorLerp_ReturnValue) == 0x000F10, "Member 'BP_LightingAndPostProcessController_C_BlendDefaultSkylightValues::CallFunc_LinearColorLerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LightingAndPostProcessController_C_BlendDefaultSkylightValues, CallFunc_Lerp_Alpha_ImplicitCast) == 0x000F20, "Member 'BP_LightingAndPostProcessController_C_BlendDefaultSkylightValues::CallFunc_Lerp_Alpha_ImplicitCast' has a wrong offset!");

// Function BP_LightingAndPostProcessController.BP_LightingAndPostProcessController_C.BlendTargetSkylightValues
// 0x0F30 (0x0F30 - 0x0000)
struct BP_LightingAndPostProcessController_C_BlendTargetSkylightValues final
{
public:
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue; // 0x0000(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_1; // 0x0010(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue;            // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue_1;          // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FS_Lighting_Preset                     CallFunc_GetDataTableRowFromName_OutRow;           // 0x0030(0x0760)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0790(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_791[0xF];                                      // 0x0791(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_Lighting_Preset                     CallFunc_GetDataTableRowFromName_OutRow_1;         // 0x07A0(0x0760)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue_1;    // 0x0F00(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F01[0x7];                                      // 0x0F01(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Lerp_ReturnValue;                         // 0x0F08(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_LinearColorLerp_ReturnValue;              // 0x0F10(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_Alpha_ImplicitCast;                  // 0x0F20(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_LightingAndPostProcessController_C_BlendTargetSkylightValues) == 0x000010, "Wrong alignment on BP_LightingAndPostProcessController_C_BlendTargetSkylightValues");
static_assert(sizeof(BP_LightingAndPostProcessController_C_BlendTargetSkylightValues) == 0x000F30, "Wrong size on BP_LightingAndPostProcessController_C_BlendTargetSkylightValues");
static_assert(offsetof(BP_LightingAndPostProcessController_C_BlendTargetSkylightValues, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue) == 0x000000, "Member 'BP_LightingAndPostProcessController_C_BlendTargetSkylightValues::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LightingAndPostProcessController_C_BlendTargetSkylightValues, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_1) == 0x000010, "Member 'BP_LightingAndPostProcessController_C_BlendTargetSkylightValues::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_LightingAndPostProcessController_C_BlendTargetSkylightValues, CallFunc_Conv_StringToName_ReturnValue) == 0x000020, "Member 'BP_LightingAndPostProcessController_C_BlendTargetSkylightValues::CallFunc_Conv_StringToName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LightingAndPostProcessController_C_BlendTargetSkylightValues, CallFunc_Conv_StringToName_ReturnValue_1) == 0x000028, "Member 'BP_LightingAndPostProcessController_C_BlendTargetSkylightValues::CallFunc_Conv_StringToName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_LightingAndPostProcessController_C_BlendTargetSkylightValues, CallFunc_GetDataTableRowFromName_OutRow) == 0x000030, "Member 'BP_LightingAndPostProcessController_C_BlendTargetSkylightValues::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(BP_LightingAndPostProcessController_C_BlendTargetSkylightValues, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000790, "Member 'BP_LightingAndPostProcessController_C_BlendTargetSkylightValues::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LightingAndPostProcessController_C_BlendTargetSkylightValues, CallFunc_GetDataTableRowFromName_OutRow_1) == 0x0007A0, "Member 'BP_LightingAndPostProcessController_C_BlendTargetSkylightValues::CallFunc_GetDataTableRowFromName_OutRow_1' has a wrong offset!");
static_assert(offsetof(BP_LightingAndPostProcessController_C_BlendTargetSkylightValues, CallFunc_GetDataTableRowFromName_ReturnValue_1) == 0x000F00, "Member 'BP_LightingAndPostProcessController_C_BlendTargetSkylightValues::CallFunc_GetDataTableRowFromName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_LightingAndPostProcessController_C_BlendTargetSkylightValues, CallFunc_Lerp_ReturnValue) == 0x000F08, "Member 'BP_LightingAndPostProcessController_C_BlendTargetSkylightValues::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LightingAndPostProcessController_C_BlendTargetSkylightValues, CallFunc_LinearColorLerp_ReturnValue) == 0x000F10, "Member 'BP_LightingAndPostProcessController_C_BlendTargetSkylightValues::CallFunc_LinearColorLerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LightingAndPostProcessController_C_BlendTargetSkylightValues, CallFunc_Lerp_Alpha_ImplicitCast) == 0x000F20, "Member 'BP_LightingAndPostProcessController_C_BlendTargetSkylightValues::CallFunc_Lerp_Alpha_ImplicitCast' has a wrong offset!");

// Function BP_LightingAndPostProcessController.BP_LightingAndPostProcessController_C.ExecuteUbergraph_BP_LightingAndPostProcessController
// 0x08E0 (0x08E0 - 0x0000)
struct BP_LightingAndPostProcessController_C_ExecuteUbergraph_BP_LightingAndPostProcessController final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_Array_Get_Item;                           // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        CallFunc_K2_GetRootComponent_ReturnValue;          // 0x0030(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue_1;          // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue_2;          // 0x003A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue_3;          // 0x003B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue_4;          // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D[0x3];                                       // 0x003D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ABP_JP_PP2_C*>                   CallFunc_GetAllActorsOfClass_OutActors;            // 0x0040(0x0010)(ReferenceParm)
	TArray<class ABP_StorePhone_C*>               CallFunc_GetAllActorsOfClass_OutActors_1;          // 0x0050(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_64[0x4];                                       // 0x0064(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue; // 0x0068(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue;            // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	const class UTweakableData*                   CallFunc_GetTweakableData_ReturnValue;             // 0x0088(0x0008)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_91[0x7];                                       // 0x0091(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameModeBase*                          CallFunc_GetGameMode_ReturnValue;                  // 0x0098(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_ObjectToString_ReturnValue;          // 0x00A0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPackagedForDistribution_ReturnValue;    // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Contains_ReturnValue;                     // 0x00B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_Lighting_Presets                            K2Node_CustomEvent_LightingPreset;                 // 0x00B2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_Lighting_Presets                            K2Node_CustomEvent_LightingPresetNight;            // 0x00B3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B4[0x4];                                       // 0x00B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_CustomEvent_NightTransitionDuration;        // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue;                       // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_CustomEvent_DayTransitionDuration;          // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue_1;                     // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_1;        // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_3;                  // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x00EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F1[0x3];                                       // 0x00F1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x00F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_3;                   // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_FC[0x4];                                       // 0x00FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_JP_PP2_C*                           CallFunc_Array_Get_Item_1;                         // 0x0100(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_JP_PP2_C*                           CallFunc_Array_Get_Item_2;                         // 0x0108(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_3;               // 0x0110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x0114(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_115[0xB];                                      // 0x0115(0x000B)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_Lighting_Preset                     CallFunc_GetDataTableRowFromName_OutRow;           // 0x0120(0x0760)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0880(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_881[0x3];                                      // 0x0881(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_4;               // 0x0884(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_1;          // 0x0888(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x0889(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_88A[0x6];                                      // 0x088A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_JP_PP2_C*                           CallFunc_Array_Get_Item_3;                         // 0x0890(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_5;               // 0x0898(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_3;                // 0x089C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_89D[0x3];                                      // 0x089D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         CallFunc_GetAllActorsWithTag_OutActors;            // 0x08A0(0x0010)(ReferenceParm)
	struct FLinearColor                           CallFunc_LinearColorLerp_ReturnValue;              // 0x08B0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue_5;          // 0x08C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8C1[0x3];                                      // 0x08C1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SetPlayRate_NewRate_ImplicitCast;         // 0x08C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetPlayRate_NewRate_ImplicitCast_1;       // 0x08C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8CC[0x4];                                      // 0x08CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Less_DoubleDouble_A_ImplicitCast;         // 0x08D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_LightingAndPostProcessController_C_ExecuteUbergraph_BP_LightingAndPostProcessController) == 0x000010, "Wrong alignment on BP_LightingAndPostProcessController_C_ExecuteUbergraph_BP_LightingAndPostProcessController");
static_assert(sizeof(BP_LightingAndPostProcessController_C_ExecuteUbergraph_BP_LightingAndPostProcessController) == 0x0008E0, "Wrong size on BP_LightingAndPostProcessController_C_ExecuteUbergraph_BP_LightingAndPostProcessController");
static_assert(offsetof(BP_LightingAndPostProcessController_C_ExecuteUbergraph_BP_LightingAndPostProcessController, EntryPoint) == 0x000000, "Member 'BP_LightingAndPostProcessController_C_ExecuteUbergraph_BP_LightingAndPostProcessController::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_LightingAndPostProcessController_C_ExecuteUbergraph_BP_LightingAndPostProcessController, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'BP_LightingAndPostProcessController_C_ExecuteUbergraph_BP_LightingAndPostProcessController::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_LightingAndPostProcessController_C_ExecuteUbergraph_BP_LightingAndPostProcessController, CallFunc_Array_Length_ReturnValue) == 0x000008, "Member 'BP_LightingAndPostProcessController_C_ExecuteUbergraph_BP_LightingAndPostProcessController::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LightingAndPostProcessController_C_ExecuteUbergraph_BP_LightingAndPostProcessController, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'BP_LightingAndPostProcessController_C_ExecuteUbergraph_BP_LightingAndPostProcessController::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LightingAndPostProcessController_C_ExecuteUbergraph_BP_LightingAndPostProcessController, Temp_int_Array_Index_Variable) == 0x000010, "Member 'BP_LightingAndPostProcessController_C_ExecuteUbergraph_BP_LightingAndPostProcessController::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_LightingAndPostProcessController_C_ExecuteUbergraph_BP_LightingAndPostProcessController, Temp_int_Array_Index_Variable_1) == 0x000014, "Member 'BP_LightingAndPostProcessController_C_ExecuteUbergraph_BP_LightingAndPostProcessController::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_LightingAndPostProcessController_C_ExecuteUbergraph_BP_LightingAndPostProcessController, Temp_int_Loop_Counter_Variable_1) == 0x000018, "Member 'BP_LightingAndPostProcessController_C_ExecuteUbergraph_BP_LightingAndPostProcessController::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_LightingAndPostProcessController_C_ExecuteUbergraph_BP_LightingAndPostProcessController, CallFunc_Less_IntInt_ReturnValue) == 0x00001C, "Member 'BP_LightingAndPostProcessController_C_ExecuteUbergraph_BP_LightingAndPostProcessController::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LightingAndPostProcessController_C_ExecuteUbergraph_BP_LightingAndPostProcessController, CallFunc_Add_IntInt_ReturnValue_1) == 0x000020, "Member 'BP_LightingAndPostProcessController_C_ExecuteUbergraph_BP_LightingAndPostProcessController::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_LightingAndPostProcessController_C_ExecuteUbergraph_BP_LightingAndPostProcessController, Temp_int_Array_Index_Variable_2) == 0x000024, "Member 'BP_LightingAndPostProcessController_C_ExecuteUbergraph_BP_LightingAndPostProcessController::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_LightingAndPostProcessController_C_ExecuteUbergraph_BP_LightingAndPostProcessController, CallFunc_Array_Get_Item) == 0x000028, "Member 'BP_LightingAndPostProcessController_C_ExecuteUbergraph_BP_LightingAndPostProcessController::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_LightingAndPostProcessController_C_ExecuteUbergraph_BP_LightingAndPostProcessController, CallFunc_K2_GetRootComponent_ReturnValue) == 0x000030, "Member 'BP_LightingAndPostProcessController_C_ExecuteUbergraph_BP_LightingAndPostProcessController::CallFunc_K2_GetRootComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LightingAndPostProcessController_C_ExecuteUbergraph_BP_LightingAndPostProcessController, CallFunc_IsDedicatedServer_ReturnValue) == 0x000038, "Member 'BP_LightingAndPostProcessController_C_ExecuteUbergraph_BP_LightingAndPostProcessController::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LightingAndPostProcessController_C_ExecuteUbergraph_BP_LightingAndPostProcessController, CallFunc_IsDedicatedServer_ReturnValue_1) == 0x000039, "Member 'BP_LightingAndPostProcessController_C_ExecuteUbergraph_BP_LightingAndPostProcessController::CallFunc_IsDedicatedServer_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_LightingAndPostProcessController_C_ExecuteUbergraph_BP_LightingAndPostProcessController, CallFunc_IsDedicatedServer_ReturnValue_2) == 0x00003A, "Member 'BP_LightingAndPostProcessController_C_ExecuteUbergraph_BP_LightingAndPostProcessController::CallFunc_IsDedicatedServer_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_LightingAndPostProcessController_C_ExecuteUbergraph_BP_LightingAndPostProcessController, CallFunc_IsDedicatedServer_ReturnValue_3) == 0x00003B, "Member 'BP_LightingAndPostProcessController_C_ExecuteUbergraph_BP_LightingAndPostProcessController::CallFunc_IsDedicatedServer_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_LightingAndPostProcessController_C_ExecuteUbergraph_BP_LightingAndPostProcessController, CallFunc_IsDedicatedServer_ReturnValue_4) == 0x00003C, "Member 'BP_LightingAndPostProcessController_C_ExecuteUbergraph_BP_LightingAndPostProcessController::CallFunc_IsDedicatedServer_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_LightingAndPostProcessController_C_ExecuteUbergraph_BP_LightingAndPostProcessController, CallFunc_GetAllActorsOfClass_OutActors) == 0x000040, "Member 'BP_LightingAndPostProcessController_C_ExecuteUbergraph_BP_LightingAndPostProcessController::CallFunc_GetAllActorsOfClass_OutActors' has a wrong offset!");
static_assert(offsetof(BP_LightingAndPostProcessController_C_ExecuteUbergraph_BP_LightingAndPostProcessController, CallFunc_GetAllActorsOfClass_OutActors_1) == 0x000050, "Member 'BP_LightingAndPostProcessController_C_ExecuteUbergraph_BP_LightingAndPostProcessController::CallFunc_GetAllActorsOfClass_OutActors_1' has a wrong offset!");
static_assert(offsetof(BP_LightingAndPostProcessController_C_ExecuteUbergraph_BP_LightingAndPostProcessController, CallFunc_Array_Length_ReturnValue_1) == 0x000060, "Member 'BP_LightingAndPostProcessController_C_ExecuteUbergraph_BP_LightingAndPostProcessController::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_LightingAndPostProcessController_C_ExecuteUbergraph_BP_LightingAndPostProcessController, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue) == 0x000068, "Member 'BP_LightingAndPostProcessController_C_ExecuteUbergraph_BP_LightingAndPostProcessController::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LightingAndPostProcessController_C_ExecuteUbergraph_BP_LightingAndPostProcessController, CallFunc_Conv_StringToName_ReturnValue) == 0x000078, "Member 'BP_LightingAndPostProcessController_C_ExecuteUbergraph_BP_LightingAndPostProcessController::CallFunc_Conv_StringToName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LightingAndPostProcessController_C_ExecuteUbergraph_BP_LightingAndPostProcessController, Temp_int_Loop_Counter_Variable_2) == 0x000080, "Member 'BP_LightingAndPostProcessController_C_ExecuteUbergraph_BP_LightingAndPostProcessController::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_LightingAndPostProcessController_C_ExecuteUbergraph_BP_LightingAndPostProcessController, CallFunc_Add_IntInt_ReturnValue_2) == 0x000084, "Member 'BP_LightingAndPostProcessController_C_ExecuteUbergraph_BP_LightingAndPostProcessController::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_LightingAndPostProcessController_C_ExecuteUbergraph_BP_LightingAndPostProcessController, CallFunc_GetTweakableData_ReturnValue) == 0x000088, "Member 'BP_LightingAndPostProcessController_C_ExecuteUbergraph_BP_LightingAndPostProcessController::CallFunc_GetTweakableData_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LightingAndPostProcessController_C_ExecuteUbergraph_BP_LightingAndPostProcessController, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000090, "Member 'BP_LightingAndPostProcessController_C_ExecuteUbergraph_BP_LightingAndPostProcessController::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LightingAndPostProcessController_C_ExecuteUbergraph_BP_LightingAndPostProcessController, CallFunc_GetGameMode_ReturnValue) == 0x000098, "Member 'BP_LightingAndPostProcessController_C_ExecuteUbergraph_BP_LightingAndPostProcessController::CallFunc_GetGameMode_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LightingAndPostProcessController_C_ExecuteUbergraph_BP_LightingAndPostProcessController, CallFunc_Conv_ObjectToString_ReturnValue) == 0x0000A0, "Member 'BP_LightingAndPostProcessController_C_ExecuteUbergraph_BP_LightingAndPostProcessController::CallFunc_Conv_ObjectToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LightingAndPostProcessController_C_ExecuteUbergraph_BP_LightingAndPostProcessController, CallFunc_IsPackagedForDistribution_ReturnValue) == 0x0000B0, "Member 'BP_LightingAndPostProcessController_C_ExecuteUbergraph_BP_LightingAndPostProcessController::CallFunc_IsPackagedForDistribution_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LightingAndPostProcessController_C_ExecuteUbergraph_BP_LightingAndPostProcessController, CallFunc_Contains_ReturnValue) == 0x0000B1, "Member 'BP_LightingAndPostProcessController_C_ExecuteUbergraph_BP_LightingAndPostProcessController::CallFunc_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LightingAndPostProcessController_C_ExecuteUbergraph_BP_LightingAndPostProcessController, K2Node_CustomEvent_LightingPreset) == 0x0000B2, "Member 'BP_LightingAndPostProcessController_C_ExecuteUbergraph_BP_LightingAndPostProcessController::K2Node_CustomEvent_LightingPreset' has a wrong offset!");
static_assert(offsetof(BP_LightingAndPostProcessController_C_ExecuteUbergraph_BP_LightingAndPostProcessController, K2Node_CustomEvent_LightingPresetNight) == 0x0000B3, "Member 'BP_LightingAndPostProcessController_C_ExecuteUbergraph_BP_LightingAndPostProcessController::K2Node_CustomEvent_LightingPresetNight' has a wrong offset!");
static_assert(offsetof(BP_LightingAndPostProcessController_C_ExecuteUbergraph_BP_LightingAndPostProcessController, K2Node_CustomEvent_NightTransitionDuration) == 0x0000B8, "Member 'BP_LightingAndPostProcessController_C_ExecuteUbergraph_BP_LightingAndPostProcessController::K2Node_CustomEvent_NightTransitionDuration' has a wrong offset!");
static_assert(offsetof(BP_LightingAndPostProcessController_C_ExecuteUbergraph_BP_LightingAndPostProcessController, CallFunc_FClamp_ReturnValue) == 0x0000C0, "Member 'BP_LightingAndPostProcessController_C_ExecuteUbergraph_BP_LightingAndPostProcessController::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LightingAndPostProcessController_C_ExecuteUbergraph_BP_LightingAndPostProcessController, K2Node_CustomEvent_DayTransitionDuration) == 0x0000C8, "Member 'BP_LightingAndPostProcessController_C_ExecuteUbergraph_BP_LightingAndPostProcessController::K2Node_CustomEvent_DayTransitionDuration' has a wrong offset!");
static_assert(offsetof(BP_LightingAndPostProcessController_C_ExecuteUbergraph_BP_LightingAndPostProcessController, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x0000D0, "Member 'BP_LightingAndPostProcessController_C_ExecuteUbergraph_BP_LightingAndPostProcessController::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LightingAndPostProcessController_C_ExecuteUbergraph_BP_LightingAndPostProcessController, CallFunc_FClamp_ReturnValue_1) == 0x0000D8, "Member 'BP_LightingAndPostProcessController_C_ExecuteUbergraph_BP_LightingAndPostProcessController::CallFunc_FClamp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_LightingAndPostProcessController_C_ExecuteUbergraph_BP_LightingAndPostProcessController, CallFunc_Divide_DoubleDouble_ReturnValue_1) == 0x0000E0, "Member 'BP_LightingAndPostProcessController_C_ExecuteUbergraph_BP_LightingAndPostProcessController::CallFunc_Divide_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_LightingAndPostProcessController_C_ExecuteUbergraph_BP_LightingAndPostProcessController, Temp_int_Loop_Counter_Variable_3) == 0x0000E8, "Member 'BP_LightingAndPostProcessController_C_ExecuteUbergraph_BP_LightingAndPostProcessController::Temp_int_Loop_Counter_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_LightingAndPostProcessController_C_ExecuteUbergraph_BP_LightingAndPostProcessController, CallFunc_Array_Length_ReturnValue_2) == 0x0000EC, "Member 'BP_LightingAndPostProcessController_C_ExecuteUbergraph_BP_LightingAndPostProcessController::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_LightingAndPostProcessController_C_ExecuteUbergraph_BP_LightingAndPostProcessController, CallFunc_Less_IntInt_ReturnValue_1) == 0x0000F0, "Member 'BP_LightingAndPostProcessController_C_ExecuteUbergraph_BP_LightingAndPostProcessController::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_LightingAndPostProcessController_C_ExecuteUbergraph_BP_LightingAndPostProcessController, CallFunc_Add_IntInt_ReturnValue_3) == 0x0000F4, "Member 'BP_LightingAndPostProcessController_C_ExecuteUbergraph_BP_LightingAndPostProcessController::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_LightingAndPostProcessController_C_ExecuteUbergraph_BP_LightingAndPostProcessController, Temp_int_Array_Index_Variable_3) == 0x0000F8, "Member 'BP_LightingAndPostProcessController_C_ExecuteUbergraph_BP_LightingAndPostProcessController::Temp_int_Array_Index_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_LightingAndPostProcessController_C_ExecuteUbergraph_BP_LightingAndPostProcessController, CallFunc_Array_Get_Item_1) == 0x000100, "Member 'BP_LightingAndPostProcessController_C_ExecuteUbergraph_BP_LightingAndPostProcessController::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_LightingAndPostProcessController_C_ExecuteUbergraph_BP_LightingAndPostProcessController, CallFunc_Array_Get_Item_2) == 0x000108, "Member 'BP_LightingAndPostProcessController_C_ExecuteUbergraph_BP_LightingAndPostProcessController::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(BP_LightingAndPostProcessController_C_ExecuteUbergraph_BP_LightingAndPostProcessController, CallFunc_Array_Length_ReturnValue_3) == 0x000110, "Member 'BP_LightingAndPostProcessController_C_ExecuteUbergraph_BP_LightingAndPostProcessController::CallFunc_Array_Length_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_LightingAndPostProcessController_C_ExecuteUbergraph_BP_LightingAndPostProcessController, CallFunc_Less_IntInt_ReturnValue_2) == 0x000114, "Member 'BP_LightingAndPostProcessController_C_ExecuteUbergraph_BP_LightingAndPostProcessController::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_LightingAndPostProcessController_C_ExecuteUbergraph_BP_LightingAndPostProcessController, CallFunc_GetDataTableRowFromName_OutRow) == 0x000120, "Member 'BP_LightingAndPostProcessController_C_ExecuteUbergraph_BP_LightingAndPostProcessController::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(BP_LightingAndPostProcessController_C_ExecuteUbergraph_BP_LightingAndPostProcessController, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000880, "Member 'BP_LightingAndPostProcessController_C_ExecuteUbergraph_BP_LightingAndPostProcessController::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LightingAndPostProcessController_C_ExecuteUbergraph_BP_LightingAndPostProcessController, CallFunc_Array_Length_ReturnValue_4) == 0x000884, "Member 'BP_LightingAndPostProcessController_C_ExecuteUbergraph_BP_LightingAndPostProcessController::CallFunc_Array_Length_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_LightingAndPostProcessController_C_ExecuteUbergraph_BP_LightingAndPostProcessController, CallFunc_EqualEqual_IntInt_ReturnValue_1) == 0x000888, "Member 'BP_LightingAndPostProcessController_C_ExecuteUbergraph_BP_LightingAndPostProcessController::CallFunc_EqualEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_LightingAndPostProcessController_C_ExecuteUbergraph_BP_LightingAndPostProcessController, CallFunc_Less_DoubleDouble_ReturnValue) == 0x000889, "Member 'BP_LightingAndPostProcessController_C_ExecuteUbergraph_BP_LightingAndPostProcessController::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LightingAndPostProcessController_C_ExecuteUbergraph_BP_LightingAndPostProcessController, CallFunc_Array_Get_Item_3) == 0x000890, "Member 'BP_LightingAndPostProcessController_C_ExecuteUbergraph_BP_LightingAndPostProcessController::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(BP_LightingAndPostProcessController_C_ExecuteUbergraph_BP_LightingAndPostProcessController, CallFunc_Array_Length_ReturnValue_5) == 0x000898, "Member 'BP_LightingAndPostProcessController_C_ExecuteUbergraph_BP_LightingAndPostProcessController::CallFunc_Array_Length_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_LightingAndPostProcessController_C_ExecuteUbergraph_BP_LightingAndPostProcessController, CallFunc_Less_IntInt_ReturnValue_3) == 0x00089C, "Member 'BP_LightingAndPostProcessController_C_ExecuteUbergraph_BP_LightingAndPostProcessController::CallFunc_Less_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_LightingAndPostProcessController_C_ExecuteUbergraph_BP_LightingAndPostProcessController, CallFunc_GetAllActorsWithTag_OutActors) == 0x0008A0, "Member 'BP_LightingAndPostProcessController_C_ExecuteUbergraph_BP_LightingAndPostProcessController::CallFunc_GetAllActorsWithTag_OutActors' has a wrong offset!");
static_assert(offsetof(BP_LightingAndPostProcessController_C_ExecuteUbergraph_BP_LightingAndPostProcessController, CallFunc_LinearColorLerp_ReturnValue) == 0x0008B0, "Member 'BP_LightingAndPostProcessController_C_ExecuteUbergraph_BP_LightingAndPostProcessController::CallFunc_LinearColorLerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LightingAndPostProcessController_C_ExecuteUbergraph_BP_LightingAndPostProcessController, CallFunc_IsDedicatedServer_ReturnValue_5) == 0x0008C0, "Member 'BP_LightingAndPostProcessController_C_ExecuteUbergraph_BP_LightingAndPostProcessController::CallFunc_IsDedicatedServer_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_LightingAndPostProcessController_C_ExecuteUbergraph_BP_LightingAndPostProcessController, CallFunc_SetPlayRate_NewRate_ImplicitCast) == 0x0008C4, "Member 'BP_LightingAndPostProcessController_C_ExecuteUbergraph_BP_LightingAndPostProcessController::CallFunc_SetPlayRate_NewRate_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_LightingAndPostProcessController_C_ExecuteUbergraph_BP_LightingAndPostProcessController, CallFunc_SetPlayRate_NewRate_ImplicitCast_1) == 0x0008C8, "Member 'BP_LightingAndPostProcessController_C_ExecuteUbergraph_BP_LightingAndPostProcessController::CallFunc_SetPlayRate_NewRate_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(BP_LightingAndPostProcessController_C_ExecuteUbergraph_BP_LightingAndPostProcessController, CallFunc_Less_DoubleDouble_A_ImplicitCast) == 0x0008D0, "Member 'BP_LightingAndPostProcessController_C_ExecuteUbergraph_BP_LightingAndPostProcessController::CallFunc_Less_DoubleDouble_A_ImplicitCast' has a wrong offset!");

// Function BP_LightingAndPostProcessController.BP_LightingAndPostProcessController_C.ImplementDefaults
// 0x0028 (0x0028 - 0x0000)
struct BP_LightingAndPostProcessController_C_ImplementDefaults final
{
public:
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class USceneComponent*                        CallFunc_K2_GetRootComponent_ReturnValue;          // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetTemperature_NewTemperature_ImplicitCast; // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetIntensity_NewIntensity_ImplicitCast;   // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetIntensity_NewIntensity_ImplicitCast_1; // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetTemperature_NewTemperature_ImplicitCast_1; // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetIntensity_NewIntensity_ImplicitCast_2; // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_LightingAndPostProcessController_C_ImplementDefaults) == 0x000008, "Wrong alignment on BP_LightingAndPostProcessController_C_ImplementDefaults");
static_assert(sizeof(BP_LightingAndPostProcessController_C_ImplementDefaults) == 0x000028, "Wrong size on BP_LightingAndPostProcessController_C_ImplementDefaults");
static_assert(offsetof(BP_LightingAndPostProcessController_C_ImplementDefaults, CallFunc_Not_PreBool_ReturnValue) == 0x000000, "Member 'BP_LightingAndPostProcessController_C_ImplementDefaults::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LightingAndPostProcessController_C_ImplementDefaults, CallFunc_Not_PreBool_ReturnValue_1) == 0x000001, "Member 'BP_LightingAndPostProcessController_C_ImplementDefaults::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_LightingAndPostProcessController_C_ImplementDefaults, CallFunc_K2_GetRootComponent_ReturnValue) == 0x000008, "Member 'BP_LightingAndPostProcessController_C_ImplementDefaults::CallFunc_K2_GetRootComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LightingAndPostProcessController_C_ImplementDefaults, CallFunc_SetTemperature_NewTemperature_ImplicitCast) == 0x000010, "Member 'BP_LightingAndPostProcessController_C_ImplementDefaults::CallFunc_SetTemperature_NewTemperature_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_LightingAndPostProcessController_C_ImplementDefaults, CallFunc_SetIntensity_NewIntensity_ImplicitCast) == 0x000014, "Member 'BP_LightingAndPostProcessController_C_ImplementDefaults::CallFunc_SetIntensity_NewIntensity_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_LightingAndPostProcessController_C_ImplementDefaults, CallFunc_SetIntensity_NewIntensity_ImplicitCast_1) == 0x000018, "Member 'BP_LightingAndPostProcessController_C_ImplementDefaults::CallFunc_SetIntensity_NewIntensity_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(BP_LightingAndPostProcessController_C_ImplementDefaults, CallFunc_SetTemperature_NewTemperature_ImplicitCast_1) == 0x00001C, "Member 'BP_LightingAndPostProcessController_C_ImplementDefaults::CallFunc_SetTemperature_NewTemperature_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(BP_LightingAndPostProcessController_C_ImplementDefaults, CallFunc_SetIntensity_NewIntensity_ImplicitCast_2) == 0x000020, "Member 'BP_LightingAndPostProcessController_C_ImplementDefaults::CallFunc_SetIntensity_NewIntensity_ImplicitCast_2' has a wrong offset!");

// Function BP_LightingAndPostProcessController.BP_LightingAndPostProcessController_C.NightEvents
// 0x0058 (0x0058 - 0x0000)
struct BP_LightingAndPostProcessController_C_NightEvents final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_Array_Get_Item;                           // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_Array_Get_Item_1;                         // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D[0x3];                                       // 0x003D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_45[0x3];                                       // 0x0045(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_Array_Get_Item_2;                         // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_LightingAndPostProcessController_C_NightEvents) == 0x000008, "Wrong alignment on BP_LightingAndPostProcessController_C_NightEvents");
static_assert(sizeof(BP_LightingAndPostProcessController_C_NightEvents) == 0x000058, "Wrong size on BP_LightingAndPostProcessController_C_NightEvents");
static_assert(offsetof(BP_LightingAndPostProcessController_C_NightEvents, Temp_int_Array_Index_Variable) == 0x000000, "Member 'BP_LightingAndPostProcessController_C_NightEvents::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_LightingAndPostProcessController_C_NightEvents, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'BP_LightingAndPostProcessController_C_NightEvents::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_LightingAndPostProcessController_C_NightEvents, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'BP_LightingAndPostProcessController_C_NightEvents::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LightingAndPostProcessController_C_NightEvents, CallFunc_IsDedicatedServer_ReturnValue) == 0x00000C, "Member 'BP_LightingAndPostProcessController_C_NightEvents::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LightingAndPostProcessController_C_NightEvents, Temp_int_Array_Index_Variable_1) == 0x000010, "Member 'BP_LightingAndPostProcessController_C_NightEvents::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_LightingAndPostProcessController_C_NightEvents, Temp_int_Loop_Counter_Variable_1) == 0x000014, "Member 'BP_LightingAndPostProcessController_C_NightEvents::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_LightingAndPostProcessController_C_NightEvents, CallFunc_Add_IntInt_ReturnValue_1) == 0x000018, "Member 'BP_LightingAndPostProcessController_C_NightEvents::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_LightingAndPostProcessController_C_NightEvents, Temp_int_Array_Index_Variable_2) == 0x00001C, "Member 'BP_LightingAndPostProcessController_C_NightEvents::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_LightingAndPostProcessController_C_NightEvents, Temp_int_Loop_Counter_Variable_2) == 0x000020, "Member 'BP_LightingAndPostProcessController_C_NightEvents::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_LightingAndPostProcessController_C_NightEvents, CallFunc_Add_IntInt_ReturnValue_2) == 0x000024, "Member 'BP_LightingAndPostProcessController_C_NightEvents::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_LightingAndPostProcessController_C_NightEvents, CallFunc_Array_Get_Item) == 0x000028, "Member 'BP_LightingAndPostProcessController_C_NightEvents::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_LightingAndPostProcessController_C_NightEvents, CallFunc_Array_Get_Item_1) == 0x000030, "Member 'BP_LightingAndPostProcessController_C_NightEvents::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_LightingAndPostProcessController_C_NightEvents, CallFunc_Array_Length_ReturnValue) == 0x000038, "Member 'BP_LightingAndPostProcessController_C_NightEvents::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LightingAndPostProcessController_C_NightEvents, CallFunc_Less_IntInt_ReturnValue) == 0x00003C, "Member 'BP_LightingAndPostProcessController_C_NightEvents::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LightingAndPostProcessController_C_NightEvents, CallFunc_Array_Length_ReturnValue_1) == 0x000040, "Member 'BP_LightingAndPostProcessController_C_NightEvents::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_LightingAndPostProcessController_C_NightEvents, CallFunc_Less_IntInt_ReturnValue_1) == 0x000044, "Member 'BP_LightingAndPostProcessController_C_NightEvents::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_LightingAndPostProcessController_C_NightEvents, CallFunc_Array_Get_Item_2) == 0x000048, "Member 'BP_LightingAndPostProcessController_C_NightEvents::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(BP_LightingAndPostProcessController_C_NightEvents, CallFunc_Array_Length_ReturnValue_2) == 0x000050, "Member 'BP_LightingAndPostProcessController_C_NightEvents::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_LightingAndPostProcessController_C_NightEvents, CallFunc_Less_IntInt_ReturnValue_2) == 0x000054, "Member 'BP_LightingAndPostProcessController_C_NightEvents::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");

// Function BP_LightingAndPostProcessController.BP_LightingAndPostProcessController_C.PP Overlapped
// 0x0002 (0x0002 - 0x0000)
struct BP_LightingAndPostProcessController_C_PP_Overlapped final
{
public:
	E_Lighting_Presets                            LightingPreset;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_Lighting_Presets                            LightingPresetNight;                               // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_LightingAndPostProcessController_C_PP_Overlapped) == 0x000001, "Wrong alignment on BP_LightingAndPostProcessController_C_PP_Overlapped");
static_assert(sizeof(BP_LightingAndPostProcessController_C_PP_Overlapped) == 0x000002, "Wrong size on BP_LightingAndPostProcessController_C_PP_Overlapped");
static_assert(offsetof(BP_LightingAndPostProcessController_C_PP_Overlapped, LightingPreset) == 0x000000, "Member 'BP_LightingAndPostProcessController_C_PP_Overlapped::LightingPreset' has a wrong offset!");
static_assert(offsetof(BP_LightingAndPostProcessController_C_PP_Overlapped, LightingPresetNight) == 0x000001, "Member 'BP_LightingAndPostProcessController_C_PP_Overlapped::LightingPresetNight' has a wrong offset!");

// Function BP_LightingAndPostProcessController.BP_LightingAndPostProcessController_C.ReplaceBackgroundBuildingMaterials
// 0x00A0 (0x00A0 - 0x0000)
struct BP_LightingAndPostProcessController_C_ReplaceBackgroundBuildingMaterials final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_Array_Get_Item;                           // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstance*                      CallFunc_Array_Get_Item_1;                         // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51[0x3];                                       // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         CallFunc_GetAllActorsWithTag_OutActors;            // 0x0058(0x0010)(ReferenceParm)
	class UMaterialInstance*                      CallFunc_Array_Get_Item_2;                         // 0x0068(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_Array_Get_Item_3;                         // 0x0070(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7C[0x4];                                       // 0x007C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UStaticMeshComponent*                   CallFunc_GetComponentByClass_ReturnValue;          // 0x0080(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_89[0x7];                                       // 0x0089(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInterface*                     CallFunc_GetMaterial_ReturnValue;                  // 0x0090(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x009C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x009D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_LightingAndPostProcessController_C_ReplaceBackgroundBuildingMaterials) == 0x000008, "Wrong alignment on BP_LightingAndPostProcessController_C_ReplaceBackgroundBuildingMaterials");
static_assert(sizeof(BP_LightingAndPostProcessController_C_ReplaceBackgroundBuildingMaterials) == 0x0000A0, "Wrong size on BP_LightingAndPostProcessController_C_ReplaceBackgroundBuildingMaterials");
static_assert(offsetof(BP_LightingAndPostProcessController_C_ReplaceBackgroundBuildingMaterials, Temp_int_Array_Index_Variable) == 0x000000, "Member 'BP_LightingAndPostProcessController_C_ReplaceBackgroundBuildingMaterials::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_LightingAndPostProcessController_C_ReplaceBackgroundBuildingMaterials, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'BP_LightingAndPostProcessController_C_ReplaceBackgroundBuildingMaterials::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_LightingAndPostProcessController_C_ReplaceBackgroundBuildingMaterials, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'BP_LightingAndPostProcessController_C_ReplaceBackgroundBuildingMaterials::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LightingAndPostProcessController_C_ReplaceBackgroundBuildingMaterials, Temp_int_Loop_Counter_Variable_1) == 0x00000C, "Member 'BP_LightingAndPostProcessController_C_ReplaceBackgroundBuildingMaterials::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_LightingAndPostProcessController_C_ReplaceBackgroundBuildingMaterials, CallFunc_Add_IntInt_ReturnValue_1) == 0x000010, "Member 'BP_LightingAndPostProcessController_C_ReplaceBackgroundBuildingMaterials::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_LightingAndPostProcessController_C_ReplaceBackgroundBuildingMaterials, Temp_int_Array_Index_Variable_1) == 0x000014, "Member 'BP_LightingAndPostProcessController_C_ReplaceBackgroundBuildingMaterials::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_LightingAndPostProcessController_C_ReplaceBackgroundBuildingMaterials, Temp_int_Loop_Counter_Variable_2) == 0x000018, "Member 'BP_LightingAndPostProcessController_C_ReplaceBackgroundBuildingMaterials::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_LightingAndPostProcessController_C_ReplaceBackgroundBuildingMaterials, CallFunc_Add_IntInt_ReturnValue_2) == 0x00001C, "Member 'BP_LightingAndPostProcessController_C_ReplaceBackgroundBuildingMaterials::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_LightingAndPostProcessController_C_ReplaceBackgroundBuildingMaterials, Temp_int_Array_Index_Variable_2) == 0x000020, "Member 'BP_LightingAndPostProcessController_C_ReplaceBackgroundBuildingMaterials::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_LightingAndPostProcessController_C_ReplaceBackgroundBuildingMaterials, CallFunc_Array_Get_Item) == 0x000028, "Member 'BP_LightingAndPostProcessController_C_ReplaceBackgroundBuildingMaterials::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_LightingAndPostProcessController_C_ReplaceBackgroundBuildingMaterials, CallFunc_IsDedicatedServer_ReturnValue) == 0x000030, "Member 'BP_LightingAndPostProcessController_C_ReplaceBackgroundBuildingMaterials::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LightingAndPostProcessController_C_ReplaceBackgroundBuildingMaterials, CallFunc_Array_Get_Item_1) == 0x000038, "Member 'BP_LightingAndPostProcessController_C_ReplaceBackgroundBuildingMaterials::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_LightingAndPostProcessController_C_ReplaceBackgroundBuildingMaterials, CallFunc_Array_Length_ReturnValue) == 0x000040, "Member 'BP_LightingAndPostProcessController_C_ReplaceBackgroundBuildingMaterials::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LightingAndPostProcessController_C_ReplaceBackgroundBuildingMaterials, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x000048, "Member 'BP_LightingAndPostProcessController_C_ReplaceBackgroundBuildingMaterials::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LightingAndPostProcessController_C_ReplaceBackgroundBuildingMaterials, CallFunc_Less_IntInt_ReturnValue) == 0x000050, "Member 'BP_LightingAndPostProcessController_C_ReplaceBackgroundBuildingMaterials::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LightingAndPostProcessController_C_ReplaceBackgroundBuildingMaterials, CallFunc_Array_Add_ReturnValue) == 0x000054, "Member 'BP_LightingAndPostProcessController_C_ReplaceBackgroundBuildingMaterials::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LightingAndPostProcessController_C_ReplaceBackgroundBuildingMaterials, CallFunc_GetAllActorsWithTag_OutActors) == 0x000058, "Member 'BP_LightingAndPostProcessController_C_ReplaceBackgroundBuildingMaterials::CallFunc_GetAllActorsWithTag_OutActors' has a wrong offset!");
static_assert(offsetof(BP_LightingAndPostProcessController_C_ReplaceBackgroundBuildingMaterials, CallFunc_Array_Get_Item_2) == 0x000068, "Member 'BP_LightingAndPostProcessController_C_ReplaceBackgroundBuildingMaterials::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(BP_LightingAndPostProcessController_C_ReplaceBackgroundBuildingMaterials, CallFunc_Array_Get_Item_3) == 0x000070, "Member 'BP_LightingAndPostProcessController_C_ReplaceBackgroundBuildingMaterials::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(BP_LightingAndPostProcessController_C_ReplaceBackgroundBuildingMaterials, CallFunc_Array_Length_ReturnValue_1) == 0x000078, "Member 'BP_LightingAndPostProcessController_C_ReplaceBackgroundBuildingMaterials::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_LightingAndPostProcessController_C_ReplaceBackgroundBuildingMaterials, CallFunc_GetComponentByClass_ReturnValue) == 0x000080, "Member 'BP_LightingAndPostProcessController_C_ReplaceBackgroundBuildingMaterials::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LightingAndPostProcessController_C_ReplaceBackgroundBuildingMaterials, CallFunc_Less_IntInt_ReturnValue_1) == 0x000088, "Member 'BP_LightingAndPostProcessController_C_ReplaceBackgroundBuildingMaterials::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_LightingAndPostProcessController_C_ReplaceBackgroundBuildingMaterials, CallFunc_GetMaterial_ReturnValue) == 0x000090, "Member 'BP_LightingAndPostProcessController_C_ReplaceBackgroundBuildingMaterials::CallFunc_GetMaterial_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LightingAndPostProcessController_C_ReplaceBackgroundBuildingMaterials, CallFunc_Array_Length_ReturnValue_2) == 0x000098, "Member 'BP_LightingAndPostProcessController_C_ReplaceBackgroundBuildingMaterials::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_LightingAndPostProcessController_C_ReplaceBackgroundBuildingMaterials, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x00009C, "Member 'BP_LightingAndPostProcessController_C_ReplaceBackgroundBuildingMaterials::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LightingAndPostProcessController_C_ReplaceBackgroundBuildingMaterials, CallFunc_Less_IntInt_ReturnValue_2) == 0x00009D, "Member 'BP_LightingAndPostProcessController_C_ReplaceBackgroundBuildingMaterials::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");

// Function BP_LightingAndPostProcessController.BP_LightingAndPostProcessController_C.SetDefaultVariables
// 0x0F10 (0x0F10 - 0x0000)
struct BP_LightingAndPostProcessController_C_SetDefaultVariables final
{
public:
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue; // 0x0000(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue;            // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_1; // 0x0018(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	uint8                                         Pad_28[0x8];                                       // 0x0028(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_Lighting_Preset                     CallFunc_GetDataTableRowFromName_OutRow;           // 0x0030(0x0760)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0790(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_791[0x3];                                      // 0x0791(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_Conv_StringToName_ReturnValue_1;          // 0x0794(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_79C[0x4];                                      // 0x079C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_Lighting_Preset                     CallFunc_GetDataTableRowFromName_OutRow_1;         // 0x07A0(0x0760)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue_1;    // 0x0F00(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_LightingAndPostProcessController_C_SetDefaultVariables) == 0x000010, "Wrong alignment on BP_LightingAndPostProcessController_C_SetDefaultVariables");
static_assert(sizeof(BP_LightingAndPostProcessController_C_SetDefaultVariables) == 0x000F10, "Wrong size on BP_LightingAndPostProcessController_C_SetDefaultVariables");
static_assert(offsetof(BP_LightingAndPostProcessController_C_SetDefaultVariables, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue) == 0x000000, "Member 'BP_LightingAndPostProcessController_C_SetDefaultVariables::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LightingAndPostProcessController_C_SetDefaultVariables, CallFunc_Conv_StringToName_ReturnValue) == 0x000010, "Member 'BP_LightingAndPostProcessController_C_SetDefaultVariables::CallFunc_Conv_StringToName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LightingAndPostProcessController_C_SetDefaultVariables, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_1) == 0x000018, "Member 'BP_LightingAndPostProcessController_C_SetDefaultVariables::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_LightingAndPostProcessController_C_SetDefaultVariables, CallFunc_GetDataTableRowFromName_OutRow) == 0x000030, "Member 'BP_LightingAndPostProcessController_C_SetDefaultVariables::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(BP_LightingAndPostProcessController_C_SetDefaultVariables, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000790, "Member 'BP_LightingAndPostProcessController_C_SetDefaultVariables::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LightingAndPostProcessController_C_SetDefaultVariables, CallFunc_Conv_StringToName_ReturnValue_1) == 0x000794, "Member 'BP_LightingAndPostProcessController_C_SetDefaultVariables::CallFunc_Conv_StringToName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_LightingAndPostProcessController_C_SetDefaultVariables, CallFunc_GetDataTableRowFromName_OutRow_1) == 0x0007A0, "Member 'BP_LightingAndPostProcessController_C_SetDefaultVariables::CallFunc_GetDataTableRowFromName_OutRow_1' has a wrong offset!");
static_assert(offsetof(BP_LightingAndPostProcessController_C_SetDefaultVariables, CallFunc_GetDataTableRowFromName_ReturnValue_1) == 0x000F00, "Member 'BP_LightingAndPostProcessController_C_SetDefaultVariables::CallFunc_GetDataTableRowFromName_ReturnValue_1' has a wrong offset!");

// Function BP_LightingAndPostProcessController.BP_LightingAndPostProcessController_C.SetLightingSettingsPreview
// 0x07E0 (0x07E0 - 0x0000)
struct BP_LightingAndPostProcessController_C_SetLightingSettingsPreview final
{
public:
	E_Lighting_Presets                            Enumerator;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue; // 0x0008(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue;            // 0x001C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class ABP_StreetLamp_C*>               CallFunc_GetAllActorsOfClass_OutActors;            // 0x0028(0x0010)(ReferenceParm)
	class ABP_StreetLamp_C*                       CallFunc_Array_Get_Item;                           // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_45[0x3];                                       // 0x0045(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USceneComponent*                        CallFunc_K2_GetRootComponent_ReturnValue;          // 0x0050(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_58[0x8];                                       // 0x0058(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_Lighting_Preset                     CallFunc_GetDataTableRowFromName_OutRow;           // 0x0060(0x0760)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x07C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7C1[0x3];                                      // 0x07C1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SetIntensity_NewIntensity_ImplicitCast;   // 0x07C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetIntensity_NewIntensity_ImplicitCast_1; // 0x07C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetTemperature_NewTemperature_ImplicitCast; // 0x07CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetIntensity_NewIntensity_ImplicitCast_2; // 0x07D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetTemperature_NewTemperature_ImplicitCast_1; // 0x07D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_LightingAndPostProcessController_C_SetLightingSettingsPreview) == 0x000010, "Wrong alignment on BP_LightingAndPostProcessController_C_SetLightingSettingsPreview");
static_assert(sizeof(BP_LightingAndPostProcessController_C_SetLightingSettingsPreview) == 0x0007E0, "Wrong size on BP_LightingAndPostProcessController_C_SetLightingSettingsPreview");
static_assert(offsetof(BP_LightingAndPostProcessController_C_SetLightingSettingsPreview, Enumerator) == 0x000000, "Member 'BP_LightingAndPostProcessController_C_SetLightingSettingsPreview::Enumerator' has a wrong offset!");
static_assert(offsetof(BP_LightingAndPostProcessController_C_SetLightingSettingsPreview, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue) == 0x000008, "Member 'BP_LightingAndPostProcessController_C_SetLightingSettingsPreview::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LightingAndPostProcessController_C_SetLightingSettingsPreview, Temp_int_Array_Index_Variable) == 0x000018, "Member 'BP_LightingAndPostProcessController_C_SetLightingSettingsPreview::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_LightingAndPostProcessController_C_SetLightingSettingsPreview, CallFunc_Conv_StringToName_ReturnValue) == 0x00001C, "Member 'BP_LightingAndPostProcessController_C_SetLightingSettingsPreview::CallFunc_Conv_StringToName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LightingAndPostProcessController_C_SetLightingSettingsPreview, Temp_int_Loop_Counter_Variable) == 0x000024, "Member 'BP_LightingAndPostProcessController_C_SetLightingSettingsPreview::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_LightingAndPostProcessController_C_SetLightingSettingsPreview, CallFunc_GetAllActorsOfClass_OutActors) == 0x000028, "Member 'BP_LightingAndPostProcessController_C_SetLightingSettingsPreview::CallFunc_GetAllActorsOfClass_OutActors' has a wrong offset!");
static_assert(offsetof(BP_LightingAndPostProcessController_C_SetLightingSettingsPreview, CallFunc_Array_Get_Item) == 0x000038, "Member 'BP_LightingAndPostProcessController_C_SetLightingSettingsPreview::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_LightingAndPostProcessController_C_SetLightingSettingsPreview, CallFunc_Array_Length_ReturnValue) == 0x000040, "Member 'BP_LightingAndPostProcessController_C_SetLightingSettingsPreview::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LightingAndPostProcessController_C_SetLightingSettingsPreview, CallFunc_Less_IntInt_ReturnValue) == 0x000044, "Member 'BP_LightingAndPostProcessController_C_SetLightingSettingsPreview::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LightingAndPostProcessController_C_SetLightingSettingsPreview, CallFunc_Add_IntInt_ReturnValue) == 0x000048, "Member 'BP_LightingAndPostProcessController_C_SetLightingSettingsPreview::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LightingAndPostProcessController_C_SetLightingSettingsPreview, CallFunc_K2_GetRootComponent_ReturnValue) == 0x000050, "Member 'BP_LightingAndPostProcessController_C_SetLightingSettingsPreview::CallFunc_K2_GetRootComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LightingAndPostProcessController_C_SetLightingSettingsPreview, CallFunc_GetDataTableRowFromName_OutRow) == 0x000060, "Member 'BP_LightingAndPostProcessController_C_SetLightingSettingsPreview::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(BP_LightingAndPostProcessController_C_SetLightingSettingsPreview, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x0007C0, "Member 'BP_LightingAndPostProcessController_C_SetLightingSettingsPreview::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LightingAndPostProcessController_C_SetLightingSettingsPreview, CallFunc_SetIntensity_NewIntensity_ImplicitCast) == 0x0007C4, "Member 'BP_LightingAndPostProcessController_C_SetLightingSettingsPreview::CallFunc_SetIntensity_NewIntensity_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_LightingAndPostProcessController_C_SetLightingSettingsPreview, CallFunc_SetIntensity_NewIntensity_ImplicitCast_1) == 0x0007C8, "Member 'BP_LightingAndPostProcessController_C_SetLightingSettingsPreview::CallFunc_SetIntensity_NewIntensity_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(BP_LightingAndPostProcessController_C_SetLightingSettingsPreview, CallFunc_SetTemperature_NewTemperature_ImplicitCast) == 0x0007CC, "Member 'BP_LightingAndPostProcessController_C_SetLightingSettingsPreview::CallFunc_SetTemperature_NewTemperature_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_LightingAndPostProcessController_C_SetLightingSettingsPreview, CallFunc_SetIntensity_NewIntensity_ImplicitCast_2) == 0x0007D0, "Member 'BP_LightingAndPostProcessController_C_SetLightingSettingsPreview::CallFunc_SetIntensity_NewIntensity_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(BP_LightingAndPostProcessController_C_SetLightingSettingsPreview, CallFunc_SetTemperature_NewTemperature_ImplicitCast_1) == 0x0007D4, "Member 'BP_LightingAndPostProcessController_C_SetLightingSettingsPreview::CallFunc_SetTemperature_NewTemperature_ImplicitCast_1' has a wrong offset!");

// Function BP_LightingAndPostProcessController.BP_LightingAndPostProcessController_C.SetRotations
// 0x0050 (0x0050 - 0x0000)
struct BP_LightingAndPostProcessController_C_SetRotations final
{
public:
	class UMaterialInterface*                     CallFunc_GetMaterial_ReturnValue;                  // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     CallFunc_GetMaterial_ReturnValue_1;                // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue_1; // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue;          // 0x0020(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue_1;        // 0x0038(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_LightingAndPostProcessController_C_SetRotations) == 0x000008, "Wrong alignment on BP_LightingAndPostProcessController_C_SetRotations");
static_assert(sizeof(BP_LightingAndPostProcessController_C_SetRotations) == 0x000050, "Wrong size on BP_LightingAndPostProcessController_C_SetRotations");
static_assert(offsetof(BP_LightingAndPostProcessController_C_SetRotations, CallFunc_GetMaterial_ReturnValue) == 0x000000, "Member 'BP_LightingAndPostProcessController_C_SetRotations::CallFunc_GetMaterial_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LightingAndPostProcessController_C_SetRotations, CallFunc_GetMaterial_ReturnValue_1) == 0x000008, "Member 'BP_LightingAndPostProcessController_C_SetRotations::CallFunc_GetMaterial_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_LightingAndPostProcessController_C_SetRotations, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x000010, "Member 'BP_LightingAndPostProcessController_C_SetRotations::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LightingAndPostProcessController_C_SetRotations, CallFunc_CreateDynamicMaterialInstance_ReturnValue_1) == 0x000018, "Member 'BP_LightingAndPostProcessController_C_SetRotations::CallFunc_CreateDynamicMaterialInstance_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_LightingAndPostProcessController_C_SetRotations, CallFunc_K2_GetActorRotation_ReturnValue) == 0x000020, "Member 'BP_LightingAndPostProcessController_C_SetRotations::CallFunc_K2_GetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LightingAndPostProcessController_C_SetRotations, CallFunc_K2_GetActorRotation_ReturnValue_1) == 0x000038, "Member 'BP_LightingAndPostProcessController_C_SetRotations::CallFunc_K2_GetActorRotation_ReturnValue_1' has a wrong offset!");

// Function BP_LightingAndPostProcessController.BP_LightingAndPostProcessController_C.SetTransitionCurve
// 0x0008 (0x0008 - 0x0000)
struct BP_LightingAndPostProcessController_C_SetTransitionCurve final
{
public:
	class UCurveFloat*                            NewFloatCurve;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_LightingAndPostProcessController_C_SetTransitionCurve) == 0x000008, "Wrong alignment on BP_LightingAndPostProcessController_C_SetTransitionCurve");
static_assert(sizeof(BP_LightingAndPostProcessController_C_SetTransitionCurve) == 0x000008, "Wrong size on BP_LightingAndPostProcessController_C_SetTransitionCurve");
static_assert(offsetof(BP_LightingAndPostProcessController_C_SetTransitionCurve, NewFloatCurve) == 0x000000, "Member 'BP_LightingAndPostProcessController_C_SetTransitionCurve::NewFloatCurve' has a wrong offset!");

// Function BP_LightingAndPostProcessController.BP_LightingAndPostProcessController_C.SwitchToDay
// 0x0008 (0x0008 - 0x0000)
struct BP_LightingAndPostProcessController_C_SwitchToDay final
{
public:
	double                                        DayTransitionDuration;                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_LightingAndPostProcessController_C_SwitchToDay) == 0x000008, "Wrong alignment on BP_LightingAndPostProcessController_C_SwitchToDay");
static_assert(sizeof(BP_LightingAndPostProcessController_C_SwitchToDay) == 0x000008, "Wrong size on BP_LightingAndPostProcessController_C_SwitchToDay");
static_assert(offsetof(BP_LightingAndPostProcessController_C_SwitchToDay, DayTransitionDuration) == 0x000000, "Member 'BP_LightingAndPostProcessController_C_SwitchToDay::DayTransitionDuration' has a wrong offset!");

// Function BP_LightingAndPostProcessController.BP_LightingAndPostProcessController_C.SwitchToNight
// 0x0008 (0x0008 - 0x0000)
struct BP_LightingAndPostProcessController_C_SwitchToNight final
{
public:
	double                                        NightTransitionDuration;                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_LightingAndPostProcessController_C_SwitchToNight) == 0x000008, "Wrong alignment on BP_LightingAndPostProcessController_C_SwitchToNight");
static_assert(sizeof(BP_LightingAndPostProcessController_C_SwitchToNight) == 0x000008, "Wrong size on BP_LightingAndPostProcessController_C_SwitchToNight");
static_assert(offsetof(BP_LightingAndPostProcessController_C_SwitchToNight, NightTransitionDuration) == 0x000000, "Member 'BP_LightingAndPostProcessController_C_SwitchToNight::NightTransitionDuration' has a wrong offset!");

// Function BP_LightingAndPostProcessController.BP_LightingAndPostProcessController_C.UpdateMainPostProcesses
// 0x0038 (0x0038 - 0x0000)
struct BP_LightingAndPostProcessController_C_UpdateMainPostProcesses final
{
public:
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MultiplyMultiply_FloatFloat_ReturnValue;  // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_Value_ImplicitCast;       // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Greater_DoubleDouble_A_ImplicitCast;      // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_VariableSet_BlendWeight_ImplicitCast;       // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_LightingAndPostProcessController_C_UpdateMainPostProcesses) == 0x000008, "Wrong alignment on BP_LightingAndPostProcessController_C_UpdateMainPostProcesses");
static_assert(sizeof(BP_LightingAndPostProcessController_C_UpdateMainPostProcesses) == 0x000038, "Wrong size on BP_LightingAndPostProcessController_C_UpdateMainPostProcesses");
static_assert(offsetof(BP_LightingAndPostProcessController_C_UpdateMainPostProcesses, CallFunc_MapRangeClamped_ReturnValue) == 0x000000, "Member 'BP_LightingAndPostProcessController_C_UpdateMainPostProcesses::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LightingAndPostProcessController_C_UpdateMainPostProcesses, CallFunc_MultiplyMultiply_FloatFloat_ReturnValue) == 0x000008, "Member 'BP_LightingAndPostProcessController_C_UpdateMainPostProcesses::CallFunc_MultiplyMultiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LightingAndPostProcessController_C_UpdateMainPostProcesses, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000010, "Member 'BP_LightingAndPostProcessController_C_UpdateMainPostProcesses::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LightingAndPostProcessController_C_UpdateMainPostProcesses, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000018, "Member 'BP_LightingAndPostProcessController_C_UpdateMainPostProcesses::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LightingAndPostProcessController_C_UpdateMainPostProcesses, CallFunc_MapRangeClamped_Value_ImplicitCast) == 0x000020, "Member 'BP_LightingAndPostProcessController_C_UpdateMainPostProcesses::CallFunc_MapRangeClamped_Value_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_LightingAndPostProcessController_C_UpdateMainPostProcesses, CallFunc_Greater_DoubleDouble_A_ImplicitCast) == 0x000028, "Member 'BP_LightingAndPostProcessController_C_UpdateMainPostProcesses::CallFunc_Greater_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_LightingAndPostProcessController_C_UpdateMainPostProcesses, K2Node_VariableSet_BlendWeight_ImplicitCast) == 0x000030, "Member 'BP_LightingAndPostProcessController_C_UpdateMainPostProcesses::K2Node_VariableSet_BlendWeight_ImplicitCast' has a wrong offset!");

// Function BP_LightingAndPostProcessController.BP_LightingAndPostProcessController_C.UpdateMoon
// 0x0028 (0x0028 - 0x0000)
struct BP_LightingAndPostProcessController_C_UpdateMoon final
{
public:
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_Value_ImplicitCast;       // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Greater_DoubleDouble_A_ImplicitCast;      // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast; // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_LightingAndPostProcessController_C_UpdateMoon) == 0x000008, "Wrong alignment on BP_LightingAndPostProcessController_C_UpdateMoon");
static_assert(sizeof(BP_LightingAndPostProcessController_C_UpdateMoon) == 0x000028, "Wrong size on BP_LightingAndPostProcessController_C_UpdateMoon");
static_assert(offsetof(BP_LightingAndPostProcessController_C_UpdateMoon, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000000, "Member 'BP_LightingAndPostProcessController_C_UpdateMoon::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LightingAndPostProcessController_C_UpdateMoon, CallFunc_MapRangeClamped_ReturnValue) == 0x000008, "Member 'BP_LightingAndPostProcessController_C_UpdateMoon::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LightingAndPostProcessController_C_UpdateMoon, CallFunc_MapRangeClamped_Value_ImplicitCast) == 0x000010, "Member 'BP_LightingAndPostProcessController_C_UpdateMoon::CallFunc_MapRangeClamped_Value_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_LightingAndPostProcessController_C_UpdateMoon, CallFunc_Greater_DoubleDouble_A_ImplicitCast) == 0x000018, "Member 'BP_LightingAndPostProcessController_C_UpdateMoon::CallFunc_Greater_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_LightingAndPostProcessController_C_UpdateMoon, CallFunc_SetScalarParameterValue_Value_ImplicitCast) == 0x000020, "Member 'BP_LightingAndPostProcessController_C_UpdateMoon::CallFunc_SetScalarParameterValue_Value_ImplicitCast' has a wrong offset!");

// Function BP_LightingAndPostProcessController.BP_LightingAndPostProcessController_C.UpdateSkyAtmosphereSunColor
// 0x0060 (0x0060 - 0x0000)
struct BP_LightingAndPostProcessController_C_UpdateSkyAtmosphereSunColor final
{
public:
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue_1;            // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           CallFunc_LinearColorLerp_ReturnValue;              // 0x0014(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_LinearColorLerp_ReturnValue_1;            // 0x0024(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_MapRangeClamped_Value_ImplicitCast;       // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_LinearColorLerp_Alpha_ImplicitCast;       // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_MapRangeClamped_Value_ImplicitCast_1;     // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Less_DoubleDouble_A_ImplicitCast;         // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_LinearColorLerp_Alpha_ImplicitCast_1;     // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_LightingAndPostProcessController_C_UpdateSkyAtmosphereSunColor) == 0x000008, "Wrong alignment on BP_LightingAndPostProcessController_C_UpdateSkyAtmosphereSunColor");
static_assert(sizeof(BP_LightingAndPostProcessController_C_UpdateSkyAtmosphereSunColor) == 0x000060, "Wrong size on BP_LightingAndPostProcessController_C_UpdateSkyAtmosphereSunColor");
static_assert(offsetof(BP_LightingAndPostProcessController_C_UpdateSkyAtmosphereSunColor, CallFunc_MapRangeClamped_ReturnValue) == 0x000000, "Member 'BP_LightingAndPostProcessController_C_UpdateSkyAtmosphereSunColor::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LightingAndPostProcessController_C_UpdateSkyAtmosphereSunColor, CallFunc_MapRangeClamped_ReturnValue_1) == 0x000008, "Member 'BP_LightingAndPostProcessController_C_UpdateSkyAtmosphereSunColor::CallFunc_MapRangeClamped_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_LightingAndPostProcessController_C_UpdateSkyAtmosphereSunColor, CallFunc_Less_DoubleDouble_ReturnValue) == 0x000010, "Member 'BP_LightingAndPostProcessController_C_UpdateSkyAtmosphereSunColor::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LightingAndPostProcessController_C_UpdateSkyAtmosphereSunColor, CallFunc_LinearColorLerp_ReturnValue) == 0x000014, "Member 'BP_LightingAndPostProcessController_C_UpdateSkyAtmosphereSunColor::CallFunc_LinearColorLerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LightingAndPostProcessController_C_UpdateSkyAtmosphereSunColor, CallFunc_LinearColorLerp_ReturnValue_1) == 0x000024, "Member 'BP_LightingAndPostProcessController_C_UpdateSkyAtmosphereSunColor::CallFunc_LinearColorLerp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_LightingAndPostProcessController_C_UpdateSkyAtmosphereSunColor, CallFunc_MapRangeClamped_Value_ImplicitCast) == 0x000038, "Member 'BP_LightingAndPostProcessController_C_UpdateSkyAtmosphereSunColor::CallFunc_MapRangeClamped_Value_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_LightingAndPostProcessController_C_UpdateSkyAtmosphereSunColor, CallFunc_LinearColorLerp_Alpha_ImplicitCast) == 0x000040, "Member 'BP_LightingAndPostProcessController_C_UpdateSkyAtmosphereSunColor::CallFunc_LinearColorLerp_Alpha_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_LightingAndPostProcessController_C_UpdateSkyAtmosphereSunColor, CallFunc_MapRangeClamped_Value_ImplicitCast_1) == 0x000048, "Member 'BP_LightingAndPostProcessController_C_UpdateSkyAtmosphereSunColor::CallFunc_MapRangeClamped_Value_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(BP_LightingAndPostProcessController_C_UpdateSkyAtmosphereSunColor, CallFunc_Less_DoubleDouble_A_ImplicitCast) == 0x000050, "Member 'BP_LightingAndPostProcessController_C_UpdateSkyAtmosphereSunColor::CallFunc_Less_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_LightingAndPostProcessController_C_UpdateSkyAtmosphereSunColor, CallFunc_LinearColorLerp_Alpha_ImplicitCast_1) == 0x000058, "Member 'BP_LightingAndPostProcessController_C_UpdateSkyAtmosphereSunColor::CallFunc_LinearColorLerp_Alpha_ImplicitCast_1' has a wrong offset!");

// Function BP_LightingAndPostProcessController.BP_LightingAndPostProcessController_C.UpdateSkyAtmosphereSunIntensity
// 0x0050 (0x0050 - 0x0000)
struct BP_LightingAndPostProcessController_C_UpdateSkyAtmosphereSunIntensity final
{
public:
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue_1;            // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue;                       // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue;                         // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue_1;                       // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_Value_ImplicitCast;       // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_Value_ImplicitCast_1;     // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Greater_DoubleDouble_A_ImplicitCast;      // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetIntensity_NewIntensity_ImplicitCast;   // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetIntensity_NewIntensity_ImplicitCast_1; // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_LightingAndPostProcessController_C_UpdateSkyAtmosphereSunIntensity) == 0x000008, "Wrong alignment on BP_LightingAndPostProcessController_C_UpdateSkyAtmosphereSunIntensity");
static_assert(sizeof(BP_LightingAndPostProcessController_C_UpdateSkyAtmosphereSunIntensity) == 0x000050, "Wrong size on BP_LightingAndPostProcessController_C_UpdateSkyAtmosphereSunIntensity");
static_assert(offsetof(BP_LightingAndPostProcessController_C_UpdateSkyAtmosphereSunIntensity, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000000, "Member 'BP_LightingAndPostProcessController_C_UpdateSkyAtmosphereSunIntensity::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LightingAndPostProcessController_C_UpdateSkyAtmosphereSunIntensity, CallFunc_MapRangeClamped_ReturnValue) == 0x000008, "Member 'BP_LightingAndPostProcessController_C_UpdateSkyAtmosphereSunIntensity::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LightingAndPostProcessController_C_UpdateSkyAtmosphereSunIntensity, CallFunc_MapRangeClamped_ReturnValue_1) == 0x000010, "Member 'BP_LightingAndPostProcessController_C_UpdateSkyAtmosphereSunIntensity::CallFunc_MapRangeClamped_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_LightingAndPostProcessController_C_UpdateSkyAtmosphereSunIntensity, CallFunc_FClamp_ReturnValue) == 0x000018, "Member 'BP_LightingAndPostProcessController_C_UpdateSkyAtmosphereSunIntensity::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LightingAndPostProcessController_C_UpdateSkyAtmosphereSunIntensity, CallFunc_Lerp_ReturnValue) == 0x000020, "Member 'BP_LightingAndPostProcessController_C_UpdateSkyAtmosphereSunIntensity::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LightingAndPostProcessController_C_UpdateSkyAtmosphereSunIntensity, CallFunc_Lerp_ReturnValue_1) == 0x000028, "Member 'BP_LightingAndPostProcessController_C_UpdateSkyAtmosphereSunIntensity::CallFunc_Lerp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_LightingAndPostProcessController_C_UpdateSkyAtmosphereSunIntensity, CallFunc_MapRangeClamped_Value_ImplicitCast) == 0x000030, "Member 'BP_LightingAndPostProcessController_C_UpdateSkyAtmosphereSunIntensity::CallFunc_MapRangeClamped_Value_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_LightingAndPostProcessController_C_UpdateSkyAtmosphereSunIntensity, CallFunc_MapRangeClamped_Value_ImplicitCast_1) == 0x000038, "Member 'BP_LightingAndPostProcessController_C_UpdateSkyAtmosphereSunIntensity::CallFunc_MapRangeClamped_Value_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(BP_LightingAndPostProcessController_C_UpdateSkyAtmosphereSunIntensity, CallFunc_Greater_DoubleDouble_A_ImplicitCast) == 0x000040, "Member 'BP_LightingAndPostProcessController_C_UpdateSkyAtmosphereSunIntensity::CallFunc_Greater_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_LightingAndPostProcessController_C_UpdateSkyAtmosphereSunIntensity, CallFunc_SetIntensity_NewIntensity_ImplicitCast) == 0x000048, "Member 'BP_LightingAndPostProcessController_C_UpdateSkyAtmosphereSunIntensity::CallFunc_SetIntensity_NewIntensity_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_LightingAndPostProcessController_C_UpdateSkyAtmosphereSunIntensity, CallFunc_SetIntensity_NewIntensity_ImplicitCast_1) == 0x00004C, "Member 'BP_LightingAndPostProcessController_C_UpdateSkyAtmosphereSunIntensity::CallFunc_SetIntensity_NewIntensity_ImplicitCast_1' has a wrong offset!");

// Function BP_LightingAndPostProcessController.BP_LightingAndPostProcessController_C.UpdateSkyAtmosphereSunRotation
// 0x0068 (0x0068 - 0x0000)
struct BP_LightingAndPostProcessController_C_UpdateSkyAtmosphereSunRotation final
{
public:
	float                                         CallFunc_BreakRotator_Roll;                        // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Roll_1;                      // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch_1;                     // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw_1;                       // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_SetActorRotation_ReturnValue;          // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A[0x6];                                       // 0x001A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Lerp_ReturnValue;                         // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0028(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_K2_SetActorRotation_ReturnValue_1;        // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Lerp_A_ImplicitCast;                      // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_Alpha_ImplicitCast;                  // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Greater_DoubleDouble_A_ImplicitCast;      // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeRotator_Pitch_ImplicitCast;           // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_LightingAndPostProcessController_C_UpdateSkyAtmosphereSunRotation) == 0x000008, "Wrong alignment on BP_LightingAndPostProcessController_C_UpdateSkyAtmosphereSunRotation");
static_assert(sizeof(BP_LightingAndPostProcessController_C_UpdateSkyAtmosphereSunRotation) == 0x000068, "Wrong size on BP_LightingAndPostProcessController_C_UpdateSkyAtmosphereSunRotation");
static_assert(offsetof(BP_LightingAndPostProcessController_C_UpdateSkyAtmosphereSunRotation, CallFunc_BreakRotator_Roll) == 0x000000, "Member 'BP_LightingAndPostProcessController_C_UpdateSkyAtmosphereSunRotation::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(BP_LightingAndPostProcessController_C_UpdateSkyAtmosphereSunRotation, CallFunc_BreakRotator_Pitch) == 0x000004, "Member 'BP_LightingAndPostProcessController_C_UpdateSkyAtmosphereSunRotation::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(BP_LightingAndPostProcessController_C_UpdateSkyAtmosphereSunRotation, CallFunc_BreakRotator_Yaw) == 0x000008, "Member 'BP_LightingAndPostProcessController_C_UpdateSkyAtmosphereSunRotation::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(BP_LightingAndPostProcessController_C_UpdateSkyAtmosphereSunRotation, CallFunc_BreakRotator_Roll_1) == 0x00000C, "Member 'BP_LightingAndPostProcessController_C_UpdateSkyAtmosphereSunRotation::CallFunc_BreakRotator_Roll_1' has a wrong offset!");
static_assert(offsetof(BP_LightingAndPostProcessController_C_UpdateSkyAtmosphereSunRotation, CallFunc_BreakRotator_Pitch_1) == 0x000010, "Member 'BP_LightingAndPostProcessController_C_UpdateSkyAtmosphereSunRotation::CallFunc_BreakRotator_Pitch_1' has a wrong offset!");
static_assert(offsetof(BP_LightingAndPostProcessController_C_UpdateSkyAtmosphereSunRotation, CallFunc_BreakRotator_Yaw_1) == 0x000014, "Member 'BP_LightingAndPostProcessController_C_UpdateSkyAtmosphereSunRotation::CallFunc_BreakRotator_Yaw_1' has a wrong offset!");
static_assert(offsetof(BP_LightingAndPostProcessController_C_UpdateSkyAtmosphereSunRotation, CallFunc_K2_SetActorRotation_ReturnValue) == 0x000018, "Member 'BP_LightingAndPostProcessController_C_UpdateSkyAtmosphereSunRotation::CallFunc_K2_SetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LightingAndPostProcessController_C_UpdateSkyAtmosphereSunRotation, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000019, "Member 'BP_LightingAndPostProcessController_C_UpdateSkyAtmosphereSunRotation::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LightingAndPostProcessController_C_UpdateSkyAtmosphereSunRotation, CallFunc_Lerp_ReturnValue) == 0x000020, "Member 'BP_LightingAndPostProcessController_C_UpdateSkyAtmosphereSunRotation::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LightingAndPostProcessController_C_UpdateSkyAtmosphereSunRotation, CallFunc_MakeRotator_ReturnValue) == 0x000028, "Member 'BP_LightingAndPostProcessController_C_UpdateSkyAtmosphereSunRotation::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LightingAndPostProcessController_C_UpdateSkyAtmosphereSunRotation, CallFunc_K2_SetActorRotation_ReturnValue_1) == 0x000040, "Member 'BP_LightingAndPostProcessController_C_UpdateSkyAtmosphereSunRotation::CallFunc_K2_SetActorRotation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_LightingAndPostProcessController_C_UpdateSkyAtmosphereSunRotation, CallFunc_Lerp_A_ImplicitCast) == 0x000048, "Member 'BP_LightingAndPostProcessController_C_UpdateSkyAtmosphereSunRotation::CallFunc_Lerp_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_LightingAndPostProcessController_C_UpdateSkyAtmosphereSunRotation, CallFunc_Lerp_Alpha_ImplicitCast) == 0x000050, "Member 'BP_LightingAndPostProcessController_C_UpdateSkyAtmosphereSunRotation::CallFunc_Lerp_Alpha_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_LightingAndPostProcessController_C_UpdateSkyAtmosphereSunRotation, CallFunc_Greater_DoubleDouble_A_ImplicitCast) == 0x000058, "Member 'BP_LightingAndPostProcessController_C_UpdateSkyAtmosphereSunRotation::CallFunc_Greater_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_LightingAndPostProcessController_C_UpdateSkyAtmosphereSunRotation, CallFunc_MakeRotator_Pitch_ImplicitCast) == 0x000060, "Member 'BP_LightingAndPostProcessController_C_UpdateSkyAtmosphereSunRotation::CallFunc_MakeRotator_Pitch_ImplicitCast' has a wrong offset!");

// Function BP_LightingAndPostProcessController.BP_LightingAndPostProcessController_C.UpdateSkyAtmosphereSunTemparature
// 0x0018 (0x0018 - 0x0000)
struct BP_LightingAndPostProcessController_C_UpdateSkyAtmosphereSunTemparature final
{
public:
	double                                        CallFunc_Lerp_ReturnValue;                         // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_Alpha_ImplicitCast;                  // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetTemperature_NewTemperature_ImplicitCast; // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_LightingAndPostProcessController_C_UpdateSkyAtmosphereSunTemparature) == 0x000008, "Wrong alignment on BP_LightingAndPostProcessController_C_UpdateSkyAtmosphereSunTemparature");
static_assert(sizeof(BP_LightingAndPostProcessController_C_UpdateSkyAtmosphereSunTemparature) == 0x000018, "Wrong size on BP_LightingAndPostProcessController_C_UpdateSkyAtmosphereSunTemparature");
static_assert(offsetof(BP_LightingAndPostProcessController_C_UpdateSkyAtmosphereSunTemparature, CallFunc_Lerp_ReturnValue) == 0x000000, "Member 'BP_LightingAndPostProcessController_C_UpdateSkyAtmosphereSunTemparature::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LightingAndPostProcessController_C_UpdateSkyAtmosphereSunTemparature, CallFunc_Lerp_Alpha_ImplicitCast) == 0x000008, "Member 'BP_LightingAndPostProcessController_C_UpdateSkyAtmosphereSunTemparature::CallFunc_Lerp_Alpha_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_LightingAndPostProcessController_C_UpdateSkyAtmosphereSunTemparature, CallFunc_SetTemperature_NewTemperature_ImplicitCast) == 0x000010, "Member 'BP_LightingAndPostProcessController_C_UpdateSkyAtmosphereSunTemparature::CallFunc_SetTemperature_NewTemperature_ImplicitCast' has a wrong offset!");

// Function BP_LightingAndPostProcessController.BP_LightingAndPostProcessController_C.UpdateSkylight
// 0x0028 (0x0028 - 0x0000)
struct BP_LightingAndPostProcessController_C_UpdateSkylight final
{
public:
	struct FLinearColor                           CallFunc_LinearColorLerp_ReturnValue;              // 0x0000(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue;                         // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_Alpha_ImplicitCast;                  // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetIntensity_NewIntensity_ImplicitCast;   // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_LightingAndPostProcessController_C_UpdateSkylight) == 0x000008, "Wrong alignment on BP_LightingAndPostProcessController_C_UpdateSkylight");
static_assert(sizeof(BP_LightingAndPostProcessController_C_UpdateSkylight) == 0x000028, "Wrong size on BP_LightingAndPostProcessController_C_UpdateSkylight");
static_assert(offsetof(BP_LightingAndPostProcessController_C_UpdateSkylight, CallFunc_LinearColorLerp_ReturnValue) == 0x000000, "Member 'BP_LightingAndPostProcessController_C_UpdateSkylight::CallFunc_LinearColorLerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LightingAndPostProcessController_C_UpdateSkylight, CallFunc_Lerp_ReturnValue) == 0x000010, "Member 'BP_LightingAndPostProcessController_C_UpdateSkylight::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LightingAndPostProcessController_C_UpdateSkylight, CallFunc_Lerp_Alpha_ImplicitCast) == 0x000018, "Member 'BP_LightingAndPostProcessController_C_UpdateSkylight::CallFunc_Lerp_Alpha_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_LightingAndPostProcessController_C_UpdateSkylight, CallFunc_SetIntensity_NewIntensity_ImplicitCast) == 0x000020, "Member 'BP_LightingAndPostProcessController_C_UpdateSkylight::CallFunc_SetIntensity_NewIntensity_ImplicitCast' has a wrong offset!");

// Function BP_LightingAndPostProcessController.BP_LightingAndPostProcessController_C.UpdateStars
// 0x0028 (0x0028 - 0x0000)
struct BP_LightingAndPostProcessController_C_UpdateStars final
{
public:
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_Value_ImplicitCast;       // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Greater_DoubleDouble_A_ImplicitCast;      // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast; // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_LightingAndPostProcessController_C_UpdateStars) == 0x000008, "Wrong alignment on BP_LightingAndPostProcessController_C_UpdateStars");
static_assert(sizeof(BP_LightingAndPostProcessController_C_UpdateStars) == 0x000028, "Wrong size on BP_LightingAndPostProcessController_C_UpdateStars");
static_assert(offsetof(BP_LightingAndPostProcessController_C_UpdateStars, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000000, "Member 'BP_LightingAndPostProcessController_C_UpdateStars::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LightingAndPostProcessController_C_UpdateStars, CallFunc_MapRangeClamped_ReturnValue) == 0x000008, "Member 'BP_LightingAndPostProcessController_C_UpdateStars::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LightingAndPostProcessController_C_UpdateStars, CallFunc_MapRangeClamped_Value_ImplicitCast) == 0x000010, "Member 'BP_LightingAndPostProcessController_C_UpdateStars::CallFunc_MapRangeClamped_Value_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_LightingAndPostProcessController_C_UpdateStars, CallFunc_Greater_DoubleDouble_A_ImplicitCast) == 0x000018, "Member 'BP_LightingAndPostProcessController_C_UpdateStars::CallFunc_Greater_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_LightingAndPostProcessController_C_UpdateStars, CallFunc_SetScalarParameterValue_Value_ImplicitCast) == 0x000020, "Member 'BP_LightingAndPostProcessController_C_UpdateStars::CallFunc_SetScalarParameterValue_Value_ImplicitCast' has a wrong offset!");

// Function BP_LightingAndPostProcessController.BP_LightingAndPostProcessController_C.UpdateSunColor
// 0x0060 (0x0060 - 0x0000)
struct BP_LightingAndPostProcessController_C_UpdateSunColor final
{
public:
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_LinearColorLerp_ReturnValue;              // 0x0010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue_1;            // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_LinearColorLerp_ReturnValue_1;            // 0x0028(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_Value_ImplicitCast;       // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Less_DoubleDouble_A_ImplicitCast;         // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_LinearColorLerp_Alpha_ImplicitCast;       // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_MapRangeClamped_Value_ImplicitCast_1;     // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_LinearColorLerp_Alpha_ImplicitCast_1;     // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_LightingAndPostProcessController_C_UpdateSunColor) == 0x000008, "Wrong alignment on BP_LightingAndPostProcessController_C_UpdateSunColor");
static_assert(sizeof(BP_LightingAndPostProcessController_C_UpdateSunColor) == 0x000060, "Wrong size on BP_LightingAndPostProcessController_C_UpdateSunColor");
static_assert(offsetof(BP_LightingAndPostProcessController_C_UpdateSunColor, CallFunc_Less_DoubleDouble_ReturnValue) == 0x000000, "Member 'BP_LightingAndPostProcessController_C_UpdateSunColor::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LightingAndPostProcessController_C_UpdateSunColor, CallFunc_MapRangeClamped_ReturnValue) == 0x000008, "Member 'BP_LightingAndPostProcessController_C_UpdateSunColor::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LightingAndPostProcessController_C_UpdateSunColor, CallFunc_LinearColorLerp_ReturnValue) == 0x000010, "Member 'BP_LightingAndPostProcessController_C_UpdateSunColor::CallFunc_LinearColorLerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LightingAndPostProcessController_C_UpdateSunColor, CallFunc_MapRangeClamped_ReturnValue_1) == 0x000020, "Member 'BP_LightingAndPostProcessController_C_UpdateSunColor::CallFunc_MapRangeClamped_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_LightingAndPostProcessController_C_UpdateSunColor, CallFunc_LinearColorLerp_ReturnValue_1) == 0x000028, "Member 'BP_LightingAndPostProcessController_C_UpdateSunColor::CallFunc_LinearColorLerp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_LightingAndPostProcessController_C_UpdateSunColor, CallFunc_MapRangeClamped_Value_ImplicitCast) == 0x000038, "Member 'BP_LightingAndPostProcessController_C_UpdateSunColor::CallFunc_MapRangeClamped_Value_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_LightingAndPostProcessController_C_UpdateSunColor, CallFunc_Less_DoubleDouble_A_ImplicitCast) == 0x000040, "Member 'BP_LightingAndPostProcessController_C_UpdateSunColor::CallFunc_Less_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_LightingAndPostProcessController_C_UpdateSunColor, CallFunc_LinearColorLerp_Alpha_ImplicitCast) == 0x000048, "Member 'BP_LightingAndPostProcessController_C_UpdateSunColor::CallFunc_LinearColorLerp_Alpha_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_LightingAndPostProcessController_C_UpdateSunColor, CallFunc_MapRangeClamped_Value_ImplicitCast_1) == 0x000050, "Member 'BP_LightingAndPostProcessController_C_UpdateSunColor::CallFunc_MapRangeClamped_Value_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(BP_LightingAndPostProcessController_C_UpdateSunColor, CallFunc_LinearColorLerp_Alpha_ImplicitCast_1) == 0x000058, "Member 'BP_LightingAndPostProcessController_C_UpdateSunColor::CallFunc_LinearColorLerp_Alpha_ImplicitCast_1' has a wrong offset!");

// Function BP_LightingAndPostProcessController.BP_LightingAndPostProcessController_C.UpdateSunIntensity
// 0x0048 (0x0048 - 0x0000)
struct BP_LightingAndPostProcessController_C_UpdateSunIntensity final
{
public:
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue;                         // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue_1;            // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue_1;                       // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_Value_ImplicitCast;       // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_Value_ImplicitCast_1;     // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Greater_DoubleDouble_A_ImplicitCast;      // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetIntensity_NewIntensity_ImplicitCast;   // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetIntensity_NewIntensity_ImplicitCast_1; // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_LightingAndPostProcessController_C_UpdateSunIntensity) == 0x000008, "Wrong alignment on BP_LightingAndPostProcessController_C_UpdateSunIntensity");
static_assert(sizeof(BP_LightingAndPostProcessController_C_UpdateSunIntensity) == 0x000048, "Wrong size on BP_LightingAndPostProcessController_C_UpdateSunIntensity");
static_assert(offsetof(BP_LightingAndPostProcessController_C_UpdateSunIntensity, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000000, "Member 'BP_LightingAndPostProcessController_C_UpdateSunIntensity::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LightingAndPostProcessController_C_UpdateSunIntensity, CallFunc_MapRangeClamped_ReturnValue) == 0x000008, "Member 'BP_LightingAndPostProcessController_C_UpdateSunIntensity::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LightingAndPostProcessController_C_UpdateSunIntensity, CallFunc_Lerp_ReturnValue) == 0x000010, "Member 'BP_LightingAndPostProcessController_C_UpdateSunIntensity::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LightingAndPostProcessController_C_UpdateSunIntensity, CallFunc_MapRangeClamped_ReturnValue_1) == 0x000018, "Member 'BP_LightingAndPostProcessController_C_UpdateSunIntensity::CallFunc_MapRangeClamped_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_LightingAndPostProcessController_C_UpdateSunIntensity, CallFunc_Lerp_ReturnValue_1) == 0x000020, "Member 'BP_LightingAndPostProcessController_C_UpdateSunIntensity::CallFunc_Lerp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_LightingAndPostProcessController_C_UpdateSunIntensity, CallFunc_MapRangeClamped_Value_ImplicitCast) == 0x000028, "Member 'BP_LightingAndPostProcessController_C_UpdateSunIntensity::CallFunc_MapRangeClamped_Value_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_LightingAndPostProcessController_C_UpdateSunIntensity, CallFunc_MapRangeClamped_Value_ImplicitCast_1) == 0x000030, "Member 'BP_LightingAndPostProcessController_C_UpdateSunIntensity::CallFunc_MapRangeClamped_Value_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(BP_LightingAndPostProcessController_C_UpdateSunIntensity, CallFunc_Greater_DoubleDouble_A_ImplicitCast) == 0x000038, "Member 'BP_LightingAndPostProcessController_C_UpdateSunIntensity::CallFunc_Greater_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_LightingAndPostProcessController_C_UpdateSunIntensity, CallFunc_SetIntensity_NewIntensity_ImplicitCast) == 0x000040, "Member 'BP_LightingAndPostProcessController_C_UpdateSunIntensity::CallFunc_SetIntensity_NewIntensity_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_LightingAndPostProcessController_C_UpdateSunIntensity, CallFunc_SetIntensity_NewIntensity_ImplicitCast_1) == 0x000044, "Member 'BP_LightingAndPostProcessController_C_UpdateSunIntensity::CallFunc_SetIntensity_NewIntensity_ImplicitCast_1' has a wrong offset!");

// Function BP_LightingAndPostProcessController.BP_LightingAndPostProcessController_C.UpdateSunRotation
// 0x0068 (0x0068 - 0x0000)
struct BP_LightingAndPostProcessController_C_UpdateSunRotation final
{
public:
	float                                         CallFunc_BreakRotator_Roll;                        // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Roll_1;                      // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch_1;                     // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw_1;                       // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_SetActorRotation_ReturnValue;          // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A[0x6];                                       // 0x001A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Lerp_ReturnValue;                         // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0028(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_K2_SetActorRotation_ReturnValue_1;        // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Lerp_A_ImplicitCast;                      // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_Alpha_ImplicitCast;                  // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Greater_DoubleDouble_A_ImplicitCast;      // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeRotator_Pitch_ImplicitCast;           // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_LightingAndPostProcessController_C_UpdateSunRotation) == 0x000008, "Wrong alignment on BP_LightingAndPostProcessController_C_UpdateSunRotation");
static_assert(sizeof(BP_LightingAndPostProcessController_C_UpdateSunRotation) == 0x000068, "Wrong size on BP_LightingAndPostProcessController_C_UpdateSunRotation");
static_assert(offsetof(BP_LightingAndPostProcessController_C_UpdateSunRotation, CallFunc_BreakRotator_Roll) == 0x000000, "Member 'BP_LightingAndPostProcessController_C_UpdateSunRotation::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(BP_LightingAndPostProcessController_C_UpdateSunRotation, CallFunc_BreakRotator_Pitch) == 0x000004, "Member 'BP_LightingAndPostProcessController_C_UpdateSunRotation::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(BP_LightingAndPostProcessController_C_UpdateSunRotation, CallFunc_BreakRotator_Yaw) == 0x000008, "Member 'BP_LightingAndPostProcessController_C_UpdateSunRotation::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(BP_LightingAndPostProcessController_C_UpdateSunRotation, CallFunc_BreakRotator_Roll_1) == 0x00000C, "Member 'BP_LightingAndPostProcessController_C_UpdateSunRotation::CallFunc_BreakRotator_Roll_1' has a wrong offset!");
static_assert(offsetof(BP_LightingAndPostProcessController_C_UpdateSunRotation, CallFunc_BreakRotator_Pitch_1) == 0x000010, "Member 'BP_LightingAndPostProcessController_C_UpdateSunRotation::CallFunc_BreakRotator_Pitch_1' has a wrong offset!");
static_assert(offsetof(BP_LightingAndPostProcessController_C_UpdateSunRotation, CallFunc_BreakRotator_Yaw_1) == 0x000014, "Member 'BP_LightingAndPostProcessController_C_UpdateSunRotation::CallFunc_BreakRotator_Yaw_1' has a wrong offset!");
static_assert(offsetof(BP_LightingAndPostProcessController_C_UpdateSunRotation, CallFunc_K2_SetActorRotation_ReturnValue) == 0x000018, "Member 'BP_LightingAndPostProcessController_C_UpdateSunRotation::CallFunc_K2_SetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LightingAndPostProcessController_C_UpdateSunRotation, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000019, "Member 'BP_LightingAndPostProcessController_C_UpdateSunRotation::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LightingAndPostProcessController_C_UpdateSunRotation, CallFunc_Lerp_ReturnValue) == 0x000020, "Member 'BP_LightingAndPostProcessController_C_UpdateSunRotation::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LightingAndPostProcessController_C_UpdateSunRotation, CallFunc_MakeRotator_ReturnValue) == 0x000028, "Member 'BP_LightingAndPostProcessController_C_UpdateSunRotation::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LightingAndPostProcessController_C_UpdateSunRotation, CallFunc_K2_SetActorRotation_ReturnValue_1) == 0x000040, "Member 'BP_LightingAndPostProcessController_C_UpdateSunRotation::CallFunc_K2_SetActorRotation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_LightingAndPostProcessController_C_UpdateSunRotation, CallFunc_Lerp_A_ImplicitCast) == 0x000048, "Member 'BP_LightingAndPostProcessController_C_UpdateSunRotation::CallFunc_Lerp_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_LightingAndPostProcessController_C_UpdateSunRotation, CallFunc_Lerp_Alpha_ImplicitCast) == 0x000050, "Member 'BP_LightingAndPostProcessController_C_UpdateSunRotation::CallFunc_Lerp_Alpha_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_LightingAndPostProcessController_C_UpdateSunRotation, CallFunc_Greater_DoubleDouble_A_ImplicitCast) == 0x000058, "Member 'BP_LightingAndPostProcessController_C_UpdateSunRotation::CallFunc_Greater_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_LightingAndPostProcessController_C_UpdateSunRotation, CallFunc_MakeRotator_Pitch_ImplicitCast) == 0x000060, "Member 'BP_LightingAndPostProcessController_C_UpdateSunRotation::CallFunc_MakeRotator_Pitch_ImplicitCast' has a wrong offset!");

// Function BP_LightingAndPostProcessController.BP_LightingAndPostProcessController_C.UpdateSunTemperature
// 0x0018 (0x0018 - 0x0000)
struct BP_LightingAndPostProcessController_C_UpdateSunTemperature final
{
public:
	double                                        CallFunc_Lerp_ReturnValue;                         // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_Alpha_ImplicitCast;                  // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetTemperature_NewTemperature_ImplicitCast; // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_LightingAndPostProcessController_C_UpdateSunTemperature) == 0x000008, "Wrong alignment on BP_LightingAndPostProcessController_C_UpdateSunTemperature");
static_assert(sizeof(BP_LightingAndPostProcessController_C_UpdateSunTemperature) == 0x000018, "Wrong size on BP_LightingAndPostProcessController_C_UpdateSunTemperature");
static_assert(offsetof(BP_LightingAndPostProcessController_C_UpdateSunTemperature, CallFunc_Lerp_ReturnValue) == 0x000000, "Member 'BP_LightingAndPostProcessController_C_UpdateSunTemperature::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LightingAndPostProcessController_C_UpdateSunTemperature, CallFunc_Lerp_Alpha_ImplicitCast) == 0x000008, "Member 'BP_LightingAndPostProcessController_C_UpdateSunTemperature::CallFunc_Lerp_Alpha_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_LightingAndPostProcessController_C_UpdateSunTemperature, CallFunc_SetTemperature_NewTemperature_ImplicitCast) == 0x000010, "Member 'BP_LightingAndPostProcessController_C_UpdateSunTemperature::CallFunc_SetTemperature_NewTemperature_ImplicitCast' has a wrong offset!");

// Function BP_LightingAndPostProcessController.BP_LightingAndPostProcessController_C.UserConstructionScript
// 0x0F10 (0x0F10 - 0x0000)
struct BP_LightingAndPostProcessController_C_UserConstructionScript final
{
public:
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue; // 0x0000(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue;            // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_1; // 0x0018(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	uint8                                         Pad_28[0x8];                                       // 0x0028(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_Lighting_Preset                     CallFunc_GetDataTableRowFromName_OutRow;           // 0x0030(0x0760)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0790(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_791[0x3];                                      // 0x0791(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_Conv_StringToName_ReturnValue_1;          // 0x0794(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_79C[0x4];                                      // 0x079C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_Lighting_Preset                     CallFunc_GetDataTableRowFromName_OutRow_1;         // 0x07A0(0x0760)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue_1;    // 0x0F00(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_LightingAndPostProcessController_C_UserConstructionScript) == 0x000010, "Wrong alignment on BP_LightingAndPostProcessController_C_UserConstructionScript");
static_assert(sizeof(BP_LightingAndPostProcessController_C_UserConstructionScript) == 0x000F10, "Wrong size on BP_LightingAndPostProcessController_C_UserConstructionScript");
static_assert(offsetof(BP_LightingAndPostProcessController_C_UserConstructionScript, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue) == 0x000000, "Member 'BP_LightingAndPostProcessController_C_UserConstructionScript::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LightingAndPostProcessController_C_UserConstructionScript, CallFunc_Conv_StringToName_ReturnValue) == 0x000010, "Member 'BP_LightingAndPostProcessController_C_UserConstructionScript::CallFunc_Conv_StringToName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LightingAndPostProcessController_C_UserConstructionScript, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_1) == 0x000018, "Member 'BP_LightingAndPostProcessController_C_UserConstructionScript::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_LightingAndPostProcessController_C_UserConstructionScript, CallFunc_GetDataTableRowFromName_OutRow) == 0x000030, "Member 'BP_LightingAndPostProcessController_C_UserConstructionScript::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(BP_LightingAndPostProcessController_C_UserConstructionScript, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000790, "Member 'BP_LightingAndPostProcessController_C_UserConstructionScript::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LightingAndPostProcessController_C_UserConstructionScript, CallFunc_Conv_StringToName_ReturnValue_1) == 0x000794, "Member 'BP_LightingAndPostProcessController_C_UserConstructionScript::CallFunc_Conv_StringToName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_LightingAndPostProcessController_C_UserConstructionScript, CallFunc_GetDataTableRowFromName_OutRow_1) == 0x0007A0, "Member 'BP_LightingAndPostProcessController_C_UserConstructionScript::CallFunc_GetDataTableRowFromName_OutRow_1' has a wrong offset!");
static_assert(offsetof(BP_LightingAndPostProcessController_C_UserConstructionScript, CallFunc_GetDataTableRowFromName_ReturnValue_1) == 0x000F00, "Member 'BP_LightingAndPostProcessController_C_UserConstructionScript::CallFunc_GetDataTableRowFromName_ReturnValue_1' has a wrong offset!");

}

