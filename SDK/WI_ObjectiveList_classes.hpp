#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WI_ObjectiveList

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "JP_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WI_ObjectiveList.WI_ObjectiveList_C
// 0x00B0 (0x0390 - 0x02E0)
class UWI_ObjectiveList_C final : public UObjectiveWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02E0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UVerticalBox*                           ObjectivesBox;                                     // 0x02E8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	TMap<class UObjectiveDefinition*, class UWI_Objective_C*> ObjectivesMap;                                     // 0x02F0(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	TMap<class ASubObjective*, class UWI_SubObjective_C*> SubObjectiveMap;                                   // 0x0340(0x0050)(Edit, BlueprintVisible, DisableEditOnTemplate, DisableEditOnInstance, ContainsInstancedReference)

public:
	void AddObjectiveToList(class UWI_Objective_C* InObjective);
	void AddObjectiveWidget(const class UObjectiveDefinition*& ObjectiveDefinition, class UWI_Objective_C** NewObjectiveWidget);
	void ClearObjectiveWidgets();
	void Construct();
	void CreateObjectiveWidget(const struct FObjectiveAndOwningPlayer& Objective);
	void CreateSubObjectiveWidget(class ASubObjective* SubObjective);
	bool DoesObjectiveBelongToThisPlayer(const struct FObjectiveAndOwningPlayer& ObjectiveAndOwningPlayer, class UObjectiveDefinition** ObjectiveDefinition);
	bool DoesSubObjectiveBelongToThisPlayer(class ASubObjective* SubObjective);
	void ExecuteUbergraph_WI_ObjectiveList(int32 EntryPoint);
	void FallbackRemoveObjectiveWidget();
	void FindMatchingSubObjectiveWidgetIndex(class UObjectiveDefinition* Objective, const class UObject* SubObjective, int32* Array_Index);
	void GameStateChange(class AActor* Actor, EEndPlayReason EndPlayReason);
	void ObjectiveFinished(const struct FObjectiveAndOwningPlayer& Objective);
	void PreConstruct(bool IsDesignTime);
	void RegenerateObjectiveTrackerWidgets(const TArray<struct FObjectiveTracker>& ObjectiveTrackers);
	void RemoveFromList(class UWI_Objective_C* InObjective);
	void RemoveFromMapAndParent(const struct FObjectiveAndOwningPlayer& Objective);
	void RemoveObjectiveTrackerWidgets();
	void RemoveObjectiveWidget(const struct FObjectiveAndOwningPlayer& Objective);
	void RemoveSubObjectiveWidget(class ASubObjective* SubObjective);
	void RemoveWidgetsWithMissingSubobjectives();
	void UpdateSubObjectiveWidget(class ASubObjective* SubObjective);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WI_ObjectiveList_C">();
	}
	static class UWI_ObjectiveList_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWI_ObjectiveList_C>();
	}
};
static_assert(alignof(UWI_ObjectiveList_C) == 0x000008, "Wrong alignment on UWI_ObjectiveList_C");
static_assert(sizeof(UWI_ObjectiveList_C) == 0x000390, "Wrong size on UWI_ObjectiveList_C");
static_assert(offsetof(UWI_ObjectiveList_C, UberGraphFrame) == 0x0002E0, "Member 'UWI_ObjectiveList_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWI_ObjectiveList_C, ObjectivesBox) == 0x0002E8, "Member 'UWI_ObjectiveList_C::ObjectivesBox' has a wrong offset!");
static_assert(offsetof(UWI_ObjectiveList_C, ObjectivesMap) == 0x0002F0, "Member 'UWI_ObjectiveList_C::ObjectivesMap' has a wrong offset!");
static_assert(offsetof(UWI_ObjectiveList_C, SubObjectiveMap) == 0x000340, "Member 'UWI_ObjectiveList_C::SubObjectiveMap' has a wrong offset!");

}

