#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PlayerControllerJP_MatchBPComponent

#include "Basic.hpp"

#include "GameplayAbilities_structs.hpp"
#include "Engine_structs.hpp"
#include "JP_classes.hpp"
#include "UMG_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass PlayerControllerJP_MatchBPComponent.PlayerControllerJP_MatchBPComponent_C
// 0x0048 (0x00E8 - 0x00A0)
class UPlayerControllerJP_MatchBPComponent_C final : public UPlayerControllerJP_MatchComponent
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x00A0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class ABP_ResidentCharacter_C*                LastResidentCharacter;                             // 0x00A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	TSubclassOf<class UCommonActivatableWidget>   InGameMenuWidgetClass;                             // 0x00B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class UCommonActivatableWidget*               InGameMenu_ref;                                    // 0x00B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UItemWheelWI_C*                         ItemWheel;                                         // 0x00C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWI_IngameScoreboard_C*                 WI_IngameScoreboard;                               // 0x00C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FActiveGameplayEffectHandle            ItemWheelEffectHandle;                             // 0x00D0(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UEmoteWheelWI_C*                        EmoteWheel;                                        // 0x00D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	double                                        TimeSinceOpenEmoteWheelTriggered;                  // 0x00E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ActivateItemWheel();
	void ActiveEmoteWheel();
	void CanShowScoreboard(bool* Return);
	void CheckIfOpenEmoteWheelPressed();
	void CheckIfOpenEmoteWheelReleased();
	void ExecuteUbergraph_PlayerControllerJP_MatchBPComponent(int32 EntryPoint);
	bool HasBlockingTag();
	void HideScoreboard();
	void InpActEvt_IA_CloseShop_K2Node_EnhancedInputActionEvent_5(const struct FInputActionValue& ActionValue, float ElapsedTime, float TriggeredTime, const class UInputAction* SourceAction);
	void InpActEvt_IA_Confirm_K2Node_EnhancedInputActionEvent_2(const struct FInputActionValue& ActionValue, float ElapsedTime, float TriggeredTime, const class UInputAction* SourceAction);
	void InpActEvt_IA_EquipItem10_K2Node_EnhancedInputActionEvent_9(const struct FInputActionValue& ActionValue, float ElapsedTime, float TriggeredTime, const class UInputAction* SourceAction);
	void InpActEvt_IA_EquipItem1_K2Node_EnhancedInputActionEvent_18(const struct FInputActionValue& ActionValue, float ElapsedTime, float TriggeredTime, const class UInputAction* SourceAction);
	void InpActEvt_IA_EquipItem2_K2Node_EnhancedInputActionEvent_17(const struct FInputActionValue& ActionValue, float ElapsedTime, float TriggeredTime, const class UInputAction* SourceAction);
	void InpActEvt_IA_EquipItem3_K2Node_EnhancedInputActionEvent_16(const struct FInputActionValue& ActionValue, float ElapsedTime, float TriggeredTime, const class UInputAction* SourceAction);
	void InpActEvt_IA_EquipItem4_K2Node_EnhancedInputActionEvent_15(const struct FInputActionValue& ActionValue, float ElapsedTime, float TriggeredTime, const class UInputAction* SourceAction);
	void InpActEvt_IA_EquipItem5_K2Node_EnhancedInputActionEvent_14(const struct FInputActionValue& ActionValue, float ElapsedTime, float TriggeredTime, const class UInputAction* SourceAction);
	void InpActEvt_IA_EquipItem6_K2Node_EnhancedInputActionEvent_13(const struct FInputActionValue& ActionValue, float ElapsedTime, float TriggeredTime, const class UInputAction* SourceAction);
	void InpActEvt_IA_EquipItem7_K2Node_EnhancedInputActionEvent_12(const struct FInputActionValue& ActionValue, float ElapsedTime, float TriggeredTime, const class UInputAction* SourceAction);
	void InpActEvt_IA_EquipItem8_K2Node_EnhancedInputActionEvent_11(const struct FInputActionValue& ActionValue, float ElapsedTime, float TriggeredTime, const class UInputAction* SourceAction);
	void InpActEvt_IA_EquipItem9_K2Node_EnhancedInputActionEvent_10(const struct FInputActionValue& ActionValue, float ElapsedTime, float TriggeredTime, const class UInputAction* SourceAction);
	void InpActEvt_IA_EquipNextItemIndex_K2Node_EnhancedInputActionEvent_8(const struct FInputActionValue& ActionValue, float ElapsedTime, float TriggeredTime, const class UInputAction* SourceAction);
	void InpActEvt_IA_EquipPreviousItemIndex_K2Node_EnhancedInputActionEvent_7(const struct FInputActionValue& ActionValue, float ElapsedTime, float TriggeredTime, const class UInputAction* SourceAction);
	void InpActEvt_IA_ItemWheel_K2Node_EnhancedInputActionEvent_20(const struct FInputActionValue& ActionValue, float ElapsedTime, float TriggeredTime, const class UInputAction* SourceAction);
	void InpActEvt_IA_ItemWheel_K2Node_EnhancedInputActionEvent_21(const struct FInputActionValue& ActionValue, float ElapsedTime, float TriggeredTime, const class UInputAction* SourceAction);
	void InpActEvt_IA_ItemWheel_K2Node_EnhancedInputActionEvent_22(const struct FInputActionValue& ActionValue, float ElapsedTime, float TriggeredTime, const class UInputAction* SourceAction);
	void InpActEvt_IA_NextTab_K2Node_EnhancedInputActionEvent_4(const struct FInputActionValue& ActionValue, float ElapsedTime, float TriggeredTime, const class UInputAction* SourceAction);
	void InpActEvt_IA_OpenEmoteWheel_K2Node_EnhancedInputActionEvent_0(const struct FInputActionValue& ActionValue, float ElapsedTime, float TriggeredTime, const class UInputAction* SourceAction);
	void InpActEvt_IA_OpenEmoteWheel_K2Node_EnhancedInputActionEvent_1(const struct FInputActionValue& ActionValue, float ElapsedTime, float TriggeredTime, const class UInputAction* SourceAction);
	void InpActEvt_IA_OpenInGameMenu_K2Node_EnhancedInputActionEvent_23(const struct FInputActionValue& ActionValue, float ElapsedTime, float TriggeredTime, const class UInputAction* SourceAction);
	void InpActEvt_IA_OpenShopWhenSpectating_K2Node_EnhancedInputActionEvent_6(const struct FInputActionValue& ActionValue, float ElapsedTime, float TriggeredTime, const class UInputAction* SourceAction);
	void InpActEvt_IA_PreviousTab_K2Node_EnhancedInputActionEvent_3(const struct FInputActionValue& ActionValue, float ElapsedTime, float TriggeredTime, const class UInputAction* SourceAction);
	void InpActEvt_IA_Respawn_K2Node_EnhancedInputActionEvent_24(const struct FInputActionValue& ActionValue, float ElapsedTime, float TriggeredTime, const class UInputAction* SourceAction);
	void InpActEvt_IA_UpgradeOverview_K2Node_EnhancedInputActionEvent_19(const struct FInputActionValue& ActionValue, float ElapsedTime, float TriggeredTime, const class UInputAction* SourceAction);
	bool IsEmoting();
	void K2_OnPossessedPawnChanged(class APawn* OldPawn, class APawn* NewPawn);
	void OpenEmoteWheelPressed();
	void OpenEmoteWheelReleased();
	void Owner_DeathInputAndCamera(bool Dead);
	void Owner_SendImportantNotification(const struct FS_ImportantNotificationReceivedMessage& ImportantNotification);
	void ReceiveBeginPlay();
	void ReceiveTick(float DeltaSeconds);
	void RemoveEmoteWheel();
	void RemoveItemWheel();
	void Server_ApplyGameplayEffect(class UClass* Effect, class UAbilitySystemComponent* TargetASC);
	void Server_RemoveGameplayEffect(class UAbilitySystemComponent* TargetASC);
	void Server_ReplicateWantsToRespawn();
	void SetWantsToRespawn();
	void ShowScoreBoard();
	void TryCancelActiveEmote(bool* CanceledAbility);
	void TryEquipItemIndex(int32 Index_0);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"PlayerControllerJP_MatchBPComponent_C">();
	}
	static class UPlayerControllerJP_MatchBPComponent_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPlayerControllerJP_MatchBPComponent_C>();
	}
};
static_assert(alignof(UPlayerControllerJP_MatchBPComponent_C) == 0x000008, "Wrong alignment on UPlayerControllerJP_MatchBPComponent_C");
static_assert(sizeof(UPlayerControllerJP_MatchBPComponent_C) == 0x0000E8, "Wrong size on UPlayerControllerJP_MatchBPComponent_C");
static_assert(offsetof(UPlayerControllerJP_MatchBPComponent_C, UberGraphFrame) == 0x0000A0, "Member 'UPlayerControllerJP_MatchBPComponent_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UPlayerControllerJP_MatchBPComponent_C, LastResidentCharacter) == 0x0000A8, "Member 'UPlayerControllerJP_MatchBPComponent_C::LastResidentCharacter' has a wrong offset!");
static_assert(offsetof(UPlayerControllerJP_MatchBPComponent_C, InGameMenuWidgetClass) == 0x0000B0, "Member 'UPlayerControllerJP_MatchBPComponent_C::InGameMenuWidgetClass' has a wrong offset!");
static_assert(offsetof(UPlayerControllerJP_MatchBPComponent_C, InGameMenu_ref) == 0x0000B8, "Member 'UPlayerControllerJP_MatchBPComponent_C::InGameMenu_ref' has a wrong offset!");
static_assert(offsetof(UPlayerControllerJP_MatchBPComponent_C, ItemWheel) == 0x0000C0, "Member 'UPlayerControllerJP_MatchBPComponent_C::ItemWheel' has a wrong offset!");
static_assert(offsetof(UPlayerControllerJP_MatchBPComponent_C, WI_IngameScoreboard) == 0x0000C8, "Member 'UPlayerControllerJP_MatchBPComponent_C::WI_IngameScoreboard' has a wrong offset!");
static_assert(offsetof(UPlayerControllerJP_MatchBPComponent_C, ItemWheelEffectHandle) == 0x0000D0, "Member 'UPlayerControllerJP_MatchBPComponent_C::ItemWheelEffectHandle' has a wrong offset!");
static_assert(offsetof(UPlayerControllerJP_MatchBPComponent_C, EmoteWheel) == 0x0000D8, "Member 'UPlayerControllerJP_MatchBPComponent_C::EmoteWheel' has a wrong offset!");
static_assert(offsetof(UPlayerControllerJP_MatchBPComponent_C, TimeSinceOpenEmoteWheelTriggered) == 0x0000E0, "Member 'UPlayerControllerJP_MatchBPComponent_C::TimeSinceOpenEmoteWheelTriggered' has a wrong offset!");

}

