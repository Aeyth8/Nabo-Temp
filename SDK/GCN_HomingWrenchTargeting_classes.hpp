#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GCN_HomingWrenchTargeting

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "GCN_AbilityBurstBase_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass GCN_HomingWrenchTargeting.GCN_HomingWrenchTargeting_C
// 0x0028 (0x0778 - 0x0750)
class AGCN_HomingWrenchTargeting_C final : public AGCN_AbilityBurstBase_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_GCN_HomingWrenchTargeting_C;        // 0x0750(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct FTimerHandle                           TrackingTimer;                                     // 0x0758(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	uint8                                         OwningTeamID;                                      // 0x0760(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_761[0x7];                                      // 0x0761(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAC_HomingWrenchTracking_C*             TrackingWidgetComponent;                           // 0x0768(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          TrackingTarget;                                    // 0x0770(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_GCN_HomingWrenchTargeting(int32 EntryPoint);
	void FilterTargets(TArray<struct FHitResult>& Array, TArray<class AActor*>* Return);
	void Local_Add();
	void Local_Remove();
	void On_Tracking_Timer_Elapsed();
	void SetTrackingComponentVisibility(bool bNewVisibility);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"GCN_HomingWrenchTargeting_C">();
	}
	static class AGCN_HomingWrenchTargeting_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AGCN_HomingWrenchTargeting_C>();
	}
};
static_assert(alignof(AGCN_HomingWrenchTargeting_C) == 0x000008, "Wrong alignment on AGCN_HomingWrenchTargeting_C");
static_assert(sizeof(AGCN_HomingWrenchTargeting_C) == 0x000778, "Wrong size on AGCN_HomingWrenchTargeting_C");
static_assert(offsetof(AGCN_HomingWrenchTargeting_C, UberGraphFrame_GCN_HomingWrenchTargeting_C) == 0x000750, "Member 'AGCN_HomingWrenchTargeting_C::UberGraphFrame_GCN_HomingWrenchTargeting_C' has a wrong offset!");
static_assert(offsetof(AGCN_HomingWrenchTargeting_C, TrackingTimer) == 0x000758, "Member 'AGCN_HomingWrenchTargeting_C::TrackingTimer' has a wrong offset!");
static_assert(offsetof(AGCN_HomingWrenchTargeting_C, OwningTeamID) == 0x000760, "Member 'AGCN_HomingWrenchTargeting_C::OwningTeamID' has a wrong offset!");
static_assert(offsetof(AGCN_HomingWrenchTargeting_C, TrackingWidgetComponent) == 0x000768, "Member 'AGCN_HomingWrenchTargeting_C::TrackingWidgetComponent' has a wrong offset!");
static_assert(offsetof(AGCN_HomingWrenchTargeting_C, TrackingTarget) == 0x000770, "Member 'AGCN_HomingWrenchTargeting_C::TrackingTarget' has a wrong offset!");

}

