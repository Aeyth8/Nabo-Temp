#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PlayerStateJP_MatchBP

#include "Basic.hpp"

#include "JP_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "E_TimeOfDay_structs.hpp"


namespace SDK::Params
{

// Function PlayerStateJP_MatchBP.PlayerStateJP_MatchBP_C.ExecuteUbergraph_PlayerStateJP_MatchBP
// 0x0190 (0x0190 - 0x0000)
struct PlayerStateJP_MatchBP_C_ExecuteUbergraph_PlayerStateJP_MatchBP final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateJP_Match*                     CallFunc_GetGameStateJP_Match_ReturnValue;         // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           Temp_struct_Variable;                              // 0x0010(0x0008)(NoDestructor, HasGetValueTypeHash)
	class UAsyncAction_ListenForGameplayMessage*  Temp_object_Variable;                              // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAsyncAction_ListenForGameplayMessage*  CallFunc_ListenForGameplayMessages_ReturnValue;    // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable;                 // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable_1;               // 0x002B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameplayMessageSubsystem*              CallFunc_GetGameInstanceSubsystem_ReturnValue;     // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable_1;                     // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable_2;                     // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable_2;               // 0x003A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable_3;                     // 0x003B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable_3;               // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D[0x3];                                       // 0x003D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FResourcePayload                       Temp_struct_Variable_1;                            // 0x0040(0x0028)(NoDestructor)
	struct FObjectiveAndOwningPlayer              K2Node_CustomEvent_ObjectiveDefinition;            // 0x0068(0x0010)(NoDestructor, ContainsInstancedReference)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0081(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_82[0x6];                                       // 0x0082(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UPlayerEconomyComponent*                K2Node_DynamicCast_AsPlayer_Economy_Component;     // 0x0088(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_1;    // 0x0091(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_92[0x6];                                       // 0x0092(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0098(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_2;    // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A1[0x7];                                       // 0x00A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerStateJP_MatchBP_C*               K2Node_DynamicCast_AsPlayer_State_JP_Match_BP;     // 0x00A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetTeamID_ReturnValue;                    // 0x00B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_3;    // 0x00B2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B3[0x5];                                       // 0x00B3(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UAsyncAction_ListenForGameplayMessage*  K2Node_CustomEvent_ProxyObject;                    // 0x00B8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           K2Node_CustomEvent_ActualChannel;                  // 0x00C0(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x00C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FObjectiveGameplayMessage              K2Node_MakeStruct_ObjectiveGameplayMessage;        // 0x00CA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_CB[0x5];                                       // 0x00CB(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class ADowntimeManager_C*                     CallFunc_GetActorOfClass_ReturnValue;              // 0x00D0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	E_TimeOfDay                                   K2Node_CustomEvent_TimeOfDay_3;                    // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x00D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FObjectiveGameplayMessage              K2Node_MakeStruct_ObjectiveGameplayMessage_1;      // 0x00DA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_DB[0x1];                                       // 0x00DB(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class UAsyncAction_ListenForGameplayMessage* ProxyObject, const struct FGameplayTag& ActualChannel)> K2Node_CreateDelegate_OutputDelegate;              // 0x00DC(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_EC[0x4];                                       // 0x00EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ADowntimeManager_C*                     CallFunc_GetActorOfClass_ReturnValue_1;            // 0x00F0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable_4;               // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_TimeOfDay                                   K2Node_CustomEvent_TimeOfDay_2;                    // 0x00F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_1;                    // 0x00FA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_TimeOfDay                                   K2Node_CustomEvent_TimeOfDay_1;                    // 0x00FB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable_4;                     // 0x00FC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_2;                    // 0x00FD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_FE[0x2];                                       // 0x00FE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FResourcePayload                       Temp_struct_Variable_2;                            // 0x0100(0x0028)(NoDestructor)
	bool                                          CallFunc_GetPayload_ReturnValue;                   // 0x0128(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_129[0x3];                                      // 0x0129(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(const struct FObjectiveAndOwningPlayer& ObjectiveDefinition)> K2Node_CreateDelegate_OutputDelegate_1;            // 0x012C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetTeamID_ReturnValue_1;                  // 0x013C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue;       // 0x013D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x013E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x013F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_3;                 // 0x0140(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_141[0x3];                                      // 0x0141(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(E_TimeOfDay TimeOfDay)>        K2Node_CreateDelegate_OutputDelegate_2;            // 0x0144(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0154(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_155[0x3];                                      // 0x0155(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UObjectiveWorldSubsystem*               CallFunc_GetWorldSubsystem_ReturnValue;            // 0x0158(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	E_TimeOfDay                                   K2Node_CustomEvent_TimeOfDay;                      // 0x0160(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_3;                    // 0x0161(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_162[0x6];                                      // 0x0162(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameplayMessageSubsystem*              CallFunc_GetGameInstanceSubsystem_ReturnValue_1;   // 0x0168(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(E_TimeOfDay TimeOfDay)>        K2Node_CreateDelegate_OutputDelegate_3;            // 0x0170(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_4;    // 0x0180(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_4;                 // 0x0181(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_NewSurrenderState;              // 0x0182(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_New_Speaking_State;             // 0x0183(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0184(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_185[0x3];                                      // 0x0185(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_B_ImplicitCast;          // 0x0188(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PlayerStateJP_MatchBP_C_ExecuteUbergraph_PlayerStateJP_MatchBP) == 0x000008, "Wrong alignment on PlayerStateJP_MatchBP_C_ExecuteUbergraph_PlayerStateJP_MatchBP");
static_assert(sizeof(PlayerStateJP_MatchBP_C_ExecuteUbergraph_PlayerStateJP_MatchBP) == 0x000190, "Wrong size on PlayerStateJP_MatchBP_C_ExecuteUbergraph_PlayerStateJP_MatchBP");
static_assert(offsetof(PlayerStateJP_MatchBP_C_ExecuteUbergraph_PlayerStateJP_MatchBP, EntryPoint) == 0x000000, "Member 'PlayerStateJP_MatchBP_C_ExecuteUbergraph_PlayerStateJP_MatchBP::EntryPoint' has a wrong offset!");
static_assert(offsetof(PlayerStateJP_MatchBP_C_ExecuteUbergraph_PlayerStateJP_MatchBP, CallFunc_GetGameStateJP_Match_ReturnValue) == 0x000008, "Member 'PlayerStateJP_MatchBP_C_ExecuteUbergraph_PlayerStateJP_MatchBP::CallFunc_GetGameStateJP_Match_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerStateJP_MatchBP_C_ExecuteUbergraph_PlayerStateJP_MatchBP, Temp_struct_Variable) == 0x000010, "Member 'PlayerStateJP_MatchBP_C_ExecuteUbergraph_PlayerStateJP_MatchBP::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(PlayerStateJP_MatchBP_C_ExecuteUbergraph_PlayerStateJP_MatchBP, Temp_object_Variable) == 0x000018, "Member 'PlayerStateJP_MatchBP_C_ExecuteUbergraph_PlayerStateJP_MatchBP::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(PlayerStateJP_MatchBP_C_ExecuteUbergraph_PlayerStateJP_MatchBP, CallFunc_ListenForGameplayMessages_ReturnValue) == 0x000020, "Member 'PlayerStateJP_MatchBP_C_ExecuteUbergraph_PlayerStateJP_MatchBP::CallFunc_ListenForGameplayMessages_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerStateJP_MatchBP_C_ExecuteUbergraph_PlayerStateJP_MatchBP, Temp_bool_IsClosed_Variable) == 0x000028, "Member 'PlayerStateJP_MatchBP_C_ExecuteUbergraph_PlayerStateJP_MatchBP::Temp_bool_IsClosed_Variable' has a wrong offset!");
static_assert(offsetof(PlayerStateJP_MatchBP_C_ExecuteUbergraph_PlayerStateJP_MatchBP, CallFunc_IsValid_ReturnValue) == 0x000029, "Member 'PlayerStateJP_MatchBP_C_ExecuteUbergraph_PlayerStateJP_MatchBP::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerStateJP_MatchBP_C_ExecuteUbergraph_PlayerStateJP_MatchBP, Temp_bool_Has_Been_Initd_Variable) == 0x00002A, "Member 'PlayerStateJP_MatchBP_C_ExecuteUbergraph_PlayerStateJP_MatchBP::Temp_bool_Has_Been_Initd_Variable' has a wrong offset!");
static_assert(offsetof(PlayerStateJP_MatchBP_C_ExecuteUbergraph_PlayerStateJP_MatchBP, Temp_bool_Has_Been_Initd_Variable_1) == 0x00002B, "Member 'PlayerStateJP_MatchBP_C_ExecuteUbergraph_PlayerStateJP_MatchBP::Temp_bool_Has_Been_Initd_Variable_1' has a wrong offset!");
static_assert(offsetof(PlayerStateJP_MatchBP_C_ExecuteUbergraph_PlayerStateJP_MatchBP, CallFunc_GetGameInstanceSubsystem_ReturnValue) == 0x000030, "Member 'PlayerStateJP_MatchBP_C_ExecuteUbergraph_PlayerStateJP_MatchBP::CallFunc_GetGameInstanceSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerStateJP_MatchBP_C_ExecuteUbergraph_PlayerStateJP_MatchBP, Temp_bool_IsClosed_Variable_1) == 0x000038, "Member 'PlayerStateJP_MatchBP_C_ExecuteUbergraph_PlayerStateJP_MatchBP::Temp_bool_IsClosed_Variable_1' has a wrong offset!");
static_assert(offsetof(PlayerStateJP_MatchBP_C_ExecuteUbergraph_PlayerStateJP_MatchBP, Temp_bool_IsClosed_Variable_2) == 0x000039, "Member 'PlayerStateJP_MatchBP_C_ExecuteUbergraph_PlayerStateJP_MatchBP::Temp_bool_IsClosed_Variable_2' has a wrong offset!");
static_assert(offsetof(PlayerStateJP_MatchBP_C_ExecuteUbergraph_PlayerStateJP_MatchBP, Temp_bool_Has_Been_Initd_Variable_2) == 0x00003A, "Member 'PlayerStateJP_MatchBP_C_ExecuteUbergraph_PlayerStateJP_MatchBP::Temp_bool_Has_Been_Initd_Variable_2' has a wrong offset!");
static_assert(offsetof(PlayerStateJP_MatchBP_C_ExecuteUbergraph_PlayerStateJP_MatchBP, Temp_bool_IsClosed_Variable_3) == 0x00003B, "Member 'PlayerStateJP_MatchBP_C_ExecuteUbergraph_PlayerStateJP_MatchBP::Temp_bool_IsClosed_Variable_3' has a wrong offset!");
static_assert(offsetof(PlayerStateJP_MatchBP_C_ExecuteUbergraph_PlayerStateJP_MatchBP, Temp_bool_Has_Been_Initd_Variable_3) == 0x00003C, "Member 'PlayerStateJP_MatchBP_C_ExecuteUbergraph_PlayerStateJP_MatchBP::Temp_bool_Has_Been_Initd_Variable_3' has a wrong offset!");
static_assert(offsetof(PlayerStateJP_MatchBP_C_ExecuteUbergraph_PlayerStateJP_MatchBP, Temp_struct_Variable_1) == 0x000040, "Member 'PlayerStateJP_MatchBP_C_ExecuteUbergraph_PlayerStateJP_MatchBP::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(PlayerStateJP_MatchBP_C_ExecuteUbergraph_PlayerStateJP_MatchBP, K2Node_CustomEvent_ObjectiveDefinition) == 0x000068, "Member 'PlayerStateJP_MatchBP_C_ExecuteUbergraph_PlayerStateJP_MatchBP::K2Node_CustomEvent_ObjectiveDefinition' has a wrong offset!");
static_assert(offsetof(PlayerStateJP_MatchBP_C_ExecuteUbergraph_PlayerStateJP_MatchBP, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000078, "Member 'PlayerStateJP_MatchBP_C_ExecuteUbergraph_PlayerStateJP_MatchBP::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerStateJP_MatchBP_C_ExecuteUbergraph_PlayerStateJP_MatchBP, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000080, "Member 'PlayerStateJP_MatchBP_C_ExecuteUbergraph_PlayerStateJP_MatchBP::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerStateJP_MatchBP_C_ExecuteUbergraph_PlayerStateJP_MatchBP, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000081, "Member 'PlayerStateJP_MatchBP_C_ExecuteUbergraph_PlayerStateJP_MatchBP::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerStateJP_MatchBP_C_ExecuteUbergraph_PlayerStateJP_MatchBP, K2Node_DynamicCast_AsPlayer_Economy_Component) == 0x000088, "Member 'PlayerStateJP_MatchBP_C_ExecuteUbergraph_PlayerStateJP_MatchBP::K2Node_DynamicCast_AsPlayer_Economy_Component' has a wrong offset!");
static_assert(offsetof(PlayerStateJP_MatchBP_C_ExecuteUbergraph_PlayerStateJP_MatchBP, K2Node_DynamicCast_bSuccess) == 0x000090, "Member 'PlayerStateJP_MatchBP_C_ExecuteUbergraph_PlayerStateJP_MatchBP::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(PlayerStateJP_MatchBP_C_ExecuteUbergraph_PlayerStateJP_MatchBP, CallFunc_EqualEqual_ObjectObject_ReturnValue_1) == 0x000091, "Member 'PlayerStateJP_MatchBP_C_ExecuteUbergraph_PlayerStateJP_MatchBP::CallFunc_EqualEqual_ObjectObject_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PlayerStateJP_MatchBP_C_ExecuteUbergraph_PlayerStateJP_MatchBP, CallFunc_GetOwner_ReturnValue) == 0x000098, "Member 'PlayerStateJP_MatchBP_C_ExecuteUbergraph_PlayerStateJP_MatchBP::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerStateJP_MatchBP_C_ExecuteUbergraph_PlayerStateJP_MatchBP, CallFunc_EqualEqual_ObjectObject_ReturnValue_2) == 0x0000A0, "Member 'PlayerStateJP_MatchBP_C_ExecuteUbergraph_PlayerStateJP_MatchBP::CallFunc_EqualEqual_ObjectObject_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PlayerStateJP_MatchBP_C_ExecuteUbergraph_PlayerStateJP_MatchBP, K2Node_DynamicCast_AsPlayer_State_JP_Match_BP) == 0x0000A8, "Member 'PlayerStateJP_MatchBP_C_ExecuteUbergraph_PlayerStateJP_MatchBP::K2Node_DynamicCast_AsPlayer_State_JP_Match_BP' has a wrong offset!");
static_assert(offsetof(PlayerStateJP_MatchBP_C_ExecuteUbergraph_PlayerStateJP_MatchBP, K2Node_DynamicCast_bSuccess_1) == 0x0000B0, "Member 'PlayerStateJP_MatchBP_C_ExecuteUbergraph_PlayerStateJP_MatchBP::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(PlayerStateJP_MatchBP_C_ExecuteUbergraph_PlayerStateJP_MatchBP, CallFunc_GetTeamID_ReturnValue) == 0x0000B1, "Member 'PlayerStateJP_MatchBP_C_ExecuteUbergraph_PlayerStateJP_MatchBP::CallFunc_GetTeamID_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerStateJP_MatchBP_C_ExecuteUbergraph_PlayerStateJP_MatchBP, CallFunc_EqualEqual_ObjectObject_ReturnValue_3) == 0x0000B2, "Member 'PlayerStateJP_MatchBP_C_ExecuteUbergraph_PlayerStateJP_MatchBP::CallFunc_EqualEqual_ObjectObject_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(PlayerStateJP_MatchBP_C_ExecuteUbergraph_PlayerStateJP_MatchBP, K2Node_CustomEvent_ProxyObject) == 0x0000B8, "Member 'PlayerStateJP_MatchBP_C_ExecuteUbergraph_PlayerStateJP_MatchBP::K2Node_CustomEvent_ProxyObject' has a wrong offset!");
static_assert(offsetof(PlayerStateJP_MatchBP_C_ExecuteUbergraph_PlayerStateJP_MatchBP, K2Node_CustomEvent_ActualChannel) == 0x0000C0, "Member 'PlayerStateJP_MatchBP_C_ExecuteUbergraph_PlayerStateJP_MatchBP::K2Node_CustomEvent_ActualChannel' has a wrong offset!");
static_assert(offsetof(PlayerStateJP_MatchBP_C_ExecuteUbergraph_PlayerStateJP_MatchBP, CallFunc_BooleanAND_ReturnValue) == 0x0000C8, "Member 'PlayerStateJP_MatchBP_C_ExecuteUbergraph_PlayerStateJP_MatchBP::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerStateJP_MatchBP_C_ExecuteUbergraph_PlayerStateJP_MatchBP, CallFunc_BooleanAND_ReturnValue_1) == 0x0000C9, "Member 'PlayerStateJP_MatchBP_C_ExecuteUbergraph_PlayerStateJP_MatchBP::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PlayerStateJP_MatchBP_C_ExecuteUbergraph_PlayerStateJP_MatchBP, K2Node_MakeStruct_ObjectiveGameplayMessage) == 0x0000CA, "Member 'PlayerStateJP_MatchBP_C_ExecuteUbergraph_PlayerStateJP_MatchBP::K2Node_MakeStruct_ObjectiveGameplayMessage' has a wrong offset!");
static_assert(offsetof(PlayerStateJP_MatchBP_C_ExecuteUbergraph_PlayerStateJP_MatchBP, CallFunc_GetActorOfClass_ReturnValue) == 0x0000D0, "Member 'PlayerStateJP_MatchBP_C_ExecuteUbergraph_PlayerStateJP_MatchBP::CallFunc_GetActorOfClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerStateJP_MatchBP_C_ExecuteUbergraph_PlayerStateJP_MatchBP, K2Node_CustomEvent_TimeOfDay_3) == 0x0000D8, "Member 'PlayerStateJP_MatchBP_C_ExecuteUbergraph_PlayerStateJP_MatchBP::K2Node_CustomEvent_TimeOfDay_3' has a wrong offset!");
static_assert(offsetof(PlayerStateJP_MatchBP_C_ExecuteUbergraph_PlayerStateJP_MatchBP, K2Node_SwitchEnum_CmpSuccess) == 0x0000D9, "Member 'PlayerStateJP_MatchBP_C_ExecuteUbergraph_PlayerStateJP_MatchBP::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(PlayerStateJP_MatchBP_C_ExecuteUbergraph_PlayerStateJP_MatchBP, K2Node_MakeStruct_ObjectiveGameplayMessage_1) == 0x0000DA, "Member 'PlayerStateJP_MatchBP_C_ExecuteUbergraph_PlayerStateJP_MatchBP::K2Node_MakeStruct_ObjectiveGameplayMessage_1' has a wrong offset!");
static_assert(offsetof(PlayerStateJP_MatchBP_C_ExecuteUbergraph_PlayerStateJP_MatchBP, K2Node_CreateDelegate_OutputDelegate) == 0x0000DC, "Member 'PlayerStateJP_MatchBP_C_ExecuteUbergraph_PlayerStateJP_MatchBP::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(PlayerStateJP_MatchBP_C_ExecuteUbergraph_PlayerStateJP_MatchBP, CallFunc_GetActorOfClass_ReturnValue_1) == 0x0000F0, "Member 'PlayerStateJP_MatchBP_C_ExecuteUbergraph_PlayerStateJP_MatchBP::CallFunc_GetActorOfClass_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PlayerStateJP_MatchBP_C_ExecuteUbergraph_PlayerStateJP_MatchBP, Temp_bool_Has_Been_Initd_Variable_4) == 0x0000F8, "Member 'PlayerStateJP_MatchBP_C_ExecuteUbergraph_PlayerStateJP_MatchBP::Temp_bool_Has_Been_Initd_Variable_4' has a wrong offset!");
static_assert(offsetof(PlayerStateJP_MatchBP_C_ExecuteUbergraph_PlayerStateJP_MatchBP, K2Node_CustomEvent_TimeOfDay_2) == 0x0000F9, "Member 'PlayerStateJP_MatchBP_C_ExecuteUbergraph_PlayerStateJP_MatchBP::K2Node_CustomEvent_TimeOfDay_2' has a wrong offset!");
static_assert(offsetof(PlayerStateJP_MatchBP_C_ExecuteUbergraph_PlayerStateJP_MatchBP, K2Node_SwitchEnum_CmpSuccess_1) == 0x0000FA, "Member 'PlayerStateJP_MatchBP_C_ExecuteUbergraph_PlayerStateJP_MatchBP::K2Node_SwitchEnum_CmpSuccess_1' has a wrong offset!");
static_assert(offsetof(PlayerStateJP_MatchBP_C_ExecuteUbergraph_PlayerStateJP_MatchBP, K2Node_CustomEvent_TimeOfDay_1) == 0x0000FB, "Member 'PlayerStateJP_MatchBP_C_ExecuteUbergraph_PlayerStateJP_MatchBP::K2Node_CustomEvent_TimeOfDay_1' has a wrong offset!");
static_assert(offsetof(PlayerStateJP_MatchBP_C_ExecuteUbergraph_PlayerStateJP_MatchBP, Temp_bool_IsClosed_Variable_4) == 0x0000FC, "Member 'PlayerStateJP_MatchBP_C_ExecuteUbergraph_PlayerStateJP_MatchBP::Temp_bool_IsClosed_Variable_4' has a wrong offset!");
static_assert(offsetof(PlayerStateJP_MatchBP_C_ExecuteUbergraph_PlayerStateJP_MatchBP, K2Node_SwitchEnum_CmpSuccess_2) == 0x0000FD, "Member 'PlayerStateJP_MatchBP_C_ExecuteUbergraph_PlayerStateJP_MatchBP::K2Node_SwitchEnum_CmpSuccess_2' has a wrong offset!");
static_assert(offsetof(PlayerStateJP_MatchBP_C_ExecuteUbergraph_PlayerStateJP_MatchBP, Temp_struct_Variable_2) == 0x000100, "Member 'PlayerStateJP_MatchBP_C_ExecuteUbergraph_PlayerStateJP_MatchBP::Temp_struct_Variable_2' has a wrong offset!");
static_assert(offsetof(PlayerStateJP_MatchBP_C_ExecuteUbergraph_PlayerStateJP_MatchBP, CallFunc_GetPayload_ReturnValue) == 0x000128, "Member 'PlayerStateJP_MatchBP_C_ExecuteUbergraph_PlayerStateJP_MatchBP::CallFunc_GetPayload_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerStateJP_MatchBP_C_ExecuteUbergraph_PlayerStateJP_MatchBP, K2Node_CreateDelegate_OutputDelegate_1) == 0x00012C, "Member 'PlayerStateJP_MatchBP_C_ExecuteUbergraph_PlayerStateJP_MatchBP::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(PlayerStateJP_MatchBP_C_ExecuteUbergraph_PlayerStateJP_MatchBP, CallFunc_GetTeamID_ReturnValue_1) == 0x00013C, "Member 'PlayerStateJP_MatchBP_C_ExecuteUbergraph_PlayerStateJP_MatchBP::CallFunc_GetTeamID_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PlayerStateJP_MatchBP_C_ExecuteUbergraph_PlayerStateJP_MatchBP, CallFunc_LessEqual_DoubleDouble_ReturnValue) == 0x00013D, "Member 'PlayerStateJP_MatchBP_C_ExecuteUbergraph_PlayerStateJP_MatchBP::CallFunc_LessEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerStateJP_MatchBP_C_ExecuteUbergraph_PlayerStateJP_MatchBP, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x00013E, "Member 'PlayerStateJP_MatchBP_C_ExecuteUbergraph_PlayerStateJP_MatchBP::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PlayerStateJP_MatchBP_C_ExecuteUbergraph_PlayerStateJP_MatchBP, CallFunc_BooleanAND_ReturnValue_2) == 0x00013F, "Member 'PlayerStateJP_MatchBP_C_ExecuteUbergraph_PlayerStateJP_MatchBP::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PlayerStateJP_MatchBP_C_ExecuteUbergraph_PlayerStateJP_MatchBP, CallFunc_BooleanAND_ReturnValue_3) == 0x000140, "Member 'PlayerStateJP_MatchBP_C_ExecuteUbergraph_PlayerStateJP_MatchBP::CallFunc_BooleanAND_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(PlayerStateJP_MatchBP_C_ExecuteUbergraph_PlayerStateJP_MatchBP, K2Node_CreateDelegate_OutputDelegate_2) == 0x000144, "Member 'PlayerStateJP_MatchBP_C_ExecuteUbergraph_PlayerStateJP_MatchBP::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(PlayerStateJP_MatchBP_C_ExecuteUbergraph_PlayerStateJP_MatchBP, CallFunc_HasAuthority_ReturnValue) == 0x000154, "Member 'PlayerStateJP_MatchBP_C_ExecuteUbergraph_PlayerStateJP_MatchBP::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerStateJP_MatchBP_C_ExecuteUbergraph_PlayerStateJP_MatchBP, CallFunc_GetWorldSubsystem_ReturnValue) == 0x000158, "Member 'PlayerStateJP_MatchBP_C_ExecuteUbergraph_PlayerStateJP_MatchBP::CallFunc_GetWorldSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerStateJP_MatchBP_C_ExecuteUbergraph_PlayerStateJP_MatchBP, K2Node_CustomEvent_TimeOfDay) == 0x000160, "Member 'PlayerStateJP_MatchBP_C_ExecuteUbergraph_PlayerStateJP_MatchBP::K2Node_CustomEvent_TimeOfDay' has a wrong offset!");
static_assert(offsetof(PlayerStateJP_MatchBP_C_ExecuteUbergraph_PlayerStateJP_MatchBP, K2Node_SwitchEnum_CmpSuccess_3) == 0x000161, "Member 'PlayerStateJP_MatchBP_C_ExecuteUbergraph_PlayerStateJP_MatchBP::K2Node_SwitchEnum_CmpSuccess_3' has a wrong offset!");
static_assert(offsetof(PlayerStateJP_MatchBP_C_ExecuteUbergraph_PlayerStateJP_MatchBP, CallFunc_GetGameInstanceSubsystem_ReturnValue_1) == 0x000168, "Member 'PlayerStateJP_MatchBP_C_ExecuteUbergraph_PlayerStateJP_MatchBP::CallFunc_GetGameInstanceSubsystem_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PlayerStateJP_MatchBP_C_ExecuteUbergraph_PlayerStateJP_MatchBP, K2Node_CreateDelegate_OutputDelegate_3) == 0x000170, "Member 'PlayerStateJP_MatchBP_C_ExecuteUbergraph_PlayerStateJP_MatchBP::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(PlayerStateJP_MatchBP_C_ExecuteUbergraph_PlayerStateJP_MatchBP, CallFunc_EqualEqual_ObjectObject_ReturnValue_4) == 0x000180, "Member 'PlayerStateJP_MatchBP_C_ExecuteUbergraph_PlayerStateJP_MatchBP::CallFunc_EqualEqual_ObjectObject_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(PlayerStateJP_MatchBP_C_ExecuteUbergraph_PlayerStateJP_MatchBP, CallFunc_BooleanAND_ReturnValue_4) == 0x000181, "Member 'PlayerStateJP_MatchBP_C_ExecuteUbergraph_PlayerStateJP_MatchBP::CallFunc_BooleanAND_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(PlayerStateJP_MatchBP_C_ExecuteUbergraph_PlayerStateJP_MatchBP, K2Node_CustomEvent_NewSurrenderState) == 0x000182, "Member 'PlayerStateJP_MatchBP_C_ExecuteUbergraph_PlayerStateJP_MatchBP::K2Node_CustomEvent_NewSurrenderState' has a wrong offset!");
static_assert(offsetof(PlayerStateJP_MatchBP_C_ExecuteUbergraph_PlayerStateJP_MatchBP, K2Node_CustomEvent_New_Speaking_State) == 0x000183, "Member 'PlayerStateJP_MatchBP_C_ExecuteUbergraph_PlayerStateJP_MatchBP::K2Node_CustomEvent_New_Speaking_State' has a wrong offset!");
static_assert(offsetof(PlayerStateJP_MatchBP_C_ExecuteUbergraph_PlayerStateJP_MatchBP, CallFunc_Greater_IntInt_ReturnValue) == 0x000184, "Member 'PlayerStateJP_MatchBP_C_ExecuteUbergraph_PlayerStateJP_MatchBP::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerStateJP_MatchBP_C_ExecuteUbergraph_PlayerStateJP_MatchBP, CallFunc_Add_DoubleDouble_B_ImplicitCast) == 0x000188, "Member 'PlayerStateJP_MatchBP_C_ExecuteUbergraph_PlayerStateJP_MatchBP::CallFunc_Add_DoubleDouble_B_ImplicitCast' has a wrong offset!");

// Function PlayerStateJP_MatchBP.PlayerStateJP_MatchBP_C.IsKillSuicide
// 0x03E0 (0x03E0 - 0x0000)
struct PlayerStateJP_MatchBP_C_IsKillSuicide final
{
public:
	struct FKillInfo                              KillInfo;                                          // 0x0000(0x03D8)(BlueprintVisible, BlueprintReadOnly, Parm)
	bool                                          IsSuicide;                                         // 0x03D8(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x03D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PlayerStateJP_MatchBP_C_IsKillSuicide) == 0x000008, "Wrong alignment on PlayerStateJP_MatchBP_C_IsKillSuicide");
static_assert(sizeof(PlayerStateJP_MatchBP_C_IsKillSuicide) == 0x0003E0, "Wrong size on PlayerStateJP_MatchBP_C_IsKillSuicide");
static_assert(offsetof(PlayerStateJP_MatchBP_C_IsKillSuicide, KillInfo) == 0x000000, "Member 'PlayerStateJP_MatchBP_C_IsKillSuicide::KillInfo' has a wrong offset!");
static_assert(offsetof(PlayerStateJP_MatchBP_C_IsKillSuicide, IsSuicide) == 0x0003D8, "Member 'PlayerStateJP_MatchBP_C_IsKillSuicide::IsSuicide' has a wrong offset!");
static_assert(offsetof(PlayerStateJP_MatchBP_C_IsKillSuicide, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x0003D9, "Member 'PlayerStateJP_MatchBP_C_IsKillSuicide::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");

// Function PlayerStateJP_MatchBP.PlayerStateJP_MatchBP_C.On_NightTimeChange_Event
// 0x0001 (0x0001 - 0x0000)
struct PlayerStateJP_MatchBP_C_On_NightTimeChange_Event final
{
public:
	E_TimeOfDay                                   TimeOfDay;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PlayerStateJP_MatchBP_C_On_NightTimeChange_Event) == 0x000001, "Wrong alignment on PlayerStateJP_MatchBP_C_On_NightTimeChange_Event");
static_assert(sizeof(PlayerStateJP_MatchBP_C_On_NightTimeChange_Event) == 0x000001, "Wrong size on PlayerStateJP_MatchBP_C_On_NightTimeChange_Event");
static_assert(offsetof(PlayerStateJP_MatchBP_C_On_NightTimeChange_Event, TimeOfDay) == 0x000000, "Member 'PlayerStateJP_MatchBP_C_On_NightTimeChange_Event::TimeOfDay' has a wrong offset!");

// Function PlayerStateJP_MatchBP.PlayerStateJP_MatchBP_C.OnChangeToDayEvent
// 0x0001 (0x0001 - 0x0000)
struct PlayerStateJP_MatchBP_C_OnChangeToDayEvent final
{
public:
	E_TimeOfDay                                   TimeOfDay;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PlayerStateJP_MatchBP_C_OnChangeToDayEvent) == 0x000001, "Wrong alignment on PlayerStateJP_MatchBP_C_OnChangeToDayEvent");
static_assert(sizeof(PlayerStateJP_MatchBP_C_OnChangeToDayEvent) == 0x000001, "Wrong size on PlayerStateJP_MatchBP_C_OnChangeToDayEvent");
static_assert(offsetof(PlayerStateJP_MatchBP_C_OnChangeToDayEvent, TimeOfDay) == 0x000000, "Member 'PlayerStateJP_MatchBP_C_OnChangeToDayEvent::TimeOfDay' has a wrong offset!");

// Function PlayerStateJP_MatchBP.PlayerStateJP_MatchBP_C.OnMessageReceived_9BDC650D40F23A862C9362A7554D4329
// 0x0010 (0x0010 - 0x0000)
struct PlayerStateJP_MatchBP_C_OnMessageReceived_9BDC650D40F23A862C9362A7554D4329 final
{
public:
	class UAsyncAction_ListenForGameplayMessage*  ProxyObject;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           ActualChannel;                                     // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PlayerStateJP_MatchBP_C_OnMessageReceived_9BDC650D40F23A862C9362A7554D4329) == 0x000008, "Wrong alignment on PlayerStateJP_MatchBP_C_OnMessageReceived_9BDC650D40F23A862C9362A7554D4329");
static_assert(sizeof(PlayerStateJP_MatchBP_C_OnMessageReceived_9BDC650D40F23A862C9362A7554D4329) == 0x000010, "Wrong size on PlayerStateJP_MatchBP_C_OnMessageReceived_9BDC650D40F23A862C9362A7554D4329");
static_assert(offsetof(PlayerStateJP_MatchBP_C_OnMessageReceived_9BDC650D40F23A862C9362A7554D4329, ProxyObject) == 0x000000, "Member 'PlayerStateJP_MatchBP_C_OnMessageReceived_9BDC650D40F23A862C9362A7554D4329::ProxyObject' has a wrong offset!");
static_assert(offsetof(PlayerStateJP_MatchBP_C_OnMessageReceived_9BDC650D40F23A862C9362A7554D4329, ActualChannel) == 0x000008, "Member 'PlayerStateJP_MatchBP_C_OnMessageReceived_9BDC650D40F23A862C9362A7554D4329::ActualChannel' has a wrong offset!");

// Function PlayerStateJP_MatchBP.PlayerStateJP_MatchBP_C.OnObjectiveFinished_Event
// 0x0010 (0x0010 - 0x0000)
struct PlayerStateJP_MatchBP_C_OnObjectiveFinished_Event final
{
public:
	struct FObjectiveAndOwningPlayer              ObjectiveDefinition;                               // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(PlayerStateJP_MatchBP_C_OnObjectiveFinished_Event) == 0x000008, "Wrong alignment on PlayerStateJP_MatchBP_C_OnObjectiveFinished_Event");
static_assert(sizeof(PlayerStateJP_MatchBP_C_OnObjectiveFinished_Event) == 0x000010, "Wrong size on PlayerStateJP_MatchBP_C_OnObjectiveFinished_Event");
static_assert(offsetof(PlayerStateJP_MatchBP_C_OnObjectiveFinished_Event, ObjectiveDefinition) == 0x000000, "Member 'PlayerStateJP_MatchBP_C_OnObjectiveFinished_Event::ObjectiveDefinition' has a wrong offset!");

// Function PlayerStateJP_MatchBP.PlayerStateJP_MatchBP_C.OnRep_Speaking
// 0x0018 (0x0018 - 0x0000)
struct PlayerStateJP_MatchBP_C_OnRep_Speaking final
{
public:
	class APawn*                                  CallFunc_GetPawn_ReturnValue;                      // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_ResidentCharacter_C*                K2Node_DynamicCast_AsBP_Resident_Character;        // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PlayerStateJP_MatchBP_C_OnRep_Speaking) == 0x000008, "Wrong alignment on PlayerStateJP_MatchBP_C_OnRep_Speaking");
static_assert(sizeof(PlayerStateJP_MatchBP_C_OnRep_Speaking) == 0x000018, "Wrong size on PlayerStateJP_MatchBP_C_OnRep_Speaking");
static_assert(offsetof(PlayerStateJP_MatchBP_C_OnRep_Speaking, CallFunc_GetPawn_ReturnValue) == 0x000000, "Member 'PlayerStateJP_MatchBP_C_OnRep_Speaking::CallFunc_GetPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerStateJP_MatchBP_C_OnRep_Speaking, K2Node_DynamicCast_AsBP_Resident_Character) == 0x000008, "Member 'PlayerStateJP_MatchBP_C_OnRep_Speaking::K2Node_DynamicCast_AsBP_Resident_Character' has a wrong offset!");
static_assert(offsetof(PlayerStateJP_MatchBP_C_OnRep_Speaking, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'PlayerStateJP_MatchBP_C_OnRep_Speaking::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(PlayerStateJP_MatchBP_C_OnRep_Speaking, CallFunc_IsValid_ReturnValue) == 0x000011, "Member 'PlayerStateJP_MatchBP_C_OnRep_Speaking::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function PlayerStateJP_MatchBP.PlayerStateJP_MatchBP_C.OnSecondNightChange
// 0x0001 (0x0001 - 0x0000)
struct PlayerStateJP_MatchBP_C_OnSecondNightChange final
{
public:
	E_TimeOfDay                                   TimeOfDay;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PlayerStateJP_MatchBP_C_OnSecondNightChange) == 0x000001, "Wrong alignment on PlayerStateJP_MatchBP_C_OnSecondNightChange");
static_assert(sizeof(PlayerStateJP_MatchBP_C_OnSecondNightChange) == 0x000001, "Wrong size on PlayerStateJP_MatchBP_C_OnSecondNightChange");
static_assert(offsetof(PlayerStateJP_MatchBP_C_OnSecondNightChange, TimeOfDay) == 0x000000, "Member 'PlayerStateJP_MatchBP_C_OnSecondNightChange::TimeOfDay' has a wrong offset!");

// Function PlayerStateJP_MatchBP.PlayerStateJP_MatchBP_C.Server_SetSpeaking
// 0x0001 (0x0001 - 0x0000)
struct PlayerStateJP_MatchBP_C_Server_SetSpeaking final
{
public:
	bool                                          New_Speaking_State;                                // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PlayerStateJP_MatchBP_C_Server_SetSpeaking) == 0x000001, "Wrong alignment on PlayerStateJP_MatchBP_C_Server_SetSpeaking");
static_assert(sizeof(PlayerStateJP_MatchBP_C_Server_SetSpeaking) == 0x000001, "Wrong size on PlayerStateJP_MatchBP_C_Server_SetSpeaking");
static_assert(offsetof(PlayerStateJP_MatchBP_C_Server_SetSpeaking, New_Speaking_State) == 0x000000, "Member 'PlayerStateJP_MatchBP_C_Server_SetSpeaking::New_Speaking_State' has a wrong offset!");

// Function PlayerStateJP_MatchBP.PlayerStateJP_MatchBP_C.Server_SetSurrendering
// 0x0001 (0x0001 - 0x0000)
struct PlayerStateJP_MatchBP_C_Server_SetSurrendering final
{
public:
	bool                                          NewSurrenderState;                                 // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PlayerStateJP_MatchBP_C_Server_SetSurrendering) == 0x000001, "Wrong alignment on PlayerStateJP_MatchBP_C_Server_SetSurrendering");
static_assert(sizeof(PlayerStateJP_MatchBP_C_Server_SetSurrendering) == 0x000001, "Wrong size on PlayerStateJP_MatchBP_C_Server_SetSurrendering");
static_assert(offsetof(PlayerStateJP_MatchBP_C_Server_SetSurrendering, NewSurrenderState) == 0x000000, "Member 'PlayerStateJP_MatchBP_C_Server_SetSurrendering::NewSurrenderState' has a wrong offset!");

// Function PlayerStateJP_MatchBP.PlayerStateJP_MatchBP_C.SetVoiceActor
// 0x0008 (0x0008 - 0x0000)
struct PlayerStateJP_MatchBP_C_SetVoiceActor final
{
public:
	class ABP_PlayerVoiceChatActorJP_C*           VoiceActor_0;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PlayerStateJP_MatchBP_C_SetVoiceActor) == 0x000008, "Wrong alignment on PlayerStateJP_MatchBP_C_SetVoiceActor");
static_assert(sizeof(PlayerStateJP_MatchBP_C_SetVoiceActor) == 0x000008, "Wrong size on PlayerStateJP_MatchBP_C_SetVoiceActor");
static_assert(offsetof(PlayerStateJP_MatchBP_C_SetVoiceActor, VoiceActor_0) == 0x000000, "Member 'PlayerStateJP_MatchBP_C_SetVoiceActor::VoiceActor_0' has a wrong offset!");

// Function PlayerStateJP_MatchBP.PlayerStateJP_MatchBP_C.VisibleAtDayTimeEvent
// 0x0001 (0x0001 - 0x0000)
struct PlayerStateJP_MatchBP_C_VisibleAtDayTimeEvent final
{
public:
	E_TimeOfDay                                   TimeOfDay;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PlayerStateJP_MatchBP_C_VisibleAtDayTimeEvent) == 0x000001, "Wrong alignment on PlayerStateJP_MatchBP_C_VisibleAtDayTimeEvent");
static_assert(sizeof(PlayerStateJP_MatchBP_C_VisibleAtDayTimeEvent) == 0x000001, "Wrong size on PlayerStateJP_MatchBP_C_VisibleAtDayTimeEvent");
static_assert(offsetof(PlayerStateJP_MatchBP_C_VisibleAtDayTimeEvent, TimeOfDay) == 0x000000, "Member 'PlayerStateJP_MatchBP_C_VisibleAtDayTimeEvent::TimeOfDay' has a wrong offset!");

// Function PlayerStateJP_MatchBP.PlayerStateJP_MatchBP_C.VoiceActorSet__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct PlayerStateJP_MatchBP_C_VoiceActorSet__DelegateSignature final
{
public:
	class ABP_PlayerVoiceChatActorJP_C*           VoiceActor_0;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PlayerStateJP_MatchBP_C_VoiceActorSet__DelegateSignature) == 0x000008, "Wrong alignment on PlayerStateJP_MatchBP_C_VoiceActorSet__DelegateSignature");
static_assert(sizeof(PlayerStateJP_MatchBP_C_VoiceActorSet__DelegateSignature) == 0x000008, "Wrong size on PlayerStateJP_MatchBP_C_VoiceActorSet__DelegateSignature");
static_assert(offsetof(PlayerStateJP_MatchBP_C_VoiceActorSet__DelegateSignature, VoiceActor_0) == 0x000000, "Member 'PlayerStateJP_MatchBP_C_VoiceActorSet__DelegateSignature::VoiceActor_0' has a wrong offset!");

// Function PlayerStateJP_MatchBP.PlayerStateJP_MatchBP_C.GetPerkManagerComponent
// 0x0008 (0x0008 - 0x0000)
struct PlayerStateJP_MatchBP_C_GetPerkManagerComponent final
{
public:
	class UPerkManagerComponent*                  ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PlayerStateJP_MatchBP_C_GetPerkManagerComponent) == 0x000008, "Wrong alignment on PlayerStateJP_MatchBP_C_GetPerkManagerComponent");
static_assert(sizeof(PlayerStateJP_MatchBP_C_GetPerkManagerComponent) == 0x000008, "Wrong size on PlayerStateJP_MatchBP_C_GetPerkManagerComponent");
static_assert(offsetof(PlayerStateJP_MatchBP_C_GetPerkManagerComponent, ReturnValue) == 0x000000, "Member 'PlayerStateJP_MatchBP_C_GetPerkManagerComponent::ReturnValue' has a wrong offset!");

}

