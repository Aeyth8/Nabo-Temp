#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WI_POI

#include "Basic.hpp"

#include "WI_POI_classes.hpp"
#include "WI_POI_parameters.hpp"


namespace SDK
{

// Function WI_POI.WI_POI_C.ExecuteUbergraph_WI_POI
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWI_POI_C::ExecuteUbergraph_WI_POI(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WI_POI_C", "ExecuteUbergraph_WI_POI");

	Params::WI_POI_C_ExecuteUbergraph_WI_POI Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WI_POI.WI_POI_C.Set Image And Text
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UTexture2D*                       Image                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class FText                             Description                                            (BlueprintVisible, BlueprintReadOnly, Parm)
// struct FLinearColor                     ColorImage                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FLinearColor                     ColorText                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWI_POI_C::Set_Image_And_Text(class UTexture2D* Image, const class FText& Description, const struct FLinearColor& ColorImage, const struct FLinearColor& ColorText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WI_POI_C", "Set Image And Text");

	Params::WI_POI_C_Set_Image_And_Text Parms{};

	Parms.Image = Image;
	Parms.Description = std::move(Description);
	Parms.ColorImage = std::move(ColorImage);
	Parms.ColorText = std::move(ColorText);

	UObject::ProcessEvent(Func, &Parms);
}

}

