#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GA_MontageEmote

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "GASIW_classes.hpp"
#include "JP_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass GA_MontageEmote.GA_MontageEmote_C
// 0x0120 (0x0580 - 0x0460)
#pragma pack(push, 0x1)
class alignas(0x10) UGA_MontageEmote_C : public UGameplayAbilityIW
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0460(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class ABP_3rdPersonCamera_C*                  TPPEmoteCamera;                                    // 0x0468(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class FText                                   Name_0;                                            // 0x0470(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	class UAnimMontage*                           Montage;                                           // 0x0480(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	FMulticastInlineDelegateProperty_             On_FinishMontage;                                  // 0x0488(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	bool                                          EndAfterMontage;                                   // 0x0498(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_499[0x7];                                      // 0x0499(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        TimeAfterEndMontage;                               // 0x04A0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           MontageEmoteFPP;                                   // 0x04A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           MontageEmoteTPP;                                   // 0x04B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	TMap<ECharacterSize, TSoftObjectPtr<class UAnimMontage>> MontageEmotesFromSize;                             // 0x04B8(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	bool                                          GetMontageFromSize;                                // 0x0508(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_509[0x7];                                      // 0x0509(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<ECharacterName, TSoftObjectPtr<class UAnimMontage>> MontageEmotesFromNames;                            // 0x0510(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	bool                                          Stop_Montage_when_Ability_Ends;                    // 0x0560(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_561[0x3];                                      // 0x0561(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   Montage_Start_Section;                             // 0x0564(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MontagePlayRate;                                   // 0x056C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bThirdperson;                                      // 0x0570(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bZeroOutPitch;                                     // 0x0571(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bDisableMoveInput;                                 // 0x0572(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bDisableLookInput;                                 // 0x0573(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          UnequipHeldItem;                                   // 0x0574(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void EventReceived_59DEE0204B754F6D2A3E7E9C2C8C8968(const struct FGameplayTag& EventTag, const struct FGameplayEventData& EventData);
	void EventReceived_F22B7CC8484BC23E2BEE24A1235DA5DE(const struct FGameplayTag& EventTag, const struct FGameplayEventData& EventData);
	void ExecuteUbergraph_GA_MontageEmote(int32 EntryPoint);
	void GetCharacterName(ECharacterName* CharacterName);
	void GetCharacterSize(ECharacterSize* CharacterSize);
	void GetEmoteCamera(class ABP_3rdPersonCamera_C** EmoteCamera);
	void K2_ActivateAbility();
	void K2_OnEndAbility(bool bWasCancelled);
	void On_FinishMontage__DelegateSignature();
	void OnBlendOut_59DEE0204B754F6D2A3E7E9C2C8C8968(const struct FGameplayTag& EventTag, const struct FGameplayEventData& EventData);
	void OnBlendOut_F22B7CC8484BC23E2BEE24A1235DA5DE(const struct FGameplayTag& EventTag, const struct FGameplayEventData& EventData);
	void OnCancelled_59DEE0204B754F6D2A3E7E9C2C8C8968(const struct FGameplayTag& EventTag, const struct FGameplayEventData& EventData);
	void OnCancelled_F22B7CC8484BC23E2BEE24A1235DA5DE(const struct FGameplayTag& EventTag, const struct FGameplayEventData& EventData);
	void OnCompleted_59DEE0204B754F6D2A3E7E9C2C8C8968(const struct FGameplayTag& EventTag, const struct FGameplayEventData& EventData);
	void OnCompleted_F22B7CC8484BC23E2BEE24A1235DA5DE(const struct FGameplayTag& EventTag, const struct FGameplayEventData& EventData);
	void OnFinish_963B36284AD363EE9F66FB8E6EB3FFA5();
	void OnInterrupted_59DEE0204B754F6D2A3E7E9C2C8C8968(const struct FGameplayTag& EventTag, const struct FGameplayEventData& EventData);
	void OnInterrupted_F22B7CC8484BC23E2BEE24A1235DA5DE(const struct FGameplayTag& EventTag, const struct FGameplayEventData& EventData);
	void Owner_Return_View();
	void SetMontage(class UAnimMontage** Montage_0);
	void SetViewToEmoteCamera(bool Enabled);
	void Start_End_Timer();
	void Transition(class ABP_3rdPersonCamera_C* EmoteCamera, class APlayerController* PlayerController);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"GA_MontageEmote_C">();
	}
	static class UGA_MontageEmote_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGA_MontageEmote_C>();
	}
};
#pragma pack(pop)
static_assert(alignof(UGA_MontageEmote_C) == 0x000010, "Wrong alignment on UGA_MontageEmote_C");
static_assert(sizeof(UGA_MontageEmote_C) == 0x000580, "Wrong size on UGA_MontageEmote_C");
static_assert(offsetof(UGA_MontageEmote_C, UberGraphFrame) == 0x000460, "Member 'UGA_MontageEmote_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UGA_MontageEmote_C, TPPEmoteCamera) == 0x000468, "Member 'UGA_MontageEmote_C::TPPEmoteCamera' has a wrong offset!");
static_assert(offsetof(UGA_MontageEmote_C, Name_0) == 0x000470, "Member 'UGA_MontageEmote_C::Name_0' has a wrong offset!");
static_assert(offsetof(UGA_MontageEmote_C, Montage) == 0x000480, "Member 'UGA_MontageEmote_C::Montage' has a wrong offset!");
static_assert(offsetof(UGA_MontageEmote_C, On_FinishMontage) == 0x000488, "Member 'UGA_MontageEmote_C::On_FinishMontage' has a wrong offset!");
static_assert(offsetof(UGA_MontageEmote_C, EndAfterMontage) == 0x000498, "Member 'UGA_MontageEmote_C::EndAfterMontage' has a wrong offset!");
static_assert(offsetof(UGA_MontageEmote_C, TimeAfterEndMontage) == 0x0004A0, "Member 'UGA_MontageEmote_C::TimeAfterEndMontage' has a wrong offset!");
static_assert(offsetof(UGA_MontageEmote_C, MontageEmoteFPP) == 0x0004A8, "Member 'UGA_MontageEmote_C::MontageEmoteFPP' has a wrong offset!");
static_assert(offsetof(UGA_MontageEmote_C, MontageEmoteTPP) == 0x0004B0, "Member 'UGA_MontageEmote_C::MontageEmoteTPP' has a wrong offset!");
static_assert(offsetof(UGA_MontageEmote_C, MontageEmotesFromSize) == 0x0004B8, "Member 'UGA_MontageEmote_C::MontageEmotesFromSize' has a wrong offset!");
static_assert(offsetof(UGA_MontageEmote_C, GetMontageFromSize) == 0x000508, "Member 'UGA_MontageEmote_C::GetMontageFromSize' has a wrong offset!");
static_assert(offsetof(UGA_MontageEmote_C, MontageEmotesFromNames) == 0x000510, "Member 'UGA_MontageEmote_C::MontageEmotesFromNames' has a wrong offset!");
static_assert(offsetof(UGA_MontageEmote_C, Stop_Montage_when_Ability_Ends) == 0x000560, "Member 'UGA_MontageEmote_C::Stop_Montage_when_Ability_Ends' has a wrong offset!");
static_assert(offsetof(UGA_MontageEmote_C, Montage_Start_Section) == 0x000564, "Member 'UGA_MontageEmote_C::Montage_Start_Section' has a wrong offset!");
static_assert(offsetof(UGA_MontageEmote_C, MontagePlayRate) == 0x00056C, "Member 'UGA_MontageEmote_C::MontagePlayRate' has a wrong offset!");
static_assert(offsetof(UGA_MontageEmote_C, bThirdperson) == 0x000570, "Member 'UGA_MontageEmote_C::bThirdperson' has a wrong offset!");
static_assert(offsetof(UGA_MontageEmote_C, bZeroOutPitch) == 0x000571, "Member 'UGA_MontageEmote_C::bZeroOutPitch' has a wrong offset!");
static_assert(offsetof(UGA_MontageEmote_C, bDisableMoveInput) == 0x000572, "Member 'UGA_MontageEmote_C::bDisableMoveInput' has a wrong offset!");
static_assert(offsetof(UGA_MontageEmote_C, bDisableLookInput) == 0x000573, "Member 'UGA_MontageEmote_C::bDisableLookInput' has a wrong offset!");
static_assert(offsetof(UGA_MontageEmote_C, UnequipHeldItem) == 0x000574, "Member 'UGA_MontageEmote_C::UnequipHeldItem' has a wrong offset!");

}

