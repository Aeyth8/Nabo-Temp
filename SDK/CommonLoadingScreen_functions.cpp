#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: CommonLoadingScreen

#include "Basic.hpp"

#include "CommonLoadingScreen_classes.hpp"
#include "CommonLoadingScreen_parameters.hpp"


namespace SDK
{

// Function CommonLoadingScreen.LoadingScreenWidgetHandler.UpdateBackground
// (Event, Public, BlueprintEvent)
// Parameters:
// class UTexture2D*                       Texture                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ILoadingScreenWidgetHandler::UpdateBackground(class UTexture2D* Texture)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LoadingScreenWidgetHandler", "UpdateBackground");

	Params::LoadingScreenWidgetHandler_UpdateBackground Parms{};

	Parms.Texture = Texture;

	UObject::ProcessEvent(Func, &Parms);
}


// Function CommonLoadingScreen.LoadingScreenWidgetHandler.UpdateBackgroundRemoved
// (Event, Public, BlueprintEvent)

void ILoadingScreenWidgetHandler::UpdateBackgroundRemoved()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LoadingScreenWidgetHandler", "UpdateBackgroundRemoved");

	UObject::ProcessEvent(Func, nullptr);
}


// Function CommonLoadingScreen.LoadingScreenWidgetHandler.UpdateMessage
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// class FText                             Message                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void ILoadingScreenWidgetHandler::UpdateMessage(const class FText& Message)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LoadingScreenWidgetHandler", "UpdateMessage");

	Params::LoadingScreenWidgetHandler_UpdateMessage Parms{};

	Parms.Message = std::move(Message);

	UObject::ProcessEvent(Func, &Parms);
}


// Function CommonLoadingScreen.LoadingScreenWidgetHandler.UpdateSound
// (Event, Public, BlueprintEvent)
// Parameters:
// class USoundBase*                       Sound                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    StopMenuMusic                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ILoadingScreenWidgetHandler::UpdateSound(class USoundBase* Sound, bool StopMenuMusic)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LoadingScreenWidgetHandler", "UpdateSound");

	Params::LoadingScreenWidgetHandler_UpdateSound Parms{};

	Parms.Sound = Sound;
	Parms.StopMenuMusic = StopMenuMusic;

	UObject::ProcessEvent(Func, &Parms);
}


// Function CommonLoadingScreen.LoadingScreenWidgetHandler.UpdateSoundLoadingScreenHidden
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    StartMenuMusic                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ILoadingScreenWidgetHandler::UpdateSoundLoadingScreenHidden(bool StartMenuMusic)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LoadingScreenWidgetHandler", "UpdateSoundLoadingScreenHidden");

	Params::LoadingScreenWidgetHandler_UpdateSoundLoadingScreenHidden Parms{};

	Parms.StartMenuMusic = StartMenuMusic;

	UObject::ProcessEvent(Func, &Parms);
}


// Function CommonLoadingScreen.LoadingScreenManager.BlockLoadingScreen
// (Final, Native, Public, BlueprintCallable)

void ULoadingScreenManager::BlockLoadingScreen()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LoadingScreenManager", "BlockLoadingScreen");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function CommonLoadingScreen.LoadingScreenManager.EnableShowingLoadingScreens
// (Final, Native, Public, BlueprintCallable)

void ULoadingScreenManager::EnableShowingLoadingScreens()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LoadingScreenManager", "EnableShowingLoadingScreens");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function CommonLoadingScreen.LoadingScreenManager.GetDebugReasonForShowingOrHidingLoadingScreen
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString ULoadingScreenManager::GetDebugReasonForShowingOrHidingLoadingScreen() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LoadingScreenManager", "GetDebugReasonForShowingOrHidingLoadingScreen");

	Params::LoadingScreenManager_GetDebugReasonForShowingOrHidingLoadingScreen Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function CommonLoadingScreen.LoadingProcessTask.CreateLoadingScreenProcessTask
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ShowLoadingScreenReason                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class ULoadingProcessTask*              ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class ULoadingProcessTask* ULoadingProcessTask::CreateLoadingScreenProcessTask(class UObject* WorldContextObject, const class FString& ShowLoadingScreenReason)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LoadingProcessTask", "CreateLoadingScreenProcessTask");

	Params::LoadingProcessTask_CreateLoadingScreenProcessTask Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.ShowLoadingScreenReason = std::move(ShowLoadingScreenReason);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function CommonLoadingScreen.LoadingProcessTask.SetShowLoadingScreenReason
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                           InReason                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ULoadingProcessTask::SetShowLoadingScreenReason(const class FString& InReason)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LoadingProcessTask", "SetShowLoadingScreenReason");

	Params::LoadingProcessTask_SetShowLoadingScreenReason Parms{};

	Parms.InReason = std::move(InReason);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function CommonLoadingScreen.LoadingProcessTask.Unregister
// (Final, Native, Public, BlueprintCallable)

void ULoadingProcessTask::Unregister()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LoadingProcessTask", "Unregister");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}

}

