#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_TutorialManager

#include "Basic.hpp"

#include "BP_TutorialManager_classes.hpp"
#include "BP_TutorialManager_parameters.hpp"


namespace SDK
{

// Function BP_TutorialManager.BP_TutorialManager_C.ApplyIncreasedStaminaRegenGE
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_TutorialManager_C::ApplyIncreasedStaminaRegenGE()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TutorialManager_C", "ApplyIncreasedStaminaRegenGE");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_TutorialManager.BP_TutorialManager_C.CheatToNextTask
// (BlueprintCallable, BlueprintEvent)

void ABP_TutorialManager_C::CheatToNextTask()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TutorialManager_C", "CheatToNextTask");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_TutorialManager.BP_TutorialManager_C.ExecuteUbergraph_BP_TutorialManager
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_TutorialManager_C::ExecuteUbergraph_BP_TutorialManager(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TutorialManager_C", "ExecuteUbergraph_BP_TutorialManager");

	Params::BP_TutorialManager_C_ExecuteUbergraph_BP_TutorialManager Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_TutorialManager.BP_TutorialManager_C.Get SODClass
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UObjectiveDefinition*             Self2                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// int32                                   Index_0                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UClass*                           SODClass                                               (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_TutorialManager_C::Get_SODClass(class UObjectiveDefinition* Self2, int32 Index_0, class UClass** SODClass)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TutorialManager_C", "Get SODClass");

	Params::BP_TutorialManager_C_Get_SODClass Parms{};

	Parms.Self2 = Self2;
	Parms.Index_0 = Index_0;

	UObject::ProcessEvent(Func, &Parms);

	if (SODClass != nullptr)
		*SODClass = Parms.SODClass;
}


// Function BP_TutorialManager.BP_TutorialManager_C.GetNextObjectiveDefinition
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// TArray<class UObjectiveDefinition*>     ObjectiveList                                          (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
// class UClass*                           CurrentSOD                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    FoundNext                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObjectiveDefinition*             NextObjectiveDefinition                                (Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class UClass*                           NextSODClass                                           (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_TutorialManager_C::GetNextObjectiveDefinition(TArray<class UObjectiveDefinition*>& ObjectiveList, class UClass* CurrentSOD, bool* FoundNext, class UObjectiveDefinition** NextObjectiveDefinition, class UClass** NextSODClass)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TutorialManager_C", "GetNextObjectiveDefinition");

	Params::BP_TutorialManager_C_GetNextObjectiveDefinition Parms{};

	Parms.ObjectiveList = std::move(ObjectiveList);
	Parms.CurrentSOD = CurrentSOD;

	UObject::ProcessEvent(Func, &Parms);

	ObjectiveList = std::move(Parms.ObjectiveList);

	if (FoundNext != nullptr)
		*FoundNext = Parms.FoundNext;

	if (NextObjectiveDefinition != nullptr)
		*NextObjectiveDefinition = Parms.NextObjectiveDefinition;

	if (NextSODClass != nullptr)
		*NextSODClass = Parms.NextSODClass;
}


// Function BP_TutorialManager.BP_TutorialManager_C.GetObjectiveDefinitionIndex
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UClass*                           InputPin                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// TArray<class UObjectiveDefinition*>     ObjectiveList                                          (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
// bool                                    FoundMatchingObjectiveDefinition                       (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Index_0                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_TutorialManager_C::GetObjectiveDefinitionIndex(class UClass* InputPin, TArray<class UObjectiveDefinition*>& ObjectiveList, bool* FoundMatchingObjectiveDefinition, int32* Index_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TutorialManager_C", "GetObjectiveDefinitionIndex");

	Params::BP_TutorialManager_C_GetObjectiveDefinitionIndex Parms{};

	Parms.InputPin = InputPin;
	Parms.ObjectiveList = std::move(ObjectiveList);

	UObject::ProcessEvent(Func, &Parms);

	ObjectiveList = std::move(Parms.ObjectiveList);

	if (FoundMatchingObjectiveDefinition != nullptr)
		*FoundMatchingObjectiveDefinition = Parms.FoundMatchingObjectiveDefinition;

	if (Index_0 != nullptr)
		*Index_0 = Parms.Index_0;
}


// Function BP_TutorialManager.BP_TutorialManager_C.GrantStartingMoneyToPlayer
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_TutorialManager_C::GrantStartingMoneyToPlayer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TutorialManager_C", "GrantStartingMoneyToPlayer");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_TutorialManager.BP_TutorialManager_C.LogMessage
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FText                             TextToLog                                              (BlueprintVisible, BlueprintReadOnly, Parm)

void ABP_TutorialManager_C::LogMessage(const class FText& TextToLog)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TutorialManager_C", "LogMessage");

	Params::BP_TutorialManager_C_LogMessage Parms{};

	Parms.TextToLog = std::move(TextToLog);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_TutorialManager.BP_TutorialManager_C.Money Changed
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  Current_Money                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_TutorialManager_C::Money_Changed(double Current_Money)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TutorialManager_C", "Money Changed");

	Params::BP_TutorialManager_C_Money_Changed Parms{};

	Parms.Current_Money = Current_Money;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_TutorialManager.BP_TutorialManager_C.On Tutorial Started
// (BlueprintCallable, BlueprintEvent)

void ABP_TutorialManager_C::On_Tutorial_Started()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TutorialManager_C", "On Tutorial Started");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_TutorialManager.BP_TutorialManager_C.OnMessageReceived_4B40F83A49AA0255C15F4EAC634F24B9
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UAsyncAction_ListenForGameplayMessage*ProxyObject                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// struct FGameplayTag                     ActualChannel                                          (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)

void ABP_TutorialManager_C::OnMessageReceived_4B40F83A49AA0255C15F4EAC634F24B9(class UAsyncAction_ListenForGameplayMessage* ProxyObject, const struct FGameplayTag& ActualChannel)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TutorialManager_C", "OnMessageReceived_4B40F83A49AA0255C15F4EAC634F24B9");

	Params::BP_TutorialManager_C_OnMessageReceived_4B40F83A49AA0255C15F4EAC634F24B9 Parms{};

	Parms.ProxyObject = ProxyObject;
	Parms.ActualChannel = std::move(ActualChannel);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_TutorialManager.BP_TutorialManager_C.OnMessageReceived_586FE5F747308E905B78E08E6108A3F6
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UAsyncAction_ListenForGameplayMessage*ProxyObject                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// struct FGameplayTag                     ActualChannel                                          (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)

void ABP_TutorialManager_C::OnMessageReceived_586FE5F747308E905B78E08E6108A3F6(class UAsyncAction_ListenForGameplayMessage* ProxyObject, const struct FGameplayTag& ActualChannel)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TutorialManager_C", "OnMessageReceived_586FE5F747308E905B78E08E6108A3F6");

	Params::BP_TutorialManager_C_OnMessageReceived_586FE5F747308E905B78E08E6108A3F6 Parms{};

	Parms.ProxyObject = ProxyObject;
	Parms.ActualChannel = std::move(ActualChannel);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_TutorialManager.BP_TutorialManager_C.OnPlayerDeath
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class ACharacter*                       Character                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_TutorialManager_C::OnPlayerDeath(class ACharacter* Character)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TutorialManager_C", "OnPlayerDeath");

	Params::BP_TutorialManager_C_OnPlayerDeath Parms{};

	Parms.Character = Character;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_TutorialManager.BP_TutorialManager_C.OnPlayerRespawn
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class ACharacter*                       Character                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_TutorialManager_C::OnPlayerRespawn(class ACharacter* Character)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TutorialManager_C", "OnPlayerRespawn");

	Params::BP_TutorialManager_C_OnPlayerRespawn Parms{};

	Parms.Character = Character;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_TutorialManager.BP_TutorialManager_C.OnPlayerSpawn
// (BlueprintCallable, BlueprintEvent)

void ABP_TutorialManager_C::OnPlayerSpawn()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TutorialManager_C", "OnPlayerSpawn");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_TutorialManager.BP_TutorialManager_C.OpenTaskInfo
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UClass*                           TaskInfoToOpen                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_TutorialManager_C::OpenTaskInfo(class UClass* TaskInfoToOpen)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TutorialManager_C", "OpenTaskInfo");

	Params::BP_TutorialManager_C_OpenTaskInfo Parms{};

	Parms.TaskInfoToOpen = TaskInfoToOpen;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_TutorialManager.BP_TutorialManager_C.PlayerPawnChanged
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class APawn*                            OldPawn                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class APawn*                            NewPawn                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_TutorialManager_C::PlayerPawnChanged(class APawn* OldPawn, class APawn* NewPawn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TutorialManager_C", "PlayerPawnChanged");

	Params::BP_TutorialManager_C_PlayerPawnChanged Parms{};

	Parms.OldPawn = OldPawn;
	Parms.NewPawn = NewPawn;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_TutorialManager.BP_TutorialManager_C.PreTutorialSequenceStart__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)

void ABP_TutorialManager_C::PreTutorialSequenceStart__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TutorialManager_C", "PreTutorialSequenceStart__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_TutorialManager.BP_TutorialManager_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ABP_TutorialManager_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TutorialManager_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_TutorialManager.BP_TutorialManager_C.ResetMinimumMoney
// (BlueprintCallable, BlueprintEvent)

void ABP_TutorialManager_C::ResetMinimumMoney()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TutorialManager_C", "ResetMinimumMoney");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_TutorialManager.BP_TutorialManager_C.SetMinimumMoney
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  NewMinimum                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_TutorialManager_C::SetMinimumMoney(double NewMinimum)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TutorialManager_C", "SetMinimumMoney");

	Params::BP_TutorialManager_C_SetMinimumMoney Parms{};

	Parms.NewMinimum = NewMinimum;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_TutorialManager.BP_TutorialManager_C.SetShopItemsState
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    NewState                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_TutorialManager_C::SetShopItemsState(bool NewState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TutorialManager_C", "SetShopItemsState");

	Params::BP_TutorialManager_C_SetShopItemsState Parms{};

	Parms.NewState = NewState;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_TutorialManager.BP_TutorialManager_C.SetShopUpgradeState
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    NewState                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_TutorialManager_C::SetShopUpgradeState(bool NewState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TutorialManager_C", "SetShopUpgradeState");

	Params::BP_TutorialManager_C_SetShopUpgradeState Parms{};

	Parms.NewState = NewState;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_TutorialManager.BP_TutorialManager_C.SpawnObjectiveWithDelay
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObjectiveDefinition*             ObjectiveDefinition                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class UClass*                           TargetSOD                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// double                                  Delay                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_TutorialManager_C::SpawnObjectiveWithDelay(class UObjectiveDefinition* ObjectiveDefinition, class UClass* TargetSOD, double Delay)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TutorialManager_C", "SpawnObjectiveWithDelay");

	Params::BP_TutorialManager_C_SpawnObjectiveWithDelay Parms{};

	Parms.ObjectiveDefinition = ObjectiveDefinition;
	Parms.TargetSOD = TargetSOD;
	Parms.Delay = Delay;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_TutorialManager.BP_TutorialManager_C.StartTutorialTask
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UClass*                           TaskToStart                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_TutorialManager_C::StartTutorialTask(class UClass* TaskToStart)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TutorialManager_C", "StartTutorialTask");

	Params::BP_TutorialManager_C_StartTutorialTask Parms{};

	Parms.TaskToStart = TaskToStart;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_TutorialManager.BP_TutorialManager_C.TutorialEnd
// (BlueprintCallable, BlueprintEvent)

void ABP_TutorialManager_C::TutorialEnd()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TutorialManager_C", "TutorialEnd");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_TutorialManager.BP_TutorialManager_C.TutorialEnded__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)

void ABP_TutorialManager_C::TutorialEnded__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TutorialManager_C", "TutorialEnded__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_TutorialManager.BP_TutorialManager_C.TutorialIntroSequenceEnded
// (BlueprintCallable, BlueprintEvent)

void ABP_TutorialManager_C::TutorialIntroSequenceEnded()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TutorialManager_C", "TutorialIntroSequenceEnded");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_TutorialManager.BP_TutorialManager_C.TutorialStarted__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)

void ABP_TutorialManager_C::TutorialStarted__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TutorialManager_C", "TutorialStarted__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_TutorialManager.BP_TutorialManager_C.TutorialTaskCompleted
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UClass*                           TaskToValidate                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_TutorialManager_C::TutorialTaskCompleted(class UClass* TaskToValidate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TutorialManager_C", "TutorialTaskCompleted");

	Params::BP_TutorialManager_C_TutorialTaskCompleted Parms{};

	Parms.TaskToValidate = TaskToValidate;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_TutorialManager.BP_TutorialManager_C.UpgradeEnemeyFence
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_TutorialManager_C::UpgradeEnemeyFence()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TutorialManager_C", "UpgradeEnemeyFence");

	UObject::ProcessEvent(Func, nullptr);
}

}

