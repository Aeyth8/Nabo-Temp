#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ABP_Leloi

#include "Basic.hpp"

#include "ABP_Leloi_structs.hpp"
#include "ELeloiStates_structs.hpp"
#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "AnimGraphRuntime_structs.hpp"
#include "E_LeloiStates_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "ELeloiIdleStates_structs.hpp"
#include "ControlRig_structs.hpp"


namespace SDK
{

// AnimBlueprintGeneratedClass ABP_Leloi.ABP_Leloi_C
// 0x2910 (0x2C80 - 0x0370)
class UABP_Leloi_C final : public UAnimInstance
{
public:
	uint8                                         Pad_368[0x8];                                      // 0x0368(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0370(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct ABP_Leloi::FAnimBlueprintGeneratedMutableData __AnimBlueprintMutables;                           // 0x0378(0x0010)(HasGetValueTypeHash)
	struct FAnimSubsystemInstance                 AnimBlueprintExtension_PropertyAccess;             // 0x0388(0x0008)()
	struct FAnimSubsystemInstance                 AnimBlueprintExtension_Base;                       // 0x0390(0x0008)()
	struct FAnimNode_Root                         AnimGraphNode_Root_1;                              // 0x0398(0x0020)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_25;                 // 0x03B8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_24;                 // 0x03E0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_23;                 // 0x0408(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_22;                 // 0x0430(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_21;                 // 0x0458(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_20;                 // 0x0480(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_19;                 // 0x04A8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_18;                 // 0x04D0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_17;                 // 0x04F8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_16;                 // 0x0520(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_15;                 // 0x0548(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_14;                 // 0x0570(0x0028)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_11;                   // 0x0598(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_11;                      // 0x05E0(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_10;                   // 0x0600(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_10;                      // 0x0648(0x0020)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer;                    // 0x0668(0x0070)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_9;                       // 0x06D8(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_9;                    // 0x06F8(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_8;                       // 0x0740(0x0020)()
	struct FAnimNode_RandomPlayer                 AnimGraphNode_RandomPlayer;                        // 0x0760(0x0078)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_7;                       // 0x07D8(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_8;                    // 0x07F8(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_6;                       // 0x0840(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_7;                    // 0x0860(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_5;                       // 0x08A8(0x0020)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine_1;                      // 0x08C8(0x00C8)()
	struct FAnimNode_Inertialization              AnimGraphNode_Inertialization;                     // 0x0990(0x0440)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose_4;                    // 0x0DD0(0x0080)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_13;                 // 0x0E50(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_12;                 // 0x0E78(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_11;                 // 0x0EA0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_10;                 // 0x0EC8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_9;                  // 0x0EF0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_8;                  // 0x0F18(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_7;                  // 0x0F40(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_6;                  // 0x0F68(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_5;                  // 0x0F90(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_4;                  // 0x0FB8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_3;                  // 0x0FE0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_2;                  // 0x1008(0x0028)()
	struct FAnimNode_ApplyAdditive                AnimGraphNode_ApplyAdditive_1;                     // 0x1030(0x00C8)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_9;                     // 0x10F8(0x0028)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_6;                    // 0x1120(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_4;                       // 0x1168(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_5;                    // 0x1188(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_3;                       // 0x11D0(0x0020)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_1;                  // 0x11F0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult;                    // 0x1218(0x0028)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_4;                    // 0x1240(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_2;                       // 0x1288(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_3;                    // 0x12A8(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_1;                       // 0x12F0(0x0020)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_8;                     // 0x1310(0x0028)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult;                         // 0x1338(0x0020)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine;                        // 0x1358(0x00C8)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose_3;                    // 0x1420(0x0080)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_7;                     // 0x14A0(0x0028)()
	struct FAnimNode_Root                         AnimGraphNode_Root;                                // 0x14C8(0x0020)()
	struct FAnimNode_LayeredBoneBlend             AnimGraphNode_LayeredBoneBlend_3;                  // 0x14E8(0x00F0)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_2;                    // 0x15D8(0x0048)()
	struct FAnimNode_LayeredBoneBlend             AnimGraphNode_LayeredBoneBlend_2;                  // 0x1620(0x00F0)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_1;                    // 0x1710(0x0048)()
	uint8                                         Pad_1758[0x8];                                     // 0x1758(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAnimNode_LookAt                       AnimGraphNode_LookAt_2;                            // 0x1760(0x0250)()
	struct FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace_2;             // 0x19B0(0x0020)()
	struct FAnimNode_LayeredBoneBlend             AnimGraphNode_LayeredBoneBlend_1;                  // 0x19D0(0x00F0)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer;                      // 0x1AC0(0x0048)()
	struct FAnimNode_LinkedAnimLayer              AnimGraphNode_LinkedAnimLayer;                     // 0x1B08(0x00C8)()
	struct FAnimNode_ControlRig                   AnimGraphNode_ControlRig;                          // 0x1BD0(0x04D0)(ContainsInstancedReference)
	struct FAnimNode_Slot                         AnimGraphNode_Slot_1;                              // 0x20A0(0x0048)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool;                     // 0x20E8(0x0048)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose_2;                    // 0x2130(0x0080)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_6;                     // 0x21B0(0x0028)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_5;                     // 0x21D8(0x0028)()
	struct FAnimNode_LayeredBoneBlend             AnimGraphNode_LayeredBoneBlend;                    // 0x2200(0x00F0)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose_1;                    // 0x22F0(0x0080)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_4;                     // 0x2370(0x0028)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot;                                // 0x2398(0x0048)()
	struct FAnimNode_ApplyAdditive                AnimGraphNode_ApplyAdditive;                       // 0x23E0(0x00C8)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_3;                     // 0x24A8(0x0028)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose;                      // 0x24D0(0x0080)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_2;                     // 0x2550(0x0028)()
	uint8                                         Pad_2578[0x8];                                     // 0x2578(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAnimNode_LookAt                       AnimGraphNode_LookAt_1;                            // 0x2580(0x0250)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_1;                     // 0x27D0(0x0028)()
	struct FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace_1;             // 0x27F8(0x0020)()
	struct FAnimNode_BlendListByInt               AnimGraphNode_BlendListByInt;                      // 0x2818(0x0048)()
	struct FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_2;             // 0x2860(0x0020)()
	struct FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_1;             // 0x2880(0x0020)()
	struct FAnimNode_LookAt                       AnimGraphNode_LookAt;                              // 0x28A0(0x0250)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose;                       // 0x2AF0(0x0028)()
	struct FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace;               // 0x2B18(0x0020)()
	struct FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace;               // 0x2B38(0x0020)()
	class UPawnMovementComponent*                 K2Node_PropertyAccess_4;                           // 0x2B58(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_PropertyAccess_3;                           // 0x2B60(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_PropertyAccess_2;                           // 0x2B78(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMovementMode                                 K2Node_PropertyAccess_1;                           // 0x2B79(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2B7A[0x6];                                     // 0x2B7A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                K2Node_PropertyAccess;                             // 0x2B80(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        __CustomProperty_LeanAmount_20D58FD4425BA8E884C1BD9B9C5833F3; // 0x2B98(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                LookAtPos;                                         // 0x2BA0(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        LookAtAlpha;                                       // 0x2BB8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         BlinkAlpha;                                        // 0x2BC0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Sitting;                                           // 0x2BC4(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2BC5[0x3];                                     // 0x2BC5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Delta_Time_X;                                      // 0x2BC8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          In_View;                                           // 0x2BCC(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2BCD[0x3];                                     // 0x2BCD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         BreathingAlpha;                                    // 0x2BD0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         BarkingAlpha;                                      // 0x2BD4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_MovementCharacter_C*                PlayerRef;                                         // 0x2BD8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	ELeloiStates                                  State;                                             // 0x2BE0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ELeloiIdleStates                              Idle_State;                                        // 0x2BE1(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2BE2[0x6];                                     // 0x2BE2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_GuardDog_V2_C*                      As_BP_Guard_Dog;                                   // 0x2BE8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	double                                        Speed;                                             // 0x2BF0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               PreviousRotation;                                  // 0x2BF8(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	struct FRotator                               CurrentRotation;                                   // 0x2C10(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	double                                        LeanAmount;                                        // 0x2C28(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_Leloi_C*                            As_BP_Leloi;                                       // 0x2C30(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	E_LeloiStates                                 BehaviourStates;                                   // 0x2C38(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsJumping;                                        // 0x2C39(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsFalling;                                        // 0x2C3A(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C3B[0x5];                                     // 0x2C3B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                WorldVelocity;                                     // 0x2C40(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bInAir;                                            // 0x2C58(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bMoving;                                           // 0x2C59(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C5A[0x2];                                     // 0x2C5A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ActiveSitIdle;                                     // 0x2C5C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ControlRig_Alpha;                                  // 0x2C60(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         PetIndex;                                          // 0x2C64(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bBeingPet;                                         // 0x2C68(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C69[0x7];                                     // 0x2C69(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_MovementCharacter_C*                InteractablePlayerRef;                             // 0x2C70(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)

public:
	void AnimGraph(struct FPoseLink* AnimGraph_0);
	void AnimNotify_FootstepAnimNotify();
	void AnimNotify_StopBlinking();
	void base(struct FPoseLink* base_0);
	void BlueprintBeginPlay();
	void BlueprintInitializeAnimation();
	void BlueprintThreadSafeUpdateAnimation(float DeltaTime);
	void BlueprintUpdateAnimation(float DeltaTimeX);
	void Calc_Lean();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Leloi_AnimGraphNode_BlendListByBool_F7398A0F485F4E0C3C6BD280343D5204();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Leloi_AnimGraphNode_TransitionResult_17492D8A40BCF15D45B4CD843DFE554F();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Leloi_AnimGraphNode_TransitionResult_5719A689403FFD937F3AA29516A179D2();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Leloi_AnimGraphNode_TransitionResult_688C9C0C4B8C1E7AE0EB9C9450A6C65F();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Leloi_AnimGraphNode_TransitionResult_6C2189764DF0D3742242AFA476BD8782();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Leloi_AnimGraphNode_TransitionResult_6F82794A4FDFD64CD0A0E5B8D73F2EDC();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Leloi_AnimGraphNode_TransitionResult_740037994DAC0EEA2AEBF1951FEDA8A4();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Leloi_AnimGraphNode_TransitionResult_9698EED34FD698ED4F55599AF8D52525();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Leloi_AnimGraphNode_TransitionResult_ECC8FE1B441F2C95CCD70CBD609BEB85();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Leloi_AnimGraphNode_TransitionResult_FA8BD9EB424E02E58C719A98A070B9FD();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Leloi_AnimGraphNode_TransitionResult_FC96183D41FCB1419A36BB8CC6DCC00A();
	void ExecuteUbergraph_ABP_Leloi(int32 EntryPoint);
	class UCharacterMovementComponent* GetMovementComponent();
	void GetPlayerRef();
	void SetBarkingAlpha(double Barking);
	void SetBehaviourState(E_LeloiStates BehaviourState);
	void SetBeingPet(bool bBeingPet_0);
	void SetBreathingAlpha(double Breathing);
	void SetIdleState(ELeloiIdleStates IdleState);
	void SetInteractablePlayer(class ABP_MovementCharacter_C* PlayerRef_0);
	void SetPlayerInView(bool InView);
	void SetRandomBlinkInterval();
	void SetSitting(bool Sitting_0);
	void SetState(ELeloiStates State_0);
	void Update_Pawn_Info();
	void UpdatePlayerStateData();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"ABP_Leloi_C">();
	}
	static class UABP_Leloi_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UABP_Leloi_C>();
	}
};
static_assert(alignof(UABP_Leloi_C) == 0x000010, "Wrong alignment on UABP_Leloi_C");
static_assert(sizeof(UABP_Leloi_C) == 0x002C80, "Wrong size on UABP_Leloi_C");
static_assert(offsetof(UABP_Leloi_C, UberGraphFrame) == 0x000370, "Member 'UABP_Leloi_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UABP_Leloi_C, __AnimBlueprintMutables) == 0x000378, "Member 'UABP_Leloi_C::__AnimBlueprintMutables' has a wrong offset!");
static_assert(offsetof(UABP_Leloi_C, AnimBlueprintExtension_PropertyAccess) == 0x000388, "Member 'UABP_Leloi_C::AnimBlueprintExtension_PropertyAccess' has a wrong offset!");
static_assert(offsetof(UABP_Leloi_C, AnimBlueprintExtension_Base) == 0x000390, "Member 'UABP_Leloi_C::AnimBlueprintExtension_Base' has a wrong offset!");
static_assert(offsetof(UABP_Leloi_C, AnimGraphNode_Root_1) == 0x000398, "Member 'UABP_Leloi_C::AnimGraphNode_Root_1' has a wrong offset!");
static_assert(offsetof(UABP_Leloi_C, AnimGraphNode_TransitionResult_25) == 0x0003B8, "Member 'UABP_Leloi_C::AnimGraphNode_TransitionResult_25' has a wrong offset!");
static_assert(offsetof(UABP_Leloi_C, AnimGraphNode_TransitionResult_24) == 0x0003E0, "Member 'UABP_Leloi_C::AnimGraphNode_TransitionResult_24' has a wrong offset!");
static_assert(offsetof(UABP_Leloi_C, AnimGraphNode_TransitionResult_23) == 0x000408, "Member 'UABP_Leloi_C::AnimGraphNode_TransitionResult_23' has a wrong offset!");
static_assert(offsetof(UABP_Leloi_C, AnimGraphNode_TransitionResult_22) == 0x000430, "Member 'UABP_Leloi_C::AnimGraphNode_TransitionResult_22' has a wrong offset!");
static_assert(offsetof(UABP_Leloi_C, AnimGraphNode_TransitionResult_21) == 0x000458, "Member 'UABP_Leloi_C::AnimGraphNode_TransitionResult_21' has a wrong offset!");
static_assert(offsetof(UABP_Leloi_C, AnimGraphNode_TransitionResult_20) == 0x000480, "Member 'UABP_Leloi_C::AnimGraphNode_TransitionResult_20' has a wrong offset!");
static_assert(offsetof(UABP_Leloi_C, AnimGraphNode_TransitionResult_19) == 0x0004A8, "Member 'UABP_Leloi_C::AnimGraphNode_TransitionResult_19' has a wrong offset!");
static_assert(offsetof(UABP_Leloi_C, AnimGraphNode_TransitionResult_18) == 0x0004D0, "Member 'UABP_Leloi_C::AnimGraphNode_TransitionResult_18' has a wrong offset!");
static_assert(offsetof(UABP_Leloi_C, AnimGraphNode_TransitionResult_17) == 0x0004F8, "Member 'UABP_Leloi_C::AnimGraphNode_TransitionResult_17' has a wrong offset!");
static_assert(offsetof(UABP_Leloi_C, AnimGraphNode_TransitionResult_16) == 0x000520, "Member 'UABP_Leloi_C::AnimGraphNode_TransitionResult_16' has a wrong offset!");
static_assert(offsetof(UABP_Leloi_C, AnimGraphNode_TransitionResult_15) == 0x000548, "Member 'UABP_Leloi_C::AnimGraphNode_TransitionResult_15' has a wrong offset!");
static_assert(offsetof(UABP_Leloi_C, AnimGraphNode_TransitionResult_14) == 0x000570, "Member 'UABP_Leloi_C::AnimGraphNode_TransitionResult_14' has a wrong offset!");
static_assert(offsetof(UABP_Leloi_C, AnimGraphNode_SequencePlayer_11) == 0x000598, "Member 'UABP_Leloi_C::AnimGraphNode_SequencePlayer_11' has a wrong offset!");
static_assert(offsetof(UABP_Leloi_C, AnimGraphNode_StateResult_11) == 0x0005E0, "Member 'UABP_Leloi_C::AnimGraphNode_StateResult_11' has a wrong offset!");
static_assert(offsetof(UABP_Leloi_C, AnimGraphNode_SequencePlayer_10) == 0x000600, "Member 'UABP_Leloi_C::AnimGraphNode_SequencePlayer_10' has a wrong offset!");
static_assert(offsetof(UABP_Leloi_C, AnimGraphNode_StateResult_10) == 0x000648, "Member 'UABP_Leloi_C::AnimGraphNode_StateResult_10' has a wrong offset!");
static_assert(offsetof(UABP_Leloi_C, AnimGraphNode_BlendSpacePlayer) == 0x000668, "Member 'UABP_Leloi_C::AnimGraphNode_BlendSpacePlayer' has a wrong offset!");
static_assert(offsetof(UABP_Leloi_C, AnimGraphNode_StateResult_9) == 0x0006D8, "Member 'UABP_Leloi_C::AnimGraphNode_StateResult_9' has a wrong offset!");
static_assert(offsetof(UABP_Leloi_C, AnimGraphNode_SequencePlayer_9) == 0x0006F8, "Member 'UABP_Leloi_C::AnimGraphNode_SequencePlayer_9' has a wrong offset!");
static_assert(offsetof(UABP_Leloi_C, AnimGraphNode_StateResult_8) == 0x000740, "Member 'UABP_Leloi_C::AnimGraphNode_StateResult_8' has a wrong offset!");
static_assert(offsetof(UABP_Leloi_C, AnimGraphNode_RandomPlayer) == 0x000760, "Member 'UABP_Leloi_C::AnimGraphNode_RandomPlayer' has a wrong offset!");
static_assert(offsetof(UABP_Leloi_C, AnimGraphNode_StateResult_7) == 0x0007D8, "Member 'UABP_Leloi_C::AnimGraphNode_StateResult_7' has a wrong offset!");
static_assert(offsetof(UABP_Leloi_C, AnimGraphNode_SequencePlayer_8) == 0x0007F8, "Member 'UABP_Leloi_C::AnimGraphNode_SequencePlayer_8' has a wrong offset!");
static_assert(offsetof(UABP_Leloi_C, AnimGraphNode_StateResult_6) == 0x000840, "Member 'UABP_Leloi_C::AnimGraphNode_StateResult_6' has a wrong offset!");
static_assert(offsetof(UABP_Leloi_C, AnimGraphNode_SequencePlayer_7) == 0x000860, "Member 'UABP_Leloi_C::AnimGraphNode_SequencePlayer_7' has a wrong offset!");
static_assert(offsetof(UABP_Leloi_C, AnimGraphNode_StateResult_5) == 0x0008A8, "Member 'UABP_Leloi_C::AnimGraphNode_StateResult_5' has a wrong offset!");
static_assert(offsetof(UABP_Leloi_C, AnimGraphNode_StateMachine_1) == 0x0008C8, "Member 'UABP_Leloi_C::AnimGraphNode_StateMachine_1' has a wrong offset!");
static_assert(offsetof(UABP_Leloi_C, AnimGraphNode_Inertialization) == 0x000990, "Member 'UABP_Leloi_C::AnimGraphNode_Inertialization' has a wrong offset!");
static_assert(offsetof(UABP_Leloi_C, AnimGraphNode_SaveCachedPose_4) == 0x000DD0, "Member 'UABP_Leloi_C::AnimGraphNode_SaveCachedPose_4' has a wrong offset!");
static_assert(offsetof(UABP_Leloi_C, AnimGraphNode_TransitionResult_13) == 0x000E50, "Member 'UABP_Leloi_C::AnimGraphNode_TransitionResult_13' has a wrong offset!");
static_assert(offsetof(UABP_Leloi_C, AnimGraphNode_TransitionResult_12) == 0x000E78, "Member 'UABP_Leloi_C::AnimGraphNode_TransitionResult_12' has a wrong offset!");
static_assert(offsetof(UABP_Leloi_C, AnimGraphNode_TransitionResult_11) == 0x000EA0, "Member 'UABP_Leloi_C::AnimGraphNode_TransitionResult_11' has a wrong offset!");
static_assert(offsetof(UABP_Leloi_C, AnimGraphNode_TransitionResult_10) == 0x000EC8, "Member 'UABP_Leloi_C::AnimGraphNode_TransitionResult_10' has a wrong offset!");
static_assert(offsetof(UABP_Leloi_C, AnimGraphNode_TransitionResult_9) == 0x000EF0, "Member 'UABP_Leloi_C::AnimGraphNode_TransitionResult_9' has a wrong offset!");
static_assert(offsetof(UABP_Leloi_C, AnimGraphNode_TransitionResult_8) == 0x000F18, "Member 'UABP_Leloi_C::AnimGraphNode_TransitionResult_8' has a wrong offset!");
static_assert(offsetof(UABP_Leloi_C, AnimGraphNode_TransitionResult_7) == 0x000F40, "Member 'UABP_Leloi_C::AnimGraphNode_TransitionResult_7' has a wrong offset!");
static_assert(offsetof(UABP_Leloi_C, AnimGraphNode_TransitionResult_6) == 0x000F68, "Member 'UABP_Leloi_C::AnimGraphNode_TransitionResult_6' has a wrong offset!");
static_assert(offsetof(UABP_Leloi_C, AnimGraphNode_TransitionResult_5) == 0x000F90, "Member 'UABP_Leloi_C::AnimGraphNode_TransitionResult_5' has a wrong offset!");
static_assert(offsetof(UABP_Leloi_C, AnimGraphNode_TransitionResult_4) == 0x000FB8, "Member 'UABP_Leloi_C::AnimGraphNode_TransitionResult_4' has a wrong offset!");
static_assert(offsetof(UABP_Leloi_C, AnimGraphNode_TransitionResult_3) == 0x000FE0, "Member 'UABP_Leloi_C::AnimGraphNode_TransitionResult_3' has a wrong offset!");
static_assert(offsetof(UABP_Leloi_C, AnimGraphNode_TransitionResult_2) == 0x001008, "Member 'UABP_Leloi_C::AnimGraphNode_TransitionResult_2' has a wrong offset!");
static_assert(offsetof(UABP_Leloi_C, AnimGraphNode_ApplyAdditive_1) == 0x001030, "Member 'UABP_Leloi_C::AnimGraphNode_ApplyAdditive_1' has a wrong offset!");
static_assert(offsetof(UABP_Leloi_C, AnimGraphNode_UseCachedPose_9) == 0x0010F8, "Member 'UABP_Leloi_C::AnimGraphNode_UseCachedPose_9' has a wrong offset!");
static_assert(offsetof(UABP_Leloi_C, AnimGraphNode_SequencePlayer_6) == 0x001120, "Member 'UABP_Leloi_C::AnimGraphNode_SequencePlayer_6' has a wrong offset!");
static_assert(offsetof(UABP_Leloi_C, AnimGraphNode_StateResult_4) == 0x001168, "Member 'UABP_Leloi_C::AnimGraphNode_StateResult_4' has a wrong offset!");
static_assert(offsetof(UABP_Leloi_C, AnimGraphNode_SequencePlayer_5) == 0x001188, "Member 'UABP_Leloi_C::AnimGraphNode_SequencePlayer_5' has a wrong offset!");
static_assert(offsetof(UABP_Leloi_C, AnimGraphNode_StateResult_3) == 0x0011D0, "Member 'UABP_Leloi_C::AnimGraphNode_StateResult_3' has a wrong offset!");
static_assert(offsetof(UABP_Leloi_C, AnimGraphNode_TransitionResult_1) == 0x0011F0, "Member 'UABP_Leloi_C::AnimGraphNode_TransitionResult_1' has a wrong offset!");
static_assert(offsetof(UABP_Leloi_C, AnimGraphNode_TransitionResult) == 0x001218, "Member 'UABP_Leloi_C::AnimGraphNode_TransitionResult' has a wrong offset!");
static_assert(offsetof(UABP_Leloi_C, AnimGraphNode_SequencePlayer_4) == 0x001240, "Member 'UABP_Leloi_C::AnimGraphNode_SequencePlayer_4' has a wrong offset!");
static_assert(offsetof(UABP_Leloi_C, AnimGraphNode_StateResult_2) == 0x001288, "Member 'UABP_Leloi_C::AnimGraphNode_StateResult_2' has a wrong offset!");
static_assert(offsetof(UABP_Leloi_C, AnimGraphNode_SequencePlayer_3) == 0x0012A8, "Member 'UABP_Leloi_C::AnimGraphNode_SequencePlayer_3' has a wrong offset!");
static_assert(offsetof(UABP_Leloi_C, AnimGraphNode_StateResult_1) == 0x0012F0, "Member 'UABP_Leloi_C::AnimGraphNode_StateResult_1' has a wrong offset!");
static_assert(offsetof(UABP_Leloi_C, AnimGraphNode_UseCachedPose_8) == 0x001310, "Member 'UABP_Leloi_C::AnimGraphNode_UseCachedPose_8' has a wrong offset!");
static_assert(offsetof(UABP_Leloi_C, AnimGraphNode_StateResult) == 0x001338, "Member 'UABP_Leloi_C::AnimGraphNode_StateResult' has a wrong offset!");
static_assert(offsetof(UABP_Leloi_C, AnimGraphNode_StateMachine) == 0x001358, "Member 'UABP_Leloi_C::AnimGraphNode_StateMachine' has a wrong offset!");
static_assert(offsetof(UABP_Leloi_C, AnimGraphNode_SaveCachedPose_3) == 0x001420, "Member 'UABP_Leloi_C::AnimGraphNode_SaveCachedPose_3' has a wrong offset!");
static_assert(offsetof(UABP_Leloi_C, AnimGraphNode_UseCachedPose_7) == 0x0014A0, "Member 'UABP_Leloi_C::AnimGraphNode_UseCachedPose_7' has a wrong offset!");
static_assert(offsetof(UABP_Leloi_C, AnimGraphNode_Root) == 0x0014C8, "Member 'UABP_Leloi_C::AnimGraphNode_Root' has a wrong offset!");
static_assert(offsetof(UABP_Leloi_C, AnimGraphNode_LayeredBoneBlend_3) == 0x0014E8, "Member 'UABP_Leloi_C::AnimGraphNode_LayeredBoneBlend_3' has a wrong offset!");
static_assert(offsetof(UABP_Leloi_C, AnimGraphNode_SequencePlayer_2) == 0x0015D8, "Member 'UABP_Leloi_C::AnimGraphNode_SequencePlayer_2' has a wrong offset!");
static_assert(offsetof(UABP_Leloi_C, AnimGraphNode_LayeredBoneBlend_2) == 0x001620, "Member 'UABP_Leloi_C::AnimGraphNode_LayeredBoneBlend_2' has a wrong offset!");
static_assert(offsetof(UABP_Leloi_C, AnimGraphNode_SequencePlayer_1) == 0x001710, "Member 'UABP_Leloi_C::AnimGraphNode_SequencePlayer_1' has a wrong offset!");
static_assert(offsetof(UABP_Leloi_C, AnimGraphNode_LookAt_2) == 0x001760, "Member 'UABP_Leloi_C::AnimGraphNode_LookAt_2' has a wrong offset!");
static_assert(offsetof(UABP_Leloi_C, AnimGraphNode_LocalToComponentSpace_2) == 0x0019B0, "Member 'UABP_Leloi_C::AnimGraphNode_LocalToComponentSpace_2' has a wrong offset!");
static_assert(offsetof(UABP_Leloi_C, AnimGraphNode_LayeredBoneBlend_1) == 0x0019D0, "Member 'UABP_Leloi_C::AnimGraphNode_LayeredBoneBlend_1' has a wrong offset!");
static_assert(offsetof(UABP_Leloi_C, AnimGraphNode_SequencePlayer) == 0x001AC0, "Member 'UABP_Leloi_C::AnimGraphNode_SequencePlayer' has a wrong offset!");
static_assert(offsetof(UABP_Leloi_C, AnimGraphNode_LinkedAnimLayer) == 0x001B08, "Member 'UABP_Leloi_C::AnimGraphNode_LinkedAnimLayer' has a wrong offset!");
static_assert(offsetof(UABP_Leloi_C, AnimGraphNode_ControlRig) == 0x001BD0, "Member 'UABP_Leloi_C::AnimGraphNode_ControlRig' has a wrong offset!");
static_assert(offsetof(UABP_Leloi_C, AnimGraphNode_Slot_1) == 0x0020A0, "Member 'UABP_Leloi_C::AnimGraphNode_Slot_1' has a wrong offset!");
static_assert(offsetof(UABP_Leloi_C, AnimGraphNode_BlendListByBool) == 0x0020E8, "Member 'UABP_Leloi_C::AnimGraphNode_BlendListByBool' has a wrong offset!");
static_assert(offsetof(UABP_Leloi_C, AnimGraphNode_SaveCachedPose_2) == 0x002130, "Member 'UABP_Leloi_C::AnimGraphNode_SaveCachedPose_2' has a wrong offset!");
static_assert(offsetof(UABP_Leloi_C, AnimGraphNode_UseCachedPose_6) == 0x0021B0, "Member 'UABP_Leloi_C::AnimGraphNode_UseCachedPose_6' has a wrong offset!");
static_assert(offsetof(UABP_Leloi_C, AnimGraphNode_UseCachedPose_5) == 0x0021D8, "Member 'UABP_Leloi_C::AnimGraphNode_UseCachedPose_5' has a wrong offset!");
static_assert(offsetof(UABP_Leloi_C, AnimGraphNode_LayeredBoneBlend) == 0x002200, "Member 'UABP_Leloi_C::AnimGraphNode_LayeredBoneBlend' has a wrong offset!");
static_assert(offsetof(UABP_Leloi_C, AnimGraphNode_SaveCachedPose_1) == 0x0022F0, "Member 'UABP_Leloi_C::AnimGraphNode_SaveCachedPose_1' has a wrong offset!");
static_assert(offsetof(UABP_Leloi_C, AnimGraphNode_UseCachedPose_4) == 0x002370, "Member 'UABP_Leloi_C::AnimGraphNode_UseCachedPose_4' has a wrong offset!");
static_assert(offsetof(UABP_Leloi_C, AnimGraphNode_Slot) == 0x002398, "Member 'UABP_Leloi_C::AnimGraphNode_Slot' has a wrong offset!");
static_assert(offsetof(UABP_Leloi_C, AnimGraphNode_ApplyAdditive) == 0x0023E0, "Member 'UABP_Leloi_C::AnimGraphNode_ApplyAdditive' has a wrong offset!");
static_assert(offsetof(UABP_Leloi_C, AnimGraphNode_UseCachedPose_3) == 0x0024A8, "Member 'UABP_Leloi_C::AnimGraphNode_UseCachedPose_3' has a wrong offset!");
static_assert(offsetof(UABP_Leloi_C, AnimGraphNode_SaveCachedPose) == 0x0024D0, "Member 'UABP_Leloi_C::AnimGraphNode_SaveCachedPose' has a wrong offset!");
static_assert(offsetof(UABP_Leloi_C, AnimGraphNode_UseCachedPose_2) == 0x002550, "Member 'UABP_Leloi_C::AnimGraphNode_UseCachedPose_2' has a wrong offset!");
static_assert(offsetof(UABP_Leloi_C, AnimGraphNode_LookAt_1) == 0x002580, "Member 'UABP_Leloi_C::AnimGraphNode_LookAt_1' has a wrong offset!");
static_assert(offsetof(UABP_Leloi_C, AnimGraphNode_UseCachedPose_1) == 0x0027D0, "Member 'UABP_Leloi_C::AnimGraphNode_UseCachedPose_1' has a wrong offset!");
static_assert(offsetof(UABP_Leloi_C, AnimGraphNode_LocalToComponentSpace_1) == 0x0027F8, "Member 'UABP_Leloi_C::AnimGraphNode_LocalToComponentSpace_1' has a wrong offset!");
static_assert(offsetof(UABP_Leloi_C, AnimGraphNode_BlendListByInt) == 0x002818, "Member 'UABP_Leloi_C::AnimGraphNode_BlendListByInt' has a wrong offset!");
static_assert(offsetof(UABP_Leloi_C, AnimGraphNode_ComponentToLocalSpace_2) == 0x002860, "Member 'UABP_Leloi_C::AnimGraphNode_ComponentToLocalSpace_2' has a wrong offset!");
static_assert(offsetof(UABP_Leloi_C, AnimGraphNode_ComponentToLocalSpace_1) == 0x002880, "Member 'UABP_Leloi_C::AnimGraphNode_ComponentToLocalSpace_1' has a wrong offset!");
static_assert(offsetof(UABP_Leloi_C, AnimGraphNode_LookAt) == 0x0028A0, "Member 'UABP_Leloi_C::AnimGraphNode_LookAt' has a wrong offset!");
static_assert(offsetof(UABP_Leloi_C, AnimGraphNode_UseCachedPose) == 0x002AF0, "Member 'UABP_Leloi_C::AnimGraphNode_UseCachedPose' has a wrong offset!");
static_assert(offsetof(UABP_Leloi_C, AnimGraphNode_LocalToComponentSpace) == 0x002B18, "Member 'UABP_Leloi_C::AnimGraphNode_LocalToComponentSpace' has a wrong offset!");
static_assert(offsetof(UABP_Leloi_C, AnimGraphNode_ComponentToLocalSpace) == 0x002B38, "Member 'UABP_Leloi_C::AnimGraphNode_ComponentToLocalSpace' has a wrong offset!");
static_assert(offsetof(UABP_Leloi_C, K2Node_PropertyAccess_4) == 0x002B58, "Member 'UABP_Leloi_C::K2Node_PropertyAccess_4' has a wrong offset!");
static_assert(offsetof(UABP_Leloi_C, K2Node_PropertyAccess_3) == 0x002B60, "Member 'UABP_Leloi_C::K2Node_PropertyAccess_3' has a wrong offset!");
static_assert(offsetof(UABP_Leloi_C, K2Node_PropertyAccess_2) == 0x002B78, "Member 'UABP_Leloi_C::K2Node_PropertyAccess_2' has a wrong offset!");
static_assert(offsetof(UABP_Leloi_C, K2Node_PropertyAccess_1) == 0x002B79, "Member 'UABP_Leloi_C::K2Node_PropertyAccess_1' has a wrong offset!");
static_assert(offsetof(UABP_Leloi_C, K2Node_PropertyAccess) == 0x002B80, "Member 'UABP_Leloi_C::K2Node_PropertyAccess' has a wrong offset!");
static_assert(offsetof(UABP_Leloi_C, __CustomProperty_LeanAmount_20D58FD4425BA8E884C1BD9B9C5833F3) == 0x002B98, "Member 'UABP_Leloi_C::__CustomProperty_LeanAmount_20D58FD4425BA8E884C1BD9B9C5833F3' has a wrong offset!");
static_assert(offsetof(UABP_Leloi_C, LookAtPos) == 0x002BA0, "Member 'UABP_Leloi_C::LookAtPos' has a wrong offset!");
static_assert(offsetof(UABP_Leloi_C, LookAtAlpha) == 0x002BB8, "Member 'UABP_Leloi_C::LookAtAlpha' has a wrong offset!");
static_assert(offsetof(UABP_Leloi_C, BlinkAlpha) == 0x002BC0, "Member 'UABP_Leloi_C::BlinkAlpha' has a wrong offset!");
static_assert(offsetof(UABP_Leloi_C, Sitting) == 0x002BC4, "Member 'UABP_Leloi_C::Sitting' has a wrong offset!");
static_assert(offsetof(UABP_Leloi_C, Delta_Time_X) == 0x002BC8, "Member 'UABP_Leloi_C::Delta_Time_X' has a wrong offset!");
static_assert(offsetof(UABP_Leloi_C, In_View) == 0x002BCC, "Member 'UABP_Leloi_C::In_View' has a wrong offset!");
static_assert(offsetof(UABP_Leloi_C, BreathingAlpha) == 0x002BD0, "Member 'UABP_Leloi_C::BreathingAlpha' has a wrong offset!");
static_assert(offsetof(UABP_Leloi_C, BarkingAlpha) == 0x002BD4, "Member 'UABP_Leloi_C::BarkingAlpha' has a wrong offset!");
static_assert(offsetof(UABP_Leloi_C, PlayerRef) == 0x002BD8, "Member 'UABP_Leloi_C::PlayerRef' has a wrong offset!");
static_assert(offsetof(UABP_Leloi_C, State) == 0x002BE0, "Member 'UABP_Leloi_C::State' has a wrong offset!");
static_assert(offsetof(UABP_Leloi_C, Idle_State) == 0x002BE1, "Member 'UABP_Leloi_C::Idle_State' has a wrong offset!");
static_assert(offsetof(UABP_Leloi_C, As_BP_Guard_Dog) == 0x002BE8, "Member 'UABP_Leloi_C::As_BP_Guard_Dog' has a wrong offset!");
static_assert(offsetof(UABP_Leloi_C, Speed) == 0x002BF0, "Member 'UABP_Leloi_C::Speed' has a wrong offset!");
static_assert(offsetof(UABP_Leloi_C, PreviousRotation) == 0x002BF8, "Member 'UABP_Leloi_C::PreviousRotation' has a wrong offset!");
static_assert(offsetof(UABP_Leloi_C, CurrentRotation) == 0x002C10, "Member 'UABP_Leloi_C::CurrentRotation' has a wrong offset!");
static_assert(offsetof(UABP_Leloi_C, LeanAmount) == 0x002C28, "Member 'UABP_Leloi_C::LeanAmount' has a wrong offset!");
static_assert(offsetof(UABP_Leloi_C, As_BP_Leloi) == 0x002C30, "Member 'UABP_Leloi_C::As_BP_Leloi' has a wrong offset!");
static_assert(offsetof(UABP_Leloi_C, BehaviourStates) == 0x002C38, "Member 'UABP_Leloi_C::BehaviourStates' has a wrong offset!");
static_assert(offsetof(UABP_Leloi_C, bIsJumping) == 0x002C39, "Member 'UABP_Leloi_C::bIsJumping' has a wrong offset!");
static_assert(offsetof(UABP_Leloi_C, bIsFalling) == 0x002C3A, "Member 'UABP_Leloi_C::bIsFalling' has a wrong offset!");
static_assert(offsetof(UABP_Leloi_C, WorldVelocity) == 0x002C40, "Member 'UABP_Leloi_C::WorldVelocity' has a wrong offset!");
static_assert(offsetof(UABP_Leloi_C, bInAir) == 0x002C58, "Member 'UABP_Leloi_C::bInAir' has a wrong offset!");
static_assert(offsetof(UABP_Leloi_C, bMoving) == 0x002C59, "Member 'UABP_Leloi_C::bMoving' has a wrong offset!");
static_assert(offsetof(UABP_Leloi_C, ActiveSitIdle) == 0x002C5C, "Member 'UABP_Leloi_C::ActiveSitIdle' has a wrong offset!");
static_assert(offsetof(UABP_Leloi_C, ControlRig_Alpha) == 0x002C60, "Member 'UABP_Leloi_C::ControlRig_Alpha' has a wrong offset!");
static_assert(offsetof(UABP_Leloi_C, PetIndex) == 0x002C64, "Member 'UABP_Leloi_C::PetIndex' has a wrong offset!");
static_assert(offsetof(UABP_Leloi_C, bBeingPet) == 0x002C68, "Member 'UABP_Leloi_C::bBeingPet' has a wrong offset!");
static_assert(offsetof(UABP_Leloi_C, InteractablePlayerRef) == 0x002C70, "Member 'UABP_Leloi_C::InteractablePlayerRef' has a wrong offset!");

}

